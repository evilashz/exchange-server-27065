using System;

namespace Microsoft.Exchange.Transport.Agent.Malware
{
	// Token: 0x02000010 RID: 16
	internal class Constants
	{
		// Token: 0x04000015 RID: 21
		public const string AgentMessageTrackingIdentifier = "AMA";

		// Token: 0x04000016 RID: 22
		public const string AgentMessageTrackingOverallVerdictIdentifier = "SUM";

		// Token: 0x04000017 RID: 23
		public const string AgentMessageTrackingEngineVerdictIdentifier = "EV";

		// Token: 0x04000018 RID: 24
		public const string AgentMessageTrackingFingerPrintVerdictIdentifier = "FP";

		// Token: 0x04000019 RID: 25
		public const string AgentInfoEventTopic = "OnSubmittedMessage";

		// Token: 0x0400001A RID: 26
		public const string MalwareDeletionTextFileName = "Malware Alert Text.txt";

		// Token: 0x0400001B RID: 27
		public const string TenantInfoHeaderName = "X-MS-Exchange-Organization-Attributed-Tenant-ID";

		// Token: 0x0400001C RID: 28
		public const string DomainInfoHeaderName = "X-MS-Exchange-Organization-Attributed-Domain-ID";

		// Token: 0x0400001D RID: 29
		public const string DeferredTrackingHeaderName = "X-MS-Exchange-Organization-Deferred-Tracking";

		// Token: 0x0400001E RID: 30
		public const string MalwareAgentBaseKey = "SOFTWARE\\Microsoft\\ExchangeServer\\v15\\HubTransportRole\\MalwareAgent";

		// Token: 0x0400001F RID: 31
		public const string MalwareTestOverrideKey = "SOFTWARE\\Microsoft\\ExchangeServer\\v15\\HubTransportRole\\MalwareAgent\\MalwareTestHooks";

		// Token: 0x04000020 RID: 32
		public const string DirectoryStorageBaseKey = "SOFTWARE\\Microsoft\\ExchangeServer\\v15\\Setup";

		// Token: 0x04000021 RID: 33
		public const string Xsender = "X-Sender: {0}";

		// Token: 0x04000022 RID: 34
		public const string Xreceiver = "X-Receiver: {0}";

		// Token: 0x04000023 RID: 35
		public const string EnvelopeID = " ENVID={0}";

		// Token: 0x04000024 RID: 36
		public const string EnvelopeRecipient = "RECIPIENTS_CN=";

		// Token: 0x04000025 RID: 37
		public const string Notify = " NOTIFY=";

		// Token: 0x04000026 RID: 38
		public const string OriginalRecipient = " ORCPT={0}";

		// Token: 0x04000027 RID: 39
		public const string ReturnHeaders = " RET=HDRS";

		// Token: 0x04000028 RID: 40
		public const string ReturnFull = " RET=FULL";

		// Token: 0x04000029 RID: 41
		internal const string XMSExchangeOrganizationId = "X-MS-Exchange-Organization-Id";

		// Token: 0x0400002A RID: 42
		internal const string XMSExchangeOrganizationConnectorInfo = "X-MS-Exchange-Organization-ConnectorInfo";

		// Token: 0x0400002B RID: 43
		internal const string XMSExchangeOrganizationHygineConfigurationID = "X-MS-Exchange-Organization-HygieneConfigurationID";

		// Token: 0x0400002C RID: 44
		internal const string AcceptLanguage = "Accept-Language";

		// Token: 0x0400002D RID: 45
		internal const string ContentLanguage = "Content-Language";

		// Token: 0x0400002E RID: 46
		internal const string MessageBody = "Message Body";

		// Token: 0x0400002F RID: 47
		internal const string ExMessageIdFormat = "ExMessageId = {0}";

		// Token: 0x04000030 RID: 48
		internal const string MessageIdFormat = "MessageId = {0}";

		// Token: 0x04000031 RID: 49
		internal const int MinRequiredScanEngines = 2;

		// Token: 0x04000032 RID: 50
		internal const double WaitTimeoutRatio = 1.3;

		// Token: 0x04000033 RID: 51
		internal const string MalwareFilterVersioned = "MalwareFilterVersioned";

		// Token: 0x04000034 RID: 52
		internal const long MaxFilterRuleCacheSize = 31457280L;

		// Token: 0x04000035 RID: 53
		internal const long MaxMalwareFilterPolicyCacheSize = 31457280L;

		// Token: 0x04000036 RID: 54
		internal const long MalwareFilterPolicyCacheExpiryInterval = 15L;

		// Token: 0x04000037 RID: 55
		internal const long MalwareFilterPolicyCacheCleanupInterval = 135L;

		// Token: 0x04000038 RID: 56
		internal static readonly double MinutesPerDay = TimeSpan.FromDays(1.0).TotalMinutes;

		// Token: 0x04000039 RID: 57
		internal static readonly double SecondsPerDay = TimeSpan.FromDays(1.0).TotalSeconds;

		// Token: 0x0400003A RID: 58
		internal static readonly double MinutesinHour = TimeSpan.FromHours(1.0).TotalMinutes;

		// Token: 0x0400003B RID: 59
		internal static readonly TimeSpan DefaultOverrideWaitTime = TimeSpan.FromHours(1.0);

		// Token: 0x02000011 RID: 17
		public class Errors
		{
			// Token: 0x0400003C RID: 60
			public const string CategoryError = "Category Error: All engines failed to scan the message.";

			// Token: 0x0400003D RID: 61
			public const string Timeout = "Timeout: The message timed out repeatedly.";

			// Token: 0x0400003E RID: 62
			public const string SubmissionError = "Submission Error: Failed to submit the message for scanning.";

			// Token: 0x0400003F RID: 63
			public const string PolicyViolationError = "Error: Failed to scan the message, due to policy violation.";
		}
	}
}
