using System;
using System.IO;
using System.Text;

namespace Microsoft.Exchange.Transport.Agent.Malware.SoftDelete
{
	// Token: 0x02000035 RID: 53
	internal class StoreMessage
	{
		// Token: 0x06000134 RID: 308 RVA: 0x00009A6A File Offset: 0x00007C6A
		private StoreMessage()
		{
		}

		// Token: 0x17000047 RID: 71
		// (get) Token: 0x06000135 RID: 309 RVA: 0x00009A72 File Offset: 0x00007C72
		// (set) Token: 0x06000136 RID: 310 RVA: 0x00009A7A File Offset: 0x00007C7A
		public string MessageId { get; set; }

		// Token: 0x17000048 RID: 72
		// (get) Token: 0x06000137 RID: 311 RVA: 0x00009A83 File Offset: 0x00007C83
		// (set) Token: 0x06000138 RID: 312 RVA: 0x00009A8B File Offset: 0x00007C8B
		public Stream MimeStream { get; set; }

		// Token: 0x17000049 RID: 73
		// (get) Token: 0x06000139 RID: 313 RVA: 0x00009A94 File Offset: 0x00007C94
		// (set) Token: 0x0600013A RID: 314 RVA: 0x00009A9C File Offset: 0x00007C9C
		public string XSender { get; set; }

		// Token: 0x1700004A RID: 74
		// (get) Token: 0x0600013B RID: 315 RVA: 0x00009AA5 File Offset: 0x00007CA5
		// (set) Token: 0x0600013C RID: 316 RVA: 0x00009AAD File Offset: 0x00007CAD
		public string XRecipients { get; set; }

		// Token: 0x1700004B RID: 75
		// (get) Token: 0x0600013D RID: 317 RVA: 0x00009AB6 File Offset: 0x00007CB6
		// (set) Token: 0x0600013E RID: 318 RVA: 0x00009ABE File Offset: 0x00007CBE
		public string Recipients { get; set; }

		// Token: 0x1700004C RID: 76
		// (get) Token: 0x0600013F RID: 319 RVA: 0x00009AC7 File Offset: 0x00007CC7
		// (set) Token: 0x06000140 RID: 320 RVA: 0x00009ACF File Offset: 0x00007CCF
		public string FromAddress { get; set; }

		// Token: 0x06000141 RID: 321 RVA: 0x00009AD8 File Offset: 0x00007CD8
		public static StoreMessage Create()
		{
			return new StoreMessage();
		}

		// Token: 0x06000142 RID: 322 RVA: 0x00009AE0 File Offset: 0x00007CE0
		public Stream CreateReplayMimeStream()
		{
			Stream result;
			try
			{
				StringBuilder stringBuilder = new StringBuilder();
				MemoryStream memoryStream = new MemoryStream();
				this.MimeStream.Seek(0L, SeekOrigin.Begin);
				if (!string.IsNullOrEmpty(this.XRecipients))
				{
					stringBuilder.Append(this.XRecipients);
				}
				if (!string.IsNullOrEmpty(this.XSender))
				{
					stringBuilder.Append(this.XSender);
				}
				if (stringBuilder.Length > 0)
				{
					stringBuilder.Append("X-CreatedBy: MSExchange12\r\n");
					byte[] bytes = Encoding.ASCII.GetBytes(stringBuilder.ToString());
					memoryStream.Write(bytes, 0, bytes.Length);
				}
				BinaryReader binaryReader = new BinaryReader(this.MimeStream);
				byte[] array = binaryReader.ReadBytes((int)this.MimeStream.Length);
				memoryStream.Write(array, 0, array.Length);
				this.MimeStream.Seek(0L, SeekOrigin.Begin);
				memoryStream.Seek(0L, SeekOrigin.Begin);
				result = memoryStream;
			}
			catch (Exception innerException)
			{
				throw new StorageException("Replay mimestream failed to return.", innerException);
			}
			return result;
		}
	}
}
