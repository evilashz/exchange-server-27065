using System;
using System.Diagnostics;
using Microsoft.Exchange.Diagnostics;

namespace Microsoft.Exchange.Transport.Agent.Malware.Common
{
	// Token: 0x02000021 RID: 33
	public static class AntimalwareEventLogConstants
	{
		// Token: 0x040000C2 RID: 194
		public const string EventSource = "MSExchange Antimalware";

		// Token: 0x040000C3 RID: 195
		[EventLogPeriod(Period = "LogAlways")]
		public static readonly ExEventLog.EventTuple Tuple_AntimalwareAgentStarting = new ExEventLog.EventTuple(263954U, 2, EventLogEntryType.Information, ExEventLog.EventLevel.Lowest, ExEventLog.EventPeriod.LogAlways);

		// Token: 0x040000C4 RID: 196
		[EventLogPeriod(Period = "LogAlways")]
		public static readonly ExEventLog.EventTuple Tuple_AntimalwareAgentInitializationFailed = new ExEventLog.EventTuple(3221489437U, 2, EventLogEntryType.Error, ExEventLog.EventLevel.Lowest, ExEventLog.EventPeriod.LogAlways);

		// Token: 0x040000C5 RID: 197
		[EventLogPeriod(Period = "LogAlways")]
		public static readonly ExEventLog.EventTuple Tuple_AntimalwareAgentExiting = new ExEventLog.EventTuple(263964U, 2, EventLogEntryType.Information, ExEventLog.EventLevel.Lowest, ExEventLog.EventPeriod.LogAlways);

		// Token: 0x040000C6 RID: 198
		[EventLogPeriod(Period = "LogAlways")]
		public static readonly ExEventLog.EventTuple Tuple_FilteringServiceAvailable = new ExEventLog.EventTuple(263974U, 2, EventLogEntryType.Information, ExEventLog.EventLevel.High, ExEventLog.EventPeriod.LogAlways);

		// Token: 0x040000C7 RID: 199
		[EventLogPeriod(Period = "LogPeriodic")]
		public static readonly ExEventLog.EventTuple Tuple_FilteringServiceNotAvailable = new ExEventLog.EventTuple(3221489447U, 2, EventLogEntryType.Error, ExEventLog.EventLevel.Lowest, ExEventLog.EventPeriod.LogPeriodic);

		// Token: 0x040000C8 RID: 200
		[EventLogPeriod(Period = "LogAlways")]
		public static readonly ExEventLog.EventTuple Tuple_MessageBypassed = new ExEventLog.EventTuple(265945U, 3, EventLogEntryType.Information, ExEventLog.EventLevel.Expert, ExEventLog.EventPeriod.LogAlways);

		// Token: 0x040000C9 RID: 201
		[EventLogPeriod(Period = "LogAlways")]
		public static readonly ExEventLog.EventTuple Tuple_MalwareDetected = new ExEventLog.EventTuple(265954U, 3, EventLogEntryType.Information, ExEventLog.EventLevel.High, ExEventLog.EventPeriod.LogAlways);

		// Token: 0x040000CA RID: 202
		[EventLogPeriod(Period = "LogAlways")]
		public static readonly ExEventLog.EventTuple Tuple_MessageDeferred = new ExEventLog.EventTuple(265955U, 3, EventLogEntryType.Information, ExEventLog.EventLevel.Lowest, ExEventLog.EventPeriod.LogAlways);

		// Token: 0x040000CB RID: 203
		[EventLogPeriod(Period = "LogAlways")]
		public static readonly ExEventLog.EventTuple Tuple_MessageWithScanError = new ExEventLog.EventTuple(265956U, 3, EventLogEntryType.Information, ExEventLog.EventLevel.Lowest, ExEventLog.EventPeriod.LogAlways);

		// Token: 0x040000CC RID: 204
		[EventLogPeriod(Period = "LogAlways")]
		public static readonly ExEventLog.EventTuple Tuple_ScanTimedOut = new ExEventLog.EventTuple(265957U, 3, EventLogEntryType.Warning, ExEventLog.EventLevel.Lowest, ExEventLog.EventPeriod.LogAlways);

		// Token: 0x040000CD RID: 205
		[EventLogPeriod(Period = "LogAlways")]
		public static readonly ExEventLog.EventTuple Tuple_BiasNotSatisfied = new ExEventLog.EventTuple(265958U, 3, EventLogEntryType.Warning, ExEventLog.EventLevel.Lowest, ExEventLog.EventPeriod.LogAlways);

		// Token: 0x040000CE RID: 206
		[EventLogPeriod(Period = "LogAlways")]
		public static readonly ExEventLog.EventTuple Tuple_ScannerError = new ExEventLog.EventTuple(265959U, 3, EventLogEntryType.Warning, ExEventLog.EventLevel.Medium, ExEventLog.EventPeriod.LogAlways);

		// Token: 0x040000CF RID: 207
		[EventLogPeriod(Period = "LogAlways")]
		public static readonly ExEventLog.EventTuple Tuple_MessageNotSubmittedError = new ExEventLog.EventTuple(3221493416U, 4, EventLogEntryType.Error, ExEventLog.EventLevel.Lowest, ExEventLog.EventPeriod.LogAlways);

		// Token: 0x040000D0 RID: 208
		[EventLogPeriod(Period = "LogAlways")]
		public static readonly ExEventLog.EventTuple Tuple_MalwareScanningError = new ExEventLog.EventTuple(3221493417U, 4, EventLogEntryType.Error, ExEventLog.EventLevel.Lowest, ExEventLog.EventPeriod.LogAlways);

		// Token: 0x040000D1 RID: 209
		[EventLogPeriod(Period = "LogPeriodic")]
		public static readonly ExEventLog.EventTuple Tuple_PolicyDiscoveryFailed = new ExEventLog.EventTuple(3221493419U, 5, EventLogEntryType.Error, ExEventLog.EventLevel.Lowest, ExEventLog.EventPeriod.LogPeriodic);

		// Token: 0x040000D2 RID: 210
		[EventLogPeriod(Period = "LogPeriodic")]
		public static readonly ExEventLog.EventTuple Tuple_TenantConfigurationError = new ExEventLog.EventTuple(267948U, 5, EventLogEntryType.Warning, ExEventLog.EventLevel.Lowest, ExEventLog.EventPeriod.LogPeriodic);

		// Token: 0x040000D3 RID: 211
		[EventLogPeriod(Period = "LogAlways")]
		public static readonly ExEventLog.EventTuple Tuple_SMTPInvalidAddress = new ExEventLog.EventTuple(267954U, 4, EventLogEntryType.Warning, ExEventLog.EventLevel.Lowest, ExEventLog.EventPeriod.LogAlways);

		// Token: 0x040000D4 RID: 212
		[EventLogPeriod(Period = "LogAlways")]
		public static readonly ExEventLog.EventTuple Tuple_SoftdeleteStoreWriteError = new ExEventLog.EventTuple(3221490417U, 4, EventLogEntryType.Error, ExEventLog.EventLevel.Lowest, ExEventLog.EventPeriod.LogAlways);

		// Token: 0x040000D5 RID: 213
		[EventLogPeriod(Period = "LogAlways")]
		public static readonly ExEventLog.EventTuple Tuple_SoftdeleteStoreWritingSuccessfulAfterFailedAttempt = new ExEventLog.EventTuple(264946U, 3, EventLogEntryType.Information, ExEventLog.EventLevel.Lowest, ExEventLog.EventPeriod.LogAlways);

		// Token: 0x02000022 RID: 34
		private enum Category : short
		{
			// Token: 0x040000D7 RID: 215
			General = 1,
			// Token: 0x040000D8 RID: 216
			Init,
			// Token: 0x040000D9 RID: 217
			ScanResults,
			// Token: 0x040000DA RID: 218
			ScanError,
			// Token: 0x040000DB RID: 219
			PolicyError
		}

		// Token: 0x02000023 RID: 35
		internal enum Message : uint
		{
			// Token: 0x040000DD RID: 221
			AntimalwareAgentStarting = 263954U,
			// Token: 0x040000DE RID: 222
			AntimalwareAgentInitializationFailed = 3221489437U,
			// Token: 0x040000DF RID: 223
			AntimalwareAgentExiting = 263964U,
			// Token: 0x040000E0 RID: 224
			FilteringServiceAvailable = 263974U,
			// Token: 0x040000E1 RID: 225
			FilteringServiceNotAvailable = 3221489447U,
			// Token: 0x040000E2 RID: 226
			MessageBypassed = 265945U,
			// Token: 0x040000E3 RID: 227
			MalwareDetected = 265954U,
			// Token: 0x040000E4 RID: 228
			MessageDeferred,
			// Token: 0x040000E5 RID: 229
			MessageWithScanError,
			// Token: 0x040000E6 RID: 230
			ScanTimedOut,
			// Token: 0x040000E7 RID: 231
			BiasNotSatisfied,
			// Token: 0x040000E8 RID: 232
			ScannerError,
			// Token: 0x040000E9 RID: 233
			MessageNotSubmittedError = 3221493416U,
			// Token: 0x040000EA RID: 234
			MalwareScanningError,
			// Token: 0x040000EB RID: 235
			PolicyDiscoveryFailed = 3221493419U,
			// Token: 0x040000EC RID: 236
			TenantConfigurationError = 267948U,
			// Token: 0x040000ED RID: 237
			SMTPInvalidAddress = 267954U,
			// Token: 0x040000EE RID: 238
			SoftdeleteStoreWriteError = 3221490417U,
			// Token: 0x040000EF RID: 239
			SoftdeleteStoreWritingSuccessfulAfterFailedAttempt = 264946U
		}
	}
}
