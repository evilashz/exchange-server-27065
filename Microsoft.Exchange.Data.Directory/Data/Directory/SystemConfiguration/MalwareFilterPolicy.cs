using System;
using System.Collections.Generic;
using System.Management.Automation;

namespace Microsoft.Exchange.Data.Directory.SystemConfiguration
{
	// Token: 0x020004AE RID: 1198
	[ObjectScope(new ConfigScopes[]
	{
		ConfigScopes.TenantLocal,
		ConfigScopes.TenantSubTree
	})]
	[Serializable]
	public class MalwareFilterPolicy : ADConfigurationObject
	{
		// Token: 0x17001096 RID: 4246
		// (get) Token: 0x060036A9 RID: 13993 RVA: 0x000D64A3 File Offset: 0x000D46A3
		internal override ADObjectSchema Schema
		{
			get
			{
				return MalwareFilterPolicy.schema;
			}
		}

		// Token: 0x17001097 RID: 4247
		// (get) Token: 0x060036AA RID: 13994 RVA: 0x000D64AA File Offset: 0x000D46AA
		internal override ADObjectId ParentPath
		{
			get
			{
				return MalwareFilterPolicy.parentPath;
			}
		}

		// Token: 0x17001098 RID: 4248
		// (get) Token: 0x060036AB RID: 13995 RVA: 0x000D64B1 File Offset: 0x000D46B1
		internal override string MostDerivedObjectClass
		{
			get
			{
				return MalwareFilterPolicy.ldapName;
			}
		}

		// Token: 0x17001099 RID: 4249
		// (get) Token: 0x060036AC RID: 13996 RVA: 0x000D64B8 File Offset: 0x000D46B8
		internal override ExchangeObjectVersion MaximumSupportedExchangeObjectVersion
		{
			get
			{
				return ExchangeObjectVersion.Exchange2012;
			}
		}

		// Token: 0x060036AD RID: 13997 RVA: 0x000D64C0 File Offset: 0x000D46C0
		protected override void ValidateWrite(List<ValidationError> errors)
		{
			base.ValidateWrite(errors);
			if (this.CustomNotifications)
			{
				if (!this.CustomFromAddress.IsValidAddress)
				{
					errors.Add(new PropertyValidationError(DirectoryStrings.CustomFromAddressRequired, MalwareFilterPolicySchema.CustomFromAddress, this.CustomFromAddress));
				}
				if (this.EnableExternalSenderAdminNotifications && !this.ExternalSenderAdminAddress.IsValidAddress)
				{
					errors.Add(new PropertyValidationError(DirectoryStrings.ExternalSenderAdminAddressRequired, MalwareFilterPolicySchema.ExternalSenderAdminAddress, this.ExternalSenderAdminAddress));
				}
				if (this.EnableInternalSenderAdminNotifications && !this.InternalSenderAdminAddress.IsValidAddress)
				{
					errors.Add(new PropertyValidationError(DirectoryStrings.InternalSenderAdminAddressRequired, MalwareFilterPolicySchema.InternalSenderAdminAddress, this.InternalSenderAdminAddress));
				}
				if (this.EnableExternalSenderAdminNotifications || this.EnableExternalSenderNotifications)
				{
					if (string.IsNullOrEmpty(this.CustomExternalSubject))
					{
						errors.Add(new PropertyValidationError(DirectoryStrings.CustomExternalSubjectRequired, MalwareFilterPolicySchema.CustomExternalSubject, this.CustomExternalSubject));
					}
					if (string.IsNullOrEmpty(this.CustomExternalBody))
					{
						errors.Add(new PropertyValidationError(DirectoryStrings.CustomExternalBodyRequired, MalwareFilterPolicySchema.CustomExternalBody, this.CustomExternalBody));
					}
				}
				if (this.EnableInternalSenderAdminNotifications || this.EnableInternalSenderNotifications)
				{
					if (string.IsNullOrEmpty(this.CustomInternalSubject))
					{
						errors.Add(new PropertyValidationError(DirectoryStrings.CustomInternalSubjectRequired, MalwareFilterPolicySchema.CustomInternalSubject, this.CustomInternalSubject));
					}
					if (string.IsNullOrEmpty(this.CustomInternalBody))
					{
						errors.Add(new PropertyValidationError(DirectoryStrings.CustomInternalBodyRequired, MalwareFilterPolicySchema.CustomInternalBody, this.CustomInternalBody));
					}
				}
			}
			if (this.Action == MalwareFilteringAction.DeleteAttachmentAndUseCustomAlertText && string.IsNullOrEmpty(this.CustomAlertText))
			{
				errors.Add(new PropertyValidationError(DirectoryStrings.CustomAlertTextRequired, MalwareFilterPolicySchema.CustomAlertText, this.CustomAlertText));
			}
		}

		// Token: 0x1700109A RID: 4250
		// (get) Token: 0x060036AE RID: 13998 RVA: 0x000D6670 File Offset: 0x000D4870
		// (set) Token: 0x060036AF RID: 13999 RVA: 0x000D6682 File Offset: 0x000D4882
		[Parameter]
		public string CustomAlertText
		{
			get
			{
				return (string)this[MalwareFilterPolicySchema.CustomAlertText];
			}
			set
			{
				this[MalwareFilterPolicySchema.CustomAlertText] = value;
			}
		}

		// Token: 0x1700109B RID: 4251
		// (get) Token: 0x060036B0 RID: 14000 RVA: 0x000D6690 File Offset: 0x000D4890
		// (set) Token: 0x060036B1 RID: 14001 RVA: 0x000D66A2 File Offset: 0x000D48A2
		[Parameter]
		public new string AdminDisplayName
		{
			get
			{
				return (string)this[ADConfigurationObjectSchema.AdminDisplayName];
			}
			set
			{
				this[ADConfigurationObjectSchema.AdminDisplayName] = value;
			}
		}

		// Token: 0x1700109C RID: 4252
		// (get) Token: 0x060036B2 RID: 14002 RVA: 0x000D66B0 File Offset: 0x000D48B0
		// (set) Token: 0x060036B3 RID: 14003 RVA: 0x000D66C2 File Offset: 0x000D48C2
		[Parameter]
		public string CustomInternalSubject
		{
			get
			{
				return (string)this[MalwareFilterPolicySchema.CustomInternalSubject];
			}
			set
			{
				this[MalwareFilterPolicySchema.CustomInternalSubject] = value;
			}
		}

		// Token: 0x1700109D RID: 4253
		// (get) Token: 0x060036B4 RID: 14004 RVA: 0x000D66D0 File Offset: 0x000D48D0
		// (set) Token: 0x060036B5 RID: 14005 RVA: 0x000D66E2 File Offset: 0x000D48E2
		[Parameter]
		public string CustomInternalBody
		{
			get
			{
				return (string)this[MalwareFilterPolicySchema.CustomInternalBody];
			}
			set
			{
				this[MalwareFilterPolicySchema.CustomInternalBody] = value;
			}
		}

		// Token: 0x1700109E RID: 4254
		// (get) Token: 0x060036B6 RID: 14006 RVA: 0x000D66F0 File Offset: 0x000D48F0
		// (set) Token: 0x060036B7 RID: 14007 RVA: 0x000D6702 File Offset: 0x000D4902
		[Parameter]
		public string CustomExternalSubject
		{
			get
			{
				return (string)this[MalwareFilterPolicySchema.CustomExternalSubject];
			}
			set
			{
				this[MalwareFilterPolicySchema.CustomExternalSubject] = value;
			}
		}

		// Token: 0x1700109F RID: 4255
		// (get) Token: 0x060036B8 RID: 14008 RVA: 0x000D6710 File Offset: 0x000D4910
		// (set) Token: 0x060036B9 RID: 14009 RVA: 0x000D6722 File Offset: 0x000D4922
		[Parameter]
		public string CustomExternalBody
		{
			get
			{
				return (string)this[MalwareFilterPolicySchema.CustomExternalBody];
			}
			set
			{
				this[MalwareFilterPolicySchema.CustomExternalBody] = value;
			}
		}

		// Token: 0x170010A0 RID: 4256
		// (get) Token: 0x060036BA RID: 14010 RVA: 0x000D6730 File Offset: 0x000D4930
		// (set) Token: 0x060036BB RID: 14011 RVA: 0x000D6742 File Offset: 0x000D4942
		[Parameter]
		public string CustomFromName
		{
			get
			{
				return (string)this[MalwareFilterPolicySchema.CustomFromName];
			}
			set
			{
				this[MalwareFilterPolicySchema.CustomFromName] = value;
			}
		}

		// Token: 0x170010A1 RID: 4257
		// (get) Token: 0x060036BC RID: 14012 RVA: 0x000D6750 File Offset: 0x000D4950
		// (set) Token: 0x060036BD RID: 14013 RVA: 0x000D6762 File Offset: 0x000D4962
		[Parameter]
		public SmtpAddress CustomFromAddress
		{
			get
			{
				return (SmtpAddress)this[MalwareFilterPolicySchema.CustomFromAddress];
			}
			set
			{
				this[MalwareFilterPolicySchema.CustomFromAddress] = value;
			}
		}

		// Token: 0x170010A2 RID: 4258
		// (get) Token: 0x060036BE RID: 14014 RVA: 0x000D6775 File Offset: 0x000D4975
		// (set) Token: 0x060036BF RID: 14015 RVA: 0x000D6787 File Offset: 0x000D4987
		[Parameter]
		public SmtpAddress InternalSenderAdminAddress
		{
			get
			{
				return (SmtpAddress)this[MalwareFilterPolicySchema.InternalSenderAdminAddress];
			}
			set
			{
				this[MalwareFilterPolicySchema.InternalSenderAdminAddress] = value;
			}
		}

		// Token: 0x170010A3 RID: 4259
		// (get) Token: 0x060036C0 RID: 14016 RVA: 0x000D679A File Offset: 0x000D499A
		// (set) Token: 0x060036C1 RID: 14017 RVA: 0x000D67AC File Offset: 0x000D49AC
		[Parameter]
		public SmtpAddress ExternalSenderAdminAddress
		{
			get
			{
				return (SmtpAddress)this[MalwareFilterPolicySchema.ExternalSenderAdminAddress];
			}
			set
			{
				this[MalwareFilterPolicySchema.ExternalSenderAdminAddress] = value;
			}
		}

		// Token: 0x170010A4 RID: 4260
		// (get) Token: 0x060036C2 RID: 14018 RVA: 0x000D67BF File Offset: 0x000D49BF
		// (set) Token: 0x060036C3 RID: 14019 RVA: 0x000D67D1 File Offset: 0x000D49D1
		[Parameter]
		public bool BypassInboundMessages
		{
			get
			{
				return (bool)this[MalwareFilterPolicySchema.BypassInboundMessages];
			}
			set
			{
				this[MalwareFilterPolicySchema.BypassInboundMessages] = value;
			}
		}

		// Token: 0x170010A5 RID: 4261
		// (get) Token: 0x060036C4 RID: 14020 RVA: 0x000D67E4 File Offset: 0x000D49E4
		// (set) Token: 0x060036C5 RID: 14021 RVA: 0x000D67F6 File Offset: 0x000D49F6
		[Parameter]
		public bool BypassOutboundMessages
		{
			get
			{
				return (bool)this[MalwareFilterPolicySchema.BypassOutboundMessages];
			}
			set
			{
				this[MalwareFilterPolicySchema.BypassOutboundMessages] = value;
			}
		}

		// Token: 0x170010A6 RID: 4262
		// (get) Token: 0x060036C6 RID: 14022 RVA: 0x000D6809 File Offset: 0x000D4A09
		// (set) Token: 0x060036C7 RID: 14023 RVA: 0x000D681B File Offset: 0x000D4A1B
		[Parameter]
		public MalwareFilteringAction Action
		{
			get
			{
				return (MalwareFilteringAction)this[MalwareFilterPolicySchema.Action];
			}
			set
			{
				this[MalwareFilterPolicySchema.Action] = (int)value;
			}
		}

		// Token: 0x170010A7 RID: 4263
		// (get) Token: 0x060036C8 RID: 14024 RVA: 0x000D682E File Offset: 0x000D4A2E
		// (set) Token: 0x060036C9 RID: 14025 RVA: 0x000D6840 File Offset: 0x000D4A40
		public bool IsDefault
		{
			get
			{
				return (bool)this[MalwareFilterPolicySchema.IsDefault];
			}
			internal set
			{
				this[MalwareFilterPolicySchema.IsDefault] = value;
			}
		}

		// Token: 0x170010A8 RID: 4264
		// (get) Token: 0x060036CA RID: 14026 RVA: 0x000D6853 File Offset: 0x000D4A53
		// (set) Token: 0x060036CB RID: 14027 RVA: 0x000D6865 File Offset: 0x000D4A65
		[Parameter]
		public bool CustomNotifications
		{
			get
			{
				return (bool)this[MalwareFilterPolicySchema.CustomNotifications];
			}
			set
			{
				this[MalwareFilterPolicySchema.CustomNotifications] = value;
			}
		}

		// Token: 0x170010A9 RID: 4265
		// (get) Token: 0x060036CC RID: 14028 RVA: 0x000D6878 File Offset: 0x000D4A78
		// (set) Token: 0x060036CD RID: 14029 RVA: 0x000D688A File Offset: 0x000D4A8A
		[Parameter]
		public bool EnableInternalSenderNotifications
		{
			get
			{
				return (bool)this[MalwareFilterPolicySchema.EnableInternalSenderNotifications];
			}
			set
			{
				this[MalwareFilterPolicySchema.EnableInternalSenderNotifications] = value;
			}
		}

		// Token: 0x170010AA RID: 4266
		// (get) Token: 0x060036CE RID: 14030 RVA: 0x000D689D File Offset: 0x000D4A9D
		// (set) Token: 0x060036CF RID: 14031 RVA: 0x000D68AF File Offset: 0x000D4AAF
		[Parameter]
		public bool EnableExternalSenderNotifications
		{
			get
			{
				return (bool)this[MalwareFilterPolicySchema.EnableExternalSenderNotifications];
			}
			set
			{
				this[MalwareFilterPolicySchema.EnableExternalSenderNotifications] = value;
			}
		}

		// Token: 0x170010AB RID: 4267
		// (get) Token: 0x060036D0 RID: 14032 RVA: 0x000D68C2 File Offset: 0x000D4AC2
		// (set) Token: 0x060036D1 RID: 14033 RVA: 0x000D68D4 File Offset: 0x000D4AD4
		[Parameter]
		public bool EnableInternalSenderAdminNotifications
		{
			get
			{
				return (bool)this[MalwareFilterPolicySchema.EnableInternalSenderAdminNotifications];
			}
			set
			{
				this[MalwareFilterPolicySchema.EnableInternalSenderAdminNotifications] = value;
			}
		}

		// Token: 0x170010AC RID: 4268
		// (get) Token: 0x060036D2 RID: 14034 RVA: 0x000D68E7 File Offset: 0x000D4AE7
		// (set) Token: 0x060036D3 RID: 14035 RVA: 0x000D68F9 File Offset: 0x000D4AF9
		[Parameter]
		public bool EnableExternalSenderAdminNotifications
		{
			get
			{
				return (bool)this[MalwareFilterPolicySchema.EnableExternalSenderAdminNotifications];
			}
			set
			{
				this[MalwareFilterPolicySchema.EnableExternalSenderAdminNotifications] = value;
			}
		}

		// Token: 0x060036D4 RID: 14036 RVA: 0x000D690C File Offset: 0x000D4B0C
		internal bool IsConflicted()
		{
			return ADSession.IsCNFObject(base.Id);
		}

		// Token: 0x060036D5 RID: 14037 RVA: 0x000D691C File Offset: 0x000D4B1C
		public long GetEstimatedSize()
		{
			long num = 0L;
			if (!string.IsNullOrEmpty(this.CustomAlertText))
			{
				num += (long)(this.CustomAlertText.Length * 2);
				num += 18L;
			}
			if (!string.IsNullOrEmpty(this.CustomInternalSubject))
			{
				num += (long)(this.CustomInternalSubject.Length * 2);
				num += 18L;
			}
			if (!string.IsNullOrEmpty(this.CustomInternalBody))
			{
				num += (long)(this.CustomInternalBody.Length * 2);
				num += 18L;
			}
			if (!string.IsNullOrEmpty(this.CustomExternalSubject))
			{
				num += (long)(this.CustomExternalSubject.Length * 2);
				num += 18L;
			}
			if (!string.IsNullOrEmpty(this.CustomExternalBody))
			{
				num += (long)(this.CustomExternalBody.Length * 2);
				num += 18L;
			}
			if (!string.IsNullOrEmpty(this.CustomFromName))
			{
				num += (long)(this.CustomFromName.Length * 2);
				num += 18L;
			}
			if (this.CustomFromAddress.Length != 0)
			{
				num += (long)(this.CustomFromAddress.Length * 2);
				num += 18L;
			}
			if (this.InternalSenderAdminAddress.Length != 0)
			{
				num += (long)(this.InternalSenderAdminAddress.Length * 2);
				num += 18L;
			}
			if (this.ExternalSenderAdminAddress.Length != 0)
			{
				num += (long)(this.ExternalSenderAdminAddress.Length * 2);
				num += 18L;
			}
			num += 8L;
			num += 4L;
			return num + 18L;
		}

		// Token: 0x040024EE RID: 9454
		public const int FixedObjectOverhead = 18;

		// Token: 0x040024EF RID: 9455
		private static readonly string ldapName = "msExchMalwareFilterConfig";

		// Token: 0x040024F0 RID: 9456
		private static readonly ADObjectId parentPath = new ADObjectId("CN=Malware Filter,CN=Transport Settings");

		// Token: 0x040024F1 RID: 9457
		private static readonly MalwareFilterPolicySchema schema = ObjectSchema.GetInstance<MalwareFilterPolicySchema>();
	}
}
