using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Globalization;
using System.Net;
using System.Reflection;
using Microsoft.Exchange.Configuration.Tasks;
using Microsoft.Exchange.Data;
using Microsoft.Exchange.Data.Common;
using Microsoft.Exchange.Data.Directory;
using Microsoft.Exchange.Data.Directory.Sync;
using Microsoft.Exchange.Data.Directory.SystemConfiguration;
using Microsoft.Exchange.Data.Storage.Management;
using Microsoft.Exchange.Management.SystemConfigurationTasks;
using Microsoft.Exchange.Monitoring;
using Microsoft.Exchange.Rpc.MailSubmission;
using Microsoft.Exchange.Security.RightsManagement;
using Microsoft.RightsManagementServices.Core;

namespace Microsoft.Exchange.Management.Tasks
{
	// Token: 0x02000DCC RID: 3532
	internal static class Strings
	{
		// Token: 0x0600867B RID: 34427 RVA: 0x00225F34 File Offset: 0x00224134
		static Strings()
		{
			Strings.stringIDs.Add(139133773U, "SetupComponentGatewayLocal");
			Strings.stringIDs.Add(1019266140U, "SetupProgressCreateServerObject");
			Strings.stringIDs.Add(3118077072U, "ErrorPatternCannotContainEmptyAlternations");
			Strings.stringIDs.Add(3133271685U, "SetupComponentPostSetupUnifiedMessaging");
			Strings.stringIDs.Add(3076033759U, "CannotCombineWildcardRecipientAddress");
			Strings.stringIDs.Add(4053421780U, "VerboseRebuildWSManRegistry");
			Strings.stringIDs.Add(3032285884U, "CannotAddIPSafelistsIfIPSafelistingSyncDisabledId");
			Strings.stringIDs.Add(876478325U, "ExpiryDateSameOrBeforeActivationDate");
			Strings.stringIDs.Add(2380804056U, "ErrorPrecannedRoleAndSpecificMailboxFolderPermission");
			Strings.stringIDs.Add(274479317U, "ErrorCannotSpecifyScopeParameter");
			Strings.stringIDs.Add(4176599321U, "SetupProgressImportingAddionalEdgeSchema");
			Strings.stringIDs.Add(1856519480U, "E4eLicensingIsDisabledCreateRule");
			Strings.stringIDs.Add(3267746767U, "SetupProgressInstallMessageDeliveryContainer");
			Strings.stringIDs.Add(361784375U, "SetupProgressInstallAdministrativeGroupContainer");
			Strings.stringIDs.Add(2367053929U, "ErrorRoomPasswordMustBeSetWhenEnablingRoomADAccount");
			Strings.stringIDs.Add(786067343U, "SetupProgressCreateRBACRoles");
			Strings.stringIDs.Add(1845804172U, "ForwardSyncServiceDisplayName");
			Strings.stringIDs.Add(3030424583U, "MoveContentIndexTask");
			Strings.stringIDs.Add(1016721882U, "ADAttributeLastName");
			Strings.stringIDs.Add(859062683U, "ErrorMaxVersionOrFixVersionRequired");
			Strings.stringIDs.Add(2850084476U, "WarningIgnoreMailboxSettingOnlyPolicy");
			Strings.stringIDs.Add(1427955775U, "InstallExchangeOrganizationDescription");
			Strings.stringIDs.Add(126246359U, "ClassificationRuleCollectionIllegalScopedNewOperation");
			Strings.stringIDs.Add(3732489244U, "CannotRemoveDefaultRemoteDomain");
			Strings.stringIDs.Add(45450529U, "SetupProgressCreateLiveEnableFederatedEmailMailbox");
			Strings.stringIDs.Add(1765853772U, "SetupComponentBridgeheadGlobalConfig");
			Strings.stringIDs.Add(1587179080U, "CopyStatusMisconfigured");
			Strings.stringIDs.Add(213659447U, "DiagnosticsServiceDescription");
			Strings.stringIDs.Add(3491818999U, "DisableConversationsTask");
			Strings.stringIDs.Add(622937693U, "SetupProgressOutlookAnywhereEnabled");
			Strings.stringIDs.Add(3937769803U, "ErrorCannotSetPowerShellMaxTenantConcurrency");
			Strings.stringIDs.Add(2729327636U, "ForwardSyncService2DisplayName");
			Strings.stringIDs.Add(1063350901U, "ErrorSuspendWhenReadyToCompleteCannotBeSetWithIncrementalSyncInterval");
			Strings.stringIDs.Add(2071245439U, "SetupProgressStoppingComplianceAuditService");
			Strings.stringIDs.Add(2461945188U, "HealthManagerServiceDescription");
			Strings.stringIDs.Add(739210221U, "MessageTracingClientServiceDescription");
			Strings.stringIDs.Add(1636409600U, "RoleNonEditingAuthor");
			Strings.stringIDs.Add(2218700066U, "ErrorSecondaryMailboxIdRequired");
			Strings.stringIDs.Add(2909775076U, "HeaderName");
			Strings.stringIDs.Add(2790684056U, "InvalidRecipient");
			Strings.stringIDs.Add(512186364U, "RcrDatabasesMountedCheckDesc");
			Strings.stringIDs.Add(277119228U, "RemovingFiles");
			Strings.stringIDs.Add(2589734627U, "RoleContributor");
			Strings.stringIDs.Add(3036981548U, "SetupProgressCreateRBACRolesContainer");
			Strings.stringIDs.Add(523386612U, "NoVersionMatch");
			Strings.stringIDs.Add(3195479398U, "JournalNdrMailboxInJournalRuleRecipient");
			Strings.stringIDs.Add(4055862009U, "PromptToUpgradeRulesFormat");
			Strings.stringIDs.Add(2917478147U, "ErrorAliasEmpty");
			Strings.stringIDs.Add(3482350932U, "SetupProgressCreatePrecannedGAL");
			Strings.stringIDs.Add(2322679854U, "ConnectorValidationFailedId");
			Strings.stringIDs.Add(277022941U, "PatternContainsProhibitedLeadingOrTrailingRegexCharacters");
			Strings.stringIDs.Add(3852117776U, "ConfirmationMessageImportJournalRuleCollection");
			Strings.stringIDs.Add(1287226944U, "InfoGetLicensingUri");
			Strings.stringIDs.Add(904825440U, "InvalidSummmarizeBy");
			Strings.stringIDs.Add(793178976U, "SetAppConfigValue");
			Strings.stringIDs.Add(3312690295U, "MsiReinstallMustAll");
			Strings.stringIDs.Add(680782013U, "MessageTypeReadReceipt");
			Strings.stringIDs.Add(1329598090U, "InfoLoadIRMConfig");
			Strings.stringIDs.Add(1720218724U, "ErrorEmptyProxyAddressInWLID");
			Strings.stringIDs.Add(1830044678U, "ErrorInvalidApplicationId");
			Strings.stringIDs.Add(597233763U, "ExceptionUserObjectAmbiguous");
			Strings.stringIDs.Add(4051199925U, "StartMidFileCopyDescription");
			Strings.stringIDs.Add(1580525556U, "InstallFreeBusyFolderUnableToCreateFolder");
			Strings.stringIDs.Add(2295478344U, "UceContentFilterObjectNotFound");
			Strings.stringIDs.Add(689400110U, "AuditLogSearchNamePrefix");
			Strings.stringIDs.Add(367024857U, "SetupProgressCreatePrecannedAddressLists");
			Strings.stringIDs.Add(4203484097U, "MoreThanOneRecipient");
			Strings.stringIDs.Add(1173059748U, "ConfirmationMessageNewEdgeSubscription");
			Strings.stringIDs.Add(830763533U, "Imap4BeServiceDescription");
			Strings.stringIDs.Add(1019596387U, "SetupProgressUpdateDatabaseCopy");
			Strings.stringIDs.Add(2140270019U, "DatabaseWideTasksExceeded");
			Strings.stringIDs.Add(3053221044U, "MatchSubDomainsIsInternalRelayOnly");
			Strings.stringIDs.Add(1690438080U, "InstallBridgeheadRoleDescription");
			Strings.stringIDs.Add(1897883499U, "ResourceCorruptCalConfig");
			Strings.stringIDs.Add(805031200U, "SetupProgressSearchMessageEnabled");
			Strings.stringIDs.Add(3381267863U, "IisTasksApplicationPoolValidationProperty");
			Strings.stringIDs.Add(2160696509U, "IncompatibleVoiceMailProtectionAndAnalysisSettings");
			Strings.stringIDs.Add(1863749674U, "CasHealtRemotePowerShellCloseRunspaceSucceeded");
			Strings.stringIDs.Add(3928796881U, "SetupProgressInstallDefaultConnectionFilterContainer");
			Strings.stringIDs.Add(3857675279U, "NoUserOrOrganiztionProvidedException");
			Strings.stringIDs.Add(3733737272U, "ErrorInboxRuleMustHaveActions");
			Strings.stringIDs.Add(4218611731U, "ConfirmationMessageWebServicesVirtualDirectoryContinue");
			Strings.stringIDs.Add(593283652U, "MigrationWorkflowServiceDescription");
			Strings.stringIDs.Add(156083260U, "ErrorFolderIsMailEnabled");
			Strings.stringIDs.Add(634620851U, "CasHealthOwaAuthTypeNotCheckedForExternalUrl");
			Strings.stringIDs.Add(2953781159U, "ExportCertificateAs12WithoutKey");
			Strings.stringIDs.Add(3512699247U, "ChangePasswordInvalidNewPassword");
			Strings.stringIDs.Add(926742601U, "MigrationBatchIdMissing");
			Strings.stringIDs.Add(1422131190U, "CasHealthAdditionalInformation");
			Strings.stringIDs.Add(3939837379U, "TestMigrationServerAvailabilityProtocolArgument");
			Strings.stringIDs.Add(2096844093U, "OrganizationNotFederatedException");
			Strings.stringIDs.Add(3160504501U, "ReplayLagStatusLabelPlayDownReason");
			Strings.stringIDs.Add(3354444285U, "ErrorDialPlanNotMatch");
			Strings.stringIDs.Add(4002412124U, "SetupComponentAllADRolesCommon");
			Strings.stringIDs.Add(1401307769U, "QuorumGroupCheckDesc");
			Strings.stringIDs.Add(543437901U, "CasHealthSiteName");
			Strings.stringIDs.Add(1291176623U, "WarningAuthenticationTypeIsNotChanged");
			Strings.stringIDs.Add(1647181233U, "ArbitrationMailboxDefaultDisplayName");
			Strings.stringIDs.Add(2290602049U, "ErrorMoreThanOneAggregatedAccountOperationSpecified");
			Strings.stringIDs.Add(4115286253U, "SetupProgressSchemaFile");
			Strings.stringIDs.Add(3380542549U, "ConfirmationMessageImportDlpPolicy");
			Strings.stringIDs.Add(3583369532U, "CasTransactionResultUndefined");
			Strings.stringIDs.Add(4191725334U, "InfoNoTiFound");
			Strings.stringIDs.Add(3094442783U, "TransitionStateInactive");
			Strings.stringIDs.Add(2731029007U, "RpcProxyScenario");
			Strings.stringIDs.Add(2024045189U, "ClearingCache");
			Strings.stringIDs.Add(1160072915U, "CasHealthEasScenarioSyncOne");
			Strings.stringIDs.Add(860632184U, "ErrorNotSupportedWritableRecipient");
			Strings.stringIDs.Add(1041810761U, "PromptToOverwriteRulesOnImport");
			Strings.stringIDs.Add(2801716203U, "ErrorPrimarySmtpAndEmailAddressesSpecified");
			Strings.stringIDs.Add(1003706237U, "ErrorRemoveMailboxWithJournalArchiveWithDirSync");
			Strings.stringIDs.Add(3682029584U, "ModerateActionMustBeTheOnlyAction");
			Strings.stringIDs.Add(965874437U, "TransitionInfoLabelCurrentState");
			Strings.stringIDs.Add(2357316042U, "ComAdminUninstallOleConverter");
			Strings.stringIDs.Add(4146681835U, "SetRuleSyncAcrossDifferentVersionsNeeded");
			Strings.stringIDs.Add(1534135610U, "DatabasesCopyKeepingUpCheckDesc");
			Strings.stringIDs.Add(4021383240U, "InvalidStartDateOffset");
			Strings.stringIDs.Add(2142106696U, "WarningSupervisionTagsRemoved");
			Strings.stringIDs.Add(549796425U, "SetupProgressEnableWMIInbound");
			Strings.stringIDs.Add(1998021006U, "DefaultAllRooms");
			Strings.stringIDs.Add(777113388U, "JournalingParameterErrorGccWithoutRecipient");
			Strings.stringIDs.Add(2991269321U, "TenantAdminCannotInvokeHotmailOperation");
			Strings.stringIDs.Add(1614986787U, "DlpPolicyInvalidCollectionError");
			Strings.stringIDs.Add(3163237226U, "UCWADiscoveryUrlEmpty");
			Strings.stringIDs.Add(3568214229U, "ActiveDirectorySearchScenario");
			Strings.stringIDs.Add(1888394526U, "InfoGetCertificationUri");
			Strings.stringIDs.Add(3248899022U, "UCWADiscoveryUrlException");
			Strings.stringIDs.Add(681186416U, "ErrorNoAggregatedAccountOperationSpecified");
			Strings.stringIDs.Add(2266904519U, "CertificateWasNotFound");
			Strings.stringIDs.Add(4098321834U, "ErrorSystemFolderPathNotAvailable");
			Strings.stringIDs.Add(4252886198U, "CasHealthOwaAuthTypeCheckedForInternalUrl");
			Strings.stringIDs.Add(1806450332U, "GetQueueDigestForestParameterCannotBeFalse");
			Strings.stringIDs.Add(3632772754U, "ExceptionEmptyStringNotAllowed");
			Strings.stringIDs.Add(2448948717U, "MtrtAddHeader");
			Strings.stringIDs.Add(1144958480U, "AnonymousUser");
			Strings.stringIDs.Add(2027635495U, "CannotSetPerimeterOrgIdIfEhfConfigSyncIsDisabledId");
			Strings.stringIDs.Add(485575497U, "CasHealthOwaAuthenticationVerificationError");
			Strings.stringIDs.Add(580429770U, "WarningSettingsNotModifiable");
			Strings.stringIDs.Add(4280240728U, "InstallDagMgmtServiceTask");
			Strings.stringIDs.Add(3793537057U, "DataClassificationDnIdentityNotSupported");
			Strings.stringIDs.Add(4162603766U, "InvalidRuleSearchFilterEmpty");
			Strings.stringIDs.Add(4029807706U, "InvalidPage");
			Strings.stringIDs.Add(1240499241U, "ErrorSuspendWhenReadyToCompleteCannotBeSetWithStartAfterOrCompleteAfter");
			Strings.stringIDs.Add(681744771U, "ErrorRemoveMailuserWithJournalArchive");
			Strings.stringIDs.Add(1288394341U, "ErrorInvalidEndpointParameterReasonInvalidProperty");
			Strings.stringIDs.Add(3248641044U, "Pop3BeServiceDescription");
			Strings.stringIDs.Add(3224500054U, "DefaultAllGroups");
			Strings.stringIDs.Add(872238113U, "ErrorDisableMailboxWithJournalArchive");
			Strings.stringIDs.Add(2758012420U, "ProgressActivityGetFederationMetadata");
			Strings.stringIDs.Add(1925218238U, "InvalidPrimaryLeaseLocation");
			Strings.stringIDs.Add(4270189224U, "InvalidSource");
			Strings.stringIDs.Add(386910029U, "LanguagePackPerfCounterMergeEnd");
			Strings.stringIDs.Add(3881434143U, "CheckServerConfiguration");
			Strings.stringIDs.Add(3485959825U, "UpgradedSearchObjectDescription");
			Strings.stringIDs.Add(1359519288U, "CopyStatusSinglePageRestore");
			Strings.stringIDs.Add(2764219150U, "IgnoreRequireTLSConflict");
			Strings.stringIDs.Add(3098305126U, "ErrorRpcHttpMustSpecifyInternalClientsRequireSslParameter");
			Strings.stringIDs.Add(2769512906U, "EmptyMesssageWillBeCreated");
			Strings.stringIDs.Add(2142814423U, "SubjectCnNotValidFQDN");
			Strings.stringIDs.Add(1829927449U, "WarningExpiryDateBeforeCurrentDate");
			Strings.stringIDs.Add(339075801U, "MtrtRequireTLS");
			Strings.stringIDs.Add(68568156U, "SendConnectorSourceServersSetForEdge");
			Strings.stringIDs.Add(3910947918U, "ErrorInvalidCertificateData");
			Strings.stringIDs.Add(2582005788U, "NoKeyIDInImportedTrustedPublishingDomain");
			Strings.stringIDs.Add(3281590539U, "SetupProgressDistributionListCountQuota");
			Strings.stringIDs.Add(3636258538U, "ConfirmationMessageIRMConfig");
			Strings.stringIDs.Add(204012629U, "DebugStartGeneratingUniqueSamAccountName");
			Strings.stringIDs.Add(3148569182U, "CouldNotFindAutodiscoverService");
			Strings.stringIDs.Add(3468504006U, "ErrorInvalidAuditAdminOperationType");
			Strings.stringIDs.Add(3768201246U, "ErrorAuthServerCannotSwitchType");
			Strings.stringIDs.Add(1045148960U, "VirtualDirectoryTypeNotApplicable");
			Strings.stringIDs.Add(1725140761U, "RmsOnlineUrlsNotPresent");
			Strings.stringIDs.Add(3070965441U, "StartPreConfigurationDescription");
			Strings.stringIDs.Add(893233504U, "ErrorAssociatedMoveRequestExists");
			Strings.stringIDs.Add(2558903800U, "MigrationStartAfterRequiresAutoComplete");
			Strings.stringIDs.Add(3445636645U, "SomeMapiTransactionsFailedPrefix");
			Strings.stringIDs.Add(2031086061U, "InfoCheckingTpdFromRmsOnline");
			Strings.stringIDs.Add(2409328034U, "TenantNotificationUnavailableEventMessage");
			Strings.stringIDs.Add(2876349303U, "DagTaskRestoreDagCouldNotOpenCluster");
			Strings.stringIDs.Add(1304474150U, "ConfirmationMessageSetIPAllowListConfig");
			Strings.stringIDs.Add(1086317875U, "UpdateManageDelegation2ProvisioningInDNS");
			Strings.stringIDs.Add(3216817101U, "ErrorIgnoreDefaultScopeAndDCSetTogether");
			Strings.stringIDs.Add(1657137395U, "CasHealthOwaNoCasArgumentError");
			Strings.stringIDs.Add(1869397051U, "HybridMailflowOutboundConnectorComment");
			Strings.stringIDs.Add(2049140123U, "PublishManageDelegation2ProvisioningInDNS");
			Strings.stringIDs.Add(1018858686U, "InvalidActionSequence");
			Strings.stringIDs.Add(3567029179U, "CannotUseDefaultAttributesForExchange2007OAB");
			Strings.stringIDs.Add(1247936583U, "ImproperTypeForThisIdParameter");
			Strings.stringIDs.Add(1594256938U, "SetupProgressStoppingWatchDogService");
			Strings.stringIDs.Add(2800695281U, "ErrorPreventCompletionCannotSet");
			Strings.stringIDs.Add(1000180735U, "ErrorTaskRunningLocation");
			Strings.stringIDs.Add(1044260641U, "ErrorTenantOrgOutOfDate");
			Strings.stringIDs.Add(3858535199U, "SetupProgressStartingComplianceAuditService");
			Strings.stringIDs.Add(1197534060U, "ConfirmationMessageSetIPBlockListProvidersConfig");
			Strings.stringIDs.Add(1114455400U, "UninstallMailboxReplicationServiceTask");
			Strings.stringIDs.Add(46134730U, "SetupProgressAutoReplyEnabled");
			Strings.stringIDs.Add(1293373139U, "SynNowCanOnlyRunAgainstHub");
			Strings.stringIDs.Add(1906820204U, "UninstallKeynoteConnectorServiceTask");
			Strings.stringIDs.Add(511946795U, "ProgressStatusRemovingManagementRoleTree");
			Strings.stringIDs.Add(345735772U, "CasTransactionResultSkipped");
			Strings.stringIDs.Add(2053186887U, "ErrorAgentCannotBeDisabled");
			Strings.stringIDs.Add(1842673731U, "CreateSharedConfigurationRequiredForTT");
			Strings.stringIDs.Add(3723446335U, "SetupProgressStoppingAdam");
			Strings.stringIDs.Add(3205347653U, "CasHealthOwaGotIsaLogonPage");
			Strings.stringIDs.Add(3576079758U, "CreateActiveSyncOraganizationSettings");
			Strings.stringIDs.Add(2814365579U, "InheritedAceIgnored");
			Strings.stringIDs.Add(718060562U, "StartPreFileCopyDescription");
			Strings.stringIDs.Add(2306021189U, "SetupComponentConfiguringMailSubmissionService");
			Strings.stringIDs.Add(2062465841U, "ErrorCannotGetLocalSite");
			Strings.stringIDs.Add(2995736033U, "ErrorCannotSpecifySuspendCommentWithoutSuspend");
			Strings.stringIDs.Add(4218312291U, "SetupProgressStartingRpcClientAccessService");
			Strings.stringIDs.Add(3248358162U, "SetupComponentStoppingMailboxServices");
			Strings.stringIDs.Add(1628012707U, "StartOrganizationPilotDescription");
			Strings.stringIDs.Add(1068106535U, "AlsEmailFooter");
			Strings.stringIDs.Add(1557867634U, "ConfirmationMessageRemoveEdgeSubscriptionRecipients");
			Strings.stringIDs.Add(3250043305U, "CasHealthOwaNoInternalUrl");
			Strings.stringIDs.Add(3613594314U, "ReversingTaskList");
			Strings.stringIDs.Add(1793609503U, "SetupProgressMaxRecipientsTransportQuota");
			Strings.stringIDs.Add(1688623221U, "ContactAdminForForwardingWarning");
			Strings.stringIDs.Add(1985418867U, "SetResubmitRequestConfirmation");
			Strings.stringIDs.Add(3427981878U, "ExsetdataLegacyOrganizationName");
			Strings.stringIDs.Add(1733149537U, "PatternIsWhiteSpace");
			Strings.stringIDs.Add(4186825349U, "SetupComponentPostSetupAllRoles");
			Strings.stringIDs.Add(4241796904U, "SetupProgressStoppingServiceHostService");
			Strings.stringIDs.Add(1382008128U, "ErrorDirectoryNotFound");
			Strings.stringIDs.Add(1285179481U, "SetupProgressDisclosure");
			Strings.stringIDs.Add(2812311335U, "CasHealthOwaPingFailed");
			Strings.stringIDs.Add(2534355845U, "SetServerComponentStateInvalidLocalRemoteSwitch");
			Strings.stringIDs.Add(241488845U, "TokenSuccessfullyGenerated");
			Strings.stringIDs.Add(3729565548U, "InvalidLeaseDirectory");
			Strings.stringIDs.Add(2714395591U, "AuthenticationMethodDigest");
			Strings.stringIDs.Add(533822862U, "ErrorPrimaryPublicFolderMailboxNotFound");
			Strings.stringIDs.Add(2939831845U, "NSPIGetProfileDetailsScenario");
			Strings.stringIDs.Add(2566981015U, "SetupProgressCreateDefaultWLMPolicy");
			Strings.stringIDs.Add(2727317856U, "UninstallUnifiedMessagingRoleDescription");
			Strings.stringIDs.Add(2809178217U, "ErrorNeedToSpecifyScopeParameter");
			Strings.stringIDs.Add(1167690000U, "InstallFfoPrimingServiceTask");
			Strings.stringIDs.Add(2266874684U, "MailboxTransportSubmissionServiceDescription");
			Strings.stringIDs.Add(1434991878U, "RejectStatusCode");
			Strings.stringIDs.Add(1895340720U, "ErrorMaxVersionAndFixVersionSpecified");
			Strings.stringIDs.Add(2907455067U, "CasTransactionResultSuccess");
			Strings.stringIDs.Add(2383751265U, "InstallFreeBusyFolderNoPublicFolderDatabase");
			Strings.stringIDs.Add(301735889U, "SetupComponentConfiguringSharedCacheService");
			Strings.stringIDs.Add(2263616798U, "VerboseSaveADServerSettings");
			Strings.stringIDs.Add(645477220U, "ADAttributeCustomAttribute11");
			Strings.stringIDs.Add(2614845688U, "ADAttributeCustomAttribute15");
			Strings.stringIDs.Add(2883464667U, "ErrorResetPasswordRequiresPassword");
			Strings.stringIDs.Add(4056489825U, "FailureMappingMdbGuidForGet");
			Strings.stringIDs.Add(1720836242U, "ScenarioAutoDiscoverOutlookProvider");
			Strings.stringIDs.Add(2294833768U, "ImportCertificateUntrustedRoot");
			Strings.stringIDs.Add(2442376176U, "AccountPrivilegeWarning");
			Strings.stringIDs.Add(3630480834U, "InterceptorWarningCustomResponseCodeTextWithoutRejectAction");
			Strings.stringIDs.Add(2160342179U, "SetupProgressCreateOrgContainer");
			Strings.stringIDs.Add(1000887253U, "SetupProgressConfiguringDefaultTransportAgents");
			Strings.stringIDs.Add(3544120613U, "MessageTypeEncrypted");
			Strings.stringIDs.Add(1323896402U, "WordIsWhiteSpaceOrContainsWhiteSpacePrefixOrSuffix");
			Strings.stringIDs.Add(3573549683U, "NotPublicFolderDatabase");
			Strings.stringIDs.Add(425417434U, "ErrorPrecannedRoleAndSpecificPermission");
			Strings.stringIDs.Add(2188442253U, "OwaInvalidFormsAuthenticationConfiguration");
			Strings.stringIDs.Add(840944282U, "ErrorQuotaOnDefaultFolder");
			Strings.stringIDs.Add(4289093673U, "ADAttributeEmail");
			Strings.stringIDs.Add(2392105441U, "WarningFederatedOrgIdNotEnabled");
			Strings.stringIDs.Add(45917787U, "SendingGuidInMailFrom");
			Strings.stringIDs.Add(2976272587U, "Error_MultipleItemsFound");
			Strings.stringIDs.Add(1690073363U, "SetupComponentConfiguringMailboxPerfCounters");
			Strings.stringIDs.Add(2657860018U, "SetupComponentConfiguringProtectedServiceHost");
			Strings.stringIDs.Add(3058326614U, "ConversationsMailboxAlreadyDisabled");
			Strings.stringIDs.Add(163826707U, "MapiSubmitSystemProbeId");
			Strings.stringIDs.Add(3114445527U, "OutboundConnectorToRouteAcceptedDomainNotFound");
			Strings.stringIDs.Add(2024750425U, "SetupProgressCreateRAPassignments");
			Strings.stringIDs.Add(977526821U, "ClassificationRuleCollectionIllegalScopedRemoveOperation");
			Strings.stringIDs.Add(543355436U, "UninstallRecoveryActionArbiterServiceTask");
			Strings.stringIDs.Add(2566309275U, "EnableContentIndexTask");
			Strings.stringIDs.Add(823570622U, "SuppressXAnonymousTlsEnabledOnEdge");
			Strings.stringIDs.Add(2259906521U, "ReloadingMoveRequest");
			Strings.stringIDs.Add(1585773875U, "SetupComponentMidFileCopyMailbox");
			Strings.stringIDs.Add(933450270U, "ErrorOrganizationIsNotInUpgradeState");
			Strings.stringIDs.Add(2336039625U, "AddressRewriteInvalidMapping");
			Strings.stringIDs.Add(1316689733U, "DlpPolicyStateDescription");
			Strings.stringIDs.Add(1226199280U, "ErrorContentSettingAlreadyExist");
			Strings.stringIDs.Add(4205883882U, "SetupComponentPostUpdatingServicePlan");
			Strings.stringIDs.Add(3564253415U, "ErrorSetMailboxCrossVersionRehoming");
			Strings.stringIDs.Add(2868264770U, "TransitionInfoLabelLastFailureTransition");
			Strings.stringIDs.Add(562001953U, "AutoGroupManagedByCannotBeEmpty");
			Strings.stringIDs.Add(771584439U, "ConfirmationMessageSetLoadBalanceSettings");
			Strings.stringIDs.Add(1407354013U, "ProductKeyRestartWarning");
			Strings.stringIDs.Add(3530329232U, "MailboxParameterNotSpecified");
			Strings.stringIDs.Add(2424622863U, "CasHealthEasScenarioDirectPushAndSync");
			Strings.stringIDs.Add(1779020807U, "SetupProgressRegisterCmdletExtensionAgents");
			Strings.stringIDs.Add(664730499U, "MoveStatusWarning");
			Strings.stringIDs.Add(780734969U, "SetupComponentStartingBridgeheadServices");
			Strings.stringIDs.Add(2567786022U, "ClockOutofSync");
			Strings.stringIDs.Add(2365917741U, "ErrorSharePointUrlDoesNotMatchPartnerApplication");
			Strings.stringIDs.Add(4072748617U, "MessageTypeApprovalRequest");
			Strings.stringIDs.Add(611036308U, "RecoveryActionArbiterServiceDisplayName");
			Strings.stringIDs.Add(1411232125U, "PartitionIdRequiredForMultipleOrgSearch");
			Strings.stringIDs.Add(1536983777U, "ErrorDirectoryNotEmpty");
			Strings.stringIDs.Add(4075921268U, "MigrationNeutralCultureIsInvalid");
			Strings.stringIDs.Add(2261648U, "ConfirmationMessageSetPendingFederationDomain");
			Strings.stringIDs.Add(744449214U, "CouldNotFindTask");
			Strings.stringIDs.Add(408063793U, "DlpPolicyModeDescription");
			Strings.stringIDs.Add(3439866578U, "ErrorSetVersion1OfExchange12OAB");
			Strings.stringIDs.Add(4022980833U, "SetupComponentPreSetupCafe");
			Strings.stringIDs.Add(2025774842U, "ErrorTaskCancelledBecauseMoreMailboxesThanSearchSupported");
			Strings.stringIDs.Add(17561413U, "SetupComponentPreUpdatingServicePlan");
			Strings.stringIDs.Add(490047050U, "CasHealthOwaUnexpectedResponse");
			Strings.stringIDs.Add(1069387158U, "SendConnectorDashdashAddressSpaceNotOffEdge");
			Strings.stringIDs.Add(2563356384U, "InvalidParameterSet");
			Strings.stringIDs.Add(3988796807U, "AttachmentFilterADEntryNotFound");
			Strings.stringIDs.Add(5426607U, "CasHealthOwaNoLogonCookieReturned");
			Strings.stringIDs.Add(925956923U, "SetupProgressMalwareFilterPolicy");
			Strings.stringIDs.Add(1605831397U, "ConfirmationMessageSetContentFilterConfig");
			Strings.stringIDs.Add(3179690214U, "InstallFBAServiceTask");
			Strings.stringIDs.Add(4199915451U, "MigrationCompleteAfterIncorrectState");
			Strings.stringIDs.Add(4056523457U, "ActiveSyncOrganizationSettingsAmbiguous");
			Strings.stringIDs.Add(1492775636U, "InfoImportingTpdFromRmsOnline");
			Strings.stringIDs.Add(2422284162U, "MtrtEventMalware");
			Strings.stringIDs.Add(3583996249U, "InvalidAggregatedDateTime");
			Strings.stringIDs.Add(3407394740U, "ErrorRecipientTypeDetailsConflictWithRecipientType");
			Strings.stringIDs.Add(1761587115U, "InfoCheckMode");
			Strings.stringIDs.Add(308522664U, "SetIISGzipMimeTypesFailure");
			Strings.stringIDs.Add(465050415U, "SetupComponentConfiguringReplayService");
			Strings.stringIDs.Add(3606274629U, "MessageTypeSigned");
			Strings.stringIDs.Add(1069404793U, "InstallADTopologyServiceTask");
			Strings.stringIDs.Add(1251200968U, "SetupProgressCreateGlobalExchangeUSGs");
			Strings.stringIDs.Add(2634964433U, "ADAttributeTitle");
			Strings.stringIDs.Add(1717488648U, "MoveMailboxSourceCleanupTypeMailEnableSourceAccount");
			Strings.stringIDs.Add(1685700083U, "NoSourceMailboxesAndNoPublicFolderSourcesSet");
			Strings.stringIDs.Add(563433368U, "SetupProgressCreateFederatedEmailMailbox");
			Strings.stringIDs.Add(112004327U, "ErrorJoinRestrictionInvalid");
			Strings.stringIDs.Add(2206782705U, "TopologyServiceResultFailure");
			Strings.stringIDs.Add(4222836121U, "WarningBulkOperationCannotDetermineRequester");
			Strings.stringIDs.Add(1239241343U, "SetupComponentMidFileCopyOSP");
			Strings.stringIDs.Add(2571165378U, "ErrorUMPolicyToPreE12");
			Strings.stringIDs.Add(1850979017U, "WarningTransportDecryptionMandatoryRequiresSuperUser");
			Strings.stringIDs.Add(2007613643U, "UnableToRetrieveDeletePolicyTag");
			Strings.stringIDs.Add(233479074U, "ConfirmationMessageTestGlobalLocatorServiceIdentity");
			Strings.stringIDs.Add(1909346717U, "ReplayServiceCheckDesc");
			Strings.stringIDs.Add(3819771664U, "ExchangeServersUSGDescription");
			Strings.stringIDs.Add(2278864889U, "CertificateDoesNotHavePKCS10");
			Strings.stringIDs.Add(3741937590U, "ErrorMissingNameOrDescriptionOrIsDefaultParameters");
			Strings.stringIDs.Add(333526005U, "VerboseEndFingerprint");
			Strings.stringIDs.Add(503478192U, "CasHealthSpecifiedServerIsNotCas");
			Strings.stringIDs.Add(3649434212U, "InstallingTranscodingService");
			Strings.stringIDs.Add(3750627262U, "VerboseNotFoundAssigneeInConfigNC");
			Strings.stringIDs.Add(2388954365U, "CannotRemoveDefaultSiteMailboxProvisioningPolicyException");
			Strings.stringIDs.Add(1785196314U, "SetupProgressConfigureAdminGroup");
			Strings.stringIDs.Add(1058125491U, "ErrorMicrosoftExchangeRecipientNotFound");
			Strings.stringIDs.Add(52866768U, "UmLanguagePackPrereqCheck");
			Strings.stringIDs.Add(1377545164U, "ADAttributeCustomAttribute6");
			Strings.stringIDs.Add(1377545168U, "ADAttributeCustomAttribute2");
			Strings.stringIDs.Add(3851263184U, "ErrorFileNameCannotBeEmptyOrNull");
			Strings.stringIDs.Add(3464809167U, "ConfirmationMessageSetActiveSyncOrganizationSettings");
			Strings.stringIDs.Add(2779757030U, "NewContentIndexTask");
			Strings.stringIDs.Add(3690963829U, "MapiSubmitSystemProbeSuccesfullyDeleted");
			Strings.stringIDs.Add(3896912312U, "ConfirmationMessageSetPop3Config");
			Strings.stringIDs.Add(3851464644U, "Error_MissingOrganizerEmail");
			Strings.stringIDs.Add(2532482654U, "ExchangeTracingProviderAlreadyExists");
			Strings.stringIDs.Add(3214881135U, "ErrorRpcHttpMustSpecifyExternalClientAuthenticationMethodOrDefaultAuthenticationMethod");
			Strings.stringIDs.Add(2759728920U, "InvalidBackupLeaseLocation");
			Strings.stringIDs.Add(1259814674U, "CouldNotFindAutodiscoverStandardAuthBindingTransportElement");
			Strings.stringIDs.Add(2028085072U, "CasConfigurationCheckSuccess");
			Strings.stringIDs.Add(2923667921U, "RetrievingGlobalThrottlingPolicy");
			Strings.stringIDs.Add(4213166642U, "SetupComponentConfiguringLegacyMailbox");
			Strings.stringIDs.Add(3083753440U, "VerboseFixingAddressBooksInNativeMode");
			Strings.stringIDs.Add(3305350853U, "CasHealthEasScenarioCreateItem");
			Strings.stringIDs.Add(3128424281U, "FfoWebServiceEcpComponentDescription");
			Strings.stringIDs.Add(2922449898U, "SetupProgressStartingThrottlingService");
			Strings.stringIDs.Add(735377508U, "TransitionStateActive");
			Strings.stringIDs.Add(2369645597U, "UMCallAnsweringRuleDescriptionIf");
			Strings.stringIDs.Add(2595151256U, "InvalidTransportRule");
			Strings.stringIDs.Add(463879924U, "ImapExternalServerSettings");
			Strings.stringIDs.Add(4205633792U, "ErrorNoPropertyWasModified");
			Strings.stringIDs.Add(1689084926U, "DisclaimerText");
			Strings.stringIDs.Add(4122757518U, "InterceptorWarningPathIgnored");
			Strings.stringIDs.Add(2496907143U, "CannotCombineWildcardSenderAddress");
			Strings.stringIDs.Add(1411848455U, "SetupProgressOwaInstantMessagingEnabled");
			Strings.stringIDs.Add(1610376224U, "SetupProgressCleanupOldMailboxPlan");
			Strings.stringIDs.Add(2063369946U, "InvalidRejectEnhancedStatus");
			Strings.stringIDs.Add(2144801278U, "CouldNotFindLocalhostDirectoryEntryException");
			Strings.stringIDs.Add(4142265347U, "TSCrashDumpsOnlyAvailableOnLocalMachine");
			Strings.stringIDs.Add(3195028184U, "ConfirmSetSyncDaemonArbitrationConfig");
			Strings.stringIDs.Add(199165212U, "MustProvideValidSessionForFindingRequests");
			Strings.stringIDs.Add(1218978020U, "PopImapConnecting");
			Strings.stringIDs.Add(2370061645U, "SetupComponentCommonTenantConfigLast");
			Strings.stringIDs.Add(1470772353U, "InstallShareIISLogFileDirectoryTask");
			Strings.stringIDs.Add(1367543679U, "ErrorBPAConfigDataLoad");
			Strings.stringIDs.Add(4014797545U, "UninstallHealthManagerServiceTask");
			Strings.stringIDs.Add(504739579U, "MtrtEventSubmit");
			Strings.stringIDs.Add(291523223U, "ErrorCertificateMissingPrivateKey");
			Strings.stringIDs.Add(357993642U, "RecipientDomainStarOnPremiseOutboundConnector");
			Strings.stringIDs.Add(3588438151U, "CertificateStatusUntrusted");
			Strings.stringIDs.Add(533012186U, "SetupProgressStartingReplayService");
			Strings.stringIDs.Add(3162817800U, "InstallReplayServiceTask");
			Strings.stringIDs.Add(2576923962U, "InvalidDirection");
			Strings.stringIDs.Add(3874457483U, "SetupProgressUpdateDatabaseSettings");
			Strings.stringIDs.Add(1104283461U, "ErrorCannotChangeLinkedProperty");
			Strings.stringIDs.Add(57521374U, "LanguagePackPerfCounterMergeStart");
			Strings.stringIDs.Add(1825160064U, "DefaultSharingPolicyName");
			Strings.stringIDs.Add(1322418917U, "SetupProgressCreateClassificationDefinitionsContainer");
			Strings.stringIDs.Add(3650915108U, "SecurityDescriptorBeingUpdatedMsg");
			Strings.stringIDs.Add(2388010079U, "MtrtRequireDecryption");
			Strings.stringIDs.Add(1003347076U, "ErrorTeamMailboxCanNotLinkSharePointByNonOwner");
			Strings.stringIDs.Add(3391359806U, "ErrorMailboxPlanInvalidInThisRelease");
			Strings.stringIDs.Add(2607048324U, "BadWordsPolicyNotEnabledIfBadWordsListNull");
			Strings.stringIDs.Add(3287132233U, "ProgressTaskComplete");
			Strings.stringIDs.Add(63291148U, "SetupProgressDisableWMIRPCSS");
			Strings.stringIDs.Add(188776009U, "OrgPrereqCheck");
			Strings.stringIDs.Add(2809852842U, "MtrtSetHeader");
			Strings.stringIDs.Add(1148485298U, "CannotRunOnEdge");
			Strings.stringIDs.Add(5951564U, "InterceptorErrorConditionHeaderNameMissing");
			Strings.stringIDs.Add(2914613013U, "CasHealthOwaShortName");
			Strings.stringIDs.Add(3088693696U, "PopImapDisconnecting");
			Strings.stringIDs.Add(4035129721U, "WillNotCreateGlobalThrottlingPolicy");
			Strings.stringIDs.Add(1864829159U, "FederationTrustHasOutdatedCertificates");
			Strings.stringIDs.Add(261927478U, "ErrorEnableNonUniversalGroup");
			Strings.stringIDs.Add(1686636202U, "ConversationsFailedToCreateConversationsFolder");
			Strings.stringIDs.Add(3993542306U, "VerboseSaveADServerSettingsSucceed");
			Strings.stringIDs.Add(1291241716U, "SetupProgressPerMBXPlanRoleAssignmentPolicy");
			Strings.stringIDs.Add(454353554U, "AllMapiTransactionsSucceeded");
			Strings.stringIDs.Add(3395234788U, "WarningRestrictionWithWrongGroupType");
			Strings.stringIDs.Add(162508716U, "SetupProgressShowInAddressListsEnabled");
			Strings.stringIDs.Add(231799122U, "ComplianceSearchTimeoutError");
			Strings.stringIDs.Add(3163689273U, "OrganizationParamRequired");
			Strings.stringIDs.Add(243123253U, "ErrorMultipleDefaultRetentionPolicyTag");
			Strings.stringIDs.Add(2977205104U, "CouldNotGetMsoEndpoint");
			Strings.stringIDs.Add(354404596U, "MoveRequestIsMissing");
			Strings.stringIDs.Add(1723752717U, "ErrorCannotChangeAcceptMessagesFrom");
			Strings.stringIDs.Add(2951176425U, "MessageTraceMinimumCriteriaFieldsInError");
			Strings.stringIDs.Add(3158077333U, "ErrorCannotChangeHiddenFromAddressListsEnabled");
			Strings.stringIDs.Add(420723843U, "ErrorDefaultRoleAssignmentPolicyNotFound");
			Strings.stringIDs.Add(733779898U, "InvalidOrgCapabilityParameter");
			Strings.stringIDs.Add(2835118191U, "JournalingReportNdrToSameAsJournalEmailAddress");
			Strings.stringIDs.Add(2900893440U, "ErrorRpcHttpSSLOffloadingDisabled");
			Strings.stringIDs.Add(3622201701U, "ContinueOnEmptySearchQuery");
			Strings.stringIDs.Add(417532052U, "UninstallingIMAP4Service");
			Strings.stringIDs.Add(551608721U, "WarningReturnDefaultOrganizationThrottlingPolicy");
			Strings.stringIDs.Add(3200589103U, "ErrorStartAfterCanBeSetOnlyInQueued");
			Strings.stringIDs.Add(3524052893U, "ClientAccessLocalPermissionsComponentDescription");
			Strings.stringIDs.Add(1037163961U, "MailboxDatabaseIsDown");
			Strings.stringIDs.Add(1068896218U, "SetupComponentClientAccessGlobalConfig");
			Strings.stringIDs.Add(1898301735U, "JournalingExpiryDateAlreadyExpired");
			Strings.stringIDs.Add(3871360571U, "ErrorTargetEndpointRequired");
			Strings.stringIDs.Add(2497315428U, "SetupProgressRecreateCannedRBACRoleGroups");
			Strings.stringIDs.Add(3593053823U, "StoppinggMSExchangeFDS");
			Strings.stringIDs.Add(604566495U, "MtrtModerateMessageByUser");
			Strings.stringIDs.Add(1116614049U, "LogonFailure");
			Strings.stringIDs.Add(850579312U, "ErrorImageImport");
			Strings.stringIDs.Add(3673139399U, "AddressRewriteInvalidIdentity");
			Strings.stringIDs.Add(464677521U, "NewPop3ConfigurationTask");
			Strings.stringIDs.Add(702091437U, "ErrorActivationPreferenceNotAllowedWhenHostServerUnlinked");
			Strings.stringIDs.Add(1029805125U, "ArchiveConnectivityResultArchiveNotProvisioned");
			Strings.stringIDs.Add(4161304777U, "SetupExchangeHostedFilteringPerimeterEnabled");
			Strings.stringIDs.Add(2614046954U, "SetupComponentMidFileCopyCafe");
			Strings.stringIDs.Add(3269945312U, "ErrorTargetDatabaseNotAllowedForRemotePush");
			Strings.stringIDs.Add(3182689518U, "ErrorADOperationSucceededButMetabaseOperationFailed");
			Strings.stringIDs.Add(1677794547U, "SetupSettingAdminToolsConfiguredVersion");
			Strings.stringIDs.Add(2089273302U, "UMCallAnsweringRuleUnknownContact");
			Strings.stringIDs.Add(4276932551U, "MtrtSetAuditSeverity");
			Strings.stringIDs.Add(4054043086U, "ReservedString1");
			Strings.stringIDs.Add(979064683U, "SetupComponentConfigPermissionsFrontendTransport");
			Strings.stringIDs.Add(874781227U, "CasHealthOwaGotOwaLogonPage");
			Strings.stringIDs.Add(856583401U, "ADAttributeOtherHomePhoneNumber");
			Strings.stringIDs.Add(1100730082U, "SubjectPrefix");
			Strings.stringIDs.Add(3128145071U, "SendConnectorSourceServersNotSet");
			Strings.stringIDs.Add(2396781446U, "ErrorInvalidAuditDelegateOperationType");
			Strings.stringIDs.Add(2547668869U, "ErrorCannotMoveWellKnownPublicFolders");
			Strings.stringIDs.Add(2261801750U, "NoFederationMetadataEpr");
			Strings.stringIDs.Add(1654271044U, "SetupProcessCreateDefaultThrottlingPolicy");
			Strings.stringIDs.Add(1420937392U, "ToplogyScanFailed");
			Strings.stringIDs.Add(159047272U, "CasHealthOwaTimeoutInternal");
			Strings.stringIDs.Add(1631562655U, "DisasterRecoveryClientAccessRoleDescription");
			Strings.stringIDs.Add(1297659643U, "MailboxReplicationServiceDescription");
			Strings.stringIDs.Add(1167159339U, "ErrorFolderTypeModified");
			Strings.stringIDs.Add(2404626142U, "CasHealthWebAppLogonScenarioName");
			Strings.stringIDs.Add(1960367174U, "StoppingIMAP4Service");
			Strings.stringIDs.Add(206924338U, "SetupProgressSyncAccountsTimeBeforeDormant");
			Strings.stringIDs.Add(1625538986U, "ConfirmationMessageResetADServerSettings");
			Strings.stringIDs.Add(377011883U, "NoAuthenticatedServerUri");
			Strings.stringIDs.Add(1220824217U, "VirtualDirectoryTypeRequired");
			Strings.stringIDs.Add(3691311357U, "ErrorSoftDeletedMailboxCanOnlyChangeLitigationHoldEnabled");
			Strings.stringIDs.Add(3695562421U, "SetupProgressMSOSyncEnabled");
			Strings.stringIDs.Add(2016035929U, "MtrtEventBadmail");
			Strings.stringIDs.Add(1375131586U, "GetImap4ConfigurationTask");
			Strings.stringIDs.Add(668469937U, "ErrorRecipientViewRootEmptyAndViewEntireForestToFalse");
			Strings.stringIDs.Add(316585499U, "ConfirmationMessageSetExchangeAssistance");
			Strings.stringIDs.Add(3529494341U, "UpdateServicePlanDescription");
			Strings.stringIDs.Add(1588246230U, "StartReplService");
			Strings.stringIDs.Add(2051672478U, "MtrtEventSpam");
			Strings.stringIDs.Add(3437115628U, "CasHealthUriFoundViaAutodiscovery");
			Strings.stringIDs.Add(511090707U, "ErrorFederationCertificateNotSpecified");
			Strings.stringIDs.Add(2633315000U, "SetupProgressInstallDefaultMessageFilterContainer");
			Strings.stringIDs.Add(568876522U, "ErrorFileIsTooSmallForFingerprint");
			Strings.stringIDs.Add(3953390382U, "TestTeamMailboxSharepointCallUnderOauthTask");
			Strings.stringIDs.Add(3605578582U, "CasHealthEcpLongName");
			Strings.stringIDs.Add(35832858U, "WarningModifySubjectValueNotSet");
			Strings.stringIDs.Add(1687432599U, "ErrorRemoteArchiveTargetDatabaseMustBeSpecifiedForRemoteArchiveOnlyPush");
			Strings.stringIDs.Add(3592677092U, "InvalidNotifyAddress");
			Strings.stringIDs.Add(4170515100U, "QuarantineActionNotAvailable");
			Strings.stringIDs.Add(3362446484U, "MtrtRedirectMessage");
			Strings.stringIDs.Add(2100396363U, "CasHealthOwaUriScopeHeader");
			Strings.stringIDs.Add(2085573869U, "EndPointNotRegisteredException");
			Strings.stringIDs.Add(2163517138U, "MapiTransactionDiagnosticTargetDatabaseDismounted");
			Strings.stringIDs.Add(1632566846U, "SetupComponentConfiguringServiceHost");
			Strings.stringIDs.Add(1808397640U, "DlpPolicyXmlInvalid");
			Strings.stringIDs.Add(13270221U, "SetupProgressEnableWMIRPCSS");
			Strings.stringIDs.Add(2728374224U, "SetupProgressPopulateDatabases");
			Strings.stringIDs.Add(461830259U, "VerboseNoExchangeServersUSG");
			Strings.stringIDs.Add(1325604176U, "RegisterFilterFailed");
			Strings.stringIDs.Add(3707507579U, "ErrorCannotRemoveSpecialUser");
			Strings.stringIDs.Add(787262776U, "MailboxTransportDeliveryServiceDescription");
			Strings.stringIDs.Add(3322195502U, "DefaultAllUsers");
			Strings.stringIDs.Add(2823758188U, "SetupProgressStoppingRemoteRegistryService");
			Strings.stringIDs.Add(996743220U, "UpdateDbcDeleteFilesInvalidParametersException");
			Strings.stringIDs.Add(4204700933U, "ErrorInvalidDateRangeCondition");
			Strings.stringIDs.Add(3051316042U, "SetupProgressInstallDefaultEmailAddressPolicy");
			Strings.stringIDs.Add(4041875300U, "SetupProgressStoppingDagMgmtService");
			Strings.stringIDs.Add(3649145916U, "MoveStatusFailed");
			Strings.stringIDs.Add(1094916016U, "CasHealthCalendarScenarioTestICal");
			Strings.stringIDs.Add(1670347310U, "WarningSecurePipelineTracingPath");
			Strings.stringIDs.Add(3931827059U, "EnableConfigCustomizationsDescription");
			Strings.stringIDs.Add(3046221789U, "WrongLogLevel");
			Strings.stringIDs.Add(3359504671U, "ErrorPublicFolderFree");
			Strings.stringIDs.Add(1392508367U, "ErrorUMInvalidParameters");
			Strings.stringIDs.Add(3374360575U, "ADAttributeCustomAttribute10");
			Strings.stringIDs.Add(2945221880U, "DlpPolicyDescriptionDescription");
			Strings.stringIDs.Add(3087625658U, "SetupProgressStoppingThrottlingService");
			Strings.stringIDs.Add(1419643475U, "CasHealthOwaNotOwaPage");
			Strings.stringIDs.Add(1180865852U, "ErrorRpcHttpMustSpecifyExternalClientAuthenticationParameter");
			Strings.stringIDs.Add(3495070055U, "InstallOSPRoleDescription");
			Strings.stringIDs.Add(3955140957U, "AllTenantsScopedSessionNotSupported");
			Strings.stringIDs.Add(235837528U, "ErrorUnableToFindValidPublicFolderMailbox");
			Strings.stringIDs.Add(1117213053U, "ProgressChangeFsw");
			Strings.stringIDs.Add(625706739U, "ConfirmationMessageNewEdgeSyncMservConnectorOnLocalSite");
			Strings.stringIDs.Add(3110567830U, "StartAfterOrCompleteAfterCannotBeSetOnLegacyRequests");
			Strings.stringIDs.Add(3492150331U, "MtrtRejectMessage");
			Strings.stringIDs.Add(2525505760U, "WarningConnectingPrimaryAsSecondary");
			Strings.stringIDs.Add(3206520672U, "MapiTransactionResultUndefined");
			Strings.stringIDs.Add(207684870U, "ArgumentNotSet");
			Strings.stringIDs.Add(54348676U, "VerboseNoWriteAccessToExchangeServers");
			Strings.stringIDs.Add(1227806140U, "ResponseHeader");
			Strings.stringIDs.Add(686932030U, "ErrorCannotChangeResourceProperties");
			Strings.stringIDs.Add(3526228985U, "InstallingMSExchangeFDS");
			Strings.stringIDs.Add(533673063U, "ErrorEnableWindowsLiveIdForEnterpriseMailbox");
			Strings.stringIDs.Add(1494601097U, "SetupDiagnosticsServiceComponent");
			Strings.stringIDs.Add(2510042328U, "CannotConfigureAdfsOwaWithoutEcpFirst");
			Strings.stringIDs.Add(717668237U, "InstallAdminAuditLogConfig");
			Strings.stringIDs.Add(2074533376U, "ErrorNotEnoughInformationToFindRequest");
			Strings.stringIDs.Add(2648400316U, "SetupProgressStartingRemoteRegistryService");
			Strings.stringIDs.Add(148513305U, "ErrorProofOfOwnershipNotValid");
			Strings.stringIDs.Add(1099315268U, "ErrorFailedToGetCertificationUri");
			Strings.stringIDs.Add(1505963751U, "InvalidClassification");
			Strings.stringIDs.Add(2063677784U, "ErrorInvalidOperation");
			Strings.stringIDs.Add(1876927882U, "SetupComponentRoleSetterBridgehead");
			Strings.stringIDs.Add(4037451409U, "SetupProgressOwaExplicitLogonEnabled");
			Strings.stringIDs.Add(791976745U, "CannotModifyOneOffTemplates");
			Strings.stringIDs.Add(3310722589U, "ReplayLagPlayDownReasonNone");
			Strings.stringIDs.Add(3159442548U, "DeviceBlocked");
			Strings.stringIDs.Add(3940866218U, "GetRemoteAccountSyncCache");
			Strings.stringIDs.Add(434580719U, "UsingTargetMonitoringMailbox");
			Strings.stringIDs.Add(3316189097U, "SetupComponentMidFileCopyUnifiedMessaging");
			Strings.stringIDs.Add(2902832461U, "StoppingHealthService");
			Strings.stringIDs.Add(1027987732U, "RemovePerfCounters");
			Strings.stringIDs.Add(2819120138U, "ErrorSharedConfigurationUpgradeNotSupported");
			Strings.stringIDs.Add(748625712U, "UMCallAnsweringRuleProvideTheCallerWithTheseOptions");
			Strings.stringIDs.Add(3097596739U, "TestSearchTestThreadTimeOut");
			Strings.stringIDs.Add(4178554518U, "SetupComponentCommonTransportConfiguration");
			Strings.stringIDs.Add(3498944269U, "ConfirmationMessageTestSmtpConnectivity");
			Strings.stringIDs.Add(2342824031U, "UninstallingPOP3Service");
			Strings.stringIDs.Add(245532275U, "MigrationTypeDoesntMatchConnectionSettings");
			Strings.stringIDs.Add(2445398080U, "DebugStartInternalBeginProcessing");
			Strings.stringIDs.Add(1147595104U, "SetupComponentPreSetupMailbox");
			Strings.stringIDs.Add(4230134658U, "ADTopologyServiceDisplayName");
			Strings.stringIDs.Add(1949851943U, "ExceptionInvalidIisVersion");
			Strings.stringIDs.Add(2889503651U, "SendConnectorNonE12SourceAndTargetServers");
			Strings.stringIDs.Add(4289383202U, "ErrorInvalidJPEGFormat");
			Strings.stringIDs.Add(2322437519U, "MtrtEventDefer");
			Strings.stringIDs.Add(2609648925U, "InvalidRmsTemplate");
			Strings.stringIDs.Add(1043688457U, "CasHealthCalendarScenarioTestICalDesc");
			Strings.stringIDs.Add(1748950543U, "SetPop3ConfigurationTask");
			Strings.stringIDs.Add(2200535965U, "SetupProgressOwaOrganizationEnabled");
			Strings.stringIDs.Add(988117695U, "ClassificationRuleCollectionMissingRootElementViolation");
			Strings.stringIDs.Add(2194749999U, "ErrorDistributionGroupNamingPolicy");
			Strings.stringIDs.Add(1566772861U, "ProgressStartUpdateOtherAD");
			Strings.stringIDs.Add(3204500204U, "DlpRuleMustContainMessageContainsDataClassificationPredicate");
			Strings.stringIDs.Add(3331859280U, "SetupProgressConfigureSystemMessageClassification");
			Strings.stringIDs.Add(948483101U, "BPAScanCompleted");
			Strings.stringIDs.Add(3365309049U, "WarningPublicFolderFree");
			Strings.stringIDs.Add(905413889U, "SetupExchangeHostedFilteringAdminCenterAvailabilityEnabled");
			Strings.stringIDs.Add(4116851739U, "DeleteMessageActionMustBeTheOnlyAction");
			Strings.stringIDs.Add(4172665002U, "ClientAccessPerfCountersComponentDescription");
			Strings.stringIDs.Add(941932955U, "SMTPNotEnabledForTlsCertificate");
			Strings.stringIDs.Add(2809770327U, "MonitoringServiceDescription");
			Strings.stringIDs.Add(2193807956U, "CasHealthWarnTrustAllCertificates");
			Strings.stringIDs.Add(2571441823U, "ServiceUnavaiable");
			Strings.stringIDs.Add(3938903556U, "ClassificationRuleCollectionConfigValidationUnexpectedContents");
			Strings.stringIDs.Add(797610307U, "ErrorEndTimeSmallerThanNow");
			Strings.stringIDs.Add(782503604U, "FailedToStartRegSvr32");
			Strings.stringIDs.Add(452522079U, "ConfirmationMessageSetMapiVirtualDirectory");
			Strings.stringIDs.Add(3602520180U, "UseDagDefaultOnOffNone");
			Strings.stringIDs.Add(4211012520U, "MultipleMsoSyncObjectsRetrieved");
			Strings.stringIDs.Add(1234571969U, "EnableCertificateFederation");
			Strings.stringIDs.Add(3962371391U, "ReplicationCheckResultPassed");
			Strings.stringIDs.Add(1533048402U, "SetupComponentPreSetupUnifiedMessaging");
			Strings.stringIDs.Add(3287674875U, "SetupProgressCreateTransportSettingsContainer");
			Strings.stringIDs.Add(3964614477U, "VerboseFixingStart");
			Strings.stringIDs.Add(938999630U, "SetupProgressPublicFolderMailboxCountQuota");
			Strings.stringIDs.Add(2501038566U, "SetupProgressHostedOutboundSpamFilterPolicy");
			Strings.stringIDs.Add(2012379768U, "ErrorArchiveRemoteArchiveCannotBeSpecifiedTogether");
			Strings.stringIDs.Add(3067186331U, "CasHealthTaskNotRunOnExchangeServer");
			Strings.stringIDs.Add(16215670U, "WatchDogServiceDescription");
			Strings.stringIDs.Add(754559519U, "FindingEventSources");
			Strings.stringIDs.Add(4120295996U, "SetupProgressPopEnabled");
			Strings.stringIDs.Add(4260106383U, "ADAttributePOBox");
			Strings.stringIDs.Add(1680887904U, "ErrorInstallationModeMustBeBuildToBuildUpgrade");
			Strings.stringIDs.Add(637756306U, "SetupProgressCreateSenderRepuationConfiguration");
			Strings.stringIDs.Add(1228780278U, "ErrorOnlyOneParameterMayBeUsed");
			Strings.stringIDs.Add(930407740U, "Away");
			Strings.stringIDs.Add(1372052369U, "ErrorOnlyForestWideAllowIsAllowed");
			Strings.stringIDs.Add(1830297210U, "SetupProgressPerMBXPlanRetentionPolicyEnabled");
			Strings.stringIDs.Add(3865997491U, "ErrorOabVirtualDirectoryNameIsImmutable");
			Strings.stringIDs.Add(94891499U, "SetupProgressStartingMailboxReplicationService");
			Strings.stringIDs.Add(3477937254U, "RFRIGetReferralScenario");
			Strings.stringIDs.Add(4294363030U, "SetupProgressCreateCmdletExtensionAgentContainer");
			Strings.stringIDs.Add(1941627535U, "TransportSyncManagerServiceDisplayName");
			Strings.stringIDs.Add(1694156056U, "AutodiscoverScenario");
			Strings.stringIDs.Add(1012539222U, "WipeSucceededNote");
			Strings.stringIDs.Add(184445993U, "SetupComponentPerfCountersBridgehead");
			Strings.stringIDs.Add(1516604862U, "RemoteExchangeVersionNotSupported");
			Strings.stringIDs.Add(4235274244U, "ProgressDeletingLogFiles");
			Strings.stringIDs.Add(1026730790U, "ErrorPatternCannotBeginWithWildcardMultiMatch");
			Strings.stringIDs.Add(4012037194U, "WarningNoDefaultGAL");
			Strings.stringIDs.Add(3712723548U, "BackSyncUrlInvalidProtcolFormat");
			Strings.stringIDs.Add(1583857132U, "MSExchangeMGMTDescription");
			Strings.stringIDs.Add(957901814U, "TcpListenerCheckDesc");
			Strings.stringIDs.Add(1970107969U, "CannotRemoveDefaultAcceptedDomain");
			Strings.stringIDs.Add(4066206809U, "ErrorMoveToArchiveAppliedToSystemFolder");
			Strings.stringIDs.Add(3925057385U, "ErrorDisableJournalArchiveMailuserNotSoftDeleted");
			Strings.stringIDs.Add(972735676U, "MigrationCSVNotAllowedForRunningState");
			Strings.stringIDs.Add(23416362U, "AboutToAddForeginOrgUSGToLocalAdminGroup");
			Strings.stringIDs.Add(1817485482U, "SetupComponentPrepareSharedConfig");
			Strings.stringIDs.Add(61461170U, "MtrtGenerateIncidentReport");
			Strings.stringIDs.Add(3553998014U, "SetRemoteAccountSyncCache");
			Strings.stringIDs.Add(2797904681U, "FileNotFound");
			Strings.stringIDs.Add(1819604532U, "CouldNotFindMailboxDatabaseById");
			Strings.stringIDs.Add(24533818U, "MobileDeviceLogEMailFailure");
			Strings.stringIDs.Add(2213042884U, "SetupProgressGenericComponent");
			Strings.stringIDs.Add(1910710192U, "ErrorAuthentication");
			Strings.stringIDs.Add(2795454743U, "TenantNotificationVerboseSendingEmail");
			Strings.stringIDs.Add(2449740657U, "ErrorSettingErrorReportingEnabledtoNull");
			Strings.stringIDs.Add(2770526255U, "InfoOverallWarning");
			Strings.stringIDs.Add(2204861371U, "ErrorCannotRetrieveLocalForest");
			Strings.stringIDs.Add(2574649442U, "TenantNotificationVerboseNotSendingEmailPastDay");
			Strings.stringIDs.Add(277780160U, "PhoneNumberUsedByOthers");
			Strings.stringIDs.Add(1144873528U, "UnSupportedPermissionGroupsForEdge");
			Strings.stringIDs.Add(4043674320U, "ErrorMoveOabToTiFrondEndServer");
			Strings.stringIDs.Add(3117239164U, "ErrorJPEGFileTooBig");
			Strings.stringIDs.Add(2141139127U, "EdgeParameterNotValidOnHubRole");
			Strings.stringIDs.Add(4147328458U, "SetupProgressAutoGroupPermissions");
			Strings.stringIDs.Add(513638219U, "UmLanguagePackInvalidExtraction");
			Strings.stringIDs.Add(1539690042U, "Info_MessageItemHasBeenDeleted");
			Strings.stringIDs.Add(88947707U, "ErrorMailboxSearchStorageTransient");
			Strings.stringIDs.Add(2687598256U, "SetupProgressSyncAccountsEnabled");
			Strings.stringIDs.Add(537295937U, "ErrorEwsAllowListAndEwsBlockListSpecified");
			Strings.stringIDs.Add(865295007U, "ReplayServiceDisplayName");
			Strings.stringIDs.Add(1686462850U, "InterceptorErrorActionInvalid");
			Strings.stringIDs.Add(2183464741U, "ErrorMetadataMustBeAbsoluteUrl");
			Strings.stringIDs.Add(3780701529U, "ConnectorIncorrectUsageConnectorStillReferenced");
			Strings.stringIDs.Add(433327936U, "ResubmitRequestStateInvalid");
			Strings.stringIDs.Add(1037175036U, "CasHealthEasSyncDownTestItem");
			Strings.stringIDs.Add(1897752555U, "CasHealthOwaUrlAndCredentialsArgumentError");
			Strings.stringIDs.Add(1323904189U, "ExportFileNameMissing");
			Strings.stringIDs.Add(3065080461U, "DlpPolicyStateStateInvalid");
			Strings.stringIDs.Add(3051615604U, "SetServiceInstanceMapResultCodeUnknownError");
			Strings.stringIDs.Add(3621387192U, "SetupProgressUpgradeLegacyGlobalObjects");
			Strings.stringIDs.Add(2309238384U, "RolePublishingAuthor");
			Strings.stringIDs.Add(920938791U, "ConfirmationMessageRemoveMapiVirtualDirectory");
			Strings.stringIDs.Add(3787373033U, "SetupProgressAddSeverToDag");
			Strings.stringIDs.Add(3723166912U, "SetupProgressDisableWMIInbound");
			Strings.stringIDs.Add(2486066850U, "SetupProgressCreatingEdgeContainers");
			Strings.stringIDs.Add(2869755872U, "InterceptorConfirmDelayAction");
			Strings.stringIDs.Add(1453324876U, "RuleNameAlreadyExist");
			Strings.stringIDs.Add(3052282420U, "UsageTypeInternet");
			Strings.stringIDs.Add(381216251U, "ADAttributeZipCode");
			Strings.stringIDs.Add(3550551595U, "CertificateFound");
			Strings.stringIDs.Add(1484480947U, "MoveMailboxSourceCleanupTypeDeleteSourceNTAccount");
			Strings.stringIDs.Add(4273097132U, "ErrorSiteMailboxCannotLoadAddressTemplate");
			Strings.stringIDs.Add(3460801308U, "InfoDatacenterMode");
			Strings.stringIDs.Add(3989217663U, "ErrorCouldNotStartFullSyncForFirstOrg");
			Strings.stringIDs.Add(2851315938U, "ErrorPatternCannotEndWithWildcardMultiMatch");
			Strings.stringIDs.Add(4068899631U, "FormsAuthenticationDeleteMarkErrorPathNotFound");
			Strings.stringIDs.Add(180031276U, "ErrorFederatedIdentityandPasswordTogether");
			Strings.stringIDs.Add(4038565178U, "VerboseFixingRecipientsOnE12AdminGroup");
			Strings.stringIDs.Add(664667065U, "IncomingServerTooLong");
			Strings.stringIDs.Add(177272670U, "ErrorPublicFolderReferralIncludeSelf");
			Strings.stringIDs.Add(3320504571U, "ErrorEwsEnforceAllowListAndEwsBlockListSpecified");
			Strings.stringIDs.Add(2943002002U, "Error_EndDateCheck");
			Strings.stringIDs.Add(3806563425U, "HybridMailflowNoOrganizationError");
			Strings.stringIDs.Add(1457839961U, "ADAttributeHomePhoneNumber");
			Strings.stringIDs.Add(1797820726U, "NoFederationTrust");
			Strings.stringIDs.Add(386400541U, "ErrorSyncMailboxWithMasterAccountSidNull");
			Strings.stringIDs.Add(3061164332U, "ErrorCannotMovePublicFoldersFromDifferentSourceMailbox");
			Strings.stringIDs.Add(4143129766U, "Word");
			Strings.stringIDs.Add(1434682002U, "CasHealthOwaGetFbaPageNonOKCode");
			Strings.stringIDs.Add(170573252U, "ParameterErrorForInternetUsage");
			Strings.stringIDs.Add(3623745587U, "LanguagePackCfgDescription");
			Strings.stringIDs.Add(1281443429U, "UnifiedMessagingPrereqCheck");
			Strings.stringIDs.Add(4054043087U, "ReservedString2");
			Strings.stringIDs.Add(3623354108U, "ErrorRpcHttpInvalidSwitchCombo");
			Strings.stringIDs.Add(3287501662U, "CasHealthEasScenarioSyncTestItem");
			Strings.stringIDs.Add(117825870U, "MessageTypeVoicemail");
			Strings.stringIDs.Add(2331920480U, "UninstallMonitoringRoleDescription");
			Strings.stringIDs.Add(1264080170U, "ShouldSpecifyEitherIdentityOrMailbox");
			Strings.stringIDs.Add(2685432525U, "InvalidTemplate");
			Strings.stringIDs.Add(1048761747U, "ADAttributeCustomAttribute14");
			Strings.stringIDs.Add(2695346913U, "TenantExecutionNotSupported");
			Strings.stringIDs.Add(3666531412U, "SetupComponentStartingGatewayServices");
			Strings.stringIDs.Add(1607246833U, "ErrorModifyJournalArchiveAddress");
			Strings.stringIDs.Add(3777271156U, "MapiTransactionResultMdbMoved");
			Strings.stringIDs.Add(2837902138U, "UninstallMailboxRoleDescription");
			Strings.stringIDs.Add(3785106612U, "RepairUrgencyProhibited");
			Strings.stringIDs.Add(2343523210U, "ErrorCannotRestoreFromPublicToPrivateMailbox");
			Strings.stringIDs.Add(1301715689U, "ErrorMoveToDestinationFolderInvalid");
			Strings.stringIDs.Add(1361742503U, "InvalidOperationIdentityWithShowDeletion");
			Strings.stringIDs.Add(1698089187U, "ErrorTenantIsUpgrading");
			Strings.stringIDs.Add(2785027967U, "JournalingParameterErrorGccTenantSettingNotExist");
			Strings.stringIDs.Add(4220433130U, "LiveIdAuthenticationResultFailure");
			Strings.stringIDs.Add(3393259516U, "FDS_UM_PerfCountersComponentDescription");
			Strings.stringIDs.Add(3315552988U, "GzipLowDoesNotUseDynamicCompression");
			Strings.stringIDs.Add(1964968671U, "ProgressStatusFinished");
			Strings.stringIDs.Add(796416024U, "CouldNotFindObjectById");
			Strings.stringIDs.Add(1951165280U, "UMCallAnsweringRuleInvalidValue");
			Strings.stringIDs.Add(1083707598U, "StopReplService");
			Strings.stringIDs.Add(4037085182U, "ErrorNoMatchedUserFound");
			Strings.stringIDs.Add(3270764744U, "ErrorVirtualDirectoryNameNull");
			Strings.stringIDs.Add(534542334U, "ErrorDefaultHostedContentFilterPolicyCannotBeDeleted");
			Strings.stringIDs.Add(3468207191U, "SettingRequest");
			Strings.stringIDs.Add(1878646175U, "ErrorReportingEnabledLegalMessage");
			Strings.stringIDs.Add(3950782380U, "ClassificationRuleCollectionAlreadyExists");
			Strings.stringIDs.Add(3231976114U, "ExportFileNameShouldNotBeSet");
			Strings.stringIDs.Add(3882899654U, "ADAttributeState");
			Strings.stringIDs.Add(2283093077U, "PhoneNumberAllowedOnlyWithDialplanWithCountryCode");
			Strings.stringIDs.Add(1653262113U, "SetupComponentDataStorageConfiguration");
			Strings.stringIDs.Add(163354931U, "SetMailboxForwardingAddressConfirmationMessage");
			Strings.stringIDs.Add(2371482883U, "SetupProgressPermissionManagementEnabled");
			Strings.stringIDs.Add(4052366510U, "SetImap4ConfigurationTask");
			Strings.stringIDs.Add(766796983U, "ErrorSourceEndpointRequired");
			Strings.stringIDs.Add(735969708U, "LPPrepareInstallationSource");
			Strings.stringIDs.Add(2661979141U, "EADCWeakSourceCreds");
			Strings.stringIDs.Add(731066465U, "idCreateActiveSyncOraganizationSettings");
			Strings.stringIDs.Add(2469839629U, "ErrorPartnerApplicationEmptyRealmWhenNotUseAuthServer");
			Strings.stringIDs.Add(986846419U, "SetupProgressStoppingHTTPFilterService");
			Strings.stringIDs.Add(4253494883U, "Pop3ServiceDescription");
			Strings.stringIDs.Add(261580922U, "ErrorParametersRequiredForNewTenant");
			Strings.stringIDs.Add(385792810U, "ErrorBookmarkIndexOutOfRange");
			Strings.stringIDs.Add(1085159024U, "RetentionPolicyNotEnabled");
			Strings.stringIDs.Add(3250910474U, "ErrorRpcHttpMustSpecifyEitherInternalOrExternalHostName");
			Strings.stringIDs.Add(420398710U, "CompletePublicFolderMigrationBatchRequiresSourceLockDown");
			Strings.stringIDs.Add(3561171250U, "ErrorPublicFolderMigrationCompletedPreviously");
			Strings.stringIDs.Add(2772872006U, "DataMartTimeoutException");
			Strings.stringIDs.Add(1181325280U, "ProgressDeletingEdbFile");
			Strings.stringIDs.Add(1570002996U, "DebugStartSetDatabase");
			Strings.stringIDs.Add(4275861342U, "SearchServiceDisplayName");
			Strings.stringIDs.Add(2155767711U, "ErrorCannotOperateOnOrgInCurrentState");
			Strings.stringIDs.Add(1719064209U, "SetupProgressPerMBXPlanOWAPolicyEnabled");
			Strings.stringIDs.Add(421167968U, "SetupProgressStartingASUpdateService");
			Strings.stringIDs.Add(533423045U, "SetupProgressStartingWMIProviderService");
			Strings.stringIDs.Add(1424238063U, "InvalidRequestJob");
			Strings.stringIDs.Add(1340234760U, "MalboxFolderRightsFolderVisible");
			Strings.stringIDs.Add(3941297540U, "SuspendSgcTimeout");
			Strings.stringIDs.Add(1794306721U, "NonUniqueCategoryObject");
			Strings.stringIDs.Add(3908311118U, "SendConnectorValidTargetServerNotFound");
			Strings.stringIDs.Add(4274945649U, "WarningLegacyExchangeServer");
			Strings.stringIDs.Add(1461816102U, "IntegratedVDirDisabledWarning");
			Strings.stringIDs.Add(582063934U, "SetupProgressStoppingReplayService");
			Strings.stringIDs.Add(241712969U, "CasHealthOwaLogonScenarioDescription");
			Strings.stringIDs.Add(4253171919U, "AdminGroupsNotFoundException");
			Strings.stringIDs.Add(2532440427U, "DiscoveryMailboxDisplayName");
			Strings.stringIDs.Add(226086397U, "ErrorAssignmentMethodWithoutRoleAssignee");
			Strings.stringIDs.Add(4255815683U, "CasHealthCouldNotObtainFqdn");
			Strings.stringIDs.Add(1218462432U, "ErrorSetPasswordWithoutPermission");
			Strings.stringIDs.Add(4247430353U, "SetupProgressUpdateMailboxes");
			Strings.stringIDs.Add(3679340841U, "ErrorMissLinkedDomainController");
			Strings.stringIDs.Add(4287593485U, "CasHealthOwaGetLogoffStart");
			Strings.stringIDs.Add(1824522771U, "DebugEndCreateMemberRequest");
			Strings.stringIDs.Add(1872464746U, "SetupProgressNewTLSCertificate");
			Strings.stringIDs.Add(390386316U, "UninstallingMSExchangeFDS");
			Strings.stringIDs.Add(292732930U, "WarningLastPublicFolderDatabase");
			Strings.stringIDs.Add(3437030666U, "DNSRoutingEnabledMustBeSpecifiedForAuthMechanism");
			Strings.stringIDs.Add(3479749483U, "SetupProgressCreateModeratedRecipients");
			Strings.stringIDs.Add(4032370005U, "FileUploadServiceDisplayName");
			Strings.stringIDs.Add(2940137032U, "DegubStartConnectingToDomainServices");
			Strings.stringIDs.Add(488863134U, "InvalidMessageIdentity");
			Strings.stringIDs.Add(2545086143U, "ComplianceSearchTaskCreationError");
			Strings.stringIDs.Add(1295832983U, "ErrorSourceMailboxDatabaseVersionUnsupported");
			Strings.stringIDs.Add(2730360995U, "UninstallClientAccessIisWebServiceExtensions");
			Strings.stringIDs.Add(1873803728U, "UninstallExchangeStreamingOpticsTask");
			Strings.stringIDs.Add(2499030806U, "SetupComponentConfiguringCore");
			Strings.stringIDs.Add(2002903510U, "ADAttributeStreet");
			Strings.stringIDs.Add(2993918660U, "SmtpConnectivityNoneSucceeded");
			Strings.stringIDs.Add(2767568162U, "SetupComponentStartingMailboxServices");
			Strings.stringIDs.Add(318642788U, "FrontEndTransportServiceDescription");
			Strings.stringIDs.Add(577523851U, "InvalidPageSize");
			Strings.stringIDs.Add(531065537U, "SetupProgressCreateApplicationMailDestinationsContainer");
			Strings.stringIDs.Add(692347082U, "ProvisioningRequestAlreadyCanceling");
			Strings.stringIDs.Add(1574844528U, "SetupProgressStoppingCredentialService");
			Strings.stringIDs.Add(596322096U, "SetupProgressImapEnabled");
			Strings.stringIDs.Add(1369158086U, "ProgressValidation");
			Strings.stringIDs.Add(4216445905U, "ErrorRecipientContainerInvalidOrNotExists");
			Strings.stringIDs.Add(2063735667U, "DomainsNotFoundException");
			Strings.stringIDs.Add(872788106U, "SetupProgressCreateMoveToArchiveRetentionPolicyTag");
			Strings.stringIDs.Add(2954545082U, "FailedToFindFederationTrust");
			Strings.stringIDs.Add(3818749374U, "MailboxConnectScenario");
			Strings.stringIDs.Add(4201996528U, "ElcUserConfigurationConfigurationItemNotAvailable");
			Strings.stringIDs.Add(28165407U, "OutlookProtectionRuleInvalidPriority");
			Strings.stringIDs.Add(2616555063U, "CouldNotFindEWSStandardAuthBindingTransportElement");
			Strings.stringIDs.Add(133450481U, "SetupProgressCreateArbitrationMailboxRetentionPolicy");
			Strings.stringIDs.Add(3692329177U, "AddressRewriteIdentityNotFound");
			Strings.stringIDs.Add(30730169U, "ErrorFailedToGetRacAndClcTenant");
			Strings.stringIDs.Add(1056311972U, "RemoveCertificateFederation");
			Strings.stringIDs.Add(2034871165U, "ErrorWMAFileTooBig");
			Strings.stringIDs.Add(1377545169U, "ADAttributeCustomAttribute3");
			Strings.stringIDs.Add(1499192082U, "IMSAdminHelperGetDataPathsCouldNotAllocateException");
			Strings.stringIDs.Add(784747152U, "CasHealthMustSpecifyCas");
			Strings.stringIDs.Add(2311033855U, "ConfirmationMessageSetSupervisionPolicy");
			Strings.stringIDs.Add(467522453U, "ErrorSetMailboxLitigationHoldDuration");
			Strings.stringIDs.Add(2485903499U, "AddressBookServiceDisplayName");
			Strings.stringIDs.Add(3342681064U, "MigrationNoLargeItemLimitForLocalBatches");
			Strings.stringIDs.Add(59123757U, "SetupProgressConfigureAntispamObjects");
			Strings.stringIDs.Add(3367615085U, "ADAttributeDepartment");
			Strings.stringIDs.Add(3295799601U, "ErrorFreeBusyResponsibility");
			Strings.stringIDs.Add(1920246746U, "SetupComponentCommonGlobalConfig");
			Strings.stringIDs.Add(3214028675U, "MetabaseSetPropertiesFailure");
			Strings.stringIDs.Add(350309502U, "ErrorLinkedMailboxesAreNotSupported");
			Strings.stringIDs.Add(3930521376U, "ExchangeSettingsEnableUsage");
			Strings.stringIDs.Add(1649334496U, "DebugStartUpnUniquenessCheck");
			Strings.stringIDs.Add(574372347U, "MigrationCannotBeCompleted");
			Strings.stringIDs.Add(1904936963U, "IsapiDLLPathNotFoundException");
			Strings.stringIDs.Add(2522223732U, "MtrtMessageFail");
			Strings.stringIDs.Add(3694845743U, "CannotRemoveSharingPolicyWithUsersAssigned");
			Strings.stringIDs.Add(1485874038U, "MissingDataClassificationsParameter");
			Strings.stringIDs.Add(882462221U, "Debug");
			Strings.stringIDs.Add(2158213497U, "ErrorFromSyncClientAndMembersUsedTogether");
			Strings.stringIDs.Add(161711511U, "NoAction");
			Strings.stringIDs.Add(222253302U, "ErrorSuspendWRTCForOnlineOnly");
			Strings.stringIDs.Add(1533807700U, "ErrorMinimumAccountExpiry");
			Strings.stringIDs.Add(3367745963U, "ComInteropTlbNotFound");
			Strings.stringIDs.Add(1442001356U, "InstallContentIndexingServiceTask");
			Strings.stringIDs.Add(2361559256U, "SetupComponentSMTPConfiguration");
			Strings.stringIDs.Add(906204482U, "InvalidOrganization");
			Strings.stringIDs.Add(2291874325U, "SyncNowAlreadyStartedException");
			Strings.stringIDs.Add(3812135455U, "WarningPropertiesIgnored");
			Strings.stringIDs.Add(3862568128U, "MoveMailboxGenerateWatsonDump");
			Strings.stringIDs.Add(815668002U, "AuthenticationMethodFba");
			Strings.stringIDs.Add(3850237910U, "WarningGeneratingMailboxIsNullOABWillNotBeGenerated");
			Strings.stringIDs.Add(1520502444U, "WarningForceMessage");
			Strings.stringIDs.Add(3119406771U, "SetupProgressCreateRBACContainer");
			Strings.stringIDs.Add(1122863290U, "MetadataPropertyIsWhiteSpaceOrContainsWhiteSpacePrefixOrSuffix");
			Strings.stringIDs.Add(4040765572U, "InvalidStartAndEndTime");
			Strings.stringIDs.Add(4135619444U, "CasHealthOwaUrlAndCasArgumentError");
			Strings.stringIDs.Add(2494275330U, "WarnAboutStarAcceptedDomain");
			Strings.stringIDs.Add(2071494620U, "NoTPDsImported");
			Strings.stringIDs.Add(1741046566U, "SetupProgressCleanEmptyDirs");
			Strings.stringIDs.Add(3879378277U, "SearchServiceDescription");
			Strings.stringIDs.Add(2801279682U, "SetupComponentPostSetupBridgehead");
			Strings.stringIDs.Add(1756765869U, "ProgressSavingADObject");
			Strings.stringIDs.Add(1928317617U, "TenantOrganizationMissing2");
			Strings.stringIDs.Add(4085285360U, "MultipleCoexistenceDomainsFoundException");
			Strings.stringIDs.Add(3468299751U, "ErrorNotEnoughPermissions");
			Strings.stringIDs.Add(963382869U, "CasHealthOwaGetAuthSucceeded");
			Strings.stringIDs.Add(379322642U, "ErrorCannotUnlinkMailboxPlanForTenant");
			Strings.stringIDs.Add(2954647688U, "FDServiceDisplayName");
			Strings.stringIDs.Add(867272512U, "CasHealthUserNameHeader");
			Strings.stringIDs.Add(248554005U, "ErrorInboxRuleHasNoAction");
			Strings.stringIDs.Add(2162195429U, "ErrorNotSupportInCrossOrg");
			Strings.stringIDs.Add(3931432863U, "VerboseSyncTaskNullCookie");
			Strings.stringIDs.Add(3040152642U, "SetupdProgressPrivacyLink");
			Strings.stringIDs.Add(3017742918U, "SetupProgressTemplateTenant");
			Strings.stringIDs.Add(2524348032U, "CasHealthOwaConnectionError");
			Strings.stringIDs.Add(3804447234U, "SetupProgressStoppingInformationStoreService");
			Strings.stringIDs.Add(1498335696U, "SetupProgressGatewayPerfCounters");
			Strings.stringIDs.Add(920999072U, "FailedToUnregisterContentIndexingBinaries");
			Strings.stringIDs.Add(3415113328U, "CreateDefaultActiveSyncMailboxPolicy");
			Strings.stringIDs.Add(2110592425U, "SetupProgressCreateAutoDiscoverContainer");
			Strings.stringIDs.Add(640336054U, "FBAServiceDescription");
			Strings.stringIDs.Add(3665160963U, "AirSyncReportingProgressActivity");
			Strings.stringIDs.Add(3640701559U, "SetupProgressStoppingExchangeMGMTService");
			Strings.stringIDs.Add(3023752340U, "TaskBothConfigurationOnlyAndQuorumOnlySpecified");
			Strings.stringIDs.Add(2676557537U, "ErrorCorruptFederationMetadata");
			Strings.stringIDs.Add(899504670U, "SetupProgressCreateAutoGroup");
			Strings.stringIDs.Add(674748907U, "SetupProgressCleanupFiles");
			Strings.stringIDs.Add(3478112858U, "CasHealthWebAppNoCasMbxUmHtArgumentError");
			Strings.stringIDs.Add(3677088551U, "SetupProgressStoppingSystemAttendantService");
			Strings.stringIDs.Add(1843600203U, "ErrorBPAMoreThanOnePrereqServerSpecified");
			Strings.stringIDs.Add(3418928659U, "ErrorDotNetInstallPathNotFound");
			Strings.stringIDs.Add(1880877723U, "InstallImap4BeServiceTask");
			Strings.stringIDs.Add(4240176319U, "MigrationMustSpecifyEmailOrMailboxDN");
			Strings.stringIDs.Add(1465077572U, "CannotLocateTargetServiceEndpoint");
			Strings.stringIDs.Add(362822361U, "UnregisterFilterFailed");
			Strings.stringIDs.Add(3201264196U, "RegSvr32FailedToExit");
			Strings.stringIDs.Add(2773342531U, "ComplianceAuditServiceNotUninstalled");
			Strings.stringIDs.Add(3914082886U, "SetupProgressUninstallTransportLogSearchService");
			Strings.stringIDs.Add(2879434796U, "SetupProgressDisableFastSearchSeedingPortRule");
			Strings.stringIDs.Add(640518096U, "GlobalLocatorServiceResultSuccess");
			Strings.stringIDs.Add(3548951548U, "DagNetworkInconsistentRoleException");
			Strings.stringIDs.Add(3295286714U, "SetInstallPathInAppConfig");
			Strings.stringIDs.Add(2320102244U, "ConfirmationMessageRemoveAutodiscoverVirtualDirectory");
			Strings.stringIDs.Add(1874104103U, "DomainControllerName");
			Strings.stringIDs.Add(2631968966U, "UninstallADTopologyServiceTask");
			Strings.stringIDs.Add(2887275141U, "SmtpConnectivityAllTested");
			Strings.stringIDs.Add(1174103519U, "ErrorInboxRuleNotSupported");
			Strings.stringIDs.Add(2666067648U, "Verbose");
			Strings.stringIDs.Add(998944703U, "ContinueToRemoveHoldForInactive");
			Strings.stringIDs.Add(2363277368U, "CasHealthLatencyHeader");
			Strings.stringIDs.Add(2182511137U, "ADAttributeFaxNumber");
			Strings.stringIDs.Add(4242268310U, "SetupProgressCreateOutlookContainer");
			Strings.stringIDs.Add(195087670U, "InvalidCategoryObject");
			Strings.stringIDs.Add(3886507265U, "OfficeDataLoaderServiceDisplayName");
			Strings.stringIDs.Add(1353995902U, "MoveStatusSucceeded");
			Strings.stringIDs.Add(1546277393U, "LoadCredentialsSuccess");
			Strings.stringIDs.Add(2631471741U, "LegacyIncludeOriginalMailParameterWillBeUpgraded");
			Strings.stringIDs.Add(3725160909U, "FileShareQuorumCheckDesc");
			Strings.stringIDs.Add(2928336084U, "ClientAccessComponentDescription");
			Strings.stringIDs.Add(928033673U, "StopADTopologyService");
			Strings.stringIDs.Add(872037930U, "ErrorCannotChangeRoleGroupType");
			Strings.stringIDs.Add(1020220U, "ErrorInvalidCasting");
			Strings.stringIDs.Add(3437177865U, "SetupProgressCreatingNewPublicFolderDatabase");
			Strings.stringIDs.Add(3327710720U, "SortedAvailablePatches");
			Strings.stringIDs.Add(2038537031U, "WarningSetMailboxLitigationHoldDuration");
			Strings.stringIDs.Add(343634016U, "ADUserIsMissingData");
			Strings.stringIDs.Add(3219751466U, "ExpiryCertMessage");
			Strings.stringIDs.Add(2978007281U, "ContentIndexAlreadyExists");
			Strings.stringIDs.Add(2460780396U, "ImportCertificateBase64DataInvalid");
			Strings.stringIDs.Add(2469672135U, "InfoUL");
			Strings.stringIDs.Add(3855259485U, "ErrorLocalMachineIsNotExchangeServer");
			Strings.stringIDs.Add(349869371U, "ErrorEwsEnforceBlockListAndEwsAllowListSpecified");
			Strings.stringIDs.Add(2062290861U, "MoveMailboxSourceCleanupTypeCreateSourceContact");
			Strings.stringIDs.Add(1971406120U, "MRSHealthPassed");
			Strings.stringIDs.Add(1453329754U, "ErrorAccessingTransportSettings");
			Strings.stringIDs.Add(1846483964U, "PopImapLoggingOff");
			Strings.stringIDs.Add(332094276U, "ConfirmationMessageRemoveProvisioningWebServiceVirtualDirectory");
			Strings.stringIDs.Add(205573600U, "MtrtMessageSubmitDetailMessage");
			Strings.stringIDs.Add(3906240272U, "TheOnlySourceMailboxIsTheTargetMailbox");
			Strings.stringIDs.Add(126744571U, "UnifiedMessagingRoleDisplayName");
			Strings.stringIDs.Add(1510867730U, "TpdAlreadyImported");
			Strings.stringIDs.Add(1468831408U, "SetupProgressStoppingNotificationsBrokerService");
			Strings.stringIDs.Add(3641402715U, "CannotBypassDomainNameValidation");
			Strings.stringIDs.Add(1289162260U, "InitialOrIncrementalMigrationArgument");
			Strings.stringIDs.Add(2183205705U, "VerboseBeginFingerprint");
			Strings.stringIDs.Add(2774892227U, "MailboxReplicationServiceNotRunning");
			Strings.stringIDs.Add(3099642004U, "AddressBookServiceDescription");
			Strings.stringIDs.Add(2462782643U, "MonitoringCorrelationServiceDescription");
			Strings.stringIDs.Add(1325930305U, "ErrorCannotRetrieveLocalSite");
			Strings.stringIDs.Add(1390596538U, "SetupProgressDiscoveryMailboxes");
			Strings.stringIDs.Add(1525201652U, "ErrorApprovalApplicationIdentityUnsupported");
			Strings.stringIDs.Add(3997887818U, "CasHealthOwaInternalTrustCertificate");
			Strings.stringIDs.Add(3297360946U, "EnableCertificateServiceNotInstalled");
			Strings.stringIDs.Add(369010750U, "SetupProgressCreateOutlookProtectionRulesContainer");
			Strings.stringIDs.Add(2836471846U, "MailboxReplicationServiceIsRunning");
			Strings.stringIDs.Add(3403924458U, "PolicyNeededForAutotagging");
			Strings.stringIDs.Add(2088391844U, "CasHealthOwaLogonScenarioName");
			Strings.stringIDs.Add(2256240594U, "RemoveSecondaryDomainDescription");
			Strings.stringIDs.Add(1225301128U, "SetupProgressSkipResetPasswordOnFirstLogonEnabled");
			Strings.stringIDs.Add(2799440992U, "RejectMessageParameterWillBeIgnored");
			Strings.stringIDs.Add(934287899U, "ReplayLagStatusLabelConfigured");
			Strings.stringIDs.Add(3487518861U, "WarningTooManyLegacyGALsCreated");
			Strings.stringIDs.Add(1803359682U, "ErrorLegacyPublicFolderDatabaseExist");
			Strings.stringIDs.Add(3014123757U, "UninstallMailboxTransportDeliveryServiceTask");
			Strings.stringIDs.Add(703660436U, "LiveIdAuthenticationResultUndefined");
			Strings.stringIDs.Add(2198248626U, "AspnetConfigFileNotFound");
			Strings.stringIDs.Add(3520531162U, "CannotMoveOabToE15OrLaterServer");
			Strings.stringIDs.Add(2910100378U, "ErrorNotSupportedModifyMultivaluedProperties");
			Strings.stringIDs.Add(2531302401U, "RuleCollectionInvalid");
			Strings.stringIDs.Add(433694853U, "IsNetlogonRunningScenario");
			Strings.stringIDs.Add(2523315401U, "TestCNGPrivateKeyNotSupported");
			Strings.stringIDs.Add(3719036545U, "Info_MessageItemHasBeenCreated");
			Strings.stringIDs.Add(1226169742U, "SetupProgressCleanManagement");
			Strings.stringIDs.Add(4209927473U, "ErrorSystemAttendantObjectMissing");
			Strings.stringIDs.Add(1466544691U, "InvalidAction");
			Strings.stringIDs.Add(2037665150U, "NewServiceConnectionPointInvalidParameters");
			Strings.stringIDs.Add(1441009660U, "OauthIsTurnedOff");
			Strings.stringIDs.Add(2041792354U, "AutoDiscoverUrlIsBad");
			Strings.stringIDs.Add(691468660U, "ErrorLocalAccountPartitionRequiredForTT");
			Strings.stringIDs.Add(536922083U, "InvalidFqdnFromAD");
			Strings.stringIDs.Add(478157661U, "VerboseStartAuditLogSearch");
			Strings.stringIDs.Add(307758658U, "CasHealthCalendarLongName");
			Strings.stringIDs.Add(671469622U, "ErrorWhileFolderSync");
			Strings.stringIDs.Add(2976017118U, "Pop3ServiceDisplayName");
			Strings.stringIDs.Add(57133306U, "ErrorGetSyncDeletedRecipientRetryFailed");
			Strings.stringIDs.Add(1794509022U, "ErrorChangingBadwordsTransportRule");
			Strings.stringIDs.Add(3636625232U, "DatacenterEnvironmentOnlyOperationException");
			Strings.stringIDs.Add(2284358260U, "RemoveOrganizationFailWithExistingMailboxes");
			Strings.stringIDs.Add(310110990U, "ErrorFederationEnabledIsImmutable");
			Strings.stringIDs.Add(3043193198U, "SetupComponentConfiguringInformationStore");
			Strings.stringIDs.Add(855500179U, "PopImapComponentDescription");
			Strings.stringIDs.Add(3924025634U, "MoveMailboxSourceCleanupTypeDeleteSourceMailbox");
			Strings.stringIDs.Add(302613486U, "ReplayLagStatusLabelEnabled");
			Strings.stringIDs.Add(1777480851U, "FileDistributionServiceControlComponentDescription");
			Strings.stringIDs.Add(2388930131U, "VerboseVerifyRecipientViewRootSucceed");
			Strings.stringIDs.Add(2499808701U, "NewOrganizationDescription");
			Strings.stringIDs.Add(3347295290U, "ArchiveConnectivityResultPrimaryFailure");
			Strings.stringIDs.Add(2993783194U, "ConfirmationMessageEnableAntiSpamUpdates");
			Strings.stringIDs.Add(3791304781U, "WarningUseConfigurationOnly");
			Strings.stringIDs.Add(2888337457U, "IsapiExtensionMustHavePhysicalPathException");
			Strings.stringIDs.Add(3051861517U, "SetMailboxSearchActivity");
			Strings.stringIDs.Add(748775328U, "SetupProgressCreateFederationContainer");
			Strings.stringIDs.Add(204171309U, "ExchangeTracingProviderInstalledSuccess");
			Strings.stringIDs.Add(3571315384U, "SetupProgressStartingServiceHostService");
			Strings.stringIDs.Add(2383416297U, "MigrationStartAfterIncorrectMigrationType");
			Strings.stringIDs.Add(531644470U, "SetupProgressCreateRulesContainer");
			Strings.stringIDs.Add(446352617U, "ThrottlingServiceDisplayName");
			Strings.stringIDs.Add(4208434869U, "CasHealthTestNewUserDataCenterScriptName");
			Strings.stringIDs.Add(1406904313U, "MtrtModerateMessageByManager");
			Strings.stringIDs.Add(1372186092U, "CasHealthInstructResetCredentials");
			Strings.stringIDs.Add(3029376667U, "ErrorInvalidDlpPolicyTemplateIdentity");
			Strings.stringIDs.Add(1140300925U, "RoleReviewer");
			Strings.stringIDs.Add(1700516872U, "StartSetupProcess");
			Strings.stringIDs.Add(1990198525U, "SMSMWIEnabledAllowedOnlyOnE164ConsumerDialplan");
			Strings.stringIDs.Add(2135255345U, "NoKeyInformationInImportedTrustedPublishingDomain");
			Strings.stringIDs.Add(418330348U, "ErrorOrganizationIdentityRequired");
			Strings.stringIDs.Add(1927181059U, "TransportSyncManagerServiceNotInstalled");
			Strings.stringIDs.Add(2827020246U, "ErrorMissingWindowsLiveIdHandler");
			Strings.stringIDs.Add(1363030539U, "MigrationJobCorrupted");
			Strings.stringIDs.Add(2950414539U, "SetupProgressCreateDSNContainerHierarcy");
			Strings.stringIDs.Add(2630227016U, "ErrorEndTimeSmallerThanStartTime");
			Strings.stringIDs.Add(3117364089U, "StoppingMonitoringService");
			Strings.stringIDs.Add(3900097179U, "MtrtAddCopyToRecipient");
			Strings.stringIDs.Add(910877028U, "SetupProgressCreateMailboxContainers");
			Strings.stringIDs.Add(230534278U, "SetupComponentCafeGlobalConfig");
			Strings.stringIDs.Add(52273023U, "ErrorDatabaseCountInServerExceedLimit");
			Strings.stringIDs.Add(3883167156U, "NoKeyIDTypeInImportedTrustedPublishingDomain");
			Strings.stringIDs.Add(3122739895U, "ErrorChangePartnerApplicationDirectTrust");
			Strings.stringIDs.Add(245723146U, "ProtectedServiceHostDisplayName");
			Strings.stringIDs.Add(2024633455U, "EcpAuthenticationNotMatchOwaWarning");
			Strings.stringIDs.Add(712435719U, "SetupProgressStartingSystemAttendantService");
			Strings.stringIDs.Add(2862785662U, "InterceptorErrorEventInvalid");
			Strings.stringIDs.Add(4219526338U, "NewPerfCounters");
			Strings.stringIDs.Add(2534963029U, "CalendarAnalysisMixedModeNotSupported");
			Strings.stringIDs.Add(472758664U, "MapiSubmitSystemProbeFail");
			Strings.stringIDs.Add(3414041514U, "FinishedUpdatingMFLFiles");
			Strings.stringIDs.Add(4222707329U, "FailedToChangeServiceConfig");
			Strings.stringIDs.Add(1166503263U, "JournalNdrMailboxWarning");
			Strings.stringIDs.Add(1777122322U, "DeleteOperation");
			Strings.stringIDs.Add(2154198407U, "TenantNotificationVerboseNotSendingEmailNoRecipients");
			Strings.stringIDs.Add(2765375592U, "InternalJournalRuleScope");
			Strings.stringIDs.Add(3649628048U, "TestMigrationServerConnectionFailed");
			Strings.stringIDs.Add(3520915432U, "CannotRemoveDefaultSharingPolicy");
			Strings.stringIDs.Add(3608246202U, "DatabaseOffline");
			Strings.stringIDs.Add(622543112U, "FileAlreadyExists");
			Strings.stringIDs.Add(4025218279U, "ErrorCannotLoadFingerprintCreator");
			Strings.stringIDs.Add(2349505779U, "VerboseChangeWinrmStartType");
			Strings.stringIDs.Add(3476101420U, "ConfiguringMailboxSystemAttendantDependentTasks");
			Strings.stringIDs.Add(4251301146U, "StartingMSExchangeFDS");
			Strings.stringIDs.Add(3588458122U, "ErrorInvalidExcludedCmdletPattern");
			Strings.stringIDs.Add(353738526U, "CasHealthTaskCasHasNoTopologySite");
			Strings.stringIDs.Add(3068214134U, "DisasterRecoveryGatewayRoleDescription");
			Strings.stringIDs.Add(3584192845U, "GlobalLocatorServiceResultUndefined");
			Strings.stringIDs.Add(1226048266U, "SetupProgressCustomScriptsEnabled");
			Strings.stringIDs.Add(1903193717U, "MessageTypeCalendaring");
			Strings.stringIDs.Add(4235097279U, "InstallRecoveryActionArbiterServiceTask");
			Strings.stringIDs.Add(595624881U, "InvalidNameOrDescriptionForDefaultLocale");
			Strings.stringIDs.Add(93941597U, "ErrorRoomPasswordMustBeSetWhenCreatingARoomADAccount");
			Strings.stringIDs.Add(3931018787U, "ExceptionProductInfoRequired");
			Strings.stringIDs.Add(3287357166U, "VerboseSucceedToPrepopulateCache");
			Strings.stringIDs.Add(2662348268U, "NotMailboxDatabase");
			Strings.stringIDs.Add(3572711316U, "Error_CheckClientInfo");
			Strings.stringIDs.Add(1236397787U, "DelegationTokenRequestSuccess");
			Strings.stringIDs.Add(2708098864U, "MOWADeviceTypePrefix");
			Strings.stringIDs.Add(4184366094U, "FFoDisablePrepareSct");
			Strings.stringIDs.Add(439240951U, "SetupProgressConfiguringOAB");
			Strings.stringIDs.Add(841216837U, "ErrorDefaultSpamConfigCannotBeDeleted");
			Strings.stringIDs.Add(3037105461U, "SetupComponentPreSetupFrontendTransport");
			Strings.stringIDs.Add(4110715451U, "SetupComponentPostSetupGateway");
			Strings.stringIDs.Add(2803101125U, "ValidatingTestCasConnectivityRunInstance");
			Strings.stringIDs.Add(3558380023U, "InstallTranscodingServiceEx");
			Strings.stringIDs.Add(1033795742U, "GlobalJournalRuleScope");
			Strings.stringIDs.Add(822308736U, "ActiveManagerCheckDesc");
			Strings.stringIDs.Add(358249099U, "SetupComponentConfigurationBridgehead");
			Strings.stringIDs.Add(3141727619U, "ClassificationRuleCollectionDecryptionFailure");
			Strings.stringIDs.Add(385783597U, "ProgressRestoringDatabaseStatus");
			Strings.stringIDs.Add(3789968890U, "CasHealthOwaTimeoutExternal");
			Strings.stringIDs.Add(3237406418U, "TestSearchCheckMailbox");
			Strings.stringIDs.Add(1194595183U, "SendConnectorDashdashAddressSpaceNotUnique");
			Strings.stringIDs.Add(3826931934U, "UninstallImap4BeServiceTask");
			Strings.stringIDs.Add(3985647980U, "CopyStatusDisconnectedAndHealthy");
			Strings.stringIDs.Add(717219190U, "WarningADServerSettingsUnchanged");
			Strings.stringIDs.Add(3254817118U, "CreateMailboxSession");
			Strings.stringIDs.Add(3130711463U, "ErrorNoNextCertificate");
			Strings.stringIDs.Add(1068084403U, "TokenValidationFailed");
			Strings.stringIDs.Add(3005712405U, "CannotCreateAuditLogSearchDueToSearchQuota");
			Strings.stringIDs.Add(3470766201U, "SavingCalendarLogs");
			Strings.stringIDs.Add(4096720402U, "ReplayServiceDescription");
			Strings.stringIDs.Add(863112602U, "ADAttributeNotes");
			Strings.stringIDs.Add(1264026888U, "SetupProgressLinkOutOfTheBoxMrmTags");
			Strings.stringIDs.Add(2720557853U, "InstallPop3ServiceTask");
			Strings.stringIDs.Add(3329534613U, "ErrorMailboxSearchStoragePermanent");
			Strings.stringIDs.Add(3137925175U, "ErrorCannotSetRecipientContainer");
			Strings.stringIDs.Add(1237939725U, "SmimeConfigAmbiguous");
			Strings.stringIDs.Add(3930981558U, "CasHealthOwaAuthResponseHeaderMissing");
			Strings.stringIDs.Add(2844363599U, "ErrorFailedRmsVersionCheck");
			Strings.stringIDs.Add(1685032169U, "ErrorParametersMandatory");
			Strings.stringIDs.Add(3242409340U, "ServiceHostServiceControlComponentDescription");
			Strings.stringIDs.Add(459738740U, "ErrorRefreshMetadataOptionNotAllowed");
			Strings.stringIDs.Add(2244149146U, "ErrorFailedToGetULEnterprise");
			Strings.stringIDs.Add(4132471740U, "InfoTpdFromRmsOnlineChecked");
			Strings.stringIDs.Add(2695169681U, "AuthenticationMethodNone");
			Strings.stringIDs.Add(1065601728U, "CasHealthOwaLogonFailed");
			Strings.stringIDs.Add(408932233U, "DelegateRoleTypeServerAdmin");
			Strings.stringIDs.Add(731624525U, "SetupProgressCreateMailboxPlan");
			Strings.stringIDs.Add(1147746662U, "OwaMetabaseGetPropertiesFailure");
			Strings.stringIDs.Add(2582405772U, "ErrorDatabaseOffline");
			Strings.stringIDs.Add(2413236052U, "SetupProgressCreatingNewMailboxDatabase");
			Strings.stringIDs.Add(3672835011U, "MailboxPrereqCheck");
			Strings.stringIDs.Add(3458987765U, "OnPremisesConfigurationObjectNotFound");
			Strings.stringIDs.Add(3892568161U, "RoleAuthor");
			Strings.stringIDs.Add(3571909379U, "PrepareDomainDescription");
			Strings.stringIDs.Add(2749659911U, "OwaNameParameterIgnored");
			Strings.stringIDs.Add(2336909403U, "ErrorInvalidPostMasterAddress");
			Strings.stringIDs.Add(838914092U, "SendConnectorDashdashSmarthostNotUnique");
			Strings.stringIDs.Add(3886180752U, "InvalidDlpPolicyParameter");
			Strings.stringIDs.Add(487743183U, "UninstallBridgeheadRoleDescription");
			Strings.stringIDs.Add(3783722197U, "OldVersionMailboxSkipped");
			Strings.stringIDs.Add(3731283738U, "CannotRemoveUMCertificate");
			Strings.stringIDs.Add(2845114771U, "SetupProcessCreateDefaultDataClassificationConfig");
			Strings.stringIDs.Add(2520624322U, "PhoneNumberInvalidLength");
			Strings.stringIDs.Add(250472943U, "ErrorPathTooLong");
			Strings.stringIDs.Add(3383748791U, "CertificateStatusRevocationCheckFailure");
			Strings.stringIDs.Add(3244203554U, "MoveMailboxSourceCleanupTypeNone");
			Strings.stringIDs.Add(2284227198U, "ConfirmationMessageTestFederationTrustCertificate");
			Strings.stringIDs.Add(1401920462U, "ConfirmationMessageRemoveMicrosoftExchangeRecipient");
			Strings.stringIDs.Add(3914981870U, "ScenarioAutoDiscoverSoapProvider");
			Strings.stringIDs.Add(3642085168U, "CouldNotFindEWSStandardAuthBinding");
			Strings.stringIDs.Add(2303334587U, "CasHealthPortnumber");
			Strings.stringIDs.Add(1680424794U, "ErrorElcPolicyToPreE12");
			Strings.stringIDs.Add(2738624741U, "CasHealthEasScenarioFolderSync");
			Strings.stringIDs.Add(3505749236U, "ErrorMoveOabBetweenTwoTiServers");
			Strings.stringIDs.Add(2716009035U, "DiscoveryManagementSecurityGroupNotFound");
			Strings.stringIDs.Add(2849847834U, "ReleaseAgentBinaryReference");
			Strings.stringIDs.Add(4267871022U, "SetupComponentConfiguringMSARPSService");
			Strings.stringIDs.Add(3089160909U, "DisasterRecoveryBridgeheadRoleDescription");
			Strings.stringIDs.Add(1797920U, "SetupComponentConfiguringRpcProxy");
			Strings.stringIDs.Add(4141119452U, "VerboseFixingDynamicDistributionGroupFilterMetadata");
			Strings.stringIDs.Add(2694277878U, "SetupProgressEnableWMIOutbound");
			Strings.stringIDs.Add(2374542673U, "EmptySearchQuery");
			Strings.stringIDs.Add(1029533142U, "CasHealthOwaReturnedErrorPage");
			Strings.stringIDs.Add(979072870U, "SpecifiedOUNotUnique");
			Strings.stringIDs.Add(1294778787U, "ErrorNoDefaultMailTipTranslationSpecified");
			Strings.stringIDs.Add(4036417902U, "SetupProgressTeamMailboxCountQuota");
			Strings.stringIDs.Add(1845875730U, "ErrorPartnerApplicationRealmNotFoundInAuthServer");
			Strings.stringIDs.Add(2447683441U, "ExchangeTrustedSubsystemDescription");
			Strings.stringIDs.Add(364234330U, "InstallingLanguages");
			Strings.stringIDs.Add(988376401U, "CannotOnlySpecifyCredential");
			Strings.stringIDs.Add(212774136U, "FrontendTransportPrereqCheck");
			Strings.stringIDs.Add(2272693956U, "SettingMoveRequest");
			Strings.stringIDs.Add(1996694683U, "TenantGuidNotIdentified");
			Strings.stringIDs.Add(784370740U, "InfoTemplate");
			Strings.stringIDs.Add(4142133581U, "AllGroupMembers");
			Strings.stringIDs.Add(3726632542U, "JournalNdrMailboxInJournalRuleJournalEmailAddress");
			Strings.stringIDs.Add(667561628U, "SetupComponentConfiguringGatewaySettings");
			Strings.stringIDs.Add(508689909U, "AuthenticationMethodBasic");
			Strings.stringIDs.Add(404165634U, "SetupComponentConfiguringContentIndexing");
			Strings.stringIDs.Add(808776120U, "OperationNotAllowed");
			Strings.stringIDs.Add(3080147272U, "EnableMessageHistory");
			Strings.stringIDs.Add(3690733839U, "NoFoldersInMailbox");
			Strings.stringIDs.Add(3533711711U, "WarningInternalLicensingDisabled");
			Strings.stringIDs.Add(3955111949U, "MapiTransactionDiagnosticTargetDatabaseNotAttached");
			Strings.stringIDs.Add(2197368288U, "BridgeheadExchangeCertificateComponentDescription");
			Strings.stringIDs.Add(1280818475U, "CatchAllRecipientNotAllowedForNonAuthoritativeAcceptedDomains");
			Strings.stringIDs.Add(876326020U, "UninstallMomConnectorServiceTask");
			Strings.stringIDs.Add(3230913595U, "ExsetdataOrganizationName");
			Strings.stringIDs.Add(2755453831U, "ErrorAccountDisabledForUserMailbox");
			Strings.stringIDs.Add(3362908635U, "SetupProgressStoppingUMService");
			Strings.stringIDs.Add(3964929519U, "ErrorFailedToGetULTenant");
			Strings.stringIDs.Add(4077893373U, "CasHealthOwaAuthFailInternal");
			Strings.stringIDs.Add(404966124U, "InstallMigrationWorkflowServiceTask");
			Strings.stringIDs.Add(2428243352U, "ActiveDirectorySearchViaADDriverScenario");
			Strings.stringIDs.Add(835092827U, "ADTopologyServiceDescription");
			Strings.stringIDs.Add(450527367U, "GetHealthReportProgressFinished");
			Strings.stringIDs.Add(3481422259U, "DatabaseChecksFailed");
			Strings.stringIDs.Add(3655046083U, "CopyStatusDisconnectedAndResynchronizing");
			Strings.stringIDs.Add(1653552528U, "ErrorEwsValidatorFailed");
			Strings.stringIDs.Add(1137715195U, "IPListEntryTypeMismatch");
			Strings.stringIDs.Add(832308282U, "OrganizationWide");
			Strings.stringIDs.Add(2028770649U, "ErrorNonExistentDefaultContactsFolder");
			Strings.stringIDs.Add(314238422U, "CustomCannotBeUsedForPermissionGroups");
			Strings.stringIDs.Add(2794545475U, "MapiTransactionAbortedMsg");
			Strings.stringIDs.Add(1689076287U, "ErrorDefaultHostedConnectionFilterPolicyCannotBeDeleted");
			Strings.stringIDs.Add(2484407530U, "CertAuthWithoutSSLError");
			Strings.stringIDs.Add(3221965754U, "NeedEitherAssemblyPathOrName");
			Strings.stringIDs.Add(3874701191U, "CannotFindTestUser");
			Strings.stringIDs.Add(2484130891U, "MalboxFolderRightsEditAllItems");
			Strings.stringIDs.Add(2502489235U, "CertificateStatusPendingRequest");
			Strings.stringIDs.Add(2626534131U, "AddressRewriteExternalAddressExists");
			Strings.stringIDs.Add(2951010618U, "ErrorMoveDatabasePathInvalidOnReplicated");
			Strings.stringIDs.Add(2832128882U, "CasTransactionResultFailure");
			Strings.stringIDs.Add(3816006969U, "RoleOwner");
			Strings.stringIDs.Add(3581069082U, "ConfirmationMessageTestIRMConfiguration");
			Strings.stringIDs.Add(3708149033U, "RejectMessageActionMustBeTheOnlyAction");
			Strings.stringIDs.Add(4050757435U, "VerboseIgnoreDefaultScope");
			Strings.stringIDs.Add(3988131606U, "InstallFreeBusyFolderAlreadyExists");
			Strings.stringIDs.Add(1452889642U, "ADAttributeUserLogonName");
			Strings.stringIDs.Add(1662594798U, "CertificateStatusInvalid");
			Strings.stringIDs.Add(2375600040U, "NewDagCompletedSuccessfully");
			Strings.stringIDs.Add(1848155062U, "Error_CheckClientIntent");
			Strings.stringIDs.Add(3726385721U, "MediumPriorityChecksFailed");
			Strings.stringIDs.Add(279800153U, "ConfirmationMessageSetHybridMailflow");
			Strings.stringIDs.Add(3721169246U, "BPATestSystemHealthTaskName");
			Strings.stringIDs.Add(1463063580U, "ErrorMissingNetIDWhenBypassWLID");
			Strings.stringIDs.Add(1408328594U, "InvalidFqdn");
			Strings.stringIDs.Add(4074802050U, "ErrorExecutingUserIsNull");
			Strings.stringIDs.Add(3947810800U, "MapiTransactionErrorMsgNoMailboxMdbDismounted");
			Strings.stringIDs.Add(132709086U, "NotEnoughPrioritiesAvailable");
			Strings.stringIDs.Add(3816781481U, "InformationSkippedAsForAutodiscover");
			Strings.stringIDs.Add(2123565360U, "ErrorTargetServicePlanHasNoMatchingMailboxPlan");
			Strings.stringIDs.Add(1188336490U, "InvalidSubscriptionFile");
			Strings.stringIDs.Add(3400182072U, "TenantAlreadyHasFinalizedMigration");
			Strings.stringIDs.Add(2405332414U, "ErrorCouldNotFindMigrationEndpoint");
			Strings.stringIDs.Add(2204523380U, "WillContinueProcessing");
			Strings.stringIDs.Add(4031371403U, "ScenarioExchangeWebServices");
			Strings.stringIDs.Add(1123438282U, "FDS_GM_PerfCountersComponentDescription");
			Strings.stringIDs.Add(2589611372U, "AssistantsServiceDescription");
			Strings.stringIDs.Add(3302502416U, "SetupProgressMaxReceiveTransportQuota");
			Strings.stringIDs.Add(714510073U, "FailedToRetrieveAuditLogSearch");
			Strings.stringIDs.Add(3600528589U, "ADAttributeCountry");
			Strings.stringIDs.Add(3698488318U, "MapiTransactionResultFailure");
			Strings.stringIDs.Add(4171039939U, "RemoveResubmiRequestMessage");
			Strings.stringIDs.Add(981821282U, "CasHealthOwaPingScenarioDescription");
			Strings.stringIDs.Add(4188600390U, "DlpPolicyContainsEmptyKeywords");
			Strings.stringIDs.Add(1653862842U, "RoleDoesNotSupportExchangeCertificateTasksException");
			Strings.stringIDs.Add(3457665177U, "RunningAspNetRegIis");
			Strings.stringIDs.Add(172756948U, "MultipleOnPremisesOrganizationsFoundException");
			Strings.stringIDs.Add(4077307460U, "SetupProgressStoppingTransportLogSearchService");
			Strings.stringIDs.Add(1765158362U, "CopyStatusFailedAndSuspended");
			Strings.stringIDs.Add(313226775U, "ErrorStorageMailboxDatabaseVersionUnsupported");
			Strings.stringIDs.Add(1282955967U, "ProvisioningRequestAlreadyStarted");
			Strings.stringIDs.Add(827778289U, "CasHealthOwaDoLanguageSelection");
			Strings.stringIDs.Add(1272200597U, "SetupProgressStartingW3SVCService");
			Strings.stringIDs.Add(2888966445U, "NotFederated");
			Strings.stringIDs.Add(1645878456U, "ImportDlpPolicyFileDataIsNull");
			Strings.stringIDs.Add(300076344U, "SetupProgressCreateDefaultOWAMailboxPolicy");
			Strings.stringIDs.Add(1790949389U, "StartPostFileCopyDescription");
			Strings.stringIDs.Add(148851043U, "ErrorNoAccountNamespace");
			Strings.stringIDs.Add(594514822U, "Imap4BeServiceDisplayName");
			Strings.stringIDs.Add(2129610537U, "MessageTypeOof");
			Strings.stringIDs.Add(3889527190U, "MtrtAddManagerAsRecipient");
			Strings.stringIDs.Add(3952057831U, "ErrorInvalidBase64String");
			Strings.stringIDs.Add(1865584991U, "ErrorSuspendCommentWithoutSuspend");
			Strings.stringIDs.Add(3400784257U, "CasHealthLatency");
			Strings.stringIDs.Add(1134594294U, "BridgeheadRoleDisplayName");
			Strings.stringIDs.Add(2683567092U, "ErrorEnterpriseOrgOutOfDate");
			Strings.stringIDs.Add(1646161068U, "ErrorElcUserConfigurationServiceCall");
			Strings.stringIDs.Add(3916272972U, "ErrorAssociatedUserMailboxExistInDC");
			Strings.stringIDs.Add(4118882660U, "ErrorPropertyParameter");
			Strings.stringIDs.Add(2865766755U, "ErrorMsnIsNotSupportedInEnterprise");
			Strings.stringIDs.Add(1813104937U, "LongAddressesEnabledOnEdge");
			Strings.stringIDs.Add(950609671U, "ComplianceAuditServiceDescription");
			Strings.stringIDs.Add(435421099U, "InfoRmsOnlineAuthenticationCertificateChecked");
			Strings.stringIDs.Add(3054507024U, "ErrorSoftDeletedParmatersConflict");
			Strings.stringIDs.Add(3476845520U, "DefaultGlobalAddressList");
			Strings.stringIDs.Add(3267662260U, "NoCASE15SP1ServersFoundException");
			Strings.stringIDs.Add(813640644U, "UnableToRetrieveArchivePolicyTag");
			Strings.stringIDs.Add(2415151346U, "ErrorParametersCannotHaveEmbeddedDot");
			Strings.stringIDs.Add(812478835U, "SetupProgressCreateAcceptedDomainsContainer");
			Strings.stringIDs.Add(3880512861U, "ContinueMountWhenDBFilesNotExist");
			Strings.stringIDs.Add(2781055473U, "ExceptionRetryIntervalInvalid");
			Strings.stringIDs.Add(2267758972U, "InvalidRuleName");
			Strings.stringIDs.Add(261889570U, "DetermineSourceMailbox");
			Strings.stringIDs.Add(2442798609U, "ProgressCopyingEdbFile");
			Strings.stringIDs.Add(3694944833U, "MoveStatusSkipped");
			Strings.stringIDs.Add(76607383U, "SetupProgressStartingHygieneUpdateService");
			Strings.stringIDs.Add(2022973157U, "IsIntegQueueFull");
			Strings.stringIDs.Add(1528176827U, "ErrorInvalidEndpointParameterReasonUsedForConnectionTest");
			Strings.stringIDs.Add(4133650633U, "StartPostSetupDescription");
			Strings.stringIDs.Add(447887202U, "StatusSpecifiedForProvisionedServer");
			Strings.stringIDs.Add(2444726760U, "DatabasesReplayKeepingUpCheckDesc");
			Strings.stringIDs.Add(1050054139U, "RemoveRuleSyncAcrossDifferentVersionsNeeded");
			Strings.stringIDs.Add(2062802331U, "LocalFederatedDomainsAreMissingFromTheRemoteOrganizationRelationsipDomains");
			Strings.stringIDs.Add(3186800467U, "DetailsTemplateMailboxAgent");
			Strings.stringIDs.Add(2218121730U, "CalendarNotificationConfirmation");
			Strings.stringIDs.Add(2638175612U, "InstallComplianceServiceTask");
			Strings.stringIDs.Add(3829198285U, "ErrorTpdCheckingFailed");
			Strings.stringIDs.Add(3919059708U, "OpenDomainRoutingDisabled");
			Strings.stringIDs.Add(3326356690U, "BPALoadingLocalConfiguration");
			Strings.stringIDs.Add(4116327307U, "UninstallFfoPrimingServiceTask");
			Strings.stringIDs.Add(1006245152U, "SetupProgressStartingNotificationsBrokerService");
			Strings.stringIDs.Add(1449863534U, "ErrorCannotHavePrimaryInDatacenterAndArchiveOnPremise");
			Strings.stringIDs.Add(2829778253U, "MtrtRequireEncryption");
			Strings.stringIDs.Add(4083067559U, "ErrorFailedRmsVersionCheckInitialization");
			Strings.stringIDs.Add(1825525944U, "HybridMailflowInboundConnectorComment");
			Strings.stringIDs.Add(623586765U, "CopyStatusMounted");
			Strings.stringIDs.Add(121298733U, "CouldNotFindEWSService");
			Strings.stringIDs.Add(1384159399U, "ErrorNotEnoughInformationToFindUniqueRequest");
			Strings.stringIDs.Add(1907503788U, "DomainControllerNotSpecifiedException");
			Strings.stringIDs.Add(384890306U, "ErrorWebSiteNullOrEmpty");
			Strings.stringIDs.Add(2746111946U, "ProtectedServiceHostServiceControlComponentDescription");
			Strings.stringIDs.Add(2256278254U, "RemoveOrganizationFailWithSharedConfigurationBacklinks");
			Strings.stringIDs.Add(87194845U, "InternalTransportCertificateCorruptedInADOnHub");
			Strings.stringIDs.Add(508070510U, "ErrorNoDefaultPFDatabaseForTenant");
			Strings.stringIDs.Add(312913212U, "ExceptionPerfCounterInvalidDefinitionFile");
			Strings.stringIDs.Add(4277689054U, "PhoneNumberReachQuota");
			Strings.stringIDs.Add(248449646U, "SetupProgressInitializeExchangeConfigurationContainer");
			Strings.stringIDs.Add(899968010U, "ErrorUserNull");
			Strings.stringIDs.Add(2681771342U, "OrgIsntOptinError");
			Strings.stringIDs.Add(1580103065U, "SetupProgressMailPublicFolderCountQuota");
			Strings.stringIDs.Add(177812025U, "CannotRunDeliveryAgentConnectorTaskOnEdge");
			Strings.stringIDs.Add(1970632681U, "CouldNotGetExecutingUser");
			Strings.stringIDs.Add(1941112294U, "NoUpdatesDirectorySpecified");
			Strings.stringIDs.Add(193193577U, "SetupProgressDisableWMIOutbound");
			Strings.stringIDs.Add(199751719U, "ValidatingUserObject");
			Strings.stringIDs.Add(622930654U, "SetupProgressAddressListsEnabled");
			Strings.stringIDs.Add(4063229747U, "SetupComponentAllADRolesPrecompileManagementBinaries");
			Strings.stringIDs.Add(2115663408U, "NotifySenderAndRejectMessageShouldBeSingletonAction");
			Strings.stringIDs.Add(4104369074U, "ServiceNameAs");
			Strings.stringIDs.Add(2367546289U, "MultipleWebServicesExternalUrlsFound");
			Strings.stringIDs.Add(895980775U, "ErrorCannotRemoveMigrationUserFromPublicFolderBatch");
			Strings.stringIDs.Add(1397279617U, "RemoteContinuousReplication");
			Strings.stringIDs.Add(6301028U, "CasHealthOwaAuthMethodSeparator");
			Strings.stringIDs.Add(946664064U, "DagNetworkSubnetAssignmentIncomplete");
			Strings.stringIDs.Add(3404236667U, "GetPop3ConfigurationTask");
			Strings.stringIDs.Add(2578482429U, "UninstallTransportSyncManagerServiceTask");
			Strings.stringIDs.Add(4127908197U, "RegSvr32NotFound");
			Strings.stringIDs.Add(2369302933U, "RPSSvcNotRunning");
			Strings.stringIDs.Add(790081152U, "ConfirmationMessageUnconfigureWSManIISHosting");
			Strings.stringIDs.Add(3556665161U, "ConfirmationTestAssistantHealth");
			Strings.stringIDs.Add(1382192131U, "ErrorPerfcountersInvalid");
			Strings.stringIDs.Add(2720600917U, "ReplicationCheckWarningsLabel");
			Strings.stringIDs.Add(438361403U, "ElcUserConfigurationServiceBindingNotAvailable");
			Strings.stringIDs.Add(1249227945U, "UninstallFrontendTransportRoleDescription");
			Strings.stringIDs.Add(2409098904U, "SetupProgressStartingTransportSyncManagerService");
			Strings.stringIDs.Add(404296754U, "ErrorAlsEncounteredUnexpectedException");
			Strings.stringIDs.Add(2524982981U, "InvalidEventType");
			Strings.stringIDs.Add(2832690601U, "ErrorOffboardingDisabled");
			Strings.stringIDs.Add(2462705091U, "SetupProgressOwaSmsEnabled");
			Strings.stringIDs.Add(621468991U, "E4eLicensingIsDisabledEnableRule");
			Strings.stringIDs.Add(3142946342U, "IsNTDSRunningScenario");
			Strings.stringIDs.Add(2902028717U, "SetupProgressGenericPerfCounters");
			Strings.stringIDs.Add(1301020495U, "MomConnectorServiceDescription");
			Strings.stringIDs.Add(2892001738U, "ErrorCannotFindMoveRequestWithStatusNone");
			Strings.stringIDs.Add(1564322603U, "SendConnectorDashdashSmarthostNotOffEdge");
			Strings.stringIDs.Add(1954290077U, "ProgressCompleting");
			Strings.stringIDs.Add(3723147943U, "SetupProgressInstallTransportLogSearchService");
			Strings.stringIDs.Add(951795433U, "GetProtocolLogNeedsRecipients");
			Strings.stringIDs.Add(813491343U, "ClusterNetworkCheckDesc");
			Strings.stringIDs.Add(4099222219U, "SetupComponentConfiguringRpcClientAccessProtocol");
			Strings.stringIDs.Add(3862950059U, "ErrorWSManRegistryCorrupted");
			Strings.stringIDs.Add(696846567U, "InvalidTestAccountRequest");
			Strings.stringIDs.Add(1302065573U, "ErrorCannotFindTargetDeliveryDomain");
			Strings.stringIDs.Add(3319509477U, "MailboxRoleDisplayName");
			Strings.stringIDs.Add(2823472669U, "SetupComponentConfiguringInfoWorker");
			Strings.stringIDs.Add(1290199067U, "ClientAccessIisWebServiceExtensionsDescription");
			Strings.stringIDs.Add(2429358254U, "ErrorManageDelegation2ProofDomainOwnership");
			Strings.stringIDs.Add(404014232U, "CasHealthOwaFbaAuthTypeNotExpected");
			Strings.stringIDs.Add(3559101633U, "ImportCertificateDataInvalid");
			Strings.stringIDs.Add(1752382112U, "CannotSpecifyBothAllDomainsAndDomain");
			Strings.stringIDs.Add(740001268U, "RegisterComInteropTlbTask");
			Strings.stringIDs.Add(1440534643U, "ErrorThrottlingPolicyMustBeSpecified");
			Strings.stringIDs.Add(2147095286U, "NotifySenderActionRequiresMcdcPredicate");
			Strings.stringIDs.Add(2997921680U, "ErrorCannotDisableFederation");
			Strings.stringIDs.Add(3659149162U, "ConfirmationMessageAuthNewInProgress");
			Strings.stringIDs.Add(1638365639U, "SyncNowFailedToRunException");
			Strings.stringIDs.Add(141232568U, "CannotRemoveApprovalApplicationWithMailboxes");
			Strings.stringIDs.Add(3117240671U, "RuleNameAlreadyExists");
			Strings.stringIDs.Add(2476236185U, "DefaultAllModernGroups");
			Strings.stringIDs.Add(1178729042U, "RejectText");
			Strings.stringIDs.Add(2481283129U, "ErrorInvalidWMAFormat");
			Strings.stringIDs.Add(2344272450U, "PartialVerisonMatch");
			Strings.stringIDs.Add(2359011225U, "CasHealthOwaUriHeader");
			Strings.stringIDs.Add(2765443951U, "SetupProgressStartingMailboxAssistantService");
			Strings.stringIDs.Add(268688472U, "VerboseCreatePSFanInProvider");
			Strings.stringIDs.Add(607657692U, "JournalingParameterErrorFullReportWithoutGcc");
			Strings.stringIDs.Add(1469181716U, "MigrationSettingCompeteAfterWithCurrentCompleteAfterInLessThanOneHour");
			Strings.stringIDs.Add(1734288143U, "ErrorCannotGenerateSiteMailboxAlias");
			Strings.stringIDs.Add(2837997609U, "ResumeSgcTimeout");
			Strings.stringIDs.Add(3892071893U, "ProgressActivityNewFederationTrust");
			Strings.stringIDs.Add(268582115U, "ErrorOnboardingDisabled");
			Strings.stringIDs.Add(1990022743U, "CompletedAceActivity");
			Strings.stringIDs.Add(2301337168U, "ErrorSpecifyOrganizatonAndContainerBoth");
			Strings.stringIDs.Add(2018204159U, "UnableToRetrieveManagedFolder");
			Strings.stringIDs.Add(1492863700U, "AddressRewriteWildcardWarning");
			Strings.stringIDs.Add(2288135166U, "ForeignConnectorNullOrEmptyDropDirectory");
			Strings.stringIDs.Add(1967624551U, "SetupComponentConfiguringAddressBookService");
			Strings.stringIDs.Add(1042788951U, "ErrorTemplatesMayNotContainImmutableIds");
			Strings.stringIDs.Add(1724897479U, "AuthenticationMethodWindowsIntegrated");
			Strings.stringIDs.Add(3472707977U, "StartOrganizationUpgradeDescription");
			Strings.stringIDs.Add(1422915642U, "SetupProgressSyncAccountsMirroredAccountsEnabled");
			Strings.stringIDs.Add(1980863497U, "ErrorManagedByCannotBeEmpty");
			Strings.stringIDs.Add(3248052869U, "VerifyStoreServiceExists");
			Strings.stringIDs.Add(1379659384U, "DefaultUser");
			Strings.stringIDs.Add(1466854827U, "ErrorDumpsterTagWrongRetentionAction");
			Strings.stringIDs.Add(325513897U, "ErrorAuthCannotDeleteCurrent");
			Strings.stringIDs.Add(2357970530U, "ConfirmationMessageNewSearchDocumentFormat");
			Strings.stringIDs.Add(671509911U, "ServerLocatorServiceCheckDesc");
			Strings.stringIDs.Add(4027839955U, "AuthenticationMethodUnknown");
			Strings.stringIDs.Add(3080984634U, "FileDistributionServiceComponentDescription");
			Strings.stringIDs.Add(3004107700U, "MtrtMessageDefer");
			Strings.stringIDs.Add(342374076U, "OrganizationNotSpecified");
			Strings.stringIDs.Add(55296709U, "ErrorDlpPolicyNameOrTemplateParameterMustBeSpecified");
			Strings.stringIDs.Add(2813852905U, "NoValidIssuerCertificate");
			Strings.stringIDs.Add(2180704617U, "UninstallMigrationWorkflowServiceTask");
			Strings.stringIDs.Add(2707578357U, "MustSpecifyEitherAccessOrExtendedRightsException");
			Strings.stringIDs.Add(4069016795U, "RpcClientAccessServiceDescription");
			Strings.stringIDs.Add(639127653U, "ConfirmationMessageNewMapiVirtualDirectory");
			Strings.stringIDs.Add(726111090U, "VerboseResolvingRecipientOrganizationalUnitScope");
			Strings.stringIDs.Add(2674130276U, "AutodiscoverySuccess");
			Strings.stringIDs.Add(1906118891U, "CentralAdminServiceDescription");
			Strings.stringIDs.Add(3351161488U, "ErrorCannotSetDowngradedExchangeServerAuthOnEdge");
			Strings.stringIDs.Add(722352284U, "MigrationCsvStreamParameterInvalid");
			Strings.stringIDs.Add(4138250312U, "InstallMailSubmissionServiceTask");
			Strings.stringIDs.Add(3726353961U, "SetupComponentMalwareFiltering");
			Strings.stringIDs.Add(3198793815U, "ProtolcolWarnTrustAllCertificates");
			Strings.stringIDs.Add(1508593011U, "ErrorLocalNotForTenantAdmins");
			Strings.stringIDs.Add(967574322U, "AttemptToMakeUserLogon");
			Strings.stringIDs.Add(944738592U, "IisTasksWebSiteValidationProperty");
			Strings.stringIDs.Add(1604061446U, "ErrorIncrementalSyncIntervalCannotBeSetOnNonIncrementalRequests");
			Strings.stringIDs.Add(2930685350U, "ErrorCannotRestoreFromPrivateToPublicMailbox");
			Strings.stringIDs.Add(3366659407U, "DelegateRoleTypeRecipientAdmin");
			Strings.stringIDs.Add(2793254613U, "SharedCacheServiceDisplayName");
			Strings.stringIDs.Add(231085887U, "MtrtNoDetailInformation");
			Strings.stringIDs.Add(2046913201U, "ErrorLoadCertificateOnEdge");
			Strings.stringIDs.Add(1625001871U, "AllPolicyAssignees");
			Strings.stringIDs.Add(307488803U, "ConfirmationTurnOffJournalArchiving");
			Strings.stringIDs.Add(2953142896U, "ConfirmationMessageSetSenderIdConfig");
			Strings.stringIDs.Add(3904912496U, "SetupProgressPrecompilingBinaries");
			Strings.stringIDs.Add(2177919315U, "ProgressCompletingSearch");
			Strings.stringIDs.Add(977931768U, "CallerIsInMyDefaultContactsFolder");
			Strings.stringIDs.Add(4078434446U, "SetupProgressMessageTrackingPermissions");
			Strings.stringIDs.Add(449814027U, "SetupProgressStartingUMService");
			Strings.stringIDs.Add(38404619U, "RequestIsMissing");
			Strings.stringIDs.Add(394328647U, "ConfirmationMessageSetADServerSettings");
			Strings.stringIDs.Add(278718718U, "DeviceOk");
			Strings.stringIDs.Add(2963429141U, "MountStatusMounted");
			Strings.stringIDs.Add(199062377U, "LeaseExpired");
			Strings.stringIDs.Add(1585616693U, "ThirdPartyReplCheckDesc");
			Strings.stringIDs.Add(2741314546U, "CMCConnectorRequiresTenantScopedInboundConnector");
			Strings.stringIDs.Add(62533178U, "SetupProgressStartingWMIService");
			Strings.stringIDs.Add(3513112714U, "VerboseCheckRequiredRegistryKeys");
			Strings.stringIDs.Add(63979149U, "VerboseStartResolvingUsers");
			Strings.stringIDs.Add(1913407550U, "InfoCreatePL");
			Strings.stringIDs.Add(89007683U, "ConfirmationMessageDisableSendConnector");
			Strings.stringIDs.Add(3599602255U, "UsageTypePartner");
			Strings.stringIDs.Add(3121249817U, "ErrorInvalidMailboxAuditLogSearchCriteria");
			Strings.stringIDs.Add(3258178327U, "ErrorInvalidGroupTypeForPublicToGroups");
			Strings.stringIDs.Add(3971688957U, "SetupProgressCreateArbitrationMailbox");
			Strings.stringIDs.Add(2604883106U, "ArchiveDisabledError");
			Strings.stringIDs.Add(567195498U, "SSTFileSizeExceedLimit");
			Strings.stringIDs.Add(2830472790U, "WarningOABWithoutDistribution");
			Strings.stringIDs.Add(2608506884U, "MtrtReportSeverityLevelMed");
			Strings.stringIDs.Add(1373356377U, "InvalidDlpRoleAccess");
			Strings.stringIDs.Add(2772713742U, "VerboseRestartWSManService");
			Strings.stringIDs.Add(1369963769U, "ConfirmationMessageConfigureWSManIISHosting");
			Strings.stringIDs.Add(1235407621U, "ErrorAggregatedMailboxGuidNotSpecified");
			Strings.stringIDs.Add(685862647U, "MobileDeviceLogSuccess");
			Strings.stringIDs.Add(2947423393U, "TestOutboundOauthLog");
			Strings.stringIDs.Add(3586374252U, "UninstallMonitoringCorrelationServiceTask");
			Strings.stringIDs.Add(1297632601U, "UseDagDefaultOnOffOn");
			Strings.stringIDs.Add(3226135540U, "SetupProgressFastSearchSeedingPortRule");
			Strings.stringIDs.Add(2825905091U, "RemoveRemoteAccountPolicyFailedWithExistingMailboxes");
			Strings.stringIDs.Add(3204861685U, "BPAUpdateCheckCompleted");
			Strings.stringIDs.Add(2573144003U, "CasHealthDirectPushAndSyncAggregateScenarioDescription");
			Strings.stringIDs.Add(244505583U, "MalboxFolderRightsFolderOwner");
			Strings.stringIDs.Add(3015360437U, "ErrorParentIISPathNull");
			Strings.stringIDs.Add(597851718U, "ErrorFailedToGetRacAndClcEnterprise");
			Strings.stringIDs.Add(1000659622U, "MessageTracingClientServiceDisplayName");
			Strings.stringIDs.Add(95305143U, "ErrorTenantNeedsUpgradeFirst");
			Strings.stringIDs.Add(830584157U, "DelegationTokenValidationSuccess");
			Strings.stringIDs.Add(2245832939U, "WarningNoAuthServerWithDefaultAuthorizationEndpoint");
			Strings.stringIDs.Add(687010727U, "ErrorMapiVirtualDirectoryMustBeLocalServerToReset");
			Strings.stringIDs.Add(1739145871U, "ExternalAddress");
			Strings.stringIDs.Add(750158307U, "UninstallFBAServiceTask");
			Strings.stringIDs.Add(3689107639U, "TenantOrganizationMissing");
			Strings.stringIDs.Add(1611112302U, "TestTeamMailboxOutboundOauthLog");
			Strings.stringIDs.Add(2512251895U, "SetupProgressStoppingEdgeSyncService");
			Strings.stringIDs.Add(3072624127U, "MailboxLogonScenario");
			Strings.stringIDs.Add(820016583U, "ConversationsFailedToCreateAllItemsFolder");
			Strings.stringIDs.Add(1252200145U, "BootstrapAccountExpireTooSoon");
			Strings.stringIDs.Add(3194476650U, "NewDagConfigurationCompletedSuccessfully");
			Strings.stringIDs.Add(2432721285U, "RetryLaterException");
			Strings.stringIDs.Add(3193785025U, "ConfigureSchema");
			Strings.stringIDs.Add(1994155502U, "UninstallMessageTracingClientServiceTask");
			Strings.stringIDs.Add(957004625U, "SetupProgressStoppingWMIProviderService");
			Strings.stringIDs.Add(2431239667U, "FinishedCopyingOwaLPFiles");
			Strings.stringIDs.Add(1553663172U, "TenantNotificationTestFirstOrgNotSupported");
			Strings.stringIDs.Add(2434431800U, "ErrorTeamMailboxCannotIdentifyTheUser");
			Strings.stringIDs.Add(897711225U, "SetupProgressCreateModeratedRecipientsRetentionPolicyTag");
			Strings.stringIDs.Add(46998244U, "GetHealthReportProgressActivity");
			Strings.stringIDs.Add(2104106561U, "ConfirmationExportAutoDiscoverConfig");
			Strings.stringIDs.Add(532834943U, "ErrorFailedToGetTemplateEnterprise");
			Strings.stringIDs.Add(3454341798U, "DebugStartCreateMemberRequest");
			Strings.stringIDs.Add(3252566213U, "CannotModifyPhotoBecauseMailboxIsInTransit");
			Strings.stringIDs.Add(1543209017U, "InfoOrganizationContextChecked");
			Strings.stringIDs.Add(3522024953U, "CasHealthWarnCredenditialsPassedInTheClear");
			Strings.stringIDs.Add(2192189891U, "ForwardSyncServiceDescription");
			Strings.stringIDs.Add(466554668U, "CasHealthScenarioAutodiscoverCas");
			Strings.stringIDs.Add(2999804354U, "MigrationCompleteAfterAndAutoCompleteExclusive");
			Strings.stringIDs.Add(4226527350U, "ADAttributeCity");
			Strings.stringIDs.Add(3639987903U, "CouldNotFindAutodiscoverStandardAuthBinding");
			Strings.stringIDs.Add(3766651652U, "ErrorNeedOrgIdentity");
			Strings.stringIDs.Add(2473572750U, "UninstallPop3ServiceTask");
			Strings.stringIDs.Add(2723129778U, "DlpPolicyXmlMissingElements");
			Strings.stringIDs.Add(727073936U, "CasHealthOwaGetAuthStart");
			Strings.stringIDs.Add(147207876U, "CasHealthTestNewUserHostingScriptName");
			Strings.stringIDs.Add(386650992U, "ConfirmationMessageTestActiveDirectoryConnectivity");
			Strings.stringIDs.Add(2301252957U, "ErrorMissingInternalUrlInRemoteScenario");
			Strings.stringIDs.Add(2774736401U, "RetrieveFederationMetadataFailed");
			Strings.stringIDs.Add(1981219267U, "DataClassificationConfigFirstOrgNotSupported");
			Strings.stringIDs.Add(1244562342U, "SetSecondaryDomainDescription");
			Strings.stringIDs.Add(3522975510U, "ErrorInvalidLogonType");
			Strings.stringIDs.Add(2350887172U, "MtrtSetSpamConfidenceLevel");
			Strings.stringIDs.Add(136434832U, "ErrorInvalidOSPServerRole");
			Strings.stringIDs.Add(1360678989U, "ErrorModifyTiServerNotAllowed");
			Strings.stringIDs.Add(1824789360U, "MediumPriorityChecksWarning");
			Strings.stringIDs.Add(1169555177U, "InstallCentralAdminServiceTask");
			Strings.stringIDs.Add(3264150393U, "WarningRoleAssignmentWithDatabaseScopeApplicableOnlyInSP");
			Strings.stringIDs.Add(1932795447U, "DDGFilterIsNonoptimized");
			Strings.stringIDs.Add(2358053276U, "ErrorModifyE12DatabaseNotAllowed");
			Strings.stringIDs.Add(4019033326U, "ErrorWebObjOrPropertiesNull");
			Strings.stringIDs.Add(2478684369U, "ProgressStopUpdateOtherAD");
			Strings.stringIDs.Add(3538356643U, "ContentIndexServiceDisplayName");
			Strings.stringIDs.Add(3742321691U, "ErrorEmptyFsmoRoleOwnerAttribute");
			Strings.stringIDs.Add(2732113732U, "ErrorSetGroupMailboxAddMembersOtherUser");
			Strings.stringIDs.Add(639504132U, "UninstallOSPRoleDescription");
			Strings.stringIDs.Add(3238542439U, "ErrorInvalidDlpPolicyIdentity");
			Strings.stringIDs.Add(3076603065U, "MtrtApplyClassification");
			Strings.stringIDs.Add(2836523615U, "ConfirmationMessageSetRecipientFilterConfig");
			Strings.stringIDs.Add(1808276634U, "ADAttributeCustomAttribute13");
			Strings.stringIDs.Add(1247715429U, "ErrorSessionNotFound");
			Strings.stringIDs.Add(2831161206U, "CopyStatusDisconnected");
			Strings.stringIDs.Add(864464091U, "CannotSpecifyBothDoNotUpdateAndForceUpdate");
			Strings.stringIDs.Add(394967746U, "ErrorsDomainNotReserved");
			Strings.stringIDs.Add(4181924872U, "PowerShellComponentDescription");
			Strings.stringIDs.Add(979596793U, "Error_SentRepresentingRemoved");
			Strings.stringIDs.Add(561049406U, "JournalNdrMailboxCannotBeNull");
			Strings.stringIDs.Add(203910820U, "BPADownloadingFailed");
			Strings.stringIDs.Add(613469788U, "SkippedUpdatingMFLFiles");
			Strings.stringIDs.Add(3141042970U, "ErrorBPAOutFileNotFound");
			Strings.stringIDs.Add(1069447725U, "ErrorFileTypeIsUnsupported");
			Strings.stringIDs.Add(61834792U, "ClusterRpcCheckDesc");
			Strings.stringIDs.Add(3869111566U, "SetupProgressOrganizationalQueryBaseDNEnabled");
			Strings.stringIDs.Add(1958782279U, "ErrorNoActiveDCForProvisioningReconciliationCookie");
			Strings.stringIDs.Add(2688759287U, "UMCallAnsweringRuleCallbackLater");
			Strings.stringIDs.Add(2179844603U, "ActiveSyncMetabaseIsapiUninstallFailure");
			Strings.stringIDs.Add(2891753468U, "ADAttributeCompany");
			Strings.stringIDs.Add(4210711027U, "SetupProgressStartingHTTPFilterService");
			Strings.stringIDs.Add(1723932345U, "AttachmentFilterEntryExists");
			Strings.stringIDs.Add(1880703947U, "NullServerObject");
			Strings.stringIDs.Add(2146343540U, "TooManyFederationTrust");
			Strings.stringIDs.Add(2101033087U, "CalendarSave");
			Strings.stringIDs.Add(1260493142U, "SetupComponentPreSetupOSP");
			Strings.stringIDs.Add(2999415054U, "ErrorUseDatabaseRetentionDefaultsCanOnlySetToFalse");
			Strings.stringIDs.Add(3229133469U, "TransportCommonServiceControlComponentDescription");
			Strings.stringIDs.Add(1263734293U, "MsiPropertyTooLarge");
			Strings.stringIDs.Add(3574175325U, "ArchiveConnectivityResultSuccess");
			Strings.stringIDs.Add(8956383U, "FailedToRegisterContentIndexingBinaries");
			Strings.stringIDs.Add(689745244U, "ErrorRmsOnlinePrerequisites");
			Strings.stringIDs.Add(1561303831U, "ErrorServerNameModified");
			Strings.stringIDs.Add(2874562042U, "MailSubmissionServiceDescription");
			Strings.stringIDs.Add(416983059U, "VerboseFixingAddressBookFilterMetadata");
			Strings.stringIDs.Add(1485895935U, "ErrorMovingToOldExchangeDatabaseUnsupported");
			Strings.stringIDs.Add(3494585454U, "ErrorOnlyDefaultTagAllowCustomizedMessageClass");
			Strings.stringIDs.Add(2628736153U, "DagFswInternalErrorFswObjectNotInitialized");
			Strings.stringIDs.Add(3593430692U, "ChunkingEnabledSettingConflict");
			Strings.stringIDs.Add(418834457U, "CafeLocalPermissionsComponentDescription");
			Strings.stringIDs.Add(3764294661U, "CasHealthGetFolderScenarioDescription");
			Strings.stringIDs.Add(1822933486U, "ConfirmationMessageTestTenantMonitoringPerfCounters");
			Strings.stringIDs.Add(2588683306U, "SetupComponentTransportGlobalConfig");
			Strings.stringIDs.Add(3225666107U, "UpdateDbcCatalogOnlyAndDatabaseOnlyAreMutuallyExclusiveException");
			Strings.stringIDs.Add(3803388745U, "GetHealthReportProgressStarting");
			Strings.stringIDs.Add(4242555427U, "Pop3BeServiceDisplayName");
			Strings.stringIDs.Add(857660825U, "SupervisionPolicyAmbiguous");
			Strings.stringIDs.Add(2498994945U, "ProgressStartUpdateAD");
			Strings.stringIDs.Add(3529576605U, "DagMgmtServiceDisplayName");
			Strings.stringIDs.Add(3852766979U, "IncludeKeywordStatisticsParameterConflict");
			Strings.stringIDs.Add(188799712U, "MtrtReportSeverityLevelLow");
			Strings.stringIDs.Add(2326537993U, "ClassificationRuleCollectionIllegalScopedSetOperation");
			Strings.stringIDs.Add(3300531825U, "MigrationMustSpecifyEmailOrMailboxDNOrMailboxPermission");
			Strings.stringIDs.Add(1839699905U, "WarningMessageNewTPRDag");
			Strings.stringIDs.Add(2438278052U, "JournalingParameterErrorGccWithOrganization");
			Strings.stringIDs.Add(3215740127U, "SetupProgressDisableMigrationRPCFirewallRule");
			Strings.stringIDs.Add(1647196573U, "AlsEmailBodyCriteria");
			Strings.stringIDs.Add(1094497050U, "SetServiceInstanceMapReturnedNull");
			Strings.stringIDs.Add(1310067130U, "CopyStatusNotConfigured");
			Strings.stringIDs.Add(1545448632U, "ClassificationRuleCollectionInvalidObject");
			Strings.stringIDs.Add(873295235U, "CannotResolveSiteRedirectionTemplateMessage");
			Strings.stringIDs.Add(2730604640U, "SetupComponentConfiguringPublicFolder");
			Strings.stringIDs.Add(271598664U, "CasHealthNoTuplesToTest");
			Strings.stringIDs.Add(3555678614U, "SetupProgressStoppingProtectedServiceHostService");
			Strings.stringIDs.Add(903687533U, "SetupComponentDomainGlobalConfig");
			Strings.stringIDs.Add(3079435902U, "DagFswUnableToDetermineFrontendTransportServerException");
			Strings.stringIDs.Add(1833931616U, "ErrorCannotCreateRuleWithoutCondition");
			Strings.stringIDs.Add(729299916U, "CopyStatusServiceDown");
			Strings.stringIDs.Add(1569212399U, "ErrorNoNewSiteFolderDatabaseFound");
			Strings.stringIDs.Add(2152281250U, "CasHealthAllTransactionsSucceeded");
			Strings.stringIDs.Add(2530019387U, "AdminToolsPrereqCheck");
			Strings.stringIDs.Add(3289631126U, "SetupPrereqAnalysisInProgress");
			Strings.stringIDs.Add(1308578877U, "UninstallReplayServiceTask");
			Strings.stringIDs.Add(1009247039U, "SetupComponentMidFileCopyAdminTools");
			Strings.stringIDs.Add(2491313992U, "FailedToAccessIrmConfiguration");
			Strings.stringIDs.Add(1960737953U, "CopyStatusUnknown");
			Strings.stringIDs.Add(3080450531U, "ErrorBPAOutDirectoryNotFound");
			Strings.stringIDs.Add(2727848737U, "OmaVDirNotFound");
			Strings.stringIDs.Add(1050709066U, "SetupProgressInstallingHealthManager");
			Strings.stringIDs.Add(1294165706U, "ErrorMultipleProvisioningPolicyExist");
			Strings.stringIDs.Add(2926020684U, "UninstallAdminToolsRoleDescription");
			Strings.stringIDs.Add(2419369378U, "InvalidCertAuthValue");
			Strings.stringIDs.Add(2778932812U, "ConfirmImportExchangeCertificateDirect");
			Strings.stringIDs.Add(2445661152U, "ErrorUseDatabaseQuotaDefaultsCanOnlySetToFalse");
			Strings.stringIDs.Add(2215510534U, "ErrorAuthInvalidNewEffectiveDate");
			Strings.stringIDs.Add(1082913928U, "UsageTypeInternal");
			Strings.stringIDs.Add(2314884551U, "InvalidParamIdentityHasWildcardException");
			Strings.stringIDs.Add(3450980076U, "WarningFixedMissingGALEntry");
			Strings.stringIDs.Add(3734111801U, "GlobalLocatorServiceSuccess");
			Strings.stringIDs.Add(1063568409U, "ErrorMoveWebDistributionEnabledOabToTiServer");
			Strings.stringIDs.Add(545033587U, "CasHealthEasFolderSyncScenarioDescription");
			Strings.stringIDs.Add(209792268U, "ConfirmationMessageSetResourceConfig");
			Strings.stringIDs.Add(2903762331U, "UMCallAnsweringRuleCheckAutomaticReplies");
			Strings.stringIDs.Add(3689959917U, "ErrorCreatePublicFolderTree");
			Strings.stringIDs.Add(1410063427U, "TopologyServiceResultUndefined");
			Strings.stringIDs.Add(1613686497U, "ErrorSharedConfigurationRequiresServicePlan");
			Strings.stringIDs.Add(4192463412U, "SomeMdbsWereMovedWhileRunningPrefix");
			Strings.stringIDs.Add(1690028294U, "InstallingPOP3Service");
			Strings.stringIDs.Add(347605313U, "AddressRewriteInternalAddressExists");
			Strings.stringIDs.Add(1406451776U, "CannotSetDefaultTPD");
			Strings.stringIDs.Add(474554696U, "SetupProgressStartingHealthManagerService");
			Strings.stringIDs.Add(1799234143U, "SetupProgressRemovingLegacySystemMailboxUsers");
			Strings.stringIDs.Add(596346937U, "StoppingPOP3Service");
			Strings.stringIDs.Add(3627783386U, "InvalidPredicate");
			Strings.stringIDs.Add(1331970650U, "VerboseEnableBasicAuthForWSMan");
			Strings.stringIDs.Add(556563131U, "ErrorSharePointUrlNotWhitelisted");
			Strings.stringIDs.Add(958569967U, "InfoOverallFail");
			Strings.stringIDs.Add(1413655130U, "ErrorArchiveMainCouldNotBeProvisioned");
			Strings.stringIDs.Add(3950900668U, "ConfirmationMessageSetServiceInstanceMap");
			Strings.stringIDs.Add(2834370617U, "UserWithoutFederatedDomain");
			Strings.stringIDs.Add(3770893258U, "CasHealthConfirmTestActiveSyncLocalMachine");
			Strings.stringIDs.Add(3118684996U, "TasksRpcListenerCheckDesc");
			Strings.stringIDs.Add(1920559542U, "ExcludeDuplicateMessagesParameterConflict");
			Strings.stringIDs.Add(3974455509U, "ErrorDomainServicesNotYetImplemented");
			Strings.stringIDs.Add(3657087972U, "RequestNameAvailabilityComplete");
			Strings.stringIDs.Add(613419658U, "MigrationMustSpecifyEmailOrMailboxDNOrSkipVerification");
			Strings.stringIDs.Add(2291096419U, "ErrorInvalidFfoServerRole");
			Strings.stringIDs.Add(443059279U, "ErrorNotEnoughInformationToFindRequestOfCorrectType");
			Strings.stringIDs.Add(3842763887U, "UninstallCafeIisWebServiceExtensions");
			Strings.stringIDs.Add(171191748U, "ServerNameConflict");
			Strings.stringIDs.Add(224474141U, "NewPolicyTipConfigInvalidUrl");
			Strings.stringIDs.Add(3323263744U, "Free");
			Strings.stringIDs.Add(627463594U, "TpdIsHSMEncrypted");
			Strings.stringIDs.Add(2638906221U, "ConfirmationMessageSetPerimeterConfig");
			Strings.stringIDs.Add(3770469704U, "ErrorRetentionActionNowAllowed");
			Strings.stringIDs.Add(866665304U, "ChangePasswordInvalidCredentials");
			Strings.stringIDs.Add(3607766719U, "ConfirmationMessageSetAttachmentfilterlistconfig");
			Strings.stringIDs.Add(1259731166U, "ConfirmationMessageNewAutodiscoverVirtualDirectory");
			Strings.stringIDs.Add(1779766570U, "UnifiedMessagingDatacenterComponentDescription");
			Strings.stringIDs.Add(2044072828U, "ConfirmationGetLitigationHoldInformation");
			Strings.stringIDs.Add(2021664053U, "FfoPrimingServiceDisplayName");
			Strings.stringIDs.Add(3028030101U, "Error_StartDateCheck");
			Strings.stringIDs.Add(3648433740U, "WrongSubscriptionIdentity");
			Strings.stringIDs.Add(2646427859U, "ConfirmationMessageTestExchangeSearch");
			Strings.stringIDs.Add(3727590521U, "RoleEditor");
			Strings.stringIDs.Add(124266088U, "ErrorUnknownPartition");
			Strings.stringIDs.Add(2416344434U, "ConfirmationMessageImportTransportRuleCollection");
			Strings.stringIDs.Add(3878533180U, "RegasmNotFound");
			Strings.stringIDs.Add(2744256804U, "SetServiceInstanceMapResultCodeObjectNotFound");
			Strings.stringIDs.Add(996496831U, "FederationTrustValid");
			Strings.stringIDs.Add(387143530U, "MoveAlreadyCanceled");
			Strings.stringIDs.Add(1377545165U, "ADAttributeCustomAttribute7");
			Strings.stringIDs.Add(1649886345U, "ErrorOnlyForestWideBlockIsAllowed");
			Strings.stringIDs.Add(3240013436U, "InstallHealthManagerServiceTask");
			Strings.stringIDs.Add(1316394624U, "NoComponentInfoFilesException");
			Strings.stringIDs.Add(2945806020U, "SetupComponentMTAConfiguration");
			Strings.stringIDs.Add(487566617U, "MountStatusUnknown");
			Strings.stringIDs.Add(2896321434U, "ErrorVerificationCodeTooManyFailed");
			Strings.stringIDs.Add(1955637848U, "CustomerFeedbackEnabledError");
			Strings.stringIDs.Add(549458741U, "MigrationReportNotFound");
			Strings.stringIDs.Add(859003787U, "InitializedWithInvalidObjectId");
			Strings.stringIDs.Add(1576804522U, "DatabaseSeedStatusLabelRead");
			Strings.stringIDs.Add(2856567438U, "UnableToDiscoverMailboxPermission");
			Strings.stringIDs.Add(987792256U, "SuppressXAnonymousTlsEnabledWithoutDowngradedExchangeAuth");
			Strings.stringIDs.Add(821173418U, "MtrtRouteMessageHighRisk");
			Strings.stringIDs.Add(2742380346U, "SetupProgressFederationEnabled");
			Strings.stringIDs.Add(400464704U, "CasHealthEasTestTypeAndAutodiscoverArgumentError");
			Strings.stringIDs.Add(1062718164U, "ErrorCreatedAfterLaterThanToday");
			Strings.stringIDs.Add(936853662U, "FileUploadServiceDescription");
			Strings.stringIDs.Add(3238755484U, "CasHealthPerformanceCounterName");
			Strings.stringIDs.Add(3676775874U, "InstallIisWebServiceExtensionNoChanges");
			Strings.stringIDs.Add(638769072U, "ErrorExceededMaxiumNumberOfDatabasesPerServer");
			Strings.stringIDs.Add(3569022346U, "UMMailboxPolicySetFaxServerURIError");
			Strings.stringIDs.Add(2680788449U, "UninstallCafeRoleDescription");
			Strings.stringIDs.Add(3830301655U, "RemoveHuntGroupsLinkedToTenantDialPlans");
			Strings.stringIDs.Add(2663637685U, "ErrorCannotCreateFingerprint");
			Strings.stringIDs.Add(173476074U, "InvalidEndDate");
			Strings.stringIDs.Add(1372004637U, "InstallFreeBusyFolderCannotGetOrganizationContainer");
			Strings.stringIDs.Add(2472985937U, "ErrorSetPublicFolderMailMailEnabledFalse");
			Strings.stringIDs.Add(2357719805U, "SetupProgressConfigurePerimeterConfig");
			Strings.stringIDs.Add(1766283082U, "SetupProgressStartingProtectedServiceHostService");
			Strings.stringIDs.Add(546863019U, "SetupProgressIssueWarningMaiboxQuota");
			Strings.stringIDs.Add(2194177847U, "InvalidPredicateSequence");
			Strings.stringIDs.Add(3514896639U, "InstallAdminToolsRoleDescription");
			Strings.stringIDs.Add(1058454737U, "ProgressCopyingCopySystemFiles");
			Strings.stringIDs.Add(1474103016U, "ErrorBPAOutFileSave");
			Strings.stringIDs.Add(747339504U, "ErrorInvalidParametersForLocalPublicFolderMailboxMigration");
			Strings.stringIDs.Add(2489458996U, "HybridIsEnabledOnPremisesButTenantIsNotUpgraded");
			Strings.stringIDs.Add(810697535U, "SetupProgressRemovingDefaultTransportAgents");
			Strings.stringIDs.Add(3560370784U, "ConfirmationMessageGetSearchDocumentFormat");
			Strings.stringIDs.Add(3473154256U, "SendConnectorUpdatingnteropUsgMembership");
			Strings.stringIDs.Add(829912647U, "SetupProgressMailboxCountQuota");
			Strings.stringIDs.Add(557019716U, "CreateExchangePrincipalObject");
			Strings.stringIDs.Add(25826658U, "ExceptionInvalidUILevel");
			Strings.stringIDs.Add(2734851240U, "UninstallComplianceAuditServiceTask");
			Strings.stringIDs.Add(929006655U, "ParameterVersionMismatch");
			Strings.stringIDs.Add(2252143100U, "ErrorAddGroupToItself");
			Strings.stringIDs.Add(4151447213U, "SetupProgressSetPermissionsOnAdminGroup");
			Strings.stringIDs.Add(3660237507U, "UninstallDagMgmtServiceTask");
			Strings.stringIDs.Add(2284256781U, "SendConnectorMixedSourceServerRoles");
			Strings.stringIDs.Add(3315533230U, "CasHealthNoteSecureAccess");
			Strings.stringIDs.Add(2395829035U, "WarningCleanExistingPipelineTracingContent");
			Strings.stringIDs.Add(269194386U, "CasHealthOwaGetLogoffSucceeded");
			Strings.stringIDs.Add(3146481U, "InfoRacAndClc");
			Strings.stringIDs.Add(1293016842U, "ConfirmationMessageSetAuthConfig");
			Strings.stringIDs.Add(1761523563U, "CatalogDoesntExist");
			Strings.stringIDs.Add(709632357U, "ErrorAuthServiceNameNotBlank");
			Strings.stringIDs.Add(4287515218U, "ConfirmationMessageSetSenderReputationConfig");
			Strings.stringIDs.Add(2708013991U, "SetupComponentPreSetupBridgehead");
			Strings.stringIDs.Add(1322669528U, "ProcessUtilizationManagerServiceDisplayName");
			Strings.stringIDs.Add(2244936124U, "PromptToOverwriteDlpPoliciesOnImport");
			Strings.stringIDs.Add(885922192U, "NewReceiveConnectorAddingPermissionsDoneMsg");
			Strings.stringIDs.Add(375841809U, "MessageTraceMinimumCriteriaFieldsInErrorDeliveryStatus");
			Strings.stringIDs.Add(3194886917U, "UninstallClientAccessRoleDescription");
			Strings.stringIDs.Add(642572136U, "SetupComponentConfiguringDatacenterMailbox");
			Strings.stringIDs.Add(2260693300U, "UserNotInAd");
			Strings.stringIDs.Add(3872838286U, "SendConnectorInvalidSourceIPAddress");
			Strings.stringIDs.Add(3135809837U, "WarningDelegatesExceededOutlookLimit");
			Strings.stringIDs.Add(161838924U, "PatternContainsLeadingTrailingWhiteSpace");
			Strings.stringIDs.Add(2131142349U, "DuplicateInitialDomain");
			Strings.stringIDs.Add(4188767105U, "AddressRewriteUnrecognizedAddress");
			Strings.stringIDs.Add(3504853238U, "AmbiguousDatabaseAndExchangeServerParameters");
			Strings.stringIDs.Add(1927573801U, "ADAttributeOffice");
			Strings.stringIDs.Add(1352231058U, "ExportCertificateAs12KeyNotExportable");
			Strings.stringIDs.Add(2585600455U, "InvalidParamSpecifyIdentityOrDagException");
			Strings.stringIDs.Add(2829601938U, "StartingW3SVC");
			Strings.stringIDs.Add(1811867995U, "MigrationWorkflowServiceDisplayName");
			Strings.stringIDs.Add(1988030389U, "Imap4ServiceDisplayName");
			Strings.stringIDs.Add(2882860628U, "ProvisioningRequestCorrupted");
			Strings.stringIDs.Add(118205473U, "MapiTransactionErrorMsgNoMailbox");
			Strings.stringIDs.Add(1054930625U, "InPlaceHoldNotAllowedForPublicFolders");
			Strings.stringIDs.Add(978499145U, "SetupProgressGALEnabled");
			Strings.stringIDs.Add(2963803423U, "CasHealthTestMultipleMailboxServersFound");
			Strings.stringIDs.Add(1952683340U, "ErrorTooManyGALsCreated");
			Strings.stringIDs.Add(3222875934U, "AddOutlookTenantAcceptedDomains");
			Strings.stringIDs.Add(816116421U, "CannotRemoveSendConnectorCertificate");
			Strings.stringIDs.Add(2160282563U, "CopyStatusSeedingSource");
			Strings.stringIDs.Add(2266221568U, "SetOpenDomainRoutingOnHotmailMigrateDomain");
			Strings.stringIDs.Add(3765206323U, "ErrorSystemFolderPathNotUniqueUnderTheSameNode");
			Strings.stringIDs.Add(2288430532U, "CannotLocateWebRequestorEndpoint");
			Strings.stringIDs.Add(4085511058U, "ErrorSiteNotSpecifiedAndLocalSiteNotFound");
			Strings.stringIDs.Add(1855335654U, "TransportSyncManagerServiceNotUninstalled");
			Strings.stringIDs.Add(10041749U, "InstallExchangeStreamingOpticsTask");
			Strings.stringIDs.Add(853303979U, "MountStatusDismounted");
			Strings.stringIDs.Add(766671470U, "AutoDiscoverIsNotSetInOrgRelationship");
			Strings.stringIDs.Add(3326397734U, "ExchangeSettingsGuidUsage");
			Strings.stringIDs.Add(3910774036U, "ExternalRelayDomainsAreNotAllowedInDatacenterAndFfo");
			Strings.stringIDs.Add(1003253425U, "ComplianceSearchInitializingMessage");
			Strings.stringIDs.Add(4217102173U, "ServerNotHubOrEdge");
			Strings.stringIDs.Add(174447511U, "ErrorCannotProvideNetIDAndSmtpAddress");
			Strings.stringIDs.Add(4159134257U, "SetupProgressRemovingAdamInstance");
			Strings.stringIDs.Add(2414509351U, "ErrorRpcHttpBasicAuthOverHttpDisallowed");
			Strings.stringIDs.Add(332418900U, "SetupComponentPreSetupAllRoles");
			Strings.stringIDs.Add(974762364U, "ProgressCopying");
			Strings.stringIDs.Add(266823016U, "ErrorSubscriptionFileMustBeXml");
			Strings.stringIDs.Add(1065704932U, "CasHealthEcpScenarioTestWebService");
			Strings.stringIDs.Add(3903594392U, "ErrorNewTeamMailboxParameter");
			Strings.stringIDs.Add(4196969280U, "RmsSharedIdentityLocalComputerNotFound");
			Strings.stringIDs.Add(968773825U, "CalendarVDirDisabledWarning");
			Strings.stringIDs.Add(2888187612U, "UninstallForwardSyncServiceTask");
			Strings.stringIDs.Add(1587845536U, "InstallImap4ServiceTask");
			Strings.stringIDs.Add(2633433681U, "ConfirmationMessageExportJournalRuleCollection");
			Strings.stringIDs.Add(949894156U, "MtrtRightsProtectMessage");
			Strings.stringIDs.Add(472135594U, "CannotSetBothEhfAndFfoRoutingId");
			Strings.stringIDs.Add(158415293U, "InstallCentralAdminFrontEndRoleDescription");
			Strings.stringIDs.Add(1698201925U, "DebugStartSaveDataObject");
			Strings.stringIDs.Add(1804822115U, "RpcClientAccessServiceControlComponentDescription");
			Strings.stringIDs.Add(266949762U, "FfoReportingMessage");
			Strings.stringIDs.Add(1889388206U, "WarningPromotingSecondaryToPrimary");
			Strings.stringIDs.Add(1952429157U, "TestMailflowNoSystemMailbox");
			Strings.stringIDs.Add(3353268175U, "FailedToCreateEwsConnection");
			Strings.stringIDs.Add(3512195069U, "VerboseWaitingForReplicationInTargetForest");
			Strings.stringIDs.Add(3811422379U, "UserCreatedFolder");
			Strings.stringIDs.Add(3104043273U, "GetMsoDiagnosticsNewCookieIsBeingUsed");
			Strings.stringIDs.Add(219970510U, "SetupProgressUninstallingContentIndexingMSI");
			Strings.stringIDs.Add(1091504803U, "MigrationCSVRequired");
			Strings.stringIDs.Add(1552530836U, "ErrorNewRoleInvalidValueUnscopedParameter");
			Strings.stringIDs.Add(3472833669U, "CallingGetFederationInformation");
			Strings.stringIDs.Add(2207102733U, "DagTaskFixingUpIpResources");
			Strings.stringIDs.Add(3732896675U, "ApplicationUrisSkipped");
			Strings.stringIDs.Add(3008043280U, "ErrorSetPublicFolderMailMailRecipientGuidNull");
			Strings.stringIDs.Add(4151922635U, "MultipleSubscriptionSites");
			Strings.stringIDs.Add(1906143331U, "ErrorOWAVdirAppPoolNotExist");
			Strings.stringIDs.Add(1329949041U, "CasHealthPowerShellShortName");
			Strings.stringIDs.Add(1484668346U, "CopyStatusHealthy");
			Strings.stringIDs.Add(2810838460U, "SubscriptionPasswordEmptyException");
			Strings.stringIDs.Add(185229349U, "ReportsMPNotInstalled");
			Strings.stringIDs.Add(2417965290U, "RequestOnInaccessibleDatabase");
			Strings.stringIDs.Add(1428403360U, "SetupProgressStartingServices");
			Strings.stringIDs.Add(2052801377U, "Busy");
			Strings.stringIDs.Add(2686627867U, "DatabaseAvailabilityCheckDesc");
			Strings.stringIDs.Add(2021788683U, "ClassificationRuleCollectionStorageFailure");
			Strings.stringIDs.Add(192027990U, "ErrorCannotModifyFolderName");
			Strings.stringIDs.Add(2873363543U, "JournalingReportNdrToSameAsRecipient");
			Strings.stringIDs.Add(3912787342U, "XRopConnectLogon");
			Strings.stringIDs.Add(2864130840U, "ErrorRpcHttpMustSpecifyExternalClientsRequireSslParameter");
			Strings.stringIDs.Add(1859742910U, "SetupProgressProhibitSendReceiveQuota");
			Strings.stringIDs.Add(4065885103U, "ScenarioEwsGetFolder");
			Strings.stringIDs.Add(4181933535U, "CalendarLogIdentityNotSpecified");
			Strings.stringIDs.Add(3046095919U, "ErrorBypassWLIDAndRemovedMailboxTogether");
			Strings.stringIDs.Add(2204793929U, "StartingHealthService");
			Strings.stringIDs.Add(672436065U, "InstallMomConnectorServiceTask");
			Strings.stringIDs.Add(416621071U, "ExchangeUpgradeBucketInvalidCapacityValue");
			Strings.stringIDs.Add(3620520123U, "MapiTransactionResultSuccess");
			Strings.stringIDs.Add(3866700857U, "ErrorBPAOutFileLoad");
			Strings.stringIDs.Add(2481943192U, "AccessStoreSuccess");
			Strings.stringIDs.Add(3531376863U, "ErrorSuspendAndResumeDontSupportFalse");
			Strings.stringIDs.Add(542947632U, "InstallCafeIisWebServiceExtensions");
			Strings.stringIDs.Add(3691772373U, "VerboseStartWinrm");
			Strings.stringIDs.Add(4170882099U, "CasHealthCalendarScenarioTestViewDesc");
			Strings.stringIDs.Add(2129843125U, "UpdateAspnetConfigFailed");
			Strings.stringIDs.Add(86137682U, "SingleCopyDatabase");
			Strings.stringIDs.Add(3067181414U, "ConfirmationMessageSetIPBlockListConfig");
			Strings.stringIDs.Add(2847533272U, "InvalidRecipientAddress");
			Strings.stringIDs.Add(3423115636U, "AttachmentFilterEntryNotFound");
			Strings.stringIDs.Add(3101272142U, "CasHealthEcpScenarioTestWebServiceDescription");
			Strings.stringIDs.Add(698348194U, "WarningUnsupportedEdgeTransportConfigProperty");
			Strings.stringIDs.Add(1280404394U, "ErrorBPAConfigFileNotFound");
			Strings.stringIDs.Add(708658832U, "TargetDatabasesNotAllowed");
			Strings.stringIDs.Add(2593249093U, "LocalSiteNotFound");
			Strings.stringIDs.Add(1226483017U, "SetupComponentAdam");
			Strings.stringIDs.Add(3571093343U, "ErrorApplyRusFailed");
			Strings.stringIDs.Add(3812994936U, "MtrtEventReceive");
			Strings.stringIDs.Add(1533614992U, "GlobalRoutingEntryVerificationSkipped");
			Strings.stringIDs.Add(3528435264U, "MalboxFolderRightsNone");
			Strings.stringIDs.Add(2664395245U, "ClassificationRuleCollectionIllegalScopedNewOobOperation");
			Strings.stringIDs.Add(2752094876U, "ErrorBPAIisInstalledParameterRequired");
			Strings.stringIDs.Add(2103885852U, "InvalidSelectionTarget");
			Strings.stringIDs.Add(3987189255U, "VerboseSearchingAssigneeInDomainNC");
			Strings.stringIDs.Add(548988381U, "SetupComponentConfiguringMailboxPermissions");
			Strings.stringIDs.Add(1786294530U, "ErrorAlsSearchResultLargeAttachmentSize");
			Strings.stringIDs.Add(1757744768U, "SetupProgressCreateRBACScopesContainer");
			Strings.stringIDs.Add(3873707400U, "SetupProgressHostedContentFilterPolicy");
			Strings.stringIDs.Add(1419022259U, "DuplicateDataClassificationSpecified");
			Strings.stringIDs.Add(4019830635U, "MailboxTransportDeliveryServiceDisplayName");
			Strings.stringIDs.Add(1212046423U, "ErrorSetSendAsOnMailboxPermissionNotAllowed");
			Strings.stringIDs.Add(1718119522U, "ErrorAnotherPublicFolderMigrationTypeAlreadyInProgress");
			Strings.stringIDs.Add(728045039U, "ErrorNoDCInLocalSite");
			Strings.stringIDs.Add(2684014814U, "BridgeheadPrereqCheck");
			Strings.stringIDs.Add(3655557265U, "PhoneNumberAlreadyRegistered");
			Strings.stringIDs.Add(1870712198U, "ErrorTeamMailboxCanNotLoadPolicy");
			Strings.stringIDs.Add(1510453889U, "VerboseResolvingExclusiveRecipientWriteScope");
			Strings.stringIDs.Add(3321247001U, "ConfirmationMessageTestOutlookWebServices");
			Strings.stringIDs.Add(3769478445U, "AddSecondaryDomainDescription");
			Strings.stringIDs.Add(4079789178U, "ErrorImportingTpdFromRmsOnline");
			Strings.stringIDs.Add(2430123483U, "DisasterRecoveryCafeRoleDescription");
			Strings.stringIDs.Add(1259030099U, "CasHealthConnectionType");
			Strings.stringIDs.Add(341845757U, "SetupProgressOfflineAddressBookEnabled");
			Strings.stringIDs.Add(2294357729U, "CasHealthOwaVdirNameHeader");
			Strings.stringIDs.Add(1151978302U, "AllActiveSyncTransactionsSucceeded");
			Strings.stringIDs.Add(2444920946U, "RootDomainNotFoundException");
			Strings.stringIDs.Add(245296314U, "RequestAlreadyCanceled");
			Strings.stringIDs.Add(2184875284U, "InstallWatchDogServiceTask");
			Strings.stringIDs.Add(369727888U, "ScopeIsInUse");
			Strings.stringIDs.Add(2731790600U, "CasHealthOwaInvalidCertificate");
			Strings.stringIDs.Add(3596291951U, "TestSearchCheckService");
			Strings.stringIDs.Add(2554964784U, "ServiceHostDisplayName");
			Strings.stringIDs.Add(3785964720U, "SetupProgressInstallGlobalSettingsContainer");
			Strings.stringIDs.Add(813346190U, "TopologyServiceResultSuccess");
			Strings.stringIDs.Add(1288207498U, "InfoOverallPass");
			Strings.stringIDs.Add(2868492561U, "ErrorCannotUpdateGlsDomainFromOrgId");
			Strings.stringIDs.Add(3402326851U, "SendConnectorTargetServersNotSet");
			Strings.stringIDs.Add(2774693296U, "SetupComponentMonitoring");
			Strings.stringIDs.Add(3339775592U, "ImportFileDataIsNull");
			Strings.stringIDs.Add(1493094573U, "ErrorDatabaseUnavailableForProvisioning");
			Strings.stringIDs.Add(3433387878U, "StartingToCopyOwaLPFiles");
			Strings.stringIDs.Add(4222471768U, "AutodiscoverServiceCallFailed");
			Strings.stringIDs.Add(3141335933U, "IncompatibleDatabaseSchemaVersionsInDAG");
			Strings.stringIDs.Add(587913101U, "ErrorBPAConfigFileLoad");
			Strings.stringIDs.Add(2931186720U, "Imap4ServiceDescription");
			Strings.stringIDs.Add(318753442U, "SetupProgressMaxConcurrentMigrations");
			Strings.stringIDs.Add(2019968228U, "WarningSafetyNetHoldTimeMustBeGreaterThanReplayLagTime");
			Strings.stringIDs.Add(403853017U, "SetupComponentMidFileCopyAllRoles");
			Strings.stringIDs.Add(2199720396U, "UninstallMonitoringServiceTask");
			Strings.stringIDs.Add(604494259U, "SmartHostsValidationFailedWarningMessage");
			Strings.stringIDs.Add(1788709803U, "ClassificationRuleCollectionEngineValidationFailure");
			Strings.stringIDs.Add(2608560709U, "CasHealthDeleteItemScenarioDescription");
			Strings.stringIDs.Add(2411750738U, "ADAttributeMobileNumber");
			Strings.stringIDs.Add(3794422642U, "SetupProgressCleanRegistry");
			Strings.stringIDs.Add(3078877348U, "VerboseCheckRequiredFiles");
			Strings.stringIDs.Add(2920861445U, "BackSyncUrlNeedsToBeAbsolute");
			Strings.stringIDs.Add(2803298965U, "FfoWebServicePostConfigComponentDescription");
			Strings.stringIDs.Add(2916035674U, "SetupProgressStartingWatchDogService");
			Strings.stringIDs.Add(3333988183U, "CasHealthNoMailboxServersToTest");
			Strings.stringIDs.Add(430617656U, "ProvisionServerDescription");
			Strings.stringIDs.Add(3732418497U, "ErrorChangePasswordForAppPasswordAccount");
			Strings.stringIDs.Add(1217883829U, "NoRecipients");
			Strings.stringIDs.Add(1589123818U, "ErrorSetGroupMailboxNoOwners");
			Strings.stringIDs.Add(1217557034U, "ErrorMovingUnsupportedArchiveUser");
			Strings.stringIDs.Add(633706886U, "MicrosoftExchangeRecipientExists");
			Strings.stringIDs.Add(3308770896U, "DeletionAndLogOnlyNotPermitted");
			Strings.stringIDs.Add(807443215U, "MtrtMessageDeliverDetailMessage");
			Strings.stringIDs.Add(2052997646U, "ErrorMustSpecifyEitherAbsoluteOrRelativePath");
			Strings.stringIDs.Add(1304678551U, "SetupComponentPostPrepForestGlobalConfig");
			Strings.stringIDs.Add(3568653834U, "ErrorCannotSetGlobalThrottlingPolicyWithoutForceSettingGlobalParameter");
			Strings.stringIDs.Add(1951423981U, "InformationSkippedEws");
			Strings.stringIDs.Add(1233036147U, "SupervisionPolicyCollectionAmbiguous");
			Strings.stringIDs.Add(3990056197U, "CopyStatusNonExchangeReplication");
			Strings.stringIDs.Add(1010297221U, "ErrorAccountEnabledForNonUserMailbox");
			Strings.stringIDs.Add(4150035864U, "ErrorInvalidOperationOnProvisionedMailboxServer");
			Strings.stringIDs.Add(2937791153U, "NegativePriority");
			Strings.stringIDs.Add(1521120953U, "InstallFfoWebServiceRoleDescription");
			Strings.stringIDs.Add(376492407U, "RemoveOrganizationFailWithoutSharedConfigurationParameter");
			Strings.stringIDs.Add(2967394064U, "InformationSkippedAsForEWS");
			Strings.stringIDs.Add(2085825600U, "ErrorUseDataPropertyNameParameter");
			Strings.stringIDs.Add(1517655709U, "DatabaseStatus");
			Strings.stringIDs.Add(2813353071U, "InfoGetPublishingUri");
			Strings.stringIDs.Add(2794053464U, "MomConnectorServiceDisplayName");
			Strings.stringIDs.Add(3156748290U, "InstallMailboxTransportDeliveryServiceTask");
			Strings.stringIDs.Add(2215772277U, "PreserveAppSettingsTask");
			Strings.stringIDs.Add(3258683347U, "SetupProgressRecreateCannedRBACRoles");
			Strings.stringIDs.Add(3944568479U, "SetupComponentPostSetupOSP");
			Strings.stringIDs.Add(234821519U, "SetupProgressUMEnabled");
			Strings.stringIDs.Add(3380466612U, "NewReceiveConnectorAddingPermissionsMsg");
			Strings.stringIDs.Add(128806629U, "ProgressForceQuorum");
			Strings.stringIDs.Add(2527198467U, "TestTeamMailboxSharePointResponseDetails");
			Strings.stringIDs.Add(2764287489U, "SetupProgressInstallTransportLogSearchSerice");
			Strings.stringIDs.Add(35249167U, "MtrtEventSend");
			Strings.stringIDs.Add(394963499U, "EnableAntiSpamUpdatesDeprecated");
			Strings.stringIDs.Add(2100461993U, "IntegratedVDirNotFound");
			Strings.stringIDs.Add(1545501201U, "CopyStatusResynchronizing");
			Strings.stringIDs.Add(484901463U, "SetupProgressConfigureMessageClassificationsContainer");
			Strings.stringIDs.Add(3632680670U, "ComplianceProgramStateError");
			Strings.stringIDs.Add(3941719008U, "DebugEndGeneratingUniqueSamAccountName");
			Strings.stringIDs.Add(631692221U, "SkippingInvalidTypeInGroupExpansion");
			Strings.stringIDs.Add(540991791U, "GetMsoDiagnosticsFindingTheCookie");
			Strings.stringIDs.Add(427603828U, "ProgressCopyingSystemFiles");
			Strings.stringIDs.Add(3259527179U, "SendMessage");
			Strings.stringIDs.Add(3937861705U, "RoleAvailabilityOnly");
			Strings.stringIDs.Add(3172987846U, "CasHealthSecureAccess");
			Strings.stringIDs.Add(3299454883U, "MigrationNewBatchUsersShareBatch");
			Strings.stringIDs.Add(3049974650U, "SetBothForwardingAddressConfirmationMessage");
			Strings.stringIDs.Add(3798570991U, "InstallMonitoringRoleDescription");
			Strings.stringIDs.Add(2761303157U, "NotEnoughInformationSupplied");
			Strings.stringIDs.Add(3211546685U, "OnPremisesConnectorHasRouteUsingMXId");
			Strings.stringIDs.Add(1622178204U, "ErrorLocalServerIsNotMailboxServer");
			Strings.stringIDs.Add(3841604610U, "ErrorPatternCannotContainMultiMatchOnGroupOrAssertion");
			Strings.stringIDs.Add(2573369783U, "CertificateStatusValid");
			Strings.stringIDs.Add(1421470187U, "DlpPolicyVersionUnsupported");
			Strings.stringIDs.Add(415510158U, "ErrorMapiVirtualDirectoryMustSpecifyIISAuthenticationMethods");
			Strings.stringIDs.Add(211700381U, "RecoveryActionArbiterServiceDescription");
			Strings.stringIDs.Add(1933689530U, "SetupProgressUninstallTransportLogSearchSerice");
			Strings.stringIDs.Add(698026304U, "ConfirmationMessageRemoveSearchDocumentFormat");
			Strings.stringIDs.Add(2715778979U, "ErrorCannotMovePublicFolderIntoNonPublicFolderMailbox");
			Strings.stringIDs.Add(2298668180U, "InvalidStoreMailboxIdentity");
			Strings.stringIDs.Add(3308687873U, "NewFilterNeitherOptimizedNorImproved");
			Strings.stringIDs.Add(2625625929U, "GetMsoDiagnosticsMoreDataIsAvailable");
			Strings.stringIDs.Add(3180802142U, "SetupComponentTransportLogSearchService");
			Strings.stringIDs.Add(2506373819U, "ErrorTagTypeModified");
			Strings.stringIDs.Add(2236297220U, "CatchAllRecipientNotAllowedForArbitrationMailbox");
			Strings.stringIDs.Add(572655299U, "ErrorLegacyOABDoesNotSupportLinkedMailbox");
			Strings.stringIDs.Add(1767452929U, "ErrorSelectUserCmdletOnlyWorksForTwoUsers");
			Strings.stringIDs.Add(201914195U, "ErrorServicePlanIsNotSet");
			Strings.stringIDs.Add(839645532U, "MtrtRemoveHeader");
			Strings.stringIDs.Add(2376119956U, "JournalingParameterErrorExpiryDateWithoutGcc");
			Strings.stringIDs.Add(4174794989U, "ConfirmationMessageSetImap4Config");
			Strings.stringIDs.Add(4021969573U, "InCorrectRequiredPOPSetting");
			Strings.stringIDs.Add(1268368950U, "WarnAboutSetDatabaseDefaults");
			Strings.stringIDs.Add(1288060522U, "ErrorRestrictionWithWrongGroupType");
			Strings.stringIDs.Add(2488760739U, "DagMembersUpCheckDesc");
			Strings.stringIDs.Add(127311569U, "ErrorCannotDisablePublicFolderMailboxWithFolders");
			Strings.stringIDs.Add(2327516238U, "CasHealthScenarioLogon");
			Strings.stringIDs.Add(2468414724U, "ADAttributeInitials");
			Strings.stringIDs.Add(3835641716U, "NeedIisRestartWarning");
			Strings.stringIDs.Add(6354352U, "ErrorFailedToCreatePL");
			Strings.stringIDs.Add(1230778519U, "VerifyRoleInstalled");
			Strings.stringIDs.Add(140153690U, "ConfirmationMessageGetFailedContentIndexDocuments");
			Strings.stringIDs.Add(1867927292U, "FailedToLoadEdgeSyncConfigFile");
			Strings.stringIDs.Add(1163910679U, "ClassificationRuleCollectionIneffectiveSharingViolationCheck");
			Strings.stringIDs.Add(892157639U, "VerboseFailedToTestWriteAccessToExchangeServers");
			Strings.stringIDs.Add(410666693U, "ErrorInvalidGuidFormat");
			Strings.stringIDs.Add(1333408282U, "MtrtDecrypt");
			Strings.stringIDs.Add(4176097491U, "ErrorNotRunningAsTenantAdmin");
			Strings.stringIDs.Add(3736170493U, "InstallMonitoringServiceTask");
			Strings.stringIDs.Add(1547108334U, "CreateDumpster20Tag");
			Strings.stringIDs.Add(3242462262U, "InstallClientAccessRoleDescription");
			Strings.stringIDs.Add(1707855545U, "ConfirmationMessageTestWebServicesConnectivity");
			Strings.stringIDs.Add(3312019203U, "ConfigureMailTips");
			Strings.stringIDs.Add(591582552U, "TestMigrationServerConnectionTimeout");
			Strings.stringIDs.Add(2449914212U, "SetupProgressStartingTransportLogSearchService");
			Strings.stringIDs.Add(3137393342U, "ErrorPublicFolderHierarchyAlreadyProvisioned");
			Strings.stringIDs.Add(3654120958U, "ErrorInvalidOperationOnProvisionedServer");
			Strings.stringIDs.Add(2556217749U, "CasHealthEasScenarioGetItemEstimate");
			Strings.stringIDs.Add(1093843235U, "SetupProgressCreateOutOfTheBoxAdditionalMrmTags");
			Strings.stringIDs.Add(2136017683U, "AddressRewriteExceptionListDisallowed");
			Strings.stringIDs.Add(3528453455U, "InstallIisWebServiceExtensionCommitting");
			Strings.stringIDs.Add(501834753U, "SetupProgressCreateGlobalContainers");
			Strings.stringIDs.Add(3631260574U, "ErrorSyncProtocolNotSpecified");
			Strings.stringIDs.Add(3934741745U, "ArchiveNamePrefix");
			Strings.stringIDs.Add(2085683230U, "InvokePreMoveActionDescription");
			Strings.stringIDs.Add(1852904459U, "SetupProgressProhibitSendQuota");
			Strings.stringIDs.Add(1456068237U, "SetupComponentPerfCountersTransport");
			Strings.stringIDs.Add(29841201U, "WatchDogServiceDisplayName");
			Strings.stringIDs.Add(2600973645U, "StoppingOnePointService");
			Strings.stringIDs.Add(3497830027U, "ProgressCheckingReplayState");
			Strings.stringIDs.Add(3673730471U, "CopyStatusDismounted");
			Strings.stringIDs.Add(2442076717U, "DebugStartIsDomainReservedCheck");
			Strings.stringIDs.Add(3982469894U, "InvalidActionParameter");
			Strings.stringIDs.Add(3084415248U, "CasHealthClientAccessServerName");
			Strings.stringIDs.Add(1415129751U, "ArchiveDatabaseNotExplicitlyStampedError");
			Strings.stringIDs.Add(2556724114U, "ExchangeWindowsPermissionsDescription");
			Strings.stringIDs.Add(2806693281U, "CasHealthOwaPingScenarioName");
			Strings.stringIDs.Add(2425687808U, "TargetMailboxRequired");
			Strings.stringIDs.Add(3860792703U, "ConfirmationMessageSetTransportConfig");
			Strings.stringIDs.Add(3173344529U, "MigrationPartitionMailboxNotFound");
			Strings.stringIDs.Add(3994004286U, "ClassificationRuleCollectionExportEncyrptedProhibited");
			Strings.stringIDs.Add(3144908676U, "UninstallGatewayRoleDescription");
			Strings.stringIDs.Add(2985845130U, "HighPriorityChecksFailed");
			Strings.stringIDs.Add(3773528322U, "CouldNotRestartExSearch");
			Strings.stringIDs.Add(930222453U, "AdminAuditLogSearchMissingCmdletsWhileParameterProvided");
			Strings.stringIDs.Add(3527197609U, "RmsOnlineFailedToValidateKeys");
			Strings.stringIDs.Add(2775441772U, "VerboseCheckingScopePassed");
			Strings.stringIDs.Add(1613874467U, "NotAValidDistributionGroup");
			Strings.stringIDs.Add(894156138U, "ConfirmEnforceRequireSslOnRoot");
			Strings.stringIDs.Add(1268556399U, "ErrorMessageCopyForSendOnBehalfEnabledCanOnlySetOnSharedMailbox");
			Strings.stringIDs.Add(1397395049U, "NoBindingsSet");
			Strings.stringIDs.Add(1360109098U, "ErrorAccountPartitionRequired");
			Strings.stringIDs.Add(3103126396U, "DebugEndInAcceptedDomainCheck");
			Strings.stringIDs.Add(3692425173U, "UninstallingTranscodingService");
			Strings.stringIDs.Add(3387886734U, "SetupProgressEnableWMIAsync");
			Strings.stringIDs.Add(1971301201U, "MtrtDeleteMessage");
			Strings.stringIDs.Add(2658797945U, "ClassificationRuleCollectionTimeoutFailure");
			Strings.stringIDs.Add(2428787024U, "ErrorMessageCopyForSentAsEnabledCanOnlySetOnSharedMailbox");
			Strings.stringIDs.Add(4233755904U, "ErrorLinkedRoleGroupCannotHaveMembers");
			Strings.stringIDs.Add(1504344471U, "UnableToDetermineCreatingUser");
			Strings.stringIDs.Add(1817876216U, "ProgressDeletingCatalog");
			Strings.stringIDs.Add(3183614673U, "ErrorGlobalThrottlingPolicyNotFound");
			Strings.stringIDs.Add(2734579474U, "IncompatibleTenantOrganizationForBulkProvisioning");
			Strings.stringIDs.Add(2720144322U, "RuleStateEnabled");
			Strings.stringIDs.Add(1049461168U, "DisasterRecoveryMailboxRoleDescription");
			Strings.stringIDs.Add(4128527909U, "ManagedAvailabilityServersUSGDescription");
			Strings.stringIDs.Add(3250669143U, "ConfirmationMessageTestEdgeSynchronization");
			Strings.stringIDs.Add(3334485045U, "ErrorBasicAndLiveIdBasicNotAllowed");
			Strings.stringIDs.Add(3247824756U, "ErrorInvalidCharException");
			Strings.stringIDs.Add(3233886878U, "CalendarVDirNotFound");
			Strings.stringIDs.Add(124793491U, "ReplicationCheckFailuresLabel");
			Strings.stringIDs.Add(1844786054U, "CreateAltFswWillAutomaticallyCalculateLater");
			Strings.stringIDs.Add(1855656096U, "ProgressDeletingCopySystemFiles");
			Strings.stringIDs.Add(460271254U, "UninstallCentralAdminServiceTask");
			Strings.stringIDs.Add(3306705804U, "SetupComponentConfiguringDAV");
			Strings.stringIDs.Add(2740942150U, "CouldNotFindFirstOrgPerimeterConfigObjectId");
			Strings.stringIDs.Add(2507815087U, "MapiSubmitSystemProbeInternetMessageId");
			Strings.stringIDs.Add(2789110641U, "ErrorFailedToGetPublishingUri");
			Strings.stringIDs.Add(4130544628U, "RequiredStartDateParameter");
			Strings.stringIDs.Add(2328331598U, "SetupProgressRemotePowerShellAccessEnabled");
			Strings.stringIDs.Add(535310264U, "SetupProgressOwaLightEnabled");
			Strings.stringIDs.Add(3015750530U, "InvalidUnicodeCharacterUsage");
			Strings.stringIDs.Add(1310486619U, "ErrorRemoteTargetDatabaseNotAllowedForRemotePull");
			Strings.stringIDs.Add(4161302825U, "CasHealthEasScenarioSyncZero");
			Strings.stringIDs.Add(2469261993U, "SetUMMailboxPolicyDuplicateSourceForestPolicyNames");
			Strings.stringIDs.Add(468761160U, "CatchAllRecipientTypeNotAllowed");
			Strings.stringIDs.Add(520563401U, "ErrorFailedToCheckMode");
			Strings.stringIDs.Add(2047820105U, "ErrorEnableRoomMailboxAccountCanBeUsedWithRoomsOnly");
			Strings.stringIDs.Add(3824133691U, "ErrorTaskRunningLocationMailboxOnly");
			Strings.stringIDs.Add(4186670836U, "OwaIdentityMustHaveValueException");
			Strings.stringIDs.Add(1379838521U, "DebugGettingNetIdFromMemeberName");
			Strings.stringIDs.Add(4185944676U, "ExchangeMigrationSidHistoryAuditingDSGDescription");
			Strings.stringIDs.Add(3325258591U, "SmtpExternalServerSettings");
			Strings.stringIDs.Add(4273640756U, "CannotDisableAdfsEcpWithoutOwaFirst");
			Strings.stringIDs.Add(1926434175U, "SetupProgressStoppingIISAdminService");
			Strings.stringIDs.Add(1418979799U, "UnableToCommunicate");
			Strings.stringIDs.Add(1639545723U, "TenantConfigurationInfoIsNull");
			Strings.stringIDs.Add(1855234972U, "ComplianceAuditServiceDisplayName");
			Strings.stringIDs.Add(3361199071U, "UmLanguagePathLogFilePathNotSpecified");
			Strings.stringIDs.Add(1633415838U, "StartAfterOrCompleteAfterCannotBeSetForOfflineMoves");
			Strings.stringIDs.Add(4242852735U, "ReplicationCheckBlankMessage");
			Strings.stringIDs.Add(3326005479U, "AdminAuditLogSearchFailed");
			Strings.stringIDs.Add(2193132985U, "MigrationCompleteAfterChangedToEarlierTime");
			Strings.stringIDs.Add(433212455U, "ErrorCannotMoveHalfMailboxBetweenTwoNonDatacenterForests");
			Strings.stringIDs.Add(2687116030U, "StartingToUpdateMFLFiles");
			Strings.stringIDs.Add(2411285952U, "CannotSetEdgeTransportServerOnAd");
			Strings.stringIDs.Add(185298481U, "ApplicationUrisMissingOnReturnedInformation");
			Strings.stringIDs.Add(342525783U, "DNSRoutingEnabledMustNotBeSpecified");
			Strings.stringIDs.Add(269884753U, "CannotLocateFedOrgId");
			Strings.stringIDs.Add(291218883U, "ErrorIncompleteSettings");
			Strings.stringIDs.Add(1213215400U, "ContinueOnRemoveSearchResults");
			Strings.stringIDs.Add(1516838238U, "PopImapLoggingOn");
			Strings.stringIDs.Add(2155968014U, "PopInternalServerSettings");
			Strings.stringIDs.Add(2370208778U, "ConfirmationMessageSetEdgeSyncSendConnectorAddressSpaceOrSmartHosts");
			Strings.stringIDs.Add(434752309U, "ReplayLagPlayDownReasonLagDisabled");
			Strings.stringIDs.Add(1865089306U, "InstallCentralAdminDatabaseRoleDescription");
			Strings.stringIDs.Add(1756888518U, "OwaUrlNotMatchEcpWarning");
			Strings.stringIDs.Add(696161139U, "ErrorPFDistributionNotSpecified");
			Strings.stringIDs.Add(109380891U, "VerboseResetPasswordOnNextLogon");
			Strings.stringIDs.Add(1362435159U, "ErrorAppPoolIdCannotBeEmpty");
			Strings.stringIDs.Add(76164030U, "InformationSkippedOab");
			Strings.stringIDs.Add(3202705274U, "NoRMSServersFoundException");
			Strings.stringIDs.Add(30958655U, "CasHealthOwaNoExternalUrl");
			Strings.stringIDs.Add(3893846751U, "ReplayLagStatusLabelPercentage");
			Strings.stringIDs.Add(1018021345U, "ErrorCannotUpdateCertificateWhenFederationNotProvisioned");
			Strings.stringIDs.Add(4081846807U, "WarningMultiSiteSourceServers");
			Strings.stringIDs.Add(556775763U, "ErrorTeamMailboxSharePointUrl");
			Strings.stringIDs.Add(3824833340U, "AuthenticationMethodWindows");
			Strings.stringIDs.Add(1539605370U, "MountStatusMounting");
			Strings.stringIDs.Add(2295231809U, "SetupProgressInstallDefaultAcceptedDomain");
			Strings.stringIDs.Add(400166206U, "ComplianceServiceDescription");
			Strings.stringIDs.Add(812672951U, "ContentIndexingExSearchNotFound");
			Strings.stringIDs.Add(3105051314U, "CasHealthSyncFolderItemsScenarioDescription");
			Strings.stringIDs.Add(97006653U, "ChangeServiceConfigFailure");
			Strings.stringIDs.Add(2281255925U, "ErrorDisableMailuserWithJournalArchive");
			Strings.stringIDs.Add(2313611105U, "ErrorTooManyCertificates");
			Strings.stringIDs.Add(1799783420U, "SetupProgressStoppingTransportSyncManagerService");
			Strings.stringIDs.Add(161394695U, "ConfirmationMessageSetSenderFilterConfig");
			Strings.stringIDs.Add(408634319U, "SetupProcessCreateDefaultSharingPolicy");
			Strings.stringIDs.Add(990532542U, "ActiveDirectorySearchViaADDriverAgainstSpecificDCScenario");
			Strings.stringIDs.Add(3299210260U, "CasHealthResult");
			Strings.stringIDs.Add(911093058U, "DRMNotAllowedForConsumerDialPlan");
			Strings.stringIDs.Add(2360538852U, "CafePrereqCheck");
			Strings.stringIDs.Add(3829706538U, "DatabaseSeedStatusLabelPercentage");
			Strings.stringIDs.Add(3236535734U, "CasHealthCreateItemScenarioDescription");
			Strings.stringIDs.Add(3547605377U, "SetupProgressInstallingDefaultTransportAgents");
			Strings.stringIDs.Add(2035571295U, "ErrorExpansionServerMustBeTiOrBhServer");
			Strings.stringIDs.Add(764010493U, "ErrorRoomMailboxPasswordCanOnlyBeUsedWithEnableRoomMailboxAccount");
			Strings.stringIDs.Add(3388261540U, "MailboxParameterMissingException");
			Strings.stringIDs.Add(1226596383U, "PromptToOverwriteExistingRuleCollection");
			Strings.stringIDs.Add(4104165981U, "AuthenticationMethodLiveIdFba");
			Strings.stringIDs.Add(3043034532U, "ErrorIncorrectDefaultTag");
			Strings.stringIDs.Add(3268676866U, "ErrorEnableRoomMailboxAccountCannotBeUsedWithLinkedRoomMailbox");
			Strings.stringIDs.Add(2147011188U, "MSARPSServiceDisplayName");
			Strings.stringIDs.Add(4135645967U, "NotifySenderActionIsBeingOverridded");
			Strings.stringIDs.Add(137891794U, "EitherSenderOrRmsOnlineParametersMustBeSpecified");
			Strings.stringIDs.Add(2340528056U, "StoppingMomService");
			Strings.stringIDs.Add(2455516899U, "HighPriorityChecksWarning");
			Strings.stringIDs.Add(3888635110U, "SetupProgressStartingInformationStoreService");
			Strings.stringIDs.Add(3766269728U, "OldRmsOnlineImportAfterRmsOnlineForwardSync");
			Strings.stringIDs.Add(1448587360U, "InvalidReportEndDate");
			Strings.stringIDs.Add(766081866U, "DisasterRecoveryMonitoringRoleDescription");
			Strings.stringIDs.Add(2214481763U, "AllWebServicesTransactionsSucceeded");
			Strings.stringIDs.Add(3019121814U, "ArchiveConnectivityResultUndefined");
			Strings.stringIDs.Add(3252760822U, "Error_MissingSenderEmail");
			Strings.stringIDs.Add(21238159U, "EdgeServerNotSubscribed");
			Strings.stringIDs.Add(1455306500U, "DelegateRoleTypeOrgAdmin");
			Strings.stringIDs.Add(1020874888U, "InfoCheckingOrganizationContext");
			Strings.stringIDs.Add(1664700488U, "DagMgmtServiceDescription");
			Strings.stringIDs.Add(1279214916U, "WarningRedirectToRecipientsNotSet");
			Strings.stringIDs.Add(2391097994U, "IndexEntryIsMissingData");
			Strings.stringIDs.Add(1748468167U, "SetupProgressCreateApprovalApplicationsContainer");
			Strings.stringIDs.Add(2354834546U, "PublicFolderMailboxNotFound");
			Strings.stringIDs.Add(8549621U, "PopImapNoMessagesToDelete");
			Strings.stringIDs.Add(49581212U, "NoJournalingToPublicFolder");
			Strings.stringIDs.Add(283984324U, "ProgressStatusRemovingAddressListTree");
			Strings.stringIDs.Add(1377545162U, "ADAttributeCustomAttribute4");
			Strings.stringIDs.Add(4050256429U, "VerboseRestartDefaultWebSite");
			Strings.stringIDs.Add(570475965U, "ErrorInvalidParametersForOutlookAnywherePublicFolderMailboxMigration");
			Strings.stringIDs.Add(3859128598U, "ErrorFailedToGetLicensingUri");
			Strings.stringIDs.Add(4221700743U, "MicrosoftExchangeRecipientNotFoundOnGatewayServerRole");
			Strings.stringIDs.Add(121474667U, "SetupProgressContactCountQuota");
			Strings.stringIDs.Add(3995778130U, "ErrorInstallationModeNotSupported");
			Strings.stringIDs.Add(3604568438U, "NoSuchRequestInSpecifiedIndex");
			Strings.stringIDs.Add(2370162247U, "MigrationAutoStopAlreadySet");
			Strings.stringIDs.Add(3628539559U, "UseDagDefaultOnOffOff");
			Strings.stringIDs.Add(1995762726U, "ServerUnavailableException");
			Strings.stringIDs.Add(325877545U, "ClientAccessOwaComponentDescription");
			Strings.stringIDs.Add(233667309U, "SetupProgressCreateUceContentFilterObject");
			Strings.stringIDs.Add(1589222130U, "ConversationsMailboxDisabled");
			Strings.stringIDs.Add(1909170865U, "SetupComponentUpdateResourcePropertySchema");
			Strings.stringIDs.Add(1612688160U, "TransitionStateUnknown");
			Strings.stringIDs.Add(555828727U, "FileDataShouldNotBeSet");
			Strings.stringIDs.Add(3623760724U, "ParameterErrorForDefaultUsage");
			Strings.stringIDs.Add(4269792004U, "SetupProgressStartingDagMgmtService");
			Strings.stringIDs.Add(4252228748U, "FinishingFileCopy");
			Strings.stringIDs.Add(143203986U, "MtrtReportSeverityLevelHigh");
			Strings.stringIDs.Add(2335842547U, "ErrorPatternCannotContainGroupOrAssertionWithMultiMatchWildcard");
			Strings.stringIDs.Add(1485878098U, "EnableConversationsTask");
			Strings.stringIDs.Add(3039898050U, "NoDeviceFilters");
			Strings.stringIDs.Add(2918650372U, "ConfirmationMessageSearchMessageTracking");
			Strings.stringIDs.Add(533928811U, "ConfirmationMessageTestSystemHealth");
			Strings.stringIDs.Add(4015121608U, "CopyStatusFailed");
			Strings.stringIDs.Add(4107372202U, "DlpPolicyStateDisplayName");
			Strings.stringIDs.Add(1881614050U, "MailboxSearchDisabled");
			Strings.stringIDs.Add(1613921097U, "ErrorManagedByMustBeSpecifiedWIthOrganization");
			Strings.stringIDs.Add(1886798257U, "LiveIdAuthenticationResultSuccess");
			Strings.stringIDs.Add(29090731U, "FinishedComponentTasks");
			Strings.stringIDs.Add(3184703320U, "MountStatusDismounting");
			Strings.stringIDs.Add(455979009U, "UninstallPop3BeServiceTask");
			Strings.stringIDs.Add(3215055419U, "DisasterRecoveryFrontendTransportRoleDescription");
			Strings.stringIDs.Add(2361940575U, "TeamMailboxSharePointUrlMissing");
			Strings.stringIDs.Add(2454229449U, "ConfirmationMessageTestEdgeSyncEhf");
			Strings.stringIDs.Add(1631911187U, "PhotoMustNotBeBlank");
			Strings.stringIDs.Add(888502160U, "PopExternalServerSettings");
			Strings.stringIDs.Add(3447968637U, "ConfirmationRemoveAllSupervisionListEntries");
			Strings.stringIDs.Add(4165998328U, "InvalidReportingPeriod");
			Strings.stringIDs.Add(3472376295U, "FfoWebServicePermissionsComponentDescription");
			Strings.stringIDs.Add(2726496295U, "RepairUrgencyNormal");
			Strings.stringIDs.Add(3114647655U, "ErrorDefaultMalwareConfigCannotBeDeleted");
			Strings.stringIDs.Add(752989991U, "InvalidAggregateBy");
			Strings.stringIDs.Add(2099442359U, "SetupProgressCreateRBACRoleAssignmentsContainer");
			Strings.stringIDs.Add(4240648378U, "AutoProvisionFailedException");
			Strings.stringIDs.Add(2833582586U, "NeedToSpecifyServerObject");
			Strings.stringIDs.Add(875645786U, "HybridMailflowNotYetSet");
			Strings.stringIDs.Add(3352448229U, "DegubEndConnectingToDomainServices");
			Strings.stringIDs.Add(133553638U, "CallingGetOrganizationRelationshipSettings");
			Strings.stringIDs.Add(2431610718U, "DagTaskValidatingParameters");
			Strings.stringIDs.Add(1191033945U, "NewRuleSyncAcrossDifferentVersionsNeeded");
			Strings.stringIDs.Add(2167067396U, "PopImapDeleteOldMsgs");
			Strings.stringIDs.Add(3174578250U, "ReloadingRequest");
			Strings.stringIDs.Add(1880520539U, "RepairUrgencyCritical");
			Strings.stringIDs.Add(1935034447U, "UnpackingFiles");
			Strings.stringIDs.Add(2464857106U, "CentralAdminServiceDisplayName");
			Strings.stringIDs.Add(1020674371U, "WarnRpcHttpNegotiateCoexistence");
			Strings.stringIDs.Add(688825023U, "SetupProgressCreatingAdamInstance");
			Strings.stringIDs.Add(422014390U, "ActiveSyncMetabaseProxyInstallFailure");
			Strings.stringIDs.Add(1957537238U, "InvalidMessageDataClassificationEmptyName");
			Strings.stringIDs.Add(1283422781U, "ErrorFileHasNoTextContent");
			Strings.stringIDs.Add(1040938896U, "ErrorTaskRunningLocationHubOnly");
			Strings.stringIDs.Add(4035449407U, "ErrorInboxRuleDoesNotExist");
			Strings.stringIDs.Add(4258639914U, "CasHealthEasScenarioGetFolder");
			Strings.stringIDs.Add(1239032133U, "InstallUnifiedMessagingRoleDescription");
			Strings.stringIDs.Add(442307290U, "DagTaskFormedCluster");
			Strings.stringIDs.Add(653347817U, "IisTasksApplicationRootValidationProperty");
			Strings.stringIDs.Add(3750163877U, "WillIgnoreNoncriticalErrors");
			Strings.stringIDs.Add(2476064707U, "ErrorRemoteTargetDatabaseMustBeSpecifiedForRemotePush");
			Strings.stringIDs.Add(3162325577U, "ReplayLagPlayDownReasonLogsInRequiredRange");
			Strings.stringIDs.Add(3648320443U, "InstallMessageTracingClientServiceTask");
			Strings.stringIDs.Add(1343133942U, "FriendlyNameTooLong");
			Strings.stringIDs.Add(1668037270U, "ErrorPatternCannotContainSequentialIdenticalMultiMatchPatterns");
			Strings.stringIDs.Add(467864039U, "ErrorConflictCountryOrRegion");
			Strings.stringIDs.Add(3500302124U, "InvalidSenderAddress");
			Strings.stringIDs.Add(3542711257U, "PhoneNumberAllowedOnlyOnE164ConsumerDialplan");
			Strings.stringIDs.Add(1785523337U, "ProgressDeletingSystemFiles");
			Strings.stringIDs.Add(3379767095U, "ErrorMissingManagedFolder");
			Strings.stringIDs.Add(3376852758U, "ConfirmationMessageExportDlpPolicyCollection");
			Strings.stringIDs.Add(4054146957U, "InvalidQueryParameters");
			Strings.stringIDs.Add(4187281280U, "MtrtMessageExpandDetailMessage");
			Strings.stringIDs.Add(2971233211U, "InfoRmsOnlinePrerequisitesChecked");
			Strings.stringIDs.Add(2956386236U, "SetupProgressCreateDefaultMessageClassificationsContainer");
			Strings.stringIDs.Add(489716232U, "InfoGetTemplate");
			Strings.stringIDs.Add(2853286652U, "DlpPolicyModeDisplayName");
			Strings.stringIDs.Add(3230982409U, "WarningXHeaderValueNotSet");
			Strings.stringIDs.Add(711082378U, "GetFederationInformationFailed");
			Strings.stringIDs.Add(534171625U, "UninstallAssistantsServiceTask");
			Strings.stringIDs.Add(1053984119U, "ProgressCopyingPST");
			Strings.stringIDs.Add(863270287U, "UninstallComplianceServiceTask");
			Strings.stringIDs.Add(209725232U, "ConfirmationMessageSetDataClassificationConfig");
			Strings.stringIDs.Add(2620423486U, "WarnBasicAuthInClear");
			Strings.stringIDs.Add(4118091956U, "DisableContentIndexTask");
			Strings.stringIDs.Add(2320733697U, "GatewayRoleDisplayName");
			Strings.stringIDs.Add(4146114679U, "RemoveOrganizationFailRelocationInProgress");
			Strings.stringIDs.Add(3143233303U, "CafeIisWebServiceExtensionsDescription");
			Strings.stringIDs.Add(1889514201U, "NoDefaultTestAccount");
			Strings.stringIDs.Add(2420149034U, "UsageTypeClient");
			Strings.stringIDs.Add(1613721886U, "SetupProgressRecreateCannedRBACRoleAssignments");
			Strings.stringIDs.Add(2396495091U, "SetupProgressStoppingRpcClientAccessService");
			Strings.stringIDs.Add(3593604775U, "CasHealthScenario");
			Strings.stringIDs.Add(4138813450U, "InstallCafeRoleDescription");
			Strings.stringIDs.Add(1884159739U, "InstallMailboxRoleDescription");
			Strings.stringIDs.Add(2457049403U, "ErrorInvalidValueForPreventCompletion");
			Strings.stringIDs.Add(283239335U, "AboutToAddLocalEtsUSGToLocalAdminGroup");
			Strings.stringIDs.Add(3910668745U, "NotificationsBrokerServiceDisplayName");
			Strings.stringIDs.Add(3846996117U, "MigrationReportIntervalParameterInvalid");
			Strings.stringIDs.Add(1749900570U, "SetupComponentPostSetupFrontendTransport");
			Strings.stringIDs.Add(1058256821U, "ErrorFilterParametersForCloneMode");
			Strings.stringIDs.Add(316441426U, "SetupProgressCreatingDefaultOAB");
			Strings.stringIDs.Add(3104098617U, "DebugEndSetDatabase");
			Strings.stringIDs.Add(1797669216U, "Tentative");
			Strings.stringIDs.Add(3532057202U, "RolePublishingEditor");
			Strings.stringIDs.Add(1916928879U, "NewDagConfigurationPassedChecks");
			Strings.stringIDs.Add(3150409675U, "AutodiscoverSvcGetRemoteEndpoint");
			Strings.stringIDs.Add(4097081969U, "SetupProgressCalendarSharingEnabled");
			Strings.stringIDs.Add(1224187099U, "NoMonitoringErrorsInTestServiceHealthTask");
			Strings.stringIDs.Add(3832339474U, "SetupComponentConfiguringMsFte");
			Strings.stringIDs.Add(4054043088U, "ReservedString3");
			Strings.stringIDs.Add(980249561U, "ErrorBPARunFailed");
			Strings.stringIDs.Add(363803184U, "UMCallAnsweringRuleDescriptionTakeActions");
			Strings.stringIDs.Add(535010283U, "SetupProgressCommonConfiguration");
			Strings.stringIDs.Add(4284518091U, "DatacenterLiveIdPerfCountersComponentDescription");
			Strings.stringIDs.Add(1642342167U, "NewDagPassedChecks");
			Strings.stringIDs.Add(1627739245U, "InstallForwardSyncServiceTask");
			Strings.stringIDs.Add(2839570606U, "SetupProgressStartingMailSubmissionService");
			Strings.stringIDs.Add(642792694U, "SendConnectorProxyEnabledOnEdge");
			Strings.stringIDs.Add(1810462903U, "VerboseNoOabVDirOnLocalServer");
			Strings.stringIDs.Add(243344748U, "NotificationsBrokerServiceDescription");
			Strings.stringIDs.Add(1877930527U, "SetupProgressStoppingMailboxAssistantService");
			Strings.stringIDs.Add(2617553441U, "InfoPreL");
			Strings.stringIDs.Add(750721438U, "ErrorMessageClassModified");
			Strings.stringIDs.Add(2838173073U, "IgnoringSameNextCertificate");
			Strings.stringIDs.Add(2235134294U, "ErrorGroupTypeInvalid");
			Strings.stringIDs.Add(1695373195U, "HealthManagerServiceDisplayName");
			Strings.stringIDs.Add(1050445322U, "DiagnosticsServiceDisplayName");
			Strings.stringIDs.Add(3444014848U, "FileDataMissing");
			Strings.stringIDs.Add(3548459082U, "InstallPop3BeServiceTask");
			Strings.stringIDs.Add(4274815123U, "ServiceHostDescription");
			Strings.stringIDs.Add(1326571555U, "SetupProgressConfigureControlPointConfig");
			Strings.stringIDs.Add(599651768U, "ErrorModerationWithWrongGroupType");
			Strings.stringIDs.Add(4247632026U, "SiteMailboxMembershipSyncEventEnqueued");
			Strings.stringIDs.Add(3389267252U, "ErrorTeamMailboxSharePointServerVersionInCompatible");
			Strings.stringIDs.Add(2147062214U, "AllowVoiceMailAnalysisWarning");
			Strings.stringIDs.Add(4188748229U, "SetupComponentPreSetupClientAccess");
			Strings.stringIDs.Add(1384051878U, "SetupProgressUninstallingMsFteMSI");
			Strings.stringIDs.Add(1962764795U, "ErrorMovingOldExchangeUsersUnsupported");
			Strings.stringIDs.Add(4100221894U, "RemoveADServerMetadataSucceeded");
			Strings.stringIDs.Add(471227616U, "QuarantineMessageTypeTransportRule");
			Strings.stringIDs.Add(3949675526U, "ErrorAssociatedUserMailboxExist");
			Strings.stringIDs.Add(847696334U, "SetupProgressInstallInternetMessageFormat");
			Strings.stringIDs.Add(247279245U, "EditWillUpgradeSearchObject");
			Strings.stringIDs.Add(2438747511U, "SetupComponentUnifiedMessagingGlobalConfig");
			Strings.stringIDs.Add(365229532U, "NoHubInSubscribedSite");
			Strings.stringIDs.Add(1383341120U, "ErrorFailedToLoadIRMConfig");
			Strings.stringIDs.Add(759230387U, "ProgressCopyingCatalog");
			Strings.stringIDs.Add(3237430231U, "MailboxTransportSubmissionServiceDisplayName");
			Strings.stringIDs.Add(3455360282U, "ImapInternalServerSettings");
			Strings.stringIDs.Add(4109012977U, "DatabaseSeedStatusLabelWrittenPerSec");
			Strings.stringIDs.Add(2526768594U, "NullUserError");
			Strings.stringIDs.Add(2128735504U, "ConfirmationMessageSetAutodiscoverVirtualDirectory");
			Strings.stringIDs.Add(1315910557U, "ErrorAuthSameAsCurrent");
			Strings.stringIDs.Add(407003399U, "VerboseHasWriteAccessToExchangeServers");
			Strings.stringIDs.Add(3070362658U, "ActiveSyncMetabaseIsapiInstallFailure");
			Strings.stringIDs.Add(2706201571U, "InstallCentralAdminRoleDescription");
			Strings.stringIDs.Add(3473716705U, "ConfirmationMessageImportDlpPolicyTemplate");
			Strings.stringIDs.Add(2747221151U, "ADAttributeIsWhiteSpaceOrContainsWhiteSpacePrefixOrSuffix");
			Strings.stringIDs.Add(1656912255U, "SetupProgressImportingAdamSchema");
			Strings.stringIDs.Add(2143081262U, "SupportedToolsCannotReadFile");
			Strings.stringIDs.Add(3471145417U, "AuthModuleFilterMetabaseIsapiInstallFailure");
			Strings.stringIDs.Add(2163423328U, "HeaderValue");
			Strings.stringIDs.Add(2834035896U, "NonE14ServerError");
			Strings.stringIDs.Add(1655030876U, "ClientAccessServiceControlComponentDescription");
			Strings.stringIDs.Add(3033688531U, "GatewayPrereqCheck");
			Strings.stringIDs.Add(666293858U, "CannotSetHubTransportServerOnAdam");
			Strings.stringIDs.Add(4207425180U, "MigrationCompleteAfterIncorrectMigrationType");
			Strings.stringIDs.Add(3123642639U, "CasHealthOwaReturnedErrorPageForAuth");
			Strings.stringIDs.Add(973517949U, "LocalDomainNotFoundException");
			Strings.stringIDs.Add(1104443180U, "Info_MessageItemHasBeenUpdated");
			Strings.stringIDs.Add(1949550598U, "SetupProgressOwaEnabled");
			Strings.stringIDs.Add(1612924637U, "ErrorManageDelegation1ProofDomainOwnership");
			Strings.stringIDs.Add(493674830U, "ValidateSecretFailure");
			Strings.stringIDs.Add(3600064844U, "VerboseResetADServerSettingsSucceed");
			Strings.stringIDs.Add(2112765551U, "SetupProgressSkipToUAndParentalControlCheckEnabled");
			Strings.stringIDs.Add(2062169902U, "CountingFilesToCopy");
			Strings.stringIDs.Add(1429918150U, "AnonymousSharingEnabledWarning");
			Strings.stringIDs.Add(3639980884U, "CalendarLogsNotFound");
			Strings.stringIDs.Add(3048237641U, "MSARPSServiceDescription");
			Strings.stringIDs.Add(275657530U, "OwaMetabaseIsapiInstallFailure");
			Strings.stringIDs.Add(4106677824U, "MtrtMessageBadmail");
			Strings.stringIDs.Add(348002949U, "ProgressDeletingCopyLogFiles");
			Strings.stringIDs.Add(2872629304U, "MessageTypePermissionControlled");
			Strings.stringIDs.Add(2479928670U, "InstallTransportSyncManagerServiceTask");
			Strings.stringIDs.Add(1686231910U, "ErrorUnableToIdentifyTheUser");
			Strings.stringIDs.Add(2655847911U, "CasHealthEasGetItemEstimate");
			Strings.stringIDs.Add(4118655296U, "ErrorFailedExtractTextForFingerprint");
			Strings.stringIDs.Add(2734769737U, "ComInteropDllNotFound");
			Strings.stringIDs.Add(3029203465U, "SetupProgressCreateActiveSyncMailboxPolicyContainers");
			Strings.stringIDs.Add(1660006804U, "Pattern");
			Strings.stringIDs.Add(3317013550U, "ErrorRpcHttpMustSpecifyEitherIISAuthenticationMethodsOrDefaultAuthenticationMethod");
			Strings.stringIDs.Add(3640979510U, "SetupProgressCreateNewMailboxPlanObject");
			Strings.stringIDs.Add(2346524817U, "ReplicationCheckResultWarning");
			Strings.stringIDs.Add(3926581147U, "SetupProgressCreateJournalingRuleCollection");
			Strings.stringIDs.Add(3844154567U, "ContentIndexingServiceNotInstalled");
			Strings.stringIDs.Add(3873444299U, "ErrorMServeConfigurationIsBroken");
			Strings.stringIDs.Add(3678435224U, "ConfirmationMessageTestIntraOrganizationConnector");
			Strings.stringIDs.Add(1310542130U, "CasHealthOwaLoginWithNoCredentials");
			Strings.stringIDs.Add(1919389628U, "MonitoringServiceDisplayName");
			Strings.stringIDs.Add(3397451545U, "CannotSpecifyApplyMandatoryPropertiesParameterWithE15OrLaterOab");
			Strings.stringIDs.Add(539901569U, "RegSvr32Failed");
			Strings.stringIDs.Add(3617746388U, "DeviceWipeSucceeded");
			Strings.stringIDs.Add(1317139899U, "ErrorAtleastOneOfCSVInput");
			Strings.stringIDs.Add(4040564888U, "QuarantineMessageTypeSpam");
			Strings.stringIDs.Add(4143535486U, "SetupProgressStoppingMailSubmissionService");
			Strings.stringIDs.Add(3730091040U, "ErrorInvalidOrganization");
			Strings.stringIDs.Add(1440702907U, "JournalingReportNdrToNotSet");
			Strings.stringIDs.Add(204895011U, "ProgressStatusInProgress");
			Strings.stringIDs.Add(3366786089U, "NewSendConnectorIncorrectUsageParameters");
			Strings.stringIDs.Add(1809082251U, "ConfigurationContainerNotFoundException");
			Strings.stringIDs.Add(3807329645U, "SmtpInternalServerSettings");
			Strings.stringIDs.Add(2691134897U, "MalboxFolderRightsCreateSubfolders");
			Strings.stringIDs.Add(641425147U, "ErrorFailedToManagedFoldersInMailbox");
			Strings.stringIDs.Add(3675089712U, "OpenServiceFailed");
			Strings.stringIDs.Add(396068831U, "ErrorNameNotFQDN");
			Strings.stringIDs.Add(1898390588U, "SetupComponentMonitoringCorrelation");
			Strings.stringIDs.Add(3427352430U, "SetupProgressCreateDatabaseFolders");
			Strings.stringIDs.Add(4175925886U, "CannotRunOnSubscribedEdge");
			Strings.stringIDs.Add(1225987784U, "NoOrganizationRelationshipInstancesWereReturnedByTheRemoteParty");
			Strings.stringIDs.Add(2550967442U, "StatusMessageUpdatePublicFolderMailboxCompleted");
			Strings.stringIDs.Add(2800354258U, "DatabaseSeedStatusLabelReadPerSec");
			Strings.stringIDs.Add(2123483125U, "ErrorInvalidDateRangeException");
			Strings.stringIDs.Add(2304297729U, "ErrorNoTrustConfigured");
			Strings.stringIDs.Add(4174308722U, "ErrorEnableRoleGroup");
			Strings.stringIDs.Add(1554948996U, "MapiTransactionFailedAgainstServerPrefix");
			Strings.stringIDs.Add(1046590614U, "SetupProgressCreateFederationTrusts");
			Strings.stringIDs.Add(2243519812U, "CasHealthOwaPingRequestSucceeded");
			Strings.stringIDs.Add(1705322316U, "ConfirmationOnDisablingInternalLicensing");
			Strings.stringIDs.Add(1589644643U, "GetDagHealthInfoNoResultsWarning");
			Strings.stringIDs.Add(1232854071U, "InvalidTransportRoleOnReceiveConnector");
			Strings.stringIDs.Add(585138347U, "UninstallImap4ServiceTask");
			Strings.stringIDs.Add(2120620876U, "InstallNotificationsBrokerServiceTask");
			Strings.stringIDs.Add(942070657U, "ErrorDlpPolicyCollectionCannotContainTransportRules");
			Strings.stringIDs.Add(4048010479U, "DelegateRoleTypePublicFolderAdmin");
			Strings.stringIDs.Add(4078764843U, "SetupProgressAutoForwardEnabled");
			Strings.stringIDs.Add(690809061U, "ConfirmationMessageOverrideContentMailbox");
			Strings.stringIDs.Add(1521128314U, "CreateOwaForEcpWarning");
			Strings.stringIDs.Add(1726782365U, "ContinueMountWithDataLoss");
			Strings.stringIDs.Add(61328153U, "SetupComponentConfigPermissionsBridgehead");
			Strings.stringIDs.Add(4164791858U, "MapiTransactionDiagnosticStoreServiceIsNotRunning");
			Strings.stringIDs.Add(124932322U, "ErrorMoreThanOneDefaultMailTipTranslationSpecified");
			Strings.stringIDs.Add(3396334448U, "CompleteOrganizationUpgradeDescription");
			Strings.stringIDs.Add(359340039U, "ErrorTenantOrgInUnexpectedState");
			Strings.stringIDs.Add(2355449289U, "ConversationsMailboxAlreadyEnabled");
			Strings.stringIDs.Add(4136277918U, "ImportE14TransportRuleCollectionInDCError");
			Strings.stringIDs.Add(2041595767U, "MessageTypeAutoForward");
			Strings.stringIDs.Add(389917399U, "CasHealthOwaHttpUnknownLogoffError");
			Strings.stringIDs.Add(2589525087U, "CasHealthEasScenarioSyncFolderItems");
			Strings.stringIDs.Add(2148824781U, "FrontEndTransportServiceDisplayName");
			Strings.stringIDs.Add(1935468563U, "ComponentTaskSection");
			Strings.stringIDs.Add(3203686041U, "ErrorIdAndOUSetTogetherUnderIgnoreDefaultScope");
			Strings.stringIDs.Add(1702097235U, "ConfirmationMessageExportTransportRuleCollection");
			Strings.stringIDs.Add(3300374799U, "ErrorRuleMissingPredicate");
			Strings.stringIDs.Add(972482907U, "ErrorRemoteLegacyWithE15NotAllowed");
			Strings.stringIDs.Add(2764082182U, "InstallMailboxTransportSubmissionServiceTask");
			Strings.stringIDs.Add(3420250947U, "ErrorOrganizationParameterRequired");
			Strings.stringIDs.Add(3608765512U, "ErrorDateRangeInvalid");
			Strings.stringIDs.Add(3282443379U, "ExchangeStreamingOpticsDescription");
			Strings.stringIDs.Add(2762887375U, "ErrorDepartRestrictionInvalid");
			Strings.stringIDs.Add(2632441174U, "LocalSiteNameIsEmpty");
			Strings.stringIDs.Add(2084274330U, "InvalidIncidentReportContent");
			Strings.stringIDs.Add(885090528U, "CasHealthHttpResponseHeaders");
			Strings.stringIDs.Add(157257905U, "SetupProgressLicenseEnforcement");
			Strings.stringIDs.Add(3161117751U, "TenantNotificationNoNotificationRecipientsSpecified");
			Strings.stringIDs.Add(1552735353U, "TestSearchTask");
			Strings.stringIDs.Add(4213714110U, "SetupProgressUMFaxEnabled");
			Strings.stringIDs.Add(3012202611U, "ErrorMultipleDefaultRetentionPolicy");
			Strings.stringIDs.Add(2018678440U, "SetupProgressCreateOutOfTheBoxReducedMrmTags");
			Strings.stringIDs.Add(2561639227U, "ComplianceSearchCreateTaskActivity");
			Strings.stringIDs.Add(3087351795U, "SupportedToolsCannotFindFile");
			Strings.stringIDs.Add(1744727734U, "LegacyRegistryMarkersComponentDescription");
			Strings.stringIDs.Add(1946909737U, "NoMailboxAssociationIdentityProvided");
			Strings.stringIDs.Add(3215501240U, "VerboseFixingEmailAddressPolicyFilterMetadata");
			Strings.stringIDs.Add(3162495226U, "ADAttributeOtherPhoneNumber");
			Strings.stringIDs.Add(346749009U, "AdvertiseClientSettingsWithoutExchangeUsersPermissionGroups");
			Strings.stringIDs.Add(1230533634U, "NoPrivateKeyInImportedTrustedPublishingDomain");
			Strings.stringIDs.Add(2929278810U, "CasHealthCasServerNotFound");
			Strings.stringIDs.Add(803789992U, "CasHealthCalendarShortName");
			Strings.stringIDs.Add(924598646U, "ErrorCannotMovePublicFoldersWithNullEntryId");
			Strings.stringIDs.Add(2473076826U, "ChangePasswordFailed");
			Strings.stringIDs.Add(282134995U, "CasHealthOwaCredentialFailure");
			Strings.stringIDs.Add(3365945163U, "ErrorNetIDWithoutBypassWLIDInSet");
			Strings.stringIDs.Add(3228324102U, "PhoneNumberAllowedOnlyOnE164ConsumerDialplanWithCountryCode");
			Strings.stringIDs.Add(1436616364U, "UninstallOldMailSubmissionServiceTask");
			Strings.stringIDs.Add(1537384713U, "DefaultAllContacts");
			Strings.stringIDs.Add(323037630U, "UsingMonitoringMailboxAuthenticationCredentials");
			Strings.stringIDs.Add(1134431673U, "IntegratedVDirNotSupported");
			Strings.stringIDs.Add(2381551853U, "SetupProgressCreateRBACPoliciesContainer");
			Strings.stringIDs.Add(1328045433U, "ProtectedServiceHostDescription");
			Strings.stringIDs.Add(476702017U, "ErrorTemplateAndTemplateDataCannotBothBeDefined");
			Strings.stringIDs.Add(3290510799U, "SetupComponentMidFileCopyMonitoring");
			Strings.stringIDs.Add(195589900U, "SetupProgressStartingCredentialService");
			Strings.stringIDs.Add(2460972809U, "CasHealthEasSyncOne");
			Strings.stringIDs.Add(2760740739U, "MachinePingScenario");
			Strings.stringIDs.Add(1485407849U, "ProcessUtilizationManagerServiceDescription");
			Strings.stringIDs.Add(912948631U, "TenantAlreadyHasMigrationPending");
			Strings.stringIDs.Add(1702242844U, "OwaMetabaseStopBinFilteringFailure");
			Strings.stringIDs.Add(878905098U, "CasHealthEasScenarioPing");
			Strings.stringIDs.Add(1340013018U, "CreateEcpForOwaWarning");
			Strings.stringIDs.Add(3690425457U, "ConfirmationMessageTestEdgeSyncMserv");
			Strings.stringIDs.Add(3992993999U, "ErrorCannotRemovePublicFolderMailboxWithFolders");
			Strings.stringIDs.Add(1553189934U, "UMCallAnsweringRuleLeaveVoiceMessage");
			Strings.stringIDs.Add(2393557138U, "MicrosoftExchangeContainerNotFoundException");
			Strings.stringIDs.Add(2953927220U, "CannotFindSubscriptionSite");
			Strings.stringIDs.Add(1143552818U, "CasHealtRemotePowerShellOpenRunspaceSucceeded");
			Strings.stringIDs.Add(528083274U, "CasHealthEasScenarioDeleteItem");
			Strings.stringIDs.Add(1564792125U, "ConfirmationMessageInstallSystemMessageClassification");
			Strings.stringIDs.Add(3656239515U, "CasHealthWebAppLiveIdStart");
			Strings.stringIDs.Add(351759919U, "SetupProgressMailUserCountQuota");
			Strings.stringIDs.Add(1881041876U, "PhoneNumberIsNotE164");
			Strings.stringIDs.Add(724161223U, "AssistantsServiceDisplayName");
			Strings.stringIDs.Add(1783998077U, "ErrorRmsOnlineAuthenticationCertificateNotFound");
			Strings.stringIDs.Add(2311491823U, "WordIsWhiteSpace");
			Strings.stringIDs.Add(2768218355U, "ErrorCannotSetJournalingReportNdrTo");
			Strings.stringIDs.Add(4195978929U, "SetupProgressOwaDelegateAccessEnabled");
			Strings.stringIDs.Add(1342738960U, "RMSServerIsNotConfigured");
			Strings.stringIDs.Add(2086103397U, "UMNotAvailableForUserInTargetForest");
			Strings.stringIDs.Add(2418812611U, "SetServiceInstanceMapResultCodeUnspecifiedError");
			Strings.stringIDs.Add(3321302356U, "SetupComponentProvisioningFeatures");
			Strings.stringIDs.Add(4172450099U, "CasHealthOwaTrustAnyCertificate");
			Strings.stringIDs.Add(886790004U, "CasHealthEasScenarioOptions");
			Strings.stringIDs.Add(677161662U, "ErrorCannotDeleteGlobalThrottlingPolicy");
			Strings.stringIDs.Add(853257855U, "NewMailboxSearchActivity");
			Strings.stringIDs.Add(1386608555U, "JournalingParameterErrorGccWithScope");
			Strings.stringIDs.Add(2743468428U, "CasHealthOwaNoAuthChallenge");
			Strings.stringIDs.Add(3256293617U, "InstallMailboxReplicationServiceTask");
			Strings.stringIDs.Add(3832614491U, "ExportAutoDiscoverSameForest");
			Strings.stringIDs.Add(2593828216U, "JournalRuleCorrupt");
			Strings.stringIDs.Add(2605454650U, "CopyStatusSuspended");
			Strings.stringIDs.Add(3374660851U, "BestEffortNotAllowedInServerModeException");
			Strings.stringIDs.Add(2345003377U, "RemoveProvisionedServerDescription");
			Strings.stringIDs.Add(329310285U, "ErrorAuthSetNewEffectDate");
			Strings.stringIDs.Add(494398490U, "VerboseResolvingCustomRecipientWriteScope");
			Strings.stringIDs.Add(1045130098U, "UninstallTranscodingServiceEx");
			Strings.stringIDs.Add(21508778U, "ConfirmationMessageRemoveReportingVirtualDirectory");
			Strings.stringIDs.Add(934995448U, "MtrtMessageSpamAdditional");
			Strings.stringIDs.Add(1727429145U, "ErrorProvisioningReconciliationCookieNotSet");
			Strings.stringIDs.Add(2069264155U, "ErrorCannotMigratePublicFolderIntoNonPublicFolderMailbox");
			Strings.stringIDs.Add(864818849U, "GetCalendarDiagnosticLogNoCleanGoidErrorMessage");
			Strings.stringIDs.Add(1377545174U, "ADAttributeCustomAttribute8");
			Strings.stringIDs.Add(1646617707U, "ErrorDomainControllerNotSpecifiedWithUsnForReconciliationSearch");
			Strings.stringIDs.Add(3017732590U, "SetupComponentConfiguringMDB");
			Strings.stringIDs.Add(815548093U, "ProgressStopUpdateAD");
			Strings.stringIDs.Add(1861340610U, "Warning");
			Strings.stringIDs.Add(494686544U, "ADAttributeManager");
			Strings.stringIDs.Add(2844240268U, "PageCookieInterruptedException");
			Strings.stringIDs.Add(3669527025U, "DatacenterClientAccessPerfCountersComponentDescription");
			Strings.stringIDs.Add(210030056U, "IndividualRecipient");
			Strings.stringIDs.Add(4182624490U, "MalboxFolderRightsCreateItems");
			Strings.stringIDs.Add(4233384325U, "RuleStateDisabled");
			Strings.stringIDs.Add(1187378442U, "MalboxFolderRightsReadItems");
			Strings.stringIDs.Add(4018390487U, "SetupProgressSyncAccountsMaxAccountsQuota");
			Strings.stringIDs.Add(363043027U, "DatabaseSeedStatusLabelWritten");
			Strings.stringIDs.Add(1615913674U, "ErrorSetPasswordForLogonDisabledAccount");
			Strings.stringIDs.Add(303389116U, "MonitoringServiceCheckDesc");
			Strings.stringIDs.Add(2694075755U, "SiteParameterRequired");
			Strings.stringIDs.Add(2246430441U, "IisTasksVirtualDirectoryValidationProperty");
			Strings.stringIDs.Add(3597664875U, "NullCurrentOrganizationIdException");
			Strings.stringIDs.Add(769488995U, "ClassificationRuleCollectionIllegalScopedSetOobOperation");
			Strings.stringIDs.Add(3042237373U, "InvalidSmtpAddress");
			Strings.stringIDs.Add(4148731813U, "TestOrganizationRelationshipError");
			Strings.stringIDs.Add(979959660U, "SetupProgressStartingContentIndexingService");
			Strings.stringIDs.Add(308457205U, "CasHealthOwaLogonError");
			Strings.stringIDs.Add(1773264523U, "Error_KnowniPhoneIssues");
			Strings.stringIDs.Add(2137414559U, "OwaGzipCannotBeSetToLegacyVirtualDirectoryWhenMailboxRoleInstalled");
			Strings.stringIDs.Add(2932389186U, "ClientAccessExchangeCertificateComponentDescription");
			Strings.stringIDs.Add(1040599336U, "SenderAndRmsOnlineParametersCannotBeCombined");
			Strings.stringIDs.Add(1938975541U, "TopologyServiceDisplayName");
			Strings.stringIDs.Add(1618002793U, "ErrorChangeConfigurationNotSupported");
			Strings.stringIDs.Add(2467206592U, "InterceptorErrorConditionHeaderValueMissing");
			Strings.stringIDs.Add(1523783911U, "VerboseCheckIISConfiguration");
			Strings.stringIDs.Add(3024861528U, "SetupComponentADSchema");
			Strings.stringIDs.Add(4107219633U, "InstallingIMAP4Service");
			Strings.stringIDs.Add(2128405927U, "MSExchangeMGMTDisplayName");
			Strings.stringIDs.Add(2891009079U, "AdminAuditLogSearchNegativeResultSize");
			Strings.stringIDs.Add(999144299U, "ConfirmationMessageNewEdgeSyncEhfConnectorOnLocalSite");
			Strings.stringIDs.Add(2103941010U, "SetupProgressMailTipsEnabled");
			Strings.stringIDs.Add(1373187244U, "CopyStatusInitializing");
			Strings.stringIDs.Add(3560770236U, "ErrorCannotSetPowerShellMaxTenantRunspaces");
			Strings.stringIDs.Add(910317825U, "StartADTopologyService");
			Strings.stringIDs.Add(1149547458U, "InvalidRuleSearchFilterMissingElements");
			Strings.stringIDs.Add(2563311167U, "SpecifiedOUNotFound");
			Strings.stringIDs.Add(3938326230U, "MtrtAddBlindCopyToRecipient");
			Strings.stringIDs.Add(67550991U, "NoSLCCertChainInImportedTrustedPublishingDomain");
			Strings.stringIDs.Add(529637304U, "SetupProgressStopHealthManagerService");
			Strings.stringIDs.Add(1612938185U, "ErrorPowerShellCorrupted");
			Strings.stringIDs.Add(1619534902U, "ErrorTextMessageInsufficientPermission");
			Strings.stringIDs.Add(2287537271U, "DlpPolicyDescriptionDisplayName");
			Strings.stringIDs.Add(514153900U, "WarningInboxRuleOutlookBlobExists");
			Strings.stringIDs.Add(3587729804U, "RmsUrlsCannotBeSet");
			Strings.stringIDs.Add(247906216U, "DebugEndSaveDataObject");
			Strings.stringIDs.Add(243743017U, "ConfirmationMessageStartEdgeSynchronization");
			Strings.stringIDs.Add(2031953882U, "VerboseResolvingSecurityPrinciplals");
			Strings.stringIDs.Add(2199141127U, "WarningLegacyExchangeServerForMailContact");
			Strings.stringIDs.Add(3687261608U, "ErrorTemplatesMayNotContainRulesWithImmutableIds");
			Strings.stringIDs.Add(1163984313U, "CertificateStatusRevoked");
			Strings.stringIDs.Add(4269203724U, "CasHealthOwaPingError");
			Strings.stringIDs.Add(4054043082U, "ReservedString5");
			Strings.stringIDs.Add(450966693U, "WarningDatabaseScopeCreationApplicableOnlyInSP");
			Strings.stringIDs.Add(3203524443U, "ServiceNameEws");
			Strings.stringIDs.Add(645544640U, "MailboxAssociationMailboxNotFound");
			Strings.stringIDs.Add(1343310908U, "SetupComponentMidFileCopyBridgehead");
			Strings.stringIDs.Add(592390813U, "NodePausedCheckDesc");
			Strings.stringIDs.Add(2811670542U, "AllLinkedGroupMembers");
			Strings.stringIDs.Add(1360134828U, "SharedCacheServiceDescription");
			Strings.stringIDs.Add(3237220889U, "InstallKeynoteConnectorServiceTask");
			Strings.stringIDs.Add(1604244669U, "InvalidIncidentReportOriginalMail");
			Strings.stringIDs.Add(2228796246U, "ErrorConflictingMailboxes");
			Strings.stringIDs.Add(1366760397U, "RemoveVirtualDirectoryCouldNotAccessWebServicesRootException");
			Strings.stringIDs.Add(4051542195U, "ErrorInvalidAuthServerTypeValue");
			Strings.stringIDs.Add(4002590677U, "ErrorCorruptRuleAction");
			Strings.stringIDs.Add(1276593436U, "ErrorRunspaceServerSettingsNotFound");
			Strings.stringIDs.Add(4278888973U, "ClassificationRuleCollectionOffendingListSeparator");
			Strings.stringIDs.Add(224359057U, "ScenarioEwsConvertId");
			Strings.stringIDs.Add(25431416U, "ProgressCopyingCopyLogFiles");
			Strings.stringIDs.Add(799867258U, "DisasterRecoveryAdminToolsRoleDescription");
			Strings.stringIDs.Add(3785983711U, "ErrorEnabledPrimarySmtpAndEmailAddressTemplatesSpecified");
			Strings.stringIDs.Add(1836636963U, "ErrorBPAMergeFileLoad");
			Strings.stringIDs.Add(2431707337U, "IISNotInstalledException");
			Strings.stringIDs.Add(1935215586U, "SetupComponentPreSetupAdminTools");
			Strings.stringIDs.Add(909539378U, "ErrorCannotDetermineRequester");
			Strings.stringIDs.Add(2655838320U, "VerboseFixingEmailAddressPoliciesInNativeMode");
			Strings.stringIDs.Add(937945415U, "DebugEndUpnUniquenessCheck");
			Strings.stringIDs.Add(2687794018U, "InfoPLCreated");
			Strings.stringIDs.Add(2580842796U, "SetupProgressRemoveServerObject");
			Strings.stringIDs.Add(1069636970U, "UnknownFailureFromCiRpcServer");
			Strings.stringIDs.Add(2674744913U, "WarningActionWillOnlyBeAppliedIfMessageIsNotRejected");
			Strings.stringIDs.Add(2996271904U, "CookieNotUpdated");
			Strings.stringIDs.Add(1484844461U, "ProcessingAceActivity");
			Strings.stringIDs.Add(2105969147U, "CasHealthOwaFbaAuthTypeExpected");
			Strings.stringIDs.Add(1356174462U, "ConfirmationMessageSendMapiSubmitSystemProbe");
			Strings.stringIDs.Add(3985182496U, "ConfirmationMessageStartELCAssistant");
			Strings.stringIDs.Add(1214391541U, "MobileDeviceLogNoLogsExist");
			Strings.stringIDs.Add(2991967653U, "ErrorRpcHttpMustSpecifyInternalClientAuthenticationMethodOrDefaultAuthenticationMethod");
			Strings.stringIDs.Add(3696548465U, "MtrtEventExpand");
			Strings.stringIDs.Add(159616798U, "EmptyTargetMailbox");
			Strings.stringIDs.Add(1619798746U, "ErrorDistributionGroupNameTooLong");
			Strings.stringIDs.Add(2654720989U, "SetupProgressCreateOutOfTheBoxDefaultMRMTags");
			Strings.stringIDs.Add(4249074819U, "ErrorTargetMailboxDatabaseVersionUnsupported");
			Strings.stringIDs.Add(1223504853U, "SetupComponentConfigurationFrontendTransport");
			Strings.stringIDs.Add(2718544146U, "RepairUrgencyHigh");
			Strings.stringIDs.Add(2897887400U, "SetupProgressUpdatingResourcePropertySchema");
			Strings.stringIDs.Add(4269635969U, "DefaultAllDistributionLists");
			Strings.stringIDs.Add(811249870U, "SetupProgressCreateGlobalAutoDiscoverContainer");
			Strings.stringIDs.Add(2193598558U, "MigrationCompleteAfterScheduledBatchesOnly");
			Strings.stringIDs.Add(3992939044U, "UMMailboxPolicySetAllowFaxError");
			Strings.stringIDs.Add(1946128370U, "AttachmentFilterNoExceptionConnector");
			Strings.stringIDs.Add(3115336137U, "ChangePasswordLockedOut");
			Strings.stringIDs.Add(4017283327U, "SetupProgressCreateWLMContainer");
			Strings.stringIDs.Add(44339415U, "GlobalLocatorServiceResultFailure");
			Strings.stringIDs.Add(2231509304U, "CannotRunForeignConnectorTaskOnEdge");
			Strings.stringIDs.Add(4121265404U, "CasHealthOwaAuthMethodHeader");
			Strings.stringIDs.Add(3113324051U, "TestSearchCheckServer");
			Strings.stringIDs.Add(1381834853U, "SetupProgressUpdateTenantMailboxes");
			Strings.stringIDs.Add(3755531083U, "ErrorTrustAlreadyDefined");
			Strings.stringIDs.Add(3285185239U, "ConfirmationMessageSetOrganizationConfig");
			Strings.stringIDs.Add(3332580362U, "RequiredIdentityInformationNotSet");
			Strings.stringIDs.Add(3365079287U, "ErrorSetOWAMailboxPolicyToE12User");
			Strings.stringIDs.Add(1290509263U, "SetupProgressRemovingPublicFolderDatabase");
			Strings.stringIDs.Add(2642450701U, "ProgressCopyingLogFiles");
			Strings.stringIDs.Add(1381261690U, "SetupComponentProvisionServer");
			Strings.stringIDs.Add(4012071978U, "NeedEitherAssemblyPathOrValidName");
			Strings.stringIDs.Add(2086818621U, "ErrorFindCertificateOnServerObject");
			Strings.stringIDs.Add(1460008623U, "ErrorProvisioningReconciliationConfigNotFound");
			Strings.stringIDs.Add(3846405471U, "SetupProgressStopEdgeTransportService");
			Strings.stringIDs.Add(3252841297U, "DebugStartInAcceptedDomainCheck");
			Strings.stringIDs.Add(1036372211U, "UninstallMailSubmissionServiceTask");
			Strings.stringIDs.Add(1475578476U, "InstallClientAccessIisWebServiceExtensions");
			Strings.stringIDs.Add(441773451U, "CouldNotLocateAnyTeamMailbox");
			Strings.stringIDs.Add(3260271077U, "CertificateStatusUnknown");
			Strings.stringIDs.Add(1318485394U, "VariablesSection");
			Strings.stringIDs.Add(3469456862U, "InfoCheckingRmsOnlineAuthenticationCertificate");
			Strings.stringIDs.Add(2835213035U, "MtrtNotifySender");
			Strings.stringIDs.Add(751112921U, "TransportSettingsNotFound");
			Strings.stringIDs.Add(480800478U, "SetupProgressCreateRBACRoleAssignments");
			Strings.stringIDs.Add(3662015180U, "GetContentIndexTask");
			Strings.stringIDs.Add(950974516U, "BackSyncFailedToConvertSyncObjectToDirectoryObject");
			Strings.stringIDs.Add(3850073087U, "ADAttributePagerNumber");
			Strings.stringIDs.Add(2398741750U, "SetupProgressEnableSelfManagement");
			Strings.stringIDs.Add(4137481806U, "ADAttributePhoneNumber");
			Strings.stringIDs.Add(771734573U, "TenantNotificationVerboseNotSendingEmailDailyCap");
			Strings.stringIDs.Add(2026505547U, "DagNetworkAllDisabledWarning");
			Strings.stringIDs.Add(1120293486U, "ContentIndexServiceDescription");
			Strings.stringIDs.Add(3538510592U, "SetupProgressGALSyncEnabled");
			Strings.stringIDs.Add(3240052672U, "ErrorNameNotSet");
			Strings.stringIDs.Add(2114850440U, "StartingMomService");
			Strings.stringIDs.Add(1987393790U, "SetupProgressRecipientMailSubmissionRateQuota");
			Strings.stringIDs.Add(2419166909U, "MalboxFolderRightsEditOwnedItems");
			Strings.stringIDs.Add(3072162476U, "SetupPerimeterSafelistingUIMode");
			Strings.stringIDs.Add(1993693877U, "VerboseSearchingAssigneeInConfigNC");
			Strings.stringIDs.Add(2235869021U, "AllForeignAccounts");
			Strings.stringIDs.Add(1920148531U, "CasHealthEasSyncZeroScenarioDescription");
			Strings.stringIDs.Add(4224229383U, "SetupProgressMaxSendTransportQuota");
			Strings.stringIDs.Add(2270748102U, "FfoWebServicePreConfigComponentDescription");
			Strings.stringIDs.Add(3381713806U, "DisasterRecoveryUnifiedMessagingRoleDescription");
			Strings.stringIDs.Add(2423295274U, "SetupProgressActiveSyncEnabled");
			Strings.stringIDs.Add(1897854438U, "ErrorInvalidAuditOwnerOperationType");
			Strings.stringIDs.Add(4178137973U, "ActiveDirectoryConnectivityTransactionsAllSucceeded");
			Strings.stringIDs.Add(3378630967U, "DefaultPublicFolders");
			Strings.stringIDs.Add(2849913626U, "SetupProgressCreateAutoGroupRetentionPolicyTag");
			Strings.stringIDs.Add(1489480989U, "MoveStatusUnknown");
			Strings.stringIDs.Add(2569295017U, "CasHealthOwaLongName");
			Strings.stringIDs.Add(2496242404U, "CasHealthEcpShortName");
			Strings.stringIDs.Add(1208301054U, "CopyStatusMounting");
			Strings.stringIDs.Add(2846914028U, "CopyOperation");
			Strings.stringIDs.Add(3552826330U, "FfoWebServiceProvisionComponentDescription");
			Strings.stringIDs.Add(1984115551U, "ErrorConflictResourceCustom");
			Strings.stringIDs.Add(3025732470U, "InstallAssistantsServiceTask");
			Strings.stringIDs.Add(1810706551U, "SetupProgressCreateOWAMailboxPolicyContainers");
			Strings.stringIDs.Add(2768464912U, "KeynoteConnectorServiceDisplayName");
			Strings.stringIDs.Add(1377545163U, "ADAttributeCustomAttribute5");
			Strings.stringIDs.Add(1377545167U, "ADAttributeCustomAttribute1");
			Strings.stringIDs.Add(1549280152U, "ErrorFilterParametersIntraOrg");
			Strings.stringIDs.Add(3721623660U, "CasHealthWebAppLiveIdEnd");
			Strings.stringIDs.Add(2747907193U, "WebServiceRoleEntryNotSupportParametersAndSnapin");
			Strings.stringIDs.Add(1151252861U, "MtrtEventFail");
			Strings.stringIDs.Add(1767955380U, "WarningMessageSizeRestrictionOutOfSync");
			Strings.stringIDs.Add(1355366283U, "MigrationCSVNotAllowed");
			Strings.stringIDs.Add(3372077054U, "NeedIisRestartForChangingECPFeatureWarning");
			Strings.stringIDs.Add(4163377893U, "ClassificationRuleCollectionUnexpectedContents");
			Strings.stringIDs.Add(2193176105U, "BPADownloadingUpdates");
			Strings.stringIDs.Add(1329891945U, "FoundMultipleObjectById");
			Strings.stringIDs.Add(2783321364U, "CasHealthSpecifyMailboxForResetCredentials");
			Strings.stringIDs.Add(706028660U, "SetupComponentPostSetupCafe");
			Strings.stringIDs.Add(475854284U, "ConfirmationMessageSetIPAllowListProvidersConfig");
			Strings.stringIDs.Add(863845264U, "SetupComponentConfiguringRpcClientAccessService");
			Strings.stringIDs.Add(101589004U, "ErrorAddGroupMemberCrossTenant");
			Strings.stringIDs.Add(4151753170U, "ErrorBPAOutputConflict");
			Strings.stringIDs.Add(1642010523U, "ErrorRemoteMailboxImportNeedRemoteProxy");
			Strings.stringIDs.Add(1209054947U, "ServicesComponentDescription");
			Strings.stringIDs.Add(2393820385U, "StartingOnePointService");
			Strings.stringIDs.Add(2762012249U, "ErrorCannotResumeIfNotSuspended");
			Strings.stringIDs.Add(2462309444U, "SetupProgressRemovingMailboxDatabase");
			Strings.stringIDs.Add(531835631U, "MobileDeviceLogNotRetrieved");
			Strings.stringIDs.Add(3816576111U, "DeletionAndUnsearchableNotPermitted");
			Strings.stringIDs.Add(1467203807U, "InboxRuleDescriptionOr");
			Strings.stringIDs.Add(1012815040U, "MonitoringCorrelationServiceDisplayName");
			Strings.stringIDs.Add(824920009U, "ProgressEmailAddressPolicyPreparingPriority");
			Strings.stringIDs.Add(2811275637U, "MtrtApplyHtmlDisclaimer");
			Strings.stringIDs.Add(2654165210U, "UnableToConnect");
			Strings.stringIDs.Add(1177180156U, "UninstallExchangeOrganizationDescription");
			Strings.stringIDs.Add(302716089U, "CasHealthScenarioDescription");
			Strings.stringIDs.Add(1241635965U, "DualWriteSaveWarningMessage");
			Strings.stringIDs.Add(3223564936U, "ErrorCannotChangeName");
			Strings.stringIDs.Add(2672737351U, "SetupComponentPostSetupAdminTools");
			Strings.stringIDs.Add(1630998932U, "MtrtAddToRecipient");
			Strings.stringIDs.Add(624509981U, "NeedToSpecifyADSiteObject");
			Strings.stringIDs.Add(3852698972U, "ErrorConfigurationOnly");
			Strings.stringIDs.Add(1486813282U, "DatacenterSetupComponentPerfCountersBridgehead");
			Strings.stringIDs.Add(915562217U, "FBAServiceDisplayName");
			Strings.stringIDs.Add(2731341333U, "TransitionInfoLabelLastSuccessTransition");
			Strings.stringIDs.Add(1752948545U, "ErrorPrimarySmtpAndWindowsAddressDifferent");
			Strings.stringIDs.Add(1221524445U, "ErrorWriteOpOnDehydratedTenant");
			Strings.stringIDs.Add(3097067489U, "ErrorRmsOnlineAuthenticationCertificateNotYetValid");
			Strings.stringIDs.Add(4205247815U, "UninstallWatchDogServiceTask");
			Strings.stringIDs.Add(266841953U, "ErrorSpecifyAutoMappingOnNonFullAccess");
			Strings.stringIDs.Add(639692992U, "ClientAccessPrereqCheck");
			Strings.stringIDs.Add(1253954375U, "ConfirmationMessageAuthSettingOutage");
			Strings.stringIDs.Add(846242402U, "WarningModerationWithWrongGroupType");
			Strings.stringIDs.Add(1495738752U, "CasHealthOwaMailboxServerHeader");
			Strings.stringIDs.Add(2361565504U, "DebugEndEnablingUM");
			Strings.stringIDs.Add(332863269U, "FederatedOrganizationIdNotSet");
			Strings.stringIDs.Add(1066400057U, "SetupProgressCreateDSNCustomizationContainer");
			Strings.stringIDs.Add(4100727451U, "SetupProgressStoppingMailboxReplicationService");
			Strings.stringIDs.Add(1323608086U, "MalboxFolderRightsFolderContact");
			Strings.stringIDs.Add(3961198570U, "MapiSubmitSystemProbeNoMessageFound");
			Strings.stringIDs.Add(3923667863U, "WarningNonemptyManagedFolderNotDeleted");
			Strings.stringIDs.Add(2641950738U, "SetupProgressCreateMailboxManagedFolders");
			Strings.stringIDs.Add(1628899399U, "InvalidTimeRange");
			Strings.stringIDs.Add(4259877028U, "SetupProgressCreateClientAccessContainer");
			Strings.stringIDs.Add(1743121281U, "SetupPrereqAnalysisCompleted");
			Strings.stringIDs.Add(2722004787U, "RequiredEndDateParameter");
			Strings.stringIDs.Add(978731224U, "RpcClientAccessServiceDisplayName");
			Strings.stringIDs.Add(887526467U, "WarningNoCookiesRemovedForRollback");
			Strings.stringIDs.Add(2334907634U, "SetupMultiEngineAVEnabled");
			Strings.stringIDs.Add(1255598415U, "UninstallNotificationsBrokerServiceTask");
			Strings.stringIDs.Add(2986926906U, "ADAttributeFirstName");
			Strings.stringIDs.Add(4141971325U, "DebugStartRetrievingAuditConfig");
			Strings.stringIDs.Add(1003903261U, "EwsNotSupportedException");
			Strings.stringIDs.Add(343112327U, "IncludeAutoDiscoverOnlyApplicableToCAS");
			Strings.stringIDs.Add(863604629U, "ReplicationCheckResultUndefined");
			Strings.stringIDs.Add(4288698983U, "CasHealthOwaLogoffError");
			Strings.stringIDs.Add(2695605747U, "DagTaskDone");
			Strings.stringIDs.Add(1302133406U, "MustProvideNonEmptyStringForIdentity");
			Strings.stringIDs.Add(1427317623U, "WarningDeleteTemplate");
			Strings.stringIDs.Add(1501174110U, "SetupProgressStoppingWMIService");
			Strings.stringIDs.Add(3074556176U, "ConfirmationMessageStopELCAssistant");
			Strings.stringIDs.Add(62572758U, "MalboxFolderRightsDeleteOwnedItems");
			Strings.stringIDs.Add(2954092362U, "ErrorAuthNewCertificateNeeded");
			Strings.stringIDs.Add(2724814698U, "ContentIndexingServiceStillInstalled");
			Strings.stringIDs.Add(3234641110U, "CasHealthOwaConnectionRefused");
			Strings.stringIDs.Add(3697667913U, "NoMatchingUMMailboxPolicyInTargetForest");
			Strings.stringIDs.Add(1725408952U, "ContentIndexingPHStubNotFound");
			Strings.stringIDs.Add(4155200793U, "ConfirmationMessageTestMailflow");
			Strings.stringIDs.Add(3689464497U, "ADAttributeOtherFaxNumber");
			Strings.stringIDs.Add(2188750956U, "ErrorChildObjectTypeParameter");
			Strings.stringIDs.Add(3834576904U, "SetupProgressCreateDag");
			Strings.stringIDs.Add(3477555365U, "ReplayLagStatusLabelActual");
			Strings.stringIDs.Add(136993055U, "MtrtPrependSubject");
			Strings.stringIDs.Add(3630035827U, "CannotRemoveUMCRCertificate");
			Strings.stringIDs.Add(2224870290U, "Error_MessageClassFilter");
			Strings.stringIDs.Add(1856631791U, "MetabaseGetPropertiesFailure");
			Strings.stringIDs.Add(2911430177U, "FolderMoveRequestCheckComplete");
			Strings.stringIDs.Add(106773198U, "ConfirmationMessageNewEdgeSyncServiceConfigOnLocalSite");
			Strings.stringIDs.Add(983241257U, "InstallMonitoringCorrelationServiceTask");
			Strings.stringIDs.Add(2196859003U, "ConfirmationMessageUpdateSyncStatistics");
			Strings.stringIDs.Add(3229808788U, "ClientAccessRoleDisplayName");
			Strings.stringIDs.Add(1940704520U, "ConfirmationMessageNewMicrosoftExchangeRecipient");
			Strings.stringIDs.Add(920948119U, "GzipCannotBeSetToError");
			Strings.stringIDs.Add(4130365422U, "ThrottlingServiceDescription");
			Strings.stringIDs.Add(2064866056U, "FileLocationNotChanged");
			Strings.stringIDs.Add(873161575U, "ConversationsNoConversationsFound");
			Strings.stringIDs.Add(3592788208U, "ErrorCannotTurnOnBothAndAndRemove");
			Strings.stringIDs.Add(3820850055U, "InfoGetRacAndClc");
			Strings.stringIDs.Add(1644641079U, "SetupProgressStoppingHygieneUpdateService");
			Strings.stringIDs.Add(91086936U, "TransportSyncManagerServiceDescription");
			Strings.stringIDs.Add(3134498491U, "RejectMessageActionIsBeingOverridded");
			Strings.stringIDs.Add(4017981356U, "SetServiceInstanceMapResultCodePartitionUnavailable");
			Strings.stringIDs.Add(3244118776U, "SetupProgressStoppingContentIndexingService");
			Strings.stringIDs.Add(2854796459U, "PhoneNumberInvalidCountryCode");
			Strings.stringIDs.Add(406334368U, "IrmLicensingIsDisabled");
			Strings.stringIDs.Add(4064249999U, "ErrorDisableMailboxWithJournalArchiveWithDirSync");
			Strings.stringIDs.Add(178490484U, "FederationTrustHasAllStsCertificates");
			Strings.stringIDs.Add(2935896590U, "SetupComponentPreSetupGateway");
			Strings.stringIDs.Add(2801109101U, "ErrorMailTipSetTranslationsWithoutDefault");
			Strings.stringIDs.Add(2060695020U, "InstallThrottlingServiceTask");
			Strings.stringIDs.Add(2377371197U, "SetupComponentConfiguringMailbox");
			Strings.stringIDs.Add(1391409413U, "ArchiveConnectivityResultArchiveNotActive");
			Strings.stringIDs.Add(2302151400U, "ReplicationCheckResultFailed");
			Strings.stringIDs.Add(4085097797U, "SuspendWRTCPreventCompletionCannotBeSetOnNewRequests");
			Strings.stringIDs.Add(221534809U, "ErrorMultipleJournalArchiveAddress");
			Strings.stringIDs.Add(2808132619U, "ConfirmationMessageTestFederationTrust");
			Strings.stringIDs.Add(3020149749U, "DelegateRoleTypeViewOnlyAdmin");
			Strings.stringIDs.Add(3983242292U, "ServiceNameOab");
			Strings.stringIDs.Add(2378120020U, "ScenarioOfflineAddressBook");
			Strings.stringIDs.Add(4198747660U, "TestSearchStatus");
			Strings.stringIDs.Add(2394040785U, "SetupProgressApplicationImpersonationEnabled");
			Strings.stringIDs.Add(2315436063U, "SetupProgressStartingIISAdminService");
			Strings.stringIDs.Add(1036352676U, "SetupComponentMidFileCopyFrontendTransport");
			Strings.stringIDs.Add(993270375U, "ErrorRoomMailboxPasswordCannotBeSetIfEnableRoomMailboxAccountIsFalse");
			Strings.stringIDs.Add(2845208078U, "CannotSwitchLinkedInAccount");
			Strings.stringIDs.Add(558509551U, "InfoRmsVersionChecked");
			Strings.stringIDs.Add(3290100793U, "LogOnlyOperation");
			Strings.stringIDs.Add(303672627U, "CasHealthOwaAuthFailExternal");
			Strings.stringIDs.Add(191693082U, "CertificateStatusDateInvalid");
			Strings.stringIDs.Add(1917741727U, "MustBeUnpacked");
			Strings.stringIDs.Add(3480344122U, "ClientAccessEcpComponentDescription");
			Strings.stringIDs.Add(1452889109U, "PublishingNotEnabled");
			Strings.stringIDs.Add(1027614433U, "EmptyTaskListException");
			Strings.stringIDs.Add(1075761718U, "WarningReplicationLatency");
			Strings.stringIDs.Add(3882871374U, "NoWebServicesExternalUrlFoundException");
			Strings.stringIDs.Add(4174322812U, "MigrationPartitionMailboxAmbiguous");
			Strings.stringIDs.Add(209372995U, "SetupComponentMidFileCopyGateway");
			Strings.stringIDs.Add(3317770113U, "SetupProgressListOpenFiles");
			Strings.stringIDs.Add(4049833125U, "SupportedToolsContainsInconsistentData");
			Strings.stringIDs.Add(2266049675U, "CasHealthOwaGetLogonPageSucceeded");
			Strings.stringIDs.Add(1916087801U, "SupportedToolsUnableToGetToolData");
			Strings.stringIDs.Add(1190886562U, "ProgressStatusFailed");
			Strings.stringIDs.Add(2543735748U, "AvailabilityAddressSpaceInvalidTargetAutodiscoverEpr");
			Strings.stringIDs.Add(3180631268U, "ErrorStartAfterEarlierThanCompleteAfter");
			Strings.stringIDs.Add(2681404045U, "ProvisioningRequestCannotBeCanceled");
			Strings.stringIDs.Add(3800508562U, "ErrorModifyE14DatabaseNotAllowed");
			Strings.stringIDs.Add(634215246U, "CasHealthOwaGetAuthEmptyPage");
			Strings.stringIDs.Add(2694743145U, "FDServiceDescription");
			Strings.stringIDs.Add(1481201881U, "InvalidDeliveryStatus");
			Strings.stringIDs.Add(1249578946U, "ErrorCannotSetLegacyArchiveJournalingEnabled");
			Strings.stringIDs.Add(2808015702U, "WarningJournalArchiveMailboxHasNoMailUser");
			Strings.stringIDs.Add(2394697169U, "CasHealthConfirmTestActiveSyncUsingAutodiscovery");
			Strings.stringIDs.Add(173411374U, "InfoCheckingRmsOnlinePrerequisites");
			Strings.stringIDs.Add(3495731578U, "ErrorChangePasswordRequiresOldPasswordNewPassword");
			Strings.stringIDs.Add(2660569143U, "SetupProgressDisableWMIAsync");
			Strings.stringIDs.Add(765220380U, "CannotRemoveInternalTransportCertificate");
			Strings.stringIDs.Add(1431279917U, "ErrorFailedToGetPreL");
			Strings.stringIDs.Add(2419294408U, "ErrorPartnerApplicationUseAuthServerCannotSetUrl");
			Strings.stringIDs.Add(576430832U, "CopyAndDeleteOperation");
			Strings.stringIDs.Add(1980396424U, "CompleteMigrationBatchNotSupported");
			Strings.stringIDs.Add(402764310U, "StartPreSetupDescription");
			Strings.stringIDs.Add(782748382U, "MtrtEventTransportRule");
			Strings.stringIDs.Add(217981904U, "PopGettingMessageIDs");
			Strings.stringIDs.Add(1236740085U, "SetupProgressCreateTransportRuleCollection");
			Strings.stringIDs.Add(2220152108U, "AgentLogInvalidTimeRange");
			Strings.stringIDs.Add(906770351U, "ErrorAgentPriorityCannotBeChanged");
			Strings.stringIDs.Add(2647704984U, "CasHealthCalendarScenarioTestView");
			Strings.stringIDs.Add(3902082635U, "SetupComponentPostSetupMailbox");
			Strings.stringIDs.Add(4189810048U, "CopyStatusDismounting");
			Strings.stringIDs.Add(2177109544U, "ProgressActivityUpdateRecipient");
			Strings.stringIDs.Add(2710426824U, "ParameterErrorForInternalUsage");
			Strings.stringIDs.Add(1312047919U, "ErrorCannotEnableJournalArchive");
			Strings.stringIDs.Add(1015332134U, "ErrorBPAMergeFileNotFound");
			Strings.stringIDs.Add(214463947U, "SclValue");
			Strings.stringIDs.Add(3294832335U, "PerfCounterDefinitionFileNameDescription");
			Strings.stringIDs.Add(1704483791U, "HubParameterNotValidOnEdgeRole");
			Strings.stringIDs.Add(2066445404U, "NewDagClusteringInstalledLaterRunningChecksLaterVerbose");
			Strings.stringIDs.Add(2361175376U, "CannotRemoveDefaultRmsTpdWithoutSettingAnotherDefault");
			Strings.stringIDs.Add(656898367U, "MailboxExchangeCertificateComponentDescription");
			Strings.stringIDs.Add(242192693U, "ADAttributeCustomAttribute12");
			Strings.stringIDs.Add(2076969542U, "ProgressValidatingFileLocations");
			Strings.stringIDs.Add(2818510402U, "ErrorInboxRuleTooBig");
			Strings.stringIDs.Add(317546527U, "OutlookProtectionRuleRmsTemplateNotSet");
			Strings.stringIDs.Add(4162816907U, "LocalSiteColon");
			Strings.stringIDs.Add(2065442552U, "DirectoryPathDoesntExist");
			Strings.stringIDs.Add(1746698641U, "MtrtQuarantine");
			Strings.stringIDs.Add(2576192317U, "SetupProgressOwaGlobalAddressListEnabled");
			Strings.stringIDs.Add(4033729879U, "SameOwaVersionDoNotCopyLPFiles");
			Strings.stringIDs.Add(3808447353U, "ErrorDefaultMalwareFilterPolicyCannotBeDeleted");
			Strings.stringIDs.Add(2327721635U, "MigrationStartAfterScheduledBatchesOnly");
			Strings.stringIDs.Add(1910163041U, "InvalidDlpPolicyConfiguration");
			Strings.stringIDs.Add(1096493597U, "ConfirmationMessageSetAvailabilityConfig");
			Strings.stringIDs.Add(2308331446U, "BPAScanInProgress");
			Strings.stringIDs.Add(3722370321U, "ExportWithPrivateKeyRequiresPassword");
			Strings.stringIDs.Add(1404355436U, "CasHealthScenarioResetCredentials");
			Strings.stringIDs.Add(3045092087U, "KeynoteConnectorServiceDescription");
			Strings.stringIDs.Add(1460043812U, "ConfirmationMessageSetSearchDocumentFormat");
			Strings.stringIDs.Add(908067860U, "ErrorInvalidSizeRangeException");
			Strings.stringIDs.Add(785552508U, "ErrorNoDatabaseInfor");
			Strings.stringIDs.Add(123373405U, "DebugStartEnablingUM");
			Strings.stringIDs.Add(14776491U, "ErrorSettingCertOnTenant");
			Strings.stringIDs.Add(133178266U, "ErrorFailedToGetTemplateTenant");
			Strings.stringIDs.Add(1348708874U, "CannotRunOnNonHubTransport");
			Strings.stringIDs.Add(2651520529U, "ErrorRmsOnlineAuthenticationCertificateExpired");
			Strings.stringIDs.Add(1785220801U, "ErrorFailedToGetULDueToInvalidSuperUserConfiguration");
			Strings.stringIDs.Add(3672610051U, "RemoveOrganizationDescription");
			Strings.stringIDs.Add(2844085614U, "CasHealthTestNewUserScriptName");
			Strings.stringIDs.Add(2009348203U, "InstallGatewayRoleDescription");
			Strings.stringIDs.Add(2594705516U, "InvalidClientCertificateSubjectName");
			Strings.stringIDs.Add(3346850040U, "SetupComponentPostSetupClientAccess");
			Strings.stringIDs.Add(2189011080U, "ErrorCannotUpdatePublicFolderHierarchyInformation");
			Strings.stringIDs.Add(3014289487U, "messageAutodiscoverServiceUnavailableException");
			Strings.stringIDs.Add(1630518161U, "InfoIRMConfigLoaded");
			Strings.stringIDs.Add(3950720433U, "CasHealthOwaGotLanguageSelectionPage");
			Strings.stringIDs.Add(3598927792U, "WarningMustInvokeUpdateOABToStartScheduledGeneration");
			Strings.stringIDs.Add(36668747U, "HaltingExecution");
			Strings.stringIDs.Add(673284277U, "CasHealthPowerShellLongName");
			Strings.stringIDs.Add(1079115709U, "AppIdElementIsEmpty");
			Strings.stringIDs.Add(2849670203U, "InPlaceHoldNotAllowedForAllSourceMailboxes");
			Strings.stringIDs.Add(78736594U, "NoMdbWasMovedWhileRunning");
			Strings.stringIDs.Add(2768242287U, "MtrtDeleteAttachment");
			Strings.stringIDs.Add(2584381281U, "IncomingUserNameEmpty");
			Strings.stringIDs.Add(4202582373U, "AddressRewriteSessionNull");
			Strings.stringIDs.Add(3131090706U, "ErrorAccessRightsEmpty");
			Strings.stringIDs.Add(3623667921U, "SetupComponentMailboxGlobalConfig");
			Strings.stringIDs.Add(3868619324U, "MtrtEventDeliver");
			Strings.stringIDs.Add(2503320550U, "EcpUrlNotMatchOwaWarning");
			Strings.stringIDs.Add(1356551856U, "CasHealthEasPing");
			Strings.stringIDs.Add(561948288U, "ErrorCompleteOrgUpgradeCannotRunForSharedConfigurationOrgs");
			Strings.stringIDs.Add(4113539864U, "WSManIISHostingConfigurationComponentDescription");
			Strings.stringIDs.Add(367058863U, "DiagnosticsHeader");
			Strings.stringIDs.Add(4243684796U, "UnknownMigrationUserStatusSummaryValue");
			Strings.stringIDs.Add(1535975937U, "OwaMetabaseIsapiUninstallFailure");
			Strings.stringIDs.Add(3935454309U, "MoreThanOneTeamMailboxes");
			Strings.stringIDs.Add(681503665U, "CasHealthOwaIsaFbaFormdirParseFailed");
			Strings.stringIDs.Add(3910386293U, "EventLogText");
			Strings.stringIDs.Add(749715156U, "ManageDelegation2ProvisioningInDNS");
			Strings.stringIDs.Add(4236823146U, "SetupPrereqAnalysis");
			Strings.stringIDs.Add(3855792877U, "UninstallContentIndexingServiceTask");
			Strings.stringIDs.Add(2547584967U, "SetupProgressSyncAccountsPollingInterval");
			Strings.stringIDs.Add(2583888766U, "ExternalJournalRuleScope");
			Strings.stringIDs.Add(12898892U, "TestMigrationServerAvailabilityPasswordException");
			Strings.stringIDs.Add(2190311546U, "CasHealthEasOptionsScenarioDescription");
			Strings.stringIDs.Add(2067178212U, "ProgressStatusRemovingWorkloadManagementPolicyTree");
			Strings.stringIDs.Add(1927518978U, "ConfirmationMessageInitializeExchangeLegacyPermissions");
			Strings.stringIDs.Add(448862132U, "CopyStatusSeeding");
			Strings.stringIDs.Add(2783924553U, "ConfirmationMessageTestOrganizationRelationship");
			Strings.stringIDs.Add(2472730642U, "UninstallOldAssistantsServiceTask");
			Strings.stringIDs.Add(4054043081U, "ReservedString4");
			Strings.stringIDs.Add(3728408622U, "DeviceWipePending");
			Strings.stringIDs.Add(2405285278U, "InfoEnterpriseMode");
			Strings.stringIDs.Add(1486748686U, "ServiceNameAutoDiscover");
			Strings.stringIDs.Add(1275658866U, "RemoveRemoteAccountSyncCache");
			Strings.stringIDs.Add(1709945553U, "DualWriteDeleteWarningMessage");
			Strings.stringIDs.Add(1296902656U, "ConfirmSetProvisioningReconciliationConfig");
			Strings.stringIDs.Add(3875057279U, "UninstallThrottlingServiceTask");
			Strings.stringIDs.Add(4218353751U, "SetupProgressPublicFoldersEnabled");
			Strings.stringIDs.Add(2028616171U, "NotificationEmailsParameterMissing");
			Strings.stringIDs.Add(2428804411U, "CasHealthWebAppNoCasArgumentError");
			Strings.stringIDs.Add(1991303282U, "SetupProgressCreateExchangeMimeTypes");
			Strings.stringIDs.Add(3091771729U, "ShouldContinueToExpandGroupsForHold");
			Strings.stringIDs.Add(377177216U, "HybridMailflowGetFfoDCPublicIPAddressesFailed");
			Strings.stringIDs.Add(167572150U, "MigrationAutoStopForInProgressOnly");
			Strings.stringIDs.Add(547522671U, "ErrorLogFolderPathNotAvailable");
			Strings.stringIDs.Add(3890878117U, "ErrorPublicFolderReferralHasWrittenToServer");
			Strings.stringIDs.Add(1122989846U, "SetupProgressInstallingFreeBusyFolder");
			Strings.stringIDs.Add(1280796226U, "MigrationStartAfterAndAutoStartExclusive");
			Strings.stringIDs.Add(8058994U, "UninstallFfoWebServiceRoleDescription");
			Strings.stringIDs.Add(1798622353U, "LanguagePackDescription");
			Strings.stringIDs.Add(1041587867U, "InfoImportingTpdFromRmsOnlineCheckedNoTemplates");
			Strings.stringIDs.Add(1211829139U, "ConfirmationExportMailboxDiagnosticLogs");
			Strings.stringIDs.Add(494607782U, "ErrorModifyE12ServerNotAllowed");
			Strings.stringIDs.Add(3397377515U, "ErrorRemoveMailboxWithJournalArchive");
			Strings.stringIDs.Add(805841165U, "InvalidProductKey");
			Strings.stringIDs.Add(3250408681U, "CannotLocateCurrentCertificate");
			Strings.stringIDs.Add(1700206738U, "MtrtRouteMessageUsingConnector");
			Strings.stringIDs.Add(2044663579U, "SetupProgressInstallingContentIndexingMSI");
			Strings.stringIDs.Add(2274442006U, "ErrorSettingRealmOnFirstOrg");
			Strings.stringIDs.Add(3036936652U, "FirstRoleAssignmentPolicyMustBeDefault");
			Strings.stringIDs.Add(2114394121U, "SetupProgressStoppingW3SVCService");
			Strings.stringIDs.Add(2537873109U, "DistributionGroup");
			Strings.stringIDs.Add(1488045589U, "CannotEditManuallyModifiedRule");
			Strings.stringIDs.Add(2270964732U, "MalboxFolderRightsDeleteAllItems");
			Strings.stringIDs.Add(3040964019U, "ProtocolSettings");
			Strings.stringIDs.Add(2022479947U, "TestOrganizationRelationshipWarning");
			Strings.stringIDs.Add(3889143264U, "WarningReportNotAvailable");
			Strings.stringIDs.Add(1679500402U, "ExceptionHeader");
			Strings.stringIDs.Add(3539375720U, "SetupProgressSyncAccountsTimeBeforeInactive");
			Strings.stringIDs.Add(823932952U, "TestSearchTaskBaseError");
			Strings.stringIDs.Add(841037861U, "NoNameArgument");
			Strings.stringIDs.Add(4116718674U, "CannotLocateFederationInfo");
			Strings.stringIDs.Add(310671256U, "GetFederationInformationProgress");
			Strings.stringIDs.Add(1467822517U, "SetupProgressInstallingMsFteMSI");
			Strings.stringIDs.Add(1139041786U, "ErrorCannotSpecifyAccountNamespaceWithoutTrust");
			Strings.stringIDs.Add(254334823U, "ExchangeInteropUSGDescription");
			Strings.stringIDs.Add(1377545175U, "ADAttributeCustomAttribute9");
			Strings.stringIDs.Add(1691025395U, "PromptToRemoveLogEventAction");
			Strings.stringIDs.Add(1949680079U, "ConfirmationMessageNewMailFlowPartnerConfig");
			Strings.stringIDs.Add(1678323524U, "ErrorAlsFailedToProcessRequest");
			Strings.stringIDs.Add(470745396U, "ExchangeStreamingOpticsDisplayName");
			Strings.stringIDs.Add(1223062556U, "RemoveContentIndexTask");
			Strings.stringIDs.Add(3234625944U, "ErrorMapiVirtualDirectoryMustSpecifyEitherInternalOrExternalUrl");
			Strings.stringIDs.Add(414183510U, "SetupComponentMidFileCopyClientAccess");
			Strings.stringIDs.Add(3235153535U, "UmLanguagePackPackagePathNotSpecified");
			Strings.stringIDs.Add(2428723312U, "SetupProgressStartingAddressBookService");
			Strings.stringIDs.Add(838814397U, "InstallComplianceAuditServiceTask");
			Strings.stringIDs.Add(1184910862U, "InternalTransportCertificateUpdatedOnEdge");
			Strings.stringIDs.Add(262546359U, "ErrorCleanUpAndRemoveAlternateServiceAccountsAreMutuallyExclusive");
			Strings.stringIDs.Add(1041208934U, "ErrorSetGroupMailboxAddMembersPrivate");
			Strings.stringIDs.Add(3031418490U, "MailboxReplicationServiceNotInstalled");
			Strings.stringIDs.Add(4059699036U, "ConfirmationMessageNewReportingVirtualDirectory");
			Strings.stringIDs.Add(2810951265U, "WarningReplayLagTimeMustBeLessThanSafetyNetHoldTime");
			Strings.stringIDs.Add(2449344145U, "TowsMissingAutoDiscoverElement");
			Strings.stringIDs.Add(2922053695U, "SetupProgressHideAdminAccessWarning");
			Strings.stringIDs.Add(2350123123U, "SetupProgressStartEdgeTransportService");
			Strings.stringIDs.Add(1877416004U, "WipePendingNote");
			Strings.stringIDs.Add(3768894518U, "ComplianceAuditServiceNotInstalled");
			Strings.stringIDs.Add(3557021932U, "MissingDataClassificationsName");
			Strings.stringIDs.Add(4016212985U, "UninstallMailboxTransportSubmissionServiceTask");
			Strings.stringIDs.Add(3855115154U, "OpenSCMFailed");
			Strings.stringIDs.Add(4009609004U, "SetupProgressStoppingServices");
			Strings.stringIDs.Add(2354473495U, "StartAfterOrCompleteAfterCannotBeSetWhenJobCompleting");
			Strings.stringIDs.Add(273291066U, "DatabaseChecksWarning");
			Strings.stringIDs.Add(2621242427U, "SetupProgressSyncAccountsSyncNowEnabled");
			Strings.stringIDs.Add(2522664611U, "CannotResetDefaultOAB");
			Strings.stringIDs.Add(828523090U, "FfoPrimingServiceDescription");
			Strings.stringIDs.Add(3060667906U, "RoleLimitedDetails");
			Strings.stringIDs.Add(3080406678U, "ExceptionVirtualServerNotExists");
			Strings.stringIDs.Add(3080326154U, "ProgressActivityCreateAppId");
			Strings.stringIDs.Add(26237954U, "OwaMetabaseSetPropertiesFailure");
			Strings.stringIDs.Add(3330303460U, "MultipleOrganizationRelationshipInstancesReturnedByTheRemoteParty");
			Strings.stringIDs.Add(649628065U, "TokenRequestFailed");
			Strings.stringIDs.Add(1314188949U, "OneOrMoreTasksFailed");
			Strings.stringIDs.Add(1507204552U, "E4eLicensingIsDisabledSetRule");
			Strings.stringIDs.Add(2654587277U, "ConfirmationDisableJournalArchiving");
			Strings.stringIDs.Add(2990267815U, "SetupComponentPostSetupMonitoringCorrelation");
			Strings.stringIDs.Add(235473832U, "MailboxReplicationServiceDisplayName");
			Strings.stringIDs.Add(3253730210U, "ConfirmationMessageTestMigrationServerAvailability");
			Strings.stringIDs.Add(3842833603U, "InvalidAvailabilityAccessMethod");
			Strings.stringIDs.Add(84116853U, "MigrationPleaseUseStartForReenablingIncremental");
			Strings.stringIDs.Add(944597893U, "ErrorMailTipRemoveDefaultAndTranslationsExist");
			Strings.stringIDs.Add(2120607910U, "TestSearchOperationAborted");
			Strings.stringIDs.Add(1012278329U, "ComplianceServiceDisplayName");
			Strings.stringIDs.Add(2072089536U, "ErrorDefaultRoleAssignmentPolicyNotUnique");
			Strings.stringIDs.Add(3068649109U, "SetupProgressWsbPlugin");
			Strings.stringIDs.Add(4140458166U, "UsageTypeCustom");
			Strings.stringIDs.Add(3403459873U, "InvalidDomain");
			Strings.stringIDs.Add(1996536374U, "ConfirmationMessageSetTransportProcessingConfig");
			Strings.stringIDs.Add(1734429948U, "MsiProgressStatus");
			Strings.stringIDs.Add(922137960U, "VerboseClearAllPreferredDC");
			Strings.stringIDs.Add(2826824284U, "CannotMoveE15OrLaterOab");
			Strings.stringIDs.Add(368391118U, "DebugEndIsDomainReservedCheck");
			Strings.stringIDs.Add(1500370212U, "IisTasksNameValidationProperty");
			Strings.stringIDs.Add(3323623818U, "FDS_OAD_PerfCountersComponentDescription");
			Strings.stringIDs.Add(3496199763U, "ServerObjectIsNullWarning");
			Strings.stringIDs.Add(3361139520U, "ProgressStatusCompleted");
			Strings.stringIDs.Add(4206530938U, "ReplayLagPlayDownReasonNotEnoughFreeSpace");
			Strings.stringIDs.Add(2299824885U, "ErrorSetRecipientViewRootAndViewEntireForestToTrue");
			Strings.stringIDs.Add(2597902056U, "NewImap4ConfigurationTask");
			Strings.stringIDs.Add(1395708426U, "ScenarioAvailabilityService");
			Strings.stringIDs.Add(2749826425U, "MigrationValidateNotSupported");
			Strings.stringIDs.Add(2903077230U, "ErrorGenericAllCannotbeUsedWithOtherAccessRights");
			Strings.stringIDs.Add(70447300U, "ErrorInvalidSizeRangeCondition");
			Strings.stringIDs.Add(3474126328U, "MigrationCsvParameterInvalid");
			Strings.stringIDs.Add(3050431750U, "ADAttributeName");
			Strings.stringIDs.Add(2678936089U, "ValidatingUserObjectDescription");
			Strings.stringIDs.Add(1319233567U, "RmsOnline");
			Strings.stringIDs.Add(2671381439U, "SetupProgressDisplaySpecifiers");
			Strings.stringIDs.Add(499504696U, "UnableToDetermineExecutingUser");
			Strings.stringIDs.Add(3923056437U, "ComAdminInstallOleConverter");
			Strings.stringIDs.Add(605575496U, "BPACheckingForUpdates");
			Strings.stringIDs.Add(2920595890U, "SendConnectorValidSourceServerNotFound");
			Strings.stringIDs.Add(3947119703U, "AboutToAddLocalOrgUSGToLocalAdminGroup");
			Strings.stringIDs.Add(2615723947U, "DatabaseRedundancyCheckDesc");
			Strings.stringIDs.Add(3047692628U, "MarkingMoveJobAsCanceled");
			Strings.stringIDs.Add(2732176076U, "InstallFrontendTransportRoleDescription");
			Strings.stringIDs.Add(3257900905U, "RmsSharedIdentityFailedToRemoveLink");
			Strings.stringIDs.Add(1177356111U, "SetupProgressCreateMessageHygieneContainer");
			Strings.stringIDs.Add(1811296721U, "ErrorInvalidResponseFormat");
			Strings.stringIDs.Add(1448572638U, "NewPolicyTipConfigDuplicate");
			Strings.stringIDs.Add(481130440U, "VerboseUnlockingModulesSection");
			Strings.stringIDs.Add(2798232721U, "SetupProgressAllowRemotePowerShellForAdmins");
			Strings.stringIDs.Add(3660257130U, "SetupProgressHostedConnectorFilterPolicy");
			Strings.stringIDs.Add(3069929753U, "NoSmtpAddress");
			Strings.stringIDs.Add(3847601718U, "ErrorBPAConfigDataSave");
			Strings.stringIDs.Add(2926722674U, "OfficeDataLoaderServiceDescription");
			Strings.stringIDs.Add(1780428476U, "IISNotInstalled");
			Strings.stringIDs.Add(3183807969U, "GetPolicyTipConfigUrlUsedAsActionFilter");
			Strings.stringIDs.Add(2627276457U, "ErrorSetGroupMailboxRemoveMembersOtherUser");
			Strings.stringIDs.Add(2569719605U, "CasHealthCalendarVDirSuccess");
			Strings.stringIDs.Add(1164934596U, "IgnoredAuthenticationWarning");
			Strings.stringIDs.Add(3957453737U, "AutoGroupJoinMessageSubject");
			Strings.stringIDs.Add(418863002U, "MigrationOperationFailed");
			Strings.stringIDs.Add(3566266091U, "OwaAuthenticationNotMatchEcpWarning");
			Strings.stringIDs.Add(3203832541U, "ErrorCannotMovePublicFolderIntoSameMailbox");
			Strings.stringIDs.Add(1524386503U, "SetupProgressStartingEdgeSyncService");
			Strings.stringIDs.Add(44103597U, "MailSubmissionServiceDisplayName");
			Strings.stringIDs.Add(1796170360U, "AutodiscoverFailure");
			Strings.stringIDs.Add(1366093647U, "ConflictedPolicyUpdateNotAllowed");
			Strings.stringIDs.Add(3497616869U, "InvalidCategory");
			Strings.stringIDs.Add(344390835U, "JournalingToExternalOnly");
			Strings.stringIDs.Add(3204473306U, "ErrorTenantIsPiloting");
			Strings.stringIDs.Add(51564260U, "SetupProgressStoppingAddressBookService");
			Strings.stringIDs.Add(4084620468U, "SetupComponentConfiguringADTopologyService");
			Strings.stringIDs.Add(3039439991U, "FailedToCreateAuditLogSearch");
			Strings.stringIDs.Add(3995145683U, "WarningPropertySetIgnored");
			Strings.stringIDs.Add(3963066099U, "MigrationPleaseUseStopForDisablingIncremental");
			Strings.stringIDs.Add(1465827073U, "StatusMessageSynchronizerRunningInBackground");
			Strings.stringIDs.Add(1505488867U, "ErrorBothCustomAndPrecannedFilterSpecified");
			Strings.stringIDs.Add(3863634433U, "ErrorTaskRunningLocationFrontendOnly");
			Strings.stringIDs.Add(213191494U, "CasHealthOwaErrorPageHeader");
		}

		// Token: 0x170029C8 RID: 10696
		// (get) Token: 0x0600867C RID: 34428 RVA: 0x002350EF File Offset: 0x002332EF
		public static LocalizedString SetupComponentGatewayLocal
		{
			get
			{
				return new LocalizedString("SetupComponentGatewayLocal", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170029C9 RID: 10697
		// (get) Token: 0x0600867D RID: 34429 RVA: 0x0023510D File Offset: 0x0023330D
		public static LocalizedString SetupProgressCreateServerObject
		{
			get
			{
				return new LocalizedString("SetupProgressCreateServerObject", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600867E RID: 34430 RVA: 0x0023512C File Offset: 0x0023332C
		public static LocalizedString VerboseWsrmNotConfigured(string app, string argument)
		{
			return new LocalizedString("VerboseWsrmNotConfigured", "Ex7D8BDC", false, true, Strings.ResourceManager, new object[]
			{
				app,
				argument
			});
		}

		// Token: 0x0600867F RID: 34431 RVA: 0x00235160 File Offset: 0x00233360
		public static LocalizedString ErrorCannotDeleteRoleWithAssignment(string id)
		{
			return new LocalizedString("ErrorCannotDeleteRoleWithAssignment", "Ex201C99", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x06008680 RID: 34432 RVA: 0x00235190 File Offset: 0x00233390
		public static LocalizedString WarningMisconfiguredElcMailboxPolicy(string name)
		{
			return new LocalizedString("WarningMisconfiguredElcMailboxPolicy", "Ex603936", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x170029CA RID: 10698
		// (get) Token: 0x06008681 RID: 34433 RVA: 0x002351BF File Offset: 0x002333BF
		public static LocalizedString ErrorPatternCannotContainEmptyAlternations
		{
			get
			{
				return new LocalizedString("ErrorPatternCannotContainEmptyAlternations", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008682 RID: 34434 RVA: 0x002351E0 File Offset: 0x002333E0
		public static LocalizedString ErrorNonMailboxDirectoryUser(string contact)
		{
			return new LocalizedString("ErrorNonMailboxDirectoryUser", "", false, false, Strings.ResourceManager, new object[]
			{
				contact
			});
		}

		// Token: 0x06008683 RID: 34435 RVA: 0x00235210 File Offset: 0x00233410
		public static LocalizedString ConversationsFailedToOpenMailbox(string error)
		{
			return new LocalizedString("ConversationsFailedToOpenMailbox", "Ex350F5A", false, true, Strings.ResourceManager, new object[]
			{
				error
			});
		}

		// Token: 0x170029CB RID: 10699
		// (get) Token: 0x06008684 RID: 34436 RVA: 0x0023523F File Offset: 0x0023343F
		public static LocalizedString SetupComponentPostSetupUnifiedMessaging
		{
			get
			{
				return new LocalizedString("SetupComponentPostSetupUnifiedMessaging", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008685 RID: 34437 RVA: 0x00235260 File Offset: 0x00233460
		public static LocalizedString ConfirmationMessageNewMailboxResource(string Name, string ResourceType, string UserPrincipalName, string OrganizationalUnit)
		{
			return new LocalizedString("ConfirmationMessageNewMailboxResource", "Ex07B28F", false, true, Strings.ResourceManager, new object[]
			{
				Name,
				ResourceType,
				UserPrincipalName,
				OrganizationalUnit
			});
		}

		// Token: 0x06008686 RID: 34438 RVA: 0x0023529C File Offset: 0x0023349C
		public static LocalizedString InvalidLogIdentityFormat(string uri)
		{
			return new LocalizedString("InvalidLogIdentityFormat", "", false, false, Strings.ResourceManager, new object[]
			{
				uri
			});
		}

		// Token: 0x06008687 RID: 34439 RVA: 0x002352CC File Offset: 0x002334CC
		public static LocalizedString VerboseDeleteMailboxInStore(string mdb, string mailbox)
		{
			return new LocalizedString("VerboseDeleteMailboxInStore", "Ex3B42A3", false, true, Strings.ResourceManager, new object[]
			{
				mdb,
				mailbox
			});
		}

		// Token: 0x06008688 RID: 34440 RVA: 0x00235300 File Offset: 0x00233500
		public static LocalizedString RestoreMailboxDuplicates(string displayName)
		{
			return new LocalizedString("RestoreMailboxDuplicates", "ExC119CB", false, true, Strings.ResourceManager, new object[]
			{
				displayName
			});
		}

		// Token: 0x170029CC RID: 10700
		// (get) Token: 0x06008689 RID: 34441 RVA: 0x0023532F File Offset: 0x0023352F
		public static LocalizedString CannotCombineWildcardRecipientAddress
		{
			get
			{
				return new LocalizedString("CannotCombineWildcardRecipientAddress", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600868A RID: 34442 RVA: 0x00235350 File Offset: 0x00233550
		public static LocalizedString E12DomainServersGroupNotFoundException(string dn, string dc)
		{
			return new LocalizedString("E12DomainServersGroupNotFoundException", "Ex02E3DC", false, true, Strings.ResourceManager, new object[]
			{
				dn,
				dc
			});
		}

		// Token: 0x0600868B RID: 34443 RVA: 0x00235384 File Offset: 0x00233584
		public static LocalizedString DagTaskCheckingDagServersAreClustered(string clusterName)
		{
			return new LocalizedString("DagTaskCheckingDagServersAreClustered", "", false, false, Strings.ResourceManager, new object[]
			{
				clusterName
			});
		}

		// Token: 0x0600868C RID: 34444 RVA: 0x002353B4 File Offset: 0x002335B4
		public static LocalizedString ConfirmationMessageSetAddressrewriteentry(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetAddressrewriteentry", "Ex2759A1", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x0600868D RID: 34445 RVA: 0x002353E4 File Offset: 0x002335E4
		public static LocalizedString WarnExtendedProtectionIsNotEnabled(string server, string kb)
		{
			return new LocalizedString("WarnExtendedProtectionIsNotEnabled", "Ex570474", false, true, Strings.ResourceManager, new object[]
			{
				server,
				kb
			});
		}

		// Token: 0x170029CD RID: 10701
		// (get) Token: 0x0600868E RID: 34446 RVA: 0x00235417 File Offset: 0x00233617
		public static LocalizedString VerboseRebuildWSManRegistry
		{
			get
			{
				return new LocalizedString("VerboseRebuildWSManRegistry", "ExCD008C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600868F RID: 34447 RVA: 0x00235438 File Offset: 0x00233638
		public static LocalizedString SharedConfigurationInfoExists(string org, string sharedConfigurationInfo)
		{
			return new LocalizedString("SharedConfigurationInfoExists", "Ex1B86A2", false, true, Strings.ResourceManager, new object[]
			{
				org,
				sharedConfigurationInfo
			});
		}

		// Token: 0x170029CE RID: 10702
		// (get) Token: 0x06008690 RID: 34448 RVA: 0x0023546B File Offset: 0x0023366B
		public static LocalizedString CannotAddIPSafelistsIfIPSafelistingSyncDisabledId
		{
			get
			{
				return new LocalizedString("CannotAddIPSafelistsIfIPSafelistingSyncDisabledId", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008691 RID: 34449 RVA: 0x0023548C File Offset: 0x0023368C
		public static LocalizedString RecipientDomainNotManaged(string domain)
		{
			return new LocalizedString("RecipientDomainNotManaged", "", false, false, Strings.ResourceManager, new object[]
			{
				domain
			});
		}

		// Token: 0x06008692 RID: 34450 RVA: 0x002354BC File Offset: 0x002336BC
		public static LocalizedString ErrorWLCDPartnerAccessException(string message)
		{
			return new LocalizedString("ErrorWLCDPartnerAccessException", "ExBDE444", false, true, Strings.ResourceManager, new object[]
			{
				message
			});
		}

		// Token: 0x06008693 RID: 34451 RVA: 0x002354EC File Offset: 0x002336EC
		public static LocalizedString InconsistentServerNotInDag(string server, string dagName)
		{
			return new LocalizedString("InconsistentServerNotInDag", "Ex656A61", false, true, Strings.ResourceManager, new object[]
			{
				server,
				dagName
			});
		}

		// Token: 0x06008694 RID: 34452 RVA: 0x00235520 File Offset: 0x00233720
		public static LocalizedString ErrorAuthServerIssuerNameNotFound(string issuerIdentifier)
		{
			return new LocalizedString("ErrorAuthServerIssuerNameNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				issuerIdentifier
			});
		}

		// Token: 0x06008695 RID: 34453 RVA: 0x00235550 File Offset: 0x00233750
		public static LocalizedString InterceptorErrorRootedPathNotAllowed(string path)
		{
			return new LocalizedString("InterceptorErrorRootedPathNotAllowed", "", false, false, Strings.ResourceManager, new object[]
			{
				path
			});
		}

		// Token: 0x06008696 RID: 34454 RVA: 0x00235580 File Offset: 0x00233780
		public static LocalizedString HybridMailflowConnectorNameAndTypeWarning(string name)
		{
			return new LocalizedString("HybridMailflowConnectorNameAndTypeWarning", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x06008697 RID: 34455 RVA: 0x002355B0 File Offset: 0x002337B0
		public static LocalizedString COMDetailException(string errorMsg, string directoryEntry, string detailMessage)
		{
			return new LocalizedString("COMDetailException", "ExB0CBA1", false, true, Strings.ResourceManager, new object[]
			{
				errorMsg,
				directoryEntry,
				detailMessage
			});
		}

		// Token: 0x170029CF RID: 10703
		// (get) Token: 0x06008698 RID: 34456 RVA: 0x002355E7 File Offset: 0x002337E7
		public static LocalizedString ExpiryDateSameOrBeforeActivationDate
		{
			get
			{
				return new LocalizedString("ExpiryDateSameOrBeforeActivationDate", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170029D0 RID: 10704
		// (get) Token: 0x06008699 RID: 34457 RVA: 0x00235605 File Offset: 0x00233805
		public static LocalizedString ErrorPrecannedRoleAndSpecificMailboxFolderPermission
		{
			get
			{
				return new LocalizedString("ErrorPrecannedRoleAndSpecificMailboxFolderPermission", "ExE7DEBE", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170029D1 RID: 10705
		// (get) Token: 0x0600869A RID: 34458 RVA: 0x00235623 File Offset: 0x00233823
		public static LocalizedString ErrorCannotSpecifyScopeParameter
		{
			get
			{
				return new LocalizedString("ErrorCannotSpecifyScopeParameter", "Ex72BE7D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170029D2 RID: 10706
		// (get) Token: 0x0600869B RID: 34459 RVA: 0x00235641 File Offset: 0x00233841
		public static LocalizedString SetupProgressImportingAddionalEdgeSchema
		{
			get
			{
				return new LocalizedString("SetupProgressImportingAddionalEdgeSchema", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600869C RID: 34460 RVA: 0x00235660 File Offset: 0x00233860
		public static LocalizedString ErrorCannotCancelRequestBeingCompleted(string indexEntry, string serverName)
		{
			return new LocalizedString("ErrorCannotCancelRequestBeingCompleted", "Ex7C5639", false, true, Strings.ResourceManager, new object[]
			{
				indexEntry,
				serverName
			});
		}

		// Token: 0x0600869D RID: 34461 RVA: 0x00235694 File Offset: 0x00233894
		public static LocalizedString VerboseADOperationSucceeded(string id)
		{
			return new LocalizedString("VerboseADOperationSucceeded", "ExC8A79A", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x0600869E RID: 34462 RVA: 0x002356C4 File Offset: 0x002338C4
		public static LocalizedString ConfirmationMessageSetAuthServer(string name)
		{
			return new LocalizedString("ConfirmationMessageSetAuthServer", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x0600869F RID: 34463 RVA: 0x002356F4 File Offset: 0x002338F4
		public static LocalizedString DagTaskCreatingFsw(string fswName)
		{
			return new LocalizedString("DagTaskCreatingFsw", "", false, false, Strings.ResourceManager, new object[]
			{
				fswName
			});
		}

		// Token: 0x170029D3 RID: 10707
		// (get) Token: 0x060086A0 RID: 34464 RVA: 0x00235723 File Offset: 0x00233923
		public static LocalizedString E4eLicensingIsDisabledCreateRule
		{
			get
			{
				return new LocalizedString("E4eLicensingIsDisabledCreateRule", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170029D4 RID: 10708
		// (get) Token: 0x060086A1 RID: 34465 RVA: 0x00235741 File Offset: 0x00233941
		public static LocalizedString SetupProgressInstallMessageDeliveryContainer
		{
			get
			{
				return new LocalizedString("SetupProgressInstallMessageDeliveryContainer", "Ex2637A7", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170029D5 RID: 10709
		// (get) Token: 0x060086A2 RID: 34466 RVA: 0x0023575F File Offset: 0x0023395F
		public static LocalizedString SetupProgressInstallAdministrativeGroupContainer
		{
			get
			{
				return new LocalizedString("SetupProgressInstallAdministrativeGroupContainer", "Ex648ECE", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060086A3 RID: 34467 RVA: 0x00235780 File Offset: 0x00233980
		public static LocalizedString ConfirmOrphanCannotConnectToMailboxDatabase(string identity, string mdb)
		{
			return new LocalizedString("ConfirmOrphanCannotConnectToMailboxDatabase", "ExD4185A", false, true, Strings.ResourceManager, new object[]
			{
				identity,
				mdb
			});
		}

		// Token: 0x170029D6 RID: 10710
		// (get) Token: 0x060086A4 RID: 34468 RVA: 0x002357B3 File Offset: 0x002339B3
		public static LocalizedString ErrorRoomPasswordMustBeSetWhenEnablingRoomADAccount
		{
			get
			{
				return new LocalizedString("ErrorRoomPasswordMustBeSetWhenEnablingRoomADAccount", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170029D7 RID: 10711
		// (get) Token: 0x060086A5 RID: 34469 RVA: 0x002357D1 File Offset: 0x002339D1
		public static LocalizedString SetupProgressCreateRBACRoles
		{
			get
			{
				return new LocalizedString("SetupProgressCreateRBACRoles", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060086A6 RID: 34470 RVA: 0x002357F0 File Offset: 0x002339F0
		public static LocalizedString ErrorMailboxAuditLogSearchTimeout(string timeout, string criteria, string userid)
		{
			return new LocalizedString("ErrorMailboxAuditLogSearchTimeout", "ExD39BE5", false, true, Strings.ResourceManager, new object[]
			{
				timeout,
				criteria,
				userid
			});
		}

		// Token: 0x060086A7 RID: 34471 RVA: 0x00235828 File Offset: 0x00233A28
		public static LocalizedString ErrorSetOlderVirtualDirectory(string identity, string objectVersion, string currentVersion)
		{
			return new LocalizedString("ErrorSetOlderVirtualDirectory", "ExCF5439", false, true, Strings.ResourceManager, new object[]
			{
				identity,
				objectVersion,
				currentVersion
			});
		}

		// Token: 0x060086A8 RID: 34472 RVA: 0x00235860 File Offset: 0x00233A60
		public static LocalizedString FoundTasksToExecute(int count)
		{
			return new LocalizedString("FoundTasksToExecute", "Ex51E73A", false, true, Strings.ResourceManager, new object[]
			{
				count
			});
		}

		// Token: 0x170029D8 RID: 10712
		// (get) Token: 0x060086A9 RID: 34473 RVA: 0x00235894 File Offset: 0x00233A94
		public static LocalizedString ForwardSyncServiceDisplayName
		{
			get
			{
				return new LocalizedString("ForwardSyncServiceDisplayName", "Ex932DA5", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170029D9 RID: 10713
		// (get) Token: 0x060086AA RID: 34474 RVA: 0x002358B2 File Offset: 0x00233AB2
		public static LocalizedString MoveContentIndexTask
		{
			get
			{
				return new LocalizedString("MoveContentIndexTask", "Ex0BD706", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060086AB RID: 34475 RVA: 0x002358D0 File Offset: 0x00233AD0
		public static LocalizedString WarningUpgradeIsNotComplete(string upgradePhase)
		{
			return new LocalizedString("WarningUpgradeIsNotComplete", "Ex22E3D1", false, true, Strings.ResourceManager, new object[]
			{
				upgradePhase
			});
		}

		// Token: 0x170029DA RID: 10714
		// (get) Token: 0x060086AC RID: 34476 RVA: 0x002358FF File Offset: 0x00233AFF
		public static LocalizedString ADAttributeLastName
		{
			get
			{
				return new LocalizedString("ADAttributeLastName", "ExD49E62", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060086AD RID: 34477 RVA: 0x00235920 File Offset: 0x00233B20
		public static LocalizedString ErrorMailboxDatabaseToRecoverHasAssociatedRecoveryMailboxDatabaseAlready(string mailboxDatabase)
		{
			return new LocalizedString("ErrorMailboxDatabaseToRecoverHasAssociatedRecoveryMailboxDatabaseAlready", "Ex8FC131", false, true, Strings.ResourceManager, new object[]
			{
				mailboxDatabase
			});
		}

		// Token: 0x170029DB RID: 10715
		// (get) Token: 0x060086AE RID: 34478 RVA: 0x0023594F File Offset: 0x00233B4F
		public static LocalizedString ErrorMaxVersionOrFixVersionRequired
		{
			get
			{
				return new LocalizedString("ErrorMaxVersionOrFixVersionRequired", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170029DC RID: 10716
		// (get) Token: 0x060086AF RID: 34479 RVA: 0x0023596D File Offset: 0x00233B6D
		public static LocalizedString WarningIgnoreMailboxSettingOnlyPolicy
		{
			get
			{
				return new LocalizedString("WarningIgnoreMailboxSettingOnlyPolicy", "Ex41154F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060086B0 RID: 34480 RVA: 0x0023598C File Offset: 0x00233B8C
		public static LocalizedString ConfirmationMessageSetIntraOrganizationConnector(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetIntraOrganizationConnector", "", false, false, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x170029DD RID: 10717
		// (get) Token: 0x060086B1 RID: 34481 RVA: 0x002359BB File Offset: 0x00233BBB
		public static LocalizedString InstallExchangeOrganizationDescription
		{
			get
			{
				return new LocalizedString("InstallExchangeOrganizationDescription", "ExC232F6", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060086B2 RID: 34482 RVA: 0x002359DC File Offset: 0x00233BDC
		public static LocalizedString WarningOabGenFailed(string oabId, string orgMbx, string server, string errormsg)
		{
			return new LocalizedString("WarningOabGenFailed", "", false, false, Strings.ResourceManager, new object[]
			{
				oabId,
				orgMbx,
				server,
				errormsg
			});
		}

		// Token: 0x060086B3 RID: 34483 RVA: 0x00235A18 File Offset: 0x00233C18
		public static LocalizedString InvalidForwardSyncConfigurationError(string error)
		{
			return new LocalizedString("InvalidForwardSyncConfigurationError", "", false, false, Strings.ResourceManager, new object[]
			{
				error
			});
		}

		// Token: 0x170029DE RID: 10718
		// (get) Token: 0x060086B4 RID: 34484 RVA: 0x00235A47 File Offset: 0x00233C47
		public static LocalizedString ClassificationRuleCollectionIllegalScopedNewOperation
		{
			get
			{
				return new LocalizedString("ClassificationRuleCollectionIllegalScopedNewOperation", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060086B5 RID: 34485 RVA: 0x00235A68 File Offset: 0x00233C68
		public static LocalizedString ErrorWildcardNotSupportedInRelocationIdentity(string identity)
		{
			return new LocalizedString("ErrorWildcardNotSupportedInRelocationIdentity", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x170029DF RID: 10719
		// (get) Token: 0x060086B6 RID: 34486 RVA: 0x00235A97 File Offset: 0x00233C97
		public static LocalizedString CannotRemoveDefaultRemoteDomain
		{
			get
			{
				return new LocalizedString("CannotRemoveDefaultRemoteDomain", "Ex621009", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170029E0 RID: 10720
		// (get) Token: 0x060086B7 RID: 34487 RVA: 0x00235AB5 File Offset: 0x00233CB5
		public static LocalizedString SetupProgressCreateLiveEnableFederatedEmailMailbox
		{
			get
			{
				return new LocalizedString("SetupProgressCreateLiveEnableFederatedEmailMailbox", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170029E1 RID: 10721
		// (get) Token: 0x060086B8 RID: 34488 RVA: 0x00235AD3 File Offset: 0x00233CD3
		public static LocalizedString SetupComponentBridgeheadGlobalConfig
		{
			get
			{
				return new LocalizedString("SetupComponentBridgeheadGlobalConfig", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060086B9 RID: 34489 RVA: 0x00235AF4 File Offset: 0x00233CF4
		public static LocalizedString ConfirmationMessageRemoveHostedContentFilterPolicy(string identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveHostedContentFilterPolicy", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x170029E2 RID: 10722
		// (get) Token: 0x060086BA RID: 34490 RVA: 0x00235B23 File Offset: 0x00233D23
		public static LocalizedString CopyStatusMisconfigured
		{
			get
			{
				return new LocalizedString("CopyStatusMisconfigured", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170029E3 RID: 10723
		// (get) Token: 0x060086BB RID: 34491 RVA: 0x00235B41 File Offset: 0x00233D41
		public static LocalizedString DiagnosticsServiceDescription
		{
			get
			{
				return new LocalizedString("DiagnosticsServiceDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170029E4 RID: 10724
		// (get) Token: 0x060086BC RID: 34492 RVA: 0x00235B5F File Offset: 0x00233D5F
		public static LocalizedString DisableConversationsTask
		{
			get
			{
				return new LocalizedString("DisableConversationsTask", "Ex8AC82C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060086BD RID: 34493 RVA: 0x00235B80 File Offset: 0x00233D80
		public static LocalizedString WarningPrimaryExchangeRecipientNotSet(string orgId)
		{
			return new LocalizedString("WarningPrimaryExchangeRecipientNotSet", "", false, false, Strings.ResourceManager, new object[]
			{
				orgId
			});
		}

		// Token: 0x170029E5 RID: 10725
		// (get) Token: 0x060086BE RID: 34494 RVA: 0x00235BAF File Offset: 0x00233DAF
		public static LocalizedString SetupProgressOutlookAnywhereEnabled
		{
			get
			{
				return new LocalizedString("SetupProgressOutlookAnywhereEnabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060086BF RID: 34495 RVA: 0x00235BD0 File Offset: 0x00233DD0
		public static LocalizedString VerboseCreatingMonitoringMailbox(string id)
		{
			return new LocalizedString("VerboseCreatingMonitoringMailbox", "", false, false, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x170029E6 RID: 10726
		// (get) Token: 0x060086C0 RID: 34496 RVA: 0x00235BFF File Offset: 0x00233DFF
		public static LocalizedString ErrorCannotSetPowerShellMaxTenantConcurrency
		{
			get
			{
				return new LocalizedString("ErrorCannotSetPowerShellMaxTenantConcurrency", "Ex0D132E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170029E7 RID: 10727
		// (get) Token: 0x060086C1 RID: 34497 RVA: 0x00235C1D File Offset: 0x00233E1D
		public static LocalizedString ForwardSyncService2DisplayName
		{
			get
			{
				return new LocalizedString("ForwardSyncService2DisplayName", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060086C2 RID: 34498 RVA: 0x00235C3C File Offset: 0x00233E3C
		public static LocalizedString OABVdirBasicAuthWithoutSSL(string vdir)
		{
			return new LocalizedString("OABVdirBasicAuthWithoutSSL", "Ex706EC6", false, true, Strings.ResourceManager, new object[]
			{
				vdir
			});
		}

		// Token: 0x060086C3 RID: 34499 RVA: 0x00235C6C File Offset: 0x00233E6C
		public static LocalizedString ClassificationRuleCollectionReservedRulePackIdViolation(string rulePackId, string reservedPrefix)
		{
			return new LocalizedString("ClassificationRuleCollectionReservedRulePackIdViolation", "", false, false, Strings.ResourceManager, new object[]
			{
				rulePackId,
				reservedPrefix
			});
		}

		// Token: 0x170029E8 RID: 10728
		// (get) Token: 0x060086C4 RID: 34500 RVA: 0x00235C9F File Offset: 0x00233E9F
		public static LocalizedString ErrorSuspendWhenReadyToCompleteCannotBeSetWithIncrementalSyncInterval
		{
			get
			{
				return new LocalizedString("ErrorSuspendWhenReadyToCompleteCannotBeSetWithIncrementalSyncInterval", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060086C5 RID: 34501 RVA: 0x00235CC0 File Offset: 0x00233EC0
		public static LocalizedString NamespaceServiceUrl(string url)
		{
			return new LocalizedString("NamespaceServiceUrl", "Ex5141D8", false, true, Strings.ResourceManager, new object[]
			{
				url
			});
		}

		// Token: 0x170029E9 RID: 10729
		// (get) Token: 0x060086C6 RID: 34502 RVA: 0x00235CEF File Offset: 0x00233EEF
		public static LocalizedString SetupProgressStoppingComplianceAuditService
		{
			get
			{
				return new LocalizedString("SetupProgressStoppingComplianceAuditService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170029EA RID: 10730
		// (get) Token: 0x060086C7 RID: 34503 RVA: 0x00235D0D File Offset: 0x00233F0D
		public static LocalizedString HealthManagerServiceDescription
		{
			get
			{
				return new LocalizedString("HealthManagerServiceDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060086C8 RID: 34504 RVA: 0x00235D2C File Offset: 0x00233F2C
		public static LocalizedString ConfirmationMessageEnableMalwareFilterRule(string identity)
		{
			return new LocalizedString("ConfirmationMessageEnableMalwareFilterRule", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x060086C9 RID: 34505 RVA: 0x00235D5C File Offset: 0x00233F5C
		public static LocalizedString DagTaskNoNetworksRunningDhcp(string serverName)
		{
			return new LocalizedString("DagTaskNoNetworksRunningDhcp", "", false, false, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		// Token: 0x170029EB RID: 10731
		// (get) Token: 0x060086CA RID: 34506 RVA: 0x00235D8B File Offset: 0x00233F8B
		public static LocalizedString MessageTracingClientServiceDescription
		{
			get
			{
				return new LocalizedString("MessageTracingClientServiceDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060086CB RID: 34507 RVA: 0x00235DAC File Offset: 0x00233FAC
		public static LocalizedString ErrorLiveIdAuthentication(string message)
		{
			return new LocalizedString("ErrorLiveIdAuthentication", "Ex66CD63", false, true, Strings.ResourceManager, new object[]
			{
				message
			});
		}

		// Token: 0x060086CC RID: 34508 RVA: 0x00235DDC File Offset: 0x00233FDC
		public static LocalizedString FormsAuthenticationDeleteUnknownErrorException(string metabasePath, int propertyID, int hresult)
		{
			return new LocalizedString("FormsAuthenticationDeleteUnknownErrorException", "ExEA357B", false, true, Strings.ResourceManager, new object[]
			{
				metabasePath,
				propertyID,
				hresult
			});
		}

		// Token: 0x170029EC RID: 10732
		// (get) Token: 0x060086CD RID: 34509 RVA: 0x00235E1D File Offset: 0x0023401D
		public static LocalizedString RoleNonEditingAuthor
		{
			get
			{
				return new LocalizedString("RoleNonEditingAuthor", "Ex669109", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060086CE RID: 34510 RVA: 0x00235E3C File Offset: 0x0023403C
		public static LocalizedString FailedProbeResultDetails(string failedProbeResultDetailsString)
		{
			return new LocalizedString("FailedProbeResultDetails", "", false, false, Strings.ResourceManager, new object[]
			{
				failedProbeResultDetailsString
			});
		}

		// Token: 0x060086CF RID: 34511 RVA: 0x00235E6C File Offset: 0x0023406C
		public static LocalizedString ErrorNoMatchedUserTypeFound(string targetType, string recipientName, string recipientType)
		{
			return new LocalizedString("ErrorNoMatchedUserTypeFound", "", false, false, Strings.ResourceManager, new object[]
			{
				targetType,
				recipientName,
				recipientType
			});
		}

		// Token: 0x060086D0 RID: 34512 RVA: 0x00235EA4 File Offset: 0x002340A4
		public static LocalizedString ConfirmationMessageTestServiceHealth(string Server)
		{
			return new LocalizedString("ConfirmationMessageTestServiceHealth", "Ex74AD67", false, true, Strings.ResourceManager, new object[]
			{
				Server
			});
		}

		// Token: 0x170029ED RID: 10733
		// (get) Token: 0x060086D1 RID: 34513 RVA: 0x00235ED3 File Offset: 0x002340D3
		public static LocalizedString ErrorSecondaryMailboxIdRequired
		{
			get
			{
				return new LocalizedString("ErrorSecondaryMailboxIdRequired", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060086D2 RID: 34514 RVA: 0x00235EF4 File Offset: 0x002340F4
		public static LocalizedString ExchangeSettingsExpirationDateIsInThePastWarning(string expirationDate)
		{
			return new LocalizedString("ExchangeSettingsExpirationDateIsInThePastWarning", "", false, false, Strings.ResourceManager, new object[]
			{
				expirationDate
			});
		}

		// Token: 0x170029EE RID: 10734
		// (get) Token: 0x060086D3 RID: 34515 RVA: 0x00235F23 File Offset: 0x00234123
		public static LocalizedString HeaderName
		{
			get
			{
				return new LocalizedString("HeaderName", "ExC9E2AE", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060086D4 RID: 34516 RVA: 0x00235F44 File Offset: 0x00234144
		public static LocalizedString VerboseFailedToDeleteEapWhileRollingBack(string id)
		{
			return new LocalizedString("VerboseFailedToDeleteEapWhileRollingBack", "Ex72029F", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x170029EF RID: 10735
		// (get) Token: 0x060086D5 RID: 34517 RVA: 0x00235F73 File Offset: 0x00234173
		public static LocalizedString InvalidRecipient
		{
			get
			{
				return new LocalizedString("InvalidRecipient", "Ex4519A9", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060086D6 RID: 34518 RVA: 0x00235F94 File Offset: 0x00234194
		public static LocalizedString ErrorSetMailPublicFolderEntryIdWrongFormat(string entryId)
		{
			return new LocalizedString("ErrorSetMailPublicFolderEntryIdWrongFormat", "", false, false, Strings.ResourceManager, new object[]
			{
				entryId
			});
		}

		// Token: 0x060086D7 RID: 34519 RVA: 0x00235FC4 File Offset: 0x002341C4
		public static LocalizedString VerboseTestUserAddress(string emailAddress)
		{
			return new LocalizedString("VerboseTestUserAddress", "", false, false, Strings.ResourceManager, new object[]
			{
				emailAddress
			});
		}

		// Token: 0x060086D8 RID: 34520 RVA: 0x00235FF4 File Offset: 0x002341F4
		public static LocalizedString SetServerAttributePermissionDeniedException(string entry)
		{
			return new LocalizedString("SetServerAttributePermissionDeniedException", "ExCA25ED", false, true, Strings.ResourceManager, new object[]
			{
				entry
			});
		}

		// Token: 0x060086D9 RID: 34521 RVA: 0x00236024 File Offset: 0x00234224
		public static LocalizedString VerboseFailedToRollbackPriority(string id)
		{
			return new LocalizedString("VerboseFailedToRollbackPriority", "Ex2C41E7", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x060086DA RID: 34522 RVA: 0x00236054 File Offset: 0x00234254
		public static LocalizedString DetailRpcError(string server, string message)
		{
			return new LocalizedString("DetailRpcError", "", false, false, Strings.ResourceManager, new object[]
			{
				server,
				message
			});
		}

		// Token: 0x060086DB RID: 34523 RVA: 0x00236088 File Offset: 0x00234288
		public static LocalizedString AboutToAddServerAdminToLocalAdminGroup(string s)
		{
			return new LocalizedString("AboutToAddServerAdminToLocalAdminGroup", "ExABFD65", false, true, Strings.ResourceManager, new object[]
			{
				s
			});
		}

		// Token: 0x060086DC RID: 34524 RVA: 0x002360B8 File Offset: 0x002342B8
		public static LocalizedString ServiceHasNoProcessId(string serviceName)
		{
			return new LocalizedString("ServiceHasNoProcessId", "Ex95B1FA", false, true, Strings.ResourceManager, new object[]
			{
				serviceName
			});
		}

		// Token: 0x170029F0 RID: 10736
		// (get) Token: 0x060086DD RID: 34525 RVA: 0x002360E7 File Offset: 0x002342E7
		public static LocalizedString RcrDatabasesMountedCheckDesc
		{
			get
			{
				return new LocalizedString("RcrDatabasesMountedCheckDesc", "Ex1C439A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060086DE RID: 34526 RVA: 0x00236108 File Offset: 0x00234308
		public static LocalizedString ErrorNotExchange12Server(string serverName)
		{
			return new LocalizedString("ErrorNotExchange12Server", "Ex65B4EB", false, true, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		// Token: 0x060086DF RID: 34527 RVA: 0x00236138 File Offset: 0x00234338
		public static LocalizedString ErrorPolicyNotFound(string name)
		{
			return new LocalizedString("ErrorPolicyNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x060086E0 RID: 34528 RVA: 0x00236168 File Offset: 0x00234368
		public static LocalizedString ServiceDisabled(string servicename)
		{
			return new LocalizedString("ServiceDisabled", "Ex8C0A27", false, true, Strings.ResourceManager, new object[]
			{
				servicename
			});
		}

		// Token: 0x060086E1 RID: 34529 RVA: 0x00236198 File Offset: 0x00234398
		public static LocalizedString MultipleDialplansWithSameId(object idString)
		{
			return new LocalizedString("MultipleDialplansWithSameId", "Ex6733C2", false, true, Strings.ResourceManager, new object[]
			{
				idString
			});
		}

		// Token: 0x060086E2 RID: 34530 RVA: 0x002361C8 File Offset: 0x002343C8
		public static LocalizedString CasHealthWebAppStartTest(Uri url)
		{
			return new LocalizedString("CasHealthWebAppStartTest", "ExC412AB", false, true, Strings.ResourceManager, new object[]
			{
				url
			});
		}

		// Token: 0x060086E3 RID: 34531 RVA: 0x002361F8 File Offset: 0x002343F8
		public static LocalizedString ConfirmationMessageSetMailboxCrossVersionRehoming(string Identity, string originalDatabase, string newDatabase)
		{
			return new LocalizedString("ConfirmationMessageSetMailboxCrossVersionRehoming", "", false, false, Strings.ResourceManager, new object[]
			{
				Identity,
				originalDatabase,
				newDatabase
			});
		}

		// Token: 0x170029F1 RID: 10737
		// (get) Token: 0x060086E4 RID: 34532 RVA: 0x0023622F File Offset: 0x0023442F
		public static LocalizedString RemovingFiles
		{
			get
			{
				return new LocalizedString("RemovingFiles", "Ex75AE43", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060086E5 RID: 34533 RVA: 0x00236250 File Offset: 0x00234450
		public static LocalizedString DagNetworkSubnetMoving(string subnetId, string oldNet, string newNet)
		{
			return new LocalizedString("DagNetworkSubnetMoving", "Ex9F8DF6", false, true, Strings.ResourceManager, new object[]
			{
				subnetId,
				oldNet,
				newNet
			});
		}

		// Token: 0x170029F2 RID: 10738
		// (get) Token: 0x060086E6 RID: 34534 RVA: 0x00236287 File Offset: 0x00234487
		public static LocalizedString RoleContributor
		{
			get
			{
				return new LocalizedString("RoleContributor", "Ex94CF6F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060086E7 RID: 34535 RVA: 0x002362A8 File Offset: 0x002344A8
		public static LocalizedString SenderIPAddressOverlapsFfoDCIPAddressesId(string ipRange)
		{
			return new LocalizedString("SenderIPAddressOverlapsFfoDCIPAddressesId", "", false, false, Strings.ResourceManager, new object[]
			{
				ipRange
			});
		}

		// Token: 0x060086E8 RID: 34536 RVA: 0x002362D8 File Offset: 0x002344D8
		public static LocalizedString ExchangePrincipalNotFoundException(string recipient)
		{
			return new LocalizedString("ExchangePrincipalNotFoundException", "ExB9CFD0", false, true, Strings.ResourceManager, new object[]
			{
				recipient
			});
		}

		// Token: 0x170029F3 RID: 10739
		// (get) Token: 0x060086E9 RID: 34537 RVA: 0x00236307 File Offset: 0x00234507
		public static LocalizedString SetupProgressCreateRBACRolesContainer
		{
			get
			{
				return new LocalizedString("SetupProgressCreateRBACRolesContainer", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170029F4 RID: 10740
		// (get) Token: 0x060086EA RID: 34538 RVA: 0x00236325 File Offset: 0x00234525
		public static LocalizedString NoVersionMatch
		{
			get
			{
				return new LocalizedString("NoVersionMatch", "ExCB7D7F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060086EB RID: 34539 RVA: 0x00236344 File Offset: 0x00234544
		public static LocalizedString OutputFileExists(string filename)
		{
			return new LocalizedString("OutputFileExists", "Ex3A2A85", false, true, Strings.ResourceManager, new object[]
			{
				filename
			});
		}

		// Token: 0x060086EC RID: 34540 RVA: 0x00236374 File Offset: 0x00234574
		public static LocalizedString messageTopologyDiscoverException(string topologyDiscoverMode)
		{
			return new LocalizedString("messageTopologyDiscoverException", "", false, false, Strings.ResourceManager, new object[]
			{
				topologyDiscoverMode
			});
		}

		// Token: 0x060086ED RID: 34541 RVA: 0x002363A4 File Offset: 0x002345A4
		public static LocalizedString NewFederationTrustProvisioningService(string partnerSTS)
		{
			return new LocalizedString("NewFederationTrustProvisioningService", "Ex6D70A3", false, true, Strings.ResourceManager, new object[]
			{
				partnerSTS
			});
		}

		// Token: 0x060086EE RID: 34542 RVA: 0x002363D4 File Offset: 0x002345D4
		public static LocalizedString ErrorSetGroupMailboxInvalidYammerEmailAddress(string parameterValue)
		{
			return new LocalizedString("ErrorSetGroupMailboxInvalidYammerEmailAddress", "", false, false, Strings.ResourceManager, new object[]
			{
				parameterValue
			});
		}

		// Token: 0x060086EF RID: 34543 RVA: 0x00236404 File Offset: 0x00234604
		public static LocalizedString ErrorTeamMailboxSharePointSiteAlreadyLinkedWithOtherTM(string site, string tm)
		{
			return new LocalizedString("ErrorTeamMailboxSharePointSiteAlreadyLinkedWithOtherTM", "", false, false, Strings.ResourceManager, new object[]
			{
				site,
				tm
			});
		}

		// Token: 0x060086F0 RID: 34544 RVA: 0x00236438 File Offset: 0x00234638
		public static LocalizedString FailToCreateOrUpdateSubscriptionPrincipalOnEdge(string message, string stack)
		{
			return new LocalizedString("FailToCreateOrUpdateSubscriptionPrincipalOnEdge", "Ex0E6F04", false, true, Strings.ResourceManager, new object[]
			{
				message,
				stack
			});
		}

		// Token: 0x060086F1 RID: 34545 RVA: 0x0023646C File Offset: 0x0023466C
		public static LocalizedString ClassificationRuleCollectionInvalidProcessorReferenceViolation(string processorIdRefs)
		{
			return new LocalizedString("ClassificationRuleCollectionInvalidProcessorReferenceViolation", "", false, false, Strings.ResourceManager, new object[]
			{
				processorIdRefs
			});
		}

		// Token: 0x170029F5 RID: 10741
		// (get) Token: 0x060086F2 RID: 34546 RVA: 0x0023649B File Offset: 0x0023469B
		public static LocalizedString JournalNdrMailboxInJournalRuleRecipient
		{
			get
			{
				return new LocalizedString("JournalNdrMailboxInJournalRuleRecipient", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170029F6 RID: 10742
		// (get) Token: 0x060086F3 RID: 34547 RVA: 0x002364B9 File Offset: 0x002346B9
		public static LocalizedString PromptToUpgradeRulesFormat
		{
			get
			{
				return new LocalizedString("PromptToUpgradeRulesFormat", "Ex8DFCD2", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060086F4 RID: 34548 RVA: 0x002364D8 File Offset: 0x002346D8
		public static LocalizedString WritableDatabaseNotFound(string WritableDatabase)
		{
			return new LocalizedString("WritableDatabaseNotFound", "ExBE628E", false, true, Strings.ResourceManager, new object[]
			{
				WritableDatabase
			});
		}

		// Token: 0x170029F7 RID: 10743
		// (get) Token: 0x060086F5 RID: 34549 RVA: 0x00236507 File Offset: 0x00234707
		public static LocalizedString ErrorAliasEmpty
		{
			get
			{
				return new LocalizedString("ErrorAliasEmpty", "Ex8B5CB4", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060086F6 RID: 34550 RVA: 0x00236528 File Offset: 0x00234728
		public static LocalizedString WritableRecipientNotFound(string WritableRecipient)
		{
			return new LocalizedString("WritableRecipientNotFound", "Ex7F559C", false, true, Strings.ResourceManager, new object[]
			{
				WritableRecipient
			});
		}

		// Token: 0x060086F7 RID: 34551 RVA: 0x00236558 File Offset: 0x00234758
		public static LocalizedString ErrorFailedToGetDatabaseLastBackupTimes(string databaseId)
		{
			return new LocalizedString("ErrorFailedToGetDatabaseLastBackupTimes", "Ex721D4B", false, true, Strings.ResourceManager, new object[]
			{
				databaseId
			});
		}

		// Token: 0x170029F8 RID: 10744
		// (get) Token: 0x060086F8 RID: 34552 RVA: 0x00236587 File Offset: 0x00234787
		public static LocalizedString SetupProgressCreatePrecannedGAL
		{
			get
			{
				return new LocalizedString("SetupProgressCreatePrecannedGAL", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060086F9 RID: 34553 RVA: 0x002365A8 File Offset: 0x002347A8
		public static LocalizedString AddAccessRuleArgument(string thumbprint)
		{
			return new LocalizedString("AddAccessRuleArgument", "Ex2211CD", false, true, Strings.ResourceManager, new object[]
			{
				thumbprint
			});
		}

		// Token: 0x060086FA RID: 34554 RVA: 0x002365D8 File Offset: 0x002347D8
		public static LocalizedString ErrorEdbFileDirectoryNotExist(string filePath, string serverName)
		{
			return new LocalizedString("ErrorEdbFileDirectoryNotExist", "Ex1C4553", false, true, Strings.ResourceManager, new object[]
			{
				filePath,
				serverName
			});
		}

		// Token: 0x170029F9 RID: 10745
		// (get) Token: 0x060086FB RID: 34555 RVA: 0x0023660B File Offset: 0x0023480B
		public static LocalizedString ConnectorValidationFailedId
		{
			get
			{
				return new LocalizedString("ConnectorValidationFailedId", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170029FA RID: 10746
		// (get) Token: 0x060086FC RID: 34556 RVA: 0x00236629 File Offset: 0x00234829
		public static LocalizedString PatternContainsProhibitedLeadingOrTrailingRegexCharacters
		{
			get
			{
				return new LocalizedString("PatternContainsProhibitedLeadingOrTrailingRegexCharacters", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170029FB RID: 10747
		// (get) Token: 0x060086FD RID: 34557 RVA: 0x00236647 File Offset: 0x00234847
		public static LocalizedString ConfirmationMessageImportJournalRuleCollection
		{
			get
			{
				return new LocalizedString("ConfirmationMessageImportJournalRuleCollection", "Ex930EDD", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060086FE RID: 34558 RVA: 0x00236668 File Offset: 0x00234868
		public static LocalizedString DeviceFilterRuleAlreadyExists(string name)
		{
			return new LocalizedString("DeviceFilterRuleAlreadyExists", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x170029FC RID: 10748
		// (get) Token: 0x060086FF RID: 34559 RVA: 0x00236697 File Offset: 0x00234897
		public static LocalizedString InfoGetLicensingUri
		{
			get
			{
				return new LocalizedString("InfoGetLicensingUri", "Ex3C641B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170029FD RID: 10749
		// (get) Token: 0x06008700 RID: 34560 RVA: 0x002366B5 File Offset: 0x002348B5
		public static LocalizedString InvalidSummmarizeBy
		{
			get
			{
				return new LocalizedString("InvalidSummmarizeBy", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008701 RID: 34561 RVA: 0x002366D4 File Offset: 0x002348D4
		public static LocalizedString ErrorConflictSaving(string identiy)
		{
			return new LocalizedString("ErrorConflictSaving", "Ex7C8F14", false, true, Strings.ResourceManager, new object[]
			{
				identiy
			});
		}

		// Token: 0x170029FE RID: 10750
		// (get) Token: 0x06008702 RID: 34562 RVA: 0x00236703 File Offset: 0x00234903
		public static LocalizedString SetAppConfigValue
		{
			get
			{
				return new LocalizedString("SetAppConfigValue", "Ex0CDBA0", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170029FF RID: 10751
		// (get) Token: 0x06008703 RID: 34563 RVA: 0x00236721 File Offset: 0x00234921
		public static LocalizedString MsiReinstallMustAll
		{
			get
			{
				return new LocalizedString("MsiReinstallMustAll", "ExAE31A6", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002A00 RID: 10752
		// (get) Token: 0x06008704 RID: 34564 RVA: 0x0023673F File Offset: 0x0023493F
		public static LocalizedString MessageTypeReadReceipt
		{
			get
			{
				return new LocalizedString("MessageTypeReadReceipt", "ExC243B2", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008705 RID: 34565 RVA: 0x00236760 File Offset: 0x00234960
		public static LocalizedString NoAuthenticationWarning(string id, string cmdletName)
		{
			return new LocalizedString("NoAuthenticationWarning", "Ex516162", false, true, Strings.ResourceManager, new object[]
			{
				id,
				cmdletName
			});
		}

		// Token: 0x17002A01 RID: 10753
		// (get) Token: 0x06008706 RID: 34566 RVA: 0x00236793 File Offset: 0x00234993
		public static LocalizedString InfoLoadIRMConfig
		{
			get
			{
				return new LocalizedString("InfoLoadIRMConfig", "ExC38360", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008707 RID: 34567 RVA: 0x002367B4 File Offset: 0x002349B4
		public static LocalizedString MapiTransactionDiagnosticTargetDatabaseNotOnTargetServer(string newMaster, string oldMaster)
		{
			return new LocalizedString("MapiTransactionDiagnosticTargetDatabaseNotOnTargetServer", "Ex7262D6", false, true, Strings.ResourceManager, new object[]
			{
				newMaster,
				oldMaster
			});
		}

		// Token: 0x17002A02 RID: 10754
		// (get) Token: 0x06008708 RID: 34568 RVA: 0x002367E7 File Offset: 0x002349E7
		public static LocalizedString ErrorEmptyProxyAddressInWLID
		{
			get
			{
				return new LocalizedString("ErrorEmptyProxyAddressInWLID", "Ex2C04E6", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002A03 RID: 10755
		// (get) Token: 0x06008709 RID: 34569 RVA: 0x00236805 File Offset: 0x00234A05
		public static LocalizedString ErrorInvalidApplicationId
		{
			get
			{
				return new LocalizedString("ErrorInvalidApplicationId", "ExFDD85A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600870A RID: 34570 RVA: 0x00236824 File Offset: 0x00234A24
		public static LocalizedString CertificateInvalidFQDNValue(string domain)
		{
			return new LocalizedString("CertificateInvalidFQDNValue", "Ex692215", false, true, Strings.ResourceManager, new object[]
			{
				domain
			});
		}

		// Token: 0x17002A04 RID: 10756
		// (get) Token: 0x0600870B RID: 34571 RVA: 0x00236853 File Offset: 0x00234A53
		public static LocalizedString ExceptionUserObjectAmbiguous
		{
			get
			{
				return new LocalizedString("ExceptionUserObjectAmbiguous", "Ex66555F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002A05 RID: 10757
		// (get) Token: 0x0600870C RID: 34572 RVA: 0x00236871 File Offset: 0x00234A71
		public static LocalizedString StartMidFileCopyDescription
		{
			get
			{
				return new LocalizedString("StartMidFileCopyDescription", "Ex6923C9", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002A06 RID: 10758
		// (get) Token: 0x0600870D RID: 34573 RVA: 0x0023688F File Offset: 0x00234A8F
		public static LocalizedString InstallFreeBusyFolderUnableToCreateFolder
		{
			get
			{
				return new LocalizedString("InstallFreeBusyFolderUnableToCreateFolder", "ExD02CE3", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002A07 RID: 10759
		// (get) Token: 0x0600870E RID: 34574 RVA: 0x002368AD File Offset: 0x00234AAD
		public static LocalizedString UceContentFilterObjectNotFound
		{
			get
			{
				return new LocalizedString("UceContentFilterObjectNotFound", "ExCB9263", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600870F RID: 34575 RVA: 0x002368CC File Offset: 0x00234ACC
		public static LocalizedString ErrorGroupNotUniqueOnDomainController(string id, string dc)
		{
			return new LocalizedString("ErrorGroupNotUniqueOnDomainController", "Ex3ADE08", false, true, Strings.ResourceManager, new object[]
			{
				id,
				dc
			});
		}

		// Token: 0x06008710 RID: 34576 RVA: 0x00236900 File Offset: 0x00234B00
		public static LocalizedString ConfirmationMessageRemoveResourcePolicy(string Name)
		{
			return new LocalizedString("ConfirmationMessageRemoveResourcePolicy", "", false, false, Strings.ResourceManager, new object[]
			{
				Name
			});
		}

		// Token: 0x06008711 RID: 34577 RVA: 0x00236930 File Offset: 0x00234B30
		public static LocalizedString WKGuidNotFoundRetrying(string guid, string gc, int sec)
		{
			return new LocalizedString("WKGuidNotFoundRetrying", "Ex6C7532", false, true, Strings.ResourceManager, new object[]
			{
				guid,
				gc,
				sec
			});
		}

		// Token: 0x17002A08 RID: 10760
		// (get) Token: 0x06008712 RID: 34578 RVA: 0x0023696C File Offset: 0x00234B6C
		public static LocalizedString AuditLogSearchNamePrefix
		{
			get
			{
				return new LocalizedString("AuditLogSearchNamePrefix", "ExD5545F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002A09 RID: 10761
		// (get) Token: 0x06008713 RID: 34579 RVA: 0x0023698A File Offset: 0x00234B8A
		public static LocalizedString SetupProgressCreatePrecannedAddressLists
		{
			get
			{
				return new LocalizedString("SetupProgressCreatePrecannedAddressLists", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008714 RID: 34580 RVA: 0x002369A8 File Offset: 0x00234BA8
		public static LocalizedString GeneratingDelegationToken(string user, string target)
		{
			return new LocalizedString("GeneratingDelegationToken", "ExC339F2", false, true, Strings.ResourceManager, new object[]
			{
				user,
				target
			});
		}

		// Token: 0x17002A0A RID: 10762
		// (get) Token: 0x06008715 RID: 34581 RVA: 0x002369DB File Offset: 0x00234BDB
		public static LocalizedString MoreThanOneRecipient
		{
			get
			{
				return new LocalizedString("MoreThanOneRecipient", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002A0B RID: 10763
		// (get) Token: 0x06008716 RID: 34582 RVA: 0x002369F9 File Offset: 0x00234BF9
		public static LocalizedString ConfirmationMessageNewEdgeSubscription
		{
			get
			{
				return new LocalizedString("ConfirmationMessageNewEdgeSubscription", "Ex1BCA2A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002A0C RID: 10764
		// (get) Token: 0x06008717 RID: 34583 RVA: 0x00236A17 File Offset: 0x00234C17
		public static LocalizedString Imap4BeServiceDescription
		{
			get
			{
				return new LocalizedString("Imap4BeServiceDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008718 RID: 34584 RVA: 0x00236A38 File Offset: 0x00234C38
		public static LocalizedString PerfCounterProcessingFile(string fileName)
		{
			return new LocalizedString("PerfCounterProcessingFile", "Ex64EE4B", false, true, Strings.ResourceManager, new object[]
			{
				fileName
			});
		}

		// Token: 0x17002A0D RID: 10765
		// (get) Token: 0x06008719 RID: 34585 RVA: 0x00236A67 File Offset: 0x00234C67
		public static LocalizedString SetupProgressUpdateDatabaseCopy
		{
			get
			{
				return new LocalizedString("SetupProgressUpdateDatabaseCopy", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600871A RID: 34586 RVA: 0x00236A88 File Offset: 0x00234C88
		public static LocalizedString OabVirtualDirectoryAdOrphanFound(string oabvdir)
		{
			return new LocalizedString("OabVirtualDirectoryAdOrphanFound", "ExF789FB", false, true, Strings.ResourceManager, new object[]
			{
				oabvdir
			});
		}

		// Token: 0x0600871B RID: 34587 RVA: 0x00236AB8 File Offset: 0x00234CB8
		public static LocalizedString FailedToCreateAdminAuditLogItem(string responseclass, string code, string error)
		{
			return new LocalizedString("FailedToCreateAdminAuditLogItem", "", false, false, Strings.ResourceManager, new object[]
			{
				responseclass,
				code,
				error
			});
		}

		// Token: 0x0600871C RID: 34588 RVA: 0x00236AF0 File Offset: 0x00234CF0
		public static LocalizedString SuspendSgcUseRpc(string serverVersion, string rpcSupportVersion)
		{
			return new LocalizedString("SuspendSgcUseRpc", "ExDCDD46", false, true, Strings.ResourceManager, new object[]
			{
				serverVersion,
				rpcSupportVersion
			});
		}

		// Token: 0x0600871D RID: 34589 RVA: 0x00236B24 File Offset: 0x00234D24
		public static LocalizedString UmLanguagePackProductCode(Guid guid)
		{
			return new LocalizedString("UmLanguagePackProductCode", "Ex0F234B", false, true, Strings.ResourceManager, new object[]
			{
				guid
			});
		}

		// Token: 0x17002A0E RID: 10766
		// (get) Token: 0x0600871E RID: 34590 RVA: 0x00236B58 File Offset: 0x00234D58
		public static LocalizedString DatabaseWideTasksExceeded
		{
			get
			{
				return new LocalizedString("DatabaseWideTasksExceeded", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002A0F RID: 10767
		// (get) Token: 0x0600871F RID: 34591 RVA: 0x00236B76 File Offset: 0x00234D76
		public static LocalizedString MatchSubDomainsIsInternalRelayOnly
		{
			get
			{
				return new LocalizedString("MatchSubDomainsIsInternalRelayOnly", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002A10 RID: 10768
		// (get) Token: 0x06008720 RID: 34592 RVA: 0x00236B94 File Offset: 0x00234D94
		public static LocalizedString InstallBridgeheadRoleDescription
		{
			get
			{
				return new LocalizedString("InstallBridgeheadRoleDescription", "ExBEB860", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002A11 RID: 10769
		// (get) Token: 0x06008721 RID: 34593 RVA: 0x00236BB2 File Offset: 0x00234DB2
		public static LocalizedString ResourceCorruptCalConfig
		{
			get
			{
				return new LocalizedString("ResourceCorruptCalConfig", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002A12 RID: 10770
		// (get) Token: 0x06008722 RID: 34594 RVA: 0x00236BD0 File Offset: 0x00234DD0
		public static LocalizedString SetupProgressSearchMessageEnabled
		{
			get
			{
				return new LocalizedString("SetupProgressSearchMessageEnabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008723 RID: 34595 RVA: 0x00236BF0 File Offset: 0x00234DF0
		public static LocalizedString messageNSPIOperationException(string operation, int returnValue, string serverId, string userName)
		{
			return new LocalizedString("messageNSPIOperationException", "", false, false, Strings.ResourceManager, new object[]
			{
				operation,
				returnValue,
				serverId,
				userName
			});
		}

		// Token: 0x06008724 RID: 34596 RVA: 0x00236C30 File Offset: 0x00234E30
		public static LocalizedString DomainNotReachableWarning(string dom)
		{
			return new LocalizedString("DomainNotReachableWarning", "Ex302EA6", false, true, Strings.ResourceManager, new object[]
			{
				dom
			});
		}

		// Token: 0x06008725 RID: 34597 RVA: 0x00236C60 File Offset: 0x00234E60
		public static LocalizedString InvalidPushNotificationSubscriptionExpirationTime(string expiration)
		{
			return new LocalizedString("InvalidPushNotificationSubscriptionExpirationTime", "", false, false, Strings.ResourceManager, new object[]
			{
				expiration
			});
		}

		// Token: 0x17002A13 RID: 10771
		// (get) Token: 0x06008726 RID: 34598 RVA: 0x00236C8F File Offset: 0x00234E8F
		public static LocalizedString IisTasksApplicationPoolValidationProperty
		{
			get
			{
				return new LocalizedString("IisTasksApplicationPoolValidationProperty", "ExABFE80", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008727 RID: 34599 RVA: 0x00236CB0 File Offset: 0x00234EB0
		public static LocalizedString ConfirmationMessageResumeMalwareFilterRecoveryItem(string item)
		{
			return new LocalizedString("ConfirmationMessageResumeMalwareFilterRecoveryItem", "", false, false, Strings.ResourceManager, new object[]
			{
				item
			});
		}

		// Token: 0x17002A14 RID: 10772
		// (get) Token: 0x06008728 RID: 34600 RVA: 0x00236CDF File Offset: 0x00234EDF
		public static LocalizedString IncompatibleVoiceMailProtectionAndAnalysisSettings
		{
			get
			{
				return new LocalizedString("IncompatibleVoiceMailProtectionAndAnalysisSettings", "Ex551E06", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008729 RID: 34601 RVA: 0x00236D00 File Offset: 0x00234F00
		public static LocalizedString SeederProgressMsgOverSpecifiedNetwork(string edbName, string serverName, string privateHostName, long bytesRead, long bytesWritten, long bytesRemaining, string databaseName)
		{
			return new LocalizedString("SeederProgressMsgOverSpecifiedNetwork", "Ex94D404", false, true, Strings.ResourceManager, new object[]
			{
				edbName,
				serverName,
				privateHostName,
				bytesRead,
				bytesWritten,
				bytesRemaining,
				databaseName
			});
		}

		// Token: 0x17002A15 RID: 10773
		// (get) Token: 0x0600872A RID: 34602 RVA: 0x00236D59 File Offset: 0x00234F59
		public static LocalizedString CasHealtRemotePowerShellCloseRunspaceSucceeded
		{
			get
			{
				return new LocalizedString("CasHealtRemotePowerShellCloseRunspaceSucceeded", "Ex639FE3", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600872B RID: 34603 RVA: 0x00236D78 File Offset: 0x00234F78
		public static LocalizedString ErrorAssigneeSecurityGroupNotUnique(string id)
		{
			return new LocalizedString("ErrorAssigneeSecurityGroupNotUnique", "Ex02814D", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x0600872C RID: 34604 RVA: 0x00236DA8 File Offset: 0x00234FA8
		public static LocalizedString SpecifiedRecipientNotDistributionGroup(string recipient)
		{
			return new LocalizedString("SpecifiedRecipientNotDistributionGroup", "ExD472A2", false, true, Strings.ResourceManager, new object[]
			{
				recipient
			});
		}

		// Token: 0x0600872D RID: 34605 RVA: 0x00236DD8 File Offset: 0x00234FD8
		public static LocalizedString DuplicateIntraOrganizationConnectorDomain(string domain)
		{
			return new LocalizedString("DuplicateIntraOrganizationConnectorDomain", "", false, false, Strings.ResourceManager, new object[]
			{
				domain
			});
		}

		// Token: 0x17002A16 RID: 10774
		// (get) Token: 0x0600872E RID: 34606 RVA: 0x00236E07 File Offset: 0x00235007
		public static LocalizedString SetupProgressInstallDefaultConnectionFilterContainer
		{
			get
			{
				return new LocalizedString("SetupProgressInstallDefaultConnectionFilterContainer", "Ex8E27C6", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600872F RID: 34607 RVA: 0x00236E28 File Offset: 0x00235028
		public static LocalizedString NoRemoteFederatedDomainInLocalOrganizationRelationship(string localName)
		{
			return new LocalizedString("NoRemoteFederatedDomainInLocalOrganizationRelationship", "", false, false, Strings.ResourceManager, new object[]
			{
				localName
			});
		}

		// Token: 0x06008730 RID: 34608 RVA: 0x00236E58 File Offset: 0x00235058
		public static LocalizedString SuspendSgcFallbackToState(string sg, string exception)
		{
			return new LocalizedString("SuspendSgcFallbackToState", "Ex854681", false, true, Strings.ResourceManager, new object[]
			{
				sg,
				exception
			});
		}

		// Token: 0x17002A17 RID: 10775
		// (get) Token: 0x06008731 RID: 34609 RVA: 0x00236E8B File Offset: 0x0023508B
		public static LocalizedString NoUserOrOrganiztionProvidedException
		{
			get
			{
				return new LocalizedString("NoUserOrOrganiztionProvidedException", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008732 RID: 34610 RVA: 0x00236EAC File Offset: 0x002350AC
		public static LocalizedString ErrorInvalidNameCharacter(string name, string character)
		{
			return new LocalizedString("ErrorInvalidNameCharacter", "ExEEC3BF", false, true, Strings.ResourceManager, new object[]
			{
				name,
				character
			});
		}

		// Token: 0x06008733 RID: 34611 RVA: 0x00236EE0 File Offset: 0x002350E0
		public static LocalizedString ImportCertificateAlreadyExists(string thumbprint)
		{
			return new LocalizedString("ImportCertificateAlreadyExists", "Ex9B1F98", false, true, Strings.ResourceManager, new object[]
			{
				thumbprint
			});
		}

		// Token: 0x06008734 RID: 34612 RVA: 0x00236F10 File Offset: 0x00235110
		public static LocalizedString FederationCertificateNotFound(string propertyName)
		{
			return new LocalizedString("FederationCertificateNotFound", "Ex8687D7", false, true, Strings.ResourceManager, new object[]
			{
				propertyName
			});
		}

		// Token: 0x06008735 RID: 34613 RVA: 0x00236F40 File Offset: 0x00235140
		public static LocalizedString WarningSearchAdminAuditLogOnPreE15(string org)
		{
			return new LocalizedString("WarningSearchAdminAuditLogOnPreE15", "", false, false, Strings.ResourceManager, new object[]
			{
				org
			});
		}

		// Token: 0x06008736 RID: 34614 RVA: 0x00236F70 File Offset: 0x00235170
		public static LocalizedString ErrorPSFanInProviderAssemblyNotFound(string file)
		{
			return new LocalizedString("ErrorPSFanInProviderAssemblyNotFound", "ExB58948", false, true, Strings.ResourceManager, new object[]
			{
				file
			});
		}

		// Token: 0x17002A18 RID: 10776
		// (get) Token: 0x06008737 RID: 34615 RVA: 0x00236F9F File Offset: 0x0023519F
		public static LocalizedString ErrorInboxRuleMustHaveActions
		{
			get
			{
				return new LocalizedString("ErrorInboxRuleMustHaveActions", "Ex1C3243", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002A19 RID: 10777
		// (get) Token: 0x06008738 RID: 34616 RVA: 0x00236FBD File Offset: 0x002351BD
		public static LocalizedString ConfirmationMessageWebServicesVirtualDirectoryContinue
		{
			get
			{
				return new LocalizedString("ConfirmationMessageWebServicesVirtualDirectoryContinue", "ExD2E33B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002A1A RID: 10778
		// (get) Token: 0x06008739 RID: 34617 RVA: 0x00236FDB File Offset: 0x002351DB
		public static LocalizedString MigrationWorkflowServiceDescription
		{
			get
			{
				return new LocalizedString("MigrationWorkflowServiceDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002A1B RID: 10779
		// (get) Token: 0x0600873A RID: 34618 RVA: 0x00236FF9 File Offset: 0x002351F9
		public static LocalizedString ErrorFolderIsMailEnabled
		{
			get
			{
				return new LocalizedString("ErrorFolderIsMailEnabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600873B RID: 34619 RVA: 0x00237018 File Offset: 0x00235218
		public static LocalizedString ServerDoesNotHaveADomain(string name)
		{
			return new LocalizedString("ServerDoesNotHaveADomain", "ExFD98ED", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x0600873C RID: 34620 RVA: 0x00237048 File Offset: 0x00235248
		public static LocalizedString ErrorMailboxDatabaseNotOnE14Server(string database)
		{
			return new LocalizedString("ErrorMailboxDatabaseNotOnE14Server", "Ex2B7225", false, true, Strings.ResourceManager, new object[]
			{
				database
			});
		}

		// Token: 0x17002A1C RID: 10780
		// (get) Token: 0x0600873D RID: 34621 RVA: 0x00237077 File Offset: 0x00235277
		public static LocalizedString CasHealthOwaAuthTypeNotCheckedForExternalUrl
		{
			get
			{
				return new LocalizedString("CasHealthOwaAuthTypeNotCheckedForExternalUrl", "ExB0D23A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002A1D RID: 10781
		// (get) Token: 0x0600873E RID: 34622 RVA: 0x00237095 File Offset: 0x00235295
		public static LocalizedString ExportCertificateAs12WithoutKey
		{
			get
			{
				return new LocalizedString("ExportCertificateAs12WithoutKey", "ExE2B6C7", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002A1E RID: 10782
		// (get) Token: 0x0600873F RID: 34623 RVA: 0x002370B3 File Offset: 0x002352B3
		public static LocalizedString ChangePasswordInvalidNewPassword
		{
			get
			{
				return new LocalizedString("ChangePasswordInvalidNewPassword", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002A1F RID: 10783
		// (get) Token: 0x06008740 RID: 34624 RVA: 0x002370D1 File Offset: 0x002352D1
		public static LocalizedString MigrationBatchIdMissing
		{
			get
			{
				return new LocalizedString("MigrationBatchIdMissing", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008741 RID: 34625 RVA: 0x002370F0 File Offset: 0x002352F0
		public static LocalizedString ConfirmationMessageUpdateStoreMailboxStateMailboxIdentity(string Database, string StoreMailboxIdentity)
		{
			return new LocalizedString("ConfirmationMessageUpdateStoreMailboxStateMailboxIdentity", "", false, false, Strings.ResourceManager, new object[]
			{
				Database,
				StoreMailboxIdentity
			});
		}

		// Token: 0x17002A20 RID: 10784
		// (get) Token: 0x06008742 RID: 34626 RVA: 0x00237123 File Offset: 0x00235323
		public static LocalizedString CasHealthAdditionalInformation
		{
			get
			{
				return new LocalizedString("CasHealthAdditionalInformation", "Ex564652", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002A21 RID: 10785
		// (get) Token: 0x06008743 RID: 34627 RVA: 0x00237141 File Offset: 0x00235341
		public static LocalizedString TestMigrationServerAvailabilityProtocolArgument
		{
			get
			{
				return new LocalizedString("TestMigrationServerAvailabilityProtocolArgument", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002A22 RID: 10786
		// (get) Token: 0x06008744 RID: 34628 RVA: 0x0023715F File Offset: 0x0023535F
		public static LocalizedString OrganizationNotFederatedException
		{
			get
			{
				return new LocalizedString("OrganizationNotFederatedException", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002A23 RID: 10787
		// (get) Token: 0x06008745 RID: 34629 RVA: 0x0023717D File Offset: 0x0023537D
		public static LocalizedString ReplayLagStatusLabelPlayDownReason
		{
			get
			{
				return new LocalizedString("ReplayLagStatusLabelPlayDownReason", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008746 RID: 34630 RVA: 0x0023719C File Offset: 0x0023539C
		public static LocalizedString ErrorFederationTrustNotUnique(string trust)
		{
			return new LocalizedString("ErrorFederationTrustNotUnique", "ExB9E47E", false, true, Strings.ResourceManager, new object[]
			{
				trust
			});
		}

		// Token: 0x06008747 RID: 34631 RVA: 0x002371CC File Offset: 0x002353CC
		public static LocalizedString ErrorMailboxPlanNotUnique(string idStringValue)
		{
			return new LocalizedString("ErrorMailboxPlanNotUnique", "Ex417CB5", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		// Token: 0x17002A24 RID: 10788
		// (get) Token: 0x06008748 RID: 34632 RVA: 0x002371FB File Offset: 0x002353FB
		public static LocalizedString ErrorDialPlanNotMatch
		{
			get
			{
				return new LocalizedString("ErrorDialPlanNotMatch", "Ex039CCB", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002A25 RID: 10789
		// (get) Token: 0x06008749 RID: 34633 RVA: 0x00237219 File Offset: 0x00235419
		public static LocalizedString SetupComponentAllADRolesCommon
		{
			get
			{
				return new LocalizedString("SetupComponentAllADRolesCommon", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600874A RID: 34634 RVA: 0x00237238 File Offset: 0x00235438
		public static LocalizedString ErrorTenantAdminsCanOnlyAddSubdomains(string domain)
		{
			return new LocalizedString("ErrorTenantAdminsCanOnlyAddSubdomains", "Ex8EAC35", false, true, Strings.ResourceManager, new object[]
			{
				domain
			});
		}

		// Token: 0x0600874B RID: 34635 RVA: 0x00237268 File Offset: 0x00235468
		public static LocalizedString DagTaskServerIsNotInDagException(string mailboxServer, string dagName)
		{
			return new LocalizedString("DagTaskServerIsNotInDagException", "", false, false, Strings.ResourceManager, new object[]
			{
				mailboxServer,
				dagName
			});
		}

		// Token: 0x0600874C RID: 34636 RVA: 0x0023729C File Offset: 0x0023549C
		public static LocalizedString ErrorOfflineAddressBookNotUnique(string idStringValue)
		{
			return new LocalizedString("ErrorOfflineAddressBookNotUnique", "Ex5941C7", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		// Token: 0x0600874D RID: 34637 RVA: 0x002372CC File Offset: 0x002354CC
		public static LocalizedString ConfirmationMessageNewMailboxRepairRequestDatabase(string database)
		{
			return new LocalizedString("ConfirmationMessageNewMailboxRepairRequestDatabase", "Ex1FB5F6", false, true, Strings.ResourceManager, new object[]
			{
				database
			});
		}

		// Token: 0x17002A26 RID: 10790
		// (get) Token: 0x0600874E RID: 34638 RVA: 0x002372FB File Offset: 0x002354FB
		public static LocalizedString QuorumGroupCheckDesc
		{
			get
			{
				return new LocalizedString("QuorumGroupCheckDesc", "Ex95D98B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002A27 RID: 10791
		// (get) Token: 0x0600874F RID: 34639 RVA: 0x00237319 File Offset: 0x00235519
		public static LocalizedString CasHealthSiteName
		{
			get
			{
				return new LocalizedString("CasHealthSiteName", "ExBFBF6E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002A28 RID: 10792
		// (get) Token: 0x06008750 RID: 34640 RVA: 0x00237337 File Offset: 0x00235537
		public static LocalizedString WarningAuthenticationTypeIsNotChanged
		{
			get
			{
				return new LocalizedString("WarningAuthenticationTypeIsNotChanged", "ExB1EE82", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002A29 RID: 10793
		// (get) Token: 0x06008751 RID: 34641 RVA: 0x00237355 File Offset: 0x00235555
		public static LocalizedString ArbitrationMailboxDefaultDisplayName
		{
			get
			{
				return new LocalizedString("ArbitrationMailboxDefaultDisplayName", "Ex842958", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002A2A RID: 10794
		// (get) Token: 0x06008752 RID: 34642 RVA: 0x00237373 File Offset: 0x00235573
		public static LocalizedString ErrorMoreThanOneAggregatedAccountOperationSpecified
		{
			get
			{
				return new LocalizedString("ErrorMoreThanOneAggregatedAccountOperationSpecified", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002A2B RID: 10795
		// (get) Token: 0x06008753 RID: 34643 RVA: 0x00237391 File Offset: 0x00235591
		public static LocalizedString SetupProgressSchemaFile
		{
			get
			{
				return new LocalizedString("SetupProgressSchemaFile", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002A2C RID: 10796
		// (get) Token: 0x06008754 RID: 34644 RVA: 0x002373AF File Offset: 0x002355AF
		public static LocalizedString ConfirmationMessageImportDlpPolicy
		{
			get
			{
				return new LocalizedString("ConfirmationMessageImportDlpPolicy", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008755 RID: 34645 RVA: 0x002373D0 File Offset: 0x002355D0
		public static LocalizedString VerboseVerifyingServer(string server)
		{
			return new LocalizedString("VerboseVerifyingServer", "ExEB80C5", false, true, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		// Token: 0x17002A2D RID: 10797
		// (get) Token: 0x06008756 RID: 34646 RVA: 0x002373FF File Offset: 0x002355FF
		public static LocalizedString CasTransactionResultUndefined
		{
			get
			{
				return new LocalizedString("CasTransactionResultUndefined", "ExCB028F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002A2E RID: 10798
		// (get) Token: 0x06008757 RID: 34647 RVA: 0x0023741D File Offset: 0x0023561D
		public static LocalizedString InfoNoTiFound
		{
			get
			{
				return new LocalizedString("InfoNoTiFound", "ExFE6392", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002A2F RID: 10799
		// (get) Token: 0x06008758 RID: 34648 RVA: 0x0023743B File Offset: 0x0023563B
		public static LocalizedString TransitionStateInactive
		{
			get
			{
				return new LocalizedString("TransitionStateInactive", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008759 RID: 34649 RVA: 0x0023745C File Offset: 0x0023565C
		public static LocalizedString CasHealthStorageError(string serverName, string domain, string user, string errorStr)
		{
			return new LocalizedString("CasHealthStorageError", "Ex4C18BB", false, true, Strings.ResourceManager, new object[]
			{
				serverName,
				domain,
				user,
				errorStr
			});
		}

		// Token: 0x0600875A RID: 34650 RVA: 0x00237498 File Offset: 0x00235698
		public static LocalizedString InvalidWKObjectException(string wkentry, string container)
		{
			return new LocalizedString("InvalidWKObjectException", "Ex07B3CA", false, true, Strings.ResourceManager, new object[]
			{
				wkentry,
				container
			});
		}

		// Token: 0x0600875B RID: 34651 RVA: 0x002374CC File Offset: 0x002356CC
		public static LocalizedString ErrorArchiveAlreadyPresent(string recipientName)
		{
			return new LocalizedString("ErrorArchiveAlreadyPresent", "Ex735436", false, true, Strings.ResourceManager, new object[]
			{
				recipientName
			});
		}

		// Token: 0x17002A30 RID: 10800
		// (get) Token: 0x0600875C RID: 34652 RVA: 0x002374FB File Offset: 0x002356FB
		public static LocalizedString RpcProxyScenario
		{
			get
			{
				return new LocalizedString("RpcProxyScenario", "Ex0E5535", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002A31 RID: 10801
		// (get) Token: 0x0600875D RID: 34653 RVA: 0x00237519 File Offset: 0x00235719
		public static LocalizedString ClearingCache
		{
			get
			{
				return new LocalizedString("ClearingCache", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002A32 RID: 10802
		// (get) Token: 0x0600875E RID: 34654 RVA: 0x00237537 File Offset: 0x00235737
		public static LocalizedString CasHealthEasScenarioSyncOne
		{
			get
			{
				return new LocalizedString("CasHealthEasScenarioSyncOne", "ExD5CCBF", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002A33 RID: 10803
		// (get) Token: 0x0600875F RID: 34655 RVA: 0x00237555 File Offset: 0x00235755
		public static LocalizedString ErrorNotSupportedWritableRecipient
		{
			get
			{
				return new LocalizedString("ErrorNotSupportedWritableRecipient", "ExC144EB", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008760 RID: 34656 RVA: 0x00237574 File Offset: 0x00235774
		public static LocalizedString SendConnectorComputerNotFound(string serverName)
		{
			return new LocalizedString("SendConnectorComputerNotFound", "Ex76894A", false, true, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		// Token: 0x17002A34 RID: 10804
		// (get) Token: 0x06008761 RID: 34657 RVA: 0x002375A3 File Offset: 0x002357A3
		public static LocalizedString PromptToOverwriteRulesOnImport
		{
			get
			{
				return new LocalizedString("PromptToOverwriteRulesOnImport", "Ex6A8C5B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002A35 RID: 10805
		// (get) Token: 0x06008762 RID: 34658 RVA: 0x002375C1 File Offset: 0x002357C1
		public static LocalizedString ErrorPrimarySmtpAndEmailAddressesSpecified
		{
			get
			{
				return new LocalizedString("ErrorPrimarySmtpAndEmailAddressesSpecified", "Ex4DE4FB", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008763 RID: 34659 RVA: 0x002375E0 File Offset: 0x002357E0
		public static LocalizedString FormsAuthenticationMarkPathCloseError(string metabasePath, int propertyID)
		{
			return new LocalizedString("FormsAuthenticationMarkPathCloseError", "ExB3BE58", false, true, Strings.ResourceManager, new object[]
			{
				metabasePath,
				propertyID
			});
		}

		// Token: 0x06008764 RID: 34660 RVA: 0x00237618 File Offset: 0x00235818
		public static LocalizedString WarningCouldNotCreateRoleAssignment(string id, string roleGroupId)
		{
			return new LocalizedString("WarningCouldNotCreateRoleAssignment", "ExFA8E90", false, true, Strings.ResourceManager, new object[]
			{
				id,
				roleGroupId
			});
		}

		// Token: 0x06008765 RID: 34661 RVA: 0x0023764C File Offset: 0x0023584C
		public static LocalizedString ErrorAddressListNotUnique(string idStringValue)
		{
			return new LocalizedString("ErrorAddressListNotUnique", "Ex15A653", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		// Token: 0x06008766 RID: 34662 RVA: 0x0023767C File Offset: 0x0023587C
		public static LocalizedString WarningInvalidRoleAfterUpgrade(string roleId, string error)
		{
			return new LocalizedString("WarningInvalidRoleAfterUpgrade", "Ex3BE227", false, true, Strings.ResourceManager, new object[]
			{
				roleId,
				error
			});
		}

		// Token: 0x06008767 RID: 34663 RVA: 0x002376B0 File Offset: 0x002358B0
		public static LocalizedString IPListEntryExists(string IPRange)
		{
			return new LocalizedString("IPListEntryExists", "Ex3C5E8D", false, true, Strings.ResourceManager, new object[]
			{
				IPRange
			});
		}

		// Token: 0x17002A36 RID: 10806
		// (get) Token: 0x06008768 RID: 34664 RVA: 0x002376DF File Offset: 0x002358DF
		public static LocalizedString ErrorRemoveMailboxWithJournalArchiveWithDirSync
		{
			get
			{
				return new LocalizedString("ErrorRemoveMailboxWithJournalArchiveWithDirSync", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002A37 RID: 10807
		// (get) Token: 0x06008769 RID: 34665 RVA: 0x002376FD File Offset: 0x002358FD
		public static LocalizedString ModerateActionMustBeTheOnlyAction
		{
			get
			{
				return new LocalizedString("ModerateActionMustBeTheOnlyAction", "ExAD67EA", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600876A RID: 34666 RVA: 0x0023771C File Offset: 0x0023591C
		public static LocalizedString WarningSiteFolderCheckTaskNotAvailableOnTiServer(string server)
		{
			return new LocalizedString("WarningSiteFolderCheckTaskNotAvailableOnTiServer", "ExF26642", false, true, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		// Token: 0x0600876B RID: 34667 RVA: 0x0023774C File Offset: 0x0023594C
		public static LocalizedString ConfirmationMessageNewMailboxArbitration(string Name, string Database, string Arbitration, string UserPrincipalName, string OrganizationalUnit)
		{
			return new LocalizedString("ConfirmationMessageNewMailboxArbitration", "Ex2EC39E", false, true, Strings.ResourceManager, new object[]
			{
				Name,
				Database,
				Arbitration,
				UserPrincipalName,
				OrganizationalUnit
			});
		}

		// Token: 0x17002A38 RID: 10808
		// (get) Token: 0x0600876C RID: 34668 RVA: 0x0023778C File Offset: 0x0023598C
		public static LocalizedString TransitionInfoLabelCurrentState
		{
			get
			{
				return new LocalizedString("TransitionInfoLabelCurrentState", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600876D RID: 34669 RVA: 0x002377AC File Offset: 0x002359AC
		public static LocalizedString MultipleDefaultFoldersInPolicyException(string policyName, string userName)
		{
			return new LocalizedString("MultipleDefaultFoldersInPolicyException", "ExECABBA", false, true, Strings.ResourceManager, new object[]
			{
				policyName,
				userName
			});
		}

		// Token: 0x0600876E RID: 34670 RVA: 0x002377E0 File Offset: 0x002359E0
		public static LocalizedString ValidationDivergenceMustBeNonHalting(string objectId)
		{
			return new LocalizedString("ValidationDivergenceMustBeNonHalting", "", false, false, Strings.ResourceManager, new object[]
			{
				objectId
			});
		}

		// Token: 0x17002A39 RID: 10809
		// (get) Token: 0x0600876F RID: 34671 RVA: 0x0023780F File Offset: 0x00235A0F
		public static LocalizedString ComAdminUninstallOleConverter
		{
			get
			{
				return new LocalizedString("ComAdminUninstallOleConverter", "Ex7B15C0", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002A3A RID: 10810
		// (get) Token: 0x06008770 RID: 34672 RVA: 0x0023782D File Offset: 0x00235A2D
		public static LocalizedString SetRuleSyncAcrossDifferentVersionsNeeded
		{
			get
			{
				return new LocalizedString("SetRuleSyncAcrossDifferentVersionsNeeded", "ExB7D4E9", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008771 RID: 34673 RVA: 0x0023784C File Offset: 0x00235A4C
		public static LocalizedString FailureToGetDelegationToken(string exceptionMessage)
		{
			return new LocalizedString("FailureToGetDelegationToken", "Ex146D21", false, true, Strings.ResourceManager, new object[]
			{
				exceptionMessage
			});
		}

		// Token: 0x06008772 RID: 34674 RVA: 0x0023787C File Offset: 0x00235A7C
		public static LocalizedString ErrorDlpTemplateDuplicateParameter(string parameterName)
		{
			return new LocalizedString("ErrorDlpTemplateDuplicateParameter", "", false, false, Strings.ResourceManager, new object[]
			{
				parameterName
			});
		}

		// Token: 0x17002A3B RID: 10811
		// (get) Token: 0x06008773 RID: 34675 RVA: 0x002378AB File Offset: 0x00235AAB
		public static LocalizedString DatabasesCopyKeepingUpCheckDesc
		{
			get
			{
				return new LocalizedString("DatabasesCopyKeepingUpCheckDesc", "Ex656458", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002A3C RID: 10812
		// (get) Token: 0x06008774 RID: 34676 RVA: 0x002378C9 File Offset: 0x00235AC9
		public static LocalizedString InvalidStartDateOffset
		{
			get
			{
				return new LocalizedString("InvalidStartDateOffset", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008775 RID: 34677 RVA: 0x002378E8 File Offset: 0x00235AE8
		public static LocalizedString NoDeviceFilterByName(string name)
		{
			return new LocalizedString("NoDeviceFilterByName", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x06008776 RID: 34678 RVA: 0x00237918 File Offset: 0x00235B18
		public static LocalizedString ToomanyDatabasesForServer(string serverName, string number)
		{
			return new LocalizedString("ToomanyDatabasesForServer", "Ex820C4D", false, true, Strings.ResourceManager, new object[]
			{
				serverName,
				number
			});
		}

		// Token: 0x06008777 RID: 34679 RVA: 0x0023794C File Offset: 0x00235B4C
		public static LocalizedString MigrationJobNotFound(string jobName)
		{
			return new LocalizedString("MigrationJobNotFound", "ExFABDDC", false, true, Strings.ResourceManager, new object[]
			{
				jobName
			});
		}

		// Token: 0x17002A3D RID: 10813
		// (get) Token: 0x06008778 RID: 34680 RVA: 0x0023797B File Offset: 0x00235B7B
		public static LocalizedString WarningSupervisionTagsRemoved
		{
			get
			{
				return new LocalizedString("WarningSupervisionTagsRemoved", "Ex3057C0", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008779 RID: 34681 RVA: 0x0023799C File Offset: 0x00235B9C
		public static LocalizedString AdTopologyServiceWithOldNameInstalled(string name)
		{
			return new LocalizedString("AdTopologyServiceWithOldNameInstalled", "ExF11988", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x0600877A RID: 34682 RVA: 0x002379CC File Offset: 0x00235BCC
		public static LocalizedString ErrorExceededMaxClassificationsLimit(int limit)
		{
			return new LocalizedString("ErrorExceededMaxClassificationsLimit", "ExF64F4E", false, true, Strings.ResourceManager, new object[]
			{
				limit
			});
		}

		// Token: 0x0600877B RID: 34683 RVA: 0x00237A00 File Offset: 0x00235C00
		public static LocalizedString LogSourceServerRusReferral(string sourceDC, string details)
		{
			return new LocalizedString("LogSourceServerRusReferral", "ExF145A7", false, true, Strings.ResourceManager, new object[]
			{
				sourceDC,
				details
			});
		}

		// Token: 0x0600877C RID: 34684 RVA: 0x00237A34 File Offset: 0x00235C34
		public static LocalizedString NoDCsAvailableException(string dom, string site)
		{
			return new LocalizedString("NoDCsAvailableException", "Ex547B6C", false, true, Strings.ResourceManager, new object[]
			{
				dom,
				site
			});
		}

		// Token: 0x17002A3E RID: 10814
		// (get) Token: 0x0600877D RID: 34685 RVA: 0x00237A67 File Offset: 0x00235C67
		public static LocalizedString SetupProgressEnableWMIInbound
		{
			get
			{
				return new LocalizedString("SetupProgressEnableWMIInbound", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002A3F RID: 10815
		// (get) Token: 0x0600877E RID: 34686 RVA: 0x00237A85 File Offset: 0x00235C85
		public static LocalizedString DefaultAllRooms
		{
			get
			{
				return new LocalizedString("DefaultAllRooms", "Ex323250", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002A40 RID: 10816
		// (get) Token: 0x0600877F RID: 34687 RVA: 0x00237AA3 File Offset: 0x00235CA3
		public static LocalizedString JournalingParameterErrorGccWithoutRecipient
		{
			get
			{
				return new LocalizedString("JournalingParameterErrorGccWithoutRecipient", "Ex3CC8B2", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008780 RID: 34688 RVA: 0x00237AC4 File Offset: 0x00235CC4
		public static LocalizedString ErrorMailboxCalendarConfigurationNotAllowedParameterValue(string param, string value, string allowedStrs)
		{
			return new LocalizedString("ErrorMailboxCalendarConfigurationNotAllowedParameterValue", "", false, false, Strings.ResourceManager, new object[]
			{
				param,
				value,
				allowedStrs
			});
		}

		// Token: 0x06008781 RID: 34689 RVA: 0x00237AFC File Offset: 0x00235CFC
		public static LocalizedString DagTaskProblemChangingQuorumException(string clusterName, Exception ex)
		{
			return new LocalizedString("DagTaskProblemChangingQuorumException", "", false, false, Strings.ResourceManager, new object[]
			{
				clusterName,
				ex
			});
		}

		// Token: 0x06008782 RID: 34690 RVA: 0x00237B30 File Offset: 0x00235D30
		public static LocalizedString WarningSetMailboxLitigationHoldDelay(double minutes)
		{
			return new LocalizedString("WarningSetMailboxLitigationHoldDelay", "Ex25E7AA", false, true, Strings.ResourceManager, new object[]
			{
				minutes
			});
		}

		// Token: 0x06008783 RID: 34691 RVA: 0x00237B64 File Offset: 0x00235D64
		public static LocalizedString ConfirmationMessageSetInboxRule(string Identity, string mailbox)
		{
			return new LocalizedString("ConfirmationMessageSetInboxRule", "ExD979D6", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				mailbox
			});
		}

		// Token: 0x17002A41 RID: 10817
		// (get) Token: 0x06008784 RID: 34692 RVA: 0x00237B97 File Offset: 0x00235D97
		public static LocalizedString TenantAdminCannotInvokeHotmailOperation
		{
			get
			{
				return new LocalizedString("TenantAdminCannotInvokeHotmailOperation", "ExCDCEA5", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008785 RID: 34693 RVA: 0x00237BB8 File Offset: 0x00235DB8
		public static LocalizedString ErrorTeamMailboxContactSharePointSiteWithCorrelationId(string siteUrl, string error, string correlationId)
		{
			return new LocalizedString("ErrorTeamMailboxContactSharePointSiteWithCorrelationId", "", false, false, Strings.ResourceManager, new object[]
			{
				siteUrl,
				error,
				correlationId
			});
		}

		// Token: 0x06008786 RID: 34694 RVA: 0x00237BF0 File Offset: 0x00235DF0
		public static LocalizedString ErrorRoleAssignmentConstraintViolationOnScopes(string assignmentName, string roleName)
		{
			return new LocalizedString("ErrorRoleAssignmentConstraintViolationOnScopes", "ExE0C5D0", false, true, Strings.ResourceManager, new object[]
			{
				assignmentName,
				roleName
			});
		}

		// Token: 0x17002A42 RID: 10818
		// (get) Token: 0x06008787 RID: 34695 RVA: 0x00237C23 File Offset: 0x00235E23
		public static LocalizedString DlpPolicyInvalidCollectionError
		{
			get
			{
				return new LocalizedString("DlpPolicyInvalidCollectionError", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008788 RID: 34696 RVA: 0x00237C44 File Offset: 0x00235E44
		public static LocalizedString MigrationMissingParameterException(string parameter)
		{
			return new LocalizedString("MigrationMissingParameterException", "", false, false, Strings.ResourceManager, new object[]
			{
				parameter
			});
		}

		// Token: 0x17002A43 RID: 10819
		// (get) Token: 0x06008789 RID: 34697 RVA: 0x00237C73 File Offset: 0x00235E73
		public static LocalizedString UCWADiscoveryUrlEmpty
		{
			get
			{
				return new LocalizedString("UCWADiscoveryUrlEmpty", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600878A RID: 34698 RVA: 0x00237C94 File Offset: 0x00235E94
		public static LocalizedString ErrorFailedToFindFolderInMailbox(string folder)
		{
			return new LocalizedString("ErrorFailedToFindFolderInMailbox", "", false, false, Strings.ResourceManager, new object[]
			{
				folder
			});
		}

		// Token: 0x0600878B RID: 34699 RVA: 0x00237CC4 File Offset: 0x00235EC4
		public static LocalizedString ErrorOpeningCertificateStore(string store)
		{
			return new LocalizedString("ErrorOpeningCertificateStore", "Ex19907F", false, true, Strings.ResourceManager, new object[]
			{
				store
			});
		}

		// Token: 0x0600878C RID: 34700 RVA: 0x00237CF4 File Offset: 0x00235EF4
		public static LocalizedString ConfirmationRemoveSupervisionListEntry(string entry, string tag)
		{
			return new LocalizedString("ConfirmationRemoveSupervisionListEntry", "Ex073E9E", false, true, Strings.ResourceManager, new object[]
			{
				entry,
				tag
			});
		}

		// Token: 0x17002A44 RID: 10820
		// (get) Token: 0x0600878D RID: 34701 RVA: 0x00237D27 File Offset: 0x00235F27
		public static LocalizedString ActiveDirectorySearchScenario
		{
			get
			{
				return new LocalizedString("ActiveDirectorySearchScenario", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600878E RID: 34702 RVA: 0x00237D48 File Offset: 0x00235F48
		public static LocalizedString ErrorDeprovisionedTargetPassedWithoutComplete(string identity)
		{
			return new LocalizedString("ErrorDeprovisionedTargetPassedWithoutComplete", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x0600878F RID: 34703 RVA: 0x00237D78 File Offset: 0x00235F78
		public static LocalizedString PropertiesDiffer(string propertyName, string localName, string localUri, string remoteName, string remoteUri)
		{
			return new LocalizedString("PropertiesDiffer", "Ex4AC53E", false, true, Strings.ResourceManager, new object[]
			{
				propertyName,
				localName,
				localUri,
				remoteName,
				remoteUri
			});
		}

		// Token: 0x06008790 RID: 34704 RVA: 0x00237DB8 File Offset: 0x00235FB8
		public static LocalizedString ConfirmationMessageStartOrganizationPilot(string OrganizationalPath)
		{
			return new LocalizedString("ConfirmationMessageStartOrganizationPilot", "", false, false, Strings.ResourceManager, new object[]
			{
				OrganizationalPath
			});
		}

		// Token: 0x06008791 RID: 34705 RVA: 0x00237DE8 File Offset: 0x00235FE8
		public static LocalizedString CertificateValid(string propertyName)
		{
			return new LocalizedString("CertificateValid", "Ex408A51", false, true, Strings.ResourceManager, new object[]
			{
				propertyName
			});
		}

		// Token: 0x06008792 RID: 34706 RVA: 0x00237E18 File Offset: 0x00236018
		public static LocalizedString DagFswUnableToRemoveWitnessDirectoryException(string fswMachine, string directory, Exception ex)
		{
			return new LocalizedString("DagFswUnableToRemoveWitnessDirectoryException", "", false, false, Strings.ResourceManager, new object[]
			{
				fswMachine,
				directory,
				ex
			});
		}

		// Token: 0x17002A45 RID: 10821
		// (get) Token: 0x06008793 RID: 34707 RVA: 0x00237E4F File Offset: 0x0023604F
		public static LocalizedString InfoGetCertificationUri
		{
			get
			{
				return new LocalizedString("InfoGetCertificationUri", "Ex42274B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008794 RID: 34708 RVA: 0x00237E70 File Offset: 0x00236070
		public static LocalizedString ErrorSCTsCannotBeMigrated(string identity)
		{
			return new LocalizedString("ErrorSCTsCannotBeMigrated", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x06008795 RID: 34709 RVA: 0x00237EA0 File Offset: 0x002360A0
		public static LocalizedString VerboseCheckingScopeFailed(string details)
		{
			return new LocalizedString("VerboseCheckingScopeFailed", "Ex8E8ADF", false, true, Strings.ResourceManager, new object[]
			{
				details
			});
		}

		// Token: 0x17002A46 RID: 10822
		// (get) Token: 0x06008796 RID: 34710 RVA: 0x00237ECF File Offset: 0x002360CF
		public static LocalizedString UCWADiscoveryUrlException
		{
			get
			{
				return new LocalizedString("UCWADiscoveryUrlException", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008797 RID: 34711 RVA: 0x00237EF0 File Offset: 0x002360F0
		public static LocalizedString ConfirmationMessageSetServiceInstanceInfo(string name)
		{
			return new LocalizedString("ConfirmationMessageSetServiceInstanceInfo", "Ex9D824A", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x17002A47 RID: 10823
		// (get) Token: 0x06008798 RID: 34712 RVA: 0x00237F1F File Offset: 0x0023611F
		public static LocalizedString ErrorNoAggregatedAccountOperationSpecified
		{
			get
			{
				return new LocalizedString("ErrorNoAggregatedAccountOperationSpecified", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002A48 RID: 10824
		// (get) Token: 0x06008799 RID: 34713 RVA: 0x00237F3D File Offset: 0x0023613D
		public static LocalizedString CertificateWasNotFound
		{
			get
			{
				return new LocalizedString("CertificateWasNotFound", "ExCAB249", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002A49 RID: 10825
		// (get) Token: 0x0600879A RID: 34714 RVA: 0x00237F5B File Offset: 0x0023615B
		public static LocalizedString ErrorSystemFolderPathNotAvailable
		{
			get
			{
				return new LocalizedString("ErrorSystemFolderPathNotAvailable", "ExDB67B1", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600879B RID: 34715 RVA: 0x00237F7C File Offset: 0x0023617C
		public static LocalizedString ConfirmationMessageRemoveAddressList(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveAddressList", "Ex052798", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x0600879C RID: 34716 RVA: 0x00237FAC File Offset: 0x002361AC
		public static LocalizedString ConfirmationMessageSetTextMessagingAccount(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetTextMessagingAccount", "Ex3A0D8C", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x0600879D RID: 34717 RVA: 0x00237FDC File Offset: 0x002361DC
		public static LocalizedString ErrorTeamMailboxSetShowInMyClient(string tm, string error)
		{
			return new LocalizedString("ErrorTeamMailboxSetShowInMyClient", "", false, false, Strings.ResourceManager, new object[]
			{
				tm,
				error
			});
		}

		// Token: 0x0600879E RID: 34718 RVA: 0x00238010 File Offset: 0x00236210
		public static LocalizedString UmLanguagePackDescription(string lang)
		{
			return new LocalizedString("UmLanguagePackDescription", "ExA2D1B4", false, true, Strings.ResourceManager, new object[]
			{
				lang
			});
		}

		// Token: 0x17002A4A RID: 10826
		// (get) Token: 0x0600879F RID: 34719 RVA: 0x0023803F File Offset: 0x0023623F
		public static LocalizedString CasHealthOwaAuthTypeCheckedForInternalUrl
		{
			get
			{
				return new LocalizedString("CasHealthOwaAuthTypeCheckedForInternalUrl", "ExF4771B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060087A0 RID: 34720 RVA: 0x00238060 File Offset: 0x00236260
		public static LocalizedString VerboseServiceValidatorUrl(string name, string url)
		{
			return new LocalizedString("VerboseServiceValidatorUrl", "", false, false, Strings.ResourceManager, new object[]
			{
				name,
				url
			});
		}

		// Token: 0x060087A1 RID: 34721 RVA: 0x00238094 File Offset: 0x00236294
		public static LocalizedString NoDeviceFilterRuleByNameAndCharacteristic(string filterName, string ruleName, string characteristic)
		{
			return new LocalizedString("NoDeviceFilterRuleByNameAndCharacteristic", "", false, false, Strings.ResourceManager, new object[]
			{
				filterName,
				ruleName,
				characteristic
			});
		}

		// Token: 0x060087A2 RID: 34722 RVA: 0x002380CC File Offset: 0x002362CC
		public static LocalizedString ErrorCannotFindDomainController(string fqdn)
		{
			return new LocalizedString("ErrorCannotFindDomainController", "ExDBF5CF", false, true, Strings.ResourceManager, new object[]
			{
				fqdn
			});
		}

		// Token: 0x17002A4B RID: 10827
		// (get) Token: 0x060087A3 RID: 34723 RVA: 0x002380FB File Offset: 0x002362FB
		public static LocalizedString GetQueueDigestForestParameterCannotBeFalse
		{
			get
			{
				return new LocalizedString("GetQueueDigestForestParameterCannotBeFalse", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060087A4 RID: 34724 RVA: 0x0023811C File Offset: 0x0023631C
		public static LocalizedString WarningUnableToResolveUser(string userName, string exception)
		{
			return new LocalizedString("WarningUnableToResolveUser", "", false, false, Strings.ResourceManager, new object[]
			{
				userName,
				exception
			});
		}

		// Token: 0x060087A5 RID: 34725 RVA: 0x00238150 File Offset: 0x00236350
		public static LocalizedString WaitingForClusterServiceToStop(string serverName)
		{
			return new LocalizedString("WaitingForClusterServiceToStop", "ExF4359C", false, true, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		// Token: 0x17002A4C RID: 10828
		// (get) Token: 0x060087A6 RID: 34726 RVA: 0x0023817F File Offset: 0x0023637F
		public static LocalizedString ExceptionEmptyStringNotAllowed
		{
			get
			{
				return new LocalizedString("ExceptionEmptyStringNotAllowed", "ExEEE2D6", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060087A7 RID: 34727 RVA: 0x002381A0 File Offset: 0x002363A0
		public static LocalizedString ConfirmationMessageNewActiveSyncDeviceAccessRule(string name)
		{
			return new LocalizedString("ConfirmationMessageNewActiveSyncDeviceAccessRule", "ExDD300D", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x17002A4D RID: 10829
		// (get) Token: 0x060087A8 RID: 34728 RVA: 0x002381CF File Offset: 0x002363CF
		public static LocalizedString MtrtAddHeader
		{
			get
			{
				return new LocalizedString("MtrtAddHeader", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060087A9 RID: 34729 RVA: 0x002381F0 File Offset: 0x002363F0
		public static LocalizedString CouldNotUpdateServiceInstanceMap(string reason)
		{
			return new LocalizedString("CouldNotUpdateServiceInstanceMap", "Ex9239C2", false, true, Strings.ResourceManager, new object[]
			{
				reason
			});
		}

		// Token: 0x17002A4E RID: 10830
		// (get) Token: 0x060087AA RID: 34730 RVA: 0x0023821F File Offset: 0x0023641F
		public static LocalizedString AnonymousUser
		{
			get
			{
				return new LocalizedString("AnonymousUser", "ExBAC5E3", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002A4F RID: 10831
		// (get) Token: 0x060087AB RID: 34731 RVA: 0x0023823D File Offset: 0x0023643D
		public static LocalizedString CannotSetPerimeterOrgIdIfEhfConfigSyncIsDisabledId
		{
			get
			{
				return new LocalizedString("CannotSetPerimeterOrgIdIfEhfConfigSyncIsDisabledId", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002A50 RID: 10832
		// (get) Token: 0x060087AC RID: 34732 RVA: 0x0023825B File Offset: 0x0023645B
		public static LocalizedString CasHealthOwaAuthenticationVerificationError
		{
			get
			{
				return new LocalizedString("CasHealthOwaAuthenticationVerificationError", "Ex7F6B92", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002A51 RID: 10833
		// (get) Token: 0x060087AD RID: 34733 RVA: 0x00238279 File Offset: 0x00236479
		public static LocalizedString WarningSettingsNotModifiable
		{
			get
			{
				return new LocalizedString("WarningSettingsNotModifiable", "Ex3A2B83", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002A52 RID: 10834
		// (get) Token: 0x060087AE RID: 34734 RVA: 0x00238297 File Offset: 0x00236497
		public static LocalizedString InstallDagMgmtServiceTask
		{
			get
			{
				return new LocalizedString("InstallDagMgmtServiceTask", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002A53 RID: 10835
		// (get) Token: 0x060087AF RID: 34735 RVA: 0x002382B5 File Offset: 0x002364B5
		public static LocalizedString DataClassificationDnIdentityNotSupported
		{
			get
			{
				return new LocalizedString("DataClassificationDnIdentityNotSupported", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060087B0 RID: 34736 RVA: 0x002382D4 File Offset: 0x002364D4
		public static LocalizedString UnableToMoveUCSMigratedMailboxToDownlevelError(string name)
		{
			return new LocalizedString("UnableToMoveUCSMigratedMailboxToDownlevelError", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x17002A54 RID: 10836
		// (get) Token: 0x060087B1 RID: 34737 RVA: 0x00238303 File Offset: 0x00236503
		public static LocalizedString InvalidRuleSearchFilterEmpty
		{
			get
			{
				return new LocalizedString("InvalidRuleSearchFilterEmpty", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002A55 RID: 10837
		// (get) Token: 0x060087B2 RID: 34738 RVA: 0x00238321 File Offset: 0x00236521
		public static LocalizedString InvalidPage
		{
			get
			{
				return new LocalizedString("InvalidPage", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060087B3 RID: 34739 RVA: 0x00238340 File Offset: 0x00236540
		public static LocalizedString ErrorUserWithMatchingNetIdAndDifferentWindowsLiveIdExists(string liveID, string recipient)
		{
			return new LocalizedString("ErrorUserWithMatchingNetIdAndDifferentWindowsLiveIdExists", "Ex0700FF", false, true, Strings.ResourceManager, new object[]
			{
				liveID,
				recipient
			});
		}

		// Token: 0x060087B4 RID: 34740 RVA: 0x00238374 File Offset: 0x00236574
		public static LocalizedString CookieExpiredException(Guid oldDc, Guid newDc)
		{
			return new LocalizedString("CookieExpiredException", "", false, false, Strings.ResourceManager, new object[]
			{
				oldDc,
				newDc
			});
		}

		// Token: 0x17002A56 RID: 10838
		// (get) Token: 0x060087B5 RID: 34741 RVA: 0x002383B1 File Offset: 0x002365B1
		public static LocalizedString ErrorSuspendWhenReadyToCompleteCannotBeSetWithStartAfterOrCompleteAfter
		{
			get
			{
				return new LocalizedString("ErrorSuspendWhenReadyToCompleteCannotBeSetWithStartAfterOrCompleteAfter", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060087B6 RID: 34742 RVA: 0x002383D0 File Offset: 0x002365D0
		public static LocalizedString MapiTransactionShortErrorMsgFromException(string exceptionType, string exceptionMessage)
		{
			return new LocalizedString("MapiTransactionShortErrorMsgFromException", "Ex438E98", false, true, Strings.ResourceManager, new object[]
			{
				exceptionType,
				exceptionMessage
			});
		}

		// Token: 0x060087B7 RID: 34743 RVA: 0x00238404 File Offset: 0x00236604
		public static LocalizedString ServerNotInDagError(string serverName)
		{
			return new LocalizedString("ServerNotInDagError", "Ex889403", false, true, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		// Token: 0x17002A57 RID: 10839
		// (get) Token: 0x060087B8 RID: 34744 RVA: 0x00238433 File Offset: 0x00236633
		public static LocalizedString ErrorRemoveMailuserWithJournalArchive
		{
			get
			{
				return new LocalizedString("ErrorRemoveMailuserWithJournalArchive", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002A58 RID: 10840
		// (get) Token: 0x060087B9 RID: 34745 RVA: 0x00238451 File Offset: 0x00236651
		public static LocalizedString ErrorInvalidEndpointParameterReasonInvalidProperty
		{
			get
			{
				return new LocalizedString("ErrorInvalidEndpointParameterReasonInvalidProperty", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002A59 RID: 10841
		// (get) Token: 0x060087BA RID: 34746 RVA: 0x0023846F File Offset: 0x0023666F
		public static LocalizedString Pop3BeServiceDescription
		{
			get
			{
				return new LocalizedString("Pop3BeServiceDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002A5A RID: 10842
		// (get) Token: 0x060087BB RID: 34747 RVA: 0x0023848D File Offset: 0x0023668D
		public static LocalizedString DefaultAllGroups
		{
			get
			{
				return new LocalizedString("DefaultAllGroups", "Ex6802AA", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002A5B RID: 10843
		// (get) Token: 0x060087BC RID: 34748 RVA: 0x002384AB File Offset: 0x002366AB
		public static LocalizedString ErrorDisableMailboxWithJournalArchive
		{
			get
			{
				return new LocalizedString("ErrorDisableMailboxWithJournalArchive", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060087BD RID: 34749 RVA: 0x002384CC File Offset: 0x002366CC
		public static LocalizedString ConfirmationMessageNewOutlookProtectionRule(string name)
		{
			return new LocalizedString("ConfirmationMessageNewOutlookProtectionRule", "ExCC885E", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x17002A5C RID: 10844
		// (get) Token: 0x060087BE RID: 34750 RVA: 0x002384FB File Offset: 0x002366FB
		public static LocalizedString ProgressActivityGetFederationMetadata
		{
			get
			{
				return new LocalizedString("ProgressActivityGetFederationMetadata", "ExE1003E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002A5D RID: 10845
		// (get) Token: 0x060087BF RID: 34751 RVA: 0x00238519 File Offset: 0x00236719
		public static LocalizedString InvalidPrimaryLeaseLocation
		{
			get
			{
				return new LocalizedString("InvalidPrimaryLeaseLocation", "ExD1A006", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060087C0 RID: 34752 RVA: 0x00238538 File Offset: 0x00236738
		public static LocalizedString ErrorInvalidFilterProperty(string propertyName)
		{
			return new LocalizedString("ErrorInvalidFilterProperty", "ExF4271E", false, true, Strings.ResourceManager, new object[]
			{
				propertyName
			});
		}

		// Token: 0x17002A5E RID: 10846
		// (get) Token: 0x060087C1 RID: 34753 RVA: 0x00238567 File Offset: 0x00236767
		public static LocalizedString InvalidSource
		{
			get
			{
				return new LocalizedString("InvalidSource", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002A5F RID: 10847
		// (get) Token: 0x060087C2 RID: 34754 RVA: 0x00238585 File Offset: 0x00236785
		public static LocalizedString LanguagePackPerfCounterMergeEnd
		{
			get
			{
				return new LocalizedString("LanguagePackPerfCounterMergeEnd", "Ex607184", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002A60 RID: 10848
		// (get) Token: 0x060087C3 RID: 34755 RVA: 0x002385A3 File Offset: 0x002367A3
		public static LocalizedString CheckServerConfiguration
		{
			get
			{
				return new LocalizedString("CheckServerConfiguration", "ExE02A2B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060087C4 RID: 34756 RVA: 0x002385C4 File Offset: 0x002367C4
		public static LocalizedString ErrorUnableToDetermineMdbQueue(string identity)
		{
			return new LocalizedString("ErrorUnableToDetermineMdbQueue", "Ex2E52E1", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x060087C5 RID: 34757 RVA: 0x002385F4 File Offset: 0x002367F4
		public static LocalizedString ConfirmationMessageNewMobileMailboxDefaultPolicy(string Name)
		{
			return new LocalizedString("ConfirmationMessageNewMobileMailboxDefaultPolicy", "Ex487DD6", false, true, Strings.ResourceManager, new object[]
			{
				Name
			});
		}

		// Token: 0x060087C6 RID: 34758 RVA: 0x00238624 File Offset: 0x00236824
		public static LocalizedString ErrorServicePlanHasNoMatchingMailboxPlan(string name)
		{
			return new LocalizedString("ErrorServicePlanHasNoMatchingMailboxPlan", "Ex2A0AE6", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x17002A61 RID: 10849
		// (get) Token: 0x060087C7 RID: 34759 RVA: 0x00238653 File Offset: 0x00236853
		public static LocalizedString UpgradedSearchObjectDescription
		{
			get
			{
				return new LocalizedString("UpgradedSearchObjectDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060087C8 RID: 34760 RVA: 0x00238674 File Offset: 0x00236874
		public static LocalizedString ErrorCannotMoveDiscoveryMailboxesDownlevel(string mailbox)
		{
			return new LocalizedString("ErrorCannotMoveDiscoveryMailboxesDownlevel", "Ex086679", false, true, Strings.ResourceManager, new object[]
			{
				mailbox
			});
		}

		// Token: 0x17002A62 RID: 10850
		// (get) Token: 0x060087C9 RID: 34761 RVA: 0x002386A3 File Offset: 0x002368A3
		public static LocalizedString CopyStatusSinglePageRestore
		{
			get
			{
				return new LocalizedString("CopyStatusSinglePageRestore", "ExA62DD4", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060087CA RID: 34762 RVA: 0x002386C4 File Offset: 0x002368C4
		public static LocalizedString ErrorFailedToUpdateStoreMailboxInformationException(string identity)
		{
			return new LocalizedString("ErrorFailedToUpdateStoreMailboxInformationException", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x060087CB RID: 34763 RVA: 0x002386F4 File Offset: 0x002368F4
		public static LocalizedString MailboxAdminDisplayVersionCouldNotBeDisplayed(string name, string error)
		{
			return new LocalizedString("MailboxAdminDisplayVersionCouldNotBeDisplayed", "", false, false, Strings.ResourceManager, new object[]
			{
				name,
				error
			});
		}

		// Token: 0x17002A63 RID: 10851
		// (get) Token: 0x060087CC RID: 34764 RVA: 0x00238727 File Offset: 0x00236927
		public static LocalizedString IgnoreRequireTLSConflict
		{
			get
			{
				return new LocalizedString("IgnoreRequireTLSConflict", "Ex595EBE", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060087CD RID: 34765 RVA: 0x00238748 File Offset: 0x00236948
		public static LocalizedString ErrorCompleteFlagRequired(string identity)
		{
			return new LocalizedString("ErrorCompleteFlagRequired", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x060087CE RID: 34766 RVA: 0x00238778 File Offset: 0x00236978
		public static LocalizedString AcceptedDomainsCannotBeRoutedByOutboundConnector(string domains)
		{
			return new LocalizedString("AcceptedDomainsCannotBeRoutedByOutboundConnector", "", false, false, Strings.ResourceManager, new object[]
			{
				domains
			});
		}

		// Token: 0x060087CF RID: 34767 RVA: 0x002387A8 File Offset: 0x002369A8
		public static LocalizedString ConfirmationMessageNewMailboxExportRequest(string name)
		{
			return new LocalizedString("ConfirmationMessageNewMailboxExportRequest", "ExC1197A", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x060087D0 RID: 34768 RVA: 0x002387D8 File Offset: 0x002369D8
		public static LocalizedString CasHealthPowerShellAppPoolNotRunning(string appPool)
		{
			return new LocalizedString("CasHealthPowerShellAppPoolNotRunning", "Ex232596", false, true, Strings.ResourceManager, new object[]
			{
				appPool
			});
		}

		// Token: 0x17002A64 RID: 10852
		// (get) Token: 0x060087D1 RID: 34769 RVA: 0x00238807 File Offset: 0x00236A07
		public static LocalizedString ErrorRpcHttpMustSpecifyInternalClientsRequireSslParameter
		{
			get
			{
				return new LocalizedString("ErrorRpcHttpMustSpecifyInternalClientsRequireSslParameter", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002A65 RID: 10853
		// (get) Token: 0x060087D2 RID: 34770 RVA: 0x00238825 File Offset: 0x00236A25
		public static LocalizedString EmptyMesssageWillBeCreated
		{
			get
			{
				return new LocalizedString("EmptyMesssageWillBeCreated", "Ex21BB6B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002A66 RID: 10854
		// (get) Token: 0x060087D3 RID: 34771 RVA: 0x00238843 File Offset: 0x00236A43
		public static LocalizedString SubjectCnNotValidFQDN
		{
			get
			{
				return new LocalizedString("SubjectCnNotValidFQDN", "ExF93996", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060087D4 RID: 34772 RVA: 0x00238864 File Offset: 0x00236A64
		public static LocalizedString ErrorArbitrationMailboxNotSet(string recipient)
		{
			return new LocalizedString("ErrorArbitrationMailboxNotSet", "Ex2BF159", false, true, Strings.ResourceManager, new object[]
			{
				recipient
			});
		}

		// Token: 0x060087D5 RID: 34773 RVA: 0x00238894 File Offset: 0x00236A94
		public static LocalizedString CannotSetProxy(string proxy)
		{
			return new LocalizedString("CannotSetProxy", "Ex9BDF58", false, true, Strings.ResourceManager, new object[]
			{
				proxy
			});
		}

		// Token: 0x060087D6 RID: 34774 RVA: 0x002388C4 File Offset: 0x00236AC4
		public static LocalizedString ConfirmationMessageUpdatePublicFolderMailbox(string mbxIdentity)
		{
			return new LocalizedString("ConfirmationMessageUpdatePublicFolderMailbox", "", false, false, Strings.ResourceManager, new object[]
			{
				mbxIdentity
			});
		}

		// Token: 0x17002A67 RID: 10855
		// (get) Token: 0x060087D7 RID: 34775 RVA: 0x002388F3 File Offset: 0x00236AF3
		public static LocalizedString WarningExpiryDateBeforeCurrentDate
		{
			get
			{
				return new LocalizedString("WarningExpiryDateBeforeCurrentDate", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060087D8 RID: 34776 RVA: 0x00238914 File Offset: 0x00236B14
		public static LocalizedString ErrorExistingRecipientInActionsCannotBeDistributionGroup(string ruleName, string recipient)
		{
			return new LocalizedString("ErrorExistingRecipientInActionsCannotBeDistributionGroup", "", false, false, Strings.ResourceManager, new object[]
			{
				ruleName,
				recipient
			});
		}

		// Token: 0x060087D9 RID: 34777 RVA: 0x00238948 File Offset: 0x00236B48
		public static LocalizedString WarningNoMyBaseOptionsRole(string roleType)
		{
			return new LocalizedString("WarningNoMyBaseOptionsRole", "ExBCAF72", false, true, Strings.ResourceManager, new object[]
			{
				roleType
			});
		}

		// Token: 0x17002A68 RID: 10856
		// (get) Token: 0x060087DA RID: 34778 RVA: 0x00238977 File Offset: 0x00236B77
		public static LocalizedString MtrtRequireTLS
		{
			get
			{
				return new LocalizedString("MtrtRequireTLS", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002A69 RID: 10857
		// (get) Token: 0x060087DB RID: 34779 RVA: 0x00238995 File Offset: 0x00236B95
		public static LocalizedString SendConnectorSourceServersSetForEdge
		{
			get
			{
				return new LocalizedString("SendConnectorSourceServersSetForEdge", "ExE5ED0F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060087DC RID: 34780 RVA: 0x002389B4 File Offset: 0x00236BB4
		public static LocalizedString SecurityDescriptorAccessDeniedException(string dn)
		{
			return new LocalizedString("SecurityDescriptorAccessDeniedException", "ExAAC3D3", false, true, Strings.ResourceManager, new object[]
			{
				dn
			});
		}

		// Token: 0x17002A6A RID: 10858
		// (get) Token: 0x060087DD RID: 34781 RVA: 0x002389E3 File Offset: 0x00236BE3
		public static LocalizedString ErrorInvalidCertificateData
		{
			get
			{
				return new LocalizedString("ErrorInvalidCertificateData", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060087DE RID: 34782 RVA: 0x00238A04 File Offset: 0x00236C04
		public static LocalizedString ConfirmEnableCertForUMCR(string thumbprint)
		{
			return new LocalizedString("ConfirmEnableCertForUMCR", "", false, false, Strings.ResourceManager, new object[]
			{
				thumbprint
			});
		}

		// Token: 0x060087DF RID: 34783 RVA: 0x00238A34 File Offset: 0x00236C34
		public static LocalizedString ErrorDCIsNotGC(string hostName)
		{
			return new LocalizedString("ErrorDCIsNotGC", "Ex0797E9", false, true, Strings.ResourceManager, new object[]
			{
				hostName
			});
		}

		// Token: 0x060087E0 RID: 34784 RVA: 0x00238A64 File Offset: 0x00236C64
		public static LocalizedString ErrorCannotMoveMailboxesWithInPlaceHoldDownlevel(string mailbox)
		{
			return new LocalizedString("ErrorCannotMoveMailboxesWithInPlaceHoldDownlevel", "", false, false, Strings.ResourceManager, new object[]
			{
				mailbox
			});
		}

		// Token: 0x17002A6B RID: 10859
		// (get) Token: 0x060087E1 RID: 34785 RVA: 0x00238A93 File Offset: 0x00236C93
		public static LocalizedString NoKeyIDInImportedTrustedPublishingDomain
		{
			get
			{
				return new LocalizedString("NoKeyIDInImportedTrustedPublishingDomain", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060087E2 RID: 34786 RVA: 0x00238AB4 File Offset: 0x00236CB4
		public static LocalizedString OwaAuthenticationMethodCouldNotFindExtensionException(string groupID, string executableName)
		{
			return new LocalizedString("OwaAuthenticationMethodCouldNotFindExtensionException", "ExE6D7A9", false, true, Strings.ResourceManager, new object[]
			{
				groupID,
				executableName
			});
		}

		// Token: 0x060087E3 RID: 34787 RVA: 0x00238AE8 File Offset: 0x00236CE8
		public static LocalizedString messageFatalAutodiscoverException(string failure)
		{
			return new LocalizedString("messageFatalAutodiscoverException", "", false, false, Strings.ResourceManager, new object[]
			{
				failure
			});
		}

		// Token: 0x17002A6C RID: 10860
		// (get) Token: 0x060087E4 RID: 34788 RVA: 0x00238B17 File Offset: 0x00236D17
		public static LocalizedString SetupProgressDistributionListCountQuota
		{
			get
			{
				return new LocalizedString("SetupProgressDistributionListCountQuota", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060087E5 RID: 34789 RVA: 0x00238B38 File Offset: 0x00236D38
		public static LocalizedString Error_DatabaseLocationDoesNotMatchHighestActivationPreferenceCopyLocation(string attributeName, string serverLocation, string databaseLocation)
		{
			return new LocalizedString("Error_DatabaseLocationDoesNotMatchHighestActivationPreferenceCopyLocation", "", false, false, Strings.ResourceManager, new object[]
			{
				attributeName,
				serverLocation,
				databaseLocation
			});
		}

		// Token: 0x060087E6 RID: 34790 RVA: 0x00238B70 File Offset: 0x00236D70
		public static LocalizedString GetDbcsDetectReplayServiceDown(string serrver, string error)
		{
			return new LocalizedString("GetDbcsDetectReplayServiceDown", "ExEC7E62", false, true, Strings.ResourceManager, new object[]
			{
				serrver,
				error
			});
		}

		// Token: 0x060087E7 RID: 34791 RVA: 0x00238BA4 File Offset: 0x00236DA4
		public static LocalizedString ExchangeUpgradeBucketSourceVersionBiggerThanTarget(string source, string target)
		{
			return new LocalizedString("ExchangeUpgradeBucketSourceVersionBiggerThanTarget", "", false, false, Strings.ResourceManager, new object[]
			{
				source,
				target
			});
		}

		// Token: 0x17002A6D RID: 10861
		// (get) Token: 0x060087E8 RID: 34792 RVA: 0x00238BD7 File Offset: 0x00236DD7
		public static LocalizedString ConfirmationMessageIRMConfig
		{
			get
			{
				return new LocalizedString("ConfirmationMessageIRMConfig", "Ex117636", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060087E9 RID: 34793 RVA: 0x00238BF8 File Offset: 0x00236DF8
		public static LocalizedString RpcHttpE2k3Servers(string servers)
		{
			return new LocalizedString("RpcHttpE2k3Servers", "ExC1389C", false, true, Strings.ResourceManager, new object[]
			{
				servers
			});
		}

		// Token: 0x060087EA RID: 34794 RVA: 0x00238C28 File Offset: 0x00236E28
		public static LocalizedString NoRecipientsForRecipientId(string recipId)
		{
			return new LocalizedString("NoRecipientsForRecipientId", "Ex023273", false, true, Strings.ResourceManager, new object[]
			{
				recipId
			});
		}

		// Token: 0x060087EB RID: 34795 RVA: 0x00238C58 File Offset: 0x00236E58
		public static LocalizedString ErrorCannotCreateARoleFromADeprecatedRole(string id)
		{
			return new LocalizedString("ErrorCannotCreateARoleFromADeprecatedRole", "Ex15C6CA", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x17002A6E RID: 10862
		// (get) Token: 0x060087EC RID: 34796 RVA: 0x00238C87 File Offset: 0x00236E87
		public static LocalizedString DebugStartGeneratingUniqueSamAccountName
		{
			get
			{
				return new LocalizedString("DebugStartGeneratingUniqueSamAccountName", "Ex75885B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002A6F RID: 10863
		// (get) Token: 0x060087ED RID: 34797 RVA: 0x00238CA5 File Offset: 0x00236EA5
		public static LocalizedString CouldNotFindAutodiscoverService
		{
			get
			{
				return new LocalizedString("CouldNotFindAutodiscoverService", "ExB93DE7", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002A70 RID: 10864
		// (get) Token: 0x060087EE RID: 34798 RVA: 0x00238CC3 File Offset: 0x00236EC3
		public static LocalizedString ErrorInvalidAuditAdminOperationType
		{
			get
			{
				return new LocalizedString("ErrorInvalidAuditAdminOperationType", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060087EF RID: 34799 RVA: 0x00238CE4 File Offset: 0x00236EE4
		public static LocalizedString ServerNotUnique(string errorMsg)
		{
			return new LocalizedString("ServerNotUnique", "Ex2D9DB4", false, true, Strings.ResourceManager, new object[]
			{
				errorMsg
			});
		}

		// Token: 0x060087F0 RID: 34800 RVA: 0x00238D14 File Offset: 0x00236F14
		public static LocalizedString ResumeSgcFallbackToState(string db, string exception)
		{
			return new LocalizedString("ResumeSgcFallbackToState", "Ex2311FB", false, true, Strings.ResourceManager, new object[]
			{
				db,
				exception
			});
		}

		// Token: 0x17002A71 RID: 10865
		// (get) Token: 0x060087F1 RID: 34801 RVA: 0x00238D47 File Offset: 0x00236F47
		public static LocalizedString ErrorAuthServerCannotSwitchType
		{
			get
			{
				return new LocalizedString("ErrorAuthServerCannotSwitchType", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060087F2 RID: 34802 RVA: 0x00238D68 File Offset: 0x00236F68
		public static LocalizedString LogProcessExitCode(string processName, int exitCode)
		{
			return new LocalizedString("LogProcessExitCode", "ExE61E4B", false, true, Strings.ResourceManager, new object[]
			{
				processName,
				exitCode
			});
		}

		// Token: 0x17002A72 RID: 10866
		// (get) Token: 0x060087F3 RID: 34803 RVA: 0x00238DA0 File Offset: 0x00236FA0
		public static LocalizedString VirtualDirectoryTypeNotApplicable
		{
			get
			{
				return new LocalizedString("VirtualDirectoryTypeNotApplicable", "ExA779C1", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002A73 RID: 10867
		// (get) Token: 0x060087F4 RID: 34804 RVA: 0x00238DBE File Offset: 0x00236FBE
		public static LocalizedString RmsOnlineUrlsNotPresent
		{
			get
			{
				return new LocalizedString("RmsOnlineUrlsNotPresent", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002A74 RID: 10868
		// (get) Token: 0x060087F5 RID: 34805 RVA: 0x00238DDC File Offset: 0x00236FDC
		public static LocalizedString StartPreConfigurationDescription
		{
			get
			{
				return new LocalizedString("StartPreConfigurationDescription", "Ex648516", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002A75 RID: 10869
		// (get) Token: 0x060087F6 RID: 34806 RVA: 0x00238DFA File Offset: 0x00236FFA
		public static LocalizedString ErrorAssociatedMoveRequestExists
		{
			get
			{
				return new LocalizedString("ErrorAssociatedMoveRequestExists", "Ex7C5E9D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060087F7 RID: 34807 RVA: 0x00238E18 File Offset: 0x00237018
		public static LocalizedString RootNodeDoesNotMatch(string specifiedRoot, string fileName)
		{
			return new LocalizedString("RootNodeDoesNotMatch", "Ex1F7988", false, true, Strings.ResourceManager, new object[]
			{
				specifiedRoot,
				fileName
			});
		}

		// Token: 0x17002A76 RID: 10870
		// (get) Token: 0x060087F8 RID: 34808 RVA: 0x00238E4B File Offset: 0x0023704B
		public static LocalizedString MigrationStartAfterRequiresAutoComplete
		{
			get
			{
				return new LocalizedString("MigrationStartAfterRequiresAutoComplete", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002A77 RID: 10871
		// (get) Token: 0x060087F9 RID: 34809 RVA: 0x00238E69 File Offset: 0x00237069
		public static LocalizedString SomeMapiTransactionsFailedPrefix
		{
			get
			{
				return new LocalizedString("SomeMapiTransactionsFailedPrefix", "Ex167DFE", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002A78 RID: 10872
		// (get) Token: 0x060087FA RID: 34810 RVA: 0x00238E87 File Offset: 0x00237087
		public static LocalizedString InfoCheckingTpdFromRmsOnline
		{
			get
			{
				return new LocalizedString("InfoCheckingTpdFromRmsOnline", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060087FB RID: 34811 RVA: 0x00238EA8 File Offset: 0x002370A8
		public static LocalizedString TSProcessNotFound(string serverName)
		{
			return new LocalizedString("TSProcessNotFound", "Ex8F1480", false, true, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		// Token: 0x17002A79 RID: 10873
		// (get) Token: 0x060087FC RID: 34812 RVA: 0x00238ED7 File Offset: 0x002370D7
		public static LocalizedString TenantNotificationUnavailableEventMessage
		{
			get
			{
				return new LocalizedString("TenantNotificationUnavailableEventMessage", "Ex5F6BA2", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060087FD RID: 34813 RVA: 0x00238EF8 File Offset: 0x002370F8
		public static LocalizedString VerboseDefaultOABNameFound(string name, string id)
		{
			return new LocalizedString("VerboseDefaultOABNameFound", "Ex4CA2D9", false, true, Strings.ResourceManager, new object[]
			{
				name,
				id
			});
		}

		// Token: 0x060087FE RID: 34814 RVA: 0x00238F2C File Offset: 0x0023712C
		public static LocalizedString DkmContainerAlreadyExists(string containerName)
		{
			return new LocalizedString("DkmContainerAlreadyExists", "", false, false, Strings.ResourceManager, new object[]
			{
				containerName
			});
		}

		// Token: 0x060087FF RID: 34815 RVA: 0x00238F5C File Offset: 0x0023715C
		public static LocalizedString ErrorCleanupRequestedAtWrongRequestedState(string identity, string currentRequestedState, string expectedRequestedState)
		{
			return new LocalizedString("ErrorCleanupRequestedAtWrongRequestedState", "", false, false, Strings.ResourceManager, new object[]
			{
				identity,
				currentRequestedState,
				expectedRequestedState
			});
		}

		// Token: 0x17002A7A RID: 10874
		// (get) Token: 0x06008800 RID: 34816 RVA: 0x00238F93 File Offset: 0x00237193
		public static LocalizedString DagTaskRestoreDagCouldNotOpenCluster
		{
			get
			{
				return new LocalizedString("DagTaskRestoreDagCouldNotOpenCluster", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008801 RID: 34817 RVA: 0x00238FB4 File Offset: 0x002371B4
		public static LocalizedString ErrorFailedToConnectToStore(string servername)
		{
			return new LocalizedString("ErrorFailedToConnectToStore", "Ex1F5699", false, true, Strings.ResourceManager, new object[]
			{
				servername
			});
		}

		// Token: 0x06008802 RID: 34818 RVA: 0x00238FE4 File Offset: 0x002371E4
		public static LocalizedString GetCopyStatusRpcException(string server, string databaseName, string errorMessage)
		{
			return new LocalizedString("GetCopyStatusRpcException", "", false, false, Strings.ResourceManager, new object[]
			{
				server,
				databaseName,
				errorMessage
			});
		}

		// Token: 0x17002A7B RID: 10875
		// (get) Token: 0x06008803 RID: 34819 RVA: 0x0023901B File Offset: 0x0023721B
		public static LocalizedString ConfirmationMessageSetIPAllowListConfig
		{
			get
			{
				return new LocalizedString("ConfirmationMessageSetIPAllowListConfig", "Ex7EC7F0", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002A7C RID: 10876
		// (get) Token: 0x06008804 RID: 34820 RVA: 0x00239039 File Offset: 0x00237239
		public static LocalizedString UpdateManageDelegation2ProvisioningInDNS
		{
			get
			{
				return new LocalizedString("UpdateManageDelegation2ProvisioningInDNS", "Ex75B6DF", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002A7D RID: 10877
		// (get) Token: 0x06008805 RID: 34821 RVA: 0x00239057 File Offset: 0x00237257
		public static LocalizedString ErrorIgnoreDefaultScopeAndDCSetTogether
		{
			get
			{
				return new LocalizedString("ErrorIgnoreDefaultScopeAndDCSetTogether", "ExC086A9", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008806 RID: 34822 RVA: 0x00239078 File Offset: 0x00237278
		public static LocalizedString ConfirmationMessageEnableHostedConnectionFilterRule(string identity)
		{
			return new LocalizedString("ConfirmationMessageEnableHostedConnectionFilterRule", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x06008807 RID: 34823 RVA: 0x002390A8 File Offset: 0x002372A8
		public static LocalizedString ErrorUnableToDetermineContentMailbox(string identity, Guid contentMailboxGuid)
		{
			return new LocalizedString("ErrorUnableToDetermineContentMailbox", "", false, false, Strings.ResourceManager, new object[]
			{
				identity,
				contentMailboxGuid
			});
		}

		// Token: 0x06008808 RID: 34824 RVA: 0x002390E0 File Offset: 0x002372E0
		public static LocalizedString CheckPointProgressed(uint previous, uint current)
		{
			return new LocalizedString("CheckPointProgressed", "Ex07F7A5", false, true, Strings.ResourceManager, new object[]
			{
				previous,
				current
			});
		}

		// Token: 0x17002A7E RID: 10878
		// (get) Token: 0x06008809 RID: 34825 RVA: 0x0023911D File Offset: 0x0023731D
		public static LocalizedString CasHealthOwaNoCasArgumentError
		{
			get
			{
				return new LocalizedString("CasHealthOwaNoCasArgumentError", "ExD4F288", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600880A RID: 34826 RVA: 0x0023913C File Offset: 0x0023733C
		public static LocalizedString ErrorEnableMailPublicFolderNotAllowed(string path)
		{
			return new LocalizedString("ErrorEnableMailPublicFolderNotAllowed", "ExFF96CB", false, true, Strings.ResourceManager, new object[]
			{
				path
			});
		}

		// Token: 0x17002A7F RID: 10879
		// (get) Token: 0x0600880B RID: 34827 RVA: 0x0023916B File Offset: 0x0023736B
		public static LocalizedString HybridMailflowOutboundConnectorComment
		{
			get
			{
				return new LocalizedString("HybridMailflowOutboundConnectorComment", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600880C RID: 34828 RVA: 0x0023918C File Offset: 0x0023738C
		public static LocalizedString DlpPolicyMissingEnString(string elementName, string elementValue)
		{
			return new LocalizedString("DlpPolicyMissingEnString", "", false, false, Strings.ResourceManager, new object[]
			{
				elementName,
				elementValue
			});
		}

		// Token: 0x0600880D RID: 34829 RVA: 0x002391C0 File Offset: 0x002373C0
		public static LocalizedString ErrorCompleteAfter(int days)
		{
			return new LocalizedString("ErrorCompleteAfter", "", false, false, Strings.ResourceManager, new object[]
			{
				days
			});
		}

		// Token: 0x0600880E RID: 34830 RVA: 0x002391F4 File Offset: 0x002373F4
		public static LocalizedString InstallingGlobalThrottlingPolicy(string name)
		{
			return new LocalizedString("InstallingGlobalThrottlingPolicy", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x0600880F RID: 34831 RVA: 0x00239224 File Offset: 0x00237424
		public static LocalizedString ErrorGroupNameContainBlockedWords(string blockedWord)
		{
			return new LocalizedString("ErrorGroupNameContainBlockedWords", "ExB69740", false, true, Strings.ResourceManager, new object[]
			{
				blockedWord
			});
		}

		// Token: 0x06008810 RID: 34832 RVA: 0x00239254 File Offset: 0x00237454
		public static LocalizedString ExchangeSettingsExistingSettingNotUpdated(string key, string val, string groupname)
		{
			return new LocalizedString("ExchangeSettingsExistingSettingNotUpdated", "", false, false, Strings.ResourceManager, new object[]
			{
				key,
				val,
				groupname
			});
		}

		// Token: 0x06008811 RID: 34833 RVA: 0x0023928C File Offset: 0x0023748C
		public static LocalizedString WarningSetMailboxRetentionHoldDataFAI(string error)
		{
			return new LocalizedString("WarningSetMailboxRetentionHoldDataFAI", "", false, false, Strings.ResourceManager, new object[]
			{
				error
			});
		}

		// Token: 0x06008812 RID: 34834 RVA: 0x002392BC File Offset: 0x002374BC
		public static LocalizedString ExceptionRegistryKeyNotFound(string key)
		{
			return new LocalizedString("ExceptionRegistryKeyNotFound", "Ex653748", false, true, Strings.ResourceManager, new object[]
			{
				key
			});
		}

		// Token: 0x17002A80 RID: 10880
		// (get) Token: 0x06008813 RID: 34835 RVA: 0x002392EB File Offset: 0x002374EB
		public static LocalizedString PublishManageDelegation2ProvisioningInDNS
		{
			get
			{
				return new LocalizedString("PublishManageDelegation2ProvisioningInDNS", "Ex711067", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008814 RID: 34836 RVA: 0x0023930C File Offset: 0x0023750C
		public static LocalizedString ConfirmationMessageSetELCFolder(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetELCFolder", "Ex7416B8", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x17002A81 RID: 10881
		// (get) Token: 0x06008815 RID: 34837 RVA: 0x0023933B File Offset: 0x0023753B
		public static LocalizedString InvalidActionSequence
		{
			get
			{
				return new LocalizedString("InvalidActionSequence", "ExCEFB18", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008816 RID: 34838 RVA: 0x0023935C File Offset: 0x0023755C
		public static LocalizedString ErrorNoMatchingSmtpProxy(string mailboxName, string targetDeliveryDomain)
		{
			return new LocalizedString("ErrorNoMatchingSmtpProxy", "ExE4815C", false, true, Strings.ResourceManager, new object[]
			{
				mailboxName,
				targetDeliveryDomain
			});
		}

		// Token: 0x17002A82 RID: 10882
		// (get) Token: 0x06008817 RID: 34839 RVA: 0x0023938F File Offset: 0x0023758F
		public static LocalizedString CannotUseDefaultAttributesForExchange2007OAB
		{
			get
			{
				return new LocalizedString("CannotUseDefaultAttributesForExchange2007OAB", "Ex0994BB", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008818 RID: 34840 RVA: 0x002393B0 File Offset: 0x002375B0
		public static LocalizedString ErrorSetPolicyRoleAssignment(string user, string role, string plan)
		{
			return new LocalizedString("ErrorSetPolicyRoleAssignment", "ExA4FEAC", false, true, Strings.ResourceManager, new object[]
			{
				user,
				role,
				plan
			});
		}

		// Token: 0x17002A83 RID: 10883
		// (get) Token: 0x06008819 RID: 34841 RVA: 0x002393E7 File Offset: 0x002375E7
		public static LocalizedString ImproperTypeForThisIdParameter
		{
			get
			{
				return new LocalizedString("ImproperTypeForThisIdParameter", "Ex5A6EED", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600881A RID: 34842 RVA: 0x00239408 File Offset: 0x00237608
		public static LocalizedString ConfirmationMessageRemoveRemoteDomain(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveRemoteDomain", "ExBDF429", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x0600881B RID: 34843 RVA: 0x00239438 File Offset: 0x00237638
		public static LocalizedString ProtocolTransactionsSucceeded(string protocol)
		{
			return new LocalizedString("ProtocolTransactionsSucceeded", "Ex7A5FF4", false, true, Strings.ResourceManager, new object[]
			{
				protocol
			});
		}

		// Token: 0x0600881C RID: 34844 RVA: 0x00239468 File Offset: 0x00237668
		public static LocalizedString AlsEmailBodyAdminCmdlets(string cmdlets)
		{
			return new LocalizedString("AlsEmailBodyAdminCmdlets", "", false, false, Strings.ResourceManager, new object[]
			{
				cmdlets
			});
		}

		// Token: 0x17002A84 RID: 10884
		// (get) Token: 0x0600881D RID: 34845 RVA: 0x00239497 File Offset: 0x00237697
		public static LocalizedString SetupProgressStoppingWatchDogService
		{
			get
			{
				return new LocalizedString("SetupProgressStoppingWatchDogService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600881E RID: 34846 RVA: 0x002394B8 File Offset: 0x002376B8
		public static LocalizedString ExchangeSettingsUpdateScopeForest(string groupName, string id)
		{
			return new LocalizedString("ExchangeSettingsUpdateScopeForest", "", false, false, Strings.ResourceManager, new object[]
			{
				groupName,
				id
			});
		}

		// Token: 0x17002A85 RID: 10885
		// (get) Token: 0x0600881F RID: 34847 RVA: 0x002394EB File Offset: 0x002376EB
		public static LocalizedString ErrorPreventCompletionCannotSet
		{
			get
			{
				return new LocalizedString("ErrorPreventCompletionCannotSet", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008820 RID: 34848 RVA: 0x0023950C File Offset: 0x0023770C
		public static LocalizedString OwaAuthenticationMethodFoundMoreThanOneExtensionException(string groupID, string executableName, string matches)
		{
			return new LocalizedString("OwaAuthenticationMethodFoundMoreThanOneExtensionException", "ExBF38A8", false, true, Strings.ResourceManager, new object[]
			{
				groupID,
				executableName,
				matches
			});
		}

		// Token: 0x06008821 RID: 34849 RVA: 0x00239544 File Offset: 0x00237744
		public static LocalizedString ConfirmationMessageSetEdgeSyncServiceConfig(string id)
		{
			return new LocalizedString("ConfirmationMessageSetEdgeSyncServiceConfig", "Ex404B78", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x06008822 RID: 34850 RVA: 0x00239574 File Offset: 0x00237774
		public static LocalizedString ConfirmationMessageNewMailboxWithArchive(string Name)
		{
			return new LocalizedString("ConfirmationMessageNewMailboxWithArchive", "Ex11B075", false, true, Strings.ResourceManager, new object[]
			{
				Name
			});
		}

		// Token: 0x06008823 RID: 34851 RVA: 0x002395A4 File Offset: 0x002377A4
		public static LocalizedString ExSGroupNotFoundException(Guid guid)
		{
			return new LocalizedString("ExSGroupNotFoundException", "Ex6F8E35", false, true, Strings.ResourceManager, new object[]
			{
				guid
			});
		}

		// Token: 0x17002A86 RID: 10886
		// (get) Token: 0x06008824 RID: 34852 RVA: 0x002395D8 File Offset: 0x002377D8
		public static LocalizedString ErrorTaskRunningLocation
		{
			get
			{
				return new LocalizedString("ErrorTaskRunningLocation", "Ex6F3392", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008825 RID: 34853 RVA: 0x002395F8 File Offset: 0x002377F8
		public static LocalizedString VerboseFixingObject(string id)
		{
			return new LocalizedString("VerboseFixingObject", "ExF2FFA6", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x17002A87 RID: 10887
		// (get) Token: 0x06008826 RID: 34854 RVA: 0x00239627 File Offset: 0x00237827
		public static LocalizedString ErrorTenantOrgOutOfDate
		{
			get
			{
				return new LocalizedString("ErrorTenantOrgOutOfDate", "ExA8EE64", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002A88 RID: 10888
		// (get) Token: 0x06008827 RID: 34855 RVA: 0x00239645 File Offset: 0x00237845
		public static LocalizedString SetupProgressStartingComplianceAuditService
		{
			get
			{
				return new LocalizedString("SetupProgressStartingComplianceAuditService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008828 RID: 34856 RVA: 0x00239664 File Offset: 0x00237864
		public static LocalizedString ErrorRetentionIdConflictsWithRetentionPolicy(string retentionId, string policyName)
		{
			return new LocalizedString("ErrorRetentionIdConflictsWithRetentionPolicy", "Ex72BDE3", false, true, Strings.ResourceManager, new object[]
			{
				retentionId,
				policyName
			});
		}

		// Token: 0x17002A89 RID: 10889
		// (get) Token: 0x06008829 RID: 34857 RVA: 0x00239697 File Offset: 0x00237897
		public static LocalizedString ConfirmationMessageSetIPBlockListProvidersConfig
		{
			get
			{
				return new LocalizedString("ConfirmationMessageSetIPBlockListProvidersConfig", "Ex38A579", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600882A RID: 34858 RVA: 0x002396B8 File Offset: 0x002378B8
		public static LocalizedString ReplicationCheckFatalException(string checkTitle, string errorMessage)
		{
			return new LocalizedString("ReplicationCheckFatalException", "", false, false, Strings.ResourceManager, new object[]
			{
				checkTitle,
				errorMessage
			});
		}

		// Token: 0x0600882B RID: 34859 RVA: 0x002396EC File Offset: 0x002378EC
		public static LocalizedString EdgeSyncServiceConfigMissing(string site)
		{
			return new LocalizedString("EdgeSyncServiceConfigMissing", "ExFC6140", false, true, Strings.ResourceManager, new object[]
			{
				site
			});
		}

		// Token: 0x17002A8A RID: 10890
		// (get) Token: 0x0600882C RID: 34860 RVA: 0x0023971B File Offset: 0x0023791B
		public static LocalizedString UninstallMailboxReplicationServiceTask
		{
			get
			{
				return new LocalizedString("UninstallMailboxReplicationServiceTask", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002A8B RID: 10891
		// (get) Token: 0x0600882D RID: 34861 RVA: 0x00239739 File Offset: 0x00237939
		public static LocalizedString SetupProgressAutoReplyEnabled
		{
			get
			{
				return new LocalizedString("SetupProgressAutoReplyEnabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600882E RID: 34862 RVA: 0x00239758 File Offset: 0x00237958
		public static LocalizedString FileShareWitnessPathNotSet(string resName)
		{
			return new LocalizedString("FileShareWitnessPathNotSet", "ExB48A97", false, true, Strings.ResourceManager, new object[]
			{
				resName
			});
		}

		// Token: 0x0600882F RID: 34863 RVA: 0x00239788 File Offset: 0x00237988
		public static LocalizedString ConfirmationMessageResumeDatabaseCopyReplicationIdentity(string Identity, string Server)
		{
			return new LocalizedString("ConfirmationMessageResumeDatabaseCopyReplicationIdentity", "Ex91E6D8", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				Server
			});
		}

		// Token: 0x06008830 RID: 34864 RVA: 0x002397BC File Offset: 0x002379BC
		public static LocalizedString InvalidMessageDataClassificationParameterMinGreaterThanMax(string paramName1, string paramName2)
		{
			return new LocalizedString("InvalidMessageDataClassificationParameterMinGreaterThanMax", "", false, false, Strings.ResourceManager, new object[]
			{
				paramName1,
				paramName2
			});
		}

		// Token: 0x17002A8C RID: 10892
		// (get) Token: 0x06008831 RID: 34865 RVA: 0x002397EF File Offset: 0x002379EF
		public static LocalizedString SynNowCanOnlyRunAgainstHub
		{
			get
			{
				return new LocalizedString("SynNowCanOnlyRunAgainstHub", "ExB6265F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008832 RID: 34866 RVA: 0x00239810 File Offset: 0x00237A10
		public static LocalizedString MigrationInvalidBatchIdForUser(string user)
		{
			return new LocalizedString("MigrationInvalidBatchIdForUser", "", false, false, Strings.ResourceManager, new object[]
			{
				user
			});
		}

		// Token: 0x17002A8D RID: 10893
		// (get) Token: 0x06008833 RID: 34867 RVA: 0x0023983F File Offset: 0x00237A3F
		public static LocalizedString UninstallKeynoteConnectorServiceTask
		{
			get
			{
				return new LocalizedString("UninstallKeynoteConnectorServiceTask", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008834 RID: 34868 RVA: 0x00239860 File Offset: 0x00237A60
		public static LocalizedString NoReceiveConnectors(string fqdn)
		{
			return new LocalizedString("NoReceiveConnectors", "Ex6A4F1C", false, true, Strings.ResourceManager, new object[]
			{
				fqdn
			});
		}

		// Token: 0x17002A8E RID: 10894
		// (get) Token: 0x06008835 RID: 34869 RVA: 0x0023988F File Offset: 0x00237A8F
		public static LocalizedString ProgressStatusRemovingManagementRoleTree
		{
			get
			{
				return new LocalizedString("ProgressStatusRemovingManagementRoleTree", "Ex314E56", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008836 RID: 34870 RVA: 0x002398B0 File Offset: 0x00237AB0
		public static LocalizedString ConfirmationMessageNewMailboxRelocation(string name)
		{
			return new LocalizedString("ConfirmationMessageNewMailboxRelocation", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x17002A8F RID: 10895
		// (get) Token: 0x06008837 RID: 34871 RVA: 0x002398DF File Offset: 0x00237ADF
		public static LocalizedString CasTransactionResultSkipped
		{
			get
			{
				return new LocalizedString("CasTransactionResultSkipped", "Ex6ED722", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008838 RID: 34872 RVA: 0x00239900 File Offset: 0x00237B00
		public static LocalizedString VerboseLogFolderPathUniqueUnderDAGCondition(string path)
		{
			return new LocalizedString("VerboseLogFolderPathUniqueUnderDAGCondition", "", false, false, Strings.ResourceManager, new object[]
			{
				path
			});
		}

		// Token: 0x06008839 RID: 34873 RVA: 0x00239930 File Offset: 0x00237B30
		public static LocalizedString ErrorMemberNameUnavailableUsedAlternateAlias(string memberName)
		{
			return new LocalizedString("ErrorMemberNameUnavailableUsedAlternateAlias", "ExD83099", false, true, Strings.ResourceManager, new object[]
			{
				memberName
			});
		}

		// Token: 0x0600883A RID: 34874 RVA: 0x00239960 File Offset: 0x00237B60
		public static LocalizedString RemoveDefaultOAB(string oabId)
		{
			return new LocalizedString("RemoveDefaultOAB", "ExB081E1", false, true, Strings.ResourceManager, new object[]
			{
				oabId
			});
		}

		// Token: 0x0600883B RID: 34875 RVA: 0x00239990 File Offset: 0x00237B90
		public static LocalizedString ErrorNoAdministratorKeyFound(string trustName)
		{
			return new LocalizedString("ErrorNoAdministratorKeyFound", "Ex092136", false, true, Strings.ResourceManager, new object[]
			{
				trustName
			});
		}

		// Token: 0x0600883C RID: 34876 RVA: 0x002399C0 File Offset: 0x00237BC0
		public static LocalizedString messageGlobalLocatorServiceWCFExceptionThrown(string e)
		{
			return new LocalizedString("messageGlobalLocatorServiceWCFExceptionThrown", "", false, false, Strings.ResourceManager, new object[]
			{
				e
			});
		}

		// Token: 0x17002A90 RID: 10896
		// (get) Token: 0x0600883D RID: 34877 RVA: 0x002399EF File Offset: 0x00237BEF
		public static LocalizedString ErrorAgentCannotBeDisabled
		{
			get
			{
				return new LocalizedString("ErrorAgentCannotBeDisabled", "Ex4394AC", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002A91 RID: 10897
		// (get) Token: 0x0600883E RID: 34878 RVA: 0x00239A0D File Offset: 0x00237C0D
		public static LocalizedString CreateSharedConfigurationRequiredForTT
		{
			get
			{
				return new LocalizedString("CreateSharedConfigurationRequiredForTT", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600883F RID: 34879 RVA: 0x00239A2C File Offset: 0x00237C2C
		public static LocalizedString ErrorRemoveModeratorMailbox(string id)
		{
			return new LocalizedString("ErrorRemoveModeratorMailbox", "", false, false, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x17002A92 RID: 10898
		// (get) Token: 0x06008840 RID: 34880 RVA: 0x00239A5B File Offset: 0x00237C5B
		public static LocalizedString SetupProgressStoppingAdam
		{
			get
			{
				return new LocalizedString("SetupProgressStoppingAdam", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002A93 RID: 10899
		// (get) Token: 0x06008841 RID: 34881 RVA: 0x00239A79 File Offset: 0x00237C79
		public static LocalizedString CasHealthOwaGotIsaLogonPage
		{
			get
			{
				return new LocalizedString("CasHealthOwaGotIsaLogonPage", "Ex63AC4A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002A94 RID: 10900
		// (get) Token: 0x06008842 RID: 34882 RVA: 0x00239A97 File Offset: 0x00237C97
		public static LocalizedString CreateActiveSyncOraganizationSettings
		{
			get
			{
				return new LocalizedString("CreateActiveSyncOraganizationSettings", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008843 RID: 34883 RVA: 0x00239AB8 File Offset: 0x00237CB8
		public static LocalizedString ConfirmationMessageNewELCFolder(string Name, string FolderName)
		{
			return new LocalizedString("ConfirmationMessageNewELCFolder", "ExAB79D3", false, true, Strings.ResourceManager, new object[]
			{
				Name,
				FolderName
			});
		}

		// Token: 0x17002A95 RID: 10901
		// (get) Token: 0x06008844 RID: 34884 RVA: 0x00239AEB File Offset: 0x00237CEB
		public static LocalizedString InheritedAceIgnored
		{
			get
			{
				return new LocalizedString("InheritedAceIgnored", "ExE4A606", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008845 RID: 34885 RVA: 0x00239B0C File Offset: 0x00237D0C
		public static LocalizedString WarningMailboxNeverBeenLoggedOn(string mailbox, string id)
		{
			return new LocalizedString("WarningMailboxNeverBeenLoggedOn", "ExC85C97", false, true, Strings.ResourceManager, new object[]
			{
				mailbox,
				id
			});
		}

		// Token: 0x06008846 RID: 34886 RVA: 0x00239B40 File Offset: 0x00237D40
		public static LocalizedString CasHealthOwaUserColon(string user)
		{
			return new LocalizedString("CasHealthOwaUserColon", "ExF847AA", false, true, Strings.ResourceManager, new object[]
			{
				user
			});
		}

		// Token: 0x06008847 RID: 34887 RVA: 0x00239B70 File Offset: 0x00237D70
		public static LocalizedString CannotFindXPath(string file, string xpath)
		{
			return new LocalizedString("CannotFindXPath", "Ex42B18C", false, true, Strings.ResourceManager, new object[]
			{
				file,
				xpath
			});
		}

		// Token: 0x06008848 RID: 34888 RVA: 0x00239BA4 File Offset: 0x00237DA4
		public static LocalizedString WarningManagementWebServiceVDirCreated(string identity)
		{
			return new LocalizedString("WarningManagementWebServiceVDirCreated", "Ex037B92", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x06008849 RID: 34889 RVA: 0x00239BD4 File Offset: 0x00237DD4
		public static LocalizedString ELCFolderAlreadyUpgraded(string folderName, string rptName)
		{
			return new LocalizedString("ELCFolderAlreadyUpgraded", "Ex07E6FE", false, true, Strings.ResourceManager, new object[]
			{
				folderName,
				rptName
			});
		}

		// Token: 0x0600884A RID: 34890 RVA: 0x00239C08 File Offset: 0x00237E08
		public static LocalizedString ErrorCanNotAddMailboxToWellKnownHostedMailboxSG(string mailbox, string sgName, string org, string error)
		{
			return new LocalizedString("ErrorCanNotAddMailboxToWellKnownHostedMailboxSG", "Ex7867D3", false, true, Strings.ResourceManager, new object[]
			{
				mailbox,
				sgName,
				org,
				error
			});
		}

		// Token: 0x17002A96 RID: 10902
		// (get) Token: 0x0600884B RID: 34891 RVA: 0x00239C43 File Offset: 0x00237E43
		public static LocalizedString StartPreFileCopyDescription
		{
			get
			{
				return new LocalizedString("StartPreFileCopyDescription", "Ex5FF3CD", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600884C RID: 34892 RVA: 0x00239C64 File Offset: 0x00237E64
		public static LocalizedString ExportMailboxDuplicates(string displayName)
		{
			return new LocalizedString("ExportMailboxDuplicates", "ExC91C61", false, true, Strings.ResourceManager, new object[]
			{
				displayName
			});
		}

		// Token: 0x0600884D RID: 34893 RVA: 0x00239C94 File Offset: 0x00237E94
		public static LocalizedString ConfirmationMessageTestReplicationHealth(string serverName)
		{
			return new LocalizedString("ConfirmationMessageTestReplicationHealth", "Ex2D5430", false, true, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		// Token: 0x17002A97 RID: 10903
		// (get) Token: 0x0600884E RID: 34894 RVA: 0x00239CC3 File Offset: 0x00237EC3
		public static LocalizedString SetupComponentConfiguringMailSubmissionService
		{
			get
			{
				return new LocalizedString("SetupComponentConfiguringMailSubmissionService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600884F RID: 34895 RVA: 0x00239CE4 File Offset: 0x00237EE4
		public static LocalizedString TransportRpcNotRegistered(string server)
		{
			return new LocalizedString("TransportRpcNotRegistered", "", false, false, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		// Token: 0x06008850 RID: 34896 RVA: 0x00239D14 File Offset: 0x00237F14
		public static LocalizedString CasHealthWebAppLogonScenarioDescription(LocalizedString applicationLongName)
		{
			return new LocalizedString("CasHealthWebAppLogonScenarioDescription", "ExF155D3", false, true, Strings.ResourceManager, new object[]
			{
				applicationLongName
			});
		}

		// Token: 0x06008851 RID: 34897 RVA: 0x00239D48 File Offset: 0x00237F48
		public static LocalizedString ErrorMbxPlanReleaseTransition(string mbxPlan, string currentRelease, string newRelease)
		{
			return new LocalizedString("ErrorMbxPlanReleaseTransition", "Ex7BFCF5", false, true, Strings.ResourceManager, new object[]
			{
				mbxPlan,
				currentRelease,
				newRelease
			});
		}

		// Token: 0x17002A98 RID: 10904
		// (get) Token: 0x06008852 RID: 34898 RVA: 0x00239D7F File Offset: 0x00237F7F
		public static LocalizedString ErrorCannotGetLocalSite
		{
			get
			{
				return new LocalizedString("ErrorCannotGetLocalSite", "Ex86A055", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002A99 RID: 10905
		// (get) Token: 0x06008853 RID: 34899 RVA: 0x00239D9D File Offset: 0x00237F9D
		public static LocalizedString ErrorCannotSpecifySuspendCommentWithoutSuspend
		{
			get
			{
				return new LocalizedString("ErrorCannotSpecifySuspendCommentWithoutSuspend", "Ex74EC31", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002A9A RID: 10906
		// (get) Token: 0x06008854 RID: 34900 RVA: 0x00239DBB File Offset: 0x00237FBB
		public static LocalizedString SetupProgressStartingRpcClientAccessService
		{
			get
			{
				return new LocalizedString("SetupProgressStartingRpcClientAccessService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008855 RID: 34901 RVA: 0x00239DDC File Offset: 0x00237FDC
		public static LocalizedString AdminSDHolderNotFoundException(string system)
		{
			return new LocalizedString("AdminSDHolderNotFoundException", "Ex8A0377", false, true, Strings.ResourceManager, new object[]
			{
				system
			});
		}

		// Token: 0x06008856 RID: 34902 RVA: 0x00239E0C File Offset: 0x0023800C
		public static LocalizedString TiE12Warning(string oab, string server)
		{
			return new LocalizedString("TiE12Warning", "Ex1DF960", false, true, Strings.ResourceManager, new object[]
			{
				oab,
				server
			});
		}

		// Token: 0x06008857 RID: 34903 RVA: 0x00239E40 File Offset: 0x00238040
		public static LocalizedString InfoFoundPreE12Server(string server, int version)
		{
			return new LocalizedString("InfoFoundPreE12Server", "Ex6E7A9F", false, true, Strings.ResourceManager, new object[]
			{
				server,
				version
			});
		}

		// Token: 0x17002A9B RID: 10907
		// (get) Token: 0x06008858 RID: 34904 RVA: 0x00239E78 File Offset: 0x00238078
		public static LocalizedString SetupComponentStoppingMailboxServices
		{
			get
			{
				return new LocalizedString("SetupComponentStoppingMailboxServices", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008859 RID: 34905 RVA: 0x00239E98 File Offset: 0x00238098
		public static LocalizedString ConfirmationMessageNewHostedEncryptionVirtualDirectory(string WebSiteName, string Server)
		{
			return new LocalizedString("ConfirmationMessageNewHostedEncryptionVirtualDirectory", "", false, false, Strings.ResourceManager, new object[]
			{
				WebSiteName,
				Server
			});
		}

		// Token: 0x17002A9C RID: 10908
		// (get) Token: 0x0600885A RID: 34906 RVA: 0x00239ECB File Offset: 0x002380CB
		public static LocalizedString StartOrganizationPilotDescription
		{
			get
			{
				return new LocalizedString("StartOrganizationPilotDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600885B RID: 34907 RVA: 0x00239EEC File Offset: 0x002380EC
		public static LocalizedString DagMemberString(string serverName)
		{
			return new LocalizedString("DagMemberString", "ExFCAEB1", false, true, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		// Token: 0x0600885C RID: 34908 RVA: 0x00239F1C File Offset: 0x0023811C
		public static LocalizedString ErrorDatabaseExcludedFromProvisioning(string db)
		{
			return new LocalizedString("ErrorDatabaseExcludedFromProvisioning", "", false, false, Strings.ResourceManager, new object[]
			{
				db
			});
		}

		// Token: 0x0600885D RID: 34909 RVA: 0x00239F4C File Offset: 0x0023814C
		public static LocalizedString ErrorInvalidParameterForAuditLog(string parameter, string operation)
		{
			return new LocalizedString("ErrorInvalidParameterForAuditLog", "", false, false, Strings.ResourceManager, new object[]
			{
				parameter,
				operation
			});
		}

		// Token: 0x0600885E RID: 34910 RVA: 0x00239F80 File Offset: 0x00238180
		public static LocalizedString ClassificationRuleCollectionSchemaNonConformance(string schemaError, int lineNumber, int linePosition)
		{
			return new LocalizedString("ClassificationRuleCollectionSchemaNonConformance", "", false, false, Strings.ResourceManager, new object[]
			{
				schemaError,
				lineNumber,
				linePosition
			});
		}

		// Token: 0x17002A9D RID: 10909
		// (get) Token: 0x0600885F RID: 34911 RVA: 0x00239FC1 File Offset: 0x002381C1
		public static LocalizedString AlsEmailFooter
		{
			get
			{
				return new LocalizedString("AlsEmailFooter", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008860 RID: 34912 RVA: 0x00239FE0 File Offset: 0x002381E0
		public static LocalizedString MoveRequestNotFoundOrUnsupported(string identity)
		{
			return new LocalizedString("MoveRequestNotFoundOrUnsupported", "ExABDD4A", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x06008861 RID: 34913 RVA: 0x0023A010 File Offset: 0x00238210
		public static LocalizedString SearchingForCertificate(string thumbprint)
		{
			return new LocalizedString("SearchingForCertificate", "Ex4B9AED", false, true, Strings.ResourceManager, new object[]
			{
				thumbprint
			});
		}

		// Token: 0x06008862 RID: 34914 RVA: 0x0023A040 File Offset: 0x00238240
		public static LocalizedString ErrorNoRemoteHostNameSettingForLocalMove(string identity)
		{
			return new LocalizedString("ErrorNoRemoteHostNameSettingForLocalMove", "Ex727983", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x06008863 RID: 34915 RVA: 0x0023A070 File Offset: 0x00238270
		public static LocalizedString MsiRebootRequiredToFinish(string packageIdentifier)
		{
			return new LocalizedString("MsiRebootRequiredToFinish", "Ex6AEF69", false, true, Strings.ResourceManager, new object[]
			{
				packageIdentifier
			});
		}

		// Token: 0x17002A9E RID: 10910
		// (get) Token: 0x06008864 RID: 34916 RVA: 0x0023A09F File Offset: 0x0023829F
		public static LocalizedString ConfirmationMessageRemoveEdgeSubscriptionRecipients
		{
			get
			{
				return new LocalizedString("ConfirmationMessageRemoveEdgeSubscriptionRecipients", "Ex58364A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008865 RID: 34917 RVA: 0x0023A0C0 File Offset: 0x002382C0
		public static LocalizedString ConfirmationMessageSetSendConnector(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetSendConnector", "Ex0FAC77", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x17002A9F RID: 10911
		// (get) Token: 0x06008866 RID: 34918 RVA: 0x0023A0EF File Offset: 0x002382EF
		public static LocalizedString CasHealthOwaNoInternalUrl
		{
			get
			{
				return new LocalizedString("CasHealthOwaNoInternalUrl", "Ex0ED64B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008867 RID: 34919 RVA: 0x0023A110 File Offset: 0x00238310
		public static LocalizedString ErrorMessageNotFound(string subject)
		{
			return new LocalizedString("ErrorMessageNotFound", "Ex06BC57", false, true, Strings.ResourceManager, new object[]
			{
				subject
			});
		}

		// Token: 0x17002AA0 RID: 10912
		// (get) Token: 0x06008868 RID: 34920 RVA: 0x0023A13F File Offset: 0x0023833F
		public static LocalizedString ReversingTaskList
		{
			get
			{
				return new LocalizedString("ReversingTaskList", "Ex1F18FC", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002AA1 RID: 10913
		// (get) Token: 0x06008869 RID: 34921 RVA: 0x0023A15D File Offset: 0x0023835D
		public static LocalizedString SetupProgressMaxRecipientsTransportQuota
		{
			get
			{
				return new LocalizedString("SetupProgressMaxRecipientsTransportQuota", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600886A RID: 34922 RVA: 0x0023A17C File Offset: 0x0023837C
		public static LocalizedString SelfMemberNotFoundException(string group)
		{
			return new LocalizedString("SelfMemberNotFoundException", "ExC5F8C4", false, true, Strings.ResourceManager, new object[]
			{
				group
			});
		}

		// Token: 0x0600886B RID: 34923 RVA: 0x0023A1AC File Offset: 0x002383AC
		public static LocalizedString VerboseCopyFile(string server, string fromFilePath, string toFilePath)
		{
			return new LocalizedString("VerboseCopyFile", "ExD678BA", false, true, Strings.ResourceManager, new object[]
			{
				server,
				fromFilePath,
				toFilePath
			});
		}

		// Token: 0x0600886C RID: 34924 RVA: 0x0023A1E4 File Offset: 0x002383E4
		public static LocalizedString RestoreMailboxShouldRestore(string rsgdisplayname, string rsgdatabase, string displayname, string smtp)
		{
			return new LocalizedString("RestoreMailboxShouldRestore", "ExA0D310", false, true, Strings.ResourceManager, new object[]
			{
				rsgdisplayname,
				rsgdatabase,
				displayname,
				smtp
			});
		}

		// Token: 0x0600886D RID: 34925 RVA: 0x0023A220 File Offset: 0x00238420
		public static LocalizedString ErrorPropertyTypeNotFound(string idStringValue)
		{
			return new LocalizedString("ErrorPropertyTypeNotFound", "Ex32224F", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		// Token: 0x17002AA2 RID: 10914
		// (get) Token: 0x0600886E RID: 34926 RVA: 0x0023A24F File Offset: 0x0023844F
		public static LocalizedString ContactAdminForForwardingWarning
		{
			get
			{
				return new LocalizedString("ContactAdminForForwardingWarning", "Ex93267C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600886F RID: 34927 RVA: 0x0023A270 File Offset: 0x00238470
		public static LocalizedString OabVirtualDirectoryNotExisting(string alID)
		{
			return new LocalizedString("OabVirtualDirectoryNotExisting", "ExA98931", false, true, Strings.ResourceManager, new object[]
			{
				alID
			});
		}

		// Token: 0x06008870 RID: 34928 RVA: 0x0023A2A0 File Offset: 0x002384A0
		public static LocalizedString ConfirmationMessageRemoveAdminAuditLogConfig(string org)
		{
			return new LocalizedString("ConfirmationMessageRemoveAdminAuditLogConfig", "Ex92737C", false, true, Strings.ResourceManager, new object[]
			{
				org
			});
		}

		// Token: 0x06008871 RID: 34929 RVA: 0x0023A2D0 File Offset: 0x002384D0
		public static LocalizedString ConfirmationMessageSuspendDatabaseCopyActivationIdentity(string Identity, string Server)
		{
			return new LocalizedString("ConfirmationMessageSuspendDatabaseCopyActivationIdentity", "ExA2A75B", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				Server
			});
		}

		// Token: 0x17002AA3 RID: 10915
		// (get) Token: 0x06008872 RID: 34930 RVA: 0x0023A303 File Offset: 0x00238503
		public static LocalizedString SetResubmitRequestConfirmation
		{
			get
			{
				return new LocalizedString("SetResubmitRequestConfirmation", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008873 RID: 34931 RVA: 0x0023A324 File Offset: 0x00238524
		public static LocalizedString ErrorActivateOnServerMustbeSpecifiedIfSkipChecksRequestedSourceServer(string sourceServer, bool isSkipCEC, bool isSkipHealth, bool isSkipLag)
		{
			return new LocalizedString("ErrorActivateOnServerMustbeSpecifiedIfSkipChecksRequestedSourceServer", "Ex76D8B0", false, true, Strings.ResourceManager, new object[]
			{
				sourceServer,
				isSkipCEC,
				isSkipHealth,
				isSkipLag
			});
		}

		// Token: 0x17002AA4 RID: 10916
		// (get) Token: 0x06008874 RID: 34932 RVA: 0x0023A36E File Offset: 0x0023856E
		public static LocalizedString ExsetdataLegacyOrganizationName
		{
			get
			{
				return new LocalizedString("ExsetdataLegacyOrganizationName", "Ex078080", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002AA5 RID: 10917
		// (get) Token: 0x06008875 RID: 34933 RVA: 0x0023A38C File Offset: 0x0023858C
		public static LocalizedString PatternIsWhiteSpace
		{
			get
			{
				return new LocalizedString("PatternIsWhiteSpace", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002AA6 RID: 10918
		// (get) Token: 0x06008876 RID: 34934 RVA: 0x0023A3AA File Offset: 0x002385AA
		public static LocalizedString SetupComponentPostSetupAllRoles
		{
			get
			{
				return new LocalizedString("SetupComponentPostSetupAllRoles", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008877 RID: 34935 RVA: 0x0023A3C8 File Offset: 0x002385C8
		public static LocalizedString AmMoveRpcCompletedAnyServerSourceServer(string sourceServer)
		{
			return new LocalizedString("AmMoveRpcCompletedAnyServerSourceServer", "ExEFE670", false, true, Strings.ResourceManager, new object[]
			{
				sourceServer
			});
		}

		// Token: 0x06008878 RID: 34936 RVA: 0x0023A3F8 File Offset: 0x002385F8
		public static LocalizedString ProgressDismountingDatabase(string idDatabase)
		{
			return new LocalizedString("ProgressDismountingDatabase", "Ex443203", false, true, Strings.ResourceManager, new object[]
			{
				idDatabase
			});
		}

		// Token: 0x06008879 RID: 34937 RVA: 0x0023A428 File Offset: 0x00238628
		public static LocalizedString NeedRemoveCopyFileManuallyAfterCopyDisabledRcr(string dbName, string logCopyLocation, string dbCopyLocation, string machine)
		{
			return new LocalizedString("NeedRemoveCopyFileManuallyAfterCopyDisabledRcr", "ExD3E852", false, true, Strings.ResourceManager, new object[]
			{
				dbName,
				logCopyLocation,
				dbCopyLocation,
				machine
			});
		}

		// Token: 0x17002AA7 RID: 10919
		// (get) Token: 0x0600887A RID: 34938 RVA: 0x0023A463 File Offset: 0x00238663
		public static LocalizedString SetupProgressStoppingServiceHostService
		{
			get
			{
				return new LocalizedString("SetupProgressStoppingServiceHostService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600887B RID: 34939 RVA: 0x0023A484 File Offset: 0x00238684
		public static LocalizedString ErrorAssemblyIsPath(string assembly)
		{
			return new LocalizedString("ErrorAssemblyIsPath", "Ex8F0495", false, true, Strings.ResourceManager, new object[]
			{
				assembly
			});
		}

		// Token: 0x0600887C RID: 34940 RVA: 0x0023A4B4 File Offset: 0x002386B4
		public static LocalizedString CasHealthWebAppAllTransactionsSucceeded(LocalizedString applicationLongName)
		{
			return new LocalizedString("CasHealthWebAppAllTransactionsSucceeded", "Ex6DCE6A", false, true, Strings.ResourceManager, new object[]
			{
				applicationLongName
			});
		}

		// Token: 0x17002AA8 RID: 10920
		// (get) Token: 0x0600887D RID: 34941 RVA: 0x0023A4E8 File Offset: 0x002386E8
		public static LocalizedString ErrorDirectoryNotFound
		{
			get
			{
				return new LocalizedString("ErrorDirectoryNotFound", "Ex6C39E3", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002AA9 RID: 10921
		// (get) Token: 0x0600887E RID: 34942 RVA: 0x0023A506 File Offset: 0x00238706
		public static LocalizedString SetupProgressDisclosure
		{
			get
			{
				return new LocalizedString("SetupProgressDisclosure", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002AAA RID: 10922
		// (get) Token: 0x0600887F RID: 34943 RVA: 0x0023A524 File Offset: 0x00238724
		public static LocalizedString CasHealthOwaPingFailed
		{
			get
			{
				return new LocalizedString("CasHealthOwaPingFailed", "Ex703AE7", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008880 RID: 34944 RVA: 0x0023A544 File Offset: 0x00238744
		public static LocalizedString CasHealthPowerShellRemoteConnectionScenario(string connectingUri, string auth)
		{
			return new LocalizedString("CasHealthPowerShellRemoteConnectionScenario", "Ex05ABDD", false, true, Strings.ResourceManager, new object[]
			{
				connectingUri,
				auth
			});
		}

		// Token: 0x17002AAB RID: 10923
		// (get) Token: 0x06008881 RID: 34945 RVA: 0x0023A577 File Offset: 0x00238777
		public static LocalizedString SetServerComponentStateInvalidLocalRemoteSwitch
		{
			get
			{
				return new LocalizedString("SetServerComponentStateInvalidLocalRemoteSwitch", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008882 RID: 34946 RVA: 0x0023A598 File Offset: 0x00238798
		public static LocalizedString ConfirmationMessageRemoveDefaultMobileMailboxPolicy(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveDefaultMobileMailboxPolicy", "ExA34577", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x06008883 RID: 34947 RVA: 0x0023A5C8 File Offset: 0x002387C8
		public static LocalizedString MailboxIsNotLocked(string mailboxId)
		{
			return new LocalizedString("MailboxIsNotLocked", "", false, false, Strings.ResourceManager, new object[]
			{
				mailboxId
			});
		}

		// Token: 0x17002AAC RID: 10924
		// (get) Token: 0x06008884 RID: 34948 RVA: 0x0023A5F7 File Offset: 0x002387F7
		public static LocalizedString TokenSuccessfullyGenerated
		{
			get
			{
				return new LocalizedString("TokenSuccessfullyGenerated", "Ex862783", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008885 RID: 34949 RVA: 0x0023A618 File Offset: 0x00238818
		public static LocalizedString ErrorCertificateHasExpired(string certThumbprint)
		{
			return new LocalizedString("ErrorCertificateHasExpired", "Ex9457D6", false, true, Strings.ResourceManager, new object[]
			{
				certThumbprint
			});
		}

		// Token: 0x06008886 RID: 34950 RVA: 0x0023A648 File Offset: 0x00238848
		public static LocalizedString RegistryAccessSecurityExceptionRead(string key)
		{
			return new LocalizedString("RegistryAccessSecurityExceptionRead", "Ex0CF9C9", false, true, Strings.ResourceManager, new object[]
			{
				key
			});
		}

		// Token: 0x06008887 RID: 34951 RVA: 0x0023A678 File Offset: 0x00238878
		public static LocalizedString ErrorCasServerNotRpcEnabled(string server)
		{
			return new LocalizedString("ErrorCasServerNotRpcEnabled", "Ex00680A", false, true, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		// Token: 0x06008888 RID: 34952 RVA: 0x0023A6A8 File Offset: 0x002388A8
		public static LocalizedString RmsSharedIdentityUserNotFoundInGC(string userCn)
		{
			return new LocalizedString("RmsSharedIdentityUserNotFoundInGC", "Ex371697", false, true, Strings.ResourceManager, new object[]
			{
				userCn
			});
		}

		// Token: 0x06008889 RID: 34953 RVA: 0x0023A6D8 File Offset: 0x002388D8
		public static LocalizedString ConfirmationMessageSetAddressList(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetAddressList", "Ex9DC31C", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x17002AAD RID: 10925
		// (get) Token: 0x0600888A RID: 34954 RVA: 0x0023A707 File Offset: 0x00238907
		public static LocalizedString InvalidLeaseDirectory
		{
			get
			{
				return new LocalizedString("InvalidLeaseDirectory", "Ex21CFD0", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002AAE RID: 10926
		// (get) Token: 0x0600888B RID: 34955 RVA: 0x0023A725 File Offset: 0x00238925
		public static LocalizedString AuthenticationMethodDigest
		{
			get
			{
				return new LocalizedString("AuthenticationMethodDigest", "Ex840FD1", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600888C RID: 34956 RVA: 0x0023A744 File Offset: 0x00238944
		public static LocalizedString InfoGetPreL(string recipientAddress, Uri uri)
		{
			return new LocalizedString("InfoGetPreL", "ExEAF10A", false, true, Strings.ResourceManager, new object[]
			{
				recipientAddress,
				uri
			});
		}

		// Token: 0x0600888D RID: 34957 RVA: 0x0023A778 File Offset: 0x00238978
		public static LocalizedString CatchAllRecipientNotExists(RecipientIdParameter name)
		{
			return new LocalizedString("CatchAllRecipientNotExists", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x0600888E RID: 34958 RVA: 0x0023A7A8 File Offset: 0x002389A8
		public static LocalizedString ConfirmationMessageRemoveOrgELCFolder(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveOrgELCFolder", "Ex2FACB4", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x17002AAF RID: 10927
		// (get) Token: 0x0600888F RID: 34959 RVA: 0x0023A7D7 File Offset: 0x002389D7
		public static LocalizedString ErrorPrimaryPublicFolderMailboxNotFound
		{
			get
			{
				return new LocalizedString("ErrorPrimaryPublicFolderMailboxNotFound", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008890 RID: 34960 RVA: 0x0023A7F8 File Offset: 0x002389F8
		public static LocalizedString RecipientFilterMustBeValid(string m)
		{
			return new LocalizedString("RecipientFilterMustBeValid", "Ex1A870F", false, true, Strings.ResourceManager, new object[]
			{
				m
			});
		}

		// Token: 0x06008891 RID: 34961 RVA: 0x0023A828 File Offset: 0x00238A28
		public static LocalizedString ConfirmationMessageSetRetentionTagOnMailbox(MailboxIdParameter Identity)
		{
			return new LocalizedString("ConfirmationMessageSetRetentionTagOnMailbox", "Ex618A79", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x06008892 RID: 34962 RVA: 0x0023A858 File Offset: 0x00238A58
		public static LocalizedString ConfirmationMessageSetDatabaseAvailabilityGroupConfiguration(string Server)
		{
			return new LocalizedString("ConfirmationMessageSetDatabaseAvailabilityGroupConfiguration", "", false, false, Strings.ResourceManager, new object[]
			{
				Server
			});
		}

		// Token: 0x17002AB0 RID: 10928
		// (get) Token: 0x06008893 RID: 34963 RVA: 0x0023A887 File Offset: 0x00238A87
		public static LocalizedString NSPIGetProfileDetailsScenario
		{
			get
			{
				return new LocalizedString("NSPIGetProfileDetailsScenario", "Ex3CDBB3", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008894 RID: 34964 RVA: 0x0023A8A8 File Offset: 0x00238AA8
		public static LocalizedString ConfirmationMessageSetMailboxWithDatabase(string Identity, string newDatabase)
		{
			return new LocalizedString("ConfirmationMessageSetMailboxWithDatabase", "Ex354928", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				newDatabase
			});
		}

		// Token: 0x06008895 RID: 34965 RVA: 0x0023A8DC File Offset: 0x00238ADC
		public static LocalizedString ConfirmationMessageAddDatabaseAvailabilityGroupServer(string MailboxServer, string Dag)
		{
			return new LocalizedString("ConfirmationMessageAddDatabaseAvailabilityGroupServer", "ExB48B5D", false, true, Strings.ResourceManager, new object[]
			{
				MailboxServer,
				Dag
			});
		}

		// Token: 0x17002AB1 RID: 10929
		// (get) Token: 0x06008896 RID: 34966 RVA: 0x0023A90F File Offset: 0x00238B0F
		public static LocalizedString SetupProgressCreateDefaultWLMPolicy
		{
			get
			{
				return new LocalizedString("SetupProgressCreateDefaultWLMPolicy", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002AB2 RID: 10930
		// (get) Token: 0x06008897 RID: 34967 RVA: 0x0023A92D File Offset: 0x00238B2D
		public static LocalizedString UninstallUnifiedMessagingRoleDescription
		{
			get
			{
				return new LocalizedString("UninstallUnifiedMessagingRoleDescription", "Ex465DC2", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008898 RID: 34968 RVA: 0x0023A94C File Offset: 0x00238B4C
		public static LocalizedString ExchangeSettingsPriorityIsNotUnique(string name, int priority)
		{
			return new LocalizedString("ExchangeSettingsPriorityIsNotUnique", "", false, false, Strings.ResourceManager, new object[]
			{
				name,
				priority
			});
		}

		// Token: 0x17002AB3 RID: 10931
		// (get) Token: 0x06008899 RID: 34969 RVA: 0x0023A984 File Offset: 0x00238B84
		public static LocalizedString ErrorNeedToSpecifyScopeParameter
		{
			get
			{
				return new LocalizedString("ErrorNeedToSpecifyScopeParameter", "Ex2CDB69", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002AB4 RID: 10932
		// (get) Token: 0x0600889A RID: 34970 RVA: 0x0023A9A2 File Offset: 0x00238BA2
		public static LocalizedString InstallFfoPrimingServiceTask
		{
			get
			{
				return new LocalizedString("InstallFfoPrimingServiceTask", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600889B RID: 34971 RVA: 0x0023A9C0 File Offset: 0x00238BC0
		public static LocalizedString VerboseMailboxDelegateAlreadyExists(string delegateUser, string principalUser)
		{
			return new LocalizedString("VerboseMailboxDelegateAlreadyExists", "Ex43D202", false, true, Strings.ResourceManager, new object[]
			{
				delegateUser,
				principalUser
			});
		}

		// Token: 0x0600889C RID: 34972 RVA: 0x0023A9F4 File Offset: 0x00238BF4
		public static LocalizedString RmsSharedIdentityTooManyUsers(string firstDn, string secondDn)
		{
			return new LocalizedString("RmsSharedIdentityTooManyUsers", "Ex816C34", false, true, Strings.ResourceManager, new object[]
			{
				firstDn,
				secondDn
			});
		}

		// Token: 0x0600889D RID: 34973 RVA: 0x0023AA28 File Offset: 0x00238C28
		public static LocalizedString ProcessingDependentService(string name)
		{
			return new LocalizedString("ProcessingDependentService", "Ex12839D", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x0600889E RID: 34974 RVA: 0x0023AA58 File Offset: 0x00238C58
		public static LocalizedString ConfirmationMessageMoveDatabasePath(string Identity)
		{
			return new LocalizedString("ConfirmationMessageMoveDatabasePath", "ExAAB14F", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x17002AB5 RID: 10933
		// (get) Token: 0x0600889F RID: 34975 RVA: 0x0023AA87 File Offset: 0x00238C87
		public static LocalizedString MailboxTransportSubmissionServiceDescription
		{
			get
			{
				return new LocalizedString("MailboxTransportSubmissionServiceDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002AB6 RID: 10934
		// (get) Token: 0x060088A0 RID: 34976 RVA: 0x0023AAA5 File Offset: 0x00238CA5
		public static LocalizedString RejectStatusCode
		{
			get
			{
				return new LocalizedString("RejectStatusCode", "ExD1336A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002AB7 RID: 10935
		// (get) Token: 0x060088A1 RID: 34977 RVA: 0x0023AAC3 File Offset: 0x00238CC3
		public static LocalizedString ErrorMaxVersionAndFixVersionSpecified
		{
			get
			{
				return new LocalizedString("ErrorMaxVersionAndFixVersionSpecified", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060088A2 RID: 34978 RVA: 0x0023AAE4 File Offset: 0x00238CE4
		public static LocalizedString ErrorRemoteAccountPolicyNotFound(string policyDN)
		{
			return new LocalizedString("ErrorRemoteAccountPolicyNotFound", "ExD3B5BE", false, true, Strings.ResourceManager, new object[]
			{
				policyDN
			});
		}

		// Token: 0x17002AB8 RID: 10936
		// (get) Token: 0x060088A3 RID: 34979 RVA: 0x0023AB13 File Offset: 0x00238D13
		public static LocalizedString CasTransactionResultSuccess
		{
			get
			{
				return new LocalizedString("CasTransactionResultSuccess", "Ex4A94C1", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002AB9 RID: 10937
		// (get) Token: 0x060088A4 RID: 34980 RVA: 0x0023AB31 File Offset: 0x00238D31
		public static LocalizedString InstallFreeBusyFolderNoPublicFolderDatabase
		{
			get
			{
				return new LocalizedString("InstallFreeBusyFolderNoPublicFolderDatabase", "Ex744764", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060088A5 RID: 34981 RVA: 0x0023AB50 File Offset: 0x00238D50
		public static LocalizedString ConfirmSearchAdminAuditLogConfigTask(string org)
		{
			return new LocalizedString("ConfirmSearchAdminAuditLogConfigTask", "Ex3E3AA0", false, true, Strings.ResourceManager, new object[]
			{
				org
			});
		}

		// Token: 0x060088A6 RID: 34982 RVA: 0x0023AB80 File Offset: 0x00238D80
		public static LocalizedString ErrorAcceptedDomainExists(string name)
		{
			return new LocalizedString("ErrorAcceptedDomainExists", "Ex8BC2F5", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x060088A7 RID: 34983 RVA: 0x0023ABB0 File Offset: 0x00238DB0
		public static LocalizedString RecipientNotFoundException(string recipient)
		{
			return new LocalizedString("RecipientNotFoundException", "ExE610C8", false, true, Strings.ResourceManager, new object[]
			{
				recipient
			});
		}

		// Token: 0x17002ABA RID: 10938
		// (get) Token: 0x060088A8 RID: 34984 RVA: 0x0023ABDF File Offset: 0x00238DDF
		public static LocalizedString SetupComponentConfiguringSharedCacheService
		{
			get
			{
				return new LocalizedString("SetupComponentConfiguringSharedCacheService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002ABB RID: 10939
		// (get) Token: 0x060088A9 RID: 34985 RVA: 0x0023ABFD File Offset: 0x00238DFD
		public static LocalizedString VerboseSaveADServerSettings
		{
			get
			{
				return new LocalizedString("VerboseSaveADServerSettings", "Ex9141A3", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002ABC RID: 10940
		// (get) Token: 0x060088AA RID: 34986 RVA: 0x0023AC1B File Offset: 0x00238E1B
		public static LocalizedString ADAttributeCustomAttribute11
		{
			get
			{
				return new LocalizedString("ADAttributeCustomAttribute11", "Ex418CBF", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002ABD RID: 10941
		// (get) Token: 0x060088AB RID: 34987 RVA: 0x0023AC39 File Offset: 0x00238E39
		public static LocalizedString ADAttributeCustomAttribute15
		{
			get
			{
				return new LocalizedString("ADAttributeCustomAttribute15", "Ex086EC6", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060088AC RID: 34988 RVA: 0x0023AC58 File Offset: 0x00238E58
		public static LocalizedString ErrorUnableToAccessMessageCategoriesGenericMessage(string details)
		{
			return new LocalizedString("ErrorUnableToAccessMessageCategoriesGenericMessage", "ExE78EF6", false, true, Strings.ResourceManager, new object[]
			{
				details
			});
		}

		// Token: 0x060088AD RID: 34989 RVA: 0x0023AC88 File Offset: 0x00238E88
		public static LocalizedString FoundGlobalThrottlingPolicy(string name)
		{
			return new LocalizedString("FoundGlobalThrottlingPolicy", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x060088AE RID: 34990 RVA: 0x0023ACB8 File Offset: 0x00238EB8
		public static LocalizedString FederatedIdentityTypeMismatch(string authType, string rstIdentityType)
		{
			return new LocalizedString("FederatedIdentityTypeMismatch", "", false, false, Strings.ResourceManager, new object[]
			{
				authType,
				rstIdentityType
			});
		}

		// Token: 0x17002ABE RID: 10942
		// (get) Token: 0x060088AF RID: 34991 RVA: 0x0023ACEB File Offset: 0x00238EEB
		public static LocalizedString ErrorResetPasswordRequiresPassword
		{
			get
			{
				return new LocalizedString("ErrorResetPasswordRequiresPassword", "Ex9A3BB7", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002ABF RID: 10943
		// (get) Token: 0x060088B0 RID: 34992 RVA: 0x0023AD09 File Offset: 0x00238F09
		public static LocalizedString FailureMappingMdbGuidForGet
		{
			get
			{
				return new LocalizedString("FailureMappingMdbGuidForGet", "Ex5DC434", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060088B1 RID: 34993 RVA: 0x0023AD28 File Offset: 0x00238F28
		public static LocalizedString ErrorStoreMailboxNotFound(string identity, string mdb)
		{
			return new LocalizedString("ErrorStoreMailboxNotFound", "ExEEAFAE", false, true, Strings.ResourceManager, new object[]
			{
				identity,
				mdb
			});
		}

		// Token: 0x060088B2 RID: 34994 RVA: 0x0023AD5C File Offset: 0x00238F5C
		public static LocalizedString BadEnabledParameterException(string value)
		{
			return new LocalizedString("BadEnabledParameterException", "Ex8276CB", false, true, Strings.ResourceManager, new object[]
			{
				value
			});
		}

		// Token: 0x060088B3 RID: 34995 RVA: 0x0023AD8C File Offset: 0x00238F8C
		public static LocalizedString ConfirmationMessageSetMailboxDatabase(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetMailboxDatabase", "Ex16C063", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x060088B4 RID: 34996 RVA: 0x0023ADBC File Offset: 0x00238FBC
		public static LocalizedString CasHealthCouldNotBuildTestUserName(string serverName)
		{
			return new LocalizedString("CasHealthCouldNotBuildTestUserName", "Ex2BF08B", false, true, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		// Token: 0x060088B5 RID: 34997 RVA: 0x0023ADEC File Offset: 0x00238FEC
		public static LocalizedString CalculatedNameRequiredForTT(string suffix)
		{
			return new LocalizedString("CalculatedNameRequiredForTT", "", false, false, Strings.ResourceManager, new object[]
			{
				suffix
			});
		}

		// Token: 0x060088B6 RID: 34998 RVA: 0x0023AE1C File Offset: 0x0023901C
		public static LocalizedString SmtpConnectivityNotTested(string results)
		{
			return new LocalizedString("SmtpConnectivityNotTested", "Ex793ADA", false, true, Strings.ResourceManager, new object[]
			{
				results
			});
		}

		// Token: 0x060088B7 RID: 34999 RVA: 0x0023AE4C File Offset: 0x0023904C
		public static LocalizedString InconsistentADError(string reason)
		{
			return new LocalizedString("InconsistentADError", "Ex5C243E", false, true, Strings.ResourceManager, new object[]
			{
				reason
			});
		}

		// Token: 0x060088B8 RID: 35000 RVA: 0x0023AE7C File Offset: 0x0023907C
		public static LocalizedString ErrorTrustAlreadyInUse(string trust, string partition)
		{
			return new LocalizedString("ErrorTrustAlreadyInUse", "", false, false, Strings.ResourceManager, new object[]
			{
				trust,
				partition
			});
		}

		// Token: 0x17002AC0 RID: 10944
		// (get) Token: 0x060088B9 RID: 35001 RVA: 0x0023AEAF File Offset: 0x002390AF
		public static LocalizedString ScenarioAutoDiscoverOutlookProvider
		{
			get
			{
				return new LocalizedString("ScenarioAutoDiscoverOutlookProvider", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060088BA RID: 35002 RVA: 0x0023AED0 File Offset: 0x002390D0
		public static LocalizedString CannotAcquireSTSClientForUser(string user, string organization, string errorCode, string errorSubcode)
		{
			return new LocalizedString("CannotAcquireSTSClientForUser", "", false, false, Strings.ResourceManager, new object[]
			{
				user,
				organization,
				errorCode,
				errorSubcode
			});
		}

		// Token: 0x17002AC1 RID: 10945
		// (get) Token: 0x060088BB RID: 35003 RVA: 0x0023AF0B File Offset: 0x0023910B
		public static LocalizedString ImportCertificateUntrustedRoot
		{
			get
			{
				return new LocalizedString("ImportCertificateUntrustedRoot", "ExBC242D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002AC2 RID: 10946
		// (get) Token: 0x060088BC RID: 35004 RVA: 0x0023AF29 File Offset: 0x00239129
		public static LocalizedString AccountPrivilegeWarning
		{
			get
			{
				return new LocalizedString("AccountPrivilegeWarning", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060088BD RID: 35005 RVA: 0x0023AF48 File Offset: 0x00239148
		public static LocalizedString ErrorParameterNotSupportedForMigrationType(string parameterName, string migrationType)
		{
			return new LocalizedString("ErrorParameterNotSupportedForMigrationType", "", false, false, Strings.ResourceManager, new object[]
			{
				parameterName,
				migrationType
			});
		}

		// Token: 0x17002AC3 RID: 10947
		// (get) Token: 0x060088BE RID: 35006 RVA: 0x0023AF7B File Offset: 0x0023917B
		public static LocalizedString InterceptorWarningCustomResponseCodeTextWithoutRejectAction
		{
			get
			{
				return new LocalizedString("InterceptorWarningCustomResponseCodeTextWithoutRejectAction", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060088BF RID: 35007 RVA: 0x0023AF9C File Offset: 0x0023919C
		public static LocalizedString WarningMetadataNotOverHttps(string url)
		{
			return new LocalizedString("WarningMetadataNotOverHttps", "", false, false, Strings.ResourceManager, new object[]
			{
				url
			});
		}

		// Token: 0x17002AC4 RID: 10948
		// (get) Token: 0x060088C0 RID: 35008 RVA: 0x0023AFCB File Offset: 0x002391CB
		public static LocalizedString SetupProgressCreateOrgContainer
		{
			get
			{
				return new LocalizedString("SetupProgressCreateOrgContainer", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002AC5 RID: 10949
		// (get) Token: 0x060088C1 RID: 35009 RVA: 0x0023AFE9 File Offset: 0x002391E9
		public static LocalizedString SetupProgressConfiguringDefaultTransportAgents
		{
			get
			{
				return new LocalizedString("SetupProgressConfiguringDefaultTransportAgents", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002AC6 RID: 10950
		// (get) Token: 0x060088C2 RID: 35010 RVA: 0x0023B007 File Offset: 0x00239207
		public static LocalizedString MessageTypeEncrypted
		{
			get
			{
				return new LocalizedString("MessageTypeEncrypted", "ExA82F28", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060088C3 RID: 35011 RVA: 0x0023B028 File Offset: 0x00239228
		public static LocalizedString MdbServerNotFoundException(string database)
		{
			return new LocalizedString("MdbServerNotFoundException", "ExFB3375", false, true, Strings.ResourceManager, new object[]
			{
				database
			});
		}

		// Token: 0x17002AC7 RID: 10951
		// (get) Token: 0x060088C4 RID: 35012 RVA: 0x0023B057 File Offset: 0x00239257
		public static LocalizedString WordIsWhiteSpaceOrContainsWhiteSpacePrefixOrSuffix
		{
			get
			{
				return new LocalizedString("WordIsWhiteSpaceOrContainsWhiteSpacePrefixOrSuffix", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002AC8 RID: 10952
		// (get) Token: 0x060088C5 RID: 35013 RVA: 0x0023B075 File Offset: 0x00239275
		public static LocalizedString NotPublicFolderDatabase
		{
			get
			{
				return new LocalizedString("NotPublicFolderDatabase", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002AC9 RID: 10953
		// (get) Token: 0x060088C6 RID: 35014 RVA: 0x0023B093 File Offset: 0x00239293
		public static LocalizedString ErrorPrecannedRoleAndSpecificPermission
		{
			get
			{
				return new LocalizedString("ErrorPrecannedRoleAndSpecificPermission", "ExCDE661", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002ACA RID: 10954
		// (get) Token: 0x060088C7 RID: 35015 RVA: 0x0023B0B1 File Offset: 0x002392B1
		public static LocalizedString OwaInvalidFormsAuthenticationConfiguration
		{
			get
			{
				return new LocalizedString("OwaInvalidFormsAuthenticationConfiguration", "Ex1304CE", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060088C8 RID: 35016 RVA: 0x0023B0D0 File Offset: 0x002392D0
		public static LocalizedString ErrorCannotImportPstToPublicFolderMailbox(string mailbox)
		{
			return new LocalizedString("ErrorCannotImportPstToPublicFolderMailbox", "", false, false, Strings.ResourceManager, new object[]
			{
				mailbox
			});
		}

		// Token: 0x060088C9 RID: 35017 RVA: 0x0023B100 File Offset: 0x00239300
		public static LocalizedString ErrorUserAlreadyInTargetDatabase(string mailbox, string database)
		{
			return new LocalizedString("ErrorUserAlreadyInTargetDatabase", "Ex898995", false, true, Strings.ResourceManager, new object[]
			{
				mailbox,
				database
			});
		}

		// Token: 0x060088CA RID: 35018 RVA: 0x0023B134 File Offset: 0x00239334
		public static LocalizedString VerboseOpenFirewallPort(string port, string protocol)
		{
			return new LocalizedString("VerboseOpenFirewallPort", "ExD469BE", false, true, Strings.ResourceManager, new object[]
			{
				port,
				protocol
			});
		}

		// Token: 0x060088CB RID: 35019 RVA: 0x0023B168 File Offset: 0x00239368
		public static LocalizedString ConfirmationMessageClearAutoTags(string Identity)
		{
			return new LocalizedString("ConfirmationMessageClearAutoTags", "Ex4BB2F3", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x060088CC RID: 35020 RVA: 0x0023B198 File Offset: 0x00239398
		public static LocalizedString messageHttpRequestTimeoutException(string httpRequest, string statusCode)
		{
			return new LocalizedString("messageHttpRequestTimeoutException", "", false, false, Strings.ResourceManager, new object[]
			{
				httpRequest,
				statusCode
			});
		}

		// Token: 0x060088CD RID: 35021 RVA: 0x0023B1CC File Offset: 0x002393CC
		public static LocalizedString ConfirmationMessageRemoveEdgeSyncEhfConnector(string id)
		{
			return new LocalizedString("ConfirmationMessageRemoveEdgeSyncEhfConnector", "Ex71D896", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x060088CE RID: 35022 RVA: 0x0023B1FC File Offset: 0x002393FC
		public static LocalizedString ErrorFailedToMountDatabase(string databaseId, string errorMessage)
		{
			return new LocalizedString("ErrorFailedToMountDatabase", "ExCCD9CE", false, true, Strings.ResourceManager, new object[]
			{
				databaseId,
				errorMessage
			});
		}

		// Token: 0x060088CF RID: 35023 RVA: 0x0023B230 File Offset: 0x00239430
		public static LocalizedString InformationQueryExpression(string expresson)
		{
			return new LocalizedString("InformationQueryExpression", "", false, false, Strings.ResourceManager, new object[]
			{
				expresson
			});
		}

		// Token: 0x060088D0 RID: 35024 RVA: 0x0023B260 File Offset: 0x00239460
		public static LocalizedString DagTaskRemovingServerFromDag(string serverName, string dagName)
		{
			return new LocalizedString("DagTaskRemovingServerFromDag", "", false, false, Strings.ResourceManager, new object[]
			{
				serverName,
				dagName
			});
		}

		// Token: 0x17002ACB RID: 10955
		// (get) Token: 0x060088D1 RID: 35025 RVA: 0x0023B293 File Offset: 0x00239493
		public static LocalizedString ErrorQuotaOnDefaultFolder
		{
			get
			{
				return new LocalizedString("ErrorQuotaOnDefaultFolder", "ExDB74F2", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060088D2 RID: 35026 RVA: 0x0023B2B4 File Offset: 0x002394B4
		public static LocalizedString DatabaseException(int number, string error)
		{
			return new LocalizedString("DatabaseException", "", false, false, Strings.ResourceManager, new object[]
			{
				number,
				error
			});
		}

		// Token: 0x060088D3 RID: 35027 RVA: 0x0023B2EC File Offset: 0x002394EC
		public static LocalizedString InvalidCharacterInDisplayName(char invalidCharacter)
		{
			return new LocalizedString("InvalidCharacterInDisplayName", "Ex15E85D", false, true, Strings.ResourceManager, new object[]
			{
				invalidCharacter
			});
		}

		// Token: 0x060088D4 RID: 35028 RVA: 0x0023B320 File Offset: 0x00239520
		public static LocalizedString MtrtMessageSpam(string scl)
		{
			return new LocalizedString("MtrtMessageSpam", "", false, false, Strings.ResourceManager, new object[]
			{
				scl
			});
		}

		// Token: 0x060088D5 RID: 35029 RVA: 0x0023B350 File Offset: 0x00239550
		public static LocalizedString WarningFailedToSetPolicy(string detailError)
		{
			return new LocalizedString("WarningFailedToSetPolicy", "ExB7643A", false, true, Strings.ResourceManager, new object[]
			{
				detailError
			});
		}

		// Token: 0x060088D6 RID: 35030 RVA: 0x0023B380 File Offset: 0x00239580
		public static LocalizedString ErrorELCFolderExist(string folderName)
		{
			return new LocalizedString("ErrorELCFolderExist", "Ex1DC66E", false, true, Strings.ResourceManager, new object[]
			{
				folderName
			});
		}

		// Token: 0x060088D7 RID: 35031 RVA: 0x0023B3B0 File Offset: 0x002395B0
		public static LocalizedString ReplayServiceNotRunning(string machineName)
		{
			return new LocalizedString("ReplayServiceNotRunning", "ExC706D5", false, true, Strings.ResourceManager, new object[]
			{
				machineName
			});
		}

		// Token: 0x060088D8 RID: 35032 RVA: 0x0023B3E0 File Offset: 0x002395E0
		public static LocalizedString OwaAttachmentTypeInvalidCharacter(char badChar, int charIndex, string badAttachmentType, int attachmentTypeIndex, string propertyName)
		{
			return new LocalizedString("OwaAttachmentTypeInvalidCharacter", "Ex635456", false, true, Strings.ResourceManager, new object[]
			{
				badChar,
				charIndex,
				badAttachmentType,
				attachmentTypeIndex,
				propertyName
			});
		}

		// Token: 0x060088D9 RID: 35033 RVA: 0x0023B430 File Offset: 0x00239630
		public static LocalizedString FederatedDomainofUserNotOrgFederated(string user)
		{
			return new LocalizedString("FederatedDomainofUserNotOrgFederated", "", false, false, Strings.ResourceManager, new object[]
			{
				user
			});
		}

		// Token: 0x060088DA RID: 35034 RVA: 0x0023B460 File Offset: 0x00239660
		public static LocalizedString DagTaskUpdatedAdDagStartedStoppedMembership(string serverName, string dagName)
		{
			return new LocalizedString("DagTaskUpdatedAdDagStartedStoppedMembership", "", false, false, Strings.ResourceManager, new object[]
			{
				serverName,
				dagName
			});
		}

		// Token: 0x17002ACC RID: 10956
		// (get) Token: 0x060088DB RID: 35035 RVA: 0x0023B493 File Offset: 0x00239693
		public static LocalizedString ADAttributeEmail
		{
			get
			{
				return new LocalizedString("ADAttributeEmail", "Ex7D5A45", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002ACD RID: 10957
		// (get) Token: 0x060088DC RID: 35036 RVA: 0x0023B4B1 File Offset: 0x002396B1
		public static LocalizedString WarningFederatedOrgIdNotEnabled
		{
			get
			{
				return new LocalizedString("WarningFederatedOrgIdNotEnabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060088DD RID: 35037 RVA: 0x0023B4D0 File Offset: 0x002396D0
		public static LocalizedString ErrorSingleDatabaseCopyRemove(string db, string server)
		{
			return new LocalizedString("ErrorSingleDatabaseCopyRemove", "Ex85F83A", false, true, Strings.ResourceManager, new object[]
			{
				db,
				server
			});
		}

		// Token: 0x060088DE RID: 35038 RVA: 0x0023B504 File Offset: 0x00239704
		public static LocalizedString TestSearchMapiError(string MDB, string error)
		{
			return new LocalizedString("TestSearchMapiError", "Ex7F970E", false, true, Strings.ResourceManager, new object[]
			{
				MDB,
				error
			});
		}

		// Token: 0x060088DF RID: 35039 RVA: 0x0023B538 File Offset: 0x00239738
		public static LocalizedString ErrorSetScopeNeedHierarchicalRoleAssignment(string id, string assignmentId)
		{
			return new LocalizedString("ErrorSetScopeNeedHierarchicalRoleAssignment", "Ex4EB5FA", false, true, Strings.ResourceManager, new object[]
			{
				id,
				assignmentId
			});
		}

		// Token: 0x060088E0 RID: 35040 RVA: 0x0023B56C File Offset: 0x0023976C
		public static LocalizedString ErrorInvalidOperationOnLowestEap(string idEap)
		{
			return new LocalizedString("ErrorInvalidOperationOnLowestEap", "ExF376DE", false, true, Strings.ResourceManager, new object[]
			{
				idEap
			});
		}

		// Token: 0x060088E1 RID: 35041 RVA: 0x0023B59C File Offset: 0x0023979C
		public static LocalizedString ErrorTooManyRegexCharsInRuleCollection(int currentChars, long maxChars)
		{
			return new LocalizedString("ErrorTooManyRegexCharsInRuleCollection", "Ex0DC547", false, true, Strings.ResourceManager, new object[]
			{
				currentChars,
				maxChars
			});
		}

		// Token: 0x17002ACE RID: 10958
		// (get) Token: 0x060088E2 RID: 35042 RVA: 0x0023B5D9 File Offset: 0x002397D9
		public static LocalizedString SendingGuidInMailFrom
		{
			get
			{
				return new LocalizedString("SendingGuidInMailFrom", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002ACF RID: 10959
		// (get) Token: 0x060088E3 RID: 35043 RVA: 0x0023B5F7 File Offset: 0x002397F7
		public static LocalizedString Error_MultipleItemsFound
		{
			get
			{
				return new LocalizedString("Error_MultipleItemsFound", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060088E4 RID: 35044 RVA: 0x0023B618 File Offset: 0x00239818
		public static LocalizedString FailedToDkmProtectPrivateKey(Exception ex)
		{
			return new LocalizedString("FailedToDkmProtectPrivateKey", "", false, false, Strings.ResourceManager, new object[]
			{
				ex
			});
		}

		// Token: 0x060088E5 RID: 35045 RVA: 0x0023B648 File Offset: 0x00239848
		public static LocalizedString ErrorUnsupportedAuthMethodForMerges(string authMethod)
		{
			return new LocalizedString("ErrorUnsupportedAuthMethodForMerges", "ExD6B299", false, true, Strings.ResourceManager, new object[]
			{
				authMethod
			});
		}

		// Token: 0x060088E6 RID: 35046 RVA: 0x0023B678 File Offset: 0x00239878
		public static LocalizedString NotValidSecurityPrincipal(string id)
		{
			return new LocalizedString("NotValidSecurityPrincipal", "", false, false, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x060088E7 RID: 35047 RVA: 0x0023B6A8 File Offset: 0x002398A8
		public static LocalizedString ErrorRoleEntryParametersNotExistOnParent(string roleId, string entryName, string parameters)
		{
			return new LocalizedString("ErrorRoleEntryParametersNotExistOnParent", "ExE9FC28", false, true, Strings.ResourceManager, new object[]
			{
				roleId,
				entryName,
				parameters
			});
		}

		// Token: 0x17002AD0 RID: 10960
		// (get) Token: 0x060088E8 RID: 35048 RVA: 0x0023B6DF File Offset: 0x002398DF
		public static LocalizedString SetupComponentConfiguringMailboxPerfCounters
		{
			get
			{
				return new LocalizedString("SetupComponentConfiguringMailboxPerfCounters", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060088E9 RID: 35049 RVA: 0x0023B700 File Offset: 0x00239900
		public static LocalizedString ConfirmEnableExchangeCertificate(string thumbprint)
		{
			return new LocalizedString("ConfirmEnableExchangeCertificate", "Ex26BAA6", false, true, Strings.ResourceManager, new object[]
			{
				thumbprint
			});
		}

		// Token: 0x17002AD1 RID: 10961
		// (get) Token: 0x060088EA RID: 35050 RVA: 0x0023B72F File Offset: 0x0023992F
		public static LocalizedString SetupComponentConfiguringProtectedServiceHost
		{
			get
			{
				return new LocalizedString("SetupComponentConfiguringProtectedServiceHost", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060088EB RID: 35051 RVA: 0x0023B750 File Offset: 0x00239950
		public static LocalizedString ConfirmationMessageRemoveMigrationBatch(string batchName)
		{
			return new LocalizedString("ConfirmationMessageRemoveMigrationBatch", "", false, false, Strings.ResourceManager, new object[]
			{
				batchName
			});
		}

		// Token: 0x060088EC RID: 35052 RVA: 0x0023B780 File Offset: 0x00239980
		public static LocalizedString WritableRecipientNotUnique(string WritableRecipient)
		{
			return new LocalizedString("WritableRecipientNotUnique", "ExC8F980", false, true, Strings.ResourceManager, new object[]
			{
				WritableRecipient
			});
		}

		// Token: 0x17002AD2 RID: 10962
		// (get) Token: 0x060088ED RID: 35053 RVA: 0x0023B7AF File Offset: 0x002399AF
		public static LocalizedString ConversationsMailboxAlreadyDisabled
		{
			get
			{
				return new LocalizedString("ConversationsMailboxAlreadyDisabled", "Ex6A0A63", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060088EE RID: 35054 RVA: 0x0023B7D0 File Offset: 0x002399D0
		public static LocalizedString AddedTasksForComponent(int count, string component)
		{
			return new LocalizedString("AddedTasksForComponent", "Ex198780", false, true, Strings.ResourceManager, new object[]
			{
				count,
				component
			});
		}

		// Token: 0x060088EF RID: 35055 RVA: 0x0023B808 File Offset: 0x00239A08
		public static LocalizedString SuccessAddGlobalMonitoringOverride(string identity)
		{
			return new LocalizedString("SuccessAddGlobalMonitoringOverride", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x17002AD3 RID: 10963
		// (get) Token: 0x060088F0 RID: 35056 RVA: 0x0023B837 File Offset: 0x00239A37
		public static LocalizedString MapiSubmitSystemProbeId
		{
			get
			{
				return new LocalizedString("MapiSubmitSystemProbeId", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060088F1 RID: 35057 RVA: 0x0023B858 File Offset: 0x00239A58
		public static LocalizedString GetCopyStatusRpcQuery(string db, string server)
		{
			return new LocalizedString("GetCopyStatusRpcQuery", "Ex8BAE8D", false, true, Strings.ResourceManager, new object[]
			{
				db,
				server
			});
		}

		// Token: 0x17002AD4 RID: 10964
		// (get) Token: 0x060088F2 RID: 35058 RVA: 0x0023B88B File Offset: 0x00239A8B
		public static LocalizedString OutboundConnectorToRouteAcceptedDomainNotFound
		{
			get
			{
				return new LocalizedString("OutboundConnectorToRouteAcceptedDomainNotFound", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002AD5 RID: 10965
		// (get) Token: 0x060088F3 RID: 35059 RVA: 0x0023B8A9 File Offset: 0x00239AA9
		public static LocalizedString SetupProgressCreateRAPassignments
		{
			get
			{
				return new LocalizedString("SetupProgressCreateRAPassignments", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060088F4 RID: 35060 RVA: 0x0023B8C8 File Offset: 0x00239AC8
		public static LocalizedString RcrDatabaseFailoverMountNotAllowed(string database, string sourceMachine, string lastMountedMachine)
		{
			return new LocalizedString("RcrDatabaseFailoverMountNotAllowed", "ExB78FE9", false, true, Strings.ResourceManager, new object[]
			{
				database,
				sourceMachine,
				lastMountedMachine
			});
		}

		// Token: 0x17002AD6 RID: 10966
		// (get) Token: 0x060088F5 RID: 35061 RVA: 0x0023B8FF File Offset: 0x00239AFF
		public static LocalizedString ClassificationRuleCollectionIllegalScopedRemoveOperation
		{
			get
			{
				return new LocalizedString("ClassificationRuleCollectionIllegalScopedRemoveOperation", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060088F6 RID: 35062 RVA: 0x0023B920 File Offset: 0x00239B20
		public static LocalizedString ErrorInvalidParameterForPublicFolderRestore(string parameter)
		{
			return new LocalizedString("ErrorInvalidParameterForPublicFolderRestore", "", false, false, Strings.ResourceManager, new object[]
			{
				parameter
			});
		}

		// Token: 0x060088F7 RID: 35063 RVA: 0x0023B950 File Offset: 0x00239B50
		public static LocalizedString DagTaskSleepAfterClusterFormation(int secSleepAfterClusterFormation, string dagName, string serverName)
		{
			return new LocalizedString("DagTaskSleepAfterClusterFormation", "", false, false, Strings.ResourceManager, new object[]
			{
				secSleepAfterClusterFormation,
				dagName,
				serverName
			});
		}

		// Token: 0x060088F8 RID: 35064 RVA: 0x0023B98C File Offset: 0x00239B8C
		public static LocalizedString ConfirmationMessageRemoveExchangeUpgradeBucket(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveExchangeUpgradeBucket", "", false, false, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x060088F9 RID: 35065 RVA: 0x0023B9BC File Offset: 0x00239BBC
		public static LocalizedString IncompatibleGetTransportRuleParameters(string parameter1, string parameter2)
		{
			return new LocalizedString("IncompatibleGetTransportRuleParameters", "", false, false, Strings.ResourceManager, new object[]
			{
				parameter1,
				parameter2
			});
		}

		// Token: 0x17002AD7 RID: 10967
		// (get) Token: 0x060088FA RID: 35066 RVA: 0x0023B9EF File Offset: 0x00239BEF
		public static LocalizedString UninstallRecoveryActionArbiterServiceTask
		{
			get
			{
				return new LocalizedString("UninstallRecoveryActionArbiterServiceTask", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002AD8 RID: 10968
		// (get) Token: 0x060088FB RID: 35067 RVA: 0x0023BA0D File Offset: 0x00239C0D
		public static LocalizedString EnableContentIndexTask
		{
			get
			{
				return new LocalizedString("EnableContentIndexTask", "Ex0FFCE8", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060088FC RID: 35068 RVA: 0x0023BA2C File Offset: 0x00239C2C
		public static LocalizedString FormsAuthenticationIsEnabledAccessDeniedException(string metabasePath, int propertyID)
		{
			return new LocalizedString("FormsAuthenticationIsEnabledAccessDeniedException", "Ex2B7AFC", false, true, Strings.ResourceManager, new object[]
			{
				metabasePath,
				propertyID
			});
		}

		// Token: 0x060088FD RID: 35069 RVA: 0x0023BA64 File Offset: 0x00239C64
		public static LocalizedString ConfirmationMessageSetForeignConnector(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetForeignConnector", "Ex426023", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x060088FE RID: 35070 RVA: 0x0023BA94 File Offset: 0x00239C94
		public static LocalizedString ComplianceBindingNoError(string name)
		{
			return new LocalizedString("ComplianceBindingNoError", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x060088FF RID: 35071 RVA: 0x0023BAC4 File Offset: 0x00239CC4
		public static LocalizedString ConfirmationMessageSetGls(string entryType, string id)
		{
			return new LocalizedString("ConfirmationMessageSetGls", "", false, false, Strings.ResourceManager, new object[]
			{
				entryType,
				id
			});
		}

		// Token: 0x17002AD9 RID: 10969
		// (get) Token: 0x06008900 RID: 35072 RVA: 0x0023BAF7 File Offset: 0x00239CF7
		public static LocalizedString SuppressXAnonymousTlsEnabledOnEdge
		{
			get
			{
				return new LocalizedString("SuppressXAnonymousTlsEnabledOnEdge", "Ex731E4F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008901 RID: 35073 RVA: 0x0023BB18 File Offset: 0x00239D18
		public static LocalizedString ErrorUserNotHaveMailboxPlan(string id)
		{
			return new LocalizedString("ErrorUserNotHaveMailboxPlan", "Ex338B50", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x06008902 RID: 35074 RVA: 0x0023BB48 File Offset: 0x00239D48
		public static LocalizedString ConfirmationMessageNewManagementRoleAssignment(string Name, string Role, string RoleAssignee, string DelegationType, string RecipientWriteScope, string ConfigWriteScope)
		{
			return new LocalizedString("ConfirmationMessageNewManagementRoleAssignment", "ExD34E34", false, true, Strings.ResourceManager, new object[]
			{
				Name,
				Role,
				RoleAssignee,
				DelegationType,
				RecipientWriteScope,
				ConfigWriteScope
			});
		}

		// Token: 0x17002ADA RID: 10970
		// (get) Token: 0x06008903 RID: 35075 RVA: 0x0023BB8D File Offset: 0x00239D8D
		public static LocalizedString ReloadingMoveRequest
		{
			get
			{
				return new LocalizedString("ReloadingMoveRequest", "Ex3406D3", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008904 RID: 35076 RVA: 0x0023BBAC File Offset: 0x00239DAC
		public static LocalizedString ConfirmationMessageUpdateSystemAddressList(string Identity)
		{
			return new LocalizedString("ConfirmationMessageUpdateSystemAddressList", "Ex049FA1", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x17002ADB RID: 10971
		// (get) Token: 0x06008905 RID: 35077 RVA: 0x0023BBDB File Offset: 0x00239DDB
		public static LocalizedString SetupComponentMidFileCopyMailbox
		{
			get
			{
				return new LocalizedString("SetupComponentMidFileCopyMailbox", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002ADC RID: 10972
		// (get) Token: 0x06008906 RID: 35078 RVA: 0x0023BBF9 File Offset: 0x00239DF9
		public static LocalizedString ErrorOrganizationIsNotInUpgradeState
		{
			get
			{
				return new LocalizedString("ErrorOrganizationIsNotInUpgradeState", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002ADD RID: 10973
		// (get) Token: 0x06008907 RID: 35079 RVA: 0x0023BC17 File Offset: 0x00239E17
		public static LocalizedString AddressRewriteInvalidMapping
		{
			get
			{
				return new LocalizedString("AddressRewriteInvalidMapping", "Ex780D36", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002ADE RID: 10974
		// (get) Token: 0x06008908 RID: 35080 RVA: 0x0023BC35 File Offset: 0x00239E35
		public static LocalizedString DlpPolicyStateDescription
		{
			get
			{
				return new LocalizedString("DlpPolicyStateDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002ADF RID: 10975
		// (get) Token: 0x06008909 RID: 35081 RVA: 0x0023BC53 File Offset: 0x00239E53
		public static LocalizedString ErrorContentSettingAlreadyExist
		{
			get
			{
				return new LocalizedString("ErrorContentSettingAlreadyExist", "Ex3AD421", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600890A RID: 35082 RVA: 0x0023BC74 File Offset: 0x00239E74
		public static LocalizedString ErrorWMIException(string computerName)
		{
			return new LocalizedString("ErrorWMIException", "Ex9BA928", false, true, Strings.ResourceManager, new object[]
			{
				computerName
			});
		}

		// Token: 0x0600890B RID: 35083 RVA: 0x0023BCA4 File Offset: 0x00239EA4
		public static LocalizedString VerboseFailedCreateDirectory(string server, string dir, string error)
		{
			return new LocalizedString("VerboseFailedCreateDirectory", "ExC7818F", false, true, Strings.ResourceManager, new object[]
			{
				server,
				dir,
				error
			});
		}

		// Token: 0x0600890C RID: 35084 RVA: 0x0023BCDC File Offset: 0x00239EDC
		public static LocalizedString ReadDeletedObjectsPermissionDeniedException(string msg)
		{
			return new LocalizedString("ReadDeletedObjectsPermissionDeniedException", "Ex5F6B20", false, true, Strings.ResourceManager, new object[]
			{
				msg
			});
		}

		// Token: 0x17002AE0 RID: 10976
		// (get) Token: 0x0600890D RID: 35085 RVA: 0x0023BD0B File Offset: 0x00239F0B
		public static LocalizedString SetupComponentPostUpdatingServicePlan
		{
			get
			{
				return new LocalizedString("SetupComponentPostUpdatingServicePlan", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002AE1 RID: 10977
		// (get) Token: 0x0600890E RID: 35086 RVA: 0x0023BD29 File Offset: 0x00239F29
		public static LocalizedString ErrorSetMailboxCrossVersionRehoming
		{
			get
			{
				return new LocalizedString("ErrorSetMailboxCrossVersionRehoming", "ExDCB577", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002AE2 RID: 10978
		// (get) Token: 0x0600890F RID: 35087 RVA: 0x0023BD47 File Offset: 0x00239F47
		public static LocalizedString TransitionInfoLabelLastFailureTransition
		{
			get
			{
				return new LocalizedString("TransitionInfoLabelLastFailureTransition", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002AE3 RID: 10979
		// (get) Token: 0x06008910 RID: 35088 RVA: 0x0023BD65 File Offset: 0x00239F65
		public static LocalizedString AutoGroupManagedByCannotBeEmpty
		{
			get
			{
				return new LocalizedString("AutoGroupManagedByCannotBeEmpty", "Ex774CDD", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002AE4 RID: 10980
		// (get) Token: 0x06008911 RID: 35089 RVA: 0x0023BD83 File Offset: 0x00239F83
		public static LocalizedString ConfirmationMessageSetLoadBalanceSettings
		{
			get
			{
				return new LocalizedString("ConfirmationMessageSetLoadBalanceSettings", "ExA7CDD9", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008912 RID: 35090 RVA: 0x0023BDA4 File Offset: 0x00239FA4
		public static LocalizedString ConfirmationMessageRemoveMalwareFilterPolicy(string identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveMalwareFilterPolicy", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x06008913 RID: 35091 RVA: 0x0023BDD4 File Offset: 0x00239FD4
		public static LocalizedString ConfirmationMessageRemoveOutlookProtectionRule(string identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveOutlookProtectionRule", "ExB8EC89", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x06008914 RID: 35092 RVA: 0x0023BE04 File Offset: 0x0023A004
		public static LocalizedString SeederCancelDbSeedRpcBegin(string taskName, string targetMachine, string dbName)
		{
			return new LocalizedString("SeederCancelDbSeedRpcBegin", "", false, false, Strings.ResourceManager, new object[]
			{
				taskName,
				targetMachine,
				dbName
			});
		}

		// Token: 0x06008915 RID: 35093 RVA: 0x0023BE3C File Offset: 0x0023A03C
		public static LocalizedString ConfirmationMessageRemoveCountryList(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveCountryList", "ExBA07D1", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x17002AE5 RID: 10981
		// (get) Token: 0x06008916 RID: 35094 RVA: 0x0023BE6B File Offset: 0x0023A06B
		public static LocalizedString ProductKeyRestartWarning
		{
			get
			{
				return new LocalizedString("ProductKeyRestartWarning", "Ex5CF650", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008917 RID: 35095 RVA: 0x0023BE8C File Offset: 0x0023A08C
		public static LocalizedString ConfirmationMessageRemoveIPBlockListEntry(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveIPBlockListEntry", "Ex67FF70", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x06008918 RID: 35096 RVA: 0x0023BEBC File Offset: 0x0023A0BC
		public static LocalizedString SetLiveFedUriReserveResponse(string domain)
		{
			return new LocalizedString("SetLiveFedUriReserveResponse", "ExAA4358", false, true, Strings.ResourceManager, new object[]
			{
				domain
			});
		}

		// Token: 0x17002AE6 RID: 10982
		// (get) Token: 0x06008919 RID: 35097 RVA: 0x0023BEEB File Offset: 0x0023A0EB
		public static LocalizedString MailboxParameterNotSpecified
		{
			get
			{
				return new LocalizedString("MailboxParameterNotSpecified", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600891A RID: 35098 RVA: 0x0023BF0C File Offset: 0x0023A10C
		public static LocalizedString InvalidMacroName(string invalidMacroName)
		{
			return new LocalizedString("InvalidMacroName", "ExCF0679", false, true, Strings.ResourceManager, new object[]
			{
				invalidMacroName
			});
		}

		// Token: 0x0600891B RID: 35099 RVA: 0x0023BF3C File Offset: 0x0023A13C
		public static LocalizedString ErrorRemoveGlobalAddressListWithAssociatedAddressBookPolicies(string name)
		{
			return new LocalizedString("ErrorRemoveGlobalAddressListWithAssociatedAddressBookPolicies", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x0600891C RID: 35100 RVA: 0x0023BF6C File Offset: 0x0023A16C
		public static LocalizedString WarningMultiSiteReplicationFailed(string database, string sitesFailedToContact)
		{
			return new LocalizedString("WarningMultiSiteReplicationFailed", "Ex5C0734", false, true, Strings.ResourceManager, new object[]
			{
				database,
				sitesFailedToContact
			});
		}

		// Token: 0x17002AE7 RID: 10983
		// (get) Token: 0x0600891D RID: 35101 RVA: 0x0023BF9F File Offset: 0x0023A19F
		public static LocalizedString CasHealthEasScenarioDirectPushAndSync
		{
			get
			{
				return new LocalizedString("CasHealthEasScenarioDirectPushAndSync", "ExB129EB", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600891E RID: 35102 RVA: 0x0023BFC0 File Offset: 0x0023A1C0
		public static LocalizedString OutlookProtectionRuleRmsTemplateNotFound(string name)
		{
			return new LocalizedString("OutlookProtectionRuleRmsTemplateNotFound", "Ex34DA98", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x17002AE8 RID: 10984
		// (get) Token: 0x0600891F RID: 35103 RVA: 0x0023BFEF File Offset: 0x0023A1EF
		public static LocalizedString SetupProgressRegisterCmdletExtensionAgents
		{
			get
			{
				return new LocalizedString("SetupProgressRegisterCmdletExtensionAgents", "ExD9AB4B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008920 RID: 35104 RVA: 0x0023C010 File Offset: 0x0023A210
		public static LocalizedString WarnAdministratorToRestartService(string serverName)
		{
			return new LocalizedString("WarnAdministratorToRestartService", "", false, false, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		// Token: 0x06008921 RID: 35105 RVA: 0x0023C040 File Offset: 0x0023A240
		public static LocalizedString Error_SentRepresentingChanged(string originalValue, string newValue)
		{
			return new LocalizedString("Error_SentRepresentingChanged", "", false, false, Strings.ResourceManager, new object[]
			{
				originalValue,
				newValue
			});
		}

		// Token: 0x06008922 RID: 35106 RVA: 0x0023C074 File Offset: 0x0023A274
		public static LocalizedString DatabasesAvailabilityCheckFailed(string nodeName, string error)
		{
			return new LocalizedString("DatabasesAvailabilityCheckFailed", "", false, false, Strings.ResourceManager, new object[]
			{
				nodeName,
				error
			});
		}

		// Token: 0x06008923 RID: 35107 RVA: 0x0023C0A8 File Offset: 0x0023A2A8
		public static LocalizedString LegacyPermissionsDomainNotReachableWarning(string dom)
		{
			return new LocalizedString("LegacyPermissionsDomainNotReachableWarning", "", false, false, Strings.ResourceManager, new object[]
			{
				dom
			});
		}

		// Token: 0x06008924 RID: 35108 RVA: 0x0023C0D8 File Offset: 0x0023A2D8
		public static LocalizedString ClassificationRuleCollectionDistinctFunctionsExceedLimit(int distinctFuncsLimit, string offendingRuleIds)
		{
			return new LocalizedString("ClassificationRuleCollectionDistinctFunctionsExceedLimit", "", false, false, Strings.ResourceManager, new object[]
			{
				distinctFuncsLimit,
				offendingRuleIds
			});
		}

		// Token: 0x06008925 RID: 35109 RVA: 0x0023C110 File Offset: 0x0023A310
		public static LocalizedString FaildToCreateFolder(string path)
		{
			return new LocalizedString("FaildToCreateFolder", "ExE18819", false, true, Strings.ResourceManager, new object[]
			{
				path
			});
		}

		// Token: 0x06008926 RID: 35110 RVA: 0x0023C140 File Offset: 0x0023A340
		public static LocalizedString MismatchedSTS(string localTokenIssuerUri, string remoteTokenIssuerUris)
		{
			return new LocalizedString("MismatchedSTS", "", false, false, Strings.ResourceManager, new object[]
			{
				localTokenIssuerUri,
				remoteTokenIssuerUris
			});
		}

		// Token: 0x06008927 RID: 35111 RVA: 0x0023C174 File Offset: 0x0023A374
		public static LocalizedString ConfirmationMessageNewMservEntry(string id)
		{
			return new LocalizedString("ConfirmationMessageNewMservEntry", "", false, false, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x06008928 RID: 35112 RVA: 0x0023C1A4 File Offset: 0x0023A3A4
		public static LocalizedString ErrorPortalTextBig(int size)
		{
			return new LocalizedString("ErrorPortalTextBig", "", false, false, Strings.ResourceManager, new object[]
			{
				size
			});
		}

		// Token: 0x06008929 RID: 35113 RVA: 0x0023C1D8 File Offset: 0x0023A3D8
		public static LocalizedString ConfirmationMessageRemoveCompletedMoveRequest(string identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveCompletedMoveRequest", "Ex89DDC1", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x0600892A RID: 35114 RVA: 0x0023C208 File Offset: 0x0023A408
		public static LocalizedString ErrorCannotMovePublicFolderMailboxesCrossForestOrCrossPremise(string mailbox)
		{
			return new LocalizedString("ErrorCannotMovePublicFolderMailboxesCrossForestOrCrossPremise", "", false, false, Strings.ResourceManager, new object[]
			{
				mailbox
			});
		}

		// Token: 0x0600892B RID: 35115 RVA: 0x0023C238 File Offset: 0x0023A438
		public static LocalizedString ServerVersionNull(string server, string rulename)
		{
			return new LocalizedString("ServerVersionNull", "ExB15B6D", false, true, Strings.ResourceManager, new object[]
			{
				server,
				rulename
			});
		}

		// Token: 0x0600892C RID: 35116 RVA: 0x0023C26C File Offset: 0x0023A46C
		public static LocalizedString ExchangeUpgradeBucketTargetIncludedInSource(string source, string target)
		{
			return new LocalizedString("ExchangeUpgradeBucketTargetIncludedInSource", "", false, false, Strings.ResourceManager, new object[]
			{
				source,
				target
			});
		}

		// Token: 0x17002AE9 RID: 10985
		// (get) Token: 0x0600892D RID: 35117 RVA: 0x0023C29F File Offset: 0x0023A49F
		public static LocalizedString MoveStatusWarning
		{
			get
			{
				return new LocalizedString("MoveStatusWarning", "Ex612C20", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600892E RID: 35118 RVA: 0x0023C2C0 File Offset: 0x0023A4C0
		public static LocalizedString DagTaskClusteringMustBeInstalledAndRunningException(string serverName)
		{
			return new LocalizedString("DagTaskClusteringMustBeInstalledAndRunningException", "", false, false, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		// Token: 0x17002AEA RID: 10986
		// (get) Token: 0x0600892F RID: 35119 RVA: 0x0023C2EF File Offset: 0x0023A4EF
		public static LocalizedString SetupComponentStartingBridgeheadServices
		{
			get
			{
				return new LocalizedString("SetupComponentStartingBridgeheadServices", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008930 RID: 35120 RVA: 0x0023C310 File Offset: 0x0023A510
		public static LocalizedString ErrorCannotModifyRequestAlreadyCompleting(string name)
		{
			return new LocalizedString("ErrorCannotModifyRequestAlreadyCompleting", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x17002AEB RID: 10987
		// (get) Token: 0x06008931 RID: 35121 RVA: 0x0023C33F File Offset: 0x0023A53F
		public static LocalizedString ClockOutofSync
		{
			get
			{
				return new LocalizedString("ClockOutofSync", "ExDC1CDD", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008932 RID: 35122 RVA: 0x0023C360 File Offset: 0x0023A560
		public static LocalizedString ErrorBadItemLimitAlreadyExceededNew(string name, int encountered, string newlimit)
		{
			return new LocalizedString("ErrorBadItemLimitAlreadyExceededNew", "Ex5B2DF4", false, true, Strings.ResourceManager, new object[]
			{
				name,
				encountered,
				newlimit
			});
		}

		// Token: 0x06008933 RID: 35123 RVA: 0x0023C39C File Offset: 0x0023A59C
		public static LocalizedString ErrorLiveDomainServicesAccess(string message)
		{
			return new LocalizedString("ErrorLiveDomainServicesAccess", "ExA4C83A", false, true, Strings.ResourceManager, new object[]
			{
				message
			});
		}

		// Token: 0x06008934 RID: 35124 RVA: 0x0023C3CC File Offset: 0x0023A5CC
		public static LocalizedString VerboseSyncMailboxesWithDS(string id, string server)
		{
			return new LocalizedString("VerboseSyncMailboxesWithDS", "Ex733796", false, true, Strings.ResourceManager, new object[]
			{
				id,
				server
			});
		}

		// Token: 0x06008935 RID: 35125 RVA: 0x0023C400 File Offset: 0x0023A600
		public static LocalizedString ErrorTeamMailboxUserNotResolved(string users)
		{
			return new LocalizedString("ErrorTeamMailboxUserNotResolved", "", false, false, Strings.ResourceManager, new object[]
			{
				users
			});
		}

		// Token: 0x17002AEC RID: 10988
		// (get) Token: 0x06008936 RID: 35126 RVA: 0x0023C42F File Offset: 0x0023A62F
		public static LocalizedString ErrorSharePointUrlDoesNotMatchPartnerApplication
		{
			get
			{
				return new LocalizedString("ErrorSharePointUrlDoesNotMatchPartnerApplication", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008937 RID: 35127 RVA: 0x0023C450 File Offset: 0x0023A650
		public static LocalizedString ApplyingHoldSettings(string searchName)
		{
			return new LocalizedString("ApplyingHoldSettings", "", false, false, Strings.ResourceManager, new object[]
			{
				searchName
			});
		}

		// Token: 0x06008938 RID: 35128 RVA: 0x0023C480 File Offset: 0x0023A680
		public static LocalizedString AdminGroupCouldNotBeRead(string id)
		{
			return new LocalizedString("AdminGroupCouldNotBeRead", "ExA32DA2", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x17002AED RID: 10989
		// (get) Token: 0x06008939 RID: 35129 RVA: 0x0023C4AF File Offset: 0x0023A6AF
		public static LocalizedString MessageTypeApprovalRequest
		{
			get
			{
				return new LocalizedString("MessageTypeApprovalRequest", "ExE8DD65", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600893A RID: 35130 RVA: 0x0023C4D0 File Offset: 0x0023A6D0
		public static LocalizedString ChangeMFLFile(string filePath, string fromLCID, string toLCID)
		{
			return new LocalizedString("ChangeMFLFile", "Ex4D1D89", false, true, Strings.ResourceManager, new object[]
			{
				filePath,
				fromLCID,
				toLCID
			});
		}

		// Token: 0x0600893B RID: 35131 RVA: 0x0023C508 File Offset: 0x0023A708
		public static LocalizedString ErrorSuspendWhenReadyToCompleteNotSupported(string name)
		{
			return new LocalizedString("ErrorSuspendWhenReadyToCompleteNotSupported", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x17002AEE RID: 10990
		// (get) Token: 0x0600893C RID: 35132 RVA: 0x0023C537 File Offset: 0x0023A737
		public static LocalizedString RecoveryActionArbiterServiceDisplayName
		{
			get
			{
				return new LocalizedString("RecoveryActionArbiterServiceDisplayName", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600893D RID: 35133 RVA: 0x0023C558 File Offset: 0x0023A758
		public static LocalizedString RequestedVersionIsLowerThanCurrentVersion(int currentVersion)
		{
			return new LocalizedString("RequestedVersionIsLowerThanCurrentVersion", "", false, false, Strings.ResourceManager, new object[]
			{
				currentVersion
			});
		}

		// Token: 0x0600893E RID: 35134 RVA: 0x0023C58C File Offset: 0x0023A78C
		public static LocalizedString VerboseTestEwsFromAutoDiscover(string url)
		{
			return new LocalizedString("VerboseTestEwsFromAutoDiscover", "", false, false, Strings.ResourceManager, new object[]
			{
				url
			});
		}

		// Token: 0x17002AEF RID: 10991
		// (get) Token: 0x0600893F RID: 35135 RVA: 0x0023C5BB File Offset: 0x0023A7BB
		public static LocalizedString PartitionIdRequiredForMultipleOrgSearch
		{
			get
			{
				return new LocalizedString("PartitionIdRequiredForMultipleOrgSearch", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008940 RID: 35136 RVA: 0x0023C5DC File Offset: 0x0023A7DC
		public static LocalizedString ErrorFailedOnMemberHasMailbox(string memberName, string message)
		{
			return new LocalizedString("ErrorFailedOnMemberHasMailbox", "ExBCAEA9", false, true, Strings.ResourceManager, new object[]
			{
				memberName,
				message
			});
		}

		// Token: 0x17002AF0 RID: 10992
		// (get) Token: 0x06008941 RID: 35137 RVA: 0x0023C60F File Offset: 0x0023A80F
		public static LocalizedString ErrorDirectoryNotEmpty
		{
			get
			{
				return new LocalizedString("ErrorDirectoryNotEmpty", "Ex48C62B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008942 RID: 35138 RVA: 0x0023C630 File Offset: 0x0023A830
		public static LocalizedString ErrorCannotUnsetDowngradedExchangeServerAuthIfReceiveConnectorHasSuppressXAnonmyousTlsSet(string connector)
		{
			return new LocalizedString("ErrorCannotUnsetDowngradedExchangeServerAuthIfReceiveConnectorHasSuppressXAnonmyousTlsSet", "Ex67E8ED", false, true, Strings.ResourceManager, new object[]
			{
				connector
			});
		}

		// Token: 0x06008943 RID: 35139 RVA: 0x0023C660 File Offset: 0x0023A860
		public static LocalizedString ErrorFullSyncInProgress(string orgId)
		{
			return new LocalizedString("ErrorFullSyncInProgress", "Ex86280B", false, true, Strings.ResourceManager, new object[]
			{
				orgId
			});
		}

		// Token: 0x06008944 RID: 35140 RVA: 0x0023C690 File Offset: 0x0023A890
		public static LocalizedString CasHealthTransactionWarnings(string detailedInformation)
		{
			return new LocalizedString("CasHealthTransactionWarnings", "Ex2DA1F6", false, true, Strings.ResourceManager, new object[]
			{
				detailedInformation
			});
		}

		// Token: 0x06008945 RID: 35141 RVA: 0x0023C6C0 File Offset: 0x0023A8C0
		public static LocalizedString ConfirmationMessageRemoveRemoteMailbox(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveRemoteMailbox", "ExE395AC", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x17002AF1 RID: 10993
		// (get) Token: 0x06008946 RID: 35142 RVA: 0x0023C6EF File Offset: 0x0023A8EF
		public static LocalizedString MigrationNeutralCultureIsInvalid
		{
			get
			{
				return new LocalizedString("MigrationNeutralCultureIsInvalid", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008947 RID: 35143 RVA: 0x0023C710 File Offset: 0x0023A910
		public static LocalizedString InterceptorErrorConditionInvalidFormat(string condition)
		{
			return new LocalizedString("InterceptorErrorConditionInvalidFormat", "", false, false, Strings.ResourceManager, new object[]
			{
				condition
			});
		}

		// Token: 0x06008948 RID: 35144 RVA: 0x0023C740 File Offset: 0x0023A940
		public static LocalizedString UMCallAnsweringRuleTimeOfDayComplex(string starttime, string endtime, string days)
		{
			return new LocalizedString("UMCallAnsweringRuleTimeOfDayComplex", "", false, false, Strings.ResourceManager, new object[]
			{
				starttime,
				endtime,
				days
			});
		}

		// Token: 0x06008949 RID: 35145 RVA: 0x0023C778 File Offset: 0x0023A978
		public static LocalizedString ProtocolTransactionWarnings(string protocol, string detailedInformation)
		{
			return new LocalizedString("ProtocolTransactionWarnings", "ExE664A0", false, true, Strings.ResourceManager, new object[]
			{
				protocol,
				detailedInformation
			});
		}

		// Token: 0x17002AF2 RID: 10994
		// (get) Token: 0x0600894A RID: 35146 RVA: 0x0023C7AB File Offset: 0x0023A9AB
		public static LocalizedString ConfirmationMessageSetPendingFederationDomain
		{
			get
			{
				return new LocalizedString("ConfirmationMessageSetPendingFederationDomain", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600894B RID: 35147 RVA: 0x0023C7CC File Offset: 0x0023A9CC
		public static LocalizedString RestoreOrExportSourceAndTargetTheSame(string sourceDisplayName, string targetDisplayName)
		{
			return new LocalizedString("RestoreOrExportSourceAndTargetTheSame", "ExF94191", false, true, Strings.ResourceManager, new object[]
			{
				sourceDisplayName,
				targetDisplayName
			});
		}

		// Token: 0x0600894C RID: 35148 RVA: 0x0023C800 File Offset: 0x0023AA00
		public static LocalizedString AlsEmailBodyAdminParamters(string paramters)
		{
			return new LocalizedString("AlsEmailBodyAdminParamters", "", false, false, Strings.ResourceManager, new object[]
			{
				paramters
			});
		}

		// Token: 0x17002AF3 RID: 10995
		// (get) Token: 0x0600894D RID: 35149 RVA: 0x0023C82F File Offset: 0x0023AA2F
		public static LocalizedString CouldNotFindTask
		{
			get
			{
				return new LocalizedString("CouldNotFindTask", "Ex747A93", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600894E RID: 35150 RVA: 0x0023C850 File Offset: 0x0023AA50
		public static LocalizedString ConfirmationMessageSetAdSite(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetAdSite", "ExB3BCB2", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x0600894F RID: 35151 RVA: 0x0023C880 File Offset: 0x0023AA80
		public static LocalizedString TestSearchCurrentServer(string serverName)
		{
			return new LocalizedString("TestSearchCurrentServer", "ExC5FFA0", false, true, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		// Token: 0x06008950 RID: 35152 RVA: 0x0023C8B0 File Offset: 0x0023AAB0
		public static LocalizedString ErrorInvalidCharactersInParameterValue(string param, string value, string invalidStr)
		{
			return new LocalizedString("ErrorInvalidCharactersInParameterValue", "ExB254FA", false, true, Strings.ResourceManager, new object[]
			{
				param,
				value,
				invalidStr
			});
		}

		// Token: 0x06008951 RID: 35153 RVA: 0x0023C8E8 File Offset: 0x0023AAE8
		public static LocalizedString DuplicateX400Domain(X400Domain domain)
		{
			return new LocalizedString("DuplicateX400Domain", "ExA2AEAB", false, true, Strings.ResourceManager, new object[]
			{
				domain
			});
		}

		// Token: 0x06008952 RID: 35154 RVA: 0x0023C918 File Offset: 0x0023AB18
		public static LocalizedString ServerNamesMustBeUnique(string message)
		{
			return new LocalizedString("ServerNamesMustBeUnique", "Ex5DEACE", false, true, Strings.ResourceManager, new object[]
			{
				message
			});
		}

		// Token: 0x06008953 RID: 35155 RVA: 0x0023C948 File Offset: 0x0023AB48
		public static LocalizedString CasHealthOwaUnsupportedLogonAuthenticationMethod(string supportedAuthMethods, string reportedAuthMethods)
		{
			return new LocalizedString("CasHealthOwaUnsupportedLogonAuthenticationMethod", "Ex54CEEB", false, true, Strings.ResourceManager, new object[]
			{
				supportedAuthMethods,
				reportedAuthMethods
			});
		}

		// Token: 0x17002AF4 RID: 10996
		// (get) Token: 0x06008954 RID: 35156 RVA: 0x0023C97B File Offset: 0x0023AB7B
		public static LocalizedString DlpPolicyModeDescription
		{
			get
			{
				return new LocalizedString("DlpPolicyModeDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008955 RID: 35157 RVA: 0x0023C99C File Offset: 0x0023AB9C
		public static LocalizedString ReceiveConnectorAclOverflow(string exception)
		{
			return new LocalizedString("ReceiveConnectorAclOverflow", "", false, false, Strings.ResourceManager, new object[]
			{
				exception
			});
		}

		// Token: 0x06008956 RID: 35158 RVA: 0x0023C9CC File Offset: 0x0023ABCC
		public static LocalizedString FailedToLoadSubscriptionFile(string message)
		{
			return new LocalizedString("FailedToLoadSubscriptionFile", "Ex9FAC02", false, true, Strings.ResourceManager, new object[]
			{
				message
			});
		}

		// Token: 0x17002AF5 RID: 10997
		// (get) Token: 0x06008957 RID: 35159 RVA: 0x0023C9FB File Offset: 0x0023ABFB
		public static LocalizedString ErrorSetVersion1OfExchange12OAB
		{
			get
			{
				return new LocalizedString("ErrorSetVersion1OfExchange12OAB", "Ex4834FB", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008958 RID: 35160 RVA: 0x0023CA1C File Offset: 0x0023AC1C
		public static LocalizedString DagTaskProblemChangingQuorumExceptionPathNotFound(string clusterName, string fsw, Exception ex)
		{
			return new LocalizedString("DagTaskProblemChangingQuorumExceptionPathNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				clusterName,
				fsw,
				ex
			});
		}

		// Token: 0x17002AF6 RID: 10998
		// (get) Token: 0x06008959 RID: 35161 RVA: 0x0023CA53 File Offset: 0x0023AC53
		public static LocalizedString SetupComponentPreSetupCafe
		{
			get
			{
				return new LocalizedString("SetupComponentPreSetupCafe", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600895A RID: 35162 RVA: 0x0023CA74 File Offset: 0x0023AC74
		public static LocalizedString ConfirmationMessageNewMailboxFolder(string Parent, string Name)
		{
			return new LocalizedString("ConfirmationMessageNewMailboxFolder", "Ex0E0D6E", false, true, Strings.ResourceManager, new object[]
			{
				Parent,
				Name
			});
		}

		// Token: 0x17002AF7 RID: 10999
		// (get) Token: 0x0600895B RID: 35163 RVA: 0x0023CAA7 File Offset: 0x0023ACA7
		public static LocalizedString ErrorTaskCancelledBecauseMoreMailboxesThanSearchSupported
		{
			get
			{
				return new LocalizedString("ErrorTaskCancelledBecauseMoreMailboxesThanSearchSupported", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600895C RID: 35164 RVA: 0x0023CAC8 File Offset: 0x0023ACC8
		public static LocalizedString ErrorTargetUserAlreadyHasPrimaryMailbox(string user)
		{
			return new LocalizedString("ErrorTargetUserAlreadyHasPrimaryMailbox", "Ex7DD664", false, true, Strings.ResourceManager, new object[]
			{
				user
			});
		}

		// Token: 0x0600895D RID: 35165 RVA: 0x0023CAF8 File Offset: 0x0023ACF8
		public static LocalizedString TestMailflowSucceededNoDatabaseOnSourceServer(string source)
		{
			return new LocalizedString("TestMailflowSucceededNoDatabaseOnSourceServer", "Ex8D57C3", false, true, Strings.ResourceManager, new object[]
			{
				source
			});
		}

		// Token: 0x17002AF8 RID: 11000
		// (get) Token: 0x0600895E RID: 35166 RVA: 0x0023CB27 File Offset: 0x0023AD27
		public static LocalizedString SetupComponentPreUpdatingServicePlan
		{
			get
			{
				return new LocalizedString("SetupComponentPreUpdatingServicePlan", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002AF9 RID: 11001
		// (get) Token: 0x0600895F RID: 35167 RVA: 0x0023CB45 File Offset: 0x0023AD45
		public static LocalizedString CasHealthOwaUnexpectedResponse
		{
			get
			{
				return new LocalizedString("CasHealthOwaUnexpectedResponse", "Ex0F36AE", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002AFA RID: 11002
		// (get) Token: 0x06008960 RID: 35168 RVA: 0x0023CB63 File Offset: 0x0023AD63
		public static LocalizedString SendConnectorDashdashAddressSpaceNotOffEdge
		{
			get
			{
				return new LocalizedString("SendConnectorDashdashAddressSpaceNotOffEdge", "Ex66AC44", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008961 RID: 35169 RVA: 0x0023CB84 File Offset: 0x0023AD84
		public static LocalizedString DagTaskProblemChangingQuorumExceptionBadNetName(string clusterName, string fsw, Exception ex)
		{
			return new LocalizedString("DagTaskProblemChangingQuorumExceptionBadNetName", "", false, false, Strings.ResourceManager, new object[]
			{
				clusterName,
				fsw,
				ex
			});
		}

		// Token: 0x17002AFB RID: 11003
		// (get) Token: 0x06008962 RID: 35170 RVA: 0x0023CBBB File Offset: 0x0023ADBB
		public static LocalizedString InvalidParameterSet
		{
			get
			{
				return new LocalizedString("InvalidParameterSet", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008963 RID: 35171 RVA: 0x0023CBDC File Offset: 0x0023ADDC
		public static LocalizedString ErrorDefaultDomainNotUnique(AcceptedDomainIdParameter domain)
		{
			return new LocalizedString("ErrorDefaultDomainNotUnique", "Ex01FC43", false, true, Strings.ResourceManager, new object[]
			{
				domain
			});
		}

		// Token: 0x06008964 RID: 35172 RVA: 0x0023CC0C File Offset: 0x0023AE0C
		public static LocalizedString OnPremisesOrganizationOutboundConnectorNotUnique(OutboundConnectorIdParameter identity)
		{
			return new LocalizedString("OnPremisesOrganizationOutboundConnectorNotUnique", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x06008965 RID: 35173 RVA: 0x0023CC3C File Offset: 0x0023AE3C
		public static LocalizedString ParameterAllowedOnlyForTopLevelRoleManipulation(string paramName, string roleType)
		{
			return new LocalizedString("ParameterAllowedOnlyForTopLevelRoleManipulation", "ExAB671F", false, true, Strings.ResourceManager, new object[]
			{
				paramName,
				roleType
			});
		}

		// Token: 0x06008966 RID: 35174 RVA: 0x0023CC70 File Offset: 0x0023AE70
		public static LocalizedString UserFederatedDomainInLocalOrgRelationship(string userFedDomain)
		{
			return new LocalizedString("UserFederatedDomainInLocalOrgRelationship", "", false, false, Strings.ResourceManager, new object[]
			{
				userFedDomain
			});
		}

		// Token: 0x06008967 RID: 35175 RVA: 0x0023CCA0 File Offset: 0x0023AEA0
		public static LocalizedString ErrorUMInvalidSipNameOrExtensionAddressFormat(string s)
		{
			return new LocalizedString("ErrorUMInvalidSipNameOrExtensionAddressFormat", "Ex90FE49", false, true, Strings.ResourceManager, new object[]
			{
				s
			});
		}

		// Token: 0x17002AFC RID: 11004
		// (get) Token: 0x06008968 RID: 35176 RVA: 0x0023CCCF File Offset: 0x0023AECF
		public static LocalizedString AttachmentFilterADEntryNotFound
		{
			get
			{
				return new LocalizedString("AttachmentFilterADEntryNotFound", "Ex00A085", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008969 RID: 35177 RVA: 0x0023CCF0 File Offset: 0x0023AEF0
		public static LocalizedString ConfirmationMessageNewEcpVirtualDirectory(string WebSiteName, string Server)
		{
			return new LocalizedString("ConfirmationMessageNewEcpVirtualDirectory", "Ex0E05DE", false, true, Strings.ResourceManager, new object[]
			{
				WebSiteName,
				Server
			});
		}

		// Token: 0x17002AFD RID: 11005
		// (get) Token: 0x0600896A RID: 35178 RVA: 0x0023CD23 File Offset: 0x0023AF23
		public static LocalizedString CasHealthOwaNoLogonCookieReturned
		{
			get
			{
				return new LocalizedString("CasHealthOwaNoLogonCookieReturned", "Ex33F67B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002AFE RID: 11006
		// (get) Token: 0x0600896B RID: 35179 RVA: 0x0023CD41 File Offset: 0x0023AF41
		public static LocalizedString SetupProgressMalwareFilterPolicy
		{
			get
			{
				return new LocalizedString("SetupProgressMalwareFilterPolicy", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600896C RID: 35180 RVA: 0x0023CD60 File Offset: 0x0023AF60
		public static LocalizedString ConfirmationMessageSetUMMailboxPlan(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetUMMailboxPlan", "ExB73AAE", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x17002AFF RID: 11007
		// (get) Token: 0x0600896D RID: 35181 RVA: 0x0023CD8F File Offset: 0x0023AF8F
		public static LocalizedString ConfirmationMessageSetContentFilterConfig
		{
			get
			{
				return new LocalizedString("ConfirmationMessageSetContentFilterConfig", "ExA98C50", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002B00 RID: 11008
		// (get) Token: 0x0600896E RID: 35182 RVA: 0x0023CDAD File Offset: 0x0023AFAD
		public static LocalizedString InstallFBAServiceTask
		{
			get
			{
				return new LocalizedString("InstallFBAServiceTask", "Ex7717FD", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002B01 RID: 11009
		// (get) Token: 0x0600896F RID: 35183 RVA: 0x0023CDCB File Offset: 0x0023AFCB
		public static LocalizedString MigrationCompleteAfterIncorrectState
		{
			get
			{
				return new LocalizedString("MigrationCompleteAfterIncorrectState", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002B02 RID: 11010
		// (get) Token: 0x06008970 RID: 35184 RVA: 0x0023CDE9 File Offset: 0x0023AFE9
		public static LocalizedString ActiveSyncOrganizationSettingsAmbiguous
		{
			get
			{
				return new LocalizedString("ActiveSyncOrganizationSettingsAmbiguous", "ExBBB669", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002B03 RID: 11011
		// (get) Token: 0x06008971 RID: 35185 RVA: 0x0023CE07 File Offset: 0x0023B007
		public static LocalizedString InfoImportingTpdFromRmsOnline
		{
			get
			{
				return new LocalizedString("InfoImportingTpdFromRmsOnline", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002B04 RID: 11012
		// (get) Token: 0x06008972 RID: 35186 RVA: 0x0023CE25 File Offset: 0x0023B025
		public static LocalizedString MtrtEventMalware
		{
			get
			{
				return new LocalizedString("MtrtEventMalware", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002B05 RID: 11013
		// (get) Token: 0x06008973 RID: 35187 RVA: 0x0023CE43 File Offset: 0x0023B043
		public static LocalizedString InvalidAggregatedDateTime
		{
			get
			{
				return new LocalizedString("InvalidAggregatedDateTime", "Ex4A428C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008974 RID: 35188 RVA: 0x0023CE64 File Offset: 0x0023B064
		public static LocalizedString ErrorAutoDiscoverValidatorEwsNotFound(string xml)
		{
			return new LocalizedString("ErrorAutoDiscoverValidatorEwsNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				xml
			});
		}

		// Token: 0x17002B06 RID: 11014
		// (get) Token: 0x06008975 RID: 35189 RVA: 0x0023CE93 File Offset: 0x0023B093
		public static LocalizedString ErrorRecipientTypeDetailsConflictWithRecipientType
		{
			get
			{
				return new LocalizedString("ErrorRecipientTypeDetailsConflictWithRecipientType", "Ex184F66", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008976 RID: 35190 RVA: 0x0023CEB4 File Offset: 0x0023B0B4
		public static LocalizedString ConfirmationMessageRemoveIPAllowListProvider(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveIPAllowListProvider", "Ex5BD39F", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x17002B07 RID: 11015
		// (get) Token: 0x06008977 RID: 35191 RVA: 0x0023CEE3 File Offset: 0x0023B0E3
		public static LocalizedString InfoCheckMode
		{
			get
			{
				return new LocalizedString("InfoCheckMode", "ExBBADCE", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002B08 RID: 11016
		// (get) Token: 0x06008978 RID: 35192 RVA: 0x0023CF01 File Offset: 0x0023B101
		public static LocalizedString SetIISGzipMimeTypesFailure
		{
			get
			{
				return new LocalizedString("SetIISGzipMimeTypesFailure", "Ex91FA27", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008979 RID: 35193 RVA: 0x0023CF20 File Offset: 0x0023B120
		public static LocalizedString ErrorFingerprintRulePackTemplateCorrupted(string file)
		{
			return new LocalizedString("ErrorFingerprintRulePackTemplateCorrupted", "", false, false, Strings.ResourceManager, new object[]
			{
				file
			});
		}

		// Token: 0x17002B09 RID: 11017
		// (get) Token: 0x0600897A RID: 35194 RVA: 0x0023CF4F File Offset: 0x0023B14F
		public static LocalizedString SetupComponentConfiguringReplayService
		{
			get
			{
				return new LocalizedString("SetupComponentConfiguringReplayService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002B0A RID: 11018
		// (get) Token: 0x0600897B RID: 35195 RVA: 0x0023CF6D File Offset: 0x0023B16D
		public static LocalizedString MessageTypeSigned
		{
			get
			{
				return new LocalizedString("MessageTypeSigned", "Ex2353B1", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600897C RID: 35196 RVA: 0x0023CF8C File Offset: 0x0023B18C
		public static LocalizedString ServiceDependencies(string service, string dependencies)
		{
			return new LocalizedString("ServiceDependencies", "ExCD46BE", false, true, Strings.ResourceManager, new object[]
			{
				service,
				dependencies
			});
		}

		// Token: 0x0600897D RID: 35197 RVA: 0x0023CFC0 File Offset: 0x0023B1C0
		public static LocalizedString NoSubscription(string site)
		{
			return new LocalizedString("NoSubscription", "Ex204360", false, true, Strings.ResourceManager, new object[]
			{
				site
			});
		}

		// Token: 0x0600897E RID: 35198 RVA: 0x0023CFF0 File Offset: 0x0023B1F0
		public static LocalizedString ExceptionPerfCounterUnlodctrFailed(int errorCode)
		{
			return new LocalizedString("ExceptionPerfCounterUnlodctrFailed", "Ex6B3129", false, true, Strings.ResourceManager, new object[]
			{
				errorCode
			});
		}

		// Token: 0x0600897F RID: 35199 RVA: 0x0023D024 File Offset: 0x0023B224
		public static LocalizedString BPAConfigurationWarningFound(string warning)
		{
			return new LocalizedString("BPAConfigurationWarningFound", "ExA98B39", false, true, Strings.ResourceManager, new object[]
			{
				warning
			});
		}

		// Token: 0x06008980 RID: 35200 RVA: 0x0023D054 File Offset: 0x0023B254
		public static LocalizedString ExceptionExsetdataGenericError(uint sc, string errMsg)
		{
			return new LocalizedString("ExceptionExsetdataGenericError", "Ex5BE347", false, true, Strings.ResourceManager, new object[]
			{
				sc,
				errMsg
			});
		}

		// Token: 0x06008981 RID: 35201 RVA: 0x0023D08C File Offset: 0x0023B28C
		public static LocalizedString ErrorRemovingPolicyInUse(string id)
		{
			return new LocalizedString("ErrorRemovingPolicyInUse", "ExE77BDF", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x17002B0B RID: 11019
		// (get) Token: 0x06008982 RID: 35202 RVA: 0x0023D0BB File Offset: 0x0023B2BB
		public static LocalizedString InstallADTopologyServiceTask
		{
			get
			{
				return new LocalizedString("InstallADTopologyServiceTask", "ExB493C8", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002B0C RID: 11020
		// (get) Token: 0x06008983 RID: 35203 RVA: 0x0023D0D9 File Offset: 0x0023B2D9
		public static LocalizedString SetupProgressCreateGlobalExchangeUSGs
		{
			get
			{
				return new LocalizedString("SetupProgressCreateGlobalExchangeUSGs", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008984 RID: 35204 RVA: 0x0023D0F8 File Offset: 0x0023B2F8
		public static LocalizedString ErrorMailboxBeingMoved(string user, string moveStatus)
		{
			return new LocalizedString("ErrorMailboxBeingMoved", "ExEC7A95", false, true, Strings.ResourceManager, new object[]
			{
				user,
				moveStatus
			});
		}

		// Token: 0x17002B0D RID: 11021
		// (get) Token: 0x06008985 RID: 35205 RVA: 0x0023D12B File Offset: 0x0023B32B
		public static LocalizedString ADAttributeTitle
		{
			get
			{
				return new LocalizedString("ADAttributeTitle", "ExBD36EC", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008986 RID: 35206 RVA: 0x0023D14C File Offset: 0x0023B34C
		public static LocalizedString ErrorPolicyRuleExists(string policy, string rule)
		{
			return new LocalizedString("ErrorPolicyRuleExists", "", false, false, Strings.ResourceManager, new object[]
			{
				policy,
				rule
			});
		}

		// Token: 0x17002B0E RID: 11022
		// (get) Token: 0x06008987 RID: 35207 RVA: 0x0023D17F File Offset: 0x0023B37F
		public static LocalizedString MoveMailboxSourceCleanupTypeMailEnableSourceAccount
		{
			get
			{
				return new LocalizedString("MoveMailboxSourceCleanupTypeMailEnableSourceAccount", "Ex765201", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008988 RID: 35208 RVA: 0x0023D1A0 File Offset: 0x0023B3A0
		public static LocalizedString ErrorConvertNonUniversalDistributionGroup(string idRecipient)
		{
			return new LocalizedString("ErrorConvertNonUniversalDistributionGroup", "Ex02289F", false, true, Strings.ResourceManager, new object[]
			{
				idRecipient
			});
		}

		// Token: 0x06008989 RID: 35209 RVA: 0x0023D1D0 File Offset: 0x0023B3D0
		public static LocalizedString ErrorUserAlreadyDelegate(string id, string group)
		{
			return new LocalizedString("ErrorUserAlreadyDelegate", "ExAB33B0", false, true, Strings.ResourceManager, new object[]
			{
				id,
				group
			});
		}

		// Token: 0x0600898A RID: 35210 RVA: 0x0023D204 File Offset: 0x0023B404
		public static LocalizedString DatabaseCopyQueueNotKeepingUp(string dbName, string serverName, long queueLength)
		{
			return new LocalizedString("DatabaseCopyQueueNotKeepingUp", "Ex0151F0", false, true, Strings.ResourceManager, new object[]
			{
				dbName,
				serverName,
				queueLength
			});
		}

		// Token: 0x17002B0F RID: 11023
		// (get) Token: 0x0600898B RID: 35211 RVA: 0x0023D240 File Offset: 0x0023B440
		public static LocalizedString NoSourceMailboxesAndNoPublicFolderSourcesSet
		{
			get
			{
				return new LocalizedString("NoSourceMailboxesAndNoPublicFolderSourcesSet", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600898C RID: 35212 RVA: 0x0023D260 File Offset: 0x0023B460
		public static LocalizedString EnumerateRightsFailedException(string account, uint err)
		{
			return new LocalizedString("EnumerateRightsFailedException", "ExA66D8E", false, true, Strings.ResourceManager, new object[]
			{
				account,
				err
			});
		}

		// Token: 0x0600898D RID: 35213 RVA: 0x0023D298 File Offset: 0x0023B498
		public static LocalizedString ErrorOrgsStillUsingThisMailFlowPartner(string trust, string org, string remainingCount)
		{
			return new LocalizedString("ErrorOrgsStillUsingThisMailFlowPartner", "Ex41D963", false, true, Strings.ResourceManager, new object[]
			{
				trust,
				org,
				remainingCount
			});
		}

		// Token: 0x0600898E RID: 35214 RVA: 0x0023D2D0 File Offset: 0x0023B4D0
		public static LocalizedString ReadingComponents(string role, string taskList)
		{
			return new LocalizedString("ReadingComponents", "Ex006EBF", false, true, Strings.ResourceManager, new object[]
			{
				role,
				taskList
			});
		}

		// Token: 0x0600898F RID: 35215 RVA: 0x0023D304 File Offset: 0x0023B504
		public static LocalizedString WarningCustomizationsAreAlreadyEnabled(string orgId)
		{
			return new LocalizedString("WarningCustomizationsAreAlreadyEnabled", "", false, false, Strings.ResourceManager, new object[]
			{
				orgId
			});
		}

		// Token: 0x06008990 RID: 35216 RVA: 0x0023D334 File Offset: 0x0023B534
		public static LocalizedString CasHealthOwaAuthTypesSupported4(string method1, string method2, string method3, string method4)
		{
			return new LocalizedString("CasHealthOwaAuthTypesSupported4", "Ex1D2B44", false, true, Strings.ResourceManager, new object[]
			{
				method1,
				method2,
				method3,
				method4
			});
		}

		// Token: 0x06008991 RID: 35217 RVA: 0x0023D370 File Offset: 0x0023B570
		public static LocalizedString InvalidFqdnUnderExchangeServerAuth(string fqdn, string netbios)
		{
			return new LocalizedString("InvalidFqdnUnderExchangeServerAuth", "ExF97C1B", false, true, Strings.ResourceManager, new object[]
			{
				fqdn,
				netbios
			});
		}

		// Token: 0x17002B10 RID: 11024
		// (get) Token: 0x06008992 RID: 35218 RVA: 0x0023D3A3 File Offset: 0x0023B5A3
		public static LocalizedString SetupProgressCreateFederatedEmailMailbox
		{
			get
			{
				return new LocalizedString("SetupProgressCreateFederatedEmailMailbox", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008993 RID: 35219 RVA: 0x0023D3C4 File Offset: 0x0023B5C4
		public static LocalizedString MultipleCertsFoundBySubject(string IssuedTo)
		{
			return new LocalizedString("MultipleCertsFoundBySubject", "Ex54D52A", false, true, Strings.ResourceManager, new object[]
			{
				IssuedTo
			});
		}

		// Token: 0x06008994 RID: 35220 RVA: 0x0023D3F4 File Offset: 0x0023B5F4
		public static LocalizedString ValueTooSmallException(string key, int value)
		{
			return new LocalizedString("ValueTooSmallException", "ExAA5AC5", false, true, Strings.ResourceManager, new object[]
			{
				key,
				value
			});
		}

		// Token: 0x06008995 RID: 35221 RVA: 0x0023D42C File Offset: 0x0023B62C
		public static LocalizedString TestSearchServerIsNull(string server)
		{
			return new LocalizedString("TestSearchServerIsNull", "Ex453455", false, true, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		// Token: 0x17002B11 RID: 11025
		// (get) Token: 0x06008996 RID: 35222 RVA: 0x0023D45B File Offset: 0x0023B65B
		public static LocalizedString ErrorJoinRestrictionInvalid
		{
			get
			{
				return new LocalizedString("ErrorJoinRestrictionInvalid", "Ex553B93", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002B12 RID: 11026
		// (get) Token: 0x06008997 RID: 35223 RVA: 0x0023D479 File Offset: 0x0023B679
		public static LocalizedString TopologyServiceResultFailure
		{
			get
			{
				return new LocalizedString("TopologyServiceResultFailure", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002B13 RID: 11027
		// (get) Token: 0x06008998 RID: 35224 RVA: 0x0023D497 File Offset: 0x0023B697
		public static LocalizedString WarningBulkOperationCannotDetermineRequester
		{
			get
			{
				return new LocalizedString("WarningBulkOperationCannotDetermineRequester", "ExF11F57", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008999 RID: 35225 RVA: 0x0023D4B8 File Offset: 0x0023B6B8
		public static LocalizedString MonitoringServiceRequestFailed(string machineName, string error)
		{
			return new LocalizedString("MonitoringServiceRequestFailed", "", false, false, Strings.ResourceManager, new object[]
			{
				machineName,
				error
			});
		}

		// Token: 0x0600899A RID: 35226 RVA: 0x0023D4EC File Offset: 0x0023B6EC
		public static LocalizedString MailboxSearchInPlaceHoldFormatError(string identity)
		{
			return new LocalizedString("MailboxSearchInPlaceHoldFormatError", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x17002B14 RID: 11028
		// (get) Token: 0x0600899B RID: 35227 RVA: 0x0023D51B File Offset: 0x0023B71B
		public static LocalizedString SetupComponentMidFileCopyOSP
		{
			get
			{
				return new LocalizedString("SetupComponentMidFileCopyOSP", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600899C RID: 35228 RVA: 0x0023D53C File Offset: 0x0023B73C
		public static LocalizedString ConfirmationMessageSetExchangeObjectVersion(string Identity, string ObjectVersion)
		{
			return new LocalizedString("ConfirmationMessageSetExchangeObjectVersion", "Ex126B01", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				ObjectVersion
			});
		}

		// Token: 0x17002B15 RID: 11029
		// (get) Token: 0x0600899D RID: 35229 RVA: 0x0023D56F File Offset: 0x0023B76F
		public static LocalizedString ErrorUMPolicyToPreE12
		{
			get
			{
				return new LocalizedString("ErrorUMPolicyToPreE12", "Ex5305FC", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600899E RID: 35230 RVA: 0x0023D590 File Offset: 0x0023B790
		public static LocalizedString ConfirmationMessageNewHostedContentFilterPolicy(string name)
		{
			return new LocalizedString("ConfirmationMessageNewHostedContentFilterPolicy", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x0600899F RID: 35231 RVA: 0x0023D5C0 File Offset: 0x0023B7C0
		public static LocalizedString ErrorMoreThanOneValue(string attribute, int count)
		{
			return new LocalizedString("ErrorMoreThanOneValue", "ExD0D24A", false, true, Strings.ResourceManager, new object[]
			{
				attribute,
				count
			});
		}

		// Token: 0x060089A0 RID: 35232 RVA: 0x0023D5F8 File Offset: 0x0023B7F8
		public static LocalizedString ConfirmationMessageNewSyncServiceInstance(string serviceInstanceId)
		{
			return new LocalizedString("ConfirmationMessageNewSyncServiceInstance", "", false, false, Strings.ResourceManager, new object[]
			{
				serviceInstanceId
			});
		}

		// Token: 0x060089A1 RID: 35233 RVA: 0x0023D628 File Offset: 0x0023B828
		public static LocalizedString ErrorTenantAlreadyBeingRelocated(string Identity)
		{
			return new LocalizedString("ErrorTenantAlreadyBeingRelocated", "", false, false, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x060089A2 RID: 35234 RVA: 0x0023D658 File Offset: 0x0023B858
		public static LocalizedString ErrorAddedRecipientCannotBeDistributionGroup(string recipient)
		{
			return new LocalizedString("ErrorAddedRecipientCannotBeDistributionGroup", "ExE84A51", false, true, Strings.ResourceManager, new object[]
			{
				recipient
			});
		}

		// Token: 0x060089A3 RID: 35235 RVA: 0x0023D688 File Offset: 0x0023B888
		public static LocalizedString ConfirmationMessageNewResourcePolicy(string Name)
		{
			return new LocalizedString("ConfirmationMessageNewResourcePolicy", "", false, false, Strings.ResourceManager, new object[]
			{
				Name
			});
		}

		// Token: 0x17002B16 RID: 11030
		// (get) Token: 0x060089A4 RID: 35236 RVA: 0x0023D6B7 File Offset: 0x0023B8B7
		public static LocalizedString WarningTransportDecryptionMandatoryRequiresSuperUser
		{
			get
			{
				return new LocalizedString("WarningTransportDecryptionMandatoryRequiresSuperUser", "ExC07CE0", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002B17 RID: 11031
		// (get) Token: 0x060089A5 RID: 35237 RVA: 0x0023D6D5 File Offset: 0x0023B8D5
		public static LocalizedString UnableToRetrieveDeletePolicyTag
		{
			get
			{
				return new LocalizedString("UnableToRetrieveDeletePolicyTag", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002B18 RID: 11032
		// (get) Token: 0x060089A6 RID: 35238 RVA: 0x0023D6F3 File Offset: 0x0023B8F3
		public static LocalizedString ConfirmationMessageTestGlobalLocatorServiceIdentity
		{
			get
			{
				return new LocalizedString("ConfirmationMessageTestGlobalLocatorServiceIdentity", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060089A7 RID: 35239 RVA: 0x0023D714 File Offset: 0x0023B914
		public static LocalizedString ErrorNotPublicFolderMailbox(string idStringValue)
		{
			return new LocalizedString("ErrorNotPublicFolderMailbox", "", false, false, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		// Token: 0x17002B19 RID: 11033
		// (get) Token: 0x060089A8 RID: 35240 RVA: 0x0023D743 File Offset: 0x0023B943
		public static LocalizedString ReplayServiceCheckDesc
		{
			get
			{
				return new LocalizedString("ReplayServiceCheckDesc", "Ex0287E2", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060089A9 RID: 35241 RVA: 0x0023D764 File Offset: 0x0023B964
		public static LocalizedString ExchangeSettingsScopeAlreadyExists(string groupName, string id)
		{
			return new LocalizedString("ExchangeSettingsScopeAlreadyExists", "", false, false, Strings.ResourceManager, new object[]
			{
				groupName,
				id
			});
		}

		// Token: 0x17002B1A RID: 11034
		// (get) Token: 0x060089AA RID: 35242 RVA: 0x0023D797 File Offset: 0x0023B997
		public static LocalizedString ExchangeServersUSGDescription
		{
			get
			{
				return new LocalizedString("ExchangeServersUSGDescription", "Ex260599", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060089AB RID: 35243 RVA: 0x0023D7B8 File Offset: 0x0023B9B8
		public static LocalizedString GetDbcsRpcNotSupported(string server, string serverVersion, string rpcSupportVersion)
		{
			return new LocalizedString("GetDbcsRpcNotSupported", "Ex572A01", false, true, Strings.ResourceManager, new object[]
			{
				server,
				serverVersion,
				rpcSupportVersion
			});
		}

		// Token: 0x060089AC RID: 35244 RVA: 0x0023D7F0 File Offset: 0x0023B9F0
		public static LocalizedString AlsEmailBodyAdminObjectIds(string objectIds)
		{
			return new LocalizedString("AlsEmailBodyAdminObjectIds", "", false, false, Strings.ResourceManager, new object[]
			{
				objectIds
			});
		}

		// Token: 0x060089AD RID: 35245 RVA: 0x0023D820 File Offset: 0x0023BA20
		public static LocalizedString WarningCustomRoleCreatedDuringUpgradeForSplittingRole(string id, string customUserRoleId, string splittingRole)
		{
			return new LocalizedString("WarningCustomRoleCreatedDuringUpgradeForSplittingRole", "ExA2F61E", false, true, Strings.ResourceManager, new object[]
			{
				id,
				customUserRoleId,
				splittingRole
			});
		}

		// Token: 0x17002B1B RID: 11035
		// (get) Token: 0x060089AE RID: 35246 RVA: 0x0023D857 File Offset: 0x0023BA57
		public static LocalizedString CertificateDoesNotHavePKCS10
		{
			get
			{
				return new LocalizedString("CertificateDoesNotHavePKCS10", "Ex2D46A3", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060089AF RID: 35247 RVA: 0x0023D878 File Offset: 0x0023BA78
		public static LocalizedString NullOrEmptyStringNotAllowed(string name)
		{
			return new LocalizedString("NullOrEmptyStringNotAllowed", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x060089B0 RID: 35248 RVA: 0x0023D8A8 File Offset: 0x0023BAA8
		public static LocalizedString CallingLineIdNotUnique(string clid, string id)
		{
			return new LocalizedString("CallingLineIdNotUnique", "Ex01BBC8", false, true, Strings.ResourceManager, new object[]
			{
				clid,
				id
			});
		}

		// Token: 0x060089B1 RID: 35249 RVA: 0x0023D8DC File Offset: 0x0023BADC
		public static LocalizedString ErrorFailedToEvictMember(string memberName, string message)
		{
			return new LocalizedString("ErrorFailedToEvictMember", "ExDA4E57", false, true, Strings.ResourceManager, new object[]
			{
				memberName,
				message
			});
		}

		// Token: 0x17002B1C RID: 11036
		// (get) Token: 0x060089B2 RID: 35250 RVA: 0x0023D90F File Offset: 0x0023BB0F
		public static LocalizedString ErrorMissingNameOrDescriptionOrIsDefaultParameters
		{
			get
			{
				return new LocalizedString("ErrorMissingNameOrDescriptionOrIsDefaultParameters", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060089B3 RID: 35251 RVA: 0x0023D930 File Offset: 0x0023BB30
		public static LocalizedString MapiTransactionDiagnosticFailedToGetMdbLocation(string errorMsg)
		{
			return new LocalizedString("MapiTransactionDiagnosticFailedToGetMdbLocation", "ExC6F159", false, true, Strings.ResourceManager, new object[]
			{
				errorMsg
			});
		}

		// Token: 0x060089B4 RID: 35252 RVA: 0x0023D960 File Offset: 0x0023BB60
		public static LocalizedString CasHealthOwaMailboxServerColon(string mailboxServerName)
		{
			return new LocalizedString("CasHealthOwaMailboxServerColon", "Ex81BCA5", false, true, Strings.ResourceManager, new object[]
			{
				mailboxServerName
			});
		}

		// Token: 0x060089B5 RID: 35253 RVA: 0x0023D990 File Offset: 0x0023BB90
		public static LocalizedString CasHealthPowerShellConnectionVirtualDirectory(string vdir)
		{
			return new LocalizedString("CasHealthPowerShellConnectionVirtualDirectory", "ExDA2475", false, true, Strings.ResourceManager, new object[]
			{
				vdir
			});
		}

		// Token: 0x060089B6 RID: 35254 RVA: 0x0023D9C0 File Offset: 0x0023BBC0
		public static LocalizedString ConfirmationMessageRemoveForeignConnector(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveForeignConnector", "ExE0CAE4", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x060089B7 RID: 35255 RVA: 0x0023D9F0 File Offset: 0x0023BBF0
		public static LocalizedString OptionalRetentionPolicyTagsMustBePersonalTags(string tag, string type)
		{
			return new LocalizedString("OptionalRetentionPolicyTagsMustBePersonalTags", "ExC48ACB", false, true, Strings.ResourceManager, new object[]
			{
				tag,
				type
			});
		}

		// Token: 0x060089B8 RID: 35256 RVA: 0x0023DA24 File Offset: 0x0023BC24
		public static LocalizedString WarningPasswordIgnored(string liveId)
		{
			return new LocalizedString("WarningPasswordIgnored", "Ex049C70", false, true, Strings.ResourceManager, new object[]
			{
				liveId
			});
		}

		// Token: 0x17002B1D RID: 11037
		// (get) Token: 0x060089B9 RID: 35257 RVA: 0x0023DA53 File Offset: 0x0023BC53
		public static LocalizedString VerboseEndFingerprint
		{
			get
			{
				return new LocalizedString("VerboseEndFingerprint", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002B1E RID: 11038
		// (get) Token: 0x060089BA RID: 35258 RVA: 0x0023DA71 File Offset: 0x0023BC71
		public static LocalizedString CasHealthSpecifiedServerIsNotCas
		{
			get
			{
				return new LocalizedString("CasHealthSpecifiedServerIsNotCas", "Ex843FD3", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060089BB RID: 35259 RVA: 0x0023DA90 File Offset: 0x0023BC90
		public static LocalizedString ErrorSynchronizationTypeNotRecognized(string parameter)
		{
			return new LocalizedString("ErrorSynchronizationTypeNotRecognized", "Ex57DCCC", false, true, Strings.ResourceManager, new object[]
			{
				parameter
			});
		}

		// Token: 0x17002B1F RID: 11039
		// (get) Token: 0x060089BC RID: 35260 RVA: 0x0023DABF File Offset: 0x0023BCBF
		public static LocalizedString InstallingTranscodingService
		{
			get
			{
				return new LocalizedString("InstallingTranscodingService", "ExB5B865", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060089BD RID: 35261 RVA: 0x0023DAE0 File Offset: 0x0023BCE0
		public static LocalizedString AllSourceMailboxesParameterOverride(string param1, string param2)
		{
			return new LocalizedString("AllSourceMailboxesParameterOverride", "", false, false, Strings.ResourceManager, new object[]
			{
				param1,
				param2
			});
		}

		// Token: 0x060089BE RID: 35262 RVA: 0x0023DB14 File Offset: 0x0023BD14
		public static LocalizedString ErrorCmdletNotSupportedForGroupMailbox(string cmdlet)
		{
			return new LocalizedString("ErrorCmdletNotSupportedForGroupMailbox", "", false, false, Strings.ResourceManager, new object[]
			{
				cmdlet
			});
		}

		// Token: 0x17002B20 RID: 11040
		// (get) Token: 0x060089BF RID: 35263 RVA: 0x0023DB43 File Offset: 0x0023BD43
		public static LocalizedString VerboseNotFoundAssigneeInConfigNC
		{
			get
			{
				return new LocalizedString("VerboseNotFoundAssigneeInConfigNC", "Ex031BAB", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060089C0 RID: 35264 RVA: 0x0023DB64 File Offset: 0x0023BD64
		public static LocalizedString AlgorithmFailedForTraining(string mailbox)
		{
			return new LocalizedString("AlgorithmFailedForTraining", "Ex339392", false, true, Strings.ResourceManager, new object[]
			{
				mailbox
			});
		}

		// Token: 0x060089C1 RID: 35265 RVA: 0x0023DB94 File Offset: 0x0023BD94
		public static LocalizedString NotTransportServer(string fqdn)
		{
			return new LocalizedString("NotTransportServer", "ExBBBE5D", false, true, Strings.ResourceManager, new object[]
			{
				fqdn
			});
		}

		// Token: 0x060089C2 RID: 35266 RVA: 0x0023DBC4 File Offset: 0x0023BDC4
		public static LocalizedString WarningIssuerCertificateExpired(string certThumbprint)
		{
			return new LocalizedString("WarningIssuerCertificateExpired", "Ex894A86", false, true, Strings.ResourceManager, new object[]
			{
				certThumbprint
			});
		}

		// Token: 0x060089C3 RID: 35267 RVA: 0x0023DBF4 File Offset: 0x0023BDF4
		public static LocalizedString AlsEmailBodyAdminUserIds(string callers)
		{
			return new LocalizedString("AlsEmailBodyAdminUserIds", "", false, false, Strings.ResourceManager, new object[]
			{
				callers
			});
		}

		// Token: 0x060089C4 RID: 35268 RVA: 0x0023DC24 File Offset: 0x0023BE24
		public static LocalizedString ExceptionServiceIsNotRunning(string serviceName)
		{
			return new LocalizedString("ExceptionServiceIsNotRunning", "ExEF1D5C", false, true, Strings.ResourceManager, new object[]
			{
				serviceName
			});
		}

		// Token: 0x17002B21 RID: 11041
		// (get) Token: 0x060089C5 RID: 35269 RVA: 0x0023DC53 File Offset: 0x0023BE53
		public static LocalizedString CannotRemoveDefaultSiteMailboxProvisioningPolicyException
		{
			get
			{
				return new LocalizedString("CannotRemoveDefaultSiteMailboxProvisioningPolicyException", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060089C6 RID: 35270 RVA: 0x0023DC74 File Offset: 0x0023BE74
		public static LocalizedString ConfirmationMessageMoveMailboxDatabaseMasterAnyServer(string Identity, string sourceserver)
		{
			return new LocalizedString("ConfirmationMessageMoveMailboxDatabaseMasterAnyServer", "Ex7C4411", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				sourceserver
			});
		}

		// Token: 0x060089C7 RID: 35271 RVA: 0x0023DCA8 File Offset: 0x0023BEA8
		public static LocalizedString ExRBACFailedToUpdateCustomRole(string roleName, string targetCustomRoleName, string error)
		{
			return new LocalizedString("ExRBACFailedToUpdateCustomRole", "Ex418953", false, true, Strings.ResourceManager, new object[]
			{
				roleName,
				targetCustomRoleName,
				error
			});
		}

		// Token: 0x17002B22 RID: 11042
		// (get) Token: 0x060089C8 RID: 35272 RVA: 0x0023DCDF File Offset: 0x0023BEDF
		public static LocalizedString SetupProgressConfigureAdminGroup
		{
			get
			{
				return new LocalizedString("SetupProgressConfigureAdminGroup", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060089C9 RID: 35273 RVA: 0x0023DD00 File Offset: 0x0023BF00
		public static LocalizedString ErrorImageFileBig(int size)
		{
			return new LocalizedString("ErrorImageFileBig", "", false, false, Strings.ResourceManager, new object[]
			{
				size
			});
		}

		// Token: 0x17002B23 RID: 11043
		// (get) Token: 0x060089CA RID: 35274 RVA: 0x0023DD34 File Offset: 0x0023BF34
		public static LocalizedString ErrorMicrosoftExchangeRecipientNotFound
		{
			get
			{
				return new LocalizedString("ErrorMicrosoftExchangeRecipientNotFound", "Ex072276", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002B24 RID: 11044
		// (get) Token: 0x060089CB RID: 35275 RVA: 0x0023DD52 File Offset: 0x0023BF52
		public static LocalizedString UmLanguagePackPrereqCheck
		{
			get
			{
				return new LocalizedString("UmLanguagePackPrereqCheck", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060089CC RID: 35276 RVA: 0x0023DD70 File Offset: 0x0023BF70
		public static LocalizedString ErrorUsedByOrganization(string nameOrg, string namePFDB)
		{
			return new LocalizedString("ErrorUsedByOrganization", "ExFDB178", false, true, Strings.ResourceManager, new object[]
			{
				nameOrg,
				namePFDB
			});
		}

		// Token: 0x060089CD RID: 35277 RVA: 0x0023DDA4 File Offset: 0x0023BFA4
		public static LocalizedString DagNetworkUnknownSubnetWarning(string subnetId)
		{
			return new LocalizedString("DagNetworkUnknownSubnetWarning", "ExFC8150", false, true, Strings.ResourceManager, new object[]
			{
				subnetId
			});
		}

		// Token: 0x060089CE RID: 35278 RVA: 0x0023DDD4 File Offset: 0x0023BFD4
		public static LocalizedString ManageIsapiExtensionCouldNotFindExtensionException(string groupId, string binary)
		{
			return new LocalizedString("ManageIsapiExtensionCouldNotFindExtensionException", "ExA09A6E", false, true, Strings.ResourceManager, new object[]
			{
				groupId,
				binary
			});
		}

		// Token: 0x17002B25 RID: 11045
		// (get) Token: 0x060089CF RID: 35279 RVA: 0x0023DE07 File Offset: 0x0023C007
		public static LocalizedString ADAttributeCustomAttribute6
		{
			get
			{
				return new LocalizedString("ADAttributeCustomAttribute6", "Ex607DA7", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002B26 RID: 11046
		// (get) Token: 0x060089D0 RID: 35280 RVA: 0x0023DE25 File Offset: 0x0023C025
		public static LocalizedString ADAttributeCustomAttribute2
		{
			get
			{
				return new LocalizedString("ADAttributeCustomAttribute2", "Ex408EDE", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060089D1 RID: 35281 RVA: 0x0023DE44 File Offset: 0x0023C044
		public static LocalizedString DomainUsersGroupNotFoundException(string sid)
		{
			return new LocalizedString("DomainUsersGroupNotFoundException", "", false, false, Strings.ResourceManager, new object[]
			{
				sid
			});
		}

		// Token: 0x17002B27 RID: 11047
		// (get) Token: 0x060089D2 RID: 35282 RVA: 0x0023DE73 File Offset: 0x0023C073
		public static LocalizedString ErrorFileNameCannotBeEmptyOrNull
		{
			get
			{
				return new LocalizedString("ErrorFileNameCannotBeEmptyOrNull", "Ex189BED", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060089D3 RID: 35283 RVA: 0x0023DE94 File Offset: 0x0023C094
		public static LocalizedString ErrorLinkedUserAccountIsAlreadyUsed(string user, string mailbox)
		{
			return new LocalizedString("ErrorLinkedUserAccountIsAlreadyUsed", "Ex72A197", false, true, Strings.ResourceManager, new object[]
			{
				user,
				mailbox
			});
		}

		// Token: 0x060089D4 RID: 35284 RVA: 0x0023DEC8 File Offset: 0x0023C0C8
		public static LocalizedString ConfirmationMessageSetDetailsTemplate(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetDetailsTemplate", "Ex13B9C5", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x060089D5 RID: 35285 RVA: 0x0023DEF8 File Offset: 0x0023C0F8
		public static LocalizedString AgentAlreadyRegistered(string assemblyPath)
		{
			return new LocalizedString("AgentAlreadyRegistered", "Ex3A5393", false, true, Strings.ResourceManager, new object[]
			{
				assemblyPath
			});
		}

		// Token: 0x060089D6 RID: 35286 RVA: 0x0023DF28 File Offset: 0x0023C128
		public static LocalizedString ProgressActivityRemovingAddressListTree(string id)
		{
			return new LocalizedString("ProgressActivityRemovingAddressListTree", "ExFD40E3", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x17002B28 RID: 11048
		// (get) Token: 0x060089D7 RID: 35287 RVA: 0x0023DF57 File Offset: 0x0023C157
		public static LocalizedString ConfirmationMessageSetActiveSyncOrganizationSettings
		{
			get
			{
				return new LocalizedString("ConfirmationMessageSetActiveSyncOrganizationSettings", "Ex907947", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060089D8 RID: 35288 RVA: 0x0023DF78 File Offset: 0x0023C178
		public static LocalizedString ErrorProvisioningDomainNotMatchAcceptedDomain(string domain, string organization)
		{
			return new LocalizedString("ErrorProvisioningDomainNotMatchAcceptedDomain", "ExE8FCBA", false, true, Strings.ResourceManager, new object[]
			{
				domain,
				organization
			});
		}

		// Token: 0x17002B29 RID: 11049
		// (get) Token: 0x060089D9 RID: 35289 RVA: 0x0023DFAB File Offset: 0x0023C1AB
		public static LocalizedString NewContentIndexTask
		{
			get
			{
				return new LocalizedString("NewContentIndexTask", "Ex2DD178", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060089DA RID: 35290 RVA: 0x0023DFCC File Offset: 0x0023C1CC
		public static LocalizedString ErrorLargeDataLossNotAccepted(string badItemLimitParamName, string badItemLimitValue, string acceptLargeDataLossParamName, string requestorIdentity)
		{
			return new LocalizedString("ErrorLargeDataLossNotAccepted", "ExD15B33", false, true, Strings.ResourceManager, new object[]
			{
				badItemLimitParamName,
				badItemLimitValue,
				acceptLargeDataLossParamName,
				requestorIdentity
			});
		}

		// Token: 0x060089DB RID: 35291 RVA: 0x0023E008 File Offset: 0x0023C208
		public static LocalizedString ErrorAmbiguousPolicyIdentity(string identity)
		{
			return new LocalizedString("ErrorAmbiguousPolicyIdentity", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x060089DC RID: 35292 RVA: 0x0023E038 File Offset: 0x0023C238
		public static LocalizedString ErrorOabGenFailed(string oabId, string server, string errormsg)
		{
			return new LocalizedString("ErrorOabGenFailed", "ExA6B484", false, true, Strings.ResourceManager, new object[]
			{
				oabId,
				server,
				errormsg
			});
		}

		// Token: 0x060089DD RID: 35293 RVA: 0x0023E070 File Offset: 0x0023C270
		public static LocalizedString WarningDuplicatedPropertyModifiedEntry(string propertyName)
		{
			return new LocalizedString("WarningDuplicatedPropertyModifiedEntry", "ExEB2AA2", false, true, Strings.ResourceManager, new object[]
			{
				propertyName
			});
		}

		// Token: 0x060089DE RID: 35294 RVA: 0x0023E0A0 File Offset: 0x0023C2A0
		public static LocalizedString CasTransactionResultCaseNotHandled(CasTransactionResultEnum result)
		{
			return new LocalizedString("CasTransactionResultCaseNotHandled", "Ex576834", false, true, Strings.ResourceManager, new object[]
			{
				result
			});
		}

		// Token: 0x17002B2A RID: 11050
		// (get) Token: 0x060089DF RID: 35295 RVA: 0x0023E0D4 File Offset: 0x0023C2D4
		public static LocalizedString MapiSubmitSystemProbeSuccesfullyDeleted
		{
			get
			{
				return new LocalizedString("MapiSubmitSystemProbeSuccesfullyDeleted", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002B2B RID: 11051
		// (get) Token: 0x060089E0 RID: 35296 RVA: 0x0023E0F2 File Offset: 0x0023C2F2
		public static LocalizedString ConfirmationMessageSetPop3Config
		{
			get
			{
				return new LocalizedString("ConfirmationMessageSetPop3Config", "ExD8EAB8", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002B2C RID: 11052
		// (get) Token: 0x060089E1 RID: 35297 RVA: 0x0023E110 File Offset: 0x0023C310
		public static LocalizedString Error_MissingOrganizerEmail
		{
			get
			{
				return new LocalizedString("Error_MissingOrganizerEmail", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060089E2 RID: 35298 RVA: 0x0023E130 File Offset: 0x0023C330
		public static LocalizedString ProbeResult(string probeResultString)
		{
			return new LocalizedString("ProbeResult", "", false, false, Strings.ResourceManager, new object[]
			{
				probeResultString
			});
		}

		// Token: 0x060089E3 RID: 35299 RVA: 0x0023E160 File Offset: 0x0023C360
		public static LocalizedString ConfirmationMessageAddSecondaryDomain(string organization, string domain)
		{
			return new LocalizedString("ConfirmationMessageAddSecondaryDomain", "Ex8908F1", false, true, Strings.ResourceManager, new object[]
			{
				organization,
				domain
			});
		}

		// Token: 0x060089E4 RID: 35300 RVA: 0x0023E194 File Offset: 0x0023C394
		public static LocalizedString ConfirmationMessageAddMailboxDatabaseCopy(string Identity, string server)
		{
			return new LocalizedString("ConfirmationMessageAddMailboxDatabaseCopy", "Ex8D02C4", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				server
			});
		}

		// Token: 0x060089E5 RID: 35301 RVA: 0x0023E1C8 File Offset: 0x0023C3C8
		public static LocalizedString WarningMustRunEnableAddressListPagingWithForceSwitch(string alname)
		{
			return new LocalizedString("WarningMustRunEnableAddressListPagingWithForceSwitch", "Ex6B2F38", false, true, Strings.ResourceManager, new object[]
			{
				alname
			});
		}

		// Token: 0x060089E6 RID: 35302 RVA: 0x0023E1F8 File Offset: 0x0023C3F8
		public static LocalizedString ConfirmationMessageRemoveDatabaseAvailabilityGroup(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveDatabaseAvailabilityGroup", "ExA20DFE", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x17002B2D RID: 11053
		// (get) Token: 0x060089E7 RID: 35303 RVA: 0x0023E227 File Offset: 0x0023C427
		public static LocalizedString ExchangeTracingProviderAlreadyExists
		{
			get
			{
				return new LocalizedString("ExchangeTracingProviderAlreadyExists", "Ex3AF8EC", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002B2E RID: 11054
		// (get) Token: 0x060089E8 RID: 35304 RVA: 0x0023E245 File Offset: 0x0023C445
		public static LocalizedString ErrorRpcHttpMustSpecifyExternalClientAuthenticationMethodOrDefaultAuthenticationMethod
		{
			get
			{
				return new LocalizedString("ErrorRpcHttpMustSpecifyExternalClientAuthenticationMethodOrDefaultAuthenticationMethod", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060089E9 RID: 35305 RVA: 0x0023E264 File Offset: 0x0023C464
		public static LocalizedString ErrorNonExistentContact(string user)
		{
			return new LocalizedString("ErrorNonExistentContact", "", false, false, Strings.ResourceManager, new object[]
			{
				user
			});
		}

		// Token: 0x17002B2F RID: 11055
		// (get) Token: 0x060089EA RID: 35306 RVA: 0x0023E293 File Offset: 0x0023C493
		public static LocalizedString InvalidBackupLeaseLocation
		{
			get
			{
				return new LocalizedString("InvalidBackupLeaseLocation", "Ex3B87B5", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060089EB RID: 35307 RVA: 0x0023E2B4 File Offset: 0x0023C4B4
		public static LocalizedString VerboseClearPreferredServer(string prop)
		{
			return new LocalizedString("VerboseClearPreferredServer", "Ex672D78", false, true, Strings.ResourceManager, new object[]
			{
				prop
			});
		}

		// Token: 0x17002B30 RID: 11056
		// (get) Token: 0x060089EC RID: 35308 RVA: 0x0023E2E3 File Offset: 0x0023C4E3
		public static LocalizedString CouldNotFindAutodiscoverStandardAuthBindingTransportElement
		{
			get
			{
				return new LocalizedString("CouldNotFindAutodiscoverStandardAuthBindingTransportElement", "ExD1A9E8", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060089ED RID: 35309 RVA: 0x0023E304 File Offset: 0x0023C504
		public static LocalizedString ErrorStoreMailboxNotUnique(string identity, string mdb)
		{
			return new LocalizedString("ErrorStoreMailboxNotUnique", "Ex9C1E54", false, true, Strings.ResourceManager, new object[]
			{
				identity,
				mdb
			});
		}

		// Token: 0x17002B31 RID: 11057
		// (get) Token: 0x060089EE RID: 35310 RVA: 0x0023E337 File Offset: 0x0023C537
		public static LocalizedString CasConfigurationCheckSuccess
		{
			get
			{
				return new LocalizedString("CasConfigurationCheckSuccess", "Ex48578E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060089EF RID: 35311 RVA: 0x0023E358 File Offset: 0x0023C558
		public static LocalizedString ConfirmationMessageSetRemoteAccountPolicy(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetRemoteAccountPolicy", "Ex019485", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x060089F0 RID: 35312 RVA: 0x0023E388 File Offset: 0x0023C588
		public static LocalizedString ErrorSourceHoldNotTimedOut(string identity, string days, string retirementTimeStart)
		{
			return new LocalizedString("ErrorSourceHoldNotTimedOut", "", false, false, Strings.ResourceManager, new object[]
			{
				identity,
				days,
				retirementTimeStart
			});
		}

		// Token: 0x17002B32 RID: 11058
		// (get) Token: 0x060089F1 RID: 35313 RVA: 0x0023E3BF File Offset: 0x0023C5BF
		public static LocalizedString RetrievingGlobalThrottlingPolicy
		{
			get
			{
				return new LocalizedString("RetrievingGlobalThrottlingPolicy", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002B33 RID: 11059
		// (get) Token: 0x060089F2 RID: 35314 RVA: 0x0023E3DD File Offset: 0x0023C5DD
		public static LocalizedString SetupComponentConfiguringLegacyMailbox
		{
			get
			{
				return new LocalizedString("SetupComponentConfiguringLegacyMailbox", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060089F3 RID: 35315 RVA: 0x0023E3FC File Offset: 0x0023C5FC
		public static LocalizedString SubscriptionInvalidEmailAddress(string emailAddress)
		{
			return new LocalizedString("SubscriptionInvalidEmailAddress", "Ex403F91", false, true, Strings.ResourceManager, new object[]
			{
				emailAddress
			});
		}

		// Token: 0x060089F4 RID: 35316 RVA: 0x0023E42C File Offset: 0x0023C62C
		public static LocalizedString ErrorObjectNotFound(string name)
		{
			return new LocalizedString("ErrorObjectNotFound", "Ex82F2BD", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x17002B34 RID: 11060
		// (get) Token: 0x060089F5 RID: 35317 RVA: 0x0023E45B File Offset: 0x0023C65B
		public static LocalizedString VerboseFixingAddressBooksInNativeMode
		{
			get
			{
				return new LocalizedString("VerboseFixingAddressBooksInNativeMode", "ExDDFBE3", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002B35 RID: 11061
		// (get) Token: 0x060089F6 RID: 35318 RVA: 0x0023E479 File Offset: 0x0023C679
		public static LocalizedString CasHealthEasScenarioCreateItem
		{
			get
			{
				return new LocalizedString("CasHealthEasScenarioCreateItem", "Ex018E22", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060089F7 RID: 35319 RVA: 0x0023E498 File Offset: 0x0023C698
		public static LocalizedString ErrorCertificateSKINotUnique(string cert1Thumbprint, string cert2Thumbprint, string SKI)
		{
			return new LocalizedString("ErrorCertificateSKINotUnique", "ExC19D43", false, true, Strings.ResourceManager, new object[]
			{
				cert1Thumbprint,
				cert2Thumbprint,
				SKI
			});
		}

		// Token: 0x17002B36 RID: 11062
		// (get) Token: 0x060089F8 RID: 35320 RVA: 0x0023E4CF File Offset: 0x0023C6CF
		public static LocalizedString FfoWebServiceEcpComponentDescription
		{
			get
			{
				return new LocalizedString("FfoWebServiceEcpComponentDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002B37 RID: 11063
		// (get) Token: 0x060089F9 RID: 35321 RVA: 0x0023E4ED File Offset: 0x0023C6ED
		public static LocalizedString SetupProgressStartingThrottlingService
		{
			get
			{
				return new LocalizedString("SetupProgressStartingThrottlingService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060089FA RID: 35322 RVA: 0x0023E50C File Offset: 0x0023C70C
		public static LocalizedString ConfirmationMessageRemoveRecipientTemplateProvisioningPolicy(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveRecipientTemplateProvisioningPolicy", "Ex50735F", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x060089FB RID: 35323 RVA: 0x0023E53C File Offset: 0x0023C73C
		public static LocalizedString CasHealthOwaErrorPageErrorMessage(string message)
		{
			return new LocalizedString("CasHealthOwaErrorPageErrorMessage", "ExCBD689", false, true, Strings.ResourceManager, new object[]
			{
				message
			});
		}

		// Token: 0x060089FC RID: 35324 RVA: 0x0023E56C File Offset: 0x0023C76C
		public static LocalizedString ErrorNotEnoughConfigPermissions(string organization)
		{
			return new LocalizedString("ErrorNotEnoughConfigPermissions", "ExB82D08", false, true, Strings.ResourceManager, new object[]
			{
				organization
			});
		}

		// Token: 0x060089FD RID: 35325 RVA: 0x0023E59C File Offset: 0x0023C79C
		public static LocalizedString ErrorRequestJobAlreadyOnProperQueue(string identity, string queue)
		{
			return new LocalizedString("ErrorRequestJobAlreadyOnProperQueue", "", false, false, Strings.ResourceManager, new object[]
			{
				identity,
				queue
			});
		}

		// Token: 0x17002B38 RID: 11064
		// (get) Token: 0x060089FE RID: 35326 RVA: 0x0023E5CF File Offset: 0x0023C7CF
		public static LocalizedString TransitionStateActive
		{
			get
			{
				return new LocalizedString("TransitionStateActive", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060089FF RID: 35327 RVA: 0x0023E5F0 File Offset: 0x0023C7F0
		public static LocalizedString ExchangeConfigContainerDataValidationException(string validationError)
		{
			return new LocalizedString("ExchangeConfigContainerDataValidationException", "ExBE02AC", false, true, Strings.ResourceManager, new object[]
			{
				validationError
			});
		}

		// Token: 0x17002B39 RID: 11065
		// (get) Token: 0x06008A00 RID: 35328 RVA: 0x0023E61F File Offset: 0x0023C81F
		public static LocalizedString UMCallAnsweringRuleDescriptionIf
		{
			get
			{
				return new LocalizedString("UMCallAnsweringRuleDescriptionIf", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002B3A RID: 11066
		// (get) Token: 0x06008A01 RID: 35329 RVA: 0x0023E63D File Offset: 0x0023C83D
		public static LocalizedString InvalidTransportRule
		{
			get
			{
				return new LocalizedString("InvalidTransportRule", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002B3B RID: 11067
		// (get) Token: 0x06008A02 RID: 35330 RVA: 0x0023E65B File Offset: 0x0023C85B
		public static LocalizedString ImapExternalServerSettings
		{
			get
			{
				return new LocalizedString("ImapExternalServerSettings", "Ex2C05D9", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002B3C RID: 11068
		// (get) Token: 0x06008A03 RID: 35331 RVA: 0x0023E679 File Offset: 0x0023C879
		public static LocalizedString ErrorNoPropertyWasModified
		{
			get
			{
				return new LocalizedString("ErrorNoPropertyWasModified", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008A04 RID: 35332 RVA: 0x0023E698 File Offset: 0x0023C898
		public static LocalizedString ErrorSearchUserNotUnique(string idStringValue)
		{
			return new LocalizedString("ErrorSearchUserNotUnique", "Ex59DA1F", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		// Token: 0x17002B3D RID: 11069
		// (get) Token: 0x06008A05 RID: 35333 RVA: 0x0023E6C7 File Offset: 0x0023C8C7
		public static LocalizedString DisclaimerText
		{
			get
			{
				return new LocalizedString("DisclaimerText", "Ex714D1D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008A06 RID: 35334 RVA: 0x0023E6E8 File Offset: 0x0023C8E8
		public static LocalizedString ErrorMailboxDatabaseNotOnE15Server(string database)
		{
			return new LocalizedString("ErrorMailboxDatabaseNotOnE15Server", "", false, false, Strings.ResourceManager, new object[]
			{
				database
			});
		}

		// Token: 0x17002B3E RID: 11070
		// (get) Token: 0x06008A07 RID: 35335 RVA: 0x0023E717 File Offset: 0x0023C917
		public static LocalizedString InterceptorWarningPathIgnored
		{
			get
			{
				return new LocalizedString("InterceptorWarningPathIgnored", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008A08 RID: 35336 RVA: 0x0023E738 File Offset: 0x0023C938
		public static LocalizedString ConfirmationMessageConfigureWSRMPolicy(string name, string process)
		{
			return new LocalizedString("ConfirmationMessageConfigureWSRMPolicy", "Ex9D1A8A", false, true, Strings.ResourceManager, new object[]
			{
				name,
				process
			});
		}

		// Token: 0x06008A09 RID: 35337 RVA: 0x0023E76C File Offset: 0x0023C96C
		public static LocalizedString ErrorOrganizationThrottlingPolicyAlreadyExists(string orgId)
		{
			return new LocalizedString("ErrorOrganizationThrottlingPolicyAlreadyExists", "", false, false, Strings.ResourceManager, new object[]
			{
				orgId
			});
		}

		// Token: 0x06008A0A RID: 35338 RVA: 0x0023E79C File Offset: 0x0023C99C
		public static LocalizedString ErrorThrottlingPolicyNotFound(string policyDN)
		{
			return new LocalizedString("ErrorThrottlingPolicyNotFound", "Ex6ADD14", false, true, Strings.ResourceManager, new object[]
			{
				policyDN
			});
		}

		// Token: 0x17002B3F RID: 11071
		// (get) Token: 0x06008A0B RID: 35339 RVA: 0x0023E7CB File Offset: 0x0023C9CB
		public static LocalizedString CannotCombineWildcardSenderAddress
		{
			get
			{
				return new LocalizedString("CannotCombineWildcardSenderAddress", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002B40 RID: 11072
		// (get) Token: 0x06008A0C RID: 35340 RVA: 0x0023E7E9 File Offset: 0x0023C9E9
		public static LocalizedString SetupProgressOwaInstantMessagingEnabled
		{
			get
			{
				return new LocalizedString("SetupProgressOwaInstantMessagingEnabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002B41 RID: 11073
		// (get) Token: 0x06008A0D RID: 35341 RVA: 0x0023E807 File Offset: 0x0023CA07
		public static LocalizedString SetupProgressCleanupOldMailboxPlan
		{
			get
			{
				return new LocalizedString("SetupProgressCleanupOldMailboxPlan", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008A0E RID: 35342 RVA: 0x0023E828 File Offset: 0x0023CA28
		public static LocalizedString ProtocolLogAttachmentNote(string protocol)
		{
			return new LocalizedString("ProtocolLogAttachmentNote", "Ex846F7E", false, true, Strings.ResourceManager, new object[]
			{
				protocol
			});
		}

		// Token: 0x06008A0F RID: 35343 RVA: 0x0023E858 File Offset: 0x0023CA58
		public static LocalizedString ClassificationRuleCollectionOobRulesRemoved(string removedOobRuleIds)
		{
			return new LocalizedString("ClassificationRuleCollectionOobRulesRemoved", "", false, false, Strings.ResourceManager, new object[]
			{
				removedOobRuleIds
			});
		}

		// Token: 0x06008A10 RID: 35344 RVA: 0x0023E888 File Offset: 0x0023CA88
		public static LocalizedString ErrorInvalidExternalUserId(string userId)
		{
			return new LocalizedString("ErrorInvalidExternalUserId", "", false, false, Strings.ResourceManager, new object[]
			{
				userId
			});
		}

		// Token: 0x17002B42 RID: 11074
		// (get) Token: 0x06008A11 RID: 35345 RVA: 0x0023E8B7 File Offset: 0x0023CAB7
		public static LocalizedString InvalidRejectEnhancedStatus
		{
			get
			{
				return new LocalizedString("InvalidRejectEnhancedStatus", "ExFD496E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008A12 RID: 35346 RVA: 0x0023E8D8 File Offset: 0x0023CAD8
		public static LocalizedString SetLiveFedUriReserveRequest(string domain)
		{
			return new LocalizedString("SetLiveFedUriReserveRequest", "ExFA3B01", false, true, Strings.ResourceManager, new object[]
			{
				domain
			});
		}

		// Token: 0x06008A13 RID: 35347 RVA: 0x0023E908 File Offset: 0x0023CB08
		public static LocalizedString DlpPolicyOptionalParameterNotSupplied(string parameterName)
		{
			return new LocalizedString("DlpPolicyOptionalParameterNotSupplied", "", false, false, Strings.ResourceManager, new object[]
			{
				parameterName
			});
		}

		// Token: 0x17002B43 RID: 11075
		// (get) Token: 0x06008A14 RID: 35348 RVA: 0x0023E937 File Offset: 0x0023CB37
		public static LocalizedString CouldNotFindLocalhostDirectoryEntryException
		{
			get
			{
				return new LocalizedString("CouldNotFindLocalhostDirectoryEntryException", "Ex9A849C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002B44 RID: 11076
		// (get) Token: 0x06008A15 RID: 35349 RVA: 0x0023E955 File Offset: 0x0023CB55
		public static LocalizedString TSCrashDumpsOnlyAvailableOnLocalMachine
		{
			get
			{
				return new LocalizedString("TSCrashDumpsOnlyAvailableOnLocalMachine", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008A16 RID: 35350 RVA: 0x0023E974 File Offset: 0x0023CB74
		public static LocalizedString ErrorFaildToWriteRegistry(string server, string errorMessage)
		{
			return new LocalizedString("ErrorFaildToWriteRegistry", "Ex124C3A", false, true, Strings.ResourceManager, new object[]
			{
				server,
				errorMessage
			});
		}

		// Token: 0x17002B45 RID: 11077
		// (get) Token: 0x06008A17 RID: 35351 RVA: 0x0023E9A7 File Offset: 0x0023CBA7
		public static LocalizedString ConfirmSetSyncDaemonArbitrationConfig
		{
			get
			{
				return new LocalizedString("ConfirmSetSyncDaemonArbitrationConfig", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002B46 RID: 11078
		// (get) Token: 0x06008A18 RID: 35352 RVA: 0x0023E9C5 File Offset: 0x0023CBC5
		public static LocalizedString MustProvideValidSessionForFindingRequests
		{
			get
			{
				return new LocalizedString("MustProvideValidSessionForFindingRequests", "Ex1B013C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008A19 RID: 35353 RVA: 0x0023E9E4 File Offset: 0x0023CBE4
		public static LocalizedString ErrorDistributionListJoinClosed(string id)
		{
			return new LocalizedString("ErrorDistributionListJoinClosed", "Ex3DE884", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x06008A1A RID: 35354 RVA: 0x0023EA14 File Offset: 0x0023CC14
		public static LocalizedString EBDInvalidBundle(string path)
		{
			return new LocalizedString("EBDInvalidBundle", "ExD4553A", false, true, Strings.ResourceManager, new object[]
			{
				path
			});
		}

		// Token: 0x06008A1B RID: 35355 RVA: 0x0023EA44 File Offset: 0x0023CC44
		public static LocalizedString CasHealthAutodiscoverServer(string serverName, string emailAddress)
		{
			return new LocalizedString("CasHealthAutodiscoverServer", "ExE0C9CA", false, true, Strings.ResourceManager, new object[]
			{
				serverName,
				emailAddress
			});
		}

		// Token: 0x06008A1C RID: 35356 RVA: 0x0023EA78 File Offset: 0x0023CC78
		public static LocalizedString ConfirmationMessageRemovePartnerApplication(string name)
		{
			return new LocalizedString("ConfirmationMessageRemovePartnerApplication", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x06008A1D RID: 35357 RVA: 0x0023EAA8 File Offset: 0x0023CCA8
		public static LocalizedString ErrorManagedFolderMailboxPolicyNotUnique(string idStringValue)
		{
			return new LocalizedString("ErrorManagedFolderMailboxPolicyNotUnique", "Ex5302A4", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		// Token: 0x06008A1E RID: 35358 RVA: 0x0023EAD8 File Offset: 0x0023CCD8
		public static LocalizedString GetDbcsRpcQuery(string server, string sg)
		{
			return new LocalizedString("GetDbcsRpcQuery", "ExCFC639", false, true, Strings.ResourceManager, new object[]
			{
				server,
				sg
			});
		}

		// Token: 0x06008A1F RID: 35359 RVA: 0x0023EB0C File Offset: 0x0023CD0C
		public static LocalizedString ErrorWindowsLiveIdAssociatedWithAnotherRecipient(string liveID, string recipient)
		{
			return new LocalizedString("ErrorWindowsLiveIdAssociatedWithAnotherRecipient", "Ex78D924", false, true, Strings.ResourceManager, new object[]
			{
				liveID,
				recipient
			});
		}

		// Token: 0x17002B47 RID: 11079
		// (get) Token: 0x06008A20 RID: 35360 RVA: 0x0023EB3F File Offset: 0x0023CD3F
		public static LocalizedString PopImapConnecting
		{
			get
			{
				return new LocalizedString("PopImapConnecting", "ExDA17F7", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002B48 RID: 11080
		// (get) Token: 0x06008A21 RID: 35361 RVA: 0x0023EB5D File Offset: 0x0023CD5D
		public static LocalizedString SetupComponentCommonTenantConfigLast
		{
			get
			{
				return new LocalizedString("SetupComponentCommonTenantConfigLast", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008A22 RID: 35362 RVA: 0x0023EB7C File Offset: 0x0023CD7C
		public static LocalizedString MoveMailboxNullOrEmptyStringInParameter(int i, string parameter)
		{
			return new LocalizedString("MoveMailboxNullOrEmptyStringInParameter", "Ex78A3FB", false, true, Strings.ResourceManager, new object[]
			{
				i,
				parameter
			});
		}

		// Token: 0x06008A23 RID: 35363 RVA: 0x0023EBB4 File Offset: 0x0023CDB4
		public static LocalizedString ErrorLiveDomainServicesUnexpectedResult(string message)
		{
			return new LocalizedString("ErrorLiveDomainServicesUnexpectedResult", "Ex38DFE6", false, true, Strings.ResourceManager, new object[]
			{
				message
			});
		}

		// Token: 0x17002B49 RID: 11081
		// (get) Token: 0x06008A24 RID: 35364 RVA: 0x0023EBE3 File Offset: 0x0023CDE3
		public static LocalizedString InstallShareIISLogFileDirectoryTask
		{
			get
			{
				return new LocalizedString("InstallShareIISLogFileDirectoryTask", "ExFA9D54", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002B4A RID: 11082
		// (get) Token: 0x06008A25 RID: 35365 RVA: 0x0023EC01 File Offset: 0x0023CE01
		public static LocalizedString ErrorBPAConfigDataLoad
		{
			get
			{
				return new LocalizedString("ErrorBPAConfigDataLoad", "Ex605A60", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002B4B RID: 11083
		// (get) Token: 0x06008A26 RID: 35366 RVA: 0x0023EC1F File Offset: 0x0023CE1F
		public static LocalizedString UninstallHealthManagerServiceTask
		{
			get
			{
				return new LocalizedString("UninstallHealthManagerServiceTask", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008A27 RID: 35367 RVA: 0x0023EC40 File Offset: 0x0023CE40
		public static LocalizedString RequiredReportingParameter(string property)
		{
			return new LocalizedString("RequiredReportingParameter", "", false, false, Strings.ResourceManager, new object[]
			{
				property
			});
		}

		// Token: 0x06008A28 RID: 35368 RVA: 0x0023EC70 File Offset: 0x0023CE70
		public static LocalizedString OutOfRangeSlaTaget(string start, string end)
		{
			return new LocalizedString("OutOfRangeSlaTaget", "Ex66C491", false, true, Strings.ResourceManager, new object[]
			{
				start,
				end
			});
		}

		// Token: 0x17002B4C RID: 11084
		// (get) Token: 0x06008A29 RID: 35369 RVA: 0x0023ECA3 File Offset: 0x0023CEA3
		public static LocalizedString MtrtEventSubmit
		{
			get
			{
				return new LocalizedString("MtrtEventSubmit", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008A2A RID: 35370 RVA: 0x0023ECC4 File Offset: 0x0023CEC4
		public static LocalizedString MailboxSearchTaskException(string failure)
		{
			return new LocalizedString("MailboxSearchTaskException", "ExBDC162", false, true, Strings.ResourceManager, new object[]
			{
				failure
			});
		}

		// Token: 0x17002B4D RID: 11085
		// (get) Token: 0x06008A2B RID: 35371 RVA: 0x0023ECF3 File Offset: 0x0023CEF3
		public static LocalizedString ErrorCertificateMissingPrivateKey
		{
			get
			{
				return new LocalizedString("ErrorCertificateMissingPrivateKey", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008A2C RID: 35372 RVA: 0x0023ED14 File Offset: 0x0023CF14
		public static LocalizedString RecipientNotFoundInOrganization(string recipient)
		{
			return new LocalizedString("RecipientNotFoundInOrganization", "ExC4D93A", false, true, Strings.ResourceManager, new object[]
			{
				recipient
			});
		}

		// Token: 0x06008A2D RID: 35373 RVA: 0x0023ED44 File Offset: 0x0023CF44
		public static LocalizedString ErrorCannotModifyContentSettingsLinkedToTag(string idCs)
		{
			return new LocalizedString("ErrorCannotModifyContentSettingsLinkedToTag", "", false, false, Strings.ResourceManager, new object[]
			{
				idCs
			});
		}

		// Token: 0x06008A2E RID: 35374 RVA: 0x0023ED74 File Offset: 0x0023CF74
		public static LocalizedString DbCopyAlreadyHostedOnServerException(string database, string hostServer)
		{
			return new LocalizedString("DbCopyAlreadyHostedOnServerException", "", false, false, Strings.ResourceManager, new object[]
			{
				database,
				hostServer
			});
		}

		// Token: 0x06008A2F RID: 35375 RVA: 0x0023EDA8 File Offset: 0x0023CFA8
		public static LocalizedString ConfirmationMessageEnableCmdletExtensionAgent(string identity)
		{
			return new LocalizedString("ConfirmationMessageEnableCmdletExtensionAgent", "Ex7816A8", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x06008A30 RID: 35376 RVA: 0x0023EDD8 File Offset: 0x0023CFD8
		public static LocalizedString ExTrustedSubsystemGroupNotFoundException(Guid guid)
		{
			return new LocalizedString("ExTrustedSubsystemGroupNotFoundException", "Ex252350", false, true, Strings.ResourceManager, new object[]
			{
				guid
			});
		}

		// Token: 0x17002B4E RID: 11086
		// (get) Token: 0x06008A31 RID: 35377 RVA: 0x0023EE0C File Offset: 0x0023D00C
		public static LocalizedString RecipientDomainStarOnPremiseOutboundConnector
		{
			get
			{
				return new LocalizedString("RecipientDomainStarOnPremiseOutboundConnector", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002B4F RID: 11087
		// (get) Token: 0x06008A32 RID: 35378 RVA: 0x0023EE2A File Offset: 0x0023D02A
		public static LocalizedString CertificateStatusUntrusted
		{
			get
			{
				return new LocalizedString("CertificateStatusUntrusted", "ExADE808", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008A33 RID: 35379 RVA: 0x0023EE48 File Offset: 0x0023D048
		public static LocalizedString CannotDeleteAssociatedMailboxPolicyException(string dn)
		{
			return new LocalizedString("CannotDeleteAssociatedMailboxPolicyException", "ExCB739F", false, true, Strings.ResourceManager, new object[]
			{
				dn
			});
		}

		// Token: 0x06008A34 RID: 35380 RVA: 0x0023EE78 File Offset: 0x0023D078
		public static LocalizedString ResumeSuccessInformationalMessage(string name)
		{
			return new LocalizedString("ResumeSuccessInformationalMessage", "ExFB44AA", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x17002B50 RID: 11088
		// (get) Token: 0x06008A35 RID: 35381 RVA: 0x0023EEA7 File Offset: 0x0023D0A7
		public static LocalizedString SetupProgressStartingReplayService
		{
			get
			{
				return new LocalizedString("SetupProgressStartingReplayService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008A36 RID: 35382 RVA: 0x0023EEC8 File Offset: 0x0023D0C8
		public static LocalizedString ErrorFailedToCreateMember(string memberName, string message)
		{
			return new LocalizedString("ErrorFailedToCreateMember", "ExC7E00A", false, true, Strings.ResourceManager, new object[]
			{
				memberName,
				message
			});
		}

		// Token: 0x17002B51 RID: 11089
		// (get) Token: 0x06008A37 RID: 35383 RVA: 0x0023EEFB File Offset: 0x0023D0FB
		public static LocalizedString InstallReplayServiceTask
		{
			get
			{
				return new LocalizedString("InstallReplayServiceTask", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008A38 RID: 35384 RVA: 0x0023EF1C File Offset: 0x0023D11C
		public static LocalizedString DatabaseCopyStateCheckDesc(CopyStatus copyState)
		{
			return new LocalizedString("DatabaseCopyStateCheckDesc", "Ex18D820", false, true, Strings.ResourceManager, new object[]
			{
				copyState
			});
		}

		// Token: 0x06008A39 RID: 35385 RVA: 0x0023EF50 File Offset: 0x0023D150
		public static LocalizedString CouldNotRemoveRequest(string identity)
		{
			return new LocalizedString("CouldNotRemoveRequest", "Ex808B80", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x17002B52 RID: 11090
		// (get) Token: 0x06008A3A RID: 35386 RVA: 0x0023EF7F File Offset: 0x0023D17F
		public static LocalizedString InvalidDirection
		{
			get
			{
				return new LocalizedString("InvalidDirection", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008A3B RID: 35387 RVA: 0x0023EFA0 File Offset: 0x0023D1A0
		public static LocalizedString ConfirmationMessageSetOwaVirtualDirectory(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetOwaVirtualDirectory", "Ex0D9481", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x17002B53 RID: 11091
		// (get) Token: 0x06008A3C RID: 35388 RVA: 0x0023EFCF File Offset: 0x0023D1CF
		public static LocalizedString SetupProgressUpdateDatabaseSettings
		{
			get
			{
				return new LocalizedString("SetupProgressUpdateDatabaseSettings", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008A3D RID: 35389 RVA: 0x0023EFF0 File Offset: 0x0023D1F0
		public static LocalizedString ErrorAssigneeUserNotFound(string id)
		{
			return new LocalizedString("ErrorAssigneeUserNotFound", "ExFDFD65", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x06008A3E RID: 35390 RVA: 0x0023F020 File Offset: 0x0023D220
		public static LocalizedString ErrorSetScopeToBlockSelf(string id, string assignmentId)
		{
			return new LocalizedString("ErrorSetScopeToBlockSelf", "ExB50DEA", false, true, Strings.ResourceManager, new object[]
			{
				id,
				assignmentId
			});
		}

		// Token: 0x17002B54 RID: 11092
		// (get) Token: 0x06008A3F RID: 35391 RVA: 0x0023F053 File Offset: 0x0023D253
		public static LocalizedString ErrorCannotChangeLinkedProperty
		{
			get
			{
				return new LocalizedString("ErrorCannotChangeLinkedProperty", "ExA44DCA", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008A40 RID: 35392 RVA: 0x0023F074 File Offset: 0x0023D274
		public static LocalizedString ErrorInvalidMemberName(string memberName)
		{
			return new LocalizedString("ErrorInvalidMemberName", "Ex37D68B", false, true, Strings.ResourceManager, new object[]
			{
				memberName
			});
		}

		// Token: 0x17002B55 RID: 11093
		// (get) Token: 0x06008A41 RID: 35393 RVA: 0x0023F0A3 File Offset: 0x0023D2A3
		public static LocalizedString LanguagePackPerfCounterMergeStart
		{
			get
			{
				return new LocalizedString("LanguagePackPerfCounterMergeStart", "Ex2EE092", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002B56 RID: 11094
		// (get) Token: 0x06008A42 RID: 35394 RVA: 0x0023F0C1 File Offset: 0x0023D2C1
		public static LocalizedString DefaultSharingPolicyName
		{
			get
			{
				return new LocalizedString("DefaultSharingPolicyName", "Ex81D245", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008A43 RID: 35395 RVA: 0x0023F0E0 File Offset: 0x0023D2E0
		public static LocalizedString VerboseMountDatabaseDataLoss(string id)
		{
			return new LocalizedString("VerboseMountDatabaseDataLoss", "Ex671475", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x06008A44 RID: 35396 RVA: 0x0023F110 File Offset: 0x0023D310
		public static LocalizedString MailboxSearchObjectWithHoldIdentityNotFound(string id)
		{
			return new LocalizedString("MailboxSearchObjectWithHoldIdentityNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x17002B57 RID: 11095
		// (get) Token: 0x06008A45 RID: 35397 RVA: 0x0023F13F File Offset: 0x0023D33F
		public static LocalizedString SetupProgressCreateClassificationDefinitionsContainer
		{
			get
			{
				return new LocalizedString("SetupProgressCreateClassificationDefinitionsContainer", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008A46 RID: 35398 RVA: 0x0023F160 File Offset: 0x0023D360
		public static LocalizedString InvalidUMPilotIdentifierListEntry(string entryValue)
		{
			return new LocalizedString("InvalidUMPilotIdentifierListEntry", "ExF0C58D", false, true, Strings.ResourceManager, new object[]
			{
				entryValue
			});
		}

		// Token: 0x06008A47 RID: 35399 RVA: 0x0023F190 File Offset: 0x0023D390
		public static LocalizedString SeedingErrorFileIsDirectory(string field, string directory)
		{
			return new LocalizedString("SeedingErrorFileIsDirectory", "ExB312D1", false, true, Strings.ResourceManager, new object[]
			{
				field,
				directory
			});
		}

		// Token: 0x06008A48 RID: 35400 RVA: 0x0023F1C4 File Offset: 0x0023D3C4
		public static LocalizedString ConfirmationMessageRemoveClassificationRuleCollection(string identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveClassificationRuleCollection", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x17002B58 RID: 11096
		// (get) Token: 0x06008A49 RID: 35401 RVA: 0x0023F1F3 File Offset: 0x0023D3F3
		public static LocalizedString SecurityDescriptorBeingUpdatedMsg
		{
			get
			{
				return new LocalizedString("SecurityDescriptorBeingUpdatedMsg", "Ex7FF168", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008A4A RID: 35402 RVA: 0x0023F214 File Offset: 0x0023D414
		public static LocalizedString VerboseCopyDatabaseLogFiles(string server, string oldDir, string newDir)
		{
			return new LocalizedString("VerboseCopyDatabaseLogFiles", "Ex82395F", false, true, Strings.ResourceManager, new object[]
			{
				server,
				oldDir,
				newDir
			});
		}

		// Token: 0x06008A4B RID: 35403 RVA: 0x0023F24C File Offset: 0x0023D44C
		public static LocalizedString ConfirmationMessageSetPolicyTipConfig(string identity)
		{
			return new LocalizedString("ConfirmationMessageSetPolicyTipConfig", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x17002B59 RID: 11097
		// (get) Token: 0x06008A4C RID: 35404 RVA: 0x0023F27B File Offset: 0x0023D47B
		public static LocalizedString MtrtRequireDecryption
		{
			get
			{
				return new LocalizedString("MtrtRequireDecryption", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008A4D RID: 35405 RVA: 0x0023F29C File Offset: 0x0023D49C
		public static LocalizedString InstallIisWebServiceExtensionExists(string GroupID, string executablePath)
		{
			return new LocalizedString("InstallIisWebServiceExtensionExists", "Ex1345AC", false, true, Strings.ResourceManager, new object[]
			{
				GroupID,
				executablePath
			});
		}

		// Token: 0x06008A4E RID: 35406 RVA: 0x0023F2D0 File Offset: 0x0023D4D0
		public static LocalizedString ErrorPfDatabaseAlreadyExists(string pfDatabaseName, string serverName)
		{
			return new LocalizedString("ErrorPfDatabaseAlreadyExists", "Ex7CCE1A", false, true, Strings.ResourceManager, new object[]
			{
				pfDatabaseName,
				serverName
			});
		}

		// Token: 0x17002B5A RID: 11098
		// (get) Token: 0x06008A4F RID: 35407 RVA: 0x0023F303 File Offset: 0x0023D503
		public static LocalizedString ErrorTeamMailboxCanNotLinkSharePointByNonOwner
		{
			get
			{
				return new LocalizedString("ErrorTeamMailboxCanNotLinkSharePointByNonOwner", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008A50 RID: 35408 RVA: 0x0023F324 File Offset: 0x0023D524
		public static LocalizedString StatusMessageUpdatePublicFolderMailboxUnderProgress(string jobStatus)
		{
			return new LocalizedString("StatusMessageUpdatePublicFolderMailboxUnderProgress", "", false, false, Strings.ResourceManager, new object[]
			{
				jobStatus
			});
		}

		// Token: 0x06008A51 RID: 35409 RVA: 0x0023F354 File Offset: 0x0023D554
		public static LocalizedString ConfirmationMessageRemoveSystemMessage(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveSystemMessage", "ExBDA944", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x06008A52 RID: 35410 RVA: 0x0023F384 File Offset: 0x0023D584
		public static LocalizedString ErrorCannotParseUsefulHostnameFrom(string url)
		{
			return new LocalizedString("ErrorCannotParseUsefulHostnameFrom", "", false, false, Strings.ResourceManager, new object[]
			{
				url
			});
		}

		// Token: 0x17002B5B RID: 11099
		// (get) Token: 0x06008A53 RID: 35411 RVA: 0x0023F3B3 File Offset: 0x0023D5B3
		public static LocalizedString ErrorMailboxPlanInvalidInThisRelease
		{
			get
			{
				return new LocalizedString("ErrorMailboxPlanInvalidInThisRelease", "Ex08341A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002B5C RID: 11100
		// (get) Token: 0x06008A54 RID: 35412 RVA: 0x0023F3D1 File Offset: 0x0023D5D1
		public static LocalizedString BadWordsPolicyNotEnabledIfBadWordsListNull
		{
			get
			{
				return new LocalizedString("BadWordsPolicyNotEnabledIfBadWordsListNull", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008A55 RID: 35413 RVA: 0x0023F3F0 File Offset: 0x0023D5F0
		public static LocalizedString ErrorInvalidFingerprint(string content)
		{
			return new LocalizedString("ErrorInvalidFingerprint", "", false, false, Strings.ResourceManager, new object[]
			{
				content
			});
		}

		// Token: 0x06008A56 RID: 35414 RVA: 0x0023F420 File Offset: 0x0023D620
		public static LocalizedString SeederEndDbSeedRpcFailedException(string dbName, string targetMachine, string errMessage)
		{
			return new LocalizedString("SeederEndDbSeedRpcFailedException", "", false, false, Strings.ResourceManager, new object[]
			{
				dbName,
				targetMachine,
				errMessage
			});
		}

		// Token: 0x06008A57 RID: 35415 RVA: 0x0023F458 File Offset: 0x0023D658
		public static LocalizedString ErrorGroupNotFound(string idStringValue)
		{
			return new LocalizedString("ErrorGroupNotFound", "Ex81E4F3", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		// Token: 0x06008A58 RID: 35416 RVA: 0x0023F488 File Offset: 0x0023D688
		public static LocalizedString ErrorSetPublicFolderMailRecipientGuidNotFoundInAd(string mailRecipientGuid)
		{
			return new LocalizedString("ErrorSetPublicFolderMailRecipientGuidNotFoundInAd", "", false, false, Strings.ResourceManager, new object[]
			{
				mailRecipientGuid
			});
		}

		// Token: 0x06008A59 RID: 35417 RVA: 0x0023F4B8 File Offset: 0x0023D6B8
		public static LocalizedString MaximumAllowedNumberOfGatewayIPAddressesExceededId(int maxAllowed)
		{
			return new LocalizedString("MaximumAllowedNumberOfGatewayIPAddressesExceededId", "", false, false, Strings.ResourceManager, new object[]
			{
				maxAllowed
			});
		}

		// Token: 0x06008A5A RID: 35418 RVA: 0x0023F4EC File Offset: 0x0023D6EC
		public static LocalizedString OutlookConnectivityErrorUserNotUnique(string identity)
		{
			return new LocalizedString("OutlookConnectivityErrorUserNotUnique", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x17002B5D RID: 11101
		// (get) Token: 0x06008A5B RID: 35419 RVA: 0x0023F51B File Offset: 0x0023D71B
		public static LocalizedString ProgressTaskComplete
		{
			get
			{
				return new LocalizedString("ProgressTaskComplete", "Ex7BB6B5", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008A5C RID: 35420 RVA: 0x0023F53C File Offset: 0x0023D73C
		public static LocalizedString InfoCreatedWKGuid(string guid, string target, string container)
		{
			return new LocalizedString("InfoCreatedWKGuid", "Ex0E3D06", false, true, Strings.ResourceManager, new object[]
			{
				guid,
				target,
				container
			});
		}

		// Token: 0x17002B5E RID: 11102
		// (get) Token: 0x06008A5D RID: 35421 RVA: 0x0023F573 File Offset: 0x0023D773
		public static LocalizedString SetupProgressDisableWMIRPCSS
		{
			get
			{
				return new LocalizedString("SetupProgressDisableWMIRPCSS", "Ex4B3199", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008A5E RID: 35422 RVA: 0x0023F594 File Offset: 0x0023D794
		public static LocalizedString ErrorDbCopyNotHostedOnServer(string db, string server)
		{
			return new LocalizedString("ErrorDbCopyNotHostedOnServer", "Ex924E27", false, true, Strings.ResourceManager, new object[]
			{
				db,
				server
			});
		}

		// Token: 0x06008A5F RID: 35423 RVA: 0x0023F5C8 File Offset: 0x0023D7C8
		public static LocalizedString ErrorAddressListOrGlobalAddressListNotUnique(string idStringValue)
		{
			return new LocalizedString("ErrorAddressListOrGlobalAddressListNotUnique", "ExECC38C", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		// Token: 0x17002B5F RID: 11103
		// (get) Token: 0x06008A60 RID: 35424 RVA: 0x0023F5F7 File Offset: 0x0023D7F7
		public static LocalizedString OrgPrereqCheck
		{
			get
			{
				return new LocalizedString("OrgPrereqCheck", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002B60 RID: 11104
		// (get) Token: 0x06008A61 RID: 35425 RVA: 0x0023F615 File Offset: 0x0023D815
		public static LocalizedString MtrtSetHeader
		{
			get
			{
				return new LocalizedString("MtrtSetHeader", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002B61 RID: 11105
		// (get) Token: 0x06008A62 RID: 35426 RVA: 0x0023F633 File Offset: 0x0023D833
		public static LocalizedString CannotRunOnEdge
		{
			get
			{
				return new LocalizedString("CannotRunOnEdge", "ExD80F97", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008A63 RID: 35427 RVA: 0x0023F654 File Offset: 0x0023D854
		public static LocalizedString RecipientNotUniqueException(string recipient)
		{
			return new LocalizedString("RecipientNotUniqueException", "ExB45496", false, true, Strings.ResourceManager, new object[]
			{
				recipient
			});
		}

		// Token: 0x06008A64 RID: 35428 RVA: 0x0023F684 File Offset: 0x0023D884
		public static LocalizedString ErrorAuditLogMailboxShouldBeDeletedWithAuditLogSpecified(string identity)
		{
			return new LocalizedString("ErrorAuditLogMailboxShouldBeDeletedWithAuditLogSpecified", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x17002B62 RID: 11106
		// (get) Token: 0x06008A65 RID: 35429 RVA: 0x0023F6B3 File Offset: 0x0023D8B3
		public static LocalizedString InterceptorErrorConditionHeaderNameMissing
		{
			get
			{
				return new LocalizedString("InterceptorErrorConditionHeaderNameMissing", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008A66 RID: 35430 RVA: 0x0023F6D4 File Offset: 0x0023D8D4
		public static LocalizedString ParameterConflict(string parameter1, string parameter2)
		{
			return new LocalizedString("ParameterConflict", "", false, false, Strings.ResourceManager, new object[]
			{
				parameter1,
				parameter2
			});
		}

		// Token: 0x17002B63 RID: 11107
		// (get) Token: 0x06008A67 RID: 35431 RVA: 0x0023F707 File Offset: 0x0023D907
		public static LocalizedString CasHealthOwaShortName
		{
			get
			{
				return new LocalizedString("CasHealthOwaShortName", "Ex4688EF", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008A68 RID: 35432 RVA: 0x0023F728 File Offset: 0x0023D928
		public static LocalizedString WarningSetAdminAuditLogOnPreR5(string org)
		{
			return new LocalizedString("WarningSetAdminAuditLogOnPreR5", "ExA06025", false, true, Strings.ResourceManager, new object[]
			{
				org
			});
		}

		// Token: 0x17002B64 RID: 11108
		// (get) Token: 0x06008A69 RID: 35433 RVA: 0x0023F757 File Offset: 0x0023D957
		public static LocalizedString PopImapDisconnecting
		{
			get
			{
				return new LocalizedString("PopImapDisconnecting", "Ex584F72", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008A6A RID: 35434 RVA: 0x0023F778 File Offset: 0x0023D978
		public static LocalizedString AmInvalidRoleDagServer(string machineName)
		{
			return new LocalizedString("AmInvalidRoleDagServer", "ExDE910B", false, true, Strings.ResourceManager, new object[]
			{
				machineName
			});
		}

		// Token: 0x06008A6B RID: 35435 RVA: 0x0023F7A8 File Offset: 0x0023D9A8
		public static LocalizedString CasHealthPowerShellConnectionUri(string uri, string type)
		{
			return new LocalizedString("CasHealthPowerShellConnectionUri", "ExCCFC85", false, true, Strings.ResourceManager, new object[]
			{
				uri,
				type
			});
		}

		// Token: 0x17002B65 RID: 11109
		// (get) Token: 0x06008A6C RID: 35436 RVA: 0x0023F7DB File Offset: 0x0023D9DB
		public static LocalizedString WillNotCreateGlobalThrottlingPolicy
		{
			get
			{
				return new LocalizedString("WillNotCreateGlobalThrottlingPolicy", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002B66 RID: 11110
		// (get) Token: 0x06008A6D RID: 35437 RVA: 0x0023F7F9 File Offset: 0x0023D9F9
		public static LocalizedString FederationTrustHasOutdatedCertificates
		{
			get
			{
				return new LocalizedString("FederationTrustHasOutdatedCertificates", "ExD474BA", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002B67 RID: 11111
		// (get) Token: 0x06008A6E RID: 35438 RVA: 0x0023F817 File Offset: 0x0023DA17
		public static LocalizedString ErrorEnableNonUniversalGroup
		{
			get
			{
				return new LocalizedString("ErrorEnableNonUniversalGroup", "ExE266D3", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002B68 RID: 11112
		// (get) Token: 0x06008A6F RID: 35439 RVA: 0x0023F835 File Offset: 0x0023DA35
		public static LocalizedString ConversationsFailedToCreateConversationsFolder
		{
			get
			{
				return new LocalizedString("ConversationsFailedToCreateConversationsFolder", "ExE2DDCF", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002B69 RID: 11113
		// (get) Token: 0x06008A70 RID: 35440 RVA: 0x0023F853 File Offset: 0x0023DA53
		public static LocalizedString VerboseSaveADServerSettingsSucceed
		{
			get
			{
				return new LocalizedString("VerboseSaveADServerSettingsSucceed", "ExDC4A6D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008A71 RID: 35441 RVA: 0x0023F874 File Offset: 0x0023DA74
		public static LocalizedString CouldNotFindExchangeServerDirectoryEntryException(string server)
		{
			return new LocalizedString("CouldNotFindExchangeServerDirectoryEntryException", "ExD5CD41", false, true, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		// Token: 0x06008A72 RID: 35442 RVA: 0x0023F8A4 File Offset: 0x0023DAA4
		public static LocalizedString ErrorMailboxCreationFailure(string user, string errorMessage)
		{
			return new LocalizedString("ErrorMailboxCreationFailure", "Ex55B968", false, true, Strings.ResourceManager, new object[]
			{
				user,
				errorMessage
			});
		}

		// Token: 0x06008A73 RID: 35443 RVA: 0x0023F8D8 File Offset: 0x0023DAD8
		public static LocalizedString ErrorStampSecondaryAddress(string message)
		{
			return new LocalizedString("ErrorStampSecondaryAddress", "", false, false, Strings.ResourceManager, new object[]
			{
				message
			});
		}

		// Token: 0x17002B6A RID: 11114
		// (get) Token: 0x06008A74 RID: 35444 RVA: 0x0023F907 File Offset: 0x0023DB07
		public static LocalizedString SetupProgressPerMBXPlanRoleAssignmentPolicy
		{
			get
			{
				return new LocalizedString("SetupProgressPerMBXPlanRoleAssignmentPolicy", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008A75 RID: 35445 RVA: 0x0023F928 File Offset: 0x0023DB28
		public static LocalizedString ExchangeSettingsCannotChangeScopeFilterOnDownlevelGroup(string groupName)
		{
			return new LocalizedString("ExchangeSettingsCannotChangeScopeFilterOnDownlevelGroup", "", false, false, Strings.ResourceManager, new object[]
			{
				groupName
			});
		}

		// Token: 0x17002B6B RID: 11115
		// (get) Token: 0x06008A76 RID: 35446 RVA: 0x0023F957 File Offset: 0x0023DB57
		public static LocalizedString AllMapiTransactionsSucceeded
		{
			get
			{
				return new LocalizedString("AllMapiTransactionsSucceeded", "Ex26CEAE", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002B6C RID: 11116
		// (get) Token: 0x06008A77 RID: 35447 RVA: 0x0023F975 File Offset: 0x0023DB75
		public static LocalizedString WarningRestrictionWithWrongGroupType
		{
			get
			{
				return new LocalizedString("WarningRestrictionWithWrongGroupType", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002B6D RID: 11117
		// (get) Token: 0x06008A78 RID: 35448 RVA: 0x0023F993 File Offset: 0x0023DB93
		public static LocalizedString SetupProgressShowInAddressListsEnabled
		{
			get
			{
				return new LocalizedString("SetupProgressShowInAddressListsEnabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008A79 RID: 35449 RVA: 0x0023F9B4 File Offset: 0x0023DBB4
		public static LocalizedString ErrorConflictingMailboxFolder(string currentUser, string mailboxFolder)
		{
			return new LocalizedString("ErrorConflictingMailboxFolder", "Ex40A70F", false, true, Strings.ResourceManager, new object[]
			{
				currentUser,
				mailboxFolder
			});
		}

		// Token: 0x06008A7A RID: 35450 RVA: 0x0023F9E8 File Offset: 0x0023DBE8
		public static LocalizedString NotSupportedForPre14Mailbox(string versionRequired, string mailbox, string currentVersion)
		{
			return new LocalizedString("NotSupportedForPre14Mailbox", "Ex7B3B4B", false, true, Strings.ResourceManager, new object[]
			{
				versionRequired,
				mailbox,
				currentVersion
			});
		}

		// Token: 0x06008A7B RID: 35451 RVA: 0x0023FA20 File Offset: 0x0023DC20
		public static LocalizedString ErrorCanNotApplyMailboxSettingOnlyPolicy(string id)
		{
			return new LocalizedString("ErrorCanNotApplyMailboxSettingOnlyPolicy", "ExE87CF2", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x17002B6E RID: 11118
		// (get) Token: 0x06008A7C RID: 35452 RVA: 0x0023FA4F File Offset: 0x0023DC4F
		public static LocalizedString ComplianceSearchTimeoutError
		{
			get
			{
				return new LocalizedString("ComplianceSearchTimeoutError", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008A7D RID: 35453 RVA: 0x0023FA70 File Offset: 0x0023DC70
		public static LocalizedString ConfirmationMessageRemoveManagementRoleRecursive(string Identity, string roles)
		{
			return new LocalizedString("ConfirmationMessageRemoveManagementRoleRecursive", "ExCF2F02", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				roles
			});
		}

		// Token: 0x06008A7E RID: 35454 RVA: 0x0023FAA4 File Offset: 0x0023DCA4
		public static LocalizedString ConfirmationMessageDisableRemoteMailbox(string Identity)
		{
			return new LocalizedString("ConfirmationMessageDisableRemoteMailbox", "Ex04456E", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x17002B6F RID: 11119
		// (get) Token: 0x06008A7F RID: 35455 RVA: 0x0023FAD3 File Offset: 0x0023DCD3
		public static LocalizedString OrganizationParamRequired
		{
			get
			{
				return new LocalizedString("OrganizationParamRequired", "Ex82AF27", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002B70 RID: 11120
		// (get) Token: 0x06008A80 RID: 35456 RVA: 0x0023FAF1 File Offset: 0x0023DCF1
		public static LocalizedString ErrorMultipleDefaultRetentionPolicyTag
		{
			get
			{
				return new LocalizedString("ErrorMultipleDefaultRetentionPolicyTag", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002B71 RID: 11121
		// (get) Token: 0x06008A81 RID: 35457 RVA: 0x0023FB0F File Offset: 0x0023DD0F
		public static LocalizedString CouldNotGetMsoEndpoint
		{
			get
			{
				return new LocalizedString("CouldNotGetMsoEndpoint", "ExFBF7FD", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008A82 RID: 35458 RVA: 0x0023FB30 File Offset: 0x0023DD30
		public static LocalizedString ExchangeSettingsGroupNotFound(string name)
		{
			return new LocalizedString("ExchangeSettingsGroupNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x17002B72 RID: 11122
		// (get) Token: 0x06008A83 RID: 35459 RVA: 0x0023FB5F File Offset: 0x0023DD5F
		public static LocalizedString MoveRequestIsMissing
		{
			get
			{
				return new LocalizedString("MoveRequestIsMissing", "Ex69DE90", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002B73 RID: 11123
		// (get) Token: 0x06008A84 RID: 35460 RVA: 0x0023FB7D File Offset: 0x0023DD7D
		public static LocalizedString ErrorCannotChangeAcceptMessagesFrom
		{
			get
			{
				return new LocalizedString("ErrorCannotChangeAcceptMessagesFrom", "Ex775BFA", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008A85 RID: 35461 RVA: 0x0023FB9C File Offset: 0x0023DD9C
		public static LocalizedString CasHealthCalendarCheckSuccess(string scenario)
		{
			return new LocalizedString("CasHealthCalendarCheckSuccess", "Ex904C77", false, true, Strings.ResourceManager, new object[]
			{
				scenario
			});
		}

		// Token: 0x06008A86 RID: 35462 RVA: 0x0023FBCC File Offset: 0x0023DDCC
		public static LocalizedString FailedToEvictNode(string nodeName, string dagName, string error)
		{
			return new LocalizedString("FailedToEvictNode", "Ex376375", false, true, Strings.ResourceManager, new object[]
			{
				nodeName,
				dagName,
				error
			});
		}

		// Token: 0x06008A87 RID: 35463 RVA: 0x0023FC04 File Offset: 0x0023DE04
		public static LocalizedString ErrorArchiveTargetIsNotAnMEU(string user)
		{
			return new LocalizedString("ErrorArchiveTargetIsNotAnMEU", "ExD8E0C0", false, true, Strings.ResourceManager, new object[]
			{
				user
			});
		}

		// Token: 0x17002B74 RID: 11124
		// (get) Token: 0x06008A88 RID: 35464 RVA: 0x0023FC33 File Offset: 0x0023DE33
		public static LocalizedString MessageTraceMinimumCriteriaFieldsInError
		{
			get
			{
				return new LocalizedString("MessageTraceMinimumCriteriaFieldsInError", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002B75 RID: 11125
		// (get) Token: 0x06008A89 RID: 35465 RVA: 0x0023FC51 File Offset: 0x0023DE51
		public static LocalizedString ErrorCannotChangeHiddenFromAddressListsEnabled
		{
			get
			{
				return new LocalizedString("ErrorCannotChangeHiddenFromAddressListsEnabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008A8A RID: 35466 RVA: 0x0023FC70 File Offset: 0x0023DE70
		public static LocalizedString InfoTakeOwnership(string dn)
		{
			return new LocalizedString("InfoTakeOwnership", "Ex7C59E8", false, true, Strings.ResourceManager, new object[]
			{
				dn
			});
		}

		// Token: 0x06008A8B RID: 35467 RVA: 0x0023FCA0 File Offset: 0x0023DEA0
		public static LocalizedString FailedToDecryptImportedTrustedPublishingDomain(Exception ex)
		{
			return new LocalizedString("FailedToDecryptImportedTrustedPublishingDomain", "", false, false, Strings.ResourceManager, new object[]
			{
				ex
			});
		}

		// Token: 0x17002B76 RID: 11126
		// (get) Token: 0x06008A8C RID: 35468 RVA: 0x0023FCCF File Offset: 0x0023DECF
		public static LocalizedString ErrorDefaultRoleAssignmentPolicyNotFound
		{
			get
			{
				return new LocalizedString("ErrorDefaultRoleAssignmentPolicyNotFound", "Ex29F972", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002B77 RID: 11127
		// (get) Token: 0x06008A8D RID: 35469 RVA: 0x0023FCED File Offset: 0x0023DEED
		public static LocalizedString InvalidOrgCapabilityParameter
		{
			get
			{
				return new LocalizedString("InvalidOrgCapabilityParameter", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002B78 RID: 11128
		// (get) Token: 0x06008A8E RID: 35470 RVA: 0x0023FD0B File Offset: 0x0023DF0B
		public static LocalizedString JournalingReportNdrToSameAsJournalEmailAddress
		{
			get
			{
				return new LocalizedString("JournalingReportNdrToSameAsJournalEmailAddress", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002B79 RID: 11129
		// (get) Token: 0x06008A8F RID: 35471 RVA: 0x0023FD29 File Offset: 0x0023DF29
		public static LocalizedString ErrorRpcHttpSSLOffloadingDisabled
		{
			get
			{
				return new LocalizedString("ErrorRpcHttpSSLOffloadingDisabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002B7A RID: 11130
		// (get) Token: 0x06008A90 RID: 35472 RVA: 0x0023FD47 File Offset: 0x0023DF47
		public static LocalizedString ContinueOnEmptySearchQuery
		{
			get
			{
				return new LocalizedString("ContinueOnEmptySearchQuery", "ExE76F2B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008A91 RID: 35473 RVA: 0x0023FD68 File Offset: 0x0023DF68
		public static LocalizedString TestMessageSent(string subject, string user)
		{
			return new LocalizedString("TestMessageSent", "Ex309C1D", false, true, Strings.ResourceManager, new object[]
			{
				subject,
				user
			});
		}

		// Token: 0x06008A92 RID: 35474 RVA: 0x0023FD9C File Offset: 0x0023DF9C
		public static LocalizedString ConfirmationMessageRemoveDeliveryAgentConnector(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveDeliveryAgentConnector", "ExAF4294", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x17002B7B RID: 11131
		// (get) Token: 0x06008A93 RID: 35475 RVA: 0x0023FDCB File Offset: 0x0023DFCB
		public static LocalizedString UninstallingIMAP4Service
		{
			get
			{
				return new LocalizedString("UninstallingIMAP4Service", "ExCFF7CA", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008A94 RID: 35476 RVA: 0x0023FDEC File Offset: 0x0023DFEC
		public static LocalizedString ConfirmationMessageRemoveMoveRequestDebug(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveMoveRequestDebug", "Ex8C3E03", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x06008A95 RID: 35477 RVA: 0x0023FE1C File Offset: 0x0023E01C
		public static LocalizedString SourceAndTargetDialPlanURITypeMismatch(string sourceUriType, string targetUriType)
		{
			return new LocalizedString("SourceAndTargetDialPlanURITypeMismatch", "Ex090035", false, true, Strings.ResourceManager, new object[]
			{
				sourceUriType,
				targetUriType
			});
		}

		// Token: 0x06008A96 RID: 35478 RVA: 0x0023FE50 File Offset: 0x0023E050
		public static LocalizedString ErrorRemovedMailboxDoesNotHaveMailboxGuid(string removedMailbox)
		{
			return new LocalizedString("ErrorRemovedMailboxDoesNotHaveMailboxGuid", "Ex03BCF5", false, true, Strings.ResourceManager, new object[]
			{
				removedMailbox
			});
		}

		// Token: 0x06008A97 RID: 35479 RVA: 0x0023FE80 File Offset: 0x0023E080
		public static LocalizedString ErrorCannotRetrieveSyncDaemonArbitrationConfigContainer(string length)
		{
			return new LocalizedString("ErrorCannotRetrieveSyncDaemonArbitrationConfigContainer", "", false, false, Strings.ResourceManager, new object[]
			{
				length
			});
		}

		// Token: 0x06008A98 RID: 35480 RVA: 0x0023FEB0 File Offset: 0x0023E0B0
		public static LocalizedString ErrorFailedToPrepopulateCache(string databaseName, string server, string mailbox, string errorCode)
		{
			return new LocalizedString("ErrorFailedToPrepopulateCache", "ExA058BD", false, true, Strings.ResourceManager, new object[]
			{
				databaseName,
				server,
				mailbox,
				errorCode
			});
		}

		// Token: 0x17002B7C RID: 11132
		// (get) Token: 0x06008A99 RID: 35481 RVA: 0x0023FEEB File Offset: 0x0023E0EB
		public static LocalizedString WarningReturnDefaultOrganizationThrottlingPolicy
		{
			get
			{
				return new LocalizedString("WarningReturnDefaultOrganizationThrottlingPolicy", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008A9A RID: 35482 RVA: 0x0023FF0C File Offset: 0x0023E10C
		public static LocalizedString InvalidIntegerConfiguration(string key, int value, int min, int max)
		{
			return new LocalizedString("InvalidIntegerConfiguration", "", false, false, Strings.ResourceManager, new object[]
			{
				key,
				value,
				min,
				max
			});
		}

		// Token: 0x17002B7D RID: 11133
		// (get) Token: 0x06008A9B RID: 35483 RVA: 0x0023FF56 File Offset: 0x0023E156
		public static LocalizedString ErrorStartAfterCanBeSetOnlyInQueued
		{
			get
			{
				return new LocalizedString("ErrorStartAfterCanBeSetOnlyInQueued", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002B7E RID: 11134
		// (get) Token: 0x06008A9C RID: 35484 RVA: 0x0023FF74 File Offset: 0x0023E174
		public static LocalizedString ClientAccessLocalPermissionsComponentDescription
		{
			get
			{
				return new LocalizedString("ClientAccessLocalPermissionsComponentDescription", "Ex97F111", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008A9D RID: 35485 RVA: 0x0023FF94 File Offset: 0x0023E194
		public static LocalizedString ErrorClientAccessArrayNotUnique(string identity)
		{
			return new LocalizedString("ErrorClientAccessArrayNotUnique", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x06008A9E RID: 35486 RVA: 0x0023FFC4 File Offset: 0x0023E1C4
		public static LocalizedString MoveMailboxToE14(string src, string targetServer)
		{
			return new LocalizedString("MoveMailboxToE14", "ExCBFBCF", false, true, Strings.ResourceManager, new object[]
			{
				src,
				targetServer
			});
		}

		// Token: 0x17002B7F RID: 11135
		// (get) Token: 0x06008A9F RID: 35487 RVA: 0x0023FFF7 File Offset: 0x0023E1F7
		public static LocalizedString MailboxDatabaseIsDown
		{
			get
			{
				return new LocalizedString("MailboxDatabaseIsDown", "ExC2D9F8", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008AA0 RID: 35488 RVA: 0x00240018 File Offset: 0x0023E218
		public static LocalizedString ErrorUnableToAccessInboxRulesGenericMessage(string details)
		{
			return new LocalizedString("ErrorUnableToAccessInboxRulesGenericMessage", "Ex845A14", false, true, Strings.ResourceManager, new object[]
			{
				details
			});
		}

		// Token: 0x06008AA1 RID: 35489 RVA: 0x00240048 File Offset: 0x0023E248
		public static LocalizedString ConfirmationMessageUpdateOfflineAddressBook(string Identity)
		{
			return new LocalizedString("ConfirmationMessageUpdateOfflineAddressBook", "Ex6AEAE3", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x06008AA2 RID: 35490 RVA: 0x00240078 File Offset: 0x0023E278
		public static LocalizedString ErrorLogFolderPathNotUniqueUnderSameDAG(string filePath)
		{
			return new LocalizedString("ErrorLogFolderPathNotUniqueUnderSameDAG", "Ex3FEE39", false, true, Strings.ResourceManager, new object[]
			{
				filePath
			});
		}

		// Token: 0x06008AA3 RID: 35491 RVA: 0x002400A8 File Offset: 0x0023E2A8
		public static LocalizedString ErrorRelocationConstraintsPresent(string tenant, string constraint)
		{
			return new LocalizedString("ErrorRelocationConstraintsPresent", "", false, false, Strings.ResourceManager, new object[]
			{
				tenant,
				constraint
			});
		}

		// Token: 0x06008AA4 RID: 35492 RVA: 0x002400DC File Offset: 0x0023E2DC
		public static LocalizedString VerboseCheckingRecipientWriteScope(string id)
		{
			return new LocalizedString("VerboseCheckingRecipientWriteScope", "ExC4FE5E", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x17002B80 RID: 11136
		// (get) Token: 0x06008AA5 RID: 35493 RVA: 0x0024010B File Offset: 0x0023E30B
		public static LocalizedString SetupComponentClientAccessGlobalConfig
		{
			get
			{
				return new LocalizedString("SetupComponentClientAccessGlobalConfig", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008AA6 RID: 35494 RVA: 0x0024012C File Offset: 0x0023E32C
		public static LocalizedString ConfirmationMessageRemoveTransportRuleThatBelongsToDLpPolicy(string Identity, string dlpPolicyName)
		{
			return new LocalizedString("ConfirmationMessageRemoveTransportRuleThatBelongsToDLpPolicy", "", false, false, Strings.ResourceManager, new object[]
			{
				Identity,
				dlpPolicyName
			});
		}

		// Token: 0x06008AA7 RID: 35495 RVA: 0x00240160 File Offset: 0x0023E360
		public static LocalizedString ProvisioningRequestNotFound(string tenantName)
		{
			return new LocalizedString("ProvisioningRequestNotFound", "Ex7B31BA", false, true, Strings.ResourceManager, new object[]
			{
				tenantName
			});
		}

		// Token: 0x17002B81 RID: 11137
		// (get) Token: 0x06008AA8 RID: 35496 RVA: 0x0024018F File Offset: 0x0023E38F
		public static LocalizedString JournalingExpiryDateAlreadyExpired
		{
			get
			{
				return new LocalizedString("JournalingExpiryDateAlreadyExpired", "ExF5840B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002B82 RID: 11138
		// (get) Token: 0x06008AA9 RID: 35497 RVA: 0x002401AD File Offset: 0x0023E3AD
		public static LocalizedString ErrorTargetEndpointRequired
		{
			get
			{
				return new LocalizedString("ErrorTargetEndpointRequired", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002B83 RID: 11139
		// (get) Token: 0x06008AAA RID: 35498 RVA: 0x002401CB File Offset: 0x0023E3CB
		public static LocalizedString SetupProgressRecreateCannedRBACRoleGroups
		{
			get
			{
				return new LocalizedString("SetupProgressRecreateCannedRBACRoleGroups", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002B84 RID: 11140
		// (get) Token: 0x06008AAB RID: 35499 RVA: 0x002401E9 File Offset: 0x0023E3E9
		public static LocalizedString StoppinggMSExchangeFDS
		{
			get
			{
				return new LocalizedString("StoppinggMSExchangeFDS", "ExD30564", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002B85 RID: 11141
		// (get) Token: 0x06008AAC RID: 35500 RVA: 0x00240207 File Offset: 0x0023E407
		public static LocalizedString MtrtModerateMessageByUser
		{
			get
			{
				return new LocalizedString("MtrtModerateMessageByUser", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002B86 RID: 11142
		// (get) Token: 0x06008AAD RID: 35501 RVA: 0x00240225 File Offset: 0x0023E425
		public static LocalizedString LogonFailure
		{
			get
			{
				return new LocalizedString("LogonFailure", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008AAE RID: 35502 RVA: 0x00240244 File Offset: 0x0023E444
		public static LocalizedString ProgressStatusUpdateRecipient(string idRecipient)
		{
			return new LocalizedString("ProgressStatusUpdateRecipient", "ExFFD131", false, true, Strings.ResourceManager, new object[]
			{
				idRecipient
			});
		}

		// Token: 0x06008AAF RID: 35503 RVA: 0x00240274 File Offset: 0x0023E474
		public static LocalizedString ErrorTeamMailboxSetShowInMyClientForClosedMailbox(string tm)
		{
			return new LocalizedString("ErrorTeamMailboxSetShowInMyClientForClosedMailbox", "", false, false, Strings.ResourceManager, new object[]
			{
				tm
			});
		}

		// Token: 0x06008AB0 RID: 35504 RVA: 0x002402A4 File Offset: 0x0023E4A4
		public static LocalizedString CertificateInvalidFileName(string server)
		{
			return new LocalizedString("CertificateInvalidFileName", "", false, false, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		// Token: 0x06008AB1 RID: 35505 RVA: 0x002402D4 File Offset: 0x0023E4D4
		public static LocalizedString UnableToGrantFullControlOnEOA(string object1, string grantAceObject, string message)
		{
			return new LocalizedString("UnableToGrantFullControlOnEOA", "Ex1025D3", false, true, Strings.ResourceManager, new object[]
			{
				object1,
				grantAceObject,
				message
			});
		}

		// Token: 0x06008AB2 RID: 35506 RVA: 0x0024030C File Offset: 0x0023E50C
		public static LocalizedString TenantAlreadyHasMigrationActive(string tenantName)
		{
			return new LocalizedString("TenantAlreadyHasMigrationActive", "ExD4169C", false, true, Strings.ResourceManager, new object[]
			{
				tenantName
			});
		}

		// Token: 0x06008AB3 RID: 35507 RVA: 0x0024033C File Offset: 0x0023E53C
		public static LocalizedString ExceptionStorageOther(int errCode, string errMsg)
		{
			return new LocalizedString("ExceptionStorageOther", "Ex41A88A", false, true, Strings.ResourceManager, new object[]
			{
				errCode,
				errMsg
			});
		}

		// Token: 0x06008AB4 RID: 35508 RVA: 0x00240374 File Offset: 0x0023E574
		public static LocalizedString ErrorServerIsNotInCasRole(string name)
		{
			return new LocalizedString("ErrorServerIsNotInCasRole", "Ex3538DD", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x17002B87 RID: 11143
		// (get) Token: 0x06008AB5 RID: 35509 RVA: 0x002403A3 File Offset: 0x0023E5A3
		public static LocalizedString ErrorImageImport
		{
			get
			{
				return new LocalizedString("ErrorImageImport", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002B88 RID: 11144
		// (get) Token: 0x06008AB6 RID: 35510 RVA: 0x002403C1 File Offset: 0x0023E5C1
		public static LocalizedString AddressRewriteInvalidIdentity
		{
			get
			{
				return new LocalizedString("AddressRewriteInvalidIdentity", "Ex55771C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008AB7 RID: 35511 RVA: 0x002403E0 File Offset: 0x0023E5E0
		public static LocalizedString MsiInstallFailed(string packagePath, string message, int errorCode)
		{
			return new LocalizedString("MsiInstallFailed", "Ex96BCEE", false, true, Strings.ResourceManager, new object[]
			{
				packagePath,
				message,
				errorCode
			});
		}

		// Token: 0x17002B89 RID: 11145
		// (get) Token: 0x06008AB8 RID: 35512 RVA: 0x0024041C File Offset: 0x0023E61C
		public static LocalizedString NewPop3ConfigurationTask
		{
			get
			{
				return new LocalizedString("NewPop3ConfigurationTask", "ExD82460", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008AB9 RID: 35513 RVA: 0x0024043C File Offset: 0x0023E63C
		public static LocalizedString ConfirmationMessageRemoveMailboxRepairRequestDatabase(string job)
		{
			return new LocalizedString("ConfirmationMessageRemoveMailboxRepairRequestDatabase", "", false, false, Strings.ResourceManager, new object[]
			{
				job
			});
		}

		// Token: 0x17002B8A RID: 11146
		// (get) Token: 0x06008ABA RID: 35514 RVA: 0x0024046B File Offset: 0x0023E66B
		public static LocalizedString ErrorActivationPreferenceNotAllowedWhenHostServerUnlinked
		{
			get
			{
				return new LocalizedString("ErrorActivationPreferenceNotAllowedWhenHostServerUnlinked", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008ABB RID: 35515 RVA: 0x0024048C File Offset: 0x0023E68C
		public static LocalizedString CasHealthOwaHttpCode(int httpResultCode)
		{
			return new LocalizedString("CasHealthOwaHttpCode", "Ex9A39EE", false, true, Strings.ResourceManager, new object[]
			{
				httpResultCode
			});
		}

		// Token: 0x17002B8B RID: 11147
		// (get) Token: 0x06008ABC RID: 35516 RVA: 0x002404C0 File Offset: 0x0023E6C0
		public static LocalizedString ArchiveConnectivityResultArchiveNotProvisioned
		{
			get
			{
				return new LocalizedString("ArchiveConnectivityResultArchiveNotProvisioned", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008ABD RID: 35517 RVA: 0x002404E0 File Offset: 0x0023E6E0
		public static LocalizedString VerboseFixingVersionAndMinAdmin(string id)
		{
			return new LocalizedString("VerboseFixingVersionAndMinAdmin", "Ex54D347", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x06008ABE RID: 35518 RVA: 0x00240510 File Offset: 0x0023E710
		public static LocalizedString ReservedIPv4AddressesAreNotAllowedInGatewayIPAddressesId(string ip)
		{
			return new LocalizedString("ReservedIPv4AddressesAreNotAllowedInGatewayIPAddressesId", "", false, false, Strings.ResourceManager, new object[]
			{
				ip
			});
		}

		// Token: 0x06008ABF RID: 35519 RVA: 0x00240540 File Offset: 0x0023E740
		public static LocalizedString ConfirmationMessageNewOutboundConnector(string Identity)
		{
			return new LocalizedString("ConfirmationMessageNewOutboundConnector", "", false, false, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x17002B8C RID: 11148
		// (get) Token: 0x06008AC0 RID: 35520 RVA: 0x0024056F File Offset: 0x0023E76F
		public static LocalizedString SetupExchangeHostedFilteringPerimeterEnabled
		{
			get
			{
				return new LocalizedString("SetupExchangeHostedFilteringPerimeterEnabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008AC1 RID: 35521 RVA: 0x00240590 File Offset: 0x0023E790
		public static LocalizedString ClassificationRuleCollectionDistinctRegexesExceedLimit(int distinctRegexesLimit, string offendingRuleIds)
		{
			return new LocalizedString("ClassificationRuleCollectionDistinctRegexesExceedLimit", "", false, false, Strings.ResourceManager, new object[]
			{
				distinctRegexesLimit,
				offendingRuleIds
			});
		}

		// Token: 0x06008AC2 RID: 35522 RVA: 0x002405C8 File Offset: 0x0023E7C8
		public static LocalizedString CannotRunMonitoringTaskRemotelyException(string remoteServerName)
		{
			return new LocalizedString("CannotRunMonitoringTaskRemotelyException", "", false, false, Strings.ResourceManager, new object[]
			{
				remoteServerName
			});
		}

		// Token: 0x06008AC3 RID: 35523 RVA: 0x002405F8 File Offset: 0x0023E7F8
		public static LocalizedString ErrorInvalidMailboxPlanTransition(string oldMbxPlan, string oldMbxPlanCapability, string newMbxPlan, string newMbxPlanCapability)
		{
			return new LocalizedString("ErrorInvalidMailboxPlanTransition", "ExB0BE97", false, true, Strings.ResourceManager, new object[]
			{
				oldMbxPlan,
				oldMbxPlanCapability,
				newMbxPlan,
				newMbxPlanCapability
			});
		}

		// Token: 0x06008AC4 RID: 35524 RVA: 0x00240634 File Offset: 0x0023E834
		public static LocalizedString ConfirmationMessageNewPswsVirtualDirectory(string name, string server)
		{
			return new LocalizedString("ConfirmationMessageNewPswsVirtualDirectory", "", false, false, Strings.ResourceManager, new object[]
			{
				name,
				server
			});
		}

		// Token: 0x17002B8D RID: 11149
		// (get) Token: 0x06008AC5 RID: 35525 RVA: 0x00240667 File Offset: 0x0023E867
		public static LocalizedString SetupComponentMidFileCopyCafe
		{
			get
			{
				return new LocalizedString("SetupComponentMidFileCopyCafe", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008AC6 RID: 35526 RVA: 0x00240688 File Offset: 0x0023E888
		public static LocalizedString EstimateOnlyLogLevelParameterConflict(string loglevel)
		{
			return new LocalizedString("EstimateOnlyLogLevelParameterConflict", "Ex28E39C", false, true, Strings.ResourceManager, new object[]
			{
				loglevel
			});
		}

		// Token: 0x06008AC7 RID: 35527 RVA: 0x002406B8 File Offset: 0x0023E8B8
		public static LocalizedString DagNetworkEmptyDagException(string dagName)
		{
			return new LocalizedString("DagNetworkEmptyDagException", "", false, false, Strings.ResourceManager, new object[]
			{
				dagName
			});
		}

		// Token: 0x17002B8E RID: 11150
		// (get) Token: 0x06008AC8 RID: 35528 RVA: 0x002406E7 File Offset: 0x0023E8E7
		public static LocalizedString ErrorTargetDatabaseNotAllowedForRemotePush
		{
			get
			{
				return new LocalizedString("ErrorTargetDatabaseNotAllowedForRemotePush", "ExC29E2F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002B8F RID: 11151
		// (get) Token: 0x06008AC9 RID: 35529 RVA: 0x00240705 File Offset: 0x0023E905
		public static LocalizedString ErrorADOperationSucceededButMetabaseOperationFailed
		{
			get
			{
				return new LocalizedString("ErrorADOperationSucceededButMetabaseOperationFailed", "Ex9462FE", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008ACA RID: 35530 RVA: 0x00240724 File Offset: 0x0023E924
		public static LocalizedString VerboseMailboxDistinguishedName(string id)
		{
			return new LocalizedString("VerboseMailboxDistinguishedName", "", false, false, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x06008ACB RID: 35531 RVA: 0x00240754 File Offset: 0x0023E954
		public static LocalizedString ErrorEdbFileLocationNotOnFixedDrive(string filePath)
		{
			return new LocalizedString("ErrorEdbFileLocationNotOnFixedDrive", "ExC8C8AA", false, true, Strings.ResourceManager, new object[]
			{
				filePath
			});
		}

		// Token: 0x17002B90 RID: 11152
		// (get) Token: 0x06008ACC RID: 35532 RVA: 0x00240783 File Offset: 0x0023E983
		public static LocalizedString SetupSettingAdminToolsConfiguredVersion
		{
			get
			{
				return new LocalizedString("SetupSettingAdminToolsConfiguredVersion", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002B91 RID: 11153
		// (get) Token: 0x06008ACD RID: 35533 RVA: 0x002407A1 File Offset: 0x0023E9A1
		public static LocalizedString UMCallAnsweringRuleUnknownContact
		{
			get
			{
				return new LocalizedString("UMCallAnsweringRuleUnknownContact", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002B92 RID: 11154
		// (get) Token: 0x06008ACE RID: 35534 RVA: 0x002407BF File Offset: 0x0023E9BF
		public static LocalizedString MtrtSetAuditSeverity
		{
			get
			{
				return new LocalizedString("MtrtSetAuditSeverity", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008ACF RID: 35535 RVA: 0x002407E0 File Offset: 0x0023E9E0
		public static LocalizedString IISNotReachableException(string serverName, string errorMsg)
		{
			return new LocalizedString("IISNotReachableException", "Ex4CE676", false, true, Strings.ResourceManager, new object[]
			{
				serverName,
				errorMsg
			});
		}

		// Token: 0x17002B93 RID: 11155
		// (get) Token: 0x06008AD0 RID: 35536 RVA: 0x00240813 File Offset: 0x0023EA13
		public static LocalizedString ReservedString1
		{
			get
			{
				return new LocalizedString("ReservedString1", "Ex74954D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008AD1 RID: 35537 RVA: 0x00240834 File Offset: 0x0023EA34
		public static LocalizedString AppIDServiceUrl(string url)
		{
			return new LocalizedString("AppIDServiceUrl", "Ex1F8622", false, true, Strings.ResourceManager, new object[]
			{
				url
			});
		}

		// Token: 0x17002B94 RID: 11156
		// (get) Token: 0x06008AD2 RID: 35538 RVA: 0x00240863 File Offset: 0x0023EA63
		public static LocalizedString SetupComponentConfigPermissionsFrontendTransport
		{
			get
			{
				return new LocalizedString("SetupComponentConfigPermissionsFrontendTransport", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002B95 RID: 11157
		// (get) Token: 0x06008AD3 RID: 35539 RVA: 0x00240881 File Offset: 0x0023EA81
		public static LocalizedString CasHealthOwaGotOwaLogonPage
		{
			get
			{
				return new LocalizedString("CasHealthOwaGotOwaLogonPage", "Ex21C7A2", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008AD4 RID: 35540 RVA: 0x002408A0 File Offset: 0x0023EAA0
		public static LocalizedString ErrorUnableToReserveUri(string uri, string domain, string appId, string errdetails)
		{
			return new LocalizedString("ErrorUnableToReserveUri", "ExB1ED7A", false, true, Strings.ResourceManager, new object[]
			{
				uri,
				domain,
				appId,
				errdetails
			});
		}

		// Token: 0x06008AD5 RID: 35541 RVA: 0x002408DC File Offset: 0x0023EADC
		public static LocalizedString ErrorFailedToDetermineExchangeModeException(string errorMessage)
		{
			return new LocalizedString("ErrorFailedToDetermineExchangeModeException", "ExE0B94A", false, true, Strings.ResourceManager, new object[]
			{
				errorMessage
			});
		}

		// Token: 0x06008AD6 RID: 35542 RVA: 0x0024090C File Offset: 0x0023EB0C
		public static LocalizedString ConfirmationMessageNewTagELCContentSettings(string Name, string TageName, string MessageClass)
		{
			return new LocalizedString("ConfirmationMessageNewTagELCContentSettings", "Ex484760", false, true, Strings.ResourceManager, new object[]
			{
				Name,
				TageName,
				MessageClass
			});
		}

		// Token: 0x06008AD7 RID: 35543 RVA: 0x00240944 File Offset: 0x0023EB44
		public static LocalizedString ConfirmationMessageNewMailMessage(string mailbox)
		{
			return new LocalizedString("ConfirmationMessageNewMailMessage", "Ex60A255", false, true, Strings.ResourceManager, new object[]
			{
				mailbox
			});
		}

		// Token: 0x17002B96 RID: 11158
		// (get) Token: 0x06008AD8 RID: 35544 RVA: 0x00240973 File Offset: 0x0023EB73
		public static LocalizedString ADAttributeOtherHomePhoneNumber
		{
			get
			{
				return new LocalizedString("ADAttributeOtherHomePhoneNumber", "ExA01E35", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008AD9 RID: 35545 RVA: 0x00240994 File Offset: 0x0023EB94
		public static LocalizedString CouldNotParseRemoteValue(string remoteName, string remoteValue)
		{
			return new LocalizedString("CouldNotParseRemoteValue", "Ex276509", false, true, Strings.ResourceManager, new object[]
			{
				remoteName,
				remoteValue
			});
		}

		// Token: 0x06008ADA RID: 35546 RVA: 0x002409C8 File Offset: 0x0023EBC8
		public static LocalizedString TenantNotificationDebugEventResourceFileNotFound(string eventSource)
		{
			return new LocalizedString("TenantNotificationDebugEventResourceFileNotFound", "Ex0ABBB9", false, true, Strings.ResourceManager, new object[]
			{
				eventSource
			});
		}

		// Token: 0x17002B97 RID: 11159
		// (get) Token: 0x06008ADB RID: 35547 RVA: 0x002409F7 File Offset: 0x0023EBF7
		public static LocalizedString SubjectPrefix
		{
			get
			{
				return new LocalizedString("SubjectPrefix", "ExE21B5E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008ADC RID: 35548 RVA: 0x00240A18 File Offset: 0x0023EC18
		public static LocalizedString DatabaseNotMovedInServerModeException(string database, string sourceServer)
		{
			return new LocalizedString("DatabaseNotMovedInServerModeException", "", false, false, Strings.ResourceManager, new object[]
			{
				database,
				sourceServer
			});
		}

		// Token: 0x06008ADD RID: 35549 RVA: 0x00240A4C File Offset: 0x0023EC4C
		public static LocalizedString TestSearchCreateFolder(string MDB, string ID)
		{
			return new LocalizedString("TestSearchCreateFolder", "ExB455BA", false, true, Strings.ResourceManager, new object[]
			{
				MDB,
				ID
			});
		}

		// Token: 0x17002B98 RID: 11160
		// (get) Token: 0x06008ADE RID: 35550 RVA: 0x00240A7F File Offset: 0x0023EC7F
		public static LocalizedString SendConnectorSourceServersNotSet
		{
			get
			{
				return new LocalizedString("SendConnectorSourceServersNotSet", "Ex653167", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008ADF RID: 35551 RVA: 0x00240AA0 File Offset: 0x0023ECA0
		public static LocalizedString InterceptorWarningConditionInvalidCharacters(string value)
		{
			return new LocalizedString("InterceptorWarningConditionInvalidCharacters", "", false, false, Strings.ResourceManager, new object[]
			{
				value
			});
		}

		// Token: 0x17002B99 RID: 11161
		// (get) Token: 0x06008AE0 RID: 35552 RVA: 0x00240ACF File Offset: 0x0023ECCF
		public static LocalizedString ErrorInvalidAuditDelegateOperationType
		{
			get
			{
				return new LocalizedString("ErrorInvalidAuditDelegateOperationType", "Ex34452D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008AE1 RID: 35553 RVA: 0x00240AF0 File Offset: 0x0023ECF0
		public static LocalizedString ConfirmationMessageRemoveRoleGroupMember(string Identity, string Member)
		{
			return new LocalizedString("ConfirmationMessageRemoveRoleGroupMember", "Ex503E71", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				Member
			});
		}

		// Token: 0x06008AE2 RID: 35554 RVA: 0x00240B24 File Offset: 0x0023ED24
		public static LocalizedString MissingMapping(string file, string programId, string offerId)
		{
			return new LocalizedString("MissingMapping", "Ex3CF576", false, true, Strings.ResourceManager, new object[]
			{
				file,
				programId,
				offerId
			});
		}

		// Token: 0x06008AE3 RID: 35555 RVA: 0x00240B5C File Offset: 0x0023ED5C
		public static LocalizedString InfoLicensingUri(Uri uri)
		{
			return new LocalizedString("InfoLicensingUri", "ExEC5918", false, true, Strings.ResourceManager, new object[]
			{
				uri
			});
		}

		// Token: 0x17002B9A RID: 11162
		// (get) Token: 0x06008AE4 RID: 35556 RVA: 0x00240B8B File Offset: 0x0023ED8B
		public static LocalizedString ErrorCannotMoveWellKnownPublicFolders
		{
			get
			{
				return new LocalizedString("ErrorCannotMoveWellKnownPublicFolders", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008AE5 RID: 35557 RVA: 0x00240BAC File Offset: 0x0023EDAC
		public static LocalizedString ConfirmationMessageNewEmailAddressPolicySMTPTemplateWithCustomFilter(string Name, string RecipientFilter, string EnabledPrimarySMTPAddressTemplate)
		{
			return new LocalizedString("ConfirmationMessageNewEmailAddressPolicySMTPTemplateWithCustomFilter", "ExE1C3AB", false, true, Strings.ResourceManager, new object[]
			{
				Name,
				RecipientFilter,
				EnabledPrimarySMTPAddressTemplate
			});
		}

		// Token: 0x06008AE6 RID: 35558 RVA: 0x00240BE4 File Offset: 0x0023EDE4
		public static LocalizedString VerboseSyncTaskHighestCommittedUSN(string dc, long highestUSN)
		{
			return new LocalizedString("VerboseSyncTaskHighestCommittedUSN", "ExC084A2", false, true, Strings.ResourceManager, new object[]
			{
				dc,
				highestUSN
			});
		}

		// Token: 0x06008AE7 RID: 35559 RVA: 0x00240C1C File Offset: 0x0023EE1C
		public static LocalizedString ConfirmationMessageNewMailboxWithWindowsLiveId(string Name, string liveID, string OrganizationalUnit)
		{
			return new LocalizedString("ConfirmationMessageNewMailboxWithWindowsLiveId", "Ex780B55", false, true, Strings.ResourceManager, new object[]
			{
				Name,
				liveID,
				OrganizationalUnit
			});
		}

		// Token: 0x06008AE8 RID: 35560 RVA: 0x00240C54 File Offset: 0x0023EE54
		public static LocalizedString ExceptionPerfCounterDefinitionFileNotFound(string definitionFileName)
		{
			return new LocalizedString("ExceptionPerfCounterDefinitionFileNotFound", "Ex8C2BA4", false, true, Strings.ResourceManager, new object[]
			{
				definitionFileName
			});
		}

		// Token: 0x06008AE9 RID: 35561 RVA: 0x00240C84 File Offset: 0x0023EE84
		public static LocalizedString DagNetworkEnumerationFailed(string errMsg)
		{
			return new LocalizedString("DagNetworkEnumerationFailed", "", false, false, Strings.ResourceManager, new object[]
			{
				errMsg
			});
		}

		// Token: 0x17002B9B RID: 11163
		// (get) Token: 0x06008AEA RID: 35562 RVA: 0x00240CB3 File Offset: 0x0023EEB3
		public static LocalizedString NoFederationMetadataEpr
		{
			get
			{
				return new LocalizedString("NoFederationMetadataEpr", "Ex2077F3", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008AEB RID: 35563 RVA: 0x00240CD4 File Offset: 0x0023EED4
		public static LocalizedString ErrorGroupOrIndividualRecipientNeeded(string badId)
		{
			return new LocalizedString("ErrorGroupOrIndividualRecipientNeeded", "Ex3B9460", false, true, Strings.ResourceManager, new object[]
			{
				badId
			});
		}

		// Token: 0x06008AEC RID: 35564 RVA: 0x00240D04 File Offset: 0x0023EF04
		public static LocalizedString VerboseResetMdb(string id)
		{
			return new LocalizedString("VerboseResetMdb", "ExB90F49", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x06008AED RID: 35565 RVA: 0x00240D34 File Offset: 0x0023EF34
		public static LocalizedString CertificateNotValidForExchange(string thumbprint, string reason)
		{
			return new LocalizedString("CertificateNotValidForExchange", "ExB5BDFC", false, true, Strings.ResourceManager, new object[]
			{
				thumbprint,
				reason
			});
		}

		// Token: 0x17002B9C RID: 11164
		// (get) Token: 0x06008AEE RID: 35566 RVA: 0x00240D67 File Offset: 0x0023EF67
		public static LocalizedString SetupProcessCreateDefaultThrottlingPolicy
		{
			get
			{
				return new LocalizedString("SetupProcessCreateDefaultThrottlingPolicy", "ExF34C7C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008AEF RID: 35567 RVA: 0x00240D88 File Offset: 0x0023EF88
		public static LocalizedString ProvisioningTenantAlreadyHasMigrationPending(string tenantName)
		{
			return new LocalizedString("ProvisioningTenantAlreadyHasMigrationPending", "ExE0D276", false, true, Strings.ResourceManager, new object[]
			{
				tenantName
			});
		}

		// Token: 0x06008AF0 RID: 35568 RVA: 0x00240DB8 File Offset: 0x0023EFB8
		public static LocalizedString ErrorRetentionTagNotFound(string tagid)
		{
			return new LocalizedString("ErrorRetentionTagNotFound", "Ex796044", false, true, Strings.ResourceManager, new object[]
			{
				tagid
			});
		}

		// Token: 0x06008AF1 RID: 35569 RVA: 0x00240DE8 File Offset: 0x0023EFE8
		public static LocalizedString ConfirmationMessageTestMRSHealth(string server)
		{
			return new LocalizedString("ConfirmationMessageTestMRSHealth", "Ex6A81AB", false, true, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		// Token: 0x06008AF2 RID: 35570 RVA: 0x00240E18 File Offset: 0x0023F018
		public static LocalizedString VerboseExecuteCmd(string app, string argument, string output)
		{
			return new LocalizedString("VerboseExecuteCmd", "ExC96A2F", false, true, Strings.ResourceManager, new object[]
			{
				app,
				argument,
				output
			});
		}

		// Token: 0x06008AF3 RID: 35571 RVA: 0x00240E50 File Offset: 0x0023F050
		public static LocalizedString BadProtocolSettingsException(string param)
		{
			return new LocalizedString("BadProtocolSettingsException", "ExEB524D", false, true, Strings.ResourceManager, new object[]
			{
				param
			});
		}

		// Token: 0x17002B9D RID: 11165
		// (get) Token: 0x06008AF4 RID: 35572 RVA: 0x00240E7F File Offset: 0x0023F07F
		public static LocalizedString ToplogyScanFailed
		{
			get
			{
				return new LocalizedString("ToplogyScanFailed", "Ex44B606", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002B9E RID: 11166
		// (get) Token: 0x06008AF5 RID: 35573 RVA: 0x00240E9D File Offset: 0x0023F09D
		public static LocalizedString CasHealthOwaTimeoutInternal
		{
			get
			{
				return new LocalizedString("CasHealthOwaTimeoutInternal", "ExE704CF", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008AF6 RID: 35574 RVA: 0x00240EBC File Offset: 0x0023F0BC
		public static LocalizedString ConfirmationMessageSetRemoteMailbox(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetRemoteMailbox", "ExF388C4", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x17002B9F RID: 11167
		// (get) Token: 0x06008AF7 RID: 35575 RVA: 0x00240EEB File Offset: 0x0023F0EB
		public static LocalizedString DisasterRecoveryClientAccessRoleDescription
		{
			get
			{
				return new LocalizedString("DisasterRecoveryClientAccessRoleDescription", "Ex4C2B32", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008AF8 RID: 35576 RVA: 0x00240F0C File Offset: 0x0023F10C
		public static LocalizedString ErrorRoleNameMustBeUnique(string roleName)
		{
			return new LocalizedString("ErrorRoleNameMustBeUnique", "Ex9482CE", false, true, Strings.ResourceManager, new object[]
			{
				roleName
			});
		}

		// Token: 0x06008AF9 RID: 35577 RVA: 0x00240F3C File Offset: 0x0023F13C
		public static LocalizedString ConfirmationMessageNewOabVirtualDirectory(string WebSiteName, string Server)
		{
			return new LocalizedString("ConfirmationMessageNewOabVirtualDirectory", "Ex39F6AC", false, true, Strings.ResourceManager, new object[]
			{
				WebSiteName,
				Server
			});
		}

		// Token: 0x17002BA0 RID: 11168
		// (get) Token: 0x06008AFA RID: 35578 RVA: 0x00240F6F File Offset: 0x0023F16F
		public static LocalizedString MailboxReplicationServiceDescription
		{
			get
			{
				return new LocalizedString("MailboxReplicationServiceDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008AFB RID: 35579 RVA: 0x00240F90 File Offset: 0x0023F190
		public static LocalizedString ConfirmRemovalOfRequestForInaccessibleDatabase(string indexEntry, Guid mdbGuid)
		{
			return new LocalizedString("ConfirmRemovalOfRequestForInaccessibleDatabase", "", false, false, Strings.ResourceManager, new object[]
			{
				indexEntry,
				mdbGuid
			});
		}

		// Token: 0x17002BA1 RID: 11169
		// (get) Token: 0x06008AFC RID: 35580 RVA: 0x00240FC8 File Offset: 0x0023F1C8
		public static LocalizedString ErrorFolderTypeModified
		{
			get
			{
				return new LocalizedString("ErrorFolderTypeModified", "Ex0D116C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008AFD RID: 35581 RVA: 0x00240FE8 File Offset: 0x0023F1E8
		public static LocalizedString Error_DatabaseAttributesMismatch(string database, string constraintValue)
		{
			return new LocalizedString("Error_DatabaseAttributesMismatch", "", false, false, Strings.ResourceManager, new object[]
			{
				database,
				constraintValue
			});
		}

		// Token: 0x17002BA2 RID: 11170
		// (get) Token: 0x06008AFE RID: 35582 RVA: 0x0024101B File Offset: 0x0023F21B
		public static LocalizedString CasHealthWebAppLogonScenarioName
		{
			get
			{
				return new LocalizedString("CasHealthWebAppLogonScenarioName", "ExDD8574", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008AFF RID: 35583 RVA: 0x0024103C File Offset: 0x0023F23C
		public static LocalizedString ErrorOldTenantsCannotBeMigrated(string identity)
		{
			return new LocalizedString("ErrorOldTenantsCannotBeMigrated", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x06008B00 RID: 35584 RVA: 0x0024106C File Offset: 0x0023F26C
		public static LocalizedString ConfirmationMessageEnableFederatedOrgId(string org)
		{
			return new LocalizedString("ConfirmationMessageEnableFederatedOrgId", "ExA2F222", false, true, Strings.ResourceManager, new object[]
			{
				org
			});
		}

		// Token: 0x06008B01 RID: 35585 RVA: 0x0024109C File Offset: 0x0023F29C
		public static LocalizedString ChangingGlobalPolicy(string policyName)
		{
			return new LocalizedString("ChangingGlobalPolicy", "", false, false, Strings.ResourceManager, new object[]
			{
				policyName
			});
		}

		// Token: 0x06008B02 RID: 35586 RVA: 0x002410CC File Offset: 0x0023F2CC
		public static LocalizedString GetQueueDigestFromMtrtFailed(string details)
		{
			return new LocalizedString("GetQueueDigestFromMtrtFailed", "", false, false, Strings.ResourceManager, new object[]
			{
				details
			});
		}

		// Token: 0x06008B03 RID: 35587 RVA: 0x002410FC File Offset: 0x0023F2FC
		public static LocalizedString ConfirmationMessageSetContact(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetContact", "Ex116E62", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x06008B04 RID: 35588 RVA: 0x0024112C File Offset: 0x0023F32C
		public static LocalizedString TestSearchCatalogBacklog(string backlog, string retryQueue)
		{
			return new LocalizedString("TestSearchCatalogBacklog", "", false, false, Strings.ResourceManager, new object[]
			{
				backlog,
				retryQueue
			});
		}

		// Token: 0x06008B05 RID: 35589 RVA: 0x00241160 File Offset: 0x0023F360
		public static LocalizedString UnableToRetrieveFolderName(string folderPath)
		{
			return new LocalizedString("UnableToRetrieveFolderName", "", false, false, Strings.ResourceManager, new object[]
			{
				folderPath
			});
		}

		// Token: 0x06008B06 RID: 35590 RVA: 0x00241190 File Offset: 0x0023F390
		public static LocalizedString messageExternalUrlNotFoundException(ServerIdParameter serverId, Type type)
		{
			return new LocalizedString("messageExternalUrlNotFoundException", "", false, false, Strings.ResourceManager, new object[]
			{
				serverId,
				type
			});
		}

		// Token: 0x17002BA3 RID: 11171
		// (get) Token: 0x06008B07 RID: 35591 RVA: 0x002411C3 File Offset: 0x0023F3C3
		public static LocalizedString StoppingIMAP4Service
		{
			get
			{
				return new LocalizedString("StoppingIMAP4Service", "Ex76B326", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008B08 RID: 35592 RVA: 0x002411E4 File Offset: 0x0023F3E4
		public static LocalizedString DagTaskJoinedNodeToCluster(string serverName)
		{
			return new LocalizedString("DagTaskJoinedNodeToCluster", "", false, false, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		// Token: 0x17002BA4 RID: 11172
		// (get) Token: 0x06008B09 RID: 35593 RVA: 0x00241213 File Offset: 0x0023F413
		public static LocalizedString SetupProgressSyncAccountsTimeBeforeDormant
		{
			get
			{
				return new LocalizedString("SetupProgressSyncAccountsTimeBeforeDormant", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002BA5 RID: 11173
		// (get) Token: 0x06008B0A RID: 35594 RVA: 0x00241231 File Offset: 0x0023F431
		public static LocalizedString ConfirmationMessageResetADServerSettings
		{
			get
			{
				return new LocalizedString("ConfirmationMessageResetADServerSettings", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008B0B RID: 35595 RVA: 0x00241250 File Offset: 0x0023F450
		public static LocalizedString ErrorPidRealmIssuerDifferentFromMetadata(string newPid, string newRealm, string newIssuerId, string configPid, string configRealm, string configIssuerId)
		{
			return new LocalizedString("ErrorPidRealmIssuerDifferentFromMetadata", "", false, false, Strings.ResourceManager, new object[]
			{
				newPid,
				newRealm,
				newIssuerId,
				configPid,
				configRealm,
				configIssuerId
			});
		}

		// Token: 0x06008B0C RID: 35596 RVA: 0x00241298 File Offset: 0x0023F498
		public static LocalizedString ErrorLiveIdServiceDown(string message)
		{
			return new LocalizedString("ErrorLiveIdServiceDown", "Ex2AE2FD", false, true, Strings.ResourceManager, new object[]
			{
				message
			});
		}

		// Token: 0x17002BA6 RID: 11174
		// (get) Token: 0x06008B0D RID: 35597 RVA: 0x002412C7 File Offset: 0x0023F4C7
		public static LocalizedString NoAuthenticatedServerUri
		{
			get
			{
				return new LocalizedString("NoAuthenticatedServerUri", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008B0E RID: 35598 RVA: 0x002412E8 File Offset: 0x0023F4E8
		public static LocalizedString IisUtilityInvalidApplicationRootPathException(string applicationRootPath)
		{
			return new LocalizedString("IisUtilityInvalidApplicationRootPathException", "ExFA5FF1", false, true, Strings.ResourceManager, new object[]
			{
				applicationRootPath
			});
		}

		// Token: 0x06008B0F RID: 35599 RVA: 0x00241318 File Offset: 0x0023F518
		public static LocalizedString NeedNonrestrictedScopeAssignment(string identity)
		{
			return new LocalizedString("NeedNonrestrictedScopeAssignment", "ExC78CC0", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x06008B10 RID: 35600 RVA: 0x00241348 File Offset: 0x0023F548
		public static LocalizedString CollectionConflictionError(string item, string property)
		{
			return new LocalizedString("CollectionConflictionError", "ExC7FF40", false, true, Strings.ResourceManager, new object[]
			{
				item,
				property
			});
		}

		// Token: 0x17002BA7 RID: 11175
		// (get) Token: 0x06008B11 RID: 35601 RVA: 0x0024137B File Offset: 0x0023F57B
		public static LocalizedString VirtualDirectoryTypeRequired
		{
			get
			{
				return new LocalizedString("VirtualDirectoryTypeRequired", "Ex55A9D0", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008B12 RID: 35602 RVA: 0x0024139C File Offset: 0x0023F59C
		public static LocalizedString ConfirmationMessageRemoveMSOFullSyncRequest(string objectId)
		{
			return new LocalizedString("ConfirmationMessageRemoveMSOFullSyncRequest", "", false, false, Strings.ResourceManager, new object[]
			{
				objectId
			});
		}

		// Token: 0x06008B13 RID: 35603 RVA: 0x002413CC File Offset: 0x0023F5CC
		public static LocalizedString ErrorNoArchiveWithManagedFolder(string user)
		{
			return new LocalizedString("ErrorNoArchiveWithManagedFolder", "ExBD24A7", false, true, Strings.ResourceManager, new object[]
			{
				user
			});
		}

		// Token: 0x06008B14 RID: 35604 RVA: 0x002413FC File Offset: 0x0023F5FC
		public static LocalizedString FailedToGetPropertyFromPF(string propertyTag, string publicFolder, string error)
		{
			return new LocalizedString("FailedToGetPropertyFromPF", "ExA88BFB", false, true, Strings.ResourceManager, new object[]
			{
				propertyTag,
				publicFolder,
				error
			});
		}

		// Token: 0x17002BA8 RID: 11176
		// (get) Token: 0x06008B15 RID: 35605 RVA: 0x00241433 File Offset: 0x0023F633
		public static LocalizedString ErrorSoftDeletedMailboxCanOnlyChangeLitigationHoldEnabled
		{
			get
			{
				return new LocalizedString("ErrorSoftDeletedMailboxCanOnlyChangeLitigationHoldEnabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008B16 RID: 35606 RVA: 0x00241454 File Offset: 0x0023F654
		public static LocalizedString BackSyncObjectExcluded(string objectId, DirectoryObjectErrorCode errorCode, ProcessingStage processingStage)
		{
			return new LocalizedString("BackSyncObjectExcluded", "Ex60241B", false, true, Strings.ResourceManager, new object[]
			{
				objectId,
				errorCode,
				processingStage
			});
		}

		// Token: 0x06008B17 RID: 35607 RVA: 0x00241498 File Offset: 0x0023F698
		public static LocalizedString RestoreMailboxDuplicateRecoveryMailbox(string mailboxGuid)
		{
			return new LocalizedString("RestoreMailboxDuplicateRecoveryMailbox", "Ex67FF1D", false, true, Strings.ResourceManager, new object[]
			{
				mailboxGuid
			});
		}

		// Token: 0x06008B18 RID: 35608 RVA: 0x002414C8 File Offset: 0x0023F6C8
		public static LocalizedString ErrorBPAScanTypeNotFound(string scanType)
		{
			return new LocalizedString("ErrorBPAScanTypeNotFound", "ExD2BE1E", false, true, Strings.ResourceManager, new object[]
			{
				scanType
			});
		}

		// Token: 0x06008B19 RID: 35609 RVA: 0x002414F8 File Offset: 0x0023F6F8
		public static LocalizedString VerboseInvokingRUS(string id, string type)
		{
			return new LocalizedString("VerboseInvokingRUS", "ExE2EA0D", false, true, Strings.ResourceManager, new object[]
			{
				id,
				type
			});
		}

		// Token: 0x06008B1A RID: 35610 RVA: 0x0024152C File Offset: 0x0023F72C
		public static LocalizedString VerboseEvictMember(string memberName)
		{
			return new LocalizedString("VerboseEvictMember", "ExC96058", false, true, Strings.ResourceManager, new object[]
			{
				memberName
			});
		}

		// Token: 0x06008B1B RID: 35611 RVA: 0x0024155C File Offset: 0x0023F75C
		public static LocalizedString ErrorWSManConfigFileNotFound(string file)
		{
			return new LocalizedString("ErrorWSManConfigFileNotFound", "ExA8A080", false, true, Strings.ResourceManager, new object[]
			{
				file
			});
		}

		// Token: 0x06008B1C RID: 35612 RVA: 0x0024158C File Offset: 0x0023F78C
		public static LocalizedString RuleIsCorrupt(string name, string error)
		{
			return new LocalizedString("RuleIsCorrupt", "", false, false, Strings.ResourceManager, new object[]
			{
				name,
				error
			});
		}

		// Token: 0x17002BA9 RID: 11177
		// (get) Token: 0x06008B1D RID: 35613 RVA: 0x002415BF File Offset: 0x0023F7BF
		public static LocalizedString SetupProgressMSOSyncEnabled
		{
			get
			{
				return new LocalizedString("SetupProgressMSOSyncEnabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008B1E RID: 35614 RVA: 0x002415E0 File Offset: 0x0023F7E0
		public static LocalizedString MailboxReplicationServiceIsScanningForJobs(TimeSpan lastScanAge)
		{
			return new LocalizedString("MailboxReplicationServiceIsScanningForJobs", "Ex4EDA13", false, true, Strings.ResourceManager, new object[]
			{
				lastScanAge
			});
		}

		// Token: 0x17002BAA RID: 11178
		// (get) Token: 0x06008B1F RID: 35615 RVA: 0x00241614 File Offset: 0x0023F814
		public static LocalizedString MtrtEventBadmail
		{
			get
			{
				return new LocalizedString("MtrtEventBadmail", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008B20 RID: 35616 RVA: 0x00241634 File Offset: 0x0023F834
		public static LocalizedString VerboseCheckingConfigWriteScope(string id)
		{
			return new LocalizedString("VerboseCheckingConfigWriteScope", "Ex14537E", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x06008B21 RID: 35617 RVA: 0x00241664 File Offset: 0x0023F864
		public static LocalizedString CasHealthMailboxNotFound(string userPrincipalName)
		{
			return new LocalizedString("CasHealthMailboxNotFound", "Ex2E6628", false, true, Strings.ResourceManager, new object[]
			{
				userPrincipalName
			});
		}

		// Token: 0x06008B22 RID: 35618 RVA: 0x00241694 File Offset: 0x0023F894
		public static LocalizedString ErrorRemoveNonExistentParameters(string role, string cmdlet, string parameters)
		{
			return new LocalizedString("ErrorRemoveNonExistentParameters", "ExB1E6C8", false, true, Strings.ResourceManager, new object[]
			{
				role,
				cmdlet,
				parameters
			});
		}

		// Token: 0x17002BAB RID: 11179
		// (get) Token: 0x06008B23 RID: 35619 RVA: 0x002416CB File Offset: 0x0023F8CB
		public static LocalizedString GetImap4ConfigurationTask
		{
			get
			{
				return new LocalizedString("GetImap4ConfigurationTask", "Ex40A60C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002BAC RID: 11180
		// (get) Token: 0x06008B24 RID: 35620 RVA: 0x002416E9 File Offset: 0x0023F8E9
		public static LocalizedString ErrorRecipientViewRootEmptyAndViewEntireForestToFalse
		{
			get
			{
				return new LocalizedString("ErrorRecipientViewRootEmptyAndViewEntireForestToFalse", "Ex4F6CED", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002BAD RID: 11181
		// (get) Token: 0x06008B25 RID: 35621 RVA: 0x00241707 File Offset: 0x0023F907
		public static LocalizedString ConfirmationMessageSetExchangeAssistance
		{
			get
			{
				return new LocalizedString("ConfirmationMessageSetExchangeAssistance", "ExD63660", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008B26 RID: 35622 RVA: 0x00241728 File Offset: 0x0023F928
		public static LocalizedString DagTaskServerMailboxServerIsInDifferentDagException(string mailboxServer, string otherDagName)
		{
			return new LocalizedString("DagTaskServerMailboxServerIsInDifferentDagException", "", false, false, Strings.ResourceManager, new object[]
			{
				mailboxServer,
				otherDagName
			});
		}

		// Token: 0x06008B27 RID: 35623 RVA: 0x0024175C File Offset: 0x0023F95C
		public static LocalizedString DagTaskClusterWithDagNameIsSquattingException(string dagName)
		{
			return new LocalizedString("DagTaskClusterWithDagNameIsSquattingException", "", false, false, Strings.ResourceManager, new object[]
			{
				dagName
			});
		}

		// Token: 0x17002BAE RID: 11182
		// (get) Token: 0x06008B28 RID: 35624 RVA: 0x0024178B File Offset: 0x0023F98B
		public static LocalizedString UpdateServicePlanDescription
		{
			get
			{
				return new LocalizedString("UpdateServicePlanDescription", "ExD8339F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002BAF RID: 11183
		// (get) Token: 0x06008B29 RID: 35625 RVA: 0x002417A9 File Offset: 0x0023F9A9
		public static LocalizedString StartReplService
		{
			get
			{
				return new LocalizedString("StartReplService", "Ex648C7A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002BB0 RID: 11184
		// (get) Token: 0x06008B2A RID: 35626 RVA: 0x002417C7 File Offset: 0x0023F9C7
		public static LocalizedString MtrtEventSpam
		{
			get
			{
				return new LocalizedString("MtrtEventSpam", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008B2B RID: 35627 RVA: 0x002417E8 File Offset: 0x0023F9E8
		public static LocalizedString MsiInstallFailedDetailed(string packagePath, string message, int errorCode, string msiError)
		{
			return new LocalizedString("MsiInstallFailedDetailed", "ExA12D2D", false, true, Strings.ResourceManager, new object[]
			{
				packagePath,
				message,
				errorCode,
				msiError
			});
		}

		// Token: 0x06008B2C RID: 35628 RVA: 0x00241828 File Offset: 0x0023FA28
		public static LocalizedString ErrorConnectorNotEnabled(string connectorName)
		{
			return new LocalizedString("ErrorConnectorNotEnabled", "", false, false, Strings.ResourceManager, new object[]
			{
				connectorName
			});
		}

		// Token: 0x06008B2D RID: 35629 RVA: 0x00241858 File Offset: 0x0023FA58
		public static LocalizedString ConfirmationMessageRemoveFederatedDomain(string domain, string org)
		{
			return new LocalizedString("ConfirmationMessageRemoveFederatedDomain", "ExD04449", false, true, Strings.ResourceManager, new object[]
			{
				domain,
				org
			});
		}

		// Token: 0x17002BB1 RID: 11185
		// (get) Token: 0x06008B2E RID: 35630 RVA: 0x0024188B File Offset: 0x0023FA8B
		public static LocalizedString CasHealthUriFoundViaAutodiscovery
		{
			get
			{
				return new LocalizedString("CasHealthUriFoundViaAutodiscovery", "ExA1AF1C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002BB2 RID: 11186
		// (get) Token: 0x06008B2F RID: 35631 RVA: 0x002418A9 File Offset: 0x0023FAA9
		public static LocalizedString ErrorFederationCertificateNotSpecified
		{
			get
			{
				return new LocalizedString("ErrorFederationCertificateNotSpecified", "ExA63267", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008B30 RID: 35632 RVA: 0x002418C8 File Offset: 0x0023FAC8
		public static LocalizedString ConfirmationMessageSetCallAnsweringRule(string identity)
		{
			return new LocalizedString("ConfirmationMessageSetCallAnsweringRule", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x06008B31 RID: 35633 RVA: 0x002418F8 File Offset: 0x0023FAF8
		public static LocalizedString CannotInstallWithNonCurrentRoles(string nonCurrentRoles)
		{
			return new LocalizedString("CannotInstallWithNonCurrentRoles", "Ex7D3CA8", false, true, Strings.ResourceManager, new object[]
			{
				nonCurrentRoles
			});
		}

		// Token: 0x06008B32 RID: 35634 RVA: 0x00241928 File Offset: 0x0023FB28
		public static LocalizedString InterceptorErrorInvalidXml(string objectId, string error)
		{
			return new LocalizedString("InterceptorErrorInvalidXml", "", false, false, Strings.ResourceManager, new object[]
			{
				objectId,
				error
			});
		}

		// Token: 0x06008B33 RID: 35635 RVA: 0x0024195C File Offset: 0x0023FB5C
		public static LocalizedString ErrorMserveException(string message)
		{
			return new LocalizedString("ErrorMserveException", "Ex68574C", false, true, Strings.ResourceManager, new object[]
			{
				message
			});
		}

		// Token: 0x06008B34 RID: 35636 RVA: 0x0024198C File Offset: 0x0023FB8C
		public static LocalizedString ErrorReceiveConnectorNotFound(object idStringValue)
		{
			return new LocalizedString("ErrorReceiveConnectorNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		// Token: 0x06008B35 RID: 35637 RVA: 0x002419BC File Offset: 0x0023FBBC
		public static LocalizedString IISErrorReadingWritingException(string serverName, string errorMsg, int code)
		{
			return new LocalizedString("IISErrorReadingWritingException", "ExD3C5A5", false, true, Strings.ResourceManager, new object[]
			{
				serverName,
				errorMsg,
				code
			});
		}

		// Token: 0x17002BB3 RID: 11187
		// (get) Token: 0x06008B36 RID: 35638 RVA: 0x002419F8 File Offset: 0x0023FBF8
		public static LocalizedString SetupProgressInstallDefaultMessageFilterContainer
		{
			get
			{
				return new LocalizedString("SetupProgressInstallDefaultMessageFilterContainer", "ExB84F0F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002BB4 RID: 11188
		// (get) Token: 0x06008B37 RID: 35639 RVA: 0x00241A16 File Offset: 0x0023FC16
		public static LocalizedString ErrorFileIsTooSmallForFingerprint
		{
			get
			{
				return new LocalizedString("ErrorFileIsTooSmallForFingerprint", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002BB5 RID: 11189
		// (get) Token: 0x06008B38 RID: 35640 RVA: 0x00241A34 File Offset: 0x0023FC34
		public static LocalizedString TestTeamMailboxSharepointCallUnderOauthTask
		{
			get
			{
				return new LocalizedString("TestTeamMailboxSharepointCallUnderOauthTask", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008B39 RID: 35641 RVA: 0x00241A54 File Offset: 0x0023FC54
		public static LocalizedString ErrorRemoveClassificationUsedByTransportRule(string id)
		{
			return new LocalizedString("ErrorRemoveClassificationUsedByTransportRule", "", false, false, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x06008B3A RID: 35642 RVA: 0x00241A84 File Offset: 0x0023FC84
		public static LocalizedString VerboseMailboxDelegateSkip(string delegateUser)
		{
			return new LocalizedString("VerboseMailboxDelegateSkip", "Ex95DC39", false, true, Strings.ResourceManager, new object[]
			{
				delegateUser
			});
		}

		// Token: 0x17002BB6 RID: 11190
		// (get) Token: 0x06008B3B RID: 35643 RVA: 0x00241AB3 File Offset: 0x0023FCB3
		public static LocalizedString CasHealthEcpLongName
		{
			get
			{
				return new LocalizedString("CasHealthEcpLongName", "Ex36727A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008B3C RID: 35644 RVA: 0x00241AD4 File Offset: 0x0023FCD4
		public static LocalizedString ErrorAccessingFederationMetadata(string message)
		{
			return new LocalizedString("ErrorAccessingFederationMetadata", "Ex8DA35D", false, true, Strings.ResourceManager, new object[]
			{
				message
			});
		}

		// Token: 0x17002BB7 RID: 11191
		// (get) Token: 0x06008B3D RID: 35645 RVA: 0x00241B03 File Offset: 0x0023FD03
		public static LocalizedString WarningModifySubjectValueNotSet
		{
			get
			{
				return new LocalizedString("WarningModifySubjectValueNotSet", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002BB8 RID: 11192
		// (get) Token: 0x06008B3E RID: 35646 RVA: 0x00241B21 File Offset: 0x0023FD21
		public static LocalizedString ErrorRemoteArchiveTargetDatabaseMustBeSpecifiedForRemoteArchiveOnlyPush
		{
			get
			{
				return new LocalizedString("ErrorRemoteArchiveTargetDatabaseMustBeSpecifiedForRemoteArchiveOnlyPush", "ExD12FE4", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002BB9 RID: 11193
		// (get) Token: 0x06008B3F RID: 35647 RVA: 0x00241B3F File Offset: 0x0023FD3F
		public static LocalizedString InvalidNotifyAddress
		{
			get
			{
				return new LocalizedString("InvalidNotifyAddress", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002BBA RID: 11194
		// (get) Token: 0x06008B40 RID: 35648 RVA: 0x00241B5D File Offset: 0x0023FD5D
		public static LocalizedString QuarantineActionNotAvailable
		{
			get
			{
				return new LocalizedString("QuarantineActionNotAvailable", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008B41 RID: 35649 RVA: 0x00241B7C File Offset: 0x0023FD7C
		public static LocalizedString ComplianceSearchTasksCreated(int nTasks)
		{
			return new LocalizedString("ComplianceSearchTasksCreated", "", false, false, Strings.ResourceManager, new object[]
			{
				nTasks
			});
		}

		// Token: 0x06008B42 RID: 35650 RVA: 0x00241BB0 File Offset: 0x0023FDB0
		public static LocalizedString ExceptionDirectoryNotFound(string path)
		{
			return new LocalizedString("ExceptionDirectoryNotFound", "Ex51939A", false, true, Strings.ResourceManager, new object[]
			{
				path
			});
		}

		// Token: 0x06008B43 RID: 35651 RVA: 0x00241BE0 File Offset: 0x0023FDE0
		public static LocalizedString ComplianceSearchNameIsNotUnique(string name)
		{
			return new LocalizedString("ComplianceSearchNameIsNotUnique", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x17002BBB RID: 11195
		// (get) Token: 0x06008B44 RID: 35652 RVA: 0x00241C0F File Offset: 0x0023FE0F
		public static LocalizedString MtrtRedirectMessage
		{
			get
			{
				return new LocalizedString("MtrtRedirectMessage", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008B45 RID: 35653 RVA: 0x00241C30 File Offset: 0x0023FE30
		public static LocalizedString ConfirmationMessageNewMailboxPublicFolder(string Name, string Database, string Arbitration, string UserPrincipalName, string OrganizationalUnit)
		{
			return new LocalizedString("ConfirmationMessageNewMailboxPublicFolder", "", false, false, Strings.ResourceManager, new object[]
			{
				Name,
				Database,
				Arbitration,
				UserPrincipalName,
				OrganizationalUnit
			});
		}

		// Token: 0x06008B46 RID: 35654 RVA: 0x00241C70 File Offset: 0x0023FE70
		public static LocalizedString ErrorCompletedMoveMustBeCleared(string mailbox)
		{
			return new LocalizedString("ErrorCompletedMoveMustBeCleared", "Ex46DA42", false, true, Strings.ResourceManager, new object[]
			{
				mailbox
			});
		}

		// Token: 0x06008B47 RID: 35655 RVA: 0x00241CA0 File Offset: 0x0023FEA0
		public static LocalizedString ConfirmationMessageNewMailboxPlan(string Name, string UserPrincipalName, string OrganizationalUnit)
		{
			return new LocalizedString("ConfirmationMessageNewMailboxPlan", "ExF3265F", false, true, Strings.ResourceManager, new object[]
			{
				Name,
				UserPrincipalName,
				OrganizationalUnit
			});
		}

		// Token: 0x06008B48 RID: 35656 RVA: 0x00241CD8 File Offset: 0x0023FED8
		public static LocalizedString ConfirmationMessageRemoveRMSTPD(string name)
		{
			return new LocalizedString("ConfirmationMessageRemoveRMSTPD", "Ex12281E", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x06008B49 RID: 35657 RVA: 0x00241D08 File Offset: 0x0023FF08
		public static LocalizedString ClassificationRuleCollectionReservedProcessorIdViolation(string processorIds)
		{
			return new LocalizedString("ClassificationRuleCollectionReservedProcessorIdViolation", "", false, false, Strings.ResourceManager, new object[]
			{
				processorIds
			});
		}

		// Token: 0x06008B4A RID: 35658 RVA: 0x00241D38 File Offset: 0x0023FF38
		public static LocalizedString ConfirmationMessageSetMailboxTransportService(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetMailboxTransportService", "", false, false, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x06008B4B RID: 35659 RVA: 0x00241D68 File Offset: 0x0023FF68
		public static LocalizedString ErrorDatabaseVersionUnsupported(string dbName, string serverName, string serverVersion)
		{
			return new LocalizedString("ErrorDatabaseVersionUnsupported", "Ex2AFEC8", false, true, Strings.ResourceManager, new object[]
			{
				dbName,
				serverName,
				serverVersion
			});
		}

		// Token: 0x06008B4C RID: 35660 RVA: 0x00241DA0 File Offset: 0x0023FFA0
		public static LocalizedString ErrorCannotChangeObjectOutOfWriteScope(string name, string reason)
		{
			return new LocalizedString("ErrorCannotChangeObjectOutOfWriteScope", "Ex1DBE2D", false, true, Strings.ResourceManager, new object[]
			{
				name,
				reason
			});
		}

		// Token: 0x06008B4D RID: 35661 RVA: 0x00241DD4 File Offset: 0x0023FFD4
		public static LocalizedString InstallingMSIFor(string lang, string msiType)
		{
			return new LocalizedString("InstallingMSIFor", "ExCE08BE", false, true, Strings.ResourceManager, new object[]
			{
				lang,
				msiType
			});
		}

		// Token: 0x17002BBC RID: 11196
		// (get) Token: 0x06008B4E RID: 35662 RVA: 0x00241E07 File Offset: 0x00240007
		public static LocalizedString CasHealthOwaUriScopeHeader
		{
			get
			{
				return new LocalizedString("CasHealthOwaUriScopeHeader", "Ex0B6DA4", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008B4F RID: 35663 RVA: 0x00241E28 File Offset: 0x00240028
		public static LocalizedString CannotMakeAcceptedDomainExternalRelaySinceItIsReferencedByAddressTemplate(SmtpDomainWithSubdomains domain, SmtpProxyAddressTemplate template)
		{
			return new LocalizedString("CannotMakeAcceptedDomainExternalRelaySinceItIsReferencedByAddressTemplate", "ExE59FB5", false, true, Strings.ResourceManager, new object[]
			{
				domain,
				template
			});
		}

		// Token: 0x17002BBD RID: 11197
		// (get) Token: 0x06008B50 RID: 35664 RVA: 0x00241E5B File Offset: 0x0024005B
		public static LocalizedString EndPointNotRegisteredException
		{
			get
			{
				return new LocalizedString("EndPointNotRegisteredException", "Ex10CC44", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008B51 RID: 35665 RVA: 0x00241E7C File Offset: 0x0024007C
		public static LocalizedString EmptyStringConfiguration(string key)
		{
			return new LocalizedString("EmptyStringConfiguration", "", false, false, Strings.ResourceManager, new object[]
			{
				key
			});
		}

		// Token: 0x17002BBE RID: 11198
		// (get) Token: 0x06008B52 RID: 35666 RVA: 0x00241EAB File Offset: 0x002400AB
		public static LocalizedString MapiTransactionDiagnosticTargetDatabaseDismounted
		{
			get
			{
				return new LocalizedString("MapiTransactionDiagnosticTargetDatabaseDismounted", "Ex4B54EB", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002BBF RID: 11199
		// (get) Token: 0x06008B53 RID: 35667 RVA: 0x00241EC9 File Offset: 0x002400C9
		public static LocalizedString SetupComponentConfiguringServiceHost
		{
			get
			{
				return new LocalizedString("SetupComponentConfiguringServiceHost", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002BC0 RID: 11200
		// (get) Token: 0x06008B54 RID: 35668 RVA: 0x00241EE7 File Offset: 0x002400E7
		public static LocalizedString DlpPolicyXmlInvalid
		{
			get
			{
				return new LocalizedString("DlpPolicyXmlInvalid", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002BC1 RID: 11201
		// (get) Token: 0x06008B55 RID: 35669 RVA: 0x00241F05 File Offset: 0x00240105
		public static LocalizedString SetupProgressEnableWMIRPCSS
		{
			get
			{
				return new LocalizedString("SetupProgressEnableWMIRPCSS", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002BC2 RID: 11202
		// (get) Token: 0x06008B56 RID: 35670 RVA: 0x00241F23 File Offset: 0x00240123
		public static LocalizedString SetupProgressPopulateDatabases
		{
			get
			{
				return new LocalizedString("SetupProgressPopulateDatabases", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008B57 RID: 35671 RVA: 0x00241F44 File Offset: 0x00240144
		public static LocalizedString ConfirmationMessageEnableMailboxShared(string Identity, string Shared)
		{
			return new LocalizedString("ConfirmationMessageEnableMailboxShared", "Ex1A62A4", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				Shared
			});
		}

		// Token: 0x06008B58 RID: 35672 RVA: 0x00241F78 File Offset: 0x00240178
		public static LocalizedString ExceptionSourceMailboxNotFound(string id, string search)
		{
			return new LocalizedString("ExceptionSourceMailboxNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				id,
				search
			});
		}

		// Token: 0x06008B59 RID: 35673 RVA: 0x00241FAC File Offset: 0x002401AC
		public static LocalizedString ErrorReferenceParameter(string parameter)
		{
			return new LocalizedString("ErrorReferenceParameter", "ExE5ED9B", false, true, Strings.ResourceManager, new object[]
			{
				parameter
			});
		}

		// Token: 0x17002BC3 RID: 11203
		// (get) Token: 0x06008B5A RID: 35674 RVA: 0x00241FDB File Offset: 0x002401DB
		public static LocalizedString VerboseNoExchangeServersUSG
		{
			get
			{
				return new LocalizedString("VerboseNoExchangeServersUSG", "Ex78D2BD", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008B5B RID: 35675 RVA: 0x00241FFC File Offset: 0x002401FC
		public static LocalizedString ImportCertificateDataIsNull(string server)
		{
			return new LocalizedString("ImportCertificateDataIsNull", "ExA07319", false, true, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		// Token: 0x06008B5C RID: 35676 RVA: 0x0024202C File Offset: 0x0024022C
		public static LocalizedString ErrorCannotDetermineEndpointForNewTenant(string location, string programId, string offerId)
		{
			return new LocalizedString("ErrorCannotDetermineEndpointForNewTenant", "Ex07DDCD", false, true, Strings.ResourceManager, new object[]
			{
				location,
				programId,
				offerId
			});
		}

		// Token: 0x06008B5D RID: 35677 RVA: 0x00242064 File Offset: 0x00240264
		public static LocalizedString LogMigrationProgress(string alias, string progress)
		{
			return new LocalizedString("LogMigrationProgress", "Ex481311", false, true, Strings.ResourceManager, new object[]
			{
				alias,
				progress
			});
		}

		// Token: 0x17002BC4 RID: 11204
		// (get) Token: 0x06008B5E RID: 35678 RVA: 0x00242097 File Offset: 0x00240297
		public static LocalizedString RegisterFilterFailed
		{
			get
			{
				return new LocalizedString("RegisterFilterFailed", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008B5F RID: 35679 RVA: 0x002420B8 File Offset: 0x002402B8
		public static LocalizedString GetHealthReportProgressProcessing(string healthSetName)
		{
			return new LocalizedString("GetHealthReportProgressProcessing", "", false, false, Strings.ResourceManager, new object[]
			{
				healthSetName
			});
		}

		// Token: 0x17002BC5 RID: 11205
		// (get) Token: 0x06008B60 RID: 35680 RVA: 0x002420E7 File Offset: 0x002402E7
		public static LocalizedString ErrorCannotRemoveSpecialUser
		{
			get
			{
				return new LocalizedString("ErrorCannotRemoveSpecialUser", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008B61 RID: 35681 RVA: 0x00242108 File Offset: 0x00240308
		public static LocalizedString ErrorFailedToRunSiteFolderCheckTask(string server, string error)
		{
			return new LocalizedString("ErrorFailedToRunSiteFolderCheckTask", "Ex251AF0", false, true, Strings.ResourceManager, new object[]
			{
				server,
				error
			});
		}

		// Token: 0x06008B62 RID: 35682 RVA: 0x0024213C File Offset: 0x0024033C
		public static LocalizedString ErrorOnlyOnePartitionCanBeLocalForest(string partitionName)
		{
			return new LocalizedString("ErrorOnlyOnePartitionCanBeLocalForest", "", false, false, Strings.ResourceManager, new object[]
			{
				partitionName
			});
		}

		// Token: 0x06008B63 RID: 35683 RVA: 0x0024216C File Offset: 0x0024036C
		public static LocalizedString ErrorMoveDatabasePathAsSourceFileNotExist(string path)
		{
			return new LocalizedString("ErrorMoveDatabasePathAsSourceFileNotExist", "Ex9723E5", false, true, Strings.ResourceManager, new object[]
			{
				path
			});
		}

		// Token: 0x06008B64 RID: 35684 RVA: 0x0024219C File Offset: 0x0024039C
		public static LocalizedString InvalidObjectIdForTenantWideDivergence(string objectId)
		{
			return new LocalizedString("InvalidObjectIdForTenantWideDivergence", "", false, false, Strings.ResourceManager, new object[]
			{
				objectId
			});
		}

		// Token: 0x06008B65 RID: 35685 RVA: 0x002421CC File Offset: 0x002403CC
		public static LocalizedString RuleStateParameterValueIsInconsistentWithDlpPolicyState(string enabledParameterName)
		{
			return new LocalizedString("RuleStateParameterValueIsInconsistentWithDlpPolicyState", "", false, false, Strings.ResourceManager, new object[]
			{
				enabledParameterName
			});
		}

		// Token: 0x06008B66 RID: 35686 RVA: 0x002421FC File Offset: 0x002403FC
		public static LocalizedString ErrorApplicationNotDefined(string app)
		{
			return new LocalizedString("ErrorApplicationNotDefined", "", false, false, Strings.ResourceManager, new object[]
			{
				app
			});
		}

		// Token: 0x17002BC6 RID: 11206
		// (get) Token: 0x06008B67 RID: 35687 RVA: 0x0024222B File Offset: 0x0024042B
		public static LocalizedString MailboxTransportDeliveryServiceDescription
		{
			get
			{
				return new LocalizedString("MailboxTransportDeliveryServiceDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008B68 RID: 35688 RVA: 0x0024224C File Offset: 0x0024044C
		public static LocalizedString OwaAttachmentTypeCharacterOutOfAsciiRange(char badChar, int charIndex, string badAttachmentType, int attachmentTypeIndex, string propertyName)
		{
			return new LocalizedString("OwaAttachmentTypeCharacterOutOfAsciiRange", "Ex1FD65B", false, true, Strings.ResourceManager, new object[]
			{
				badChar,
				charIndex,
				badAttachmentType,
				attachmentTypeIndex,
				propertyName
			});
		}

		// Token: 0x17002BC7 RID: 11207
		// (get) Token: 0x06008B69 RID: 35689 RVA: 0x0024229B File Offset: 0x0024049B
		public static LocalizedString DefaultAllUsers
		{
			get
			{
				return new LocalizedString("DefaultAllUsers", "Ex3C6B7B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008B6A RID: 35690 RVA: 0x002422BC File Offset: 0x002404BC
		public static LocalizedString ConfirmationMessageNewSendConnectorAddressSpaces(string Name, string AddressSpaces)
		{
			return new LocalizedString("ConfirmationMessageNewSendConnectorAddressSpaces", "Ex447A49", false, true, Strings.ResourceManager, new object[]
			{
				Name,
				AddressSpaces
			});
		}

		// Token: 0x06008B6B RID: 35691 RVA: 0x002422F0 File Offset: 0x002404F0
		public static LocalizedString RemovingDefaultPolicyIsNotSupported(string policyName)
		{
			return new LocalizedString("RemovingDefaultPolicyIsNotSupported", "ExD32E3E", false, true, Strings.ResourceManager, new object[]
			{
				policyName
			});
		}

		// Token: 0x17002BC8 RID: 11208
		// (get) Token: 0x06008B6C RID: 35692 RVA: 0x0024231F File Offset: 0x0024051F
		public static LocalizedString SetupProgressStoppingRemoteRegistryService
		{
			get
			{
				return new LocalizedString("SetupProgressStoppingRemoteRegistryService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002BC9 RID: 11209
		// (get) Token: 0x06008B6D RID: 35693 RVA: 0x0024233D File Offset: 0x0024053D
		public static LocalizedString UpdateDbcDeleteFilesInvalidParametersException
		{
			get
			{
				return new LocalizedString("UpdateDbcDeleteFilesInvalidParametersException", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008B6E RID: 35694 RVA: 0x0024235C File Offset: 0x0024055C
		public static LocalizedString ErrorChangeWinrmStartType(string error)
		{
			return new LocalizedString("ErrorChangeWinrmStartType", "ExA5456F", false, true, Strings.ResourceManager, new object[]
			{
				error
			});
		}

		// Token: 0x06008B6F RID: 35695 RVA: 0x0024238C File Offset: 0x0024058C
		public static LocalizedString CasHealthEcpServiceResponse(string response)
		{
			return new LocalizedString("CasHealthEcpServiceResponse", "Ex392753", false, true, Strings.ResourceManager, new object[]
			{
				response
			});
		}

		// Token: 0x17002BCA RID: 11210
		// (get) Token: 0x06008B70 RID: 35696 RVA: 0x002423BB File Offset: 0x002405BB
		public static LocalizedString ErrorInvalidDateRangeCondition
		{
			get
			{
				return new LocalizedString("ErrorInvalidDateRangeCondition", "Ex6EF563", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008B71 RID: 35697 RVA: 0x002423DC File Offset: 0x002405DC
		public static LocalizedString ResumeSgcOnHostServer(string db, string server)
		{
			return new LocalizedString("ResumeSgcOnHostServer", "Ex911C20", false, true, Strings.ResourceManager, new object[]
			{
				db,
				server
			});
		}

		// Token: 0x17002BCB RID: 11211
		// (get) Token: 0x06008B72 RID: 35698 RVA: 0x0024240F File Offset: 0x0024060F
		public static LocalizedString SetupProgressInstallDefaultEmailAddressPolicy
		{
			get
			{
				return new LocalizedString("SetupProgressInstallDefaultEmailAddressPolicy", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008B73 RID: 35699 RVA: 0x00242430 File Offset: 0x00240630
		public static LocalizedString GetQueueDigestServerIsNotHubTransport(ServerIdParameter adObjectId)
		{
			return new LocalizedString("GetQueueDigestServerIsNotHubTransport", "", false, false, Strings.ResourceManager, new object[]
			{
				adObjectId
			});
		}

		// Token: 0x17002BCC RID: 11212
		// (get) Token: 0x06008B74 RID: 35700 RVA: 0x0024245F File Offset: 0x0024065F
		public static LocalizedString SetupProgressStoppingDagMgmtService
		{
			get
			{
				return new LocalizedString("SetupProgressStoppingDagMgmtService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008B75 RID: 35701 RVA: 0x00242480 File Offset: 0x00240680
		public static LocalizedString VerboseGenerateAliasBySiteDisplayName(string displayName)
		{
			return new LocalizedString("VerboseGenerateAliasBySiteDisplayName", "", false, false, Strings.ResourceManager, new object[]
			{
				displayName
			});
		}

		// Token: 0x06008B76 RID: 35702 RVA: 0x002424B0 File Offset: 0x002406B0
		public static LocalizedString WarningCannotGetLocalSite(string thumbprint)
		{
			return new LocalizedString("WarningCannotGetLocalSite", "Ex63407F", false, true, Strings.ResourceManager, new object[]
			{
				thumbprint
			});
		}

		// Token: 0x17002BCD RID: 11213
		// (get) Token: 0x06008B77 RID: 35703 RVA: 0x002424DF File Offset: 0x002406DF
		public static LocalizedString MoveStatusFailed
		{
			get
			{
				return new LocalizedString("MoveStatusFailed", "ExA759B9", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008B78 RID: 35704 RVA: 0x00242500 File Offset: 0x00240700
		public static LocalizedString AlsSubjectMailbox(string name, string requester)
		{
			return new LocalizedString("AlsSubjectMailbox", "", false, false, Strings.ResourceManager, new object[]
			{
				name,
				requester
			});
		}

		// Token: 0x17002BCE RID: 11214
		// (get) Token: 0x06008B79 RID: 35705 RVA: 0x00242533 File Offset: 0x00240733
		public static LocalizedString CasHealthCalendarScenarioTestICal
		{
			get
			{
				return new LocalizedString("CasHealthCalendarScenarioTestICal", "ExFE8551", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008B7A RID: 35706 RVA: 0x00242554 File Offset: 0x00240754
		public static LocalizedString ErrorMailboxAddressNotUnique(string idStringValue)
		{
			return new LocalizedString("ErrorMailboxAddressNotUnique", "Ex81119B", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		// Token: 0x17002BCF RID: 11215
		// (get) Token: 0x06008B7B RID: 35707 RVA: 0x00242583 File Offset: 0x00240783
		public static LocalizedString WarningSecurePipelineTracingPath
		{
			get
			{
				return new LocalizedString("WarningSecurePipelineTracingPath", "Ex44DDA6", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008B7C RID: 35708 RVA: 0x002425A4 File Offset: 0x002407A4
		public static LocalizedString ConfirmationMessageHostCannotBeResolved(string parameter)
		{
			return new LocalizedString("ConfirmationMessageHostCannotBeResolved", "Ex99E4DD", false, true, Strings.ResourceManager, new object[]
			{
				parameter
			});
		}

		// Token: 0x06008B7D RID: 35709 RVA: 0x002425D4 File Offset: 0x002407D4
		public static LocalizedString ConfirmationMessageNewMailboxDatabaseRecovery(string Name)
		{
			return new LocalizedString("ConfirmationMessageNewMailboxDatabaseRecovery", "Ex122649", false, true, Strings.ResourceManager, new object[]
			{
				Name
			});
		}

		// Token: 0x17002BD0 RID: 11216
		// (get) Token: 0x06008B7E RID: 35710 RVA: 0x00242603 File Offset: 0x00240803
		public static LocalizedString EnableConfigCustomizationsDescription
		{
			get
			{
				return new LocalizedString("EnableConfigCustomizationsDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002BD1 RID: 11217
		// (get) Token: 0x06008B7F RID: 35711 RVA: 0x00242621 File Offset: 0x00240821
		public static LocalizedString WrongLogLevel
		{
			get
			{
				return new LocalizedString("WrongLogLevel", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002BD2 RID: 11218
		// (get) Token: 0x06008B80 RID: 35712 RVA: 0x0024263F File Offset: 0x0024083F
		public static LocalizedString ErrorPublicFolderFree
		{
			get
			{
				return new LocalizedString("ErrorPublicFolderFree", "ExF53150", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008B81 RID: 35713 RVA: 0x00242660 File Offset: 0x00240860
		public static LocalizedString WarningFswNotValidPath(string identity, string path)
		{
			return new LocalizedString("WarningFswNotValidPath", "Ex09D84E", false, true, Strings.ResourceManager, new object[]
			{
				identity,
				path
			});
		}

		// Token: 0x17002BD3 RID: 11219
		// (get) Token: 0x06008B82 RID: 35714 RVA: 0x00242693 File Offset: 0x00240893
		public static LocalizedString ErrorUMInvalidParameters
		{
			get
			{
				return new LocalizedString("ErrorUMInvalidParameters", "ExDFDD6F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002BD4 RID: 11220
		// (get) Token: 0x06008B83 RID: 35715 RVA: 0x002426B1 File Offset: 0x002408B1
		public static LocalizedString ADAttributeCustomAttribute10
		{
			get
			{
				return new LocalizedString("ADAttributeCustomAttribute10", "Ex716D14", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008B84 RID: 35716 RVA: 0x002426D0 File Offset: 0x002408D0
		public static LocalizedString ErrorNonExchangeUserError(string user)
		{
			return new LocalizedString("ErrorNonExchangeUserError", "Ex31110D", false, true, Strings.ResourceManager, new object[]
			{
				user
			});
		}

		// Token: 0x06008B85 RID: 35717 RVA: 0x00242700 File Offset: 0x00240900
		public static LocalizedString AboutToInstallCertificateToMachineStore(string Thumbprint)
		{
			return new LocalizedString("AboutToInstallCertificateToMachineStore", "Ex83C203", false, true, Strings.ResourceManager, new object[]
			{
				Thumbprint
			});
		}

		// Token: 0x17002BD5 RID: 11221
		// (get) Token: 0x06008B86 RID: 35718 RVA: 0x0024272F File Offset: 0x0024092F
		public static LocalizedString DlpPolicyDescriptionDescription
		{
			get
			{
				return new LocalizedString("DlpPolicyDescriptionDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008B87 RID: 35719 RVA: 0x00242750 File Offset: 0x00240950
		public static LocalizedString BadRtfParameterException(string value)
		{
			return new LocalizedString("BadRtfParameterException", "ExB497E8", false, true, Strings.ResourceManager, new object[]
			{
				value
			});
		}

		// Token: 0x17002BD6 RID: 11222
		// (get) Token: 0x06008B88 RID: 35720 RVA: 0x0024277F File Offset: 0x0024097F
		public static LocalizedString SetupProgressStoppingThrottlingService
		{
			get
			{
				return new LocalizedString("SetupProgressStoppingThrottlingService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002BD7 RID: 11223
		// (get) Token: 0x06008B89 RID: 35721 RVA: 0x0024279D File Offset: 0x0024099D
		public static LocalizedString CasHealthOwaNotOwaPage
		{
			get
			{
				return new LocalizedString("CasHealthOwaNotOwaPage", "Ex778FE3", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002BD8 RID: 11224
		// (get) Token: 0x06008B8A RID: 35722 RVA: 0x002427BB File Offset: 0x002409BB
		public static LocalizedString ErrorRpcHttpMustSpecifyExternalClientAuthenticationParameter
		{
			get
			{
				return new LocalizedString("ErrorRpcHttpMustSpecifyExternalClientAuthenticationParameter", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002BD9 RID: 11225
		// (get) Token: 0x06008B8B RID: 35723 RVA: 0x002427D9 File Offset: 0x002409D9
		public static LocalizedString InstallOSPRoleDescription
		{
			get
			{
				return new LocalizedString("InstallOSPRoleDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008B8C RID: 35724 RVA: 0x002427F8 File Offset: 0x002409F8
		public static LocalizedString WarningReuseExistingFingerprints(string userProvidedDescriptions, string actualDescriptions)
		{
			return new LocalizedString("WarningReuseExistingFingerprints", "", false, false, Strings.ResourceManager, new object[]
			{
				userProvidedDescriptions,
				actualDescriptions
			});
		}

		// Token: 0x17002BDA RID: 11226
		// (get) Token: 0x06008B8D RID: 35725 RVA: 0x0024282B File Offset: 0x00240A2B
		public static LocalizedString AllTenantsScopedSessionNotSupported
		{
			get
			{
				return new LocalizedString("AllTenantsScopedSessionNotSupported", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008B8E RID: 35726 RVA: 0x0024284C File Offset: 0x00240A4C
		public static LocalizedString AppSettingKeyNotFound(string key)
		{
			return new LocalizedString("AppSettingKeyNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				key
			});
		}

		// Token: 0x06008B8F RID: 35727 RVA: 0x0024287C File Offset: 0x00240A7C
		public static LocalizedString ErrorOutboundConnectorAlreadyExists(string name)
		{
			return new LocalizedString("ErrorOutboundConnectorAlreadyExists", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x06008B90 RID: 35728 RVA: 0x002428AC File Offset: 0x00240AAC
		public static LocalizedString ErrorRBACPolicyNotUnique(string id)
		{
			return new LocalizedString("ErrorRBACPolicyNotUnique", "Ex9797C0", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x06008B91 RID: 35729 RVA: 0x002428DC File Offset: 0x00240ADC
		public static LocalizedString VerboseFixingObjectsUnderRootId(string root)
		{
			return new LocalizedString("VerboseFixingObjectsUnderRootId", "Ex030E53", false, true, Strings.ResourceManager, new object[]
			{
				root
			});
		}

		// Token: 0x17002BDB RID: 11227
		// (get) Token: 0x06008B92 RID: 35730 RVA: 0x0024290B File Offset: 0x00240B0B
		public static LocalizedString ErrorUnableToFindValidPublicFolderMailbox
		{
			get
			{
				return new LocalizedString("ErrorUnableToFindValidPublicFolderMailbox", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002BDC RID: 11228
		// (get) Token: 0x06008B93 RID: 35731 RVA: 0x00242929 File Offset: 0x00240B29
		public static LocalizedString ProgressChangeFsw
		{
			get
			{
				return new LocalizedString("ProgressChangeFsw", "ExD2E045", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002BDD RID: 11229
		// (get) Token: 0x06008B94 RID: 35732 RVA: 0x00242947 File Offset: 0x00240B47
		public static LocalizedString ConfirmationMessageNewEdgeSyncMservConnectorOnLocalSite
		{
			get
			{
				return new LocalizedString("ConfirmationMessageNewEdgeSyncMservConnectorOnLocalSite", "ExA8A0BA", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008B95 RID: 35733 RVA: 0x00242968 File Offset: 0x00240B68
		public static LocalizedString ConfirmationMessageEnableMailboxPublicFolder(string identity)
		{
			return new LocalizedString("ConfirmationMessageEnableMailboxPublicFolder", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x17002BDE RID: 11230
		// (get) Token: 0x06008B96 RID: 35734 RVA: 0x00242997 File Offset: 0x00240B97
		public static LocalizedString StartAfterOrCompleteAfterCannotBeSetOnLegacyRequests
		{
			get
			{
				return new LocalizedString("StartAfterOrCompleteAfterCannotBeSetOnLegacyRequests", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002BDF RID: 11231
		// (get) Token: 0x06008B97 RID: 35735 RVA: 0x002429B5 File Offset: 0x00240BB5
		public static LocalizedString MtrtRejectMessage
		{
			get
			{
				return new LocalizedString("MtrtRejectMessage", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008B98 RID: 35736 RVA: 0x002429D4 File Offset: 0x00240BD4
		public static LocalizedString ErrorValidationException(string message)
		{
			return new LocalizedString("ErrorValidationException", "Ex8AAC71", false, true, Strings.ResourceManager, new object[]
			{
				message
			});
		}

		// Token: 0x06008B99 RID: 35737 RVA: 0x00242A04 File Offset: 0x00240C04
		public static LocalizedString ConfirmationMessageMoveMailboxDatabaseMaster(string Identity, string sourceserver, string targetserver)
		{
			return new LocalizedString("ConfirmationMessageMoveMailboxDatabaseMaster", "Ex7D44A9", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				sourceserver,
				targetserver
			});
		}

		// Token: 0x17002BE0 RID: 11232
		// (get) Token: 0x06008B9A RID: 35738 RVA: 0x00242A3B File Offset: 0x00240C3B
		public static LocalizedString WarningConnectingPrimaryAsSecondary
		{
			get
			{
				return new LocalizedString("WarningConnectingPrimaryAsSecondary", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008B9B RID: 35739 RVA: 0x00242A5C File Offset: 0x00240C5C
		public static LocalizedString ErrorImportLiveIdManagedMemberExists(string memberName)
		{
			return new LocalizedString("ErrorImportLiveIdManagedMemberExists", "Ex37ED7D", false, true, Strings.ResourceManager, new object[]
			{
				memberName
			});
		}

		// Token: 0x17002BE1 RID: 11233
		// (get) Token: 0x06008B9C RID: 35740 RVA: 0x00242A8B File Offset: 0x00240C8B
		public static LocalizedString MapiTransactionResultUndefined
		{
			get
			{
				return new LocalizedString("MapiTransactionResultUndefined", "Ex07237B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002BE2 RID: 11234
		// (get) Token: 0x06008B9D RID: 35741 RVA: 0x00242AA9 File Offset: 0x00240CA9
		public static LocalizedString ArgumentNotSet
		{
			get
			{
				return new LocalizedString("ArgumentNotSet", "Ex4593BF", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008B9E RID: 35742 RVA: 0x00242AC8 File Offset: 0x00240CC8
		public static LocalizedString LogExsetdataUninstallingAtom(string atomID)
		{
			return new LocalizedString("LogExsetdataUninstallingAtom", "Ex487616", false, true, Strings.ResourceManager, new object[]
			{
				atomID
			});
		}

		// Token: 0x06008B9F RID: 35743 RVA: 0x00242AF8 File Offset: 0x00240CF8
		public static LocalizedString ClassificationRuleCollectionFingerprintValidationFailure(string fingerprints)
		{
			return new LocalizedString("ClassificationRuleCollectionFingerprintValidationFailure", "", false, false, Strings.ResourceManager, new object[]
			{
				fingerprints
			});
		}

		// Token: 0x17002BE3 RID: 11235
		// (get) Token: 0x06008BA0 RID: 35744 RVA: 0x00242B27 File Offset: 0x00240D27
		public static LocalizedString VerboseNoWriteAccessToExchangeServers
		{
			get
			{
				return new LocalizedString("VerboseNoWriteAccessToExchangeServers", "ExEA7553", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002BE4 RID: 11236
		// (get) Token: 0x06008BA1 RID: 35745 RVA: 0x00242B45 File Offset: 0x00240D45
		public static LocalizedString ResponseHeader
		{
			get
			{
				return new LocalizedString("ResponseHeader", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002BE5 RID: 11237
		// (get) Token: 0x06008BA2 RID: 35746 RVA: 0x00242B63 File Offset: 0x00240D63
		public static LocalizedString ErrorCannotChangeResourceProperties
		{
			get
			{
				return new LocalizedString("ErrorCannotChangeResourceProperties", "ExA914D0", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008BA3 RID: 35747 RVA: 0x00242B84 File Offset: 0x00240D84
		public static LocalizedString ClassificationRuleCollectionInvalidLangCodesInRuleName(string resourceIdRef, string invalidLangCodes)
		{
			return new LocalizedString("ClassificationRuleCollectionInvalidLangCodesInRuleName", "", false, false, Strings.ResourceManager, new object[]
			{
				resourceIdRef,
				invalidLangCodes
			});
		}

		// Token: 0x17002BE6 RID: 11238
		// (get) Token: 0x06008BA4 RID: 35748 RVA: 0x00242BB7 File Offset: 0x00240DB7
		public static LocalizedString InstallingMSExchangeFDS
		{
			get
			{
				return new LocalizedString("InstallingMSExchangeFDS", "Ex741C7B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008BA5 RID: 35749 RVA: 0x00242BD8 File Offset: 0x00240DD8
		public static LocalizedString ConfirmationMessageNewHostedContentFilterRule(string name)
		{
			return new LocalizedString("ConfirmationMessageNewHostedContentFilterRule", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x17002BE7 RID: 11239
		// (get) Token: 0x06008BA6 RID: 35750 RVA: 0x00242C07 File Offset: 0x00240E07
		public static LocalizedString ErrorEnableWindowsLiveIdForEnterpriseMailbox
		{
			get
			{
				return new LocalizedString("ErrorEnableWindowsLiveIdForEnterpriseMailbox", "Ex082F69", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008BA7 RID: 35751 RVA: 0x00242C28 File Offset: 0x00240E28
		public static LocalizedString MoveMailboxStartDateEarlierThanEndDate(string parameter1, string parameter2)
		{
			return new LocalizedString("MoveMailboxStartDateEarlierThanEndDate", "ExE25887", false, true, Strings.ResourceManager, new object[]
			{
				parameter1,
				parameter2
			});
		}

		// Token: 0x06008BA8 RID: 35752 RVA: 0x00242C5C File Offset: 0x00240E5C
		public static LocalizedString ErrorUnableToReserveDomain(string domain, string appId, string errdetails)
		{
			return new LocalizedString("ErrorUnableToReserveDomain", "Ex703205", false, true, Strings.ResourceManager, new object[]
			{
				domain,
				appId,
				errdetails
			});
		}

		// Token: 0x06008BA9 RID: 35753 RVA: 0x00242C94 File Offset: 0x00240E94
		public static LocalizedString ConfirmationMessageSetTenantRelocationRequest(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetTenantRelocationRequest", "", false, false, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x17002BE8 RID: 11240
		// (get) Token: 0x06008BAA RID: 35754 RVA: 0x00242CC3 File Offset: 0x00240EC3
		public static LocalizedString SetupDiagnosticsServiceComponent
		{
			get
			{
				return new LocalizedString("SetupDiagnosticsServiceComponent", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002BE9 RID: 11241
		// (get) Token: 0x06008BAB RID: 35755 RVA: 0x00242CE1 File Offset: 0x00240EE1
		public static LocalizedString CannotConfigureAdfsOwaWithoutEcpFirst
		{
			get
			{
				return new LocalizedString("CannotConfigureAdfsOwaWithoutEcpFirst", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008BAC RID: 35756 RVA: 0x00242D00 File Offset: 0x00240F00
		public static LocalizedString RemoveDagDestroyingCluster(string clusterName, string lastServer, string dagName)
		{
			return new LocalizedString("RemoveDagDestroyingCluster", "", false, false, Strings.ResourceManager, new object[]
			{
				clusterName,
				lastServer,
				dagName
			});
		}

		// Token: 0x17002BEA RID: 11242
		// (get) Token: 0x06008BAD RID: 35757 RVA: 0x00242D37 File Offset: 0x00240F37
		public static LocalizedString InstallAdminAuditLogConfig
		{
			get
			{
				return new LocalizedString("InstallAdminAuditLogConfig", "Ex3AD425", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008BAE RID: 35758 RVA: 0x00242D58 File Offset: 0x00240F58
		public static LocalizedString MapiTranscationErrorMsgNoTimeLeft(int totalTransactionTimesInSeconds)
		{
			return new LocalizedString("MapiTranscationErrorMsgNoTimeLeft", "Ex7B287E", false, true, Strings.ResourceManager, new object[]
			{
				totalTransactionTimesInSeconds
			});
		}

		// Token: 0x06008BAF RID: 35759 RVA: 0x00242D8C File Offset: 0x00240F8C
		public static LocalizedString MoveMailboxExclusiveParameters(string parameter1, string parameter2)
		{
			return new LocalizedString("MoveMailboxExclusiveParameters", "Ex3B1084", false, true, Strings.ResourceManager, new object[]
			{
				parameter1,
				parameter2
			});
		}

		// Token: 0x17002BEB RID: 11243
		// (get) Token: 0x06008BB0 RID: 35760 RVA: 0x00242DBF File Offset: 0x00240FBF
		public static LocalizedString ErrorNotEnoughInformationToFindRequest
		{
			get
			{
				return new LocalizedString("ErrorNotEnoughInformationToFindRequest", "Ex319427", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008BB1 RID: 35761 RVA: 0x00242DE0 File Offset: 0x00240FE0
		public static LocalizedString GlobalRoutingEntryNotFound(string phoneNumber)
		{
			return new LocalizedString("GlobalRoutingEntryNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				phoneNumber
			});
		}

		// Token: 0x17002BEC RID: 11244
		// (get) Token: 0x06008BB2 RID: 35762 RVA: 0x00242E0F File Offset: 0x0024100F
		public static LocalizedString SetupProgressStartingRemoteRegistryService
		{
			get
			{
				return new LocalizedString("SetupProgressStartingRemoteRegistryService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002BED RID: 11245
		// (get) Token: 0x06008BB3 RID: 35763 RVA: 0x00242E2D File Offset: 0x0024102D
		public static LocalizedString ErrorProofOfOwnershipNotValid
		{
			get
			{
				return new LocalizedString("ErrorProofOfOwnershipNotValid", "Ex7709C9", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008BB4 RID: 35764 RVA: 0x00242E4C File Offset: 0x0024104C
		public static LocalizedString ConfirmationMessageSetRetentionTag(RetentionPolicyTagIdParameter Identity)
		{
			return new LocalizedString("ConfirmationMessageSetRetentionTag", "Ex32D5D6", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x06008BB5 RID: 35765 RVA: 0x00242E7C File Offset: 0x0024107C
		public static LocalizedString ConfirmationMessageEnableDatbaseCopy(string Identity)
		{
			return new LocalizedString("ConfirmationMessageEnableDatbaseCopy", "Ex029867", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x06008BB6 RID: 35766 RVA: 0x00242EAC File Offset: 0x002410AC
		public static LocalizedString VerboseMemberNameToNetId(string memberName)
		{
			return new LocalizedString("VerboseMemberNameToNetId", "Ex195036", false, true, Strings.ResourceManager, new object[]
			{
				memberName
			});
		}

		// Token: 0x06008BB7 RID: 35767 RVA: 0x00242EDC File Offset: 0x002410DC
		public static LocalizedString RmsUrlIsInvalidException(Uri uri)
		{
			return new LocalizedString("RmsUrlIsInvalidException", "", false, false, Strings.ResourceManager, new object[]
			{
				uri
			});
		}

		// Token: 0x06008BB8 RID: 35768 RVA: 0x00242F0C File Offset: 0x0024110C
		public static LocalizedString ConfirmationMessageRemoveContentFilterPhrase(string Phrase)
		{
			return new LocalizedString("ConfirmationMessageRemoveContentFilterPhrase", "ExB5E410", false, true, Strings.ResourceManager, new object[]
			{
				Phrase
			});
		}

		// Token: 0x06008BB9 RID: 35769 RVA: 0x00242F3C File Offset: 0x0024113C
		public static LocalizedString WarningMovingTeamMailboxesCrossForestOrCrossPremise(string mailbox)
		{
			return new LocalizedString("WarningMovingTeamMailboxesCrossForestOrCrossPremise", "", false, false, Strings.ResourceManager, new object[]
			{
				mailbox
			});
		}

		// Token: 0x06008BBA RID: 35770 RVA: 0x00242F6C File Offset: 0x0024116C
		public static LocalizedString ReportUpdateMovedMailboxFailureAfterADSwitchover(LocalizedString reason, string stack)
		{
			return new LocalizedString("ReportUpdateMovedMailboxFailureAfterADSwitchover", "ExDE978C", false, true, Strings.ResourceManager, new object[]
			{
				reason,
				stack
			});
		}

		// Token: 0x06008BBB RID: 35771 RVA: 0x00242FA4 File Offset: 0x002411A4
		public static LocalizedString WarningArchiveMailboxNotReachable(string mailboxAddress)
		{
			return new LocalizedString("WarningArchiveMailboxNotReachable", "", false, false, Strings.ResourceManager, new object[]
			{
				mailboxAddress
			});
		}

		// Token: 0x06008BBC RID: 35772 RVA: 0x00242FD4 File Offset: 0x002411D4
		public static LocalizedString ErrorCannotBeFfoWithoutDatacenter(string component)
		{
			return new LocalizedString("ErrorCannotBeFfoWithoutDatacenter", "", false, false, Strings.ResourceManager, new object[]
			{
				component
			});
		}

		// Token: 0x17002BEE RID: 11246
		// (get) Token: 0x06008BBD RID: 35773 RVA: 0x00243003 File Offset: 0x00241203
		public static LocalizedString ErrorFailedToGetCertificationUri
		{
			get
			{
				return new LocalizedString("ErrorFailedToGetCertificationUri", "Ex3FC2A2", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008BBE RID: 35774 RVA: 0x00243024 File Offset: 0x00241224
		public static LocalizedString VerboseGenerateDefaultScopeByExistingAssignments(string id)
		{
			return new LocalizedString("VerboseGenerateDefaultScopeByExistingAssignments", "ExC734E1", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x06008BBF RID: 35775 RVA: 0x00243054 File Offset: 0x00241254
		public static LocalizedString ErrorNoRemoteCredentialSettingForLocalMove(string identity)
		{
			return new LocalizedString("ErrorNoRemoteCredentialSettingForLocalMove", "ExDB3EA3", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x06008BC0 RID: 35776 RVA: 0x00243084 File Offset: 0x00241284
		public static LocalizedString UMCallAnsweringRuleExtension(string extensions)
		{
			return new LocalizedString("UMCallAnsweringRuleExtension", "", false, false, Strings.ResourceManager, new object[]
			{
				extensions
			});
		}

		// Token: 0x06008BC1 RID: 35777 RVA: 0x002430B4 File Offset: 0x002412B4
		public static LocalizedString ErrorLogFolderPathMissed(string database)
		{
			return new LocalizedString("ErrorLogFolderPathMissed", "Ex295630", false, true, Strings.ResourceManager, new object[]
			{
				database
			});
		}

		// Token: 0x06008BC2 RID: 35778 RVA: 0x002430E4 File Offset: 0x002412E4
		public static LocalizedString TestSearchGetMDBCatalogState(string MDB)
		{
			return new LocalizedString("TestSearchGetMDBCatalogState", "Ex882717", false, true, Strings.ResourceManager, new object[]
			{
				MDB
			});
		}

		// Token: 0x06008BC3 RID: 35779 RVA: 0x00243114 File Offset: 0x00241314
		public static LocalizedString ConfirmationMessageRemoveMailboxFolderPermission(string Identity, string User)
		{
			return new LocalizedString("ConfirmationMessageRemoveMailboxFolderPermission", "ExC406DE", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				User
			});
		}

		// Token: 0x06008BC4 RID: 35780 RVA: 0x00243148 File Offset: 0x00241348
		public static LocalizedString InvalidOutlookProbeIdentity(string probeIdentity)
		{
			return new LocalizedString("InvalidOutlookProbeIdentity", "", false, false, Strings.ResourceManager, new object[]
			{
				probeIdentity
			});
		}

		// Token: 0x06008BC5 RID: 35781 RVA: 0x00243178 File Offset: 0x00241378
		public static LocalizedString SkipWriteEmptyTemplateGuid(string template)
		{
			return new LocalizedString("SkipWriteEmptyTemplateGuid", "Ex7B833D", false, true, Strings.ResourceManager, new object[]
			{
				template
			});
		}

		// Token: 0x06008BC6 RID: 35782 RVA: 0x002431A8 File Offset: 0x002413A8
		public static LocalizedString NewDagErrorDuplicateName(string dagname)
		{
			return new LocalizedString("NewDagErrorDuplicateName", "", false, false, Strings.ResourceManager, new object[]
			{
				dagname
			});
		}

		// Token: 0x06008BC7 RID: 35783 RVA: 0x002431D8 File Offset: 0x002413D8
		public static LocalizedString ErrorFailedToMoveDatabaseLogFiles(string fromPath, string toPath)
		{
			return new LocalizedString("ErrorFailedToMoveDatabaseLogFiles", "ExFBF317", false, true, Strings.ResourceManager, new object[]
			{
				fromPath,
				toPath
			});
		}

		// Token: 0x17002BEF RID: 11247
		// (get) Token: 0x06008BC8 RID: 35784 RVA: 0x0024320B File Offset: 0x0024140B
		public static LocalizedString InvalidClassification
		{
			get
			{
				return new LocalizedString("InvalidClassification", "Ex82671F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008BC9 RID: 35785 RVA: 0x0024322C File Offset: 0x0024142C
		public static LocalizedString CannotChangeStandardUserCredentials(string username)
		{
			return new LocalizedString("CannotChangeStandardUserCredentials", "", false, false, Strings.ResourceManager, new object[]
			{
				username
			});
		}

		// Token: 0x06008BCA RID: 35786 RVA: 0x0024325C File Offset: 0x0024145C
		public static LocalizedString TraceCannotGetWindowsIdentity(string exception)
		{
			return new LocalizedString("TraceCannotGetWindowsIdentity", "Ex647D47", false, true, Strings.ResourceManager, new object[]
			{
				exception
			});
		}

		// Token: 0x06008BCB RID: 35787 RVA: 0x0024328C File Offset: 0x0024148C
		public static LocalizedString VerboseApprovalApplicationObjectExists(string name)
		{
			return new LocalizedString("VerboseApprovalApplicationObjectExists", "Ex005E4A", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x06008BCC RID: 35788 RVA: 0x002432BC File Offset: 0x002414BC
		public static LocalizedString ErrorLocatingLocalServerObject(string serverName)
		{
			return new LocalizedString("ErrorLocatingLocalServerObject", "ExF99DB2", false, true, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		// Token: 0x06008BCD RID: 35789 RVA: 0x002432EC File Offset: 0x002414EC
		public static LocalizedString InvalidSiteForOrganizationMessage(string organization, string redirectionUri)
		{
			return new LocalizedString("InvalidSiteForOrganizationMessage", "ExD6F5D7", false, true, Strings.ResourceManager, new object[]
			{
				organization,
				redirectionUri
			});
		}

		// Token: 0x17002BF0 RID: 11248
		// (get) Token: 0x06008BCE RID: 35790 RVA: 0x0024331F File Offset: 0x0024151F
		public static LocalizedString ErrorInvalidOperation
		{
			get
			{
				return new LocalizedString("ErrorInvalidOperation", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002BF1 RID: 11249
		// (get) Token: 0x06008BCF RID: 35791 RVA: 0x0024333D File Offset: 0x0024153D
		public static LocalizedString SetupComponentRoleSetterBridgehead
		{
			get
			{
				return new LocalizedString("SetupComponentRoleSetterBridgehead", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002BF2 RID: 11250
		// (get) Token: 0x06008BD0 RID: 35792 RVA: 0x0024335B File Offset: 0x0024155B
		public static LocalizedString SetupProgressOwaExplicitLogonEnabled
		{
			get
			{
				return new LocalizedString("SetupProgressOwaExplicitLogonEnabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008BD1 RID: 35793 RVA: 0x0024337C File Offset: 0x0024157C
		public static LocalizedString LoadedComponentWithTasks(string component, int count, string taskList)
		{
			return new LocalizedString("LoadedComponentWithTasks", "Ex493E2B", false, true, Strings.ResourceManager, new object[]
			{
				component,
				count,
				taskList
			});
		}

		// Token: 0x06008BD2 RID: 35794 RVA: 0x002433B8 File Offset: 0x002415B8
		public static LocalizedString ConfirmationMessageTestTopologyServiceIdentity(string identity)
		{
			return new LocalizedString("ConfirmationMessageTestTopologyServiceIdentity", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x17002BF3 RID: 11251
		// (get) Token: 0x06008BD3 RID: 35795 RVA: 0x002433E7 File Offset: 0x002415E7
		public static LocalizedString CannotModifyOneOffTemplates
		{
			get
			{
				return new LocalizedString("CannotModifyOneOffTemplates", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002BF4 RID: 11252
		// (get) Token: 0x06008BD4 RID: 35796 RVA: 0x00243405 File Offset: 0x00241605
		public static LocalizedString ReplayLagPlayDownReasonNone
		{
			get
			{
				return new LocalizedString("ReplayLagPlayDownReasonNone", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008BD5 RID: 35797 RVA: 0x00243424 File Offset: 0x00241624
		public static LocalizedString ErrorAuxHasChildren(string aux)
		{
			return new LocalizedString("ErrorAuxHasChildren", "", false, false, Strings.ResourceManager, new object[]
			{
				aux
			});
		}

		// Token: 0x06008BD6 RID: 35798 RVA: 0x00243454 File Offset: 0x00241654
		public static LocalizedString ConfirmationMessageSetTransportProcessingQuotaOverride(Guid externalDirectoryOrganizationId, bool throttle)
		{
			return new LocalizedString("ConfirmationMessageSetTransportProcessingQuotaOverride", "", false, false, Strings.ResourceManager, new object[]
			{
				externalDirectoryOrganizationId,
				throttle
			});
		}

		// Token: 0x17002BF5 RID: 11253
		// (get) Token: 0x06008BD7 RID: 35799 RVA: 0x00243491 File Offset: 0x00241691
		public static LocalizedString DeviceBlocked
		{
			get
			{
				return new LocalizedString("DeviceBlocked", "ExC540BD", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002BF6 RID: 11254
		// (get) Token: 0x06008BD8 RID: 35800 RVA: 0x002434AF File Offset: 0x002416AF
		public static LocalizedString GetRemoteAccountSyncCache
		{
			get
			{
				return new LocalizedString("GetRemoteAccountSyncCache", "Ex310627", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002BF7 RID: 11255
		// (get) Token: 0x06008BD9 RID: 35801 RVA: 0x002434CD File Offset: 0x002416CD
		public static LocalizedString UsingTargetMonitoringMailbox
		{
			get
			{
				return new LocalizedString("UsingTargetMonitoringMailbox", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002BF8 RID: 11256
		// (get) Token: 0x06008BDA RID: 35802 RVA: 0x002434EB File Offset: 0x002416EB
		public static LocalizedString SetupComponentMidFileCopyUnifiedMessaging
		{
			get
			{
				return new LocalizedString("SetupComponentMidFileCopyUnifiedMessaging", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008BDB RID: 35803 RVA: 0x0024350C File Offset: 0x0024170C
		public static LocalizedString ErrorRecipientDoesNotHavePicture(string name)
		{
			return new LocalizedString("ErrorRecipientDoesNotHavePicture", "Ex410878", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x17002BF9 RID: 11257
		// (get) Token: 0x06008BDC RID: 35804 RVA: 0x0024353B File Offset: 0x0024173B
		public static LocalizedString StoppingHealthService
		{
			get
			{
				return new LocalizedString("StoppingHealthService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002BFA RID: 11258
		// (get) Token: 0x06008BDD RID: 35805 RVA: 0x00243559 File Offset: 0x00241759
		public static LocalizedString RemovePerfCounters
		{
			get
			{
				return new LocalizedString("RemovePerfCounters", "ExC24E7E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002BFB RID: 11259
		// (get) Token: 0x06008BDE RID: 35806 RVA: 0x00243577 File Offset: 0x00241777
		public static LocalizedString ErrorSharedConfigurationUpgradeNotSupported
		{
			get
			{
				return new LocalizedString("ErrorSharedConfigurationUpgradeNotSupported", "Ex39D257", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008BDF RID: 35807 RVA: 0x00243598 File Offset: 0x00241798
		public static LocalizedString AdminAuditLogSearchStartDateIsLaterThanEndDate(string startDate, string endDate)
		{
			return new LocalizedString("AdminAuditLogSearchStartDateIsLaterThanEndDate", "ExF64D38", false, true, Strings.ResourceManager, new object[]
			{
				startDate,
				endDate
			});
		}

		// Token: 0x06008BE0 RID: 35808 RVA: 0x002435CC File Offset: 0x002417CC
		public static LocalizedString WebServicesTestErrorEventDetail(string cmdletName, string scenario, string result, string latency, string error, string verbose)
		{
			return new LocalizedString("WebServicesTestErrorEventDetail", "", false, false, Strings.ResourceManager, new object[]
			{
				cmdletName,
				scenario,
				result,
				latency,
				error,
				verbose
			});
		}

		// Token: 0x06008BE1 RID: 35809 RVA: 0x00243614 File Offset: 0x00241814
		public static LocalizedString ConfirmationMessageAdminAuditLogAgeLimitSmaller(string org, string newAgeLimit)
		{
			return new LocalizedString("ConfirmationMessageAdminAuditLogAgeLimitSmaller", "Ex8D3193", false, true, Strings.ResourceManager, new object[]
			{
				org,
				newAgeLimit
			});
		}

		// Token: 0x06008BE2 RID: 35810 RVA: 0x00243648 File Offset: 0x00241848
		public static LocalizedString AllEssentialServicesForTheRoleRunning(string roleName)
		{
			return new LocalizedString("AllEssentialServicesForTheRoleRunning", "ExDA9036", false, true, Strings.ResourceManager, new object[]
			{
				roleName
			});
		}

		// Token: 0x06008BE3 RID: 35811 RVA: 0x00243678 File Offset: 0x00241878
		public static LocalizedString GetCalendarDiagnosticLog(string identity)
		{
			return new LocalizedString("GetCalendarDiagnosticLog", "Ex07D124", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x06008BE4 RID: 35812 RVA: 0x002436A8 File Offset: 0x002418A8
		public static LocalizedString UMCallAnsweringRuleTransferToVoiceMailWithContext(string context, int key, string galContact)
		{
			return new LocalizedString("UMCallAnsweringRuleTransferToVoiceMailWithContext", "", false, false, Strings.ResourceManager, new object[]
			{
				context,
				key,
				galContact
			});
		}

		// Token: 0x17002BFC RID: 11260
		// (get) Token: 0x06008BE5 RID: 35813 RVA: 0x002436E4 File Offset: 0x002418E4
		public static LocalizedString UMCallAnsweringRuleProvideTheCallerWithTheseOptions
		{
			get
			{
				return new LocalizedString("UMCallAnsweringRuleProvideTheCallerWithTheseOptions", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008BE6 RID: 35814 RVA: 0x00243704 File Offset: 0x00241904
		public static LocalizedString ErrorMailboxNotEnabled(string recipientName)
		{
			return new LocalizedString("ErrorMailboxNotEnabled", "Ex20A280", false, true, Strings.ResourceManager, new object[]
			{
				recipientName
			});
		}

		// Token: 0x06008BE7 RID: 35815 RVA: 0x00243734 File Offset: 0x00241934
		public static LocalizedString ClientAccessRoleAbsent(string server)
		{
			return new LocalizedString("ClientAccessRoleAbsent", "ExF678DF", false, true, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		// Token: 0x17002BFD RID: 11261
		// (get) Token: 0x06008BE8 RID: 35816 RVA: 0x00243763 File Offset: 0x00241963
		public static LocalizedString TestSearchTestThreadTimeOut
		{
			get
			{
				return new LocalizedString("TestSearchTestThreadTimeOut", "Ex4D796B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008BE9 RID: 35817 RVA: 0x00243784 File Offset: 0x00241984
		public static LocalizedString ErrorAuxUnsupportedParent(string parent)
		{
			return new LocalizedString("ErrorAuxUnsupportedParent", "", false, false, Strings.ResourceManager, new object[]
			{
				parent
			});
		}

		// Token: 0x17002BFE RID: 11262
		// (get) Token: 0x06008BEA RID: 35818 RVA: 0x002437B3 File Offset: 0x002419B3
		public static LocalizedString SetupComponentCommonTransportConfiguration
		{
			get
			{
				return new LocalizedString("SetupComponentCommonTransportConfiguration", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002BFF RID: 11263
		// (get) Token: 0x06008BEB RID: 35819 RVA: 0x002437D1 File Offset: 0x002419D1
		public static LocalizedString ConfirmationMessageTestSmtpConnectivity
		{
			get
			{
				return new LocalizedString("ConfirmationMessageTestSmtpConnectivity", "Ex8071A5", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002C00 RID: 11264
		// (get) Token: 0x06008BEC RID: 35820 RVA: 0x002437EF File Offset: 0x002419EF
		public static LocalizedString UninstallingPOP3Service
		{
			get
			{
				return new LocalizedString("UninstallingPOP3Service", "ExE87CCB", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008BED RID: 35821 RVA: 0x00243810 File Offset: 0x00241A10
		public static LocalizedString ErrorInvalidOperationOnRecoveryMailboxDatabase(string mailboxDatabase)
		{
			return new LocalizedString("ErrorInvalidOperationOnRecoveryMailboxDatabase", "Ex944D01", false, true, Strings.ResourceManager, new object[]
			{
				mailboxDatabase
			});
		}

		// Token: 0x06008BEE RID: 35822 RVA: 0x00243840 File Offset: 0x00241A40
		public static LocalizedString ConfirmationMessageInstallProvisioningAgent(string Name, string AssemblyPath)
		{
			return new LocalizedString("ConfirmationMessageInstallProvisioningAgent", "Ex77850A", false, true, Strings.ResourceManager, new object[]
			{
				Name,
				AssemblyPath
			});
		}

		// Token: 0x06008BEF RID: 35823 RVA: 0x00243874 File Offset: 0x00241A74
		public static LocalizedString MultipleAdminAuditLogConfig(string organization)
		{
			return new LocalizedString("MultipleAdminAuditLogConfig", "Ex3DFB35", false, true, Strings.ResourceManager, new object[]
			{
				organization
			});
		}

		// Token: 0x06008BF0 RID: 35824 RVA: 0x002438A4 File Offset: 0x00241AA4
		public static LocalizedString InfoAlreadyIsMemberOfGroup(string obj, string group)
		{
			return new LocalizedString("InfoAlreadyIsMemberOfGroup", "Ex7CD3D3", false, true, Strings.ResourceManager, new object[]
			{
				obj,
				group
			});
		}

		// Token: 0x06008BF1 RID: 35825 RVA: 0x002438D8 File Offset: 0x00241AD8
		public static LocalizedString ErrorMinorPartnerIdIsNotUnique(string id1)
		{
			return new LocalizedString("ErrorMinorPartnerIdIsNotUnique", "ExAABC4B", false, true, Strings.ResourceManager, new object[]
			{
				id1
			});
		}

		// Token: 0x17002C01 RID: 11265
		// (get) Token: 0x06008BF2 RID: 35826 RVA: 0x00243907 File Offset: 0x00241B07
		public static LocalizedString MigrationTypeDoesntMatchConnectionSettings
		{
			get
			{
				return new LocalizedString("MigrationTypeDoesntMatchConnectionSettings", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008BF3 RID: 35827 RVA: 0x00243928 File Offset: 0x00241B28
		public static LocalizedString InvalidStartDate(int days)
		{
			return new LocalizedString("InvalidStartDate", "", false, false, Strings.ResourceManager, new object[]
			{
				days
			});
		}

		// Token: 0x06008BF4 RID: 35828 RVA: 0x0024395C File Offset: 0x00241B5C
		public static LocalizedString SeederAlreadyInProgressPrompt(string dbName, string targetServer, string sourceServer)
		{
			return new LocalizedString("SeederAlreadyInProgressPrompt", "Ex433B44", false, true, Strings.ResourceManager, new object[]
			{
				dbName,
				targetServer,
				sourceServer
			});
		}

		// Token: 0x06008BF5 RID: 35829 RVA: 0x00243994 File Offset: 0x00241B94
		public static LocalizedString AppcmdExecutionFailed(int exitCode, string error)
		{
			return new LocalizedString("AppcmdExecutionFailed", "", false, false, Strings.ResourceManager, new object[]
			{
				exitCode,
				error
			});
		}

		// Token: 0x06008BF6 RID: 35830 RVA: 0x002439CC File Offset: 0x00241BCC
		public static LocalizedString ClassificationRuleCollectionInconsistentDefaultInRuleResource(string resourceIdRefs)
		{
			return new LocalizedString("ClassificationRuleCollectionInconsistentDefaultInRuleResource", "", false, false, Strings.ResourceManager, new object[]
			{
				resourceIdRefs
			});
		}

		// Token: 0x06008BF7 RID: 35831 RVA: 0x002439FC File Offset: 0x00241BFC
		public static LocalizedString UMCallAnsweringRuleTransferToWithoutContext(int key, string number)
		{
			return new LocalizedString("UMCallAnsweringRuleTransferToWithoutContext", "", false, false, Strings.ResourceManager, new object[]
			{
				key,
				number
			});
		}

		// Token: 0x06008BF8 RID: 35832 RVA: 0x00243A34 File Offset: 0x00241C34
		public static LocalizedString FailedToDeletePublicFolderTree(string id, string error)
		{
			return new LocalizedString("FailedToDeletePublicFolderTree", "Ex3E71AA", false, true, Strings.ResourceManager, new object[]
			{
				id,
				error
			});
		}

		// Token: 0x06008BF9 RID: 35833 RVA: 0x00243A68 File Offset: 0x00241C68
		public static LocalizedString FactoryIdentityInUse(string Assembly, string ClassFactory)
		{
			return new LocalizedString("FactoryIdentityInUse", "ExBB2B33", false, true, Strings.ResourceManager, new object[]
			{
				Assembly,
				ClassFactory
			});
		}

		// Token: 0x06008BFA RID: 35834 RVA: 0x00243A9C File Offset: 0x00241C9C
		public static LocalizedString ImapSelectingFolder(string name)
		{
			return new LocalizedString("ImapSelectingFolder", "Ex318C48", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x06008BFB RID: 35835 RVA: 0x00243ACC File Offset: 0x00241CCC
		public static LocalizedString ErrorTeamMailboxContactSharePointSite(string siteUrl, string error)
		{
			return new LocalizedString("ErrorTeamMailboxContactSharePointSite", "", false, false, Strings.ResourceManager, new object[]
			{
				siteUrl,
				error
			});
		}

		// Token: 0x06008BFC RID: 35836 RVA: 0x00243B00 File Offset: 0x00241D00
		public static LocalizedString FailedToGenerateSharedKey(Exception ex)
		{
			return new LocalizedString("FailedToGenerateSharedKey", "", false, false, Strings.ResourceManager, new object[]
			{
				ex
			});
		}

		// Token: 0x06008BFD RID: 35837 RVA: 0x00243B30 File Offset: 0x00241D30
		public static LocalizedString messageTopologyServiceMissingDCExceptionThrown(string operationType)
		{
			return new LocalizedString("messageTopologyServiceMissingDCExceptionThrown", "", false, false, Strings.ResourceManager, new object[]
			{
				operationType
			});
		}

		// Token: 0x06008BFE RID: 35838 RVA: 0x00243B60 File Offset: 0x00241D60
		public static LocalizedString ConfirmationMessageRemoveMalwareFilterRecoveryItem(string item)
		{
			return new LocalizedString("ConfirmationMessageRemoveMalwareFilterRecoveryItem", "", false, false, Strings.ResourceManager, new object[]
			{
				item
			});
		}

		// Token: 0x17002C02 RID: 11266
		// (get) Token: 0x06008BFF RID: 35839 RVA: 0x00243B8F File Offset: 0x00241D8F
		public static LocalizedString DebugStartInternalBeginProcessing
		{
			get
			{
				return new LocalizedString("DebugStartInternalBeginProcessing", "Ex040A36", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002C03 RID: 11267
		// (get) Token: 0x06008C00 RID: 35840 RVA: 0x00243BAD File Offset: 0x00241DAD
		public static LocalizedString SetupComponentPreSetupMailbox
		{
			get
			{
				return new LocalizedString("SetupComponentPreSetupMailbox", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008C01 RID: 35841 RVA: 0x00243BCC File Offset: 0x00241DCC
		public static LocalizedString MailboxAssistantsServiceStarted(string serverName)
		{
			return new LocalizedString("MailboxAssistantsServiceStarted", "ExD3801C", false, true, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		// Token: 0x06008C02 RID: 35842 RVA: 0x00243BFC File Offset: 0x00241DFC
		public static LocalizedString ComplianceJobTaskException(string failure)
		{
			return new LocalizedString("ComplianceJobTaskException", "", false, false, Strings.ResourceManager, new object[]
			{
				failure
			});
		}

		// Token: 0x06008C03 RID: 35843 RVA: 0x00243C2C File Offset: 0x00241E2C
		public static LocalizedString CannotFindRPSServerFile(string RPSServerFile)
		{
			return new LocalizedString("CannotFindRPSServerFile", "ExE645A3", false, true, Strings.ResourceManager, new object[]
			{
				RPSServerFile
			});
		}

		// Token: 0x17002C04 RID: 11268
		// (get) Token: 0x06008C04 RID: 35844 RVA: 0x00243C5B File Offset: 0x00241E5B
		public static LocalizedString ADTopologyServiceDisplayName
		{
			get
			{
				return new LocalizedString("ADTopologyServiceDisplayName", "Ex17CDF6", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008C05 RID: 35845 RVA: 0x00243C7C File Offset: 0x00241E7C
		public static LocalizedString InsufficientEmailsForCrossValidation(string mailbox)
		{
			return new LocalizedString("InsufficientEmailsForCrossValidation", "Ex3F1D0B", false, true, Strings.ResourceManager, new object[]
			{
				mailbox
			});
		}

		// Token: 0x17002C05 RID: 11269
		// (get) Token: 0x06008C06 RID: 35846 RVA: 0x00243CAB File Offset: 0x00241EAB
		public static LocalizedString ExceptionInvalidIisVersion
		{
			get
			{
				return new LocalizedString("ExceptionInvalidIisVersion", "Ex9212E3", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002C06 RID: 11270
		// (get) Token: 0x06008C07 RID: 35847 RVA: 0x00243CC9 File Offset: 0x00241EC9
		public static LocalizedString SendConnectorNonE12SourceAndTargetServers
		{
			get
			{
				return new LocalizedString("SendConnectorNonE12SourceAndTargetServers", "ExD85815", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008C08 RID: 35848 RVA: 0x00243CE8 File Offset: 0x00241EE8
		public static LocalizedString AutodiscoverUrlsDiffer(string localUrl, string actualUrl)
		{
			return new LocalizedString("AutodiscoverUrlsDiffer", "Ex1D023C", false, true, Strings.ResourceManager, new object[]
			{
				localUrl,
				actualUrl
			});
		}

		// Token: 0x17002C07 RID: 11271
		// (get) Token: 0x06008C09 RID: 35849 RVA: 0x00243D1B File Offset: 0x00241F1B
		public static LocalizedString ErrorInvalidJPEGFormat
		{
			get
			{
				return new LocalizedString("ErrorInvalidJPEGFormat", "Ex6C37E0", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002C08 RID: 11272
		// (get) Token: 0x06008C0A RID: 35850 RVA: 0x00243D39 File Offset: 0x00241F39
		public static LocalizedString MtrtEventDefer
		{
			get
			{
				return new LocalizedString("MtrtEventDefer", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008C0B RID: 35851 RVA: 0x00243D58 File Offset: 0x00241F58
		public static LocalizedString ErrorPublicFolderDatabaseNotFound(string idStringValue)
		{
			return new LocalizedString("ErrorPublicFolderDatabaseNotFound", "Ex5FC4A4", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		// Token: 0x17002C09 RID: 11273
		// (get) Token: 0x06008C0C RID: 35852 RVA: 0x00243D87 File Offset: 0x00241F87
		public static LocalizedString InvalidRmsTemplate
		{
			get
			{
				return new LocalizedString("InvalidRmsTemplate", "ExBC4410", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008C0D RID: 35853 RVA: 0x00243DA8 File Offset: 0x00241FA8
		public static LocalizedString ConfirmationMessageSuspendDatabaseCopyIdentity(string Identity, string Server)
		{
			return new LocalizedString("ConfirmationMessageSuspendDatabaseCopyIdentity", "ExE5C46E", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				Server
			});
		}

		// Token: 0x06008C0E RID: 35854 RVA: 0x00243DDC File Offset: 0x00241FDC
		public static LocalizedString ErrorUnableToResolveOwner(string userName, string exception)
		{
			return new LocalizedString("ErrorUnableToResolveOwner", "", false, false, Strings.ResourceManager, new object[]
			{
				userName,
				exception
			});
		}

		// Token: 0x06008C0F RID: 35855 RVA: 0x00243E10 File Offset: 0x00242010
		public static LocalizedString VerboseWillUpgradeServicePlan(string org, string oldServicePlan, string newServiceplan)
		{
			return new LocalizedString("VerboseWillUpgradeServicePlan", "ExB0EF4B", false, true, Strings.ResourceManager, new object[]
			{
				org,
				oldServicePlan,
				newServiceplan
			});
		}

		// Token: 0x17002C0A RID: 11274
		// (get) Token: 0x06008C10 RID: 35856 RVA: 0x00243E47 File Offset: 0x00242047
		public static LocalizedString CasHealthCalendarScenarioTestICalDesc
		{
			get
			{
				return new LocalizedString("CasHealthCalendarScenarioTestICalDesc", "Ex89CF02", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002C0B RID: 11275
		// (get) Token: 0x06008C11 RID: 35857 RVA: 0x00243E65 File Offset: 0x00242065
		public static LocalizedString SetPop3ConfigurationTask
		{
			get
			{
				return new LocalizedString("SetPop3ConfigurationTask", "Ex2DAFE6", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008C12 RID: 35858 RVA: 0x00243E84 File Offset: 0x00242084
		public static LocalizedString ConfirmationMessageSetLinkedUser(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetLinkedUser", "ExF59DFB", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x06008C13 RID: 35859 RVA: 0x00243EB4 File Offset: 0x002420B4
		public static LocalizedString VerboseNoAccessControlSpecified(string server, string dir)
		{
			return new LocalizedString("VerboseNoAccessControlSpecified", "ExD30A18", false, true, Strings.ResourceManager, new object[]
			{
				server,
				dir
			});
		}

		// Token: 0x06008C14 RID: 35860 RVA: 0x00243EE8 File Offset: 0x002420E8
		public static LocalizedString ErrorAutoDiscoverValidatorOabNotFound(string xml)
		{
			return new LocalizedString("ErrorAutoDiscoverValidatorOabNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				xml
			});
		}

		// Token: 0x06008C15 RID: 35861 RVA: 0x00243F18 File Offset: 0x00242118
		public static LocalizedString VerboseSyncTaskCookieOriginatingDCNotAvailable(Guid orgDc)
		{
			return new LocalizedString("VerboseSyncTaskCookieOriginatingDCNotAvailable", "Ex551C68", false, true, Strings.ResourceManager, new object[]
			{
				orgDc
			});
		}

		// Token: 0x06008C16 RID: 35862 RVA: 0x00243F4C File Offset: 0x0024214C
		public static LocalizedString ErrorStartAfter(int days)
		{
			return new LocalizedString("ErrorStartAfter", "", false, false, Strings.ResourceManager, new object[]
			{
				days
			});
		}

		// Token: 0x17002C0C RID: 11276
		// (get) Token: 0x06008C17 RID: 35863 RVA: 0x00243F80 File Offset: 0x00242180
		public static LocalizedString SetupProgressOwaOrganizationEnabled
		{
			get
			{
				return new LocalizedString("SetupProgressOwaOrganizationEnabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008C18 RID: 35864 RVA: 0x00243FA0 File Offset: 0x002421A0
		public static LocalizedString VerboseE12AdminGroupNotFound(string name)
		{
			return new LocalizedString("VerboseE12AdminGroupNotFound", "ExEF5ED3", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x06008C19 RID: 35865 RVA: 0x00243FD0 File Offset: 0x002421D0
		public static LocalizedString ConfirmationMessageNewSystemMessageQuota(string QuotaType, string Text, string Language)
		{
			return new LocalizedString("ConfirmationMessageNewSystemMessageQuota", "Ex9A9916", false, true, Strings.ResourceManager, new object[]
			{
				QuotaType,
				Text,
				Language
			});
		}

		// Token: 0x06008C1A RID: 35866 RVA: 0x00244008 File Offset: 0x00242208
		public static LocalizedString FailedToRunGlobalMonitoringOverride(string container)
		{
			return new LocalizedString("FailedToRunGlobalMonitoringOverride", "", false, false, Strings.ResourceManager, new object[]
			{
				container
			});
		}

		// Token: 0x06008C1B RID: 35867 RVA: 0x00244038 File Offset: 0x00242238
		public static LocalizedString MsoObjectNotFound(string syncobject, string errors)
		{
			return new LocalizedString("MsoObjectNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				syncobject,
				errors
			});
		}

		// Token: 0x06008C1C RID: 35868 RVA: 0x0024406C File Offset: 0x0024226C
		public static LocalizedString TestMailflowError(string source, string target, int errorLatency)
		{
			return new LocalizedString("TestMailflowError", "Ex542097", false, true, Strings.ResourceManager, new object[]
			{
				source,
				target,
				errorLatency
			});
		}

		// Token: 0x06008C1D RID: 35869 RVA: 0x002440A8 File Offset: 0x002422A8
		public static LocalizedString DownloadingFilesTasksRemaining(uint kBytesToDownload, uint kBytesDownloaded, int outstandingTasks)
		{
			return new LocalizedString("DownloadingFilesTasksRemaining", "Ex224FE2", false, true, Strings.ResourceManager, new object[]
			{
				kBytesToDownload,
				kBytesDownloaded,
				outstandingTasks
			});
		}

		// Token: 0x06008C1E RID: 35870 RVA: 0x002440F0 File Offset: 0x002422F0
		public static LocalizedString AgentHandlesNoCmdlets(string assemblyPath)
		{
			return new LocalizedString("AgentHandlesNoCmdlets", "Ex345237", false, true, Strings.ResourceManager, new object[]
			{
				assemblyPath
			});
		}

		// Token: 0x17002C0D RID: 11277
		// (get) Token: 0x06008C1F RID: 35871 RVA: 0x0024411F File Offset: 0x0024231F
		public static LocalizedString ClassificationRuleCollectionMissingRootElementViolation
		{
			get
			{
				return new LocalizedString("ClassificationRuleCollectionMissingRootElementViolation", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008C20 RID: 35872 RVA: 0x00244140 File Offset: 0x00242340
		public static LocalizedString RemoveLiveFedUriReserveResponse(string domain)
		{
			return new LocalizedString("RemoveLiveFedUriReserveResponse", "ExD6D3DA", false, true, Strings.ResourceManager, new object[]
			{
				domain
			});
		}

		// Token: 0x17002C0E RID: 11278
		// (get) Token: 0x06008C21 RID: 35873 RVA: 0x0024416F File Offset: 0x0024236F
		public static LocalizedString ErrorDistributionGroupNamingPolicy
		{
			get
			{
				return new LocalizedString("ErrorDistributionGroupNamingPolicy", "Ex289BCB", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008C22 RID: 35874 RVA: 0x00244190 File Offset: 0x00242390
		public static LocalizedString ConfirmationMessageSetCASMailbox(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetCASMailbox", "Ex488301", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x06008C23 RID: 35875 RVA: 0x002441C0 File Offset: 0x002423C0
		public static LocalizedString DomainNotFoundException(string dom)
		{
			return new LocalizedString("DomainNotFoundException", "Ex40E29A", false, true, Strings.ResourceManager, new object[]
			{
				dom
			});
		}

		// Token: 0x17002C0F RID: 11279
		// (get) Token: 0x06008C24 RID: 35876 RVA: 0x002441EF File Offset: 0x002423EF
		public static LocalizedString ProgressStartUpdateOtherAD
		{
			get
			{
				return new LocalizedString("ProgressStartUpdateOtherAD", "ExD8303E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008C25 RID: 35877 RVA: 0x00244210 File Offset: 0x00242410
		public static LocalizedString MsiPackageAlreadyInstalled(string packagePath)
		{
			return new LocalizedString("MsiPackageAlreadyInstalled", "ExE37B31", false, true, Strings.ResourceManager, new object[]
			{
				packagePath
			});
		}

		// Token: 0x17002C10 RID: 11280
		// (get) Token: 0x06008C26 RID: 35878 RVA: 0x0024423F File Offset: 0x0024243F
		public static LocalizedString DlpRuleMustContainMessageContainsDataClassificationPredicate
		{
			get
			{
				return new LocalizedString("DlpRuleMustContainMessageContainsDataClassificationPredicate", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002C11 RID: 11281
		// (get) Token: 0x06008C27 RID: 35879 RVA: 0x0024425D File Offset: 0x0024245D
		public static LocalizedString SetupProgressConfigureSystemMessageClassification
		{
			get
			{
				return new LocalizedString("SetupProgressConfigureSystemMessageClassification", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002C12 RID: 11282
		// (get) Token: 0x06008C28 RID: 35880 RVA: 0x0024427B File Offset: 0x0024247B
		public static LocalizedString BPAScanCompleted
		{
			get
			{
				return new LocalizedString("BPAScanCompleted", "Ex5902F2", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008C29 RID: 35881 RVA: 0x0024429C File Offset: 0x0024249C
		public static LocalizedString ErrorDatabaseInNonMailboxServer(string database)
		{
			return new LocalizedString("ErrorDatabaseInNonMailboxServer", "Ex2BE11E", false, true, Strings.ResourceManager, new object[]
			{
				database
			});
		}

		// Token: 0x06008C2A RID: 35882 RVA: 0x002442CC File Offset: 0x002424CC
		public static LocalizedString CannotCreateJunkEmailRule(string mailboxIdentity)
		{
			return new LocalizedString("CannotCreateJunkEmailRule", "Ex673F19", false, true, Strings.ResourceManager, new object[]
			{
				mailboxIdentity
			});
		}

		// Token: 0x06008C2B RID: 35883 RVA: 0x002442FC File Offset: 0x002424FC
		public static LocalizedString ProtocolTransactionsDetails(string casServer, string mailboxServer, string mailboxDatabae, string mailbox, string port, string connectionType, bool trustCertificate)
		{
			return new LocalizedString("ProtocolTransactionsDetails", "Ex55E593", false, true, Strings.ResourceManager, new object[]
			{
				casServer,
				mailboxServer,
				mailboxDatabae,
				mailbox,
				port,
				connectionType,
				trustCertificate
			});
		}

		// Token: 0x06008C2C RID: 35884 RVA: 0x0024434C File Offset: 0x0024254C
		public static LocalizedString VerboseTargetDcIsUpToDate(string dc)
		{
			return new LocalizedString("VerboseTargetDcIsUpToDate", "", false, false, Strings.ResourceManager, new object[]
			{
				dc
			});
		}

		// Token: 0x17002C13 RID: 11283
		// (get) Token: 0x06008C2D RID: 35885 RVA: 0x0024437B File Offset: 0x0024257B
		public static LocalizedString WarningPublicFolderFree
		{
			get
			{
				return new LocalizedString("WarningPublicFolderFree", "Ex27EB17", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008C2E RID: 35886 RVA: 0x0024439C File Offset: 0x0024259C
		public static LocalizedString ExchangeSettingsAssemblyNotFound(string name, string path, string type)
		{
			return new LocalizedString("ExchangeSettingsAssemblyNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				name,
				path,
				type
			});
		}

		// Token: 0x17002C14 RID: 11284
		// (get) Token: 0x06008C2F RID: 35887 RVA: 0x002443D3 File Offset: 0x002425D3
		public static LocalizedString SetupExchangeHostedFilteringAdminCenterAvailabilityEnabled
		{
			get
			{
				return new LocalizedString("SetupExchangeHostedFilteringAdminCenterAvailabilityEnabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008C30 RID: 35888 RVA: 0x002443F4 File Offset: 0x002425F4
		public static LocalizedString ConfirmationMessageRemoveDistributionGroup(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveDistributionGroup", "Ex7B0F35", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x17002C15 RID: 11285
		// (get) Token: 0x06008C31 RID: 35889 RVA: 0x00244423 File Offset: 0x00242623
		public static LocalizedString DeleteMessageActionMustBeTheOnlyAction
		{
			get
			{
				return new LocalizedString("DeleteMessageActionMustBeTheOnlyAction", "ExA55B6D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002C16 RID: 11286
		// (get) Token: 0x06008C32 RID: 35890 RVA: 0x00244441 File Offset: 0x00242641
		public static LocalizedString ClientAccessPerfCountersComponentDescription
		{
			get
			{
				return new LocalizedString("ClientAccessPerfCountersComponentDescription", "Ex273511", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002C17 RID: 11287
		// (get) Token: 0x06008C33 RID: 35891 RVA: 0x0024445F File Offset: 0x0024265F
		public static LocalizedString SMTPNotEnabledForTlsCertificate
		{
			get
			{
				return new LocalizedString("SMTPNotEnabledForTlsCertificate", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008C34 RID: 35892 RVA: 0x00244480 File Offset: 0x00242680
		public static LocalizedString ErrorDisconnectedMailboxNotPrimary(string identity, string user)
		{
			return new LocalizedString("ErrorDisconnectedMailboxNotPrimary", "Ex69581C", false, true, Strings.ResourceManager, new object[]
			{
				identity,
				user
			});
		}

		// Token: 0x17002C18 RID: 11288
		// (get) Token: 0x06008C35 RID: 35893 RVA: 0x002444B3 File Offset: 0x002426B3
		public static LocalizedString MonitoringServiceDescription
		{
			get
			{
				return new LocalizedString("MonitoringServiceDescription", "Ex8D2CCB", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002C19 RID: 11289
		// (get) Token: 0x06008C36 RID: 35894 RVA: 0x002444D1 File Offset: 0x002426D1
		public static LocalizedString CasHealthWarnTrustAllCertificates
		{
			get
			{
				return new LocalizedString("CasHealthWarnTrustAllCertificates", "ExB4A15C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002C1A RID: 11290
		// (get) Token: 0x06008C37 RID: 35895 RVA: 0x002444EF File Offset: 0x002426EF
		public static LocalizedString ServiceUnavaiable
		{
			get
			{
				return new LocalizedString("ServiceUnavaiable", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008C38 RID: 35896 RVA: 0x00244510 File Offset: 0x00242710
		public static LocalizedString TestOAuthResponseDetails(string appid)
		{
			return new LocalizedString("TestOAuthResponseDetails", "", false, false, Strings.ResourceManager, new object[]
			{
				appid
			});
		}

		// Token: 0x06008C39 RID: 35897 RVA: 0x00244540 File Offset: 0x00242740
		public static LocalizedString BadNameParameterException(string value)
		{
			return new LocalizedString("BadNameParameterException", "Ex43EF7F", false, true, Strings.ResourceManager, new object[]
			{
				value
			});
		}

		// Token: 0x06008C3A RID: 35898 RVA: 0x00244570 File Offset: 0x00242770
		public static LocalizedString RestoreUsingExistingFile(string databaseName, string fileName)
		{
			return new LocalizedString("RestoreUsingExistingFile", "Ex98D5B8", false, true, Strings.ResourceManager, new object[]
			{
				databaseName,
				fileName
			});
		}

		// Token: 0x17002C1B RID: 11291
		// (get) Token: 0x06008C3B RID: 35899 RVA: 0x002445A3 File Offset: 0x002427A3
		public static LocalizedString ClassificationRuleCollectionConfigValidationUnexpectedContents
		{
			get
			{
				return new LocalizedString("ClassificationRuleCollectionConfigValidationUnexpectedContents", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002C1C RID: 11292
		// (get) Token: 0x06008C3C RID: 35900 RVA: 0x002445C1 File Offset: 0x002427C1
		public static LocalizedString ErrorEndTimeSmallerThanNow
		{
			get
			{
				return new LocalizedString("ErrorEndTimeSmallerThanNow", "Ex6B5A5C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008C3D RID: 35901 RVA: 0x002445E0 File Offset: 0x002427E0
		public static LocalizedString ErrorSystemFolderPathMissed(string database)
		{
			return new LocalizedString("ErrorSystemFolderPathMissed", "ExF09156", false, true, Strings.ResourceManager, new object[]
			{
				database
			});
		}

		// Token: 0x17002C1D RID: 11293
		// (get) Token: 0x06008C3E RID: 35902 RVA: 0x0024460F File Offset: 0x0024280F
		public static LocalizedString FailedToStartRegSvr32
		{
			get
			{
				return new LocalizedString("FailedToStartRegSvr32", "ExAF7800", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002C1E RID: 11294
		// (get) Token: 0x06008C3F RID: 35903 RVA: 0x0024462D File Offset: 0x0024282D
		public static LocalizedString ConfirmationMessageSetMapiVirtualDirectory
		{
			get
			{
				return new LocalizedString("ConfirmationMessageSetMapiVirtualDirectory", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008C40 RID: 35904 RVA: 0x0024464C File Offset: 0x0024284C
		public static LocalizedString VerboseDGOwnershipDeepSearch(string user, string group)
		{
			return new LocalizedString("VerboseDGOwnershipDeepSearch", "", false, false, Strings.ResourceManager, new object[]
			{
				user,
				group
			});
		}

		// Token: 0x17002C1F RID: 11295
		// (get) Token: 0x06008C41 RID: 35905 RVA: 0x0024467F File Offset: 0x0024287F
		public static LocalizedString UseDagDefaultOnOffNone
		{
			get
			{
				return new LocalizedString("UseDagDefaultOnOffNone", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002C20 RID: 11296
		// (get) Token: 0x06008C42 RID: 35906 RVA: 0x0024469D File Offset: 0x0024289D
		public static LocalizedString MultipleMsoSyncObjectsRetrieved
		{
			get
			{
				return new LocalizedString("MultipleMsoSyncObjectsRetrieved", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002C21 RID: 11297
		// (get) Token: 0x06008C43 RID: 35907 RVA: 0x002446BB File Offset: 0x002428BB
		public static LocalizedString EnableCertificateFederation
		{
			get
			{
				return new LocalizedString("EnableCertificateFederation", "ExCBA75F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002C22 RID: 11298
		// (get) Token: 0x06008C44 RID: 35908 RVA: 0x002446D9 File Offset: 0x002428D9
		public static LocalizedString ReplicationCheckResultPassed
		{
			get
			{
				return new LocalizedString("ReplicationCheckResultPassed", "ExBF9827", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008C45 RID: 35909 RVA: 0x002446F8 File Offset: 0x002428F8
		public static LocalizedString ParsingTokenIssuerPreviousCertificate(string thumbprint)
		{
			return new LocalizedString("ParsingTokenIssuerPreviousCertificate", "Ex7B0C39", false, true, Strings.ResourceManager, new object[]
			{
				thumbprint
			});
		}

		// Token: 0x06008C46 RID: 35910 RVA: 0x00244728 File Offset: 0x00242928
		public static LocalizedString ReplicationCheckPassed(string checkTitle)
		{
			return new LocalizedString("ReplicationCheckPassed", "Ex4599B2", false, true, Strings.ResourceManager, new object[]
			{
				checkTitle
			});
		}

		// Token: 0x06008C47 RID: 35911 RVA: 0x00244758 File Offset: 0x00242958
		public static LocalizedString ErrorCleanupRequestedAtWrongStage(string identity, string stateRequested, string currentState, string expectedState)
		{
			return new LocalizedString("ErrorCleanupRequestedAtWrongStage", "", false, false, Strings.ResourceManager, new object[]
			{
				identity,
				stateRequested,
				currentState,
				expectedState
			});
		}

		// Token: 0x06008C48 RID: 35912 RVA: 0x00244794 File Offset: 0x00242994
		public static LocalizedString DagTaskRemovedServerFromDag(string serverName, string dagName)
		{
			return new LocalizedString("DagTaskRemovedServerFromDag", "", false, false, Strings.ResourceManager, new object[]
			{
				serverName,
				dagName
			});
		}

		// Token: 0x17002C23 RID: 11299
		// (get) Token: 0x06008C49 RID: 35913 RVA: 0x002447C7 File Offset: 0x002429C7
		public static LocalizedString SetupComponentPreSetupUnifiedMessaging
		{
			get
			{
				return new LocalizedString("SetupComponentPreSetupUnifiedMessaging", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008C4A RID: 35914 RVA: 0x002447E8 File Offset: 0x002429E8
		public static LocalizedString ErrorDlpPolicyTemplateIsNotInstalled(string identity)
		{
			return new LocalizedString("ErrorDlpPolicyTemplateIsNotInstalled", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x06008C4B RID: 35915 RVA: 0x00244818 File Offset: 0x00242A18
		public static LocalizedString AboutToUpdateCongigFile(string xmlConfigFile, string siteId)
		{
			return new LocalizedString("AboutToUpdateCongigFile", "Ex4624BA", false, true, Strings.ResourceManager, new object[]
			{
				xmlConfigFile,
				siteId
			});
		}

		// Token: 0x17002C24 RID: 11300
		// (get) Token: 0x06008C4C RID: 35916 RVA: 0x0024484B File Offset: 0x00242A4B
		public static LocalizedString SetupProgressCreateTransportSettingsContainer
		{
			get
			{
				return new LocalizedString("SetupProgressCreateTransportSettingsContainer", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002C25 RID: 11301
		// (get) Token: 0x06008C4D RID: 35917 RVA: 0x00244869 File Offset: 0x00242A69
		public static LocalizedString VerboseFixingStart
		{
			get
			{
				return new LocalizedString("VerboseFixingStart", "Ex65B661", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002C26 RID: 11302
		// (get) Token: 0x06008C4E RID: 35918 RVA: 0x00244887 File Offset: 0x00242A87
		public static LocalizedString SetupProgressPublicFolderMailboxCountQuota
		{
			get
			{
				return new LocalizedString("SetupProgressPublicFolderMailboxCountQuota", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008C4F RID: 35919 RVA: 0x002448A8 File Offset: 0x00242AA8
		public static LocalizedString ConfirmationMessageMailboxAuditBypassAssociation(string user)
		{
			return new LocalizedString("ConfirmationMessageMailboxAuditBypassAssociation", "Ex11CFD2", false, true, Strings.ResourceManager, new object[]
			{
				user
			});
		}

		// Token: 0x17002C27 RID: 11303
		// (get) Token: 0x06008C50 RID: 35920 RVA: 0x002448D7 File Offset: 0x00242AD7
		public static LocalizedString SetupProgressHostedOutboundSpamFilterPolicy
		{
			get
			{
				return new LocalizedString("SetupProgressHostedOutboundSpamFilterPolicy", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008C51 RID: 35921 RVA: 0x002448F8 File Offset: 0x00242AF8
		public static LocalizedString TaskTimeout(string scenario, TimeSpan overtime)
		{
			return new LocalizedString("TaskTimeout", "", false, false, Strings.ResourceManager, new object[]
			{
				scenario,
				overtime
			});
		}

		// Token: 0x17002C28 RID: 11304
		// (get) Token: 0x06008C52 RID: 35922 RVA: 0x00244930 File Offset: 0x00242B30
		public static LocalizedString ErrorArchiveRemoteArchiveCannotBeSpecifiedTogether
		{
			get
			{
				return new LocalizedString("ErrorArchiveRemoteArchiveCannotBeSpecifiedTogether", "Ex2BA168", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008C53 RID: 35923 RVA: 0x00244950 File Offset: 0x00242B50
		public static LocalizedString DagTaskRemoveDagServerRunningChecks(string serverName, string dagName)
		{
			return new LocalizedString("DagTaskRemoveDagServerRunningChecks", "", false, false, Strings.ResourceManager, new object[]
			{
				serverName,
				dagName
			});
		}

		// Token: 0x06008C54 RID: 35924 RVA: 0x00244984 File Offset: 0x00242B84
		public static LocalizedString MigrationNotFound(string name)
		{
			return new LocalizedString("MigrationNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x06008C55 RID: 35925 RVA: 0x002449B4 File Offset: 0x00242BB4
		public static LocalizedString ErrorArchiveNotSupport(string mailbox)
		{
			return new LocalizedString("ErrorArchiveNotSupport", "", false, false, Strings.ResourceManager, new object[]
			{
				mailbox
			});
		}

		// Token: 0x17002C29 RID: 11305
		// (get) Token: 0x06008C56 RID: 35926 RVA: 0x002449E3 File Offset: 0x00242BE3
		public static LocalizedString CasHealthTaskNotRunOnExchangeServer
		{
			get
			{
				return new LocalizedString("CasHealthTaskNotRunOnExchangeServer", "Ex24DDA7", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008C57 RID: 35927 RVA: 0x00244A04 File Offset: 0x00242C04
		public static LocalizedString ExchangeSettingsGroupFoundMultipleTimes(string name)
		{
			return new LocalizedString("ExchangeSettingsGroupFoundMultipleTimes", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x06008C58 RID: 35928 RVA: 0x00244A34 File Offset: 0x00242C34
		public static LocalizedString RemoveADServerMetadataServerNotFound(string name)
		{
			return new LocalizedString("RemoveADServerMetadataServerNotFound", "ExF61E6B", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x06008C59 RID: 35929 RVA: 0x00244A64 File Offset: 0x00242C64
		public static LocalizedString ErrorWSManConfigSchemaFileNotFound(string file)
		{
			return new LocalizedString("ErrorWSManConfigSchemaFileNotFound", "Ex749D76", false, true, Strings.ResourceManager, new object[]
			{
				file
			});
		}

		// Token: 0x06008C5A RID: 35930 RVA: 0x00244A94 File Offset: 0x00242C94
		public static LocalizedString FailedToDeserializeDagConfigurationXMLString(string stringToDeserialize, string typeName)
		{
			return new LocalizedString("FailedToDeserializeDagConfigurationXMLString", "", false, false, Strings.ResourceManager, new object[]
			{
				stringToDeserialize,
				typeName
			});
		}

		// Token: 0x06008C5B RID: 35931 RVA: 0x00244AC8 File Offset: 0x00242CC8
		public static LocalizedString CasHealthUserNotFound(string userPrincipalName, string errorString)
		{
			return new LocalizedString("CasHealthUserNotFound", "Ex6E8907", false, true, Strings.ResourceManager, new object[]
			{
				userPrincipalName,
				errorString
			});
		}

		// Token: 0x17002C2A RID: 11306
		// (get) Token: 0x06008C5C RID: 35932 RVA: 0x00244AFB File Offset: 0x00242CFB
		public static LocalizedString WatchDogServiceDescription
		{
			get
			{
				return new LocalizedString("WatchDogServiceDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008C5D RID: 35933 RVA: 0x00244B1C File Offset: 0x00242D1C
		public static LocalizedString ConfirmationMessageCancelUserPhoto(string Identity)
		{
			return new LocalizedString("ConfirmationMessageCancelUserPhoto", "", false, false, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x06008C5E RID: 35934 RVA: 0x00244B4C File Offset: 0x00242D4C
		public static LocalizedString InconsistentADDbMasterServerNotADag(string databaseName, string masterName)
		{
			return new LocalizedString("InconsistentADDbMasterServerNotADag", "ExDFF542", false, true, Strings.ResourceManager, new object[]
			{
				databaseName,
				masterName
			});
		}

		// Token: 0x06008C5F RID: 35935 RVA: 0x00244B80 File Offset: 0x00242D80
		public static LocalizedString DagFswAndAlternateFswOnSameWitnessServerButPointToDifferentDirectoriesException(string witnessserver, string witnessdirectory, string alternatewitnessdirectory)
		{
			return new LocalizedString("DagFswAndAlternateFswOnSameWitnessServerButPointToDifferentDirectoriesException", "", false, false, Strings.ResourceManager, new object[]
			{
				witnessserver,
				witnessdirectory,
				alternatewitnessdirectory
			});
		}

		// Token: 0x06008C60 RID: 35936 RVA: 0x00244BB8 File Offset: 0x00242DB8
		public static LocalizedString AmMoveRpcCompletedAnyServer(string db)
		{
			return new LocalizedString("AmMoveRpcCompletedAnyServer", "Ex05449E", false, true, Strings.ResourceManager, new object[]
			{
				db
			});
		}

		// Token: 0x06008C61 RID: 35937 RVA: 0x00244BE8 File Offset: 0x00242DE8
		public static LocalizedString MailboxReplicationServiceIsRespondingToRPCPing(string serverVersion)
		{
			return new LocalizedString("MailboxReplicationServiceIsRespondingToRPCPing", "ExDEA669", false, true, Strings.ResourceManager, new object[]
			{
				serverVersion
			});
		}

		// Token: 0x17002C2B RID: 11307
		// (get) Token: 0x06008C62 RID: 35938 RVA: 0x00244C17 File Offset: 0x00242E17
		public static LocalizedString FindingEventSources
		{
			get
			{
				return new LocalizedString("FindingEventSources", "Ex656C70", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008C63 RID: 35939 RVA: 0x00244C38 File Offset: 0x00242E38
		public static LocalizedString UmLanguagePackLogFile(string path)
		{
			return new LocalizedString("UmLanguagePackLogFile", "ExD661C5", false, true, Strings.ResourceManager, new object[]
			{
				path
			});
		}

		// Token: 0x17002C2C RID: 11308
		// (get) Token: 0x06008C64 RID: 35940 RVA: 0x00244C67 File Offset: 0x00242E67
		public static LocalizedString SetupProgressPopEnabled
		{
			get
			{
				return new LocalizedString("SetupProgressPopEnabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002C2D RID: 11309
		// (get) Token: 0x06008C65 RID: 35941 RVA: 0x00244C85 File Offset: 0x00242E85
		public static LocalizedString ADAttributePOBox
		{
			get
			{
				return new LocalizedString("ADAttributePOBox", "Ex535040", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002C2E RID: 11310
		// (get) Token: 0x06008C66 RID: 35942 RVA: 0x00244CA3 File Offset: 0x00242EA3
		public static LocalizedString ErrorInstallationModeMustBeBuildToBuildUpgrade
		{
			get
			{
				return new LocalizedString("ErrorInstallationModeMustBeBuildToBuildUpgrade", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002C2F RID: 11311
		// (get) Token: 0x06008C67 RID: 35943 RVA: 0x00244CC1 File Offset: 0x00242EC1
		public static LocalizedString SetupProgressCreateSenderRepuationConfiguration
		{
			get
			{
				return new LocalizedString("SetupProgressCreateSenderRepuationConfiguration", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008C68 RID: 35944 RVA: 0x00244CE0 File Offset: 0x00242EE0
		public static LocalizedString DagTaskSkippingFormCluster(string clusterName, string dagName)
		{
			return new LocalizedString("DagTaskSkippingFormCluster", "", false, false, Strings.ResourceManager, new object[]
			{
				clusterName,
				dagName
			});
		}

		// Token: 0x06008C69 RID: 35945 RVA: 0x00244D14 File Offset: 0x00242F14
		public static LocalizedString ErrorUsedByMbDb(string nameMbDb, string namePFDB)
		{
			return new LocalizedString("ErrorUsedByMbDb", "Ex1E1DE2", false, true, Strings.ResourceManager, new object[]
			{
				nameMbDb,
				namePFDB
			});
		}

		// Token: 0x06008C6A RID: 35946 RVA: 0x00244D48 File Offset: 0x00242F48
		public static LocalizedString FailedToWriteAirSyncDebugLogging(string user, string error)
		{
			return new LocalizedString("FailedToWriteAirSyncDebugLogging", "Ex7D133A", false, true, Strings.ResourceManager, new object[]
			{
				user,
				error
			});
		}

		// Token: 0x06008C6B RID: 35947 RVA: 0x00244D7C File Offset: 0x00242F7C
		public static LocalizedString ServerAlreadyLicensed(string serverName)
		{
			return new LocalizedString("ServerAlreadyLicensed", "Ex7E95B0", false, true, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		// Token: 0x06008C6C RID: 35948 RVA: 0x00244DAC File Offset: 0x00242FAC
		public static LocalizedString NewDagConfigurationErrorDuplicateName(string dagname)
		{
			return new LocalizedString("NewDagConfigurationErrorDuplicateName", "", false, false, Strings.ResourceManager, new object[]
			{
				dagname
			});
		}

		// Token: 0x06008C6D RID: 35949 RVA: 0x00244DDC File Offset: 0x00242FDC
		public static LocalizedString ConfirmationMessageEnableHostedContentFilterRule(string identity)
		{
			return new LocalizedString("ConfirmationMessageEnableHostedContentFilterRule", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x17002C30 RID: 11312
		// (get) Token: 0x06008C6E RID: 35950 RVA: 0x00244E0B File Offset: 0x0024300B
		public static LocalizedString ErrorOnlyOneParameterMayBeUsed
		{
			get
			{
				return new LocalizedString("ErrorOnlyOneParameterMayBeUsed", "Ex8D2865", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008C6F RID: 35951 RVA: 0x00244E2C File Offset: 0x0024302C
		public static LocalizedString ErrorMailboxLegacyDNInUse(string legacyDN, string mailboxId, string userId)
		{
			return new LocalizedString("ErrorMailboxLegacyDNInUse", "Ex4F1873", false, true, Strings.ResourceManager, new object[]
			{
				legacyDN,
				mailboxId,
				userId
			});
		}

		// Token: 0x17002C31 RID: 11313
		// (get) Token: 0x06008C70 RID: 35952 RVA: 0x00244E63 File Offset: 0x00243063
		public static LocalizedString Away
		{
			get
			{
				return new LocalizedString("Away", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008C71 RID: 35953 RVA: 0x00244E84 File Offset: 0x00243084
		public static LocalizedString PopImapTransactionWarning(int port, string connection, int sslPort, int tlsPort)
		{
			return new LocalizedString("PopImapTransactionWarning", "Ex202064", false, true, Strings.ResourceManager, new object[]
			{
				port,
				connection,
				sslPort,
				tlsPort
			});
		}

		// Token: 0x17002C32 RID: 11314
		// (get) Token: 0x06008C72 RID: 35954 RVA: 0x00244ECE File Offset: 0x002430CE
		public static LocalizedString ErrorOnlyForestWideAllowIsAllowed
		{
			get
			{
				return new LocalizedString("ErrorOnlyForestWideAllowIsAllowed", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008C73 RID: 35955 RVA: 0x00244EEC File Offset: 0x002430EC
		public static LocalizedString ErrorDomainAlreadyFederated(string domain)
		{
			return new LocalizedString("ErrorDomainAlreadyFederated", "Ex0AAEA5", false, true, Strings.ResourceManager, new object[]
			{
				domain
			});
		}

		// Token: 0x06008C74 RID: 35956 RVA: 0x00244F1C File Offset: 0x0024311C
		public static LocalizedString ErrorFaildToSavePubllicFolderReferral(string errorMessage)
		{
			return new LocalizedString("ErrorFaildToSavePubllicFolderReferral", "ExC1DABD", false, true, Strings.ResourceManager, new object[]
			{
				errorMessage
			});
		}

		// Token: 0x17002C33 RID: 11315
		// (get) Token: 0x06008C75 RID: 35957 RVA: 0x00244F4B File Offset: 0x0024314B
		public static LocalizedString SetupProgressPerMBXPlanRetentionPolicyEnabled
		{
			get
			{
				return new LocalizedString("SetupProgressPerMBXPlanRetentionPolicyEnabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008C76 RID: 35958 RVA: 0x00244F6C File Offset: 0x0024316C
		public static LocalizedString InvalidMailboxFolderIdentity(string identity)
		{
			return new LocalizedString("InvalidMailboxFolderIdentity", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x06008C77 RID: 35959 RVA: 0x00244F9C File Offset: 0x0024319C
		public static LocalizedString ErrorInGlsLookup(string error)
		{
			return new LocalizedString("ErrorInGlsLookup", "", false, false, Strings.ResourceManager, new object[]
			{
				error
			});
		}

		// Token: 0x06008C78 RID: 35960 RVA: 0x00244FCC File Offset: 0x002431CC
		public static LocalizedString AirSyncReportingProgressParsing(string filename)
		{
			return new LocalizedString("AirSyncReportingProgressParsing", "Ex4B594D", false, true, Strings.ResourceManager, new object[]
			{
				filename
			});
		}

		// Token: 0x17002C34 RID: 11316
		// (get) Token: 0x06008C79 RID: 35961 RVA: 0x00244FFB File Offset: 0x002431FB
		public static LocalizedString ErrorOabVirtualDirectoryNameIsImmutable
		{
			get
			{
				return new LocalizedString("ErrorOabVirtualDirectoryNameIsImmutable", "Ex2D96A1", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002C35 RID: 11317
		// (get) Token: 0x06008C7A RID: 35962 RVA: 0x00245019 File Offset: 0x00243219
		public static LocalizedString SetupProgressStartingMailboxReplicationService
		{
			get
			{
				return new LocalizedString("SetupProgressStartingMailboxReplicationService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008C7B RID: 35963 RVA: 0x00245038 File Offset: 0x00243238
		public static LocalizedString DiscoveryEndpointWasConstructed(string s)
		{
			return new LocalizedString("DiscoveryEndpointWasConstructed", "", false, false, Strings.ResourceManager, new object[]
			{
				s
			});
		}

		// Token: 0x06008C7C RID: 35964 RVA: 0x00245068 File Offset: 0x00243268
		public static LocalizedString ClassificationRuleCollectionOrphanedResourceViolation(string ruleIdRefs)
		{
			return new LocalizedString("ClassificationRuleCollectionOrphanedResourceViolation", "", false, false, Strings.ResourceManager, new object[]
			{
				ruleIdRefs
			});
		}

		// Token: 0x17002C36 RID: 11318
		// (get) Token: 0x06008C7D RID: 35965 RVA: 0x00245097 File Offset: 0x00243297
		public static LocalizedString RFRIGetReferralScenario
		{
			get
			{
				return new LocalizedString("RFRIGetReferralScenario", "ExCFD951", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008C7E RID: 35966 RVA: 0x002450B8 File Offset: 0x002432B8
		public static LocalizedString ConfirmationMessageAddIPAllowListEntryIPAddress(string IPAddress)
		{
			return new LocalizedString("ConfirmationMessageAddIPAllowListEntryIPAddress", "Ex80237F", false, true, Strings.ResourceManager, new object[]
			{
				IPAddress
			});
		}

		// Token: 0x06008C7F RID: 35967 RVA: 0x002450E8 File Offset: 0x002432E8
		public static LocalizedString EmailAddressNotInAcceptedDomain(string address)
		{
			return new LocalizedString("EmailAddressNotInAcceptedDomain", "", false, false, Strings.ResourceManager, new object[]
			{
				address
			});
		}

		// Token: 0x06008C80 RID: 35968 RVA: 0x00245118 File Offset: 0x00243318
		public static LocalizedString ConfirmationMessageSetPowerShellVirtualDirectory(string name, string server)
		{
			return new LocalizedString("ConfirmationMessageSetPowerShellVirtualDirectory", "Ex618E99", false, true, Strings.ResourceManager, new object[]
			{
				name,
				server
			});
		}

		// Token: 0x06008C81 RID: 35969 RVA: 0x0024514C File Offset: 0x0024334C
		public static LocalizedString CrossPremiseMapMdbToServerFailure(string info)
		{
			return new LocalizedString("CrossPremiseMapMdbToServerFailure", "ExE75671", false, true, Strings.ResourceManager, new object[]
			{
				info
			});
		}

		// Token: 0x06008C82 RID: 35970 RVA: 0x0024517C File Offset: 0x0024337C
		public static LocalizedString SetLiveFedDomainReserveRequest(string domain)
		{
			return new LocalizedString("SetLiveFedDomainReserveRequest", "Ex815F87", false, true, Strings.ResourceManager, new object[]
			{
				domain
			});
		}

		// Token: 0x17002C37 RID: 11319
		// (get) Token: 0x06008C83 RID: 35971 RVA: 0x002451AB File Offset: 0x002433AB
		public static LocalizedString SetupProgressCreateCmdletExtensionAgentContainer
		{
			get
			{
				return new LocalizedString("SetupProgressCreateCmdletExtensionAgentContainer", "Ex868951", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002C38 RID: 11320
		// (get) Token: 0x06008C84 RID: 35972 RVA: 0x002451C9 File Offset: 0x002433C9
		public static LocalizedString TransportSyncManagerServiceDisplayName
		{
			get
			{
				return new LocalizedString("TransportSyncManagerServiceDisplayName", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002C39 RID: 11321
		// (get) Token: 0x06008C85 RID: 35973 RVA: 0x002451E7 File Offset: 0x002433E7
		public static LocalizedString AutodiscoverScenario
		{
			get
			{
				return new LocalizedString("AutodiscoverScenario", "Ex932AAE", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002C3A RID: 11322
		// (get) Token: 0x06008C86 RID: 35974 RVA: 0x00245205 File Offset: 0x00243405
		public static LocalizedString WipeSucceededNote
		{
			get
			{
				return new LocalizedString("WipeSucceededNote", "Ex301D36", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002C3B RID: 11323
		// (get) Token: 0x06008C87 RID: 35975 RVA: 0x00245223 File Offset: 0x00243423
		public static LocalizedString SetupComponentPerfCountersBridgehead
		{
			get
			{
				return new LocalizedString("SetupComponentPerfCountersBridgehead", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008C88 RID: 35976 RVA: 0x00245244 File Offset: 0x00243444
		public static LocalizedString ErrorMoveRequestAlreadyExistsInMDBQueue(string mdbName, string mailbox, Guid mailboxGuid)
		{
			return new LocalizedString("ErrorMoveRequestAlreadyExistsInMDBQueue", "Ex206C6E", false, true, Strings.ResourceManager, new object[]
			{
				mdbName,
				mailbox,
				mailboxGuid
			});
		}

		// Token: 0x06008C89 RID: 35977 RVA: 0x00245280 File Offset: 0x00243480
		public static LocalizedString VerboseRemovePSFanInProvider(string name)
		{
			return new LocalizedString("VerboseRemovePSFanInProvider", "ExA23B61", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x17002C3C RID: 11324
		// (get) Token: 0x06008C8A RID: 35978 RVA: 0x002452AF File Offset: 0x002434AF
		public static LocalizedString RemoteExchangeVersionNotSupported
		{
			get
			{
				return new LocalizedString("RemoteExchangeVersionNotSupported", "ExC2B6E9", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008C8B RID: 35979 RVA: 0x002452D0 File Offset: 0x002434D0
		public static LocalizedString ErrorUnableToFindFqdnForHost(string computerName)
		{
			return new LocalizedString("ErrorUnableToFindFqdnForHost", "", false, false, Strings.ResourceManager, new object[]
			{
				computerName
			});
		}

		// Token: 0x06008C8C RID: 35980 RVA: 0x00245300 File Offset: 0x00243500
		public static LocalizedString ConfirmationMessageNewOrganizationRelationship(string Name, string DomainNames)
		{
			return new LocalizedString("ConfirmationMessageNewOrganizationRelationship", "Ex2C2A29", false, true, Strings.ResourceManager, new object[]
			{
				Name,
				DomainNames
			});
		}

		// Token: 0x17002C3D RID: 11325
		// (get) Token: 0x06008C8D RID: 35981 RVA: 0x00245333 File Offset: 0x00243533
		public static LocalizedString ProgressDeletingLogFiles
		{
			get
			{
				return new LocalizedString("ProgressDeletingLogFiles", "Ex6472C8", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002C3E RID: 11326
		// (get) Token: 0x06008C8E RID: 35982 RVA: 0x00245351 File Offset: 0x00243551
		public static LocalizedString ErrorPatternCannotBeginWithWildcardMultiMatch
		{
			get
			{
				return new LocalizedString("ErrorPatternCannotBeginWithWildcardMultiMatch", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008C8F RID: 35983 RVA: 0x00245370 File Offset: 0x00243570
		public static LocalizedString ErrorUserWithMatchingWindowsLiveIdExists(string liveid, string recipient)
		{
			return new LocalizedString("ErrorUserWithMatchingWindowsLiveIdExists", "Ex5B5729", false, true, Strings.ResourceManager, new object[]
			{
				liveid,
				recipient
			});
		}

		// Token: 0x17002C3F RID: 11327
		// (get) Token: 0x06008C90 RID: 35984 RVA: 0x002453A3 File Offset: 0x002435A3
		public static LocalizedString WarningNoDefaultGAL
		{
			get
			{
				return new LocalizedString("WarningNoDefaultGAL", "ExDE24E0", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008C91 RID: 35985 RVA: 0x002453C4 File Offset: 0x002435C4
		public static LocalizedString TestSearchMdbMonitorMbxIsNull(string mdb)
		{
			return new LocalizedString("TestSearchMdbMonitorMbxIsNull", "", false, false, Strings.ResourceManager, new object[]
			{
				mdb
			});
		}

		// Token: 0x17002C40 RID: 11328
		// (get) Token: 0x06008C92 RID: 35986 RVA: 0x002453F3 File Offset: 0x002435F3
		public static LocalizedString BackSyncUrlInvalidProtcolFormat
		{
			get
			{
				return new LocalizedString("BackSyncUrlInvalidProtcolFormat", "ExA6B9C6", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008C93 RID: 35987 RVA: 0x00245414 File Offset: 0x00243614
		public static LocalizedString ConfirmationMessageAddMonitoringOverride(string propertyName, string identity, string workitemType)
		{
			return new LocalizedString("ConfirmationMessageAddMonitoringOverride", "", false, false, Strings.ResourceManager, new object[]
			{
				propertyName,
				identity,
				workitemType
			});
		}

		// Token: 0x06008C94 RID: 35988 RVA: 0x0024544C File Offset: 0x0024364C
		public static LocalizedString ErrorTargetDatabaseIsRecovery(string database)
		{
			return new LocalizedString("ErrorTargetDatabaseIsRecovery", "Ex3278EC", false, true, Strings.ResourceManager, new object[]
			{
				database
			});
		}

		// Token: 0x17002C41 RID: 11329
		// (get) Token: 0x06008C95 RID: 35989 RVA: 0x0024547B File Offset: 0x0024367B
		public static LocalizedString MSExchangeMGMTDescription
		{
			get
			{
				return new LocalizedString("MSExchangeMGMTDescription", "ExBA230E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008C96 RID: 35990 RVA: 0x0024549C File Offset: 0x0024369C
		public static LocalizedString ProcessStart(string executableFilename, string arguments)
		{
			return new LocalizedString("ProcessStart", "Ex4ED166", false, true, Strings.ResourceManager, new object[]
			{
				executableFilename,
				arguments
			});
		}

		// Token: 0x06008C97 RID: 35991 RVA: 0x002454D0 File Offset: 0x002436D0
		public static LocalizedString WarningShouldReadFromRidMaster(string dc1, string dc2)
		{
			return new LocalizedString("WarningShouldReadFromRidMaster", "", false, false, Strings.ResourceManager, new object[]
			{
				dc1,
				dc2
			});
		}

		// Token: 0x17002C42 RID: 11330
		// (get) Token: 0x06008C98 RID: 35992 RVA: 0x00245503 File Offset: 0x00243703
		public static LocalizedString TcpListenerCheckDesc
		{
			get
			{
				return new LocalizedString("TcpListenerCheckDesc", "Ex94BA5C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008C99 RID: 35993 RVA: 0x00245524 File Offset: 0x00243724
		public static LocalizedString TestRHGetAmRoleRpc(string serverVersion, string rpcSupportedVersion)
		{
			return new LocalizedString("TestRHGetAmRoleRpc", "Ex2B4AC5", false, true, Strings.ResourceManager, new object[]
			{
				serverVersion,
				rpcSupportedVersion
			});
		}

		// Token: 0x06008C9A RID: 35994 RVA: 0x00245558 File Offset: 0x00243758
		public static LocalizedString ServiceNotRunning(string service)
		{
			return new LocalizedString("ServiceNotRunning", "ExAAAF4E", false, true, Strings.ResourceManager, new object[]
			{
				service
			});
		}

		// Token: 0x17002C43 RID: 11331
		// (get) Token: 0x06008C9B RID: 35995 RVA: 0x00245587 File Offset: 0x00243787
		public static LocalizedString CannotRemoveDefaultAcceptedDomain
		{
			get
			{
				return new LocalizedString("CannotRemoveDefaultAcceptedDomain", "Ex6EFA3F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008C9C RID: 35996 RVA: 0x002455A8 File Offset: 0x002437A8
		public static LocalizedString CannotResolvePartitionFromInstanceId(string serviceInstance)
		{
			return new LocalizedString("CannotResolvePartitionFromInstanceId", "", false, false, Strings.ResourceManager, new object[]
			{
				serviceInstance
			});
		}

		// Token: 0x17002C44 RID: 11332
		// (get) Token: 0x06008C9D RID: 35997 RVA: 0x002455D7 File Offset: 0x002437D7
		public static LocalizedString ErrorMoveToArchiveAppliedToSystemFolder
		{
			get
			{
				return new LocalizedString("ErrorMoveToArchiveAppliedToSystemFolder", "Ex05C610", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008C9E RID: 35998 RVA: 0x002455F8 File Offset: 0x002437F8
		public static LocalizedString ErrorDisconnectedMailboxNotArchive(string identity, string user)
		{
			return new LocalizedString("ErrorDisconnectedMailboxNotArchive", "Ex4BA973", false, true, Strings.ResourceManager, new object[]
			{
				identity,
				user
			});
		}

		// Token: 0x06008C9F RID: 35999 RVA: 0x0024562C File Offset: 0x0024382C
		public static LocalizedString InvalidDateValueException(DateTime date, DateTime minDate, DateTime maxDate)
		{
			return new LocalizedString("InvalidDateValueException", "", false, false, Strings.ResourceManager, new object[]
			{
				date,
				minDate,
				maxDate
			});
		}

		// Token: 0x06008CA0 RID: 36000 RVA: 0x00245674 File Offset: 0x00243874
		public static LocalizedString ErrorDomainIsNotReservedWithWLCD(string domain)
		{
			return new LocalizedString("ErrorDomainIsNotReservedWithWLCD", "Ex865A4B", false, true, Strings.ResourceManager, new object[]
			{
				domain
			});
		}

		// Token: 0x17002C45 RID: 11333
		// (get) Token: 0x06008CA1 RID: 36001 RVA: 0x002456A3 File Offset: 0x002438A3
		public static LocalizedString ErrorDisableJournalArchiveMailuserNotSoftDeleted
		{
			get
			{
				return new LocalizedString("ErrorDisableJournalArchiveMailuserNotSoftDeleted", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008CA2 RID: 36002 RVA: 0x002456C4 File Offset: 0x002438C4
		public static LocalizedString SiteMailboxDiagnosticsEmailSubject(string sm)
		{
			return new LocalizedString("SiteMailboxDiagnosticsEmailSubject", "", false, false, Strings.ResourceManager, new object[]
			{
				sm
			});
		}

		// Token: 0x06008CA3 RID: 36003 RVA: 0x002456F4 File Offset: 0x002438F4
		public static LocalizedString IisTasksValidationStringLengthOutOfRangeException(string propertyName, int minLength, int maxLength)
		{
			return new LocalizedString("IisTasksValidationStringLengthOutOfRangeException", "ExC79F19", false, true, Strings.ResourceManager, new object[]
			{
				propertyName,
				minLength,
				maxLength
			});
		}

		// Token: 0x06008CA4 RID: 36004 RVA: 0x00245738 File Offset: 0x00243938
		public static LocalizedString ConfirmationMessageRemoveDefaultActiveSyncMailboxPolicy(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveDefaultActiveSyncMailboxPolicy", "", false, false, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x17002C46 RID: 11334
		// (get) Token: 0x06008CA5 RID: 36005 RVA: 0x00245767 File Offset: 0x00243967
		public static LocalizedString MigrationCSVNotAllowedForRunningState
		{
			get
			{
				return new LocalizedString("MigrationCSVNotAllowedForRunningState", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008CA6 RID: 36006 RVA: 0x00245788 File Offset: 0x00243988
		public static LocalizedString ErrorMoveMailboxFindDomain(string domainController)
		{
			return new LocalizedString("ErrorMoveMailboxFindDomain", "ExC7B509", false, true, Strings.ResourceManager, new object[]
			{
				domainController
			});
		}

		// Token: 0x06008CA7 RID: 36007 RVA: 0x002457B8 File Offset: 0x002439B8
		public static LocalizedString ConfirmationMessageSetEmailAddressPolicy(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetEmailAddressPolicy", "Ex06D85A", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x06008CA8 RID: 36008 RVA: 0x002457E8 File Offset: 0x002439E8
		public static LocalizedString ReplicationCheckHighPriorityFailedException(string checkTitle, string errorMessage)
		{
			return new LocalizedString("ReplicationCheckHighPriorityFailedException", "", false, false, Strings.ResourceManager, new object[]
			{
				checkTitle,
				errorMessage
			});
		}

		// Token: 0x06008CA9 RID: 36009 RVA: 0x0024581C File Offset: 0x00243A1C
		public static LocalizedString CouldNotFindServerDirectoryEntryException(string server)
		{
			return new LocalizedString("CouldNotFindServerDirectoryEntryException", "Ex02887B", false, true, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		// Token: 0x06008CAA RID: 36010 RVA: 0x0024584C File Offset: 0x00243A4C
		public static LocalizedString ErrorManagedByInCoManagedByList(string groupManager)
		{
			return new LocalizedString("ErrorManagedByInCoManagedByList", "Ex6400D9", false, true, Strings.ResourceManager, new object[]
			{
				groupManager
			});
		}

		// Token: 0x06008CAB RID: 36011 RVA: 0x0024587C File Offset: 0x00243A7C
		public static LocalizedString VerboseConnectionMapiRpcInterface(string server)
		{
			return new LocalizedString("VerboseConnectionMapiRpcInterface", "", false, false, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		// Token: 0x17002C47 RID: 11335
		// (get) Token: 0x06008CAC RID: 36012 RVA: 0x002458AB File Offset: 0x00243AAB
		public static LocalizedString AboutToAddForeginOrgUSGToLocalAdminGroup
		{
			get
			{
				return new LocalizedString("AboutToAddForeginOrgUSGToLocalAdminGroup", "Ex59CFDA", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008CAD RID: 36013 RVA: 0x002458CC File Offset: 0x00243ACC
		public static LocalizedString CouldNotFindElementWithTwoAttributes(string elementName, string attribute1, string attribute1Value, string attribute2, string attribute2Value)
		{
			return new LocalizedString("CouldNotFindElementWithTwoAttributes", "ExB1B8B7", false, true, Strings.ResourceManager, new object[]
			{
				elementName,
				attribute1,
				attribute1Value,
				attribute2,
				attribute2Value
			});
		}

		// Token: 0x06008CAE RID: 36014 RVA: 0x0024590C File Offset: 0x00243B0C
		public static LocalizedString ConfirmationMessageNewAddressrewriteentry(string Name, string InternalAddress, string ExternalAddress)
		{
			return new LocalizedString("ConfirmationMessageNewAddressrewriteentry", "Ex44051D", false, true, Strings.ResourceManager, new object[]
			{
				Name,
				InternalAddress,
				ExternalAddress
			});
		}

		// Token: 0x06008CAF RID: 36015 RVA: 0x00245944 File Offset: 0x00243B44
		public static LocalizedString AddDatabaseCopyAllCopiesMustBeInSameDagException(string databaseName, string server1, string dag1, string server2, string dag2)
		{
			return new LocalizedString("AddDatabaseCopyAllCopiesMustBeInSameDagException", "", false, false, Strings.ResourceManager, new object[]
			{
				databaseName,
				server1,
				dag1,
				server2,
				dag2
			});
		}

		// Token: 0x17002C48 RID: 11336
		// (get) Token: 0x06008CB0 RID: 36016 RVA: 0x00245984 File Offset: 0x00243B84
		public static LocalizedString SetupComponentPrepareSharedConfig
		{
			get
			{
				return new LocalizedString("SetupComponentPrepareSharedConfig", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008CB1 RID: 36017 RVA: 0x002459A4 File Offset: 0x00243BA4
		public static LocalizedString ConfirmationMessageNewDataClassification(string name)
		{
			return new LocalizedString("ConfirmationMessageNewDataClassification", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x06008CB2 RID: 36018 RVA: 0x002459D4 File Offset: 0x00243BD4
		public static LocalizedString ContinueUpgradeObjectVersion(string name)
		{
			return new LocalizedString("ContinueUpgradeObjectVersion", "Ex95E603", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x17002C49 RID: 11337
		// (get) Token: 0x06008CB3 RID: 36019 RVA: 0x00245A03 File Offset: 0x00243C03
		public static LocalizedString MtrtGenerateIncidentReport
		{
			get
			{
				return new LocalizedString("MtrtGenerateIncidentReport", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008CB4 RID: 36020 RVA: 0x00245A24 File Offset: 0x00243C24
		public static LocalizedString ConfirmationMessageMoveOfflineAddressBook(string Identity, string Server)
		{
			return new LocalizedString("ConfirmationMessageMoveOfflineAddressBook", "Ex9EE4E3", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				Server
			});
		}

		// Token: 0x17002C4A RID: 11338
		// (get) Token: 0x06008CB5 RID: 36021 RVA: 0x00245A57 File Offset: 0x00243C57
		public static LocalizedString SetRemoteAccountSyncCache
		{
			get
			{
				return new LocalizedString("SetRemoteAccountSyncCache", "ExB20EC0", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002C4B RID: 11339
		// (get) Token: 0x06008CB6 RID: 36022 RVA: 0x00245A75 File Offset: 0x00243C75
		public static LocalizedString FileNotFound
		{
			get
			{
				return new LocalizedString("FileNotFound", "ExAA9DB2", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002C4C RID: 11340
		// (get) Token: 0x06008CB7 RID: 36023 RVA: 0x00245A93 File Offset: 0x00243C93
		public static LocalizedString CouldNotFindMailboxDatabaseById
		{
			get
			{
				return new LocalizedString("CouldNotFindMailboxDatabaseById", "Ex782F54", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008CB8 RID: 36024 RVA: 0x00245AB4 File Offset: 0x00243CB4
		public static LocalizedString ClassificationRuleCollectionIncorrectDocumentNamespaceViolation(string incorrectNs, string expectedNs)
		{
			return new LocalizedString("ClassificationRuleCollectionIncorrectDocumentNamespaceViolation", "", false, false, Strings.ResourceManager, new object[]
			{
				incorrectNs,
				expectedNs
			});
		}

		// Token: 0x06008CB9 RID: 36025 RVA: 0x00245AE8 File Offset: 0x00243CE8
		public static LocalizedString ErrorDisableMailboxIsJournalReportNdrTo(string mbxId)
		{
			return new LocalizedString("ErrorDisableMailboxIsJournalReportNdrTo", "", false, false, Strings.ResourceManager, new object[]
			{
				mbxId
			});
		}

		// Token: 0x06008CBA RID: 36026 RVA: 0x00245B18 File Offset: 0x00243D18
		public static LocalizedString ReplServiceNotRunningOnNodeException(string nodeName)
		{
			return new LocalizedString("ReplServiceNotRunningOnNodeException", "", false, false, Strings.ResourceManager, new object[]
			{
				nodeName
			});
		}

		// Token: 0x06008CBB RID: 36027 RVA: 0x00245B48 File Offset: 0x00243D48
		public static LocalizedString MissingPilotTargetOffer(string file, string targetOffer)
		{
			return new LocalizedString("MissingPilotTargetOffer", "", false, false, Strings.ResourceManager, new object[]
			{
				file,
				targetOffer
			});
		}

		// Token: 0x17002C4D RID: 11341
		// (get) Token: 0x06008CBC RID: 36028 RVA: 0x00245B7B File Offset: 0x00243D7B
		public static LocalizedString MobileDeviceLogEMailFailure
		{
			get
			{
				return new LocalizedString("MobileDeviceLogEMailFailure", "ExD653D9", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008CBD RID: 36029 RVA: 0x00245B9C File Offset: 0x00243D9C
		public static LocalizedString ErrorInvalidParameterValue(string parameterName, string parameterValue)
		{
			return new LocalizedString("ErrorInvalidParameterValue", "Ex653D7F", false, true, Strings.ResourceManager, new object[]
			{
				parameterName,
				parameterValue
			});
		}

		// Token: 0x17002C4E RID: 11342
		// (get) Token: 0x06008CBE RID: 36030 RVA: 0x00245BCF File Offset: 0x00243DCF
		public static LocalizedString SetupProgressGenericComponent
		{
			get
			{
				return new LocalizedString("SetupProgressGenericComponent", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008CBF RID: 36031 RVA: 0x00245BF0 File Offset: 0x00243DF0
		public static LocalizedString ProtocolConfrimationMessage(string protocol)
		{
			return new LocalizedString("ProtocolConfrimationMessage", "Ex689A84", false, true, Strings.ResourceManager, new object[]
			{
				protocol
			});
		}

		// Token: 0x06008CC0 RID: 36032 RVA: 0x00245C20 File Offset: 0x00243E20
		public static LocalizedString InfoSetAces(string dn)
		{
			return new LocalizedString("InfoSetAces", "ExDF1562", false, true, Strings.ResourceManager, new object[]
			{
				dn
			});
		}

		// Token: 0x17002C4F RID: 11343
		// (get) Token: 0x06008CC1 RID: 36033 RVA: 0x00245C4F File Offset: 0x00243E4F
		public static LocalizedString ErrorAuthentication
		{
			get
			{
				return new LocalizedString("ErrorAuthentication", "Ex86789E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008CC2 RID: 36034 RVA: 0x00245C70 File Offset: 0x00243E70
		public static LocalizedString NoBindings(string fqdn)
		{
			return new LocalizedString("NoBindings", "Ex039EF7", false, true, Strings.ResourceManager, new object[]
			{
				fqdn
			});
		}

		// Token: 0x06008CC3 RID: 36035 RVA: 0x00245CA0 File Offset: 0x00243EA0
		public static LocalizedString ConfirmationMessageNewForeignConnectorAddressSpaces(string Name, string AddressSpaces)
		{
			return new LocalizedString("ConfirmationMessageNewForeignConnectorAddressSpaces", "ExA9833E", false, true, Strings.ResourceManager, new object[]
			{
				Name,
				AddressSpaces
			});
		}

		// Token: 0x17002C50 RID: 11344
		// (get) Token: 0x06008CC4 RID: 36036 RVA: 0x00245CD3 File Offset: 0x00243ED3
		public static LocalizedString TenantNotificationVerboseSendingEmail
		{
			get
			{
				return new LocalizedString("TenantNotificationVerboseSendingEmail", "Ex1BA55F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002C51 RID: 11345
		// (get) Token: 0x06008CC5 RID: 36037 RVA: 0x00245CF1 File Offset: 0x00243EF1
		public static LocalizedString ErrorSettingErrorReportingEnabledtoNull
		{
			get
			{
				return new LocalizedString("ErrorSettingErrorReportingEnabledtoNull", "Ex14DDF6", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002C52 RID: 11346
		// (get) Token: 0x06008CC6 RID: 36038 RVA: 0x00245D0F File Offset: 0x00243F0F
		public static LocalizedString InfoOverallWarning
		{
			get
			{
				return new LocalizedString("InfoOverallWarning", "Ex72EAEE", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002C53 RID: 11347
		// (get) Token: 0x06008CC7 RID: 36039 RVA: 0x00245D2D File Offset: 0x00243F2D
		public static LocalizedString ErrorCannotRetrieveLocalForest
		{
			get
			{
				return new LocalizedString("ErrorCannotRetrieveLocalForest", "Ex19B9D6", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002C54 RID: 11348
		// (get) Token: 0x06008CC8 RID: 36040 RVA: 0x00245D4B File Offset: 0x00243F4B
		public static LocalizedString TenantNotificationVerboseNotSendingEmailPastDay
		{
			get
			{
				return new LocalizedString("TenantNotificationVerboseNotSendingEmailPastDay", "Ex1CB423", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008CC9 RID: 36041 RVA: 0x00245D6C File Offset: 0x00243F6C
		public static LocalizedString EventOtherActionFailed(string action, int exitCode, string errors)
		{
			return new LocalizedString("EventOtherActionFailed", "Ex499032", false, true, Strings.ResourceManager, new object[]
			{
				action,
				exitCode,
				errors
			});
		}

		// Token: 0x06008CCA RID: 36042 RVA: 0x00245DA8 File Offset: 0x00243FA8
		public static LocalizedString MobileDeviceLogNotFound(string user)
		{
			return new LocalizedString("MobileDeviceLogNotFound", "Ex12DD21", false, true, Strings.ResourceManager, new object[]
			{
				user
			});
		}

		// Token: 0x17002C55 RID: 11349
		// (get) Token: 0x06008CCB RID: 36043 RVA: 0x00245DD7 File Offset: 0x00243FD7
		public static LocalizedString PhoneNumberUsedByOthers
		{
			get
			{
				return new LocalizedString("PhoneNumberUsedByOthers", "Ex00DA09", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008CCC RID: 36044 RVA: 0x00245DF8 File Offset: 0x00243FF8
		public static LocalizedString CopyConfigurationErrorException(string exception)
		{
			return new LocalizedString("CopyConfigurationErrorException", "", false, false, Strings.ResourceManager, new object[]
			{
				exception
			});
		}

		// Token: 0x06008CCD RID: 36045 RVA: 0x00245E28 File Offset: 0x00244028
		public static LocalizedString GlobalRoutingEntryNotFoundRetry(string phoneNumber, int secondsLeft)
		{
			return new LocalizedString("GlobalRoutingEntryNotFoundRetry", "", false, false, Strings.ResourceManager, new object[]
			{
				phoneNumber,
				secondsLeft
			});
		}

		// Token: 0x17002C56 RID: 11350
		// (get) Token: 0x06008CCE RID: 36046 RVA: 0x00245E60 File Offset: 0x00244060
		public static LocalizedString UnSupportedPermissionGroupsForEdge
		{
			get
			{
				return new LocalizedString("UnSupportedPermissionGroupsForEdge", "ExBD1BD7", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002C57 RID: 11351
		// (get) Token: 0x06008CCF RID: 36047 RVA: 0x00245E7E File Offset: 0x0024407E
		public static LocalizedString ErrorMoveOabToTiFrondEndServer
		{
			get
			{
				return new LocalizedString("ErrorMoveOabToTiFrondEndServer", "Ex742C3D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002C58 RID: 11352
		// (get) Token: 0x06008CD0 RID: 36048 RVA: 0x00245E9C File Offset: 0x0024409C
		public static LocalizedString ErrorJPEGFileTooBig
		{
			get
			{
				return new LocalizedString("ErrorJPEGFileTooBig", "Ex1C5B4F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002C59 RID: 11353
		// (get) Token: 0x06008CD1 RID: 36049 RVA: 0x00245EBA File Offset: 0x002440BA
		public static LocalizedString EdgeParameterNotValidOnHubRole
		{
			get
			{
				return new LocalizedString("EdgeParameterNotValidOnHubRole", "ExA42A4F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008CD2 RID: 36050 RVA: 0x00245ED8 File Offset: 0x002440D8
		public static LocalizedString ConfirmationMessageUpdateTeamMailbox(string Identity)
		{
			return new LocalizedString("ConfirmationMessageUpdateTeamMailbox", "", false, false, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x06008CD3 RID: 36051 RVA: 0x00245F08 File Offset: 0x00244108
		public static LocalizedString ErrorGeneratingMailboxInvalid(string mailboxId)
		{
			return new LocalizedString("ErrorGeneratingMailboxInvalid", "", false, false, Strings.ResourceManager, new object[]
			{
				mailboxId
			});
		}

		// Token: 0x06008CD4 RID: 36052 RVA: 0x00245F38 File Offset: 0x00244138
		public static LocalizedString ErrorResolveFqdnForDomainController(string dc, string errormsg)
		{
			return new LocalizedString("ErrorResolveFqdnForDomainController", "Ex114F5A", false, true, Strings.ResourceManager, new object[]
			{
				dc,
				errormsg
			});
		}

		// Token: 0x06008CD5 RID: 36053 RVA: 0x00245F6C File Offset: 0x0024416C
		public static LocalizedString RemovedDuplicateRecipients(int count, string parameter)
		{
			return new LocalizedString("RemovedDuplicateRecipients", "", false, false, Strings.ResourceManager, new object[]
			{
				count,
				parameter
			});
		}

		// Token: 0x17002C5A RID: 11354
		// (get) Token: 0x06008CD6 RID: 36054 RVA: 0x00245FA4 File Offset: 0x002441A4
		public static LocalizedString SetupProgressAutoGroupPermissions
		{
			get
			{
				return new LocalizedString("SetupProgressAutoGroupPermissions", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002C5B RID: 11355
		// (get) Token: 0x06008CD7 RID: 36055 RVA: 0x00245FC2 File Offset: 0x002441C2
		public static LocalizedString UmLanguagePackInvalidExtraction
		{
			get
			{
				return new LocalizedString("UmLanguagePackInvalidExtraction", "Ex64CE3F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008CD8 RID: 36056 RVA: 0x00245FE0 File Offset: 0x002441E0
		public static LocalizedString ErrorUsedByOab(string nameOab, string database)
		{
			return new LocalizedString("ErrorUsedByOab", "ExFD37CE", false, true, Strings.ResourceManager, new object[]
			{
				nameOab,
				database
			});
		}

		// Token: 0x06008CD9 RID: 36057 RVA: 0x00246014 File Offset: 0x00244214
		public static LocalizedString UmLanguagePackMsiFileNotFound(string file)
		{
			return new LocalizedString("UmLanguagePackMsiFileNotFound", "ExBB9690", false, true, Strings.ResourceManager, new object[]
			{
				file
			});
		}

		// Token: 0x06008CDA RID: 36058 RVA: 0x00246044 File Offset: 0x00244244
		public static LocalizedString ErrorSuspendWhenReadyToCompleteCannotBeUsedOnAutoResumeJobs(string name)
		{
			return new LocalizedString("ErrorSuspendWhenReadyToCompleteCannotBeUsedOnAutoResumeJobs", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x17002C5C RID: 11356
		// (get) Token: 0x06008CDB RID: 36059 RVA: 0x00246073 File Offset: 0x00244273
		public static LocalizedString Info_MessageItemHasBeenDeleted
		{
			get
			{
				return new LocalizedString("Info_MessageItemHasBeenDeleted", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002C5D RID: 11357
		// (get) Token: 0x06008CDC RID: 36060 RVA: 0x00246091 File Offset: 0x00244291
		public static LocalizedString ErrorMailboxSearchStorageTransient
		{
			get
			{
				return new LocalizedString("ErrorMailboxSearchStorageTransient", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008CDD RID: 36061 RVA: 0x002460B0 File Offset: 0x002442B0
		public static LocalizedString ConditionIncompatibleWithNotifySenderAction(string conditionName)
		{
			return new LocalizedString("ConditionIncompatibleWithNotifySenderAction", "", false, false, Strings.ResourceManager, new object[]
			{
				conditionName
			});
		}

		// Token: 0x06008CDE RID: 36062 RVA: 0x002460E0 File Offset: 0x002442E0
		public static LocalizedString ErrorUserCannotChangePasswordAtNextLogon(string user)
		{
			return new LocalizedString("ErrorUserCannotChangePasswordAtNextLogon", "ExDE471A", false, true, Strings.ResourceManager, new object[]
			{
				user
			});
		}

		// Token: 0x17002C5E RID: 11358
		// (get) Token: 0x06008CDF RID: 36063 RVA: 0x0024610F File Offset: 0x0024430F
		public static LocalizedString SetupProgressSyncAccountsEnabled
		{
			get
			{
				return new LocalizedString("SetupProgressSyncAccountsEnabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008CE0 RID: 36064 RVA: 0x00246130 File Offset: 0x00244330
		public static LocalizedString Error_DatabaseLocationDoesNotMatchHighestActivationPreferenceServerLocation(string attributeName, string exchangeServer, string serverLocation, string databaseLocation)
		{
			return new LocalizedString("Error_DatabaseLocationDoesNotMatchHighestActivationPreferenceServerLocation", "", false, false, Strings.ResourceManager, new object[]
			{
				attributeName,
				exchangeServer,
				serverLocation,
				databaseLocation
			});
		}

		// Token: 0x17002C5F RID: 11359
		// (get) Token: 0x06008CE1 RID: 36065 RVA: 0x0024616B File Offset: 0x0024436B
		public static LocalizedString ErrorEwsAllowListAndEwsBlockListSpecified
		{
			get
			{
				return new LocalizedString("ErrorEwsAllowListAndEwsBlockListSpecified", "Ex93014B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008CE2 RID: 36066 RVA: 0x0024618C File Offset: 0x0024438C
		public static LocalizedString InvalidTlsAuthLevel(string tlsAuthLevel)
		{
			return new LocalizedString("InvalidTlsAuthLevel", "", false, false, Strings.ResourceManager, new object[]
			{
				tlsAuthLevel
			});
		}

		// Token: 0x06008CE3 RID: 36067 RVA: 0x002461BC File Offset: 0x002443BC
		public static LocalizedString ConfirmationMessageRemoveOutlookProvider(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveOutlookProvider", "Ex198D18", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x06008CE4 RID: 36068 RVA: 0x002461EC File Offset: 0x002443EC
		public static LocalizedString VerboseGenerateAliasByRandomString(string displayName, string randomAlias)
		{
			return new LocalizedString("VerboseGenerateAliasByRandomString", "", false, false, Strings.ResourceManager, new object[]
			{
				displayName,
				randomAlias
			});
		}

		// Token: 0x06008CE5 RID: 36069 RVA: 0x00246220 File Offset: 0x00244420
		public static LocalizedString ErrorMemberNameUnavailable(string memberName)
		{
			return new LocalizedString("ErrorMemberNameUnavailable", "Ex3B4070", false, true, Strings.ResourceManager, new object[]
			{
				memberName
			});
		}

		// Token: 0x17002C60 RID: 11360
		// (get) Token: 0x06008CE6 RID: 36070 RVA: 0x0024624F File Offset: 0x0024444F
		public static LocalizedString ReplayServiceDisplayName
		{
			get
			{
				return new LocalizedString("ReplayServiceDisplayName", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008CE7 RID: 36071 RVA: 0x00246270 File Offset: 0x00244470
		public static LocalizedString ConfirmationMessageTestIPAllowListProvider(string Identity, string IPAddress)
		{
			return new LocalizedString("ConfirmationMessageTestIPAllowListProvider", "Ex309C8A", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				IPAddress
			});
		}

		// Token: 0x06008CE8 RID: 36072 RVA: 0x002462A4 File Offset: 0x002444A4
		public static LocalizedString VerboseDeletingChildVDir(string name, string parent)
		{
			return new LocalizedString("VerboseDeletingChildVDir", "Ex4E6A1D", false, true, Strings.ResourceManager, new object[]
			{
				name,
				parent
			});
		}

		// Token: 0x17002C61 RID: 11361
		// (get) Token: 0x06008CE9 RID: 36073 RVA: 0x002462D7 File Offset: 0x002444D7
		public static LocalizedString InterceptorErrorActionInvalid
		{
			get
			{
				return new LocalizedString("InterceptorErrorActionInvalid", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008CEA RID: 36074 RVA: 0x002462F8 File Offset: 0x002444F8
		public static LocalizedString ErrorInvalidObjectMissingCriticalProperty(string type, string identity, string property)
		{
			return new LocalizedString("ErrorInvalidObjectMissingCriticalProperty", "Ex016D9C", false, true, Strings.ResourceManager, new object[]
			{
				type,
				identity,
				property
			});
		}

		// Token: 0x06008CEB RID: 36075 RVA: 0x00246330 File Offset: 0x00244530
		public static LocalizedString ConfirmationMessageAddContentFilterPhrase(string Phrase, string Influence)
		{
			return new LocalizedString("ConfirmationMessageAddContentFilterPhrase", "Ex9C0659", false, true, Strings.ResourceManager, new object[]
			{
				Phrase,
				Influence
			});
		}

		// Token: 0x06008CEC RID: 36076 RVA: 0x00246364 File Offset: 0x00244564
		public static LocalizedString ErrorRecoveryDatabase(string databaseName)
		{
			return new LocalizedString("ErrorRecoveryDatabase", "Ex9BDA67", false, true, Strings.ResourceManager, new object[]
			{
				databaseName
			});
		}

		// Token: 0x06008CED RID: 36077 RVA: 0x00246394 File Offset: 0x00244594
		public static LocalizedString ErrorCannotRetargetPrimaryForArchiveOnlyMoves(string identity)
		{
			return new LocalizedString("ErrorCannotRetargetPrimaryForArchiveOnlyMoves", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x06008CEE RID: 36078 RVA: 0x002463C4 File Offset: 0x002445C4
		public static LocalizedString InvalidDataException(string error)
		{
			return new LocalizedString("InvalidDataException", "", false, false, Strings.ResourceManager, new object[]
			{
				error
			});
		}

		// Token: 0x06008CEF RID: 36079 RVA: 0x002463F4 File Offset: 0x002445F4
		public static LocalizedString ConfirmationMessageRemoveTenantRelocationRequest(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveTenantRelocationRequest", "", false, false, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x17002C62 RID: 11362
		// (get) Token: 0x06008CF0 RID: 36080 RVA: 0x00246423 File Offset: 0x00244623
		public static LocalizedString ErrorMetadataMustBeAbsoluteUrl
		{
			get
			{
				return new LocalizedString("ErrorMetadataMustBeAbsoluteUrl", "ExBC93FE", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008CF1 RID: 36081 RVA: 0x00246444 File Offset: 0x00244644
		public static LocalizedString ErrorInvalidEapNewPriority(string priority)
		{
			return new LocalizedString("ErrorInvalidEapNewPriority", "ExE375F7", false, true, Strings.ResourceManager, new object[]
			{
				priority
			});
		}

		// Token: 0x06008CF2 RID: 36082 RVA: 0x00246474 File Offset: 0x00244674
		public static LocalizedString TenantNotificationDebugFormatMessageFailedSystemLang(int error)
		{
			return new LocalizedString("TenantNotificationDebugFormatMessageFailedSystemLang", "Ex597276", false, true, Strings.ResourceManager, new object[]
			{
				error
			});
		}

		// Token: 0x17002C63 RID: 11363
		// (get) Token: 0x06008CF3 RID: 36083 RVA: 0x002464A8 File Offset: 0x002446A8
		public static LocalizedString ConnectorIncorrectUsageConnectorStillReferenced
		{
			get
			{
				return new LocalizedString("ConnectorIncorrectUsageConnectorStillReferenced", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002C64 RID: 11364
		// (get) Token: 0x06008CF4 RID: 36084 RVA: 0x002464C6 File Offset: 0x002446C6
		public static LocalizedString ResubmitRequestStateInvalid
		{
			get
			{
				return new LocalizedString("ResubmitRequestStateInvalid", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002C65 RID: 11365
		// (get) Token: 0x06008CF5 RID: 36085 RVA: 0x002464E4 File Offset: 0x002446E4
		public static LocalizedString CasHealthEasSyncDownTestItem
		{
			get
			{
				return new LocalizedString("CasHealthEasSyncDownTestItem", "Ex003174", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008CF6 RID: 36086 RVA: 0x00246504 File Offset: 0x00244704
		public static LocalizedString UnparseableParameter(string parameterName)
		{
			return new LocalizedString("UnparseableParameter", "ExFBB7C2", false, true, Strings.ResourceManager, new object[]
			{
				parameterName
			});
		}

		// Token: 0x17002C66 RID: 11366
		// (get) Token: 0x06008CF7 RID: 36087 RVA: 0x00246533 File Offset: 0x00244733
		public static LocalizedString CasHealthOwaUrlAndCredentialsArgumentError
		{
			get
			{
				return new LocalizedString("CasHealthOwaUrlAndCredentialsArgumentError", "Ex98E4F2", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002C67 RID: 11367
		// (get) Token: 0x06008CF8 RID: 36088 RVA: 0x00246551 File Offset: 0x00244751
		public static LocalizedString ExportFileNameMissing
		{
			get
			{
				return new LocalizedString("ExportFileNameMissing", "ExFCB1C0", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002C68 RID: 11368
		// (get) Token: 0x06008CF9 RID: 36089 RVA: 0x0024656F File Offset: 0x0024476F
		public static LocalizedString DlpPolicyStateStateInvalid
		{
			get
			{
				return new LocalizedString("DlpPolicyStateStateInvalid", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002C69 RID: 11369
		// (get) Token: 0x06008CFA RID: 36090 RVA: 0x0024658D File Offset: 0x0024478D
		public static LocalizedString SetServiceInstanceMapResultCodeUnknownError
		{
			get
			{
				return new LocalizedString("SetServiceInstanceMapResultCodeUnknownError", "Ex8E4AB8", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002C6A RID: 11370
		// (get) Token: 0x06008CFB RID: 36091 RVA: 0x002465AB File Offset: 0x002447AB
		public static LocalizedString SetupProgressUpgradeLegacyGlobalObjects
		{
			get
			{
				return new LocalizedString("SetupProgressUpgradeLegacyGlobalObjects", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002C6B RID: 11371
		// (get) Token: 0x06008CFC RID: 36092 RVA: 0x002465C9 File Offset: 0x002447C9
		public static LocalizedString RolePublishingAuthor
		{
			get
			{
				return new LocalizedString("RolePublishingAuthor", "ExF5CF43", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002C6C RID: 11372
		// (get) Token: 0x06008CFD RID: 36093 RVA: 0x002465E7 File Offset: 0x002447E7
		public static LocalizedString ConfirmationMessageRemoveMapiVirtualDirectory
		{
			get
			{
				return new LocalizedString("ConfirmationMessageRemoveMapiVirtualDirectory", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008CFE RID: 36094 RVA: 0x00246608 File Offset: 0x00244808
		public static LocalizedString ConfirmationMessageRemoveDatabaseAvailabilityGroupConfiguration(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveDatabaseAvailabilityGroupConfiguration", "", false, false, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x06008CFF RID: 36095 RVA: 0x00246638 File Offset: 0x00244838
		public static LocalizedString CasHealthAutodiscoveryServerNotFound(string smtpAddress, string additionalInformation)
		{
			return new LocalizedString("CasHealthAutodiscoveryServerNotFound", "Ex76285B", false, true, Strings.ResourceManager, new object[]
			{
				smtpAddress,
				additionalInformation
			});
		}

		// Token: 0x06008D00 RID: 36096 RVA: 0x0024666C File Offset: 0x0024486C
		public static LocalizedString ErrorReadMatchingRecipients(string id, string ldapFilter, string error)
		{
			return new LocalizedString("ErrorReadMatchingRecipients", "ExD3D054", false, true, Strings.ResourceManager, new object[]
			{
				id,
				ldapFilter,
				error
			});
		}

		// Token: 0x06008D01 RID: 36097 RVA: 0x002466A4 File Offset: 0x002448A4
		public static LocalizedString UMCallAnsweringRuleTransferToVoiceMailWithoutContext(int key, string galContact)
		{
			return new LocalizedString("UMCallAnsweringRuleTransferToVoiceMailWithoutContext", "", false, false, Strings.ResourceManager, new object[]
			{
				key,
				galContact
			});
		}

		// Token: 0x06008D02 RID: 36098 RVA: 0x002466DC File Offset: 0x002448DC
		public static LocalizedString ErrorFederationTrustNotFound(string trust)
		{
			return new LocalizedString("ErrorFederationTrustNotFound", "Ex8718C6", false, true, Strings.ResourceManager, new object[]
			{
				trust
			});
		}

		// Token: 0x17002C6D RID: 11373
		// (get) Token: 0x06008D03 RID: 36099 RVA: 0x0024670B File Offset: 0x0024490B
		public static LocalizedString SetupProgressAddSeverToDag
		{
			get
			{
				return new LocalizedString("SetupProgressAddSeverToDag", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002C6E RID: 11374
		// (get) Token: 0x06008D04 RID: 36100 RVA: 0x00246729 File Offset: 0x00244929
		public static LocalizedString SetupProgressDisableWMIInbound
		{
			get
			{
				return new LocalizedString("SetupProgressDisableWMIInbound", "ExB39600", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002C6F RID: 11375
		// (get) Token: 0x06008D05 RID: 36101 RVA: 0x00246747 File Offset: 0x00244947
		public static LocalizedString SetupProgressCreatingEdgeContainers
		{
			get
			{
				return new LocalizedString("SetupProgressCreatingEdgeContainers", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002C70 RID: 11376
		// (get) Token: 0x06008D06 RID: 36102 RVA: 0x00246765 File Offset: 0x00244965
		public static LocalizedString InterceptorConfirmDelayAction
		{
			get
			{
				return new LocalizedString("InterceptorConfirmDelayAction", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002C71 RID: 11377
		// (get) Token: 0x06008D07 RID: 36103 RVA: 0x00246783 File Offset: 0x00244983
		public static LocalizedString RuleNameAlreadyExist
		{
			get
			{
				return new LocalizedString("RuleNameAlreadyExist", "Ex74F5F8", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008D08 RID: 36104 RVA: 0x002467A4 File Offset: 0x002449A4
		public static LocalizedString ErrorDisallowMergeRequestForPublicFolderMailbox(string identity)
		{
			return new LocalizedString("ErrorDisallowMergeRequestForPublicFolderMailbox", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x17002C72 RID: 11378
		// (get) Token: 0x06008D09 RID: 36105 RVA: 0x002467D3 File Offset: 0x002449D3
		public static LocalizedString UsageTypeInternet
		{
			get
			{
				return new LocalizedString("UsageTypeInternet", "ExFEF66D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002C73 RID: 11379
		// (get) Token: 0x06008D0A RID: 36106 RVA: 0x002467F1 File Offset: 0x002449F1
		public static LocalizedString ADAttributeZipCode
		{
			get
			{
				return new LocalizedString("ADAttributeZipCode", "ExA234B3", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002C74 RID: 11380
		// (get) Token: 0x06008D0B RID: 36107 RVA: 0x0024680F File Offset: 0x00244A0F
		public static LocalizedString CertificateFound
		{
			get
			{
				return new LocalizedString("CertificateFound", "Ex4C872A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008D0C RID: 36108 RVA: 0x00246830 File Offset: 0x00244A30
		public static LocalizedString ConfirmationMessageStartMailboxSearch(string name)
		{
			return new LocalizedString("ConfirmationMessageStartMailboxSearch", "Ex222435", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x17002C75 RID: 11381
		// (get) Token: 0x06008D0D RID: 36109 RVA: 0x0024685F File Offset: 0x00244A5F
		public static LocalizedString MoveMailboxSourceCleanupTypeDeleteSourceNTAccount
		{
			get
			{
				return new LocalizedString("MoveMailboxSourceCleanupTypeDeleteSourceNTAccount", "Ex345CD0", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008D0E RID: 36110 RVA: 0x00246880 File Offset: 0x00244A80
		public static LocalizedString ConfirmationMessageDisableInboxRule(string Identity, string mailbox)
		{
			return new LocalizedString("ConfirmationMessageDisableInboxRule", "ExEEC687", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				mailbox
			});
		}

		// Token: 0x17002C76 RID: 11382
		// (get) Token: 0x06008D0F RID: 36111 RVA: 0x002468B3 File Offset: 0x00244AB3
		public static LocalizedString ErrorSiteMailboxCannotLoadAddressTemplate
		{
			get
			{
				return new LocalizedString("ErrorSiteMailboxCannotLoadAddressTemplate", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008D10 RID: 36112 RVA: 0x002468D4 File Offset: 0x00244AD4
		public static LocalizedString LanguagePackPerfCounterMergeStatus(string fileName)
		{
			return new LocalizedString("LanguagePackPerfCounterMergeStatus", "Ex80A296", false, true, Strings.ResourceManager, new object[]
			{
				fileName
			});
		}

		// Token: 0x17002C77 RID: 11383
		// (get) Token: 0x06008D11 RID: 36113 RVA: 0x00246903 File Offset: 0x00244B03
		public static LocalizedString InfoDatacenterMode
		{
			get
			{
				return new LocalizedString("InfoDatacenterMode", "Ex8A3680", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002C78 RID: 11384
		// (get) Token: 0x06008D12 RID: 36114 RVA: 0x00246921 File Offset: 0x00244B21
		public static LocalizedString ErrorCouldNotStartFullSyncForFirstOrg
		{
			get
			{
				return new LocalizedString("ErrorCouldNotStartFullSyncForFirstOrg", "Ex877D33", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002C79 RID: 11385
		// (get) Token: 0x06008D13 RID: 36115 RVA: 0x0024693F File Offset: 0x00244B3F
		public static LocalizedString ErrorPatternCannotEndWithWildcardMultiMatch
		{
			get
			{
				return new LocalizedString("ErrorPatternCannotEndWithWildcardMultiMatch", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008D14 RID: 36116 RVA: 0x00246960 File Offset: 0x00244B60
		public static LocalizedString ImportCertificateFileInvalid(string server, string message)
		{
			return new LocalizedString("ImportCertificateFileInvalid", "", false, false, Strings.ResourceManager, new object[]
			{
				server,
				message
			});
		}

		// Token: 0x17002C7A RID: 11386
		// (get) Token: 0x06008D15 RID: 36117 RVA: 0x00246993 File Offset: 0x00244B93
		public static LocalizedString FormsAuthenticationDeleteMarkErrorPathNotFound
		{
			get
			{
				return new LocalizedString("FormsAuthenticationDeleteMarkErrorPathNotFound", "Ex001BCF", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008D16 RID: 36118 RVA: 0x002469B4 File Offset: 0x00244BB4
		public static LocalizedString PublicFolderDatabaseDoesNotBelongToTenant(string pfId, string tenantId)
		{
			return new LocalizedString("PublicFolderDatabaseDoesNotBelongToTenant", "Ex9468C9", false, true, Strings.ResourceManager, new object[]
			{
				pfId,
				tenantId
			});
		}

		// Token: 0x17002C7B RID: 11387
		// (get) Token: 0x06008D17 RID: 36119 RVA: 0x002469E7 File Offset: 0x00244BE7
		public static LocalizedString ErrorFederatedIdentityandPasswordTogether
		{
			get
			{
				return new LocalizedString("ErrorFederatedIdentityandPasswordTogether", "Ex0629C4", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002C7C RID: 11388
		// (get) Token: 0x06008D18 RID: 36120 RVA: 0x00246A05 File Offset: 0x00244C05
		public static LocalizedString VerboseFixingRecipientsOnE12AdminGroup
		{
			get
			{
				return new LocalizedString("VerboseFixingRecipientsOnE12AdminGroup", "ExCBCC5A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002C7D RID: 11389
		// (get) Token: 0x06008D19 RID: 36121 RVA: 0x00246A23 File Offset: 0x00244C23
		public static LocalizedString IncomingServerTooLong
		{
			get
			{
				return new LocalizedString("IncomingServerTooLong", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002C7E RID: 11390
		// (get) Token: 0x06008D1A RID: 36122 RVA: 0x00246A41 File Offset: 0x00244C41
		public static LocalizedString ErrorPublicFolderReferralIncludeSelf
		{
			get
			{
				return new LocalizedString("ErrorPublicFolderReferralIncludeSelf", "Ex9CB5E0", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002C7F RID: 11391
		// (get) Token: 0x06008D1B RID: 36123 RVA: 0x00246A5F File Offset: 0x00244C5F
		public static LocalizedString ErrorEwsEnforceAllowListAndEwsBlockListSpecified
		{
			get
			{
				return new LocalizedString("ErrorEwsEnforceAllowListAndEwsBlockListSpecified", "Ex5F92DC", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002C80 RID: 11392
		// (get) Token: 0x06008D1C RID: 36124 RVA: 0x00246A7D File Offset: 0x00244C7D
		public static LocalizedString Error_EndDateCheck
		{
			get
			{
				return new LocalizedString("Error_EndDateCheck", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008D1D RID: 36125 RVA: 0x00246A9C File Offset: 0x00244C9C
		public static LocalizedString VerboseDeleteSystemAttendantObject(string idSA)
		{
			return new LocalizedString("VerboseDeleteSystemAttendantObject", "Ex8DFA05", false, true, Strings.ResourceManager, new object[]
			{
				idSA
			});
		}

		// Token: 0x06008D1E RID: 36126 RVA: 0x00246ACC File Offset: 0x00244CCC
		public static LocalizedString ConfirmationMessageRemoveMonitoringOverride(string propertyName, string identity, string workitemType)
		{
			return new LocalizedString("ConfirmationMessageRemoveMonitoringOverride", "", false, false, Strings.ResourceManager, new object[]
			{
				propertyName,
				identity,
				workitemType
			});
		}

		// Token: 0x06008D1F RID: 36127 RVA: 0x00246B04 File Offset: 0x00244D04
		public static LocalizedString NoOwnProcessService(string serviceName)
		{
			return new LocalizedString("NoOwnProcessService", "Ex4D7CCC", false, true, Strings.ResourceManager, new object[]
			{
				serviceName
			});
		}

		// Token: 0x06008D20 RID: 36128 RVA: 0x00246B34 File Offset: 0x00244D34
		public static LocalizedString ConfirmationMessageSetMailPublicFolder(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetMailPublicFolder", "ExD0486A", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x06008D21 RID: 36129 RVA: 0x00246B64 File Offset: 0x00244D64
		public static LocalizedString ErrorArgumentIsOfWrongType(string expectedType)
		{
			return new LocalizedString("ErrorArgumentIsOfWrongType", "ExC72138", false, true, Strings.ResourceManager, new object[]
			{
				expectedType
			});
		}

		// Token: 0x17002C81 RID: 11393
		// (get) Token: 0x06008D22 RID: 36130 RVA: 0x00246B93 File Offset: 0x00244D93
		public static LocalizedString HybridMailflowNoOrganizationError
		{
			get
			{
				return new LocalizedString("HybridMailflowNoOrganizationError", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008D23 RID: 36131 RVA: 0x00246BB4 File Offset: 0x00244DB4
		public static LocalizedString ErrorFolderIsNotOrganizational(string folderName)
		{
			return new LocalizedString("ErrorFolderIsNotOrganizational", "Ex874726", false, true, Strings.ResourceManager, new object[]
			{
				folderName
			});
		}

		// Token: 0x17002C82 RID: 11394
		// (get) Token: 0x06008D24 RID: 36132 RVA: 0x00246BE3 File Offset: 0x00244DE3
		public static LocalizedString ADAttributeHomePhoneNumber
		{
			get
			{
				return new LocalizedString("ADAttributeHomePhoneNumber", "Ex966752", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002C83 RID: 11395
		// (get) Token: 0x06008D25 RID: 36133 RVA: 0x00246C01 File Offset: 0x00244E01
		public static LocalizedString NoFederationTrust
		{
			get
			{
				return new LocalizedString("NoFederationTrust", "ExECC916", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002C84 RID: 11396
		// (get) Token: 0x06008D26 RID: 36134 RVA: 0x00246C1F File Offset: 0x00244E1F
		public static LocalizedString ErrorSyncMailboxWithMasterAccountSidNull
		{
			get
			{
				return new LocalizedString("ErrorSyncMailboxWithMasterAccountSidNull", "ExC71EC1", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002C85 RID: 11397
		// (get) Token: 0x06008D27 RID: 36135 RVA: 0x00246C3D File Offset: 0x00244E3D
		public static LocalizedString ErrorCannotMovePublicFoldersFromDifferentSourceMailbox
		{
			get
			{
				return new LocalizedString("ErrorCannotMovePublicFoldersFromDifferentSourceMailbox", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008D28 RID: 36136 RVA: 0x00246C5C File Offset: 0x00244E5C
		public static LocalizedString ConfirmationMessageConnectMailboxLinked(string Identity, string LinkedMasterAccount, string LinkedDomainController, string Database)
		{
			return new LocalizedString("ConfirmationMessageConnectMailboxLinked", "Ex05C853", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				LinkedMasterAccount,
				LinkedDomainController,
				Database
			});
		}

		// Token: 0x17002C86 RID: 11398
		// (get) Token: 0x06008D29 RID: 36137 RVA: 0x00246C97 File Offset: 0x00244E97
		public static LocalizedString Word
		{
			get
			{
				return new LocalizedString("Word", "Ex78FDE7", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008D2A RID: 36138 RVA: 0x00246CB8 File Offset: 0x00244EB8
		public static LocalizedString ConfirmationMessageNewMailboxRepairRequestMailbox(string database, string mailbox)
		{
			return new LocalizedString("ConfirmationMessageNewMailboxRepairRequestMailbox", "Ex4A3A7F", false, true, Strings.ResourceManager, new object[]
			{
				database,
				mailbox
			});
		}

		// Token: 0x17002C87 RID: 11399
		// (get) Token: 0x06008D2B RID: 36139 RVA: 0x00246CEB File Offset: 0x00244EEB
		public static LocalizedString CasHealthOwaGetFbaPageNonOKCode
		{
			get
			{
				return new LocalizedString("CasHealthOwaGetFbaPageNonOKCode", "Ex735762", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002C88 RID: 11400
		// (get) Token: 0x06008D2C RID: 36140 RVA: 0x00246D09 File Offset: 0x00244F09
		public static LocalizedString ParameterErrorForInternetUsage
		{
			get
			{
				return new LocalizedString("ParameterErrorForInternetUsage", "Ex5B79FC", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008D2D RID: 36141 RVA: 0x00246D28 File Offset: 0x00244F28
		public static LocalizedString InvalidReportingDateRange(DateTime startDate, DateTime endDate)
		{
			return new LocalizedString("InvalidReportingDateRange", "Ex32B822", false, true, Strings.ResourceManager, new object[]
			{
				startDate,
				endDate
			});
		}

		// Token: 0x17002C89 RID: 11401
		// (get) Token: 0x06008D2E RID: 36142 RVA: 0x00246D65 File Offset: 0x00244F65
		public static LocalizedString LanguagePackCfgDescription
		{
			get
			{
				return new LocalizedString("LanguagePackCfgDescription", "Ex2177B8", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002C8A RID: 11402
		// (get) Token: 0x06008D2F RID: 36143 RVA: 0x00246D83 File Offset: 0x00244F83
		public static LocalizedString UnifiedMessagingPrereqCheck
		{
			get
			{
				return new LocalizedString("UnifiedMessagingPrereqCheck", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008D30 RID: 36144 RVA: 0x00246DA4 File Offset: 0x00244FA4
		public static LocalizedString ParsingTokenIssuerEndPoint(string tokenIssuerEpr)
		{
			return new LocalizedString("ParsingTokenIssuerEndPoint", "ExF31BED", false, true, Strings.ResourceManager, new object[]
			{
				tokenIssuerEpr
			});
		}

		// Token: 0x17002C8B RID: 11403
		// (get) Token: 0x06008D31 RID: 36145 RVA: 0x00246DD3 File Offset: 0x00244FD3
		public static LocalizedString ReservedString2
		{
			get
			{
				return new LocalizedString("ReservedString2", "Ex43F614", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008D32 RID: 36146 RVA: 0x00246DF4 File Offset: 0x00244FF4
		public static LocalizedString DagFswUnableToCreateWitnessShareException(string fswMachine, string share, Exception ex)
		{
			return new LocalizedString("DagFswUnableToCreateWitnessShareException", "", false, false, Strings.ResourceManager, new object[]
			{
				fswMachine,
				share,
				ex
			});
		}

		// Token: 0x17002C8C RID: 11404
		// (get) Token: 0x06008D33 RID: 36147 RVA: 0x00246E2B File Offset: 0x0024502B
		public static LocalizedString ErrorRpcHttpInvalidSwitchCombo
		{
			get
			{
				return new LocalizedString("ErrorRpcHttpInvalidSwitchCombo", "Ex2597DE", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002C8D RID: 11405
		// (get) Token: 0x06008D34 RID: 36148 RVA: 0x00246E49 File Offset: 0x00245049
		public static LocalizedString CasHealthEasScenarioSyncTestItem
		{
			get
			{
				return new LocalizedString("CasHealthEasScenarioSyncTestItem", "ExC9F0C7", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002C8E RID: 11406
		// (get) Token: 0x06008D35 RID: 36149 RVA: 0x00246E67 File Offset: 0x00245067
		public static LocalizedString MessageTypeVoicemail
		{
			get
			{
				return new LocalizedString("MessageTypeVoicemail", "ExBD81B8", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002C8F RID: 11407
		// (get) Token: 0x06008D36 RID: 36150 RVA: 0x00246E85 File Offset: 0x00245085
		public static LocalizedString UninstallMonitoringRoleDescription
		{
			get
			{
				return new LocalizedString("UninstallMonitoringRoleDescription", "Ex3DFC08", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008D37 RID: 36151 RVA: 0x00246EA4 File Offset: 0x002450A4
		public static LocalizedString RunCmdletOnDomain(string domain)
		{
			return new LocalizedString("RunCmdletOnDomain", "", false, false, Strings.ResourceManager, new object[]
			{
				domain
			});
		}

		// Token: 0x17002C90 RID: 11408
		// (get) Token: 0x06008D38 RID: 36152 RVA: 0x00246ED3 File Offset: 0x002450D3
		public static LocalizedString ShouldSpecifyEitherIdentityOrMailbox
		{
			get
			{
				return new LocalizedString("ShouldSpecifyEitherIdentityOrMailbox", "Ex50C9BC", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002C91 RID: 11409
		// (get) Token: 0x06008D39 RID: 36153 RVA: 0x00246EF1 File Offset: 0x002450F1
		public static LocalizedString InvalidTemplate
		{
			get
			{
				return new LocalizedString("InvalidTemplate", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008D3A RID: 36154 RVA: 0x00246F10 File Offset: 0x00245110
		public static LocalizedString CantAddDeviceFilterRuleSinceApplyForAllDevicesSetToTrue(string name)
		{
			return new LocalizedString("CantAddDeviceFilterRuleSinceApplyForAllDevicesSetToTrue", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x06008D3B RID: 36155 RVA: 0x00246F40 File Offset: 0x00245140
		public static LocalizedString DlpPolicyMissingRequiredParameter(string cmdlet, string parameterName)
		{
			return new LocalizedString("DlpPolicyMissingRequiredParameter", "", false, false, Strings.ResourceManager, new object[]
			{
				cmdlet,
				parameterName
			});
		}

		// Token: 0x06008D3C RID: 36156 RVA: 0x00246F74 File Offset: 0x00245174
		public static LocalizedString ReportMovedMailUserMorphedToMailbox(string domainController)
		{
			return new LocalizedString("ReportMovedMailUserMorphedToMailbox", "Ex1E60FF", false, true, Strings.ResourceManager, new object[]
			{
				domainController
			});
		}

		// Token: 0x06008D3D RID: 36157 RVA: 0x00246FA4 File Offset: 0x002451A4
		public static LocalizedString TowsFoundScpBySite(string scp, string site, string url)
		{
			return new LocalizedString("TowsFoundScpBySite", "", false, false, Strings.ResourceManager, new object[]
			{
				scp,
				site,
				url
			});
		}

		// Token: 0x06008D3E RID: 36158 RVA: 0x00246FDC File Offset: 0x002451DC
		public static LocalizedString ErrorCannotRemoveLastArbitrationMailboxInOrganization(string mbxId)
		{
			return new LocalizedString("ErrorCannotRemoveLastArbitrationMailboxInOrganization", "Ex458D31", false, true, Strings.ResourceManager, new object[]
			{
				mbxId
			});
		}

		// Token: 0x06008D3F RID: 36159 RVA: 0x0024700C File Offset: 0x0024520C
		public static LocalizedString ConfirmationMessageRemoveMessageClassification(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveMessageClassification", "Ex4270D3", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x06008D40 RID: 36160 RVA: 0x0024703C File Offset: 0x0024523C
		public static LocalizedString ErrorUserAlreadyExistsInPermissionEntry(string userId)
		{
			return new LocalizedString("ErrorUserAlreadyExistsInPermissionEntry", "", false, false, Strings.ResourceManager, new object[]
			{
				userId
			});
		}

		// Token: 0x17002C92 RID: 11410
		// (get) Token: 0x06008D41 RID: 36161 RVA: 0x0024706B File Offset: 0x0024526B
		public static LocalizedString ADAttributeCustomAttribute14
		{
			get
			{
				return new LocalizedString("ADAttributeCustomAttribute14", "Ex14A19C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008D42 RID: 36162 RVA: 0x0024708C File Offset: 0x0024528C
		public static LocalizedString WarningInboxRuleInError(string ruleName)
		{
			return new LocalizedString("WarningInboxRuleInError", "ExC5E072", false, true, Strings.ResourceManager, new object[]
			{
				ruleName
			});
		}

		// Token: 0x17002C93 RID: 11411
		// (get) Token: 0x06008D43 RID: 36163 RVA: 0x002470BB File Offset: 0x002452BB
		public static LocalizedString TenantExecutionNotSupported
		{
			get
			{
				return new LocalizedString("TenantExecutionNotSupported", "Ex9040B3", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008D44 RID: 36164 RVA: 0x002470DC File Offset: 0x002452DC
		public static LocalizedString ErrorCertificateNotExportable(string certThumbprint)
		{
			return new LocalizedString("ErrorCertificateNotExportable", "Ex7BAD1D", false, true, Strings.ResourceManager, new object[]
			{
				certThumbprint
			});
		}

		// Token: 0x06008D45 RID: 36165 RVA: 0x0024710C File Offset: 0x0024530C
		public static LocalizedString ValidationOrgCurrentOrgNotMatchException(string validationOrg, string currentOrg)
		{
			return new LocalizedString("ValidationOrgCurrentOrgNotMatchException", "", false, false, Strings.ResourceManager, new object[]
			{
				validationOrg,
				currentOrg
			});
		}

		// Token: 0x06008D46 RID: 36166 RVA: 0x00247140 File Offset: 0x00245340
		public static LocalizedString FormsAuthenticationDeleteMarkErrorUnknownOpenError(int hresult)
		{
			return new LocalizedString("FormsAuthenticationDeleteMarkErrorUnknownOpenError", "ExCC2E38", false, true, Strings.ResourceManager, new object[]
			{
				hresult
			});
		}

		// Token: 0x17002C94 RID: 11412
		// (get) Token: 0x06008D47 RID: 36167 RVA: 0x00247174 File Offset: 0x00245374
		public static LocalizedString SetupComponentStartingGatewayServices
		{
			get
			{
				return new LocalizedString("SetupComponentStartingGatewayServices", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002C95 RID: 11413
		// (get) Token: 0x06008D48 RID: 36168 RVA: 0x00247192 File Offset: 0x00245392
		public static LocalizedString ErrorModifyJournalArchiveAddress
		{
			get
			{
				return new LocalizedString("ErrorModifyJournalArchiveAddress", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002C96 RID: 11414
		// (get) Token: 0x06008D49 RID: 36169 RVA: 0x002471B0 File Offset: 0x002453B0
		public static LocalizedString MapiTransactionResultMdbMoved
		{
			get
			{
				return new LocalizedString("MapiTransactionResultMdbMoved", "Ex1B107D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008D4A RID: 36170 RVA: 0x002471D0 File Offset: 0x002453D0
		public static LocalizedString ErrorActivationPreferenceInvalid(uint activationPref, int max)
		{
			return new LocalizedString("ErrorActivationPreferenceInvalid", "Ex469A9F", false, true, Strings.ResourceManager, new object[]
			{
				activationPref,
				max
			});
		}

		// Token: 0x06008D4B RID: 36171 RVA: 0x00247210 File Offset: 0x00245410
		public static LocalizedString ConfirmationMessageAddDelegate(string Identity, string Group, string Role)
		{
			return new LocalizedString("ConfirmationMessageAddDelegate", "Ex697294", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				Group,
				Role
			});
		}

		// Token: 0x06008D4C RID: 36172 RVA: 0x00247248 File Offset: 0x00245448
		public static LocalizedString ErrorCannotRestoreIntoSelf(string identity)
		{
			return new LocalizedString("ErrorCannotRestoreIntoSelf", "ExFB528F", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x17002C97 RID: 11415
		// (get) Token: 0x06008D4D RID: 36173 RVA: 0x00247277 File Offset: 0x00245477
		public static LocalizedString UninstallMailboxRoleDescription
		{
			get
			{
				return new LocalizedString("UninstallMailboxRoleDescription", "Ex447ED6", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002C98 RID: 11416
		// (get) Token: 0x06008D4E RID: 36174 RVA: 0x00247295 File Offset: 0x00245495
		public static LocalizedString RepairUrgencyProhibited
		{
			get
			{
				return new LocalizedString("RepairUrgencyProhibited", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008D4F RID: 36175 RVA: 0x002472B4 File Offset: 0x002454B4
		public static LocalizedString LogExsetdataInstallingAtom(string atomID)
		{
			return new LocalizedString("LogExsetdataInstallingAtom", "Ex49321A", false, true, Strings.ResourceManager, new object[]
			{
				atomID
			});
		}

		// Token: 0x17002C99 RID: 11417
		// (get) Token: 0x06008D50 RID: 36176 RVA: 0x002472E3 File Offset: 0x002454E3
		public static LocalizedString ErrorCannotRestoreFromPublicToPrivateMailbox
		{
			get
			{
				return new LocalizedString("ErrorCannotRestoreFromPublicToPrivateMailbox", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008D51 RID: 36177 RVA: 0x00247304 File Offset: 0x00245504
		public static LocalizedString ErrorMismatchedMailboxRelease(string mailbox, string database, string serverMailboxRelease, string desiredMailboxRelease)
		{
			return new LocalizedString("ErrorMismatchedMailboxRelease", "", false, false, Strings.ResourceManager, new object[]
			{
				mailbox,
				database,
				serverMailboxRelease,
				desiredMailboxRelease
			});
		}

		// Token: 0x06008D52 RID: 36178 RVA: 0x00247340 File Offset: 0x00245540
		public static LocalizedString SupportedToolsDataInvalidTenantVersionRange(string toolName)
		{
			return new LocalizedString("SupportedToolsDataInvalidTenantVersionRange", "Ex92557E", false, true, Strings.ResourceManager, new object[]
			{
				toolName
			});
		}

		// Token: 0x17002C9A RID: 11418
		// (get) Token: 0x06008D53 RID: 36179 RVA: 0x0024736F File Offset: 0x0024556F
		public static LocalizedString ErrorMoveToDestinationFolderInvalid
		{
			get
			{
				return new LocalizedString("ErrorMoveToDestinationFolderInvalid", "ExCE6CB3", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002C9B RID: 11419
		// (get) Token: 0x06008D54 RID: 36180 RVA: 0x0024738D File Offset: 0x0024558D
		public static LocalizedString InvalidOperationIdentityWithShowDeletion
		{
			get
			{
				return new LocalizedString("InvalidOperationIdentityWithShowDeletion", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008D55 RID: 36181 RVA: 0x002473AC File Offset: 0x002455AC
		public static LocalizedString ConfirmationMessageRemoveMailboxIdentityAndNotLiveId(string Identity, string liveId)
		{
			return new LocalizedString("ConfirmationMessageRemoveMailboxIdentityAndNotLiveId", "Ex11E24C", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				liveId
			});
		}

		// Token: 0x06008D56 RID: 36182 RVA: 0x002473E0 File Offset: 0x002455E0
		public static LocalizedString MailboxNotUmEnabled(string mailbox)
		{
			return new LocalizedString("MailboxNotUmEnabled", "ExCCDBF0", false, true, Strings.ResourceManager, new object[]
			{
				mailbox
			});
		}

		// Token: 0x06008D57 RID: 36183 RVA: 0x00247410 File Offset: 0x00245610
		public static LocalizedString ErrorInvalidServerRole(string idStringValue)
		{
			return new LocalizedString("ErrorInvalidServerRole", "Ex16AE6C", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		// Token: 0x06008D58 RID: 36184 RVA: 0x00247440 File Offset: 0x00245640
		public static LocalizedString QuorumGroupNotOnline(string group, string node, string cluster, string resources, string newline)
		{
			return new LocalizedString("QuorumGroupNotOnline", "Ex7E69BA", false, true, Strings.ResourceManager, new object[]
			{
				group,
				node,
				cluster,
				resources,
				newline
			});
		}

		// Token: 0x17002C9C RID: 11420
		// (get) Token: 0x06008D59 RID: 36185 RVA: 0x00247480 File Offset: 0x00245680
		public static LocalizedString ErrorTenantIsUpgrading
		{
			get
			{
				return new LocalizedString("ErrorTenantIsUpgrading", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008D5A RID: 36186 RVA: 0x002474A0 File Offset: 0x002456A0
		public static LocalizedString EmptyToken(string line, string file, string position)
		{
			return new LocalizedString("EmptyToken", "ExB98700", false, true, Strings.ResourceManager, new object[]
			{
				line,
				file,
				position
			});
		}

		// Token: 0x06008D5B RID: 36187 RVA: 0x002474D8 File Offset: 0x002456D8
		public static LocalizedString ErrorTargetPartitionSctMissing(string oldTenant, string newPartition, string sct)
		{
			return new LocalizedString("ErrorTargetPartitionSctMissing", "", false, false, Strings.ResourceManager, new object[]
			{
				oldTenant,
				newPartition,
				sct
			});
		}

		// Token: 0x17002C9D RID: 11421
		// (get) Token: 0x06008D5C RID: 36188 RVA: 0x0024750F File Offset: 0x0024570F
		public static LocalizedString JournalingParameterErrorGccTenantSettingNotExist
		{
			get
			{
				return new LocalizedString("JournalingParameterErrorGccTenantSettingNotExist", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008D5D RID: 36189 RVA: 0x00247530 File Offset: 0x00245730
		public static LocalizedString ErrorOccuredInFixingObject(string id, string message)
		{
			return new LocalizedString("ErrorOccuredInFixingObject", "Ex97BF07", false, true, Strings.ResourceManager, new object[]
			{
				id,
				message
			});
		}

		// Token: 0x17002C9E RID: 11422
		// (get) Token: 0x06008D5E RID: 36190 RVA: 0x00247563 File Offset: 0x00245763
		public static LocalizedString LiveIdAuthenticationResultFailure
		{
			get
			{
				return new LocalizedString("LiveIdAuthenticationResultFailure", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008D5F RID: 36191 RVA: 0x00247584 File Offset: 0x00245784
		public static LocalizedString EventManifestNotUpdated(string manifestFileName, string msgDllName, string providerName)
		{
			return new LocalizedString("EventManifestNotUpdated", "Ex9AA4E8", false, true, Strings.ResourceManager, new object[]
			{
				manifestFileName,
				msgDllName,
				providerName
			});
		}

		// Token: 0x17002C9F RID: 11423
		// (get) Token: 0x06008D60 RID: 36192 RVA: 0x002475BB File Offset: 0x002457BB
		public static LocalizedString FDS_UM_PerfCountersComponentDescription
		{
			get
			{
				return new LocalizedString("FDS_UM_PerfCountersComponentDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008D61 RID: 36193 RVA: 0x002475DC File Offset: 0x002457DC
		public static LocalizedString CasHealthOwaVdirColon(string vdir)
		{
			return new LocalizedString("CasHealthOwaVdirColon", "Ex838710", false, true, Strings.ResourceManager, new object[]
			{
				vdir
			});
		}

		// Token: 0x06008D62 RID: 36194 RVA: 0x0024760C File Offset: 0x0024580C
		public static LocalizedString MigrationEndpointIdentityAmbiguous(string identity)
		{
			return new LocalizedString("MigrationEndpointIdentityAmbiguous", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x06008D63 RID: 36195 RVA: 0x0024763C File Offset: 0x0024583C
		public static LocalizedString FormsAuthenticationDeleteCloseException(int hresult)
		{
			return new LocalizedString("FormsAuthenticationDeleteCloseException", "Ex5824B7", false, true, Strings.ResourceManager, new object[]
			{
				hresult
			});
		}

		// Token: 0x17002CA0 RID: 11424
		// (get) Token: 0x06008D64 RID: 36196 RVA: 0x00247670 File Offset: 0x00245870
		public static LocalizedString GzipLowDoesNotUseDynamicCompression
		{
			get
			{
				return new LocalizedString("GzipLowDoesNotUseDynamicCompression", "ExD3B951", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008D65 RID: 36197 RVA: 0x00247690 File Offset: 0x00245890
		public static LocalizedString InvalidServiceInstanceMapXmlFormat(string reason)
		{
			return new LocalizedString("InvalidServiceInstanceMapXmlFormat", "Ex2D7C90", false, true, Strings.ResourceManager, new object[]
			{
				reason
			});
		}

		// Token: 0x06008D66 RID: 36198 RVA: 0x002476C0 File Offset: 0x002458C0
		public static LocalizedString ErrorCmdExecutionFailed(string app, string argument, string output, string errors, string exitCode)
		{
			return new LocalizedString("ErrorCmdExecutionFailed", "Ex8B95D7", false, true, Strings.ResourceManager, new object[]
			{
				app,
				argument,
				output,
				errors,
				exitCode
			});
		}

		// Token: 0x06008D67 RID: 36199 RVA: 0x00247700 File Offset: 0x00245900
		public static LocalizedString WarningPushFailed(string thumbprint)
		{
			return new LocalizedString("WarningPushFailed", "Ex22737D", false, true, Strings.ResourceManager, new object[]
			{
				thumbprint
			});
		}

		// Token: 0x06008D68 RID: 36200 RVA: 0x00247730 File Offset: 0x00245930
		public static LocalizedString ExchangeUpgradeBucketInvalidOrganizationVersion(string organizationVersion, string bucketVersionMask)
		{
			return new LocalizedString("ExchangeUpgradeBucketInvalidOrganizationVersion", "", false, false, Strings.ResourceManager, new object[]
			{
				organizationVersion,
				bucketVersionMask
			});
		}

		// Token: 0x06008D69 RID: 36201 RVA: 0x00247764 File Offset: 0x00245964
		public static LocalizedString ConfirmationMessageNewRemoteMailbox(string Name, string UserPrincipalName, string OrganizationalUnit)
		{
			return new LocalizedString("ConfirmationMessageNewRemoteMailbox", "ExBABF50", false, true, Strings.ResourceManager, new object[]
			{
				Name,
				UserPrincipalName,
				OrganizationalUnit
			});
		}

		// Token: 0x17002CA1 RID: 11425
		// (get) Token: 0x06008D6A RID: 36202 RVA: 0x0024779B File Offset: 0x0024599B
		public static LocalizedString ProgressStatusFinished
		{
			get
			{
				return new LocalizedString("ProgressStatusFinished", "Ex4B87D8", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002CA2 RID: 11426
		// (get) Token: 0x06008D6B RID: 36203 RVA: 0x002477B9 File Offset: 0x002459B9
		public static LocalizedString CouldNotFindObjectById
		{
			get
			{
				return new LocalizedString("CouldNotFindObjectById", "Ex46BB0C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008D6C RID: 36204 RVA: 0x002477D8 File Offset: 0x002459D8
		public static LocalizedString TestSearchCurrentMailbox(string displayName)
		{
			return new LocalizedString("TestSearchCurrentMailbox", "Ex1FA164", false, true, Strings.ResourceManager, new object[]
			{
				displayName
			});
		}

		// Token: 0x17002CA3 RID: 11427
		// (get) Token: 0x06008D6D RID: 36205 RVA: 0x00247807 File Offset: 0x00245A07
		public static LocalizedString UMCallAnsweringRuleInvalidValue
		{
			get
			{
				return new LocalizedString("UMCallAnsweringRuleInvalidValue", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008D6E RID: 36206 RVA: 0x00247828 File Offset: 0x00245A28
		public static LocalizedString ConfirmationMessageRemoveOrganizationRelationship(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveOrganizationRelationship", "ExFA87EE", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x06008D6F RID: 36207 RVA: 0x00247858 File Offset: 0x00245A58
		public static LocalizedString TestSearchFindMessage(string MDB, string ID)
		{
			return new LocalizedString("TestSearchFindMessage", "Ex98401B", false, true, Strings.ResourceManager, new object[]
			{
				MDB,
				ID
			});
		}

		// Token: 0x06008D70 RID: 36208 RVA: 0x0024788C File Offset: 0x00245A8C
		public static LocalizedString KeyNoMatch(string name)
		{
			return new LocalizedString("KeyNoMatch", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x06008D71 RID: 36209 RVA: 0x002478BC File Offset: 0x00245ABC
		public static LocalizedString SchemaValidationError(string errorMessage, int rowNumber, string columnTitle)
		{
			return new LocalizedString("SchemaValidationError", "Ex529CBC", false, true, Strings.ResourceManager, new object[]
			{
				errorMessage,
				rowNumber,
				columnTitle
			});
		}

		// Token: 0x06008D72 RID: 36210 RVA: 0x002478F8 File Offset: 0x00245AF8
		public static LocalizedString ServiceDidNotReachStatusDuringWait(string servicename, string status, uint time)
		{
			return new LocalizedString("ServiceDidNotReachStatusDuringWait", "Ex99E00E", false, true, Strings.ResourceManager, new object[]
			{
				servicename,
				status,
				time
			});
		}

		// Token: 0x06008D73 RID: 36211 RVA: 0x00247934 File Offset: 0x00245B34
		public static LocalizedString ErrorRpcHttpNotUnique(string server)
		{
			return new LocalizedString("ErrorRpcHttpNotUnique", "Ex8BFA6F", false, true, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		// Token: 0x06008D74 RID: 36212 RVA: 0x00247964 File Offset: 0x00245B64
		public static LocalizedString InvalidIPRangeFormatId(string ipRange)
		{
			return new LocalizedString("InvalidIPRangeFormatId", "", false, false, Strings.ResourceManager, new object[]
			{
				ipRange
			});
		}

		// Token: 0x17002CA4 RID: 11428
		// (get) Token: 0x06008D75 RID: 36213 RVA: 0x00247993 File Offset: 0x00245B93
		public static LocalizedString StopReplService
		{
			get
			{
				return new LocalizedString("StopReplService", "Ex3FF7F4", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002CA5 RID: 11429
		// (get) Token: 0x06008D76 RID: 36214 RVA: 0x002479B1 File Offset: 0x00245BB1
		public static LocalizedString ErrorNoMatchedUserFound
		{
			get
			{
				return new LocalizedString("ErrorNoMatchedUserFound", "Ex615841", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008D77 RID: 36215 RVA: 0x002479D0 File Offset: 0x00245BD0
		public static LocalizedString ExportCertificateFileInvalid(string message)
		{
			return new LocalizedString("ExportCertificateFileInvalid", "", false, false, Strings.ResourceManager, new object[]
			{
				message
			});
		}

		// Token: 0x06008D78 RID: 36216 RVA: 0x00247A00 File Offset: 0x00245C00
		public static LocalizedString ErrorExchangeUpgradeBucketNotFound(string idStringValue)
		{
			return new LocalizedString("ErrorExchangeUpgradeBucketNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		// Token: 0x17002CA6 RID: 11430
		// (get) Token: 0x06008D79 RID: 36217 RVA: 0x00247A2F File Offset: 0x00245C2F
		public static LocalizedString ErrorVirtualDirectoryNameNull
		{
			get
			{
				return new LocalizedString("ErrorVirtualDirectoryNameNull", "Ex78F19A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008D7A RID: 36218 RVA: 0x00247A50 File Offset: 0x00245C50
		public static LocalizedString MoveAlreadySuspended(string identity)
		{
			return new LocalizedString("MoveAlreadySuspended", "Ex113DC5", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x17002CA7 RID: 11431
		// (get) Token: 0x06008D7B RID: 36219 RVA: 0x00247A7F File Offset: 0x00245C7F
		public static LocalizedString ErrorDefaultHostedContentFilterPolicyCannotBeDeleted
		{
			get
			{
				return new LocalizedString("ErrorDefaultHostedContentFilterPolicyCannotBeDeleted", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008D7C RID: 36220 RVA: 0x00247AA0 File Offset: 0x00245CA0
		public static LocalizedString PrimaryAndArchiveNotOnSameVersionPostMove(string primaryVersion, string archiveVersion)
		{
			return new LocalizedString("PrimaryAndArchiveNotOnSameVersionPostMove", "", false, false, Strings.ResourceManager, new object[]
			{
				primaryVersion,
				archiveVersion
			});
		}

		// Token: 0x06008D7D RID: 36221 RVA: 0x00247AD4 File Offset: 0x00245CD4
		public static LocalizedString ExchangeSettingsNonExistingSettingNotRemoved(string key, string groupname)
		{
			return new LocalizedString("ExchangeSettingsNonExistingSettingNotRemoved", "", false, false, Strings.ResourceManager, new object[]
			{
				key,
				groupname
			});
		}

		// Token: 0x06008D7E RID: 36222 RVA: 0x00247B08 File Offset: 0x00245D08
		public static LocalizedString ConfirmationMessageSwitchRBACPolicy(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSwitchRBACPolicy", "ExB8EE3F", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x17002CA8 RID: 11432
		// (get) Token: 0x06008D7F RID: 36223 RVA: 0x00247B37 File Offset: 0x00245D37
		public static LocalizedString SettingRequest
		{
			get
			{
				return new LocalizedString("SettingRequest", "ExB1A98D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008D80 RID: 36224 RVA: 0x00247B58 File Offset: 0x00245D58
		public static LocalizedString CannotFindSchemaClassException(string objclass, string schemaDN, string server)
		{
			return new LocalizedString("CannotFindSchemaClassException", "Ex9E9C53", false, true, Strings.ResourceManager, new object[]
			{
				objclass,
				schemaDN,
				server
			});
		}

		// Token: 0x17002CA9 RID: 11433
		// (get) Token: 0x06008D81 RID: 36225 RVA: 0x00247B8F File Offset: 0x00245D8F
		public static LocalizedString ErrorReportingEnabledLegalMessage
		{
			get
			{
				return new LocalizedString("ErrorReportingEnabledLegalMessage", "Ex5D62B8", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002CAA RID: 11434
		// (get) Token: 0x06008D82 RID: 36226 RVA: 0x00247BAD File Offset: 0x00245DAD
		public static LocalizedString ClassificationRuleCollectionAlreadyExists
		{
			get
			{
				return new LocalizedString("ClassificationRuleCollectionAlreadyExists", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002CAB RID: 11435
		// (get) Token: 0x06008D83 RID: 36227 RVA: 0x00247BCB File Offset: 0x00245DCB
		public static LocalizedString ExportFileNameShouldNotBeSet
		{
			get
			{
				return new LocalizedString("ExportFileNameShouldNotBeSet", "Ex73C24B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008D84 RID: 36228 RVA: 0x00247BEC File Offset: 0x00245DEC
		public static LocalizedString OabVirtualDirectoryAmbiguous(string alID)
		{
			return new LocalizedString("OabVirtualDirectoryAmbiguous", "Ex1DE11B", false, true, Strings.ResourceManager, new object[]
			{
				alID
			});
		}

		// Token: 0x17002CAC RID: 11436
		// (get) Token: 0x06008D85 RID: 36229 RVA: 0x00247C1B File Offset: 0x00245E1B
		public static LocalizedString ADAttributeState
		{
			get
			{
				return new LocalizedString("ADAttributeState", "Ex4586DB", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002CAD RID: 11437
		// (get) Token: 0x06008D86 RID: 36230 RVA: 0x00247C39 File Offset: 0x00245E39
		public static LocalizedString PhoneNumberAllowedOnlyWithDialplanWithCountryCode
		{
			get
			{
				return new LocalizedString("PhoneNumberAllowedOnlyWithDialplanWithCountryCode", "Ex6630C3", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008D87 RID: 36231 RVA: 0x00247C58 File Offset: 0x00245E58
		public static LocalizedString CasHealthResetCredentialsScenario(string serverName)
		{
			return new LocalizedString("CasHealthResetCredentialsScenario", "Ex954137", false, true, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		// Token: 0x17002CAE RID: 11438
		// (get) Token: 0x06008D88 RID: 36232 RVA: 0x00247C87 File Offset: 0x00245E87
		public static LocalizedString SetupComponentDataStorageConfiguration
		{
			get
			{
				return new LocalizedString("SetupComponentDataStorageConfiguration", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002CAF RID: 11439
		// (get) Token: 0x06008D89 RID: 36233 RVA: 0x00247CA5 File Offset: 0x00245EA5
		public static LocalizedString SetMailboxForwardingAddressConfirmationMessage
		{
			get
			{
				return new LocalizedString("SetMailboxForwardingAddressConfirmationMessage", "Ex03AEB8", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002CB0 RID: 11440
		// (get) Token: 0x06008D8A RID: 36234 RVA: 0x00247CC3 File Offset: 0x00245EC3
		public static LocalizedString SetupProgressPermissionManagementEnabled
		{
			get
			{
				return new LocalizedString("SetupProgressPermissionManagementEnabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008D8B RID: 36235 RVA: 0x00247CE4 File Offset: 0x00245EE4
		public static LocalizedString FailedToResetMdb(string id, string error)
		{
			return new LocalizedString("FailedToResetMdb", "ExE08014", false, true, Strings.ResourceManager, new object[]
			{
				id,
				error
			});
		}

		// Token: 0x06008D8C RID: 36236 RVA: 0x00247D18 File Offset: 0x00245F18
		public static LocalizedString OAuthRequestEndPoint(string s)
		{
			return new LocalizedString("OAuthRequestEndPoint", "", false, false, Strings.ResourceManager, new object[]
			{
				s
			});
		}

		// Token: 0x06008D8D RID: 36237 RVA: 0x00247D48 File Offset: 0x00245F48
		public static LocalizedString HybridMailflowUnexpectedType(string cmdletName)
		{
			return new LocalizedString("HybridMailflowUnexpectedType", "", false, false, Strings.ResourceManager, new object[]
			{
				cmdletName
			});
		}

		// Token: 0x17002CB1 RID: 11441
		// (get) Token: 0x06008D8E RID: 36238 RVA: 0x00247D77 File Offset: 0x00245F77
		public static LocalizedString SetImap4ConfigurationTask
		{
			get
			{
				return new LocalizedString("SetImap4ConfigurationTask", "Ex95921B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008D8F RID: 36239 RVA: 0x00247D98 File Offset: 0x00245F98
		public static LocalizedString DagNetworkSingleDNSNicViolation(string nodeName)
		{
			return new LocalizedString("DagNetworkSingleDNSNicViolation", "", false, false, Strings.ResourceManager, new object[]
			{
				nodeName
			});
		}

		// Token: 0x06008D90 RID: 36240 RVA: 0x00247DC8 File Offset: 0x00245FC8
		public static LocalizedString ConfirmationMessageResumeRequest(string identity)
		{
			return new LocalizedString("ConfirmationMessageResumeRequest", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x06008D91 RID: 36241 RVA: 0x00247DF8 File Offset: 0x00245FF8
		public static LocalizedString ExchVirtualDirectoryTooManyRpcsToIisMetabase(string serverName)
		{
			return new LocalizedString("ExchVirtualDirectoryTooManyRpcsToIisMetabase", "Ex8BCEA6", false, true, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		// Token: 0x06008D92 RID: 36242 RVA: 0x00247E28 File Offset: 0x00246028
		public static LocalizedString AlsEmailBodyExternalAccess(bool? externalAccess)
		{
			return new LocalizedString("AlsEmailBodyExternalAccess", "", false, false, Strings.ResourceManager, new object[]
			{
				externalAccess
			});
		}

		// Token: 0x06008D93 RID: 36243 RVA: 0x00247E5C File Offset: 0x0024605C
		public static LocalizedString MoveMailboxUnexpectedAfterMove(string error)
		{
			return new LocalizedString("MoveMailboxUnexpectedAfterMove", "ExF92374", false, true, Strings.ResourceManager, new object[]
			{
				error
			});
		}

		// Token: 0x06008D94 RID: 36244 RVA: 0x00247E8C File Offset: 0x0024608C
		public static LocalizedString ErrorRemoveAddressListWithAssociatedAddressBookPolicies(string name)
		{
			return new LocalizedString("ErrorRemoveAddressListWithAssociatedAddressBookPolicies", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x17002CB2 RID: 11442
		// (get) Token: 0x06008D95 RID: 36245 RVA: 0x00247EBB File Offset: 0x002460BB
		public static LocalizedString ErrorSourceEndpointRequired
		{
			get
			{
				return new LocalizedString("ErrorSourceEndpointRequired", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008D96 RID: 36246 RVA: 0x00247EDC File Offset: 0x002460DC
		public static LocalizedString NonRoomMailboxAddToRoomListException(string group)
		{
			return new LocalizedString("NonRoomMailboxAddToRoomListException", "Ex205A6E", false, true, Strings.ResourceManager, new object[]
			{
				group
			});
		}

		// Token: 0x06008D97 RID: 36247 RVA: 0x00247F0C File Offset: 0x0024610C
		public static LocalizedString FailedToSetPfdbAsFirstInstance(string id, string error)
		{
			return new LocalizedString("FailedToSetPfdbAsFirstInstance", "Ex7D2F11", false, true, Strings.ResourceManager, new object[]
			{
				id,
				error
			});
		}

		// Token: 0x17002CB3 RID: 11443
		// (get) Token: 0x06008D98 RID: 36248 RVA: 0x00247F3F File Offset: 0x0024613F
		public static LocalizedString LPPrepareInstallationSource
		{
			get
			{
				return new LocalizedString("LPPrepareInstallationSource", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008D99 RID: 36249 RVA: 0x00247F60 File Offset: 0x00246160
		public static LocalizedString ErrorWellKnownHostedMailboxSGNotFound(string name, string org)
		{
			return new LocalizedString("ErrorWellKnownHostedMailboxSGNotFound", "ExD2C6DC", false, true, Strings.ResourceManager, new object[]
			{
				name,
				org
			});
		}

		// Token: 0x06008D9A RID: 36250 RVA: 0x00247F94 File Offset: 0x00246194
		public static LocalizedString InconsistentAFSettingsError(string partition1, string partition2)
		{
			return new LocalizedString("InconsistentAFSettingsError", "", false, false, Strings.ResourceManager, new object[]
			{
				partition1,
				partition2
			});
		}

		// Token: 0x06008D9B RID: 36251 RVA: 0x00247FC8 File Offset: 0x002461C8
		public static LocalizedString ConfirmationMessageNewProvisioningRequest(string timeZone, string fileName, string tenantName)
		{
			return new LocalizedString("ConfirmationMessageNewProvisioningRequest", "Ex772DD7", false, true, Strings.ResourceManager, new object[]
			{
				timeZone,
				fileName,
				tenantName
			});
		}

		// Token: 0x06008D9C RID: 36252 RVA: 0x00248000 File Offset: 0x00246200
		public static LocalizedString ErrorExternalDirectoryObjectIdNotUnique(string id)
		{
			return new LocalizedString("ErrorExternalDirectoryObjectIdNotUnique", "", false, false, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x06008D9D RID: 36253 RVA: 0x00248030 File Offset: 0x00246230
		public static LocalizedString EnableDBCSuspendReplayNoDbComment(string db)
		{
			return new LocalizedString("EnableDBCSuspendReplayNoDbComment", "ExA93BCF", false, true, Strings.ResourceManager, new object[]
			{
				db
			});
		}

		// Token: 0x17002CB4 RID: 11444
		// (get) Token: 0x06008D9E RID: 36254 RVA: 0x0024805F File Offset: 0x0024625F
		public static LocalizedString EADCWeakSourceCreds
		{
			get
			{
				return new LocalizedString("EADCWeakSourceCreds", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008D9F RID: 36255 RVA: 0x00248080 File Offset: 0x00246280
		public static LocalizedString ErrorEdbFileLocationNotUniqueUnderSameNode(string filePath, string serverName)
		{
			return new LocalizedString("ErrorEdbFileLocationNotUniqueUnderSameNode", "Ex566EB8", false, true, Strings.ResourceManager, new object[]
			{
				filePath,
				serverName
			});
		}

		// Token: 0x17002CB5 RID: 11445
		// (get) Token: 0x06008DA0 RID: 36256 RVA: 0x002480B3 File Offset: 0x002462B3
		public static LocalizedString idCreateActiveSyncOraganizationSettings
		{
			get
			{
				return new LocalizedString("idCreateActiveSyncOraganizationSettings", "ExBFD77B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002CB6 RID: 11446
		// (get) Token: 0x06008DA1 RID: 36257 RVA: 0x002480D1 File Offset: 0x002462D1
		public static LocalizedString ErrorPartnerApplicationEmptyRealmWhenNotUseAuthServer
		{
			get
			{
				return new LocalizedString("ErrorPartnerApplicationEmptyRealmWhenNotUseAuthServer", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008DA2 RID: 36258 RVA: 0x002480F0 File Offset: 0x002462F0
		public static LocalizedString MoreThanOneRecipientForRecipientId(string recipId)
		{
			return new LocalizedString("MoreThanOneRecipientForRecipientId", "ExB872F0", false, true, Strings.ResourceManager, new object[]
			{
				recipId
			});
		}

		// Token: 0x17002CB7 RID: 11447
		// (get) Token: 0x06008DA3 RID: 36259 RVA: 0x0024811F File Offset: 0x0024631F
		public static LocalizedString SetupProgressStoppingHTTPFilterService
		{
			get
			{
				return new LocalizedString("SetupProgressStoppingHTTPFilterService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008DA4 RID: 36260 RVA: 0x00248140 File Offset: 0x00246340
		public static LocalizedString ErrorArchiveRecoveryArchiveDatabaseDeleted(string user, string databaseId)
		{
			return new LocalizedString("ErrorArchiveRecoveryArchiveDatabaseDeleted", "Ex06A71D", false, true, Strings.ResourceManager, new object[]
			{
				user,
				databaseId
			});
		}

		// Token: 0x06008DA5 RID: 36261 RVA: 0x00248174 File Offset: 0x00246374
		public static LocalizedString ConfirmationMessageStopComplianceSearch(string name)
		{
			return new LocalizedString("ConfirmationMessageStopComplianceSearch", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x06008DA6 RID: 36262 RVA: 0x002481A4 File Offset: 0x002463A4
		public static LocalizedString ErrorRemovedMailboxNotFound(string removedMailbox)
		{
			return new LocalizedString("ErrorRemovedMailboxNotFound", "Ex16CF6C", false, true, Strings.ResourceManager, new object[]
			{
				removedMailbox
			});
		}

		// Token: 0x06008DA7 RID: 36263 RVA: 0x002481D4 File Offset: 0x002463D4
		public static LocalizedString FailedToReadPefCounter(int failedReads)
		{
			return new LocalizedString("FailedToReadPefCounter", "Ex2C7FE9", false, true, Strings.ResourceManager, new object[]
			{
				failedReads
			});
		}

		// Token: 0x17002CB8 RID: 11448
		// (get) Token: 0x06008DA8 RID: 36264 RVA: 0x00248208 File Offset: 0x00246408
		public static LocalizedString Pop3ServiceDescription
		{
			get
			{
				return new LocalizedString("Pop3ServiceDescription", "ExA0754F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002CB9 RID: 11449
		// (get) Token: 0x06008DA9 RID: 36265 RVA: 0x00248226 File Offset: 0x00246426
		public static LocalizedString ErrorParametersRequiredForNewTenant
		{
			get
			{
				return new LocalizedString("ErrorParametersRequiredForNewTenant", "ExC7F718", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002CBA RID: 11450
		// (get) Token: 0x06008DAA RID: 36266 RVA: 0x00248244 File Offset: 0x00246444
		public static LocalizedString ErrorBookmarkIndexOutOfRange
		{
			get
			{
				return new LocalizedString("ErrorBookmarkIndexOutOfRange", "Ex72ECF3", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008DAB RID: 36267 RVA: 0x00248264 File Offset: 0x00246464
		public static LocalizedString GetQueueDigestUnexpectedError(string error)
		{
			return new LocalizedString("GetQueueDigestUnexpectedError", "", false, false, Strings.ResourceManager, new object[]
			{
				error
			});
		}

		// Token: 0x17002CBB RID: 11451
		// (get) Token: 0x06008DAC RID: 36268 RVA: 0x00248293 File Offset: 0x00246493
		public static LocalizedString RetentionPolicyNotEnabled
		{
			get
			{
				return new LocalizedString("RetentionPolicyNotEnabled", "Ex7A7025", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008DAD RID: 36269 RVA: 0x002482B4 File Offset: 0x002464B4
		public static LocalizedString CannotRemoveMailboxCatchAllRecipient(string domain)
		{
			return new LocalizedString("CannotRemoveMailboxCatchAllRecipient", "", false, false, Strings.ResourceManager, new object[]
			{
				domain
			});
		}

		// Token: 0x06008DAE RID: 36270 RVA: 0x002482E4 File Offset: 0x002464E4
		public static LocalizedString AutodiscoverUsingDomain(string domain)
		{
			return new LocalizedString("AutodiscoverUsingDomain", "ExED1D1F", false, true, Strings.ResourceManager, new object[]
			{
				domain
			});
		}

		// Token: 0x06008DAF RID: 36271 RVA: 0x00248314 File Offset: 0x00246514
		public static LocalizedString ProcessStandardError(string output)
		{
			return new LocalizedString("ProcessStandardError", "Ex3374B8", false, true, Strings.ResourceManager, new object[]
			{
				output
			});
		}

		// Token: 0x06008DB0 RID: 36272 RVA: 0x00248344 File Offset: 0x00246544
		public static LocalizedString ErrorTeamMailboxFeatureNotInstalled(string url)
		{
			return new LocalizedString("ErrorTeamMailboxFeatureNotInstalled", "", false, false, Strings.ResourceManager, new object[]
			{
				url
			});
		}

		// Token: 0x06008DB1 RID: 36273 RVA: 0x00248374 File Offset: 0x00246574
		public static LocalizedString ConfirmationMessageEnableMailboxArbitration(string Identity)
		{
			return new LocalizedString("ConfirmationMessageEnableMailboxArbitration", "Ex39E03C", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x06008DB2 RID: 36274 RVA: 0x002483A4 File Offset: 0x002465A4
		public static LocalizedString PublicFolderSourcesFolderDoesnotExist(string publicFolderPath)
		{
			return new LocalizedString("PublicFolderSourcesFolderDoesnotExist", "", false, false, Strings.ResourceManager, new object[]
			{
				publicFolderPath
			});
		}

		// Token: 0x17002CBC RID: 11452
		// (get) Token: 0x06008DB3 RID: 36275 RVA: 0x002483D3 File Offset: 0x002465D3
		public static LocalizedString ErrorRpcHttpMustSpecifyEitherInternalOrExternalHostName
		{
			get
			{
				return new LocalizedString("ErrorRpcHttpMustSpecifyEitherInternalOrExternalHostName", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008DB4 RID: 36276 RVA: 0x002483F4 File Offset: 0x002465F4
		public static LocalizedString CasHealthOwaIncorrectAuthTypes(string expectedAuthTypes, string actualAuthTypes)
		{
			return new LocalizedString("CasHealthOwaIncorrectAuthTypes", "Ex92FF2A", false, true, Strings.ResourceManager, new object[]
			{
				expectedAuthTypes,
				actualAuthTypes
			});
		}

		// Token: 0x06008DB5 RID: 36277 RVA: 0x00248428 File Offset: 0x00246628
		public static LocalizedString InvalidTPRTask(string taskName)
		{
			return new LocalizedString("InvalidTPRTask", "Ex4DBA65", false, true, Strings.ResourceManager, new object[]
			{
				taskName
			});
		}

		// Token: 0x17002CBD RID: 11453
		// (get) Token: 0x06008DB6 RID: 36278 RVA: 0x00248457 File Offset: 0x00246657
		public static LocalizedString CompletePublicFolderMigrationBatchRequiresSourceLockDown
		{
			get
			{
				return new LocalizedString("CompletePublicFolderMigrationBatchRequiresSourceLockDown", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008DB7 RID: 36279 RVA: 0x00248478 File Offset: 0x00246678
		public static LocalizedString VerboseMailboxDelegateRemoved(string delegateUser, string principalUser)
		{
			return new LocalizedString("VerboseMailboxDelegateRemoved", "ExED840A", false, true, Strings.ResourceManager, new object[]
			{
				delegateUser,
				principalUser
			});
		}

		// Token: 0x17002CBE RID: 11454
		// (get) Token: 0x06008DB8 RID: 36280 RVA: 0x002484AB File Offset: 0x002466AB
		public static LocalizedString ErrorPublicFolderMigrationCompletedPreviously
		{
			get
			{
				return new LocalizedString("ErrorPublicFolderMigrationCompletedPreviously", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002CBF RID: 11455
		// (get) Token: 0x06008DB9 RID: 36281 RVA: 0x002484C9 File Offset: 0x002466C9
		public static LocalizedString DataMartTimeoutException
		{
			get
			{
				return new LocalizedString("DataMartTimeoutException", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008DBA RID: 36282 RVA: 0x002484E8 File Offset: 0x002466E8
		public static LocalizedString ErrorRemoteTeamMailboxIsNotChangeable(string tm)
		{
			return new LocalizedString("ErrorRemoteTeamMailboxIsNotChangeable", "", false, false, Strings.ResourceManager, new object[]
			{
				tm
			});
		}

		// Token: 0x17002CC0 RID: 11456
		// (get) Token: 0x06008DBB RID: 36283 RVA: 0x00248517 File Offset: 0x00246717
		public static LocalizedString ProgressDeletingEdbFile
		{
			get
			{
				return new LocalizedString("ProgressDeletingEdbFile", "Ex8E1997", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008DBC RID: 36284 RVA: 0x00248538 File Offset: 0x00246738
		public static LocalizedString ErrorOwaMailboxPolicyNotUnique(string idStringValue)
		{
			return new LocalizedString("ErrorOwaMailboxPolicyNotUnique", "ExA4FB60", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		// Token: 0x06008DBD RID: 36285 RVA: 0x00248568 File Offset: 0x00246768
		public static LocalizedString ConfirmationMessageRemoveOwaMailboxPolicy(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveOwaMailboxPolicy", "ExAA5D4F", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x06008DBE RID: 36286 RVA: 0x00248598 File Offset: 0x00246798
		public static LocalizedString CannotSubscribeToMultipleSites(string server, string site)
		{
			return new LocalizedString("CannotSubscribeToMultipleSites", "Ex1A56A0", false, true, Strings.ResourceManager, new object[]
			{
				server,
				site
			});
		}

		// Token: 0x06008DBF RID: 36287 RVA: 0x002485CC File Offset: 0x002467CC
		public static LocalizedString TestSearchCurrentMDB(string mdbName)
		{
			return new LocalizedString("TestSearchCurrentMDB", "ExAC70FF", false, true, Strings.ResourceManager, new object[]
			{
				mdbName
			});
		}

		// Token: 0x17002CC1 RID: 11457
		// (get) Token: 0x06008DC0 RID: 36288 RVA: 0x002485FB File Offset: 0x002467FB
		public static LocalizedString DebugStartSetDatabase
		{
			get
			{
				return new LocalizedString("DebugStartSetDatabase", "ExB705A2", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008DC1 RID: 36289 RVA: 0x0024861C File Offset: 0x0024681C
		public static LocalizedString UpdatingLegDnForDatabaseToServer(string databaseName, string legdn, string serverName)
		{
			return new LocalizedString("UpdatingLegDnForDatabaseToServer", "Ex54467C", false, true, Strings.ResourceManager, new object[]
			{
				databaseName,
				legdn,
				serverName
			});
		}

		// Token: 0x17002CC2 RID: 11458
		// (get) Token: 0x06008DC2 RID: 36290 RVA: 0x00248653 File Offset: 0x00246853
		public static LocalizedString SearchServiceDisplayName
		{
			get
			{
				return new LocalizedString("SearchServiceDisplayName", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002CC3 RID: 11459
		// (get) Token: 0x06008DC3 RID: 36291 RVA: 0x00248671 File Offset: 0x00246871
		public static LocalizedString ErrorCannotOperateOnOrgInCurrentState
		{
			get
			{
				return new LocalizedString("ErrorCannotOperateOnOrgInCurrentState", "Ex75E7C7", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008DC4 RID: 36292 RVA: 0x00248690 File Offset: 0x00246890
		public static LocalizedString ErrorUserNotFoundOnDomainController(string id, string dc)
		{
			return new LocalizedString("ErrorUserNotFoundOnDomainController", "Ex560194", false, true, Strings.ResourceManager, new object[]
			{
				id,
				dc
			});
		}

		// Token: 0x06008DC5 RID: 36293 RVA: 0x002486C4 File Offset: 0x002468C4
		public static LocalizedString ErrorInvalidNameOrDescriptionParameters(string parameterName, int length, int maxLength)
		{
			return new LocalizedString("ErrorInvalidNameOrDescriptionParameters", "", false, false, Strings.ResourceManager, new object[]
			{
				parameterName,
				length,
				maxLength
			});
		}

		// Token: 0x06008DC6 RID: 36294 RVA: 0x00248708 File Offset: 0x00246908
		public static LocalizedString ErrorSecondaryDomainNotUnique(string identity)
		{
			return new LocalizedString("ErrorSecondaryDomainNotUnique", "Ex9F39EF", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x06008DC7 RID: 36295 RVA: 0x00248738 File Offset: 0x00246938
		public static LocalizedString InvalidNumberOfSegments(int numberOfSegments)
		{
			return new LocalizedString("InvalidNumberOfSegments", "Ex4B9A6B", false, true, Strings.ResourceManager, new object[]
			{
				numberOfSegments
			});
		}

		// Token: 0x06008DC8 RID: 36296 RVA: 0x0024876C File Offset: 0x0024696C
		public static LocalizedString ErrorExtendedProtectionSPNHasToStartWithHTTP(string spn)
		{
			return new LocalizedString("ErrorExtendedProtectionSPNHasToStartWithHTTP", "Ex311E9B", false, true, Strings.ResourceManager, new object[]
			{
				spn
			});
		}

		// Token: 0x17002CC4 RID: 11460
		// (get) Token: 0x06008DC9 RID: 36297 RVA: 0x0024879B File Offset: 0x0024699B
		public static LocalizedString SetupProgressPerMBXPlanOWAPolicyEnabled
		{
			get
			{
				return new LocalizedString("SetupProgressPerMBXPlanOWAPolicyEnabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002CC5 RID: 11461
		// (get) Token: 0x06008DCA RID: 36298 RVA: 0x002487B9 File Offset: 0x002469B9
		public static LocalizedString SetupProgressStartingASUpdateService
		{
			get
			{
				return new LocalizedString("SetupProgressStartingASUpdateService", "ExE4827E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008DCB RID: 36299 RVA: 0x002487D8 File Offset: 0x002469D8
		public static LocalizedString ConfirmationMessageRemoveDataClassification(string identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveDataClassification", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x06008DCC RID: 36300 RVA: 0x00248808 File Offset: 0x00246A08
		public static LocalizedString ErrorCannotMoveArbitrationMailboxesDownlevel(string mailbox)
		{
			return new LocalizedString("ErrorCannotMoveArbitrationMailboxesDownlevel", "Ex7165C5", false, true, Strings.ResourceManager, new object[]
			{
				mailbox
			});
		}

		// Token: 0x06008DCD RID: 36301 RVA: 0x00248838 File Offset: 0x00246A38
		public static LocalizedString LastConfigLoadTime(string d, string t)
		{
			return new LocalizedString("LastConfigLoadTime", "", false, false, Strings.ResourceManager, new object[]
			{
				d,
				t
			});
		}

		// Token: 0x17002CC6 RID: 11462
		// (get) Token: 0x06008DCE RID: 36302 RVA: 0x0024886B File Offset: 0x00246A6B
		public static LocalizedString SetupProgressStartingWMIProviderService
		{
			get
			{
				return new LocalizedString("SetupProgressStartingWMIProviderService", "Ex57F7AD", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008DCF RID: 36303 RVA: 0x0024888C File Offset: 0x00246A8C
		public static LocalizedString UmLanguagePackException(string exception)
		{
			return new LocalizedString("UmLanguagePackException", "Ex018229", false, true, Strings.ResourceManager, new object[]
			{
				exception
			});
		}

		// Token: 0x06008DD0 RID: 36304 RVA: 0x002488BC File Offset: 0x00246ABC
		public static LocalizedString VerboseTestOabFromAutoDiscover(string url)
		{
			return new LocalizedString("VerboseTestOabFromAutoDiscover", "", false, false, Strings.ResourceManager, new object[]
			{
				url
			});
		}

		// Token: 0x17002CC7 RID: 11463
		// (get) Token: 0x06008DD1 RID: 36305 RVA: 0x002488EB File Offset: 0x00246AEB
		public static LocalizedString InvalidRequestJob
		{
			get
			{
				return new LocalizedString("InvalidRequestJob", "Ex2C6075", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008DD2 RID: 36306 RVA: 0x0024890C File Offset: 0x00246B0C
		public static LocalizedString OwaAdminObjectNotFoundException(string name, string webSite, string virtualDirectory, string applicationRoot, string identity)
		{
			return new LocalizedString("OwaAdminObjectNotFoundException", "ExD91128", false, true, Strings.ResourceManager, new object[]
			{
				name,
				webSite,
				virtualDirectory,
				applicationRoot,
				identity
			});
		}

		// Token: 0x17002CC8 RID: 11464
		// (get) Token: 0x06008DD3 RID: 36307 RVA: 0x0024894C File Offset: 0x00246B4C
		public static LocalizedString MalboxFolderRightsFolderVisible
		{
			get
			{
				return new LocalizedString("MalboxFolderRightsFolderVisible", "Ex09450A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008DD4 RID: 36308 RVA: 0x0024896C File Offset: 0x00246B6C
		public static LocalizedString NewPolicyTipConfigInvalidName(string supportedLocalesString, string supportedActionsString)
		{
			return new LocalizedString("NewPolicyTipConfigInvalidName", "", false, false, Strings.ResourceManager, new object[]
			{
				supportedLocalesString,
				supportedActionsString
			});
		}

		// Token: 0x06008DD5 RID: 36309 RVA: 0x002489A0 File Offset: 0x00246BA0
		public static LocalizedString ErrorArchiveNotEnabled(string user)
		{
			return new LocalizedString("ErrorArchiveNotEnabled", "Ex83B7D1", false, true, Strings.ResourceManager, new object[]
			{
				user
			});
		}

		// Token: 0x06008DD6 RID: 36310 RVA: 0x002489D0 File Offset: 0x00246BD0
		public static LocalizedString ErrorRemovePolicyRoleAssignment(string user, string role, string policy)
		{
			return new LocalizedString("ErrorRemovePolicyRoleAssignment", "Ex8BA225", false, true, Strings.ResourceManager, new object[]
			{
				user,
				role,
				policy
			});
		}

		// Token: 0x06008DD7 RID: 36311 RVA: 0x00248A08 File Offset: 0x00246C08
		public static LocalizedString TowsAutodiscoverUrl(string url)
		{
			return new LocalizedString("TowsAutodiscoverUrl", "", false, false, Strings.ResourceManager, new object[]
			{
				url
			});
		}

		// Token: 0x06008DD8 RID: 36312 RVA: 0x00248A38 File Offset: 0x00246C38
		public static LocalizedString BadCharSetParameterException(string value)
		{
			return new LocalizedString("BadCharSetParameterException", "Ex9D6F4B", false, true, Strings.ResourceManager, new object[]
			{
				value
			});
		}

		// Token: 0x17002CC9 RID: 11465
		// (get) Token: 0x06008DD9 RID: 36313 RVA: 0x00248A67 File Offset: 0x00246C67
		public static LocalizedString SuspendSgcTimeout
		{
			get
			{
				return new LocalizedString("SuspendSgcTimeout", "Ex6060FB", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002CCA RID: 11466
		// (get) Token: 0x06008DDA RID: 36314 RVA: 0x00248A85 File Offset: 0x00246C85
		public static LocalizedString NonUniqueCategoryObject
		{
			get
			{
				return new LocalizedString("NonUniqueCategoryObject", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008DDB RID: 36315 RVA: 0x00248AA4 File Offset: 0x00246CA4
		public static LocalizedString SeedingPathWarningException(string error)
		{
			return new LocalizedString("SeedingPathWarningException", "Ex2C108E", false, true, Strings.ResourceManager, new object[]
			{
				error
			});
		}

		// Token: 0x06008DDC RID: 36316 RVA: 0x00248AD4 File Offset: 0x00246CD4
		public static LocalizedString AggregationTaskMailboxNotFound(string mailbox)
		{
			return new LocalizedString("AggregationTaskMailboxNotFound", "Ex594AF0", false, true, Strings.ResourceManager, new object[]
			{
				mailbox
			});
		}

		// Token: 0x06008DDD RID: 36317 RVA: 0x00248B04 File Offset: 0x00246D04
		public static LocalizedString ConfirmationMessageSetOWAMailboxPolicy(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetOWAMailboxPolicy", "Ex1A978F", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x17002CCB RID: 11467
		// (get) Token: 0x06008DDE RID: 36318 RVA: 0x00248B33 File Offset: 0x00246D33
		public static LocalizedString SendConnectorValidTargetServerNotFound
		{
			get
			{
				return new LocalizedString("SendConnectorValidTargetServerNotFound", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008DDF RID: 36319 RVA: 0x00248B54 File Offset: 0x00246D54
		public static LocalizedString ErrorRpcHttpAlreadyEnabled(string server)
		{
			return new LocalizedString("ErrorRpcHttpAlreadyEnabled", "Ex0B9039", false, true, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		// Token: 0x06008DE0 RID: 36320 RVA: 0x00248B84 File Offset: 0x00246D84
		public static LocalizedString CasHealthFailedToPopulateFromMetabase(string vDir, string errorMessage)
		{
			return new LocalizedString("CasHealthFailedToPopulateFromMetabase", "ExBAFDD1", false, true, Strings.ResourceManager, new object[]
			{
				vDir,
				errorMessage
			});
		}

		// Token: 0x06008DE1 RID: 36321 RVA: 0x00248BB8 File Offset: 0x00246DB8
		public static LocalizedString ConfirmationMessageRemoveDynamicDistributionGroup(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveDynamicDistributionGroup", "Ex7E3815", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x17002CCC RID: 11468
		// (get) Token: 0x06008DE2 RID: 36322 RVA: 0x00248BE7 File Offset: 0x00246DE7
		public static LocalizedString WarningLegacyExchangeServer
		{
			get
			{
				return new LocalizedString("WarningLegacyExchangeServer", "Ex549F52", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008DE3 RID: 36323 RVA: 0x00248C08 File Offset: 0x00246E08
		public static LocalizedString ErrorRemoteSourceArchiveMailboxDoesNotExist(string localUser)
		{
			return new LocalizedString("ErrorRemoteSourceArchiveMailboxDoesNotExist", "", false, false, Strings.ResourceManager, new object[]
			{
				localUser
			});
		}

		// Token: 0x06008DE4 RID: 36324 RVA: 0x00248C38 File Offset: 0x00246E38
		public static LocalizedString ErrorLegacyPublicFolder(string path)
		{
			return new LocalizedString("ErrorLegacyPublicFolder", "", false, false, Strings.ResourceManager, new object[]
			{
				path
			});
		}

		// Token: 0x06008DE5 RID: 36325 RVA: 0x00248C68 File Offset: 0x00246E68
		public static LocalizedString ConfirmationMessageNewHostedConnectionFilterRule(string name)
		{
			return new LocalizedString("ConfirmationMessageNewHostedConnectionFilterRule", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x17002CCD RID: 11469
		// (get) Token: 0x06008DE6 RID: 36326 RVA: 0x00248C97 File Offset: 0x00246E97
		public static LocalizedString IntegratedVDirDisabledWarning
		{
			get
			{
				return new LocalizedString("IntegratedVDirDisabledWarning", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008DE7 RID: 36327 RVA: 0x00248CB8 File Offset: 0x00246EB8
		public static LocalizedString ErrorTooManyAddedRecipientsInRuleCollection(int currentRecipients, int maxRecipients)
		{
			return new LocalizedString("ErrorTooManyAddedRecipientsInRuleCollection", "Ex6685E0", false, true, Strings.ResourceManager, new object[]
			{
				currentRecipients,
				maxRecipients
			});
		}

		// Token: 0x17002CCE RID: 11470
		// (get) Token: 0x06008DE8 RID: 36328 RVA: 0x00248CF5 File Offset: 0x00246EF5
		public static LocalizedString SetupProgressStoppingReplayService
		{
			get
			{
				return new LocalizedString("SetupProgressStoppingReplayService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008DE9 RID: 36329 RVA: 0x00248D14 File Offset: 0x00246F14
		public static LocalizedString ComplianceBindingUnknownError(string name)
		{
			return new LocalizedString("ComplianceBindingUnknownError", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x06008DEA RID: 36330 RVA: 0x00248D44 File Offset: 0x00246F44
		public static LocalizedString RemoteCertificateExchangeVersionNotSupported(string server)
		{
			return new LocalizedString("RemoteCertificateExchangeVersionNotSupported", "", false, false, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		// Token: 0x17002CCF RID: 11471
		// (get) Token: 0x06008DEB RID: 36331 RVA: 0x00248D73 File Offset: 0x00246F73
		public static LocalizedString CasHealthOwaLogonScenarioDescription
		{
			get
			{
				return new LocalizedString("CasHealthOwaLogonScenarioDescription", "Ex0BC280", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002CD0 RID: 11472
		// (get) Token: 0x06008DEC RID: 36332 RVA: 0x00248D91 File Offset: 0x00246F91
		public static LocalizedString AdminGroupsNotFoundException
		{
			get
			{
				return new LocalizedString("AdminGroupsNotFoundException", "Ex50B367", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002CD1 RID: 11473
		// (get) Token: 0x06008DED RID: 36333 RVA: 0x00248DAF File Offset: 0x00246FAF
		public static LocalizedString DiscoveryMailboxDisplayName
		{
			get
			{
				return new LocalizedString("DiscoveryMailboxDisplayName", "Ex6DADFA", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008DEE RID: 36334 RVA: 0x00248DD0 File Offset: 0x00246FD0
		public static LocalizedString ErrorArbitrationMbxNotSetForApproval(string id)
		{
			return new LocalizedString("ErrorArbitrationMbxNotSetForApproval", "ExC6011E", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x06008DEF RID: 36335 RVA: 0x00248E00 File Offset: 0x00247000
		public static LocalizedString FailedToDeleteDatabaseCopy(string id, string error)
		{
			return new LocalizedString("FailedToDeleteDatabaseCopy", "Ex15286D", false, true, Strings.ResourceManager, new object[]
			{
				id,
				error
			});
		}

		// Token: 0x06008DF0 RID: 36336 RVA: 0x00248E34 File Offset: 0x00247034
		public static LocalizedString ConfirmationMessageEnableReplayLag(string dbName, string serverName)
		{
			return new LocalizedString("ConfirmationMessageEnableReplayLag", "", false, false, Strings.ResourceManager, new object[]
			{
				dbName,
				serverName
			});
		}

		// Token: 0x17002CD2 RID: 11474
		// (get) Token: 0x06008DF1 RID: 36337 RVA: 0x00248E67 File Offset: 0x00247067
		public static LocalizedString ErrorAssignmentMethodWithoutRoleAssignee
		{
			get
			{
				return new LocalizedString("ErrorAssignmentMethodWithoutRoleAssignee", "Ex170019", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002CD3 RID: 11475
		// (get) Token: 0x06008DF2 RID: 36338 RVA: 0x00248E85 File Offset: 0x00247085
		public static LocalizedString CasHealthCouldNotObtainFqdn
		{
			get
			{
				return new LocalizedString("CasHealthCouldNotObtainFqdn", "Ex55D09B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008DF3 RID: 36339 RVA: 0x00248EA4 File Offset: 0x002470A4
		public static LocalizedString ErrorCannotDetermineEndpointForTenant(string domain)
		{
			return new LocalizedString("ErrorCannotDetermineEndpointForTenant", "Ex390FA7", false, true, Strings.ResourceManager, new object[]
			{
				domain
			});
		}

		// Token: 0x06008DF4 RID: 36340 RVA: 0x00248ED4 File Offset: 0x002470D4
		public static LocalizedString CasHealthOwaErrorPageExceptionType(string type)
		{
			return new LocalizedString("CasHealthOwaErrorPageExceptionType", "Ex222DC3", false, true, Strings.ResourceManager, new object[]
			{
				type
			});
		}

		// Token: 0x06008DF5 RID: 36341 RVA: 0x00248F04 File Offset: 0x00247104
		public static LocalizedString DsnCodeNotADefault(EnhancedStatusCode code)
		{
			return new LocalizedString("DsnCodeNotADefault", "", false, false, Strings.ResourceManager, new object[]
			{
				code
			});
		}

		// Token: 0x06008DF6 RID: 36342 RVA: 0x00248F34 File Offset: 0x00247134
		public static LocalizedString ErrorUnableToCheckMountedStatusNoResult(string pfdb, string server)
		{
			return new LocalizedString("ErrorUnableToCheckMountedStatusNoResult", "ExB8DCBE", false, true, Strings.ResourceManager, new object[]
			{
				pfdb,
				server
			});
		}

		// Token: 0x17002CD4 RID: 11476
		// (get) Token: 0x06008DF7 RID: 36343 RVA: 0x00248F67 File Offset: 0x00247167
		public static LocalizedString ErrorSetPasswordWithoutPermission
		{
			get
			{
				return new LocalizedString("ErrorSetPasswordWithoutPermission", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002CD5 RID: 11477
		// (get) Token: 0x06008DF8 RID: 36344 RVA: 0x00248F85 File Offset: 0x00247185
		public static LocalizedString SetupProgressUpdateMailboxes
		{
			get
			{
				return new LocalizedString("SetupProgressUpdateMailboxes", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008DF9 RID: 36345 RVA: 0x00248FA4 File Offset: 0x002471A4
		public static LocalizedString RemoveEstimateMailboxSearchConfirmation(string identity)
		{
			return new LocalizedString("RemoveEstimateMailboxSearchConfirmation", "Ex1A23CB", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x17002CD6 RID: 11478
		// (get) Token: 0x06008DFA RID: 36346 RVA: 0x00248FD3 File Offset: 0x002471D3
		public static LocalizedString ErrorMissLinkedDomainController
		{
			get
			{
				return new LocalizedString("ErrorMissLinkedDomainController", "Ex1301D9", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008DFB RID: 36347 RVA: 0x00248FF4 File Offset: 0x002471F4
		public static LocalizedString InitializingFileCopy(string server)
		{
			return new LocalizedString("InitializingFileCopy", "ExBA8C50", false, true, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		// Token: 0x06008DFC RID: 36348 RVA: 0x00249024 File Offset: 0x00247224
		public static LocalizedString BadNumberOfProcessesForService(string serviceName, string numberOfProcesses)
		{
			return new LocalizedString("BadNumberOfProcessesForService", "Ex82D9DB", false, true, Strings.ResourceManager, new object[]
			{
				serviceName,
				numberOfProcesses
			});
		}

		// Token: 0x06008DFD RID: 36349 RVA: 0x00249058 File Offset: 0x00247258
		public static LocalizedString WarningRemoveApprovalRequiredGroupOwners(string id)
		{
			return new LocalizedString("WarningRemoveApprovalRequiredGroupOwners", "Ex93E0B0", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x06008DFE RID: 36350 RVA: 0x00249088 File Offset: 0x00247288
		public static LocalizedString FailedToDeleteOldEdbFile(string path)
		{
			return new LocalizedString("FailedToDeleteOldEdbFile", "ExC35B11", false, true, Strings.ResourceManager, new object[]
			{
				path
			});
		}

		// Token: 0x17002CD7 RID: 11479
		// (get) Token: 0x06008DFF RID: 36351 RVA: 0x002490B7 File Offset: 0x002472B7
		public static LocalizedString CasHealthOwaGetLogoffStart
		{
			get
			{
				return new LocalizedString("CasHealthOwaGetLogoffStart", "Ex75DCA7", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008E00 RID: 36352 RVA: 0x002490D8 File Offset: 0x002472D8
		public static LocalizedString MapiTransactionDiagnosticStoreServiceCheckFailure(string errorMsg)
		{
			return new LocalizedString("MapiTransactionDiagnosticStoreServiceCheckFailure", "Ex79013E", false, true, Strings.ResourceManager, new object[]
			{
				errorMsg
			});
		}

		// Token: 0x06008E01 RID: 36353 RVA: 0x00249108 File Offset: 0x00247308
		public static LocalizedString ConfirmNewMailboxSearchTask(string name)
		{
			return new LocalizedString("ConfirmNewMailboxSearchTask", "Ex27A260", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x17002CD8 RID: 11480
		// (get) Token: 0x06008E02 RID: 36354 RVA: 0x00249137 File Offset: 0x00247337
		public static LocalizedString DebugEndCreateMemberRequest
		{
			get
			{
				return new LocalizedString("DebugEndCreateMemberRequest", "Ex5A4C09", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002CD9 RID: 11481
		// (get) Token: 0x06008E03 RID: 36355 RVA: 0x00249155 File Offset: 0x00247355
		public static LocalizedString SetupProgressNewTLSCertificate
		{
			get
			{
				return new LocalizedString("SetupProgressNewTLSCertificate", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008E04 RID: 36356 RVA: 0x00249174 File Offset: 0x00247374
		public static LocalizedString UmLanguagePackTempFilesNotDeleted(string exception)
		{
			return new LocalizedString("UmLanguagePackTempFilesNotDeleted", "Ex48966F", false, true, Strings.ResourceManager, new object[]
			{
				exception
			});
		}

		// Token: 0x17002CDA RID: 11482
		// (get) Token: 0x06008E05 RID: 36357 RVA: 0x002491A3 File Offset: 0x002473A3
		public static LocalizedString UninstallingMSExchangeFDS
		{
			get
			{
				return new LocalizedString("UninstallingMSExchangeFDS", "Ex4A44F5", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008E06 RID: 36358 RVA: 0x002491C4 File Offset: 0x002473C4
		public static LocalizedString ErrorGroupCannotBeEmptyRoleAssignmentConstraint(string roleGroupName, string membersToRemove, string roleAssignment, string role)
		{
			return new LocalizedString("ErrorGroupCannotBeEmptyRoleAssignmentConstraint", "Ex03F2F8", false, true, Strings.ResourceManager, new object[]
			{
				roleGroupName,
				membersToRemove,
				roleAssignment,
				role
			});
		}

		// Token: 0x17002CDB RID: 11483
		// (get) Token: 0x06008E07 RID: 36359 RVA: 0x002491FF File Offset: 0x002473FF
		public static LocalizedString WarningLastPublicFolderDatabase
		{
			get
			{
				return new LocalizedString("WarningLastPublicFolderDatabase", "ExB7DD39", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008E08 RID: 36360 RVA: 0x00249220 File Offset: 0x00247420
		public static LocalizedString ErrorSharePointSiteHasNoValidUrl(string url)
		{
			return new LocalizedString("ErrorSharePointSiteHasNoValidUrl", "", false, false, Strings.ResourceManager, new object[]
			{
				url
			});
		}

		// Token: 0x06008E09 RID: 36361 RVA: 0x00249250 File Offset: 0x00247450
		public static LocalizedString ScriptDontExist(string fileName)
		{
			return new LocalizedString("ScriptDontExist", "ExC21F51", false, true, Strings.ResourceManager, new object[]
			{
				fileName
			});
		}

		// Token: 0x17002CDC RID: 11484
		// (get) Token: 0x06008E0A RID: 36362 RVA: 0x0024927F File Offset: 0x0024747F
		public static LocalizedString DNSRoutingEnabledMustBeSpecifiedForAuthMechanism
		{
			get
			{
				return new LocalizedString("DNSRoutingEnabledMustBeSpecifiedForAuthMechanism", "Ex12CD3D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008E0B RID: 36363 RVA: 0x002492A0 File Offset: 0x002474A0
		public static LocalizedString ErrorArchiveAlreadyInTargetArchiveDatabase(string mailbox, string database)
		{
			return new LocalizedString("ErrorArchiveAlreadyInTargetArchiveDatabase", "ExAF2EF5", false, true, Strings.ResourceManager, new object[]
			{
				mailbox,
				database
			});
		}

		// Token: 0x06008E0C RID: 36364 RVA: 0x002492D4 File Offset: 0x002474D4
		public static LocalizedString MsiProperty(string name, string value)
		{
			return new LocalizedString("MsiProperty", "Ex9C8175", false, true, Strings.ResourceManager, new object[]
			{
				name,
				value
			});
		}

		// Token: 0x17002CDD RID: 11485
		// (get) Token: 0x06008E0D RID: 36365 RVA: 0x00249307 File Offset: 0x00247507
		public static LocalizedString SetupProgressCreateModeratedRecipients
		{
			get
			{
				return new LocalizedString("SetupProgressCreateModeratedRecipients", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008E0E RID: 36366 RVA: 0x00249328 File Offset: 0x00247528
		public static LocalizedString ErrorSendNotificationForSiteMailbox(string tm, string error)
		{
			return new LocalizedString("ErrorSendNotificationForSiteMailbox", "", false, false, Strings.ResourceManager, new object[]
			{
				tm,
				error
			});
		}

		// Token: 0x06008E0F RID: 36367 RVA: 0x0024935C File Offset: 0x0024755C
		public static LocalizedString ErrorUpdatingVDir(string identity, string errorMsg)
		{
			return new LocalizedString("ErrorUpdatingVDir", "Ex2B509C", false, true, Strings.ResourceManager, new object[]
			{
				identity,
				errorMsg
			});
		}

		// Token: 0x06008E10 RID: 36368 RVA: 0x00249390 File Offset: 0x00247590
		public static LocalizedString ConfirmationResetProvisioningCache(string server, string application)
		{
			return new LocalizedString("ConfirmationResetProvisioningCache", "", false, false, Strings.ResourceManager, new object[]
			{
				server,
				application
			});
		}

		// Token: 0x17002CDE RID: 11486
		// (get) Token: 0x06008E11 RID: 36369 RVA: 0x002493C3 File Offset: 0x002475C3
		public static LocalizedString FileUploadServiceDisplayName
		{
			get
			{
				return new LocalizedString("FileUploadServiceDisplayName", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008E12 RID: 36370 RVA: 0x002493E4 File Offset: 0x002475E4
		public static LocalizedString RemoveVirtualDirectoryGetApplicationPoolUnknownError(string path)
		{
			return new LocalizedString("RemoveVirtualDirectoryGetApplicationPoolUnknownError", "ExAA1485", false, true, Strings.ResourceManager, new object[]
			{
				path
			});
		}

		// Token: 0x17002CDF RID: 11487
		// (get) Token: 0x06008E13 RID: 36371 RVA: 0x00249413 File Offset: 0x00247613
		public static LocalizedString DegubStartConnectingToDomainServices
		{
			get
			{
				return new LocalizedString("DegubStartConnectingToDomainServices", "Ex022AC3", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002CE0 RID: 11488
		// (get) Token: 0x06008E14 RID: 36372 RVA: 0x00249431 File Offset: 0x00247631
		public static LocalizedString InvalidMessageIdentity
		{
			get
			{
				return new LocalizedString("InvalidMessageIdentity", "ExDC3413", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008E15 RID: 36373 RVA: 0x00249450 File Offset: 0x00247650
		public static LocalizedString TraceCannotGetExchangeVersion(string exception)
		{
			return new LocalizedString("TraceCannotGetExchangeVersion", "Ex519C91", false, true, Strings.ResourceManager, new object[]
			{
				exception
			});
		}

		// Token: 0x17002CE1 RID: 11489
		// (get) Token: 0x06008E16 RID: 36374 RVA: 0x0024947F File Offset: 0x0024767F
		public static LocalizedString ComplianceSearchTaskCreationError
		{
			get
			{
				return new LocalizedString("ComplianceSearchTaskCreationError", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008E17 RID: 36375 RVA: 0x002494A0 File Offset: 0x002476A0
		public static LocalizedString RpcHttpTiSp1FeatureDisabled(string servers)
		{
			return new LocalizedString("RpcHttpTiSp1FeatureDisabled", "ExD90A80", false, true, Strings.ResourceManager, new object[]
			{
				servers
			});
		}

		// Token: 0x06008E18 RID: 36376 RVA: 0x002494D0 File Offset: 0x002476D0
		public static LocalizedString ConfirmationMessageSwitchActiveSyncDefaultPolicy(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSwitchActiveSyncDefaultPolicy", "", false, false, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x17002CE2 RID: 11490
		// (get) Token: 0x06008E19 RID: 36377 RVA: 0x002494FF File Offset: 0x002476FF
		public static LocalizedString ErrorSourceMailboxDatabaseVersionUnsupported
		{
			get
			{
				return new LocalizedString("ErrorSourceMailboxDatabaseVersionUnsupported", "ExB13C48", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002CE3 RID: 11491
		// (get) Token: 0x06008E1A RID: 36378 RVA: 0x0024951D File Offset: 0x0024771D
		public static LocalizedString UninstallClientAccessIisWebServiceExtensions
		{
			get
			{
				return new LocalizedString("UninstallClientAccessIisWebServiceExtensions", "ExE00443", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008E1B RID: 36379 RVA: 0x0024953C File Offset: 0x0024773C
		public static LocalizedString ConfirmationMessageSetTeamMailboxProvisioningPolicy(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetTeamMailboxProvisioningPolicy", "", false, false, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x17002CE4 RID: 11492
		// (get) Token: 0x06008E1C RID: 36380 RVA: 0x0024956B File Offset: 0x0024776B
		public static LocalizedString UninstallExchangeStreamingOpticsTask
		{
			get
			{
				return new LocalizedString("UninstallExchangeStreamingOpticsTask", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008E1D RID: 36381 RVA: 0x0024958C File Offset: 0x0024778C
		public static LocalizedString ConfirmationMessageSetMailUser(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetMailUser", "Ex6CDBD2", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x06008E1E RID: 36382 RVA: 0x002495BC File Offset: 0x002477BC
		public static LocalizedString StatusMessageStartUpdatePublicFolderMailbox(string mbxIdentity)
		{
			return new LocalizedString("StatusMessageStartUpdatePublicFolderMailbox", "", false, false, Strings.ResourceManager, new object[]
			{
				mbxIdentity
			});
		}

		// Token: 0x06008E1F RID: 36383 RVA: 0x002495EC File Offset: 0x002477EC
		public static LocalizedString ConfirmationMessageRemoveCmdletExtensionAgent(string identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveCmdletExtensionAgent", "ExCC8E0B", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x06008E20 RID: 36384 RVA: 0x0024961C File Offset: 0x0024781C
		public static LocalizedString MailboxAssociationReplicationRpcRequest(string mailboxIdentity, string remoteServer)
		{
			return new LocalizedString("MailboxAssociationReplicationRpcRequest", "", false, false, Strings.ResourceManager, new object[]
			{
				mailboxIdentity,
				remoteServer
			});
		}

		// Token: 0x06008E21 RID: 36385 RVA: 0x00249650 File Offset: 0x00247850
		public static LocalizedString InstallIisWebServiceExtensionAdding(string GroupID, string executablePath)
		{
			return new LocalizedString("InstallIisWebServiceExtensionAdding", "Ex072B3F", false, true, Strings.ResourceManager, new object[]
			{
				GroupID,
				executablePath
			});
		}

		// Token: 0x17002CE5 RID: 11493
		// (get) Token: 0x06008E22 RID: 36386 RVA: 0x00249683 File Offset: 0x00247883
		public static LocalizedString SetupComponentConfiguringCore
		{
			get
			{
				return new LocalizedString("SetupComponentConfiguringCore", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002CE6 RID: 11494
		// (get) Token: 0x06008E23 RID: 36387 RVA: 0x002496A1 File Offset: 0x002478A1
		public static LocalizedString ADAttributeStreet
		{
			get
			{
				return new LocalizedString("ADAttributeStreet", "ExB65057", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008E24 RID: 36388 RVA: 0x002496C0 File Offset: 0x002478C0
		public static LocalizedString ForeignForestRootDomainNotFoundException(string foreignforest)
		{
			return new LocalizedString("ForeignForestRootDomainNotFoundException", "ExAD66EC", false, true, Strings.ResourceManager, new object[]
			{
				foreignforest
			});
		}

		// Token: 0x06008E25 RID: 36389 RVA: 0x002496F0 File Offset: 0x002478F0
		public static LocalizedString RemoveVirtualDirectoryApplicationPoolSearchError(string applicationPool, int hresult)
		{
			return new LocalizedString("RemoveVirtualDirectoryApplicationPoolSearchError", "Ex79F250", false, true, Strings.ResourceManager, new object[]
			{
				applicationPool,
				hresult
			});
		}

		// Token: 0x06008E26 RID: 36390 RVA: 0x00249728 File Offset: 0x00247928
		public static LocalizedString ErrorCannotUpdateRecipient(string id, string details)
		{
			return new LocalizedString("ErrorCannotUpdateRecipient", "Ex4301D0", false, true, Strings.ResourceManager, new object[]
			{
				id,
				details
			});
		}

		// Token: 0x17002CE7 RID: 11495
		// (get) Token: 0x06008E27 RID: 36391 RVA: 0x0024975B File Offset: 0x0024795B
		public static LocalizedString SmtpConnectivityNoneSucceeded
		{
			get
			{
				return new LocalizedString("SmtpConnectivityNoneSucceeded", "ExACB8FA", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008E28 RID: 36392 RVA: 0x0024977C File Offset: 0x0024797C
		public static LocalizedString VerbosePendingServicePlanUpgradeDetected(string org)
		{
			return new LocalizedString("VerbosePendingServicePlanUpgradeDetected", "Ex5C754E", false, true, Strings.ResourceManager, new object[]
			{
				org
			});
		}

		// Token: 0x17002CE8 RID: 11496
		// (get) Token: 0x06008E29 RID: 36393 RVA: 0x002497AB File Offset: 0x002479AB
		public static LocalizedString SetupComponentStartingMailboxServices
		{
			get
			{
				return new LocalizedString("SetupComponentStartingMailboxServices", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008E2A RID: 36394 RVA: 0x002497CC File Offset: 0x002479CC
		public static LocalizedString UnableToUnlockMailboxDueToOutstandingMoveRequest(string mailboxId, string moveStatus)
		{
			return new LocalizedString("UnableToUnlockMailboxDueToOutstandingMoveRequest", "", false, false, Strings.ResourceManager, new object[]
			{
				mailboxId,
				moveStatus
			});
		}

		// Token: 0x06008E2B RID: 36395 RVA: 0x00249800 File Offset: 0x00247A00
		public static LocalizedString ConfirmationMessageRemoveProvisioningRequest(string fileName)
		{
			return new LocalizedString("ConfirmationMessageRemoveProvisioningRequest", "ExAA84B4", false, true, Strings.ResourceManager, new object[]
			{
				fileName
			});
		}

		// Token: 0x06008E2C RID: 36396 RVA: 0x00249830 File Offset: 0x00247A30
		public static LocalizedString ErrorRoleEntryNotUnique(string roleId, string entryName)
		{
			return new LocalizedString("ErrorRoleEntryNotUnique", "Ex1A1B5D", false, true, Strings.ResourceManager, new object[]
			{
				roleId,
				entryName
			});
		}

		// Token: 0x17002CE9 RID: 11497
		// (get) Token: 0x06008E2D RID: 36397 RVA: 0x00249863 File Offset: 0x00247A63
		public static LocalizedString FrontEndTransportServiceDescription
		{
			get
			{
				return new LocalizedString("FrontEndTransportServiceDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002CEA RID: 11498
		// (get) Token: 0x06008E2E RID: 36398 RVA: 0x00249881 File Offset: 0x00247A81
		public static LocalizedString InvalidPageSize
		{
			get
			{
				return new LocalizedString("InvalidPageSize", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002CEB RID: 11499
		// (get) Token: 0x06008E2F RID: 36399 RVA: 0x0024989F File Offset: 0x00247A9F
		public static LocalizedString SetupProgressCreateApplicationMailDestinationsContainer
		{
			get
			{
				return new LocalizedString("SetupProgressCreateApplicationMailDestinationsContainer", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008E30 RID: 36400 RVA: 0x002498C0 File Offset: 0x00247AC0
		public static LocalizedString ErrorMultipleSystemFolderTagConfliction(string policyId, string type)
		{
			return new LocalizedString("ErrorMultipleSystemFolderTagConfliction", "", false, false, Strings.ResourceManager, new object[]
			{
				policyId,
				type
			});
		}

		// Token: 0x17002CEC RID: 11500
		// (get) Token: 0x06008E31 RID: 36401 RVA: 0x002498F3 File Offset: 0x00247AF3
		public static LocalizedString ProvisioningRequestAlreadyCanceling
		{
			get
			{
				return new LocalizedString("ProvisioningRequestAlreadyCanceling", "ExF32A67", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008E32 RID: 36402 RVA: 0x00249914 File Offset: 0x00247B14
		public static LocalizedString ConfirmationMessageNewWebServicesVirtualDirectory(string Server)
		{
			return new LocalizedString("ConfirmationMessageNewWebServicesVirtualDirectory", "Ex067979", false, true, Strings.ResourceManager, new object[]
			{
				Server
			});
		}

		// Token: 0x06008E33 RID: 36403 RVA: 0x00249944 File Offset: 0x00247B44
		public static LocalizedString MaximumWaitTimeSetTo(string time)
		{
			return new LocalizedString("MaximumWaitTimeSetTo", "Ex6ADAC9", false, true, Strings.ResourceManager, new object[]
			{
				time
			});
		}

		// Token: 0x17002CED RID: 11501
		// (get) Token: 0x06008E34 RID: 36404 RVA: 0x00249973 File Offset: 0x00247B73
		public static LocalizedString SetupProgressStoppingCredentialService
		{
			get
			{
				return new LocalizedString("SetupProgressStoppingCredentialService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008E35 RID: 36405 RVA: 0x00249994 File Offset: 0x00247B94
		public static LocalizedString ConfirmationMessageSetDatabaseAvailabilityGroup(string Server)
		{
			return new LocalizedString("ConfirmationMessageSetDatabaseAvailabilityGroup", "ExC20D3C", false, true, Strings.ResourceManager, new object[]
			{
				Server
			});
		}

		// Token: 0x06008E36 RID: 36406 RVA: 0x002499C4 File Offset: 0x00247BC4
		public static LocalizedString DagNetworkHasMultiNicForNode(string logicalNetName, string nodeName)
		{
			return new LocalizedString("DagNetworkHasMultiNicForNode", "", false, false, Strings.ResourceManager, new object[]
			{
				logicalNetName,
				nodeName
			});
		}

		// Token: 0x06008E37 RID: 36407 RVA: 0x002499F8 File Offset: 0x00247BF8
		public static LocalizedString RemainingTimeForServiceWait(string time)
		{
			return new LocalizedString("RemainingTimeForServiceWait", "Ex95E883", false, true, Strings.ResourceManager, new object[]
			{
				time
			});
		}

		// Token: 0x17002CEE RID: 11502
		// (get) Token: 0x06008E38 RID: 36408 RVA: 0x00249A27 File Offset: 0x00247C27
		public static LocalizedString SetupProgressImapEnabled
		{
			get
			{
				return new LocalizedString("SetupProgressImapEnabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008E39 RID: 36409 RVA: 0x00249A48 File Offset: 0x00247C48
		public static LocalizedString ConfirmationMessageNewUMMailboxPolicy(string Name, string UMDialPlan)
		{
			return new LocalizedString("ConfirmationMessageNewUMMailboxPolicy", "Ex612BCF", false, true, Strings.ResourceManager, new object[]
			{
				Name,
				UMDialPlan
			});
		}

		// Token: 0x06008E3A RID: 36410 RVA: 0x00249A7C File Offset: 0x00247C7C
		public static LocalizedString GetOwaVersionException(string owaDllPath)
		{
			return new LocalizedString("GetOwaVersionException", "Ex0BF3D1", false, true, Strings.ResourceManager, new object[]
			{
				owaDllPath
			});
		}

		// Token: 0x06008E3B RID: 36411 RVA: 0x00249AAC File Offset: 0x00247CAC
		public static LocalizedString ErrorTargetServicePlanDifferent(string oldservicePlan, string oldtargetservicePlan, string newtargetservicePlan)
		{
			return new LocalizedString("ErrorTargetServicePlanDifferent", "Ex6D5F78", false, true, Strings.ResourceManager, new object[]
			{
				oldservicePlan,
				oldtargetservicePlan,
				newtargetservicePlan
			});
		}

		// Token: 0x17002CEF RID: 11503
		// (get) Token: 0x06008E3C RID: 36412 RVA: 0x00249AE3 File Offset: 0x00247CE3
		public static LocalizedString ProgressValidation
		{
			get
			{
				return new LocalizedString("ProgressValidation", "ExA7D4A1", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008E3D RID: 36413 RVA: 0x00249B04 File Offset: 0x00247D04
		public static LocalizedString DagTaskUpdatingMasterServerOnDatabase(string databaseName, string newMasterServer)
		{
			return new LocalizedString("DagTaskUpdatingMasterServerOnDatabase", "", false, false, Strings.ResourceManager, new object[]
			{
				databaseName,
				newMasterServer
			});
		}

		// Token: 0x17002CF0 RID: 11504
		// (get) Token: 0x06008E3E RID: 36414 RVA: 0x00249B37 File Offset: 0x00247D37
		public static LocalizedString ErrorRecipientContainerInvalidOrNotExists
		{
			get
			{
				return new LocalizedString("ErrorRecipientContainerInvalidOrNotExists", "ExFCCEFE", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008E3F RID: 36415 RVA: 0x00249B58 File Offset: 0x00247D58
		public static LocalizedString ConfirmationMessageNewRecipientEnforcementProvisioningPolicy(string Identity)
		{
			return new LocalizedString("ConfirmationMessageNewRecipientEnforcementProvisioningPolicy", "ExB1FA50", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x06008E40 RID: 36416 RVA: 0x00249B88 File Offset: 0x00247D88
		public static LocalizedString ErrorUnableToDetermineTargetDatabase(string identity)
		{
			return new LocalizedString("ErrorUnableToDetermineTargetDatabase", "ExE34781", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x06008E41 RID: 36417 RVA: 0x00249BB8 File Offset: 0x00247DB8
		public static LocalizedString ErrorLinkedGroupInTheCurrentForest(string forest)
		{
			return new LocalizedString("ErrorLinkedGroupInTheCurrentForest", "ExD55859", false, true, Strings.ResourceManager, new object[]
			{
				forest
			});
		}

		// Token: 0x06008E42 RID: 36418 RVA: 0x00249BE8 File Offset: 0x00247DE8
		public static LocalizedString ConfirmationMessageUpdateSafeList(string Identity)
		{
			return new LocalizedString("ConfirmationMessageUpdateSafeList", "Ex385BCC", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x17002CF1 RID: 11505
		// (get) Token: 0x06008E43 RID: 36419 RVA: 0x00249C17 File Offset: 0x00247E17
		public static LocalizedString DomainsNotFoundException
		{
			get
			{
				return new LocalizedString("DomainsNotFoundException", "Ex4D7487", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008E44 RID: 36420 RVA: 0x00249C38 File Offset: 0x00247E38
		public static LocalizedString SeederCancelCalled(string dbCopy)
		{
			return new LocalizedString("SeederCancelCalled", "", false, false, Strings.ResourceManager, new object[]
			{
				dbCopy
			});
		}

		// Token: 0x06008E45 RID: 36421 RVA: 0x00249C68 File Offset: 0x00247E68
		public static LocalizedString CannotOperateOnAcceptedDomainPendingRemoval(string domain)
		{
			return new LocalizedString("CannotOperateOnAcceptedDomainPendingRemoval", "ExCD3184", false, true, Strings.ResourceManager, new object[]
			{
				domain
			});
		}

		// Token: 0x17002CF2 RID: 11506
		// (get) Token: 0x06008E46 RID: 36422 RVA: 0x00249C97 File Offset: 0x00247E97
		public static LocalizedString SetupProgressCreateMoveToArchiveRetentionPolicyTag
		{
			get
			{
				return new LocalizedString("SetupProgressCreateMoveToArchiveRetentionPolicyTag", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008E47 RID: 36423 RVA: 0x00249CB8 File Offset: 0x00247EB8
		public static LocalizedString VerboseSyncMailboxWithDS(string id, string mdb, string server)
		{
			return new LocalizedString("VerboseSyncMailboxWithDS", "Ex76C3FB", false, true, Strings.ResourceManager, new object[]
			{
				id,
				mdb,
				server
			});
		}

		// Token: 0x06008E48 RID: 36424 RVA: 0x00249CF0 File Offset: 0x00247EF0
		public static LocalizedString ErrorDisableMailboxWithDiscoveryHold(string mbxId)
		{
			return new LocalizedString("ErrorDisableMailboxWithDiscoveryHold", "", false, false, Strings.ResourceManager, new object[]
			{
				mbxId
			});
		}

		// Token: 0x17002CF3 RID: 11507
		// (get) Token: 0x06008E49 RID: 36425 RVA: 0x00249D1F File Offset: 0x00247F1F
		public static LocalizedString FailedToFindFederationTrust
		{
			get
			{
				return new LocalizedString("FailedToFindFederationTrust", "Ex744A76", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008E4A RID: 36426 RVA: 0x00249D40 File Offset: 0x00247F40
		public static LocalizedString CouldNotUpgradeAllContentSettings(string managedFolder)
		{
			return new LocalizedString("CouldNotUpgradeAllContentSettings", "Ex7150D9", false, true, Strings.ResourceManager, new object[]
			{
				managedFolder
			});
		}

		// Token: 0x17002CF4 RID: 11508
		// (get) Token: 0x06008E4B RID: 36427 RVA: 0x00249D6F File Offset: 0x00247F6F
		public static LocalizedString MailboxConnectScenario
		{
			get
			{
				return new LocalizedString("MailboxConnectScenario", "Ex474555", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002CF5 RID: 11509
		// (get) Token: 0x06008E4C RID: 36428 RVA: 0x00249D8D File Offset: 0x00247F8D
		public static LocalizedString ElcUserConfigurationConfigurationItemNotAvailable
		{
			get
			{
				return new LocalizedString("ElcUserConfigurationConfigurationItemNotAvailable", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008E4D RID: 36429 RVA: 0x00249DAC File Offset: 0x00247FAC
		public static LocalizedString ConfirmationMessageEnableMailUser(string Identity, string ExternalEmailAddress)
		{
			return new LocalizedString("ConfirmationMessageEnableMailUser", "ExE64235", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				ExternalEmailAddress
			});
		}

		// Token: 0x06008E4E RID: 36430 RVA: 0x00249DE0 File Offset: 0x00247FE0
		public static LocalizedString MissingPropertyInFederationTrust(string propertyName)
		{
			return new LocalizedString("MissingPropertyInFederationTrust", "Ex9F715F", false, true, Strings.ResourceManager, new object[]
			{
				propertyName
			});
		}

		// Token: 0x06008E4F RID: 36431 RVA: 0x00249E10 File Offset: 0x00248010
		public static LocalizedString CookieAndParameterServiceInstanceIdMismatch(string cookieServiceInstanceId, string paramterServiceInstanceId)
		{
			return new LocalizedString("CookieAndParameterServiceInstanceIdMismatch", "", false, false, Strings.ResourceManager, new object[]
			{
				cookieServiceInstanceId,
				paramterServiceInstanceId
			});
		}

		// Token: 0x06008E50 RID: 36432 RVA: 0x00249E44 File Offset: 0x00248044
		public static LocalizedString FormsAuthenticationMarkPathErrorUnknownOpenError(string metabasePath)
		{
			return new LocalizedString("FormsAuthenticationMarkPathErrorUnknownOpenError", "Ex71B233", false, true, Strings.ResourceManager, new object[]
			{
				metabasePath
			});
		}

		// Token: 0x06008E51 RID: 36433 RVA: 0x00249E74 File Offset: 0x00248074
		public static LocalizedString ErrorUserMissingADData(string identity)
		{
			return new LocalizedString("ErrorUserMissingADData", "ExC348DC", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x17002CF6 RID: 11510
		// (get) Token: 0x06008E52 RID: 36434 RVA: 0x00249EA3 File Offset: 0x002480A3
		public static LocalizedString OutlookProtectionRuleInvalidPriority
		{
			get
			{
				return new LocalizedString("OutlookProtectionRuleInvalidPriority", "Ex6A1C63", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008E53 RID: 36435 RVA: 0x00249EC4 File Offset: 0x002480C4
		public static LocalizedString ErrorExecutingUserOutOfTargetOrg(string cmdletName)
		{
			return new LocalizedString("ErrorExecutingUserOutOfTargetOrg", "", false, false, Strings.ResourceManager, new object[]
			{
				cmdletName
			});
		}

		// Token: 0x06008E54 RID: 36436 RVA: 0x00249EF4 File Offset: 0x002480F4
		public static LocalizedString ErrorUMPolicyNotFound(string name, string globalCatlog)
		{
			return new LocalizedString("ErrorUMPolicyNotFound", "Ex3C3C6C", false, true, Strings.ResourceManager, new object[]
			{
				name,
				globalCatlog
			});
		}

		// Token: 0x06008E55 RID: 36437 RVA: 0x00249F28 File Offset: 0x00248128
		public static LocalizedString ErrorCannotRemoveLastOrgAdmin(string id)
		{
			return new LocalizedString("ErrorCannotRemoveLastOrgAdmin", "Ex33D730", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x17002CF7 RID: 11511
		// (get) Token: 0x06008E56 RID: 36438 RVA: 0x00249F57 File Offset: 0x00248157
		public static LocalizedString CouldNotFindEWSStandardAuthBindingTransportElement
		{
			get
			{
				return new LocalizedString("CouldNotFindEWSStandardAuthBindingTransportElement", "Ex8D1E98", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002CF8 RID: 11512
		// (get) Token: 0x06008E57 RID: 36439 RVA: 0x00249F75 File Offset: 0x00248175
		public static LocalizedString SetupProgressCreateArbitrationMailboxRetentionPolicy
		{
			get
			{
				return new LocalizedString("SetupProgressCreateArbitrationMailboxRetentionPolicy", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008E58 RID: 36440 RVA: 0x00249F94 File Offset: 0x00248194
		public static LocalizedString ConfirmSearchMailboxAuditLogTask(string org)
		{
			return new LocalizedString("ConfirmSearchMailboxAuditLogTask", "ExCB2D88", false, true, Strings.ResourceManager, new object[]
			{
				org
			});
		}

		// Token: 0x17002CF9 RID: 11513
		// (get) Token: 0x06008E59 RID: 36441 RVA: 0x00249FC3 File Offset: 0x002481C3
		public static LocalizedString AddressRewriteIdentityNotFound
		{
			get
			{
				return new LocalizedString("AddressRewriteIdentityNotFound", "Ex70496A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008E5A RID: 36442 RVA: 0x00249FE4 File Offset: 0x002481E4
		public static LocalizedString WarningUMCallAnsweringRuleInError(string ruleName)
		{
			return new LocalizedString("WarningUMCallAnsweringRuleInError", "", false, false, Strings.ResourceManager, new object[]
			{
				ruleName
			});
		}

		// Token: 0x06008E5B RID: 36443 RVA: 0x0024A014 File Offset: 0x00248214
		public static LocalizedString WarningInitLegacyAlreadyDone(string dom)
		{
			return new LocalizedString("WarningInitLegacyAlreadyDone", "ExD10B5D", false, true, Strings.ResourceManager, new object[]
			{
				dom
			});
		}

		// Token: 0x06008E5C RID: 36444 RVA: 0x0024A044 File Offset: 0x00248244
		public static LocalizedString ConfirmationMessageRemoveMailboxPermanent(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveMailboxPermanent", "Ex58418B", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x06008E5D RID: 36445 RVA: 0x0024A074 File Offset: 0x00248274
		public static LocalizedString ConfirmationMessageEnableOutlookProtectionRule(string identity)
		{
			return new LocalizedString("ConfirmationMessageEnableOutlookProtectionRule", "Ex8F863C", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x17002CFA RID: 11514
		// (get) Token: 0x06008E5E RID: 36446 RVA: 0x0024A0A3 File Offset: 0x002482A3
		public static LocalizedString ErrorFailedToGetRacAndClcTenant
		{
			get
			{
				return new LocalizedString("ErrorFailedToGetRacAndClcTenant", "ExFF8225", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008E5F RID: 36447 RVA: 0x0024A0C4 File Offset: 0x002482C4
		public static LocalizedString ReadingE14ServerRoles(string serverName)
		{
			return new LocalizedString("ReadingE14ServerRoles", "Ex1673A8", false, true, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		// Token: 0x17002CFB RID: 11515
		// (get) Token: 0x06008E60 RID: 36448 RVA: 0x0024A0F3 File Offset: 0x002482F3
		public static LocalizedString RemoveCertificateFederation
		{
			get
			{
				return new LocalizedString("RemoveCertificateFederation", "Ex6800D2", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008E61 RID: 36449 RVA: 0x0024A114 File Offset: 0x00248314
		public static LocalizedString RpcHttpOldOSServers(string servers)
		{
			return new LocalizedString("RpcHttpOldOSServers", "Ex9283BC", false, true, Strings.ResourceManager, new object[]
			{
				servers
			});
		}

		// Token: 0x17002CFC RID: 11516
		// (get) Token: 0x06008E62 RID: 36450 RVA: 0x0024A143 File Offset: 0x00248343
		public static LocalizedString ErrorWMAFileTooBig
		{
			get
			{
				return new LocalizedString("ErrorWMAFileTooBig", "Ex734A61", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008E63 RID: 36451 RVA: 0x0024A164 File Offset: 0x00248364
		public static LocalizedString ConfirmationMessageUpdateDatabaseCopy(string dbCopy)
		{
			return new LocalizedString("ConfirmationMessageUpdateDatabaseCopy", "ExB227AF", false, true, Strings.ResourceManager, new object[]
			{
				dbCopy
			});
		}

		// Token: 0x17002CFD RID: 11517
		// (get) Token: 0x06008E64 RID: 36452 RVA: 0x0024A193 File Offset: 0x00248393
		public static LocalizedString ADAttributeCustomAttribute3
		{
			get
			{
				return new LocalizedString("ADAttributeCustomAttribute3", "Ex41C14F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008E65 RID: 36453 RVA: 0x0024A1B4 File Offset: 0x002483B4
		public static LocalizedString ErrorAggregatedMailboxNotFound(Guid aggregatedMailboxGuid, string identity)
		{
			return new LocalizedString("ErrorAggregatedMailboxNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				aggregatedMailboxGuid,
				identity
			});
		}

		// Token: 0x06008E66 RID: 36454 RVA: 0x0024A1EC File Offset: 0x002483EC
		public static LocalizedString ConfirmationMessageSetRecipientEnforcementProvisioningPolicy(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetRecipientEnforcementProvisioningPolicy", "Ex2B8574", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x06008E67 RID: 36455 RVA: 0x0024A21C File Offset: 0x0024841C
		public static LocalizedString TenantNotificationDebugLoadLibraryFailed(string file, int error)
		{
			return new LocalizedString("TenantNotificationDebugLoadLibraryFailed", "ExE63926", false, true, Strings.ResourceManager, new object[]
			{
				file,
				error
			});
		}

		// Token: 0x06008E68 RID: 36456 RVA: 0x0024A254 File Offset: 0x00248454
		public static LocalizedString ErrorWorkloadManagementPolicyNotFound(string id)
		{
			return new LocalizedString("ErrorWorkloadManagementPolicyNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x06008E69 RID: 36457 RVA: 0x0024A284 File Offset: 0x00248484
		public static LocalizedString ConfirmationMessageNewMailboxAuditLogSearch(string org)
		{
			return new LocalizedString("ConfirmationMessageNewMailboxAuditLogSearch", "Ex3C6A20", false, true, Strings.ResourceManager, new object[]
			{
				org
			});
		}

		// Token: 0x06008E6A RID: 36458 RVA: 0x0024A2B4 File Offset: 0x002484B4
		public static LocalizedString CannotRemoveMailContactCatchAllRecipient(string domain)
		{
			return new LocalizedString("CannotRemoveMailContactCatchAllRecipient", "", false, false, Strings.ResourceManager, new object[]
			{
				domain
			});
		}

		// Token: 0x17002CFE RID: 11518
		// (get) Token: 0x06008E6B RID: 36459 RVA: 0x0024A2E3 File Offset: 0x002484E3
		public static LocalizedString IMSAdminHelperGetDataPathsCouldNotAllocateException
		{
			get
			{
				return new LocalizedString("IMSAdminHelperGetDataPathsCouldNotAllocateException", "ExE9B7B4", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008E6C RID: 36460 RVA: 0x0024A304 File Offset: 0x00248504
		public static LocalizedString DagFswUnableToBindWitnessDirectoryException(string host)
		{
			return new LocalizedString("DagFswUnableToBindWitnessDirectoryException", "", false, false, Strings.ResourceManager, new object[]
			{
				host
			});
		}

		// Token: 0x06008E6D RID: 36461 RVA: 0x0024A334 File Offset: 0x00248534
		public static LocalizedString InterceptorErrorCustomTextInvalid(string value)
		{
			return new LocalizedString("InterceptorErrorCustomTextInvalid", "", false, false, Strings.ResourceManager, new object[]
			{
				value
			});
		}

		// Token: 0x06008E6E RID: 36462 RVA: 0x0024A364 File Offset: 0x00248564
		public static LocalizedString VerboseDeleteDatabaseCatalogFiles(string server, string oldDir)
		{
			return new LocalizedString("VerboseDeleteDatabaseCatalogFiles", "Ex639E2B", false, true, Strings.ResourceManager, new object[]
			{
				server,
				oldDir
			});
		}

		// Token: 0x06008E6F RID: 36463 RVA: 0x0024A398 File Offset: 0x00248598
		public static LocalizedString ErrorRequestQueueIsTooLong(string requestQueueName, int currentQueueLength)
		{
			return new LocalizedString("ErrorRequestQueueIsTooLong", "ExC83239", false, true, Strings.ResourceManager, new object[]
			{
				requestQueueName,
				currentQueueLength
			});
		}

		// Token: 0x06008E70 RID: 36464 RVA: 0x0024A3D0 File Offset: 0x002485D0
		public static LocalizedString ConfirmationMessageNewTransportRule(string Name)
		{
			return new LocalizedString("ConfirmationMessageNewTransportRule", "ExEE2BAE", false, true, Strings.ResourceManager, new object[]
			{
				Name
			});
		}

		// Token: 0x06008E71 RID: 36465 RVA: 0x0024A400 File Offset: 0x00248600
		public static LocalizedString ConfirmationMessageRemoveMigrationBatchWithPendingItems(string batchName, int pendingItemCount)
		{
			return new LocalizedString("ConfirmationMessageRemoveMigrationBatchWithPendingItems", "", false, false, Strings.ResourceManager, new object[]
			{
				batchName,
				pendingItemCount
			});
		}

		// Token: 0x17002CFF RID: 11519
		// (get) Token: 0x06008E72 RID: 36466 RVA: 0x0024A438 File Offset: 0x00248638
		public static LocalizedString CasHealthMustSpecifyCas
		{
			get
			{
				return new LocalizedString("CasHealthMustSpecifyCas", "Ex7F9AD2", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008E73 RID: 36467 RVA: 0x0024A458 File Offset: 0x00248658
		public static LocalizedString ErrorPrimaryDatabaseLocationNotFound(string database)
		{
			return new LocalizedString("ErrorPrimaryDatabaseLocationNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				database
			});
		}

		// Token: 0x17002D00 RID: 11520
		// (get) Token: 0x06008E74 RID: 36468 RVA: 0x0024A487 File Offset: 0x00248687
		public static LocalizedString ConfirmationMessageSetSupervisionPolicy
		{
			get
			{
				return new LocalizedString("ConfirmationMessageSetSupervisionPolicy", "Ex744C25", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002D01 RID: 11521
		// (get) Token: 0x06008E75 RID: 36469 RVA: 0x0024A4A5 File Offset: 0x002486A5
		public static LocalizedString ErrorSetMailboxLitigationHoldDuration
		{
			get
			{
				return new LocalizedString("ErrorSetMailboxLitigationHoldDuration", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008E76 RID: 36470 RVA: 0x0024A4C4 File Offset: 0x002486C4
		public static LocalizedString TestSearchSucceeded(string mdb)
		{
			return new LocalizedString("TestSearchSucceeded", "Ex46F09A", false, true, Strings.ResourceManager, new object[]
			{
				mdb
			});
		}

		// Token: 0x06008E77 RID: 36471 RVA: 0x0024A4F4 File Offset: 0x002486F4
		public static LocalizedString ClassificationRuleCollectionInvalidLangCodesInRulePackDescriptor(string invalidLangCodes)
		{
			return new LocalizedString("ClassificationRuleCollectionInvalidLangCodesInRulePackDescriptor", "", false, false, Strings.ResourceManager, new object[]
			{
				invalidLangCodes
			});
		}

		// Token: 0x17002D02 RID: 11522
		// (get) Token: 0x06008E78 RID: 36472 RVA: 0x0024A523 File Offset: 0x00248723
		public static LocalizedString AddressBookServiceDisplayName
		{
			get
			{
				return new LocalizedString("AddressBookServiceDisplayName", "ExFBF71D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008E79 RID: 36473 RVA: 0x0024A544 File Offset: 0x00248744
		public static LocalizedString ErrorTransportRuleLimitTooSmall(int newValue, int ruleCount)
		{
			return new LocalizedString("ErrorTransportRuleLimitTooSmall", "", false, false, Strings.ResourceManager, new object[]
			{
				newValue,
				ruleCount
			});
		}

		// Token: 0x06008E7A RID: 36474 RVA: 0x0024A584 File Offset: 0x00248784
		public static LocalizedString NoMdbForOperation(string serverName)
		{
			return new LocalizedString("NoMdbForOperation", "Ex7010D6", false, true, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		// Token: 0x06008E7B RID: 36475 RVA: 0x0024A5B4 File Offset: 0x002487B4
		public static LocalizedString ConfirmationRemoveAccountPartitionWithTenants(string partitionName)
		{
			return new LocalizedString("ConfirmationRemoveAccountPartitionWithTenants", "", false, false, Strings.ResourceManager, new object[]
			{
				partitionName
			});
		}

		// Token: 0x17002D03 RID: 11523
		// (get) Token: 0x06008E7C RID: 36476 RVA: 0x0024A5E3 File Offset: 0x002487E3
		public static LocalizedString MigrationNoLargeItemLimitForLocalBatches
		{
			get
			{
				return new LocalizedString("MigrationNoLargeItemLimitForLocalBatches", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002D04 RID: 11524
		// (get) Token: 0x06008E7D RID: 36477 RVA: 0x0024A601 File Offset: 0x00248801
		public static LocalizedString SetupProgressConfigureAntispamObjects
		{
			get
			{
				return new LocalizedString("SetupProgressConfigureAntispamObjects", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008E7E RID: 36478 RVA: 0x0024A620 File Offset: 0x00248820
		public static LocalizedString ConfirmationMessageNewOWAMailboxPolicy(string Name)
		{
			return new LocalizedString("ConfirmationMessageNewOWAMailboxPolicy", "Ex797F63", false, true, Strings.ResourceManager, new object[]
			{
				Name
			});
		}

		// Token: 0x06008E7F RID: 36479 RVA: 0x0024A650 File Offset: 0x00248850
		public static LocalizedString ErrorServerNotUnique(object idStringValue)
		{
			return new LocalizedString("ErrorServerNotUnique", "Ex43D074", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		// Token: 0x17002D05 RID: 11525
		// (get) Token: 0x06008E80 RID: 36480 RVA: 0x0024A67F File Offset: 0x0024887F
		public static LocalizedString ADAttributeDepartment
		{
			get
			{
				return new LocalizedString("ADAttributeDepartment", "ExD11E97", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008E81 RID: 36481 RVA: 0x0024A6A0 File Offset: 0x002488A0
		public static LocalizedString ErrorRemovedMailboxDoesNotHaveDatabase(string removedMailbox)
		{
			return new LocalizedString("ErrorRemovedMailboxDoesNotHaveDatabase", "Ex4522BD", false, true, Strings.ResourceManager, new object[]
			{
				removedMailbox
			});
		}

		// Token: 0x06008E82 RID: 36482 RVA: 0x0024A6D0 File Offset: 0x002488D0
		public static LocalizedString ErrorGrantingEraFullAccessOnMailbox(string mailbox, string errorMsg)
		{
			return new LocalizedString("ErrorGrantingEraFullAccessOnMailbox", "Ex01F252", false, true, Strings.ResourceManager, new object[]
			{
				mailbox,
				errorMsg
			});
		}

		// Token: 0x06008E83 RID: 36483 RVA: 0x0024A704 File Offset: 0x00248904
		public static LocalizedString CanceledMoveHistoryEntry(string timestamp, string dbName)
		{
			return new LocalizedString("CanceledMoveHistoryEntry", "ExD2377E", false, true, Strings.ResourceManager, new object[]
			{
				timestamp,
				dbName
			});
		}

		// Token: 0x06008E84 RID: 36484 RVA: 0x0024A738 File Offset: 0x00248938
		public static LocalizedString DagTaskAddClusterNodeUnexpectedlyFailedException(string nodeName, string dagName)
		{
			return new LocalizedString("DagTaskAddClusterNodeUnexpectedlyFailedException", "", false, false, Strings.ResourceManager, new object[]
			{
				nodeName,
				dagName
			});
		}

		// Token: 0x17002D06 RID: 11526
		// (get) Token: 0x06008E85 RID: 36485 RVA: 0x0024A76B File Offset: 0x0024896B
		public static LocalizedString ErrorFreeBusyResponsibility
		{
			get
			{
				return new LocalizedString("ErrorFreeBusyResponsibility", "Ex6D7183", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002D07 RID: 11527
		// (get) Token: 0x06008E86 RID: 36486 RVA: 0x0024A789 File Offset: 0x00248989
		public static LocalizedString SetupComponentCommonGlobalConfig
		{
			get
			{
				return new LocalizedString("SetupComponentCommonGlobalConfig", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008E87 RID: 36487 RVA: 0x0024A7A8 File Offset: 0x002489A8
		public static LocalizedString OnlineIsIntegRemoveJobException(string database, string job, string failure)
		{
			return new LocalizedString("OnlineIsIntegRemoveJobException", "", false, false, Strings.ResourceManager, new object[]
			{
				database,
				job,
				failure
			});
		}

		// Token: 0x06008E88 RID: 36488 RVA: 0x0024A7E0 File Offset: 0x002489E0
		public static LocalizedString DurationShouldBeGreaterThanZero(string duration)
		{
			return new LocalizedString("DurationShouldBeGreaterThanZero", "", false, false, Strings.ResourceManager, new object[]
			{
				duration
			});
		}

		// Token: 0x06008E89 RID: 36489 RVA: 0x0024A810 File Offset: 0x00248A10
		public static LocalizedString TopologyServiceSuccess(string operation)
		{
			return new LocalizedString("TopologyServiceSuccess", "", false, false, Strings.ResourceManager, new object[]
			{
				operation
			});
		}

		// Token: 0x06008E8A RID: 36490 RVA: 0x0024A840 File Offset: 0x00248A40
		public static LocalizedString CasHealthOwaExtraAuthType(string schemeName)
		{
			return new LocalizedString("CasHealthOwaExtraAuthType", "Ex106063", false, true, Strings.ResourceManager, new object[]
			{
				schemeName
			});
		}

		// Token: 0x06008E8B RID: 36491 RVA: 0x0024A870 File Offset: 0x00248A70
		public static LocalizedString NonExistantDialPlan(object idString)
		{
			return new LocalizedString("NonExistantDialPlan", "ExCCF330", false, true, Strings.ResourceManager, new object[]
			{
				idString
			});
		}

		// Token: 0x17002D08 RID: 11528
		// (get) Token: 0x06008E8C RID: 36492 RVA: 0x0024A89F File Offset: 0x00248A9F
		public static LocalizedString MetabaseSetPropertiesFailure
		{
			get
			{
				return new LocalizedString("MetabaseSetPropertiesFailure", "ExAA0DE7", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008E8D RID: 36493 RVA: 0x0024A8C0 File Offset: 0x00248AC0
		public static LocalizedString CertificateNotFound(string thumbprint)
		{
			return new LocalizedString("CertificateNotFound", "ExE0274A", false, true, Strings.ResourceManager, new object[]
			{
				thumbprint
			});
		}

		// Token: 0x06008E8E RID: 36494 RVA: 0x0024A8F0 File Offset: 0x00248AF0
		public static LocalizedString StagedMigrationRequiresValidTargetDomain(string tenantName)
		{
			return new LocalizedString("StagedMigrationRequiresValidTargetDomain", "Ex072F28", false, true, Strings.ResourceManager, new object[]
			{
				tenantName
			});
		}

		// Token: 0x17002D09 RID: 11529
		// (get) Token: 0x06008E8F RID: 36495 RVA: 0x0024A91F File Offset: 0x00248B1F
		public static LocalizedString ErrorLinkedMailboxesAreNotSupported
		{
			get
			{
				return new LocalizedString("ErrorLinkedMailboxesAreNotSupported", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002D0A RID: 11530
		// (get) Token: 0x06008E90 RID: 36496 RVA: 0x0024A93D File Offset: 0x00248B3D
		public static LocalizedString ExchangeSettingsEnableUsage
		{
			get
			{
				return new LocalizedString("ExchangeSettingsEnableUsage", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008E91 RID: 36497 RVA: 0x0024A95C File Offset: 0x00248B5C
		public static LocalizedString WarningClusterGroupNotFormed(string identity)
		{
			return new LocalizedString("WarningClusterGroupNotFormed", "Ex4E3BDC", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x06008E92 RID: 36498 RVA: 0x0024A98C File Offset: 0x00248B8C
		public static LocalizedString WaveDirectoryNotFoundException(string p1)
		{
			return new LocalizedString("WaveDirectoryNotFoundException", "Ex6CA273", false, true, Strings.ResourceManager, new object[]
			{
				p1
			});
		}

		// Token: 0x17002D0B RID: 11531
		// (get) Token: 0x06008E93 RID: 36499 RVA: 0x0024A9BB File Offset: 0x00248BBB
		public static LocalizedString DebugStartUpnUniquenessCheck
		{
			get
			{
				return new LocalizedString("DebugStartUpnUniquenessCheck", "Ex07F71A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002D0C RID: 11532
		// (get) Token: 0x06008E94 RID: 36500 RVA: 0x0024A9D9 File Offset: 0x00248BD9
		public static LocalizedString MigrationCannotBeCompleted
		{
			get
			{
				return new LocalizedString("MigrationCannotBeCompleted", "Ex62FE51", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002D0D RID: 11533
		// (get) Token: 0x06008E95 RID: 36501 RVA: 0x0024A9F7 File Offset: 0x00248BF7
		public static LocalizedString IsapiDLLPathNotFoundException
		{
			get
			{
				return new LocalizedString("IsapiDLLPathNotFoundException", "Ex2BB60A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008E96 RID: 36502 RVA: 0x0024AA18 File Offset: 0x00248C18
		public static LocalizedString CasHealthSpecifiedMailboxServerVersionNotMatched(string cmdletName, int mailboxVersion)
		{
			return new LocalizedString("CasHealthSpecifiedMailboxServerVersionNotMatched", "ExACA7A5", false, true, Strings.ResourceManager, new object[]
			{
				cmdletName,
				mailboxVersion
			});
		}

		// Token: 0x06008E97 RID: 36503 RVA: 0x0024AA50 File Offset: 0x00248C50
		public static LocalizedString ErrorOabVirtualDirectoryIISObjectAlreadyExists(string vdir, string website, string serverName)
		{
			return new LocalizedString("ErrorOabVirtualDirectoryIISObjectAlreadyExists", "Ex397675", false, true, Strings.ResourceManager, new object[]
			{
				vdir,
				website,
				serverName
			});
		}

		// Token: 0x06008E98 RID: 36504 RVA: 0x0024AA88 File Offset: 0x00248C88
		public static LocalizedString RunConfigUpdaterRpcFailedWarning(string server, string database, string error)
		{
			return new LocalizedString("RunConfigUpdaterRpcFailedWarning", "Ex9F2794", false, true, Strings.ResourceManager, new object[]
			{
				server,
				database,
				error
			});
		}

		// Token: 0x17002D0E RID: 11534
		// (get) Token: 0x06008E99 RID: 36505 RVA: 0x0024AABF File Offset: 0x00248CBF
		public static LocalizedString MtrtMessageFail
		{
			get
			{
				return new LocalizedString("MtrtMessageFail", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008E9A RID: 36506 RVA: 0x0024AAE0 File Offset: 0x00248CE0
		public static LocalizedString CasHealthCouldNotLogUser(string userName, string mailboxServerName, string scriptName, string errorString)
		{
			return new LocalizedString("CasHealthCouldNotLogUser", "Ex3009B2", false, true, Strings.ResourceManager, new object[]
			{
				userName,
				mailboxServerName,
				scriptName,
				errorString
			});
		}

		// Token: 0x06008E9B RID: 36507 RVA: 0x0024AB1C File Offset: 0x00248D1C
		public static LocalizedString DagTaskAddedServerToDag(string serverName, string dagName)
		{
			return new LocalizedString("DagTaskAddedServerToDag", "", false, false, Strings.ResourceManager, new object[]
			{
				serverName,
				dagName
			});
		}

		// Token: 0x06008E9C RID: 36508 RVA: 0x0024AB50 File Offset: 0x00248D50
		public static LocalizedString ErrorInvalidAuthenticationTypeValue(string authType)
		{
			return new LocalizedString("ErrorInvalidAuthenticationTypeValue", "ExA79FA1", false, true, Strings.ResourceManager, new object[]
			{
				authType
			});
		}

		// Token: 0x06008E9D RID: 36509 RVA: 0x0024AB80 File Offset: 0x00248D80
		public static LocalizedString ConfirmationMessageStartMigrationBatch(string batchName)
		{
			return new LocalizedString("ConfirmationMessageStartMigrationBatch", "ExB9D78E", false, true, Strings.ResourceManager, new object[]
			{
				batchName
			});
		}

		// Token: 0x17002D0F RID: 11535
		// (get) Token: 0x06008E9E RID: 36510 RVA: 0x0024ABAF File Offset: 0x00248DAF
		public static LocalizedString CannotRemoveSharingPolicyWithUsersAssigned
		{
			get
			{
				return new LocalizedString("CannotRemoveSharingPolicyWithUsersAssigned", "Ex581258", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002D10 RID: 11536
		// (get) Token: 0x06008E9F RID: 36511 RVA: 0x0024ABCD File Offset: 0x00248DCD
		public static LocalizedString MissingDataClassificationsParameter
		{
			get
			{
				return new LocalizedString("MissingDataClassificationsParameter", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008EA0 RID: 36512 RVA: 0x0024ABEC File Offset: 0x00248DEC
		public static LocalizedString IisTasksReadRegistryValueSecurityException(string key, string value)
		{
			return new LocalizedString("IisTasksReadRegistryValueSecurityException", "Ex0D3429", false, true, Strings.ResourceManager, new object[]
			{
				key,
				value
			});
		}

		// Token: 0x06008EA1 RID: 36513 RVA: 0x0024AC20 File Offset: 0x00248E20
		public static LocalizedString MsiRebootRequiredToContinue(string packageIdentifier)
		{
			return new LocalizedString("MsiRebootRequiredToContinue", "ExDCE99D", false, true, Strings.ResourceManager, new object[]
			{
				packageIdentifier
			});
		}

		// Token: 0x06008EA2 RID: 36514 RVA: 0x0024AC50 File Offset: 0x00248E50
		public static LocalizedString CannotRemoveNonProvisionedServerException(string server)
		{
			return new LocalizedString("CannotRemoveNonProvisionedServerException", "Ex12B140", false, true, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		// Token: 0x17002D11 RID: 11537
		// (get) Token: 0x06008EA3 RID: 36515 RVA: 0x0024AC7F File Offset: 0x00248E7F
		public static LocalizedString Debug
		{
			get
			{
				return new LocalizedString("Debug", "Ex6C3798", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008EA4 RID: 36516 RVA: 0x0024ACA0 File Offset: 0x00248EA0
		public static LocalizedString ErrorCannotOverrideConflictingRedirectionEntry(string domain, string entry)
		{
			return new LocalizedString("ErrorCannotOverrideConflictingRedirectionEntry", "ExF0199A", false, true, Strings.ResourceManager, new object[]
			{
				domain,
				entry
			});
		}

		// Token: 0x17002D12 RID: 11538
		// (get) Token: 0x06008EA5 RID: 36517 RVA: 0x0024ACD3 File Offset: 0x00248ED3
		public static LocalizedString ErrorFromSyncClientAndMembersUsedTogether
		{
			get
			{
				return new LocalizedString("ErrorFromSyncClientAndMembersUsedTogether", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002D13 RID: 11539
		// (get) Token: 0x06008EA6 RID: 36518 RVA: 0x0024ACF1 File Offset: 0x00248EF1
		public static LocalizedString NoAction
		{
			get
			{
				return new LocalizedString("NoAction", "Ex3DCBB1", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002D14 RID: 11540
		// (get) Token: 0x06008EA7 RID: 36519 RVA: 0x0024AD0F File Offset: 0x00248F0F
		public static LocalizedString ErrorSuspendWRTCForOnlineOnly
		{
			get
			{
				return new LocalizedString("ErrorSuspendWRTCForOnlineOnly", "ExF64CD0", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002D15 RID: 11541
		// (get) Token: 0x06008EA8 RID: 36520 RVA: 0x0024AD2D File Offset: 0x00248F2D
		public static LocalizedString ErrorMinimumAccountExpiry
		{
			get
			{
				return new LocalizedString("ErrorMinimumAccountExpiry", "ExAE4FEA", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002D16 RID: 11542
		// (get) Token: 0x06008EA9 RID: 36521 RVA: 0x0024AD4B File Offset: 0x00248F4B
		public static LocalizedString ComInteropTlbNotFound
		{
			get
			{
				return new LocalizedString("ComInteropTlbNotFound", "ExD96FB0", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002D17 RID: 11543
		// (get) Token: 0x06008EAA RID: 36522 RVA: 0x0024AD69 File Offset: 0x00248F69
		public static LocalizedString InstallContentIndexingServiceTask
		{
			get
			{
				return new LocalizedString("InstallContentIndexingServiceTask", "ExE6EE3E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008EAB RID: 36523 RVA: 0x0024AD88 File Offset: 0x00248F88
		public static LocalizedString ConfirmationMessageNewEdgeReSubscriptionExpirationWarning(string expiry)
		{
			return new LocalizedString("ConfirmationMessageNewEdgeReSubscriptionExpirationWarning", "Ex5E7AB4", false, true, Strings.ResourceManager, new object[]
			{
				expiry
			});
		}

		// Token: 0x06008EAC RID: 36524 RVA: 0x0024ADB8 File Offset: 0x00248FB8
		public static LocalizedString ErrorCannotMoveRoleAssignmentOfDeprecatedRole(string id)
		{
			return new LocalizedString("ErrorCannotMoveRoleAssignmentOfDeprecatedRole", "Ex021BDA", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x17002D18 RID: 11544
		// (get) Token: 0x06008EAD RID: 36525 RVA: 0x0024ADE7 File Offset: 0x00248FE7
		public static LocalizedString SetupComponentSMTPConfiguration
		{
			get
			{
				return new LocalizedString("SetupComponentSMTPConfiguration", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008EAE RID: 36526 RVA: 0x0024AE08 File Offset: 0x00249008
		public static LocalizedString ConfirmationMessageRemoveEdgeSyncMservConnector(string id)
		{
			return new LocalizedString("ConfirmationMessageRemoveEdgeSyncMservConnector", "ExD127AA", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x17002D19 RID: 11545
		// (get) Token: 0x06008EAF RID: 36527 RVA: 0x0024AE37 File Offset: 0x00249037
		public static LocalizedString InvalidOrganization
		{
			get
			{
				return new LocalizedString("InvalidOrganization", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002D1A RID: 11546
		// (get) Token: 0x06008EB0 RID: 36528 RVA: 0x0024AE55 File Offset: 0x00249055
		public static LocalizedString SyncNowAlreadyStartedException
		{
			get
			{
				return new LocalizedString("SyncNowAlreadyStartedException", "Ex30EDFC", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002D1B RID: 11547
		// (get) Token: 0x06008EB1 RID: 36529 RVA: 0x0024AE73 File Offset: 0x00249073
		public static LocalizedString WarningPropertiesIgnored
		{
			get
			{
				return new LocalizedString("WarningPropertiesIgnored", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008EB2 RID: 36530 RVA: 0x0024AE94 File Offset: 0x00249094
		public static LocalizedString ErrorMoveAlreadyCanceled(string identity)
		{
			return new LocalizedString("ErrorMoveAlreadyCanceled", "Ex132C28", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x06008EB3 RID: 36531 RVA: 0x0024AEC4 File Offset: 0x002490C4
		public static LocalizedString DagTaskCouldNotFindAnyMatchingNetworkException(string machineName)
		{
			return new LocalizedString("DagTaskCouldNotFindAnyMatchingNetworkException", "", false, false, Strings.ResourceManager, new object[]
			{
				machineName
			});
		}

		// Token: 0x06008EB4 RID: 36532 RVA: 0x0024AEF4 File Offset: 0x002490F4
		public static LocalizedString UserCanNotBeEnabledForUM(string user, LocalizedString reason)
		{
			return new LocalizedString("UserCanNotBeEnabledForUM", "ExD77E8D", false, true, Strings.ResourceManager, new object[]
			{
				user,
				reason
			});
		}

		// Token: 0x17002D1C RID: 11548
		// (get) Token: 0x06008EB5 RID: 36533 RVA: 0x0024AF2C File Offset: 0x0024912C
		public static LocalizedString MoveMailboxGenerateWatsonDump
		{
			get
			{
				return new LocalizedString("MoveMailboxGenerateWatsonDump", "Ex032DA2", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008EB6 RID: 36534 RVA: 0x0024AF4C File Offset: 0x0024914C
		public static LocalizedString LiveIdConnectivityExceptionThrown(string e)
		{
			return new LocalizedString("LiveIdConnectivityExceptionThrown", "", false, false, Strings.ResourceManager, new object[]
			{
				e
			});
		}

		// Token: 0x06008EB7 RID: 36535 RVA: 0x0024AF7C File Offset: 0x0024917C
		public static LocalizedString CertificateInvalidRequestFile(string server)
		{
			return new LocalizedString("CertificateInvalidRequestFile", "", false, false, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		// Token: 0x06008EB8 RID: 36536 RVA: 0x0024AFAC File Offset: 0x002491AC
		public static LocalizedString MailboxCouldNotBeUmDisabled(string mailbox, LocalizedString reason)
		{
			return new LocalizedString("MailboxCouldNotBeUmDisabled", "Ex6DAF0B", false, true, Strings.ResourceManager, new object[]
			{
				mailbox,
				reason
			});
		}

		// Token: 0x06008EB9 RID: 36537 RVA: 0x0024AFE4 File Offset: 0x002491E4
		public static LocalizedString FailedDocumentsNoResultsMailbox(string mailbox)
		{
			return new LocalizedString("FailedDocumentsNoResultsMailbox", "", false, false, Strings.ResourceManager, new object[]
			{
				mailbox
			});
		}

		// Token: 0x06008EBA RID: 36538 RVA: 0x0024B014 File Offset: 0x00249214
		public static LocalizedString RoleNotConfigured(string message)
		{
			return new LocalizedString("RoleNotConfigured", "Ex637066", false, true, Strings.ResourceManager, new object[]
			{
				message
			});
		}

		// Token: 0x06008EBB RID: 36539 RVA: 0x0024B044 File Offset: 0x00249244
		public static LocalizedString TopologyServiceExceptionThrown(string e)
		{
			return new LocalizedString("TopologyServiceExceptionThrown", "", false, false, Strings.ResourceManager, new object[]
			{
				e
			});
		}

		// Token: 0x17002D1D RID: 11549
		// (get) Token: 0x06008EBC RID: 36540 RVA: 0x0024B073 File Offset: 0x00249273
		public static LocalizedString AuthenticationMethodFba
		{
			get
			{
				return new LocalizedString("AuthenticationMethodFba", "ExB8024F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008EBD RID: 36541 RVA: 0x0024B094 File Offset: 0x00249294
		public static LocalizedString ErrorEapObjectTooNew(string objectVersion, string currentVersion)
		{
			return new LocalizedString("ErrorEapObjectTooNew", "Ex532FCD", false, true, Strings.ResourceManager, new object[]
			{
				objectVersion,
				currentVersion
			});
		}

		// Token: 0x06008EBE RID: 36542 RVA: 0x0024B0C8 File Offset: 0x002492C8
		public static LocalizedString DagTaskJoiningNodeToCluster(string serverName)
		{
			return new LocalizedString("DagTaskJoiningNodeToCluster", "", false, false, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		// Token: 0x06008EBF RID: 36543 RVA: 0x0024B0F8 File Offset: 0x002492F8
		public static LocalizedString ErrorOabGenFailedSinceNoOrgMbxFound(string oabId)
		{
			return new LocalizedString("ErrorOabGenFailedSinceNoOrgMbxFound", "", false, false, Strings.ResourceManager, new object[]
			{
				oabId
			});
		}

		// Token: 0x06008EC0 RID: 36544 RVA: 0x0024B128 File Offset: 0x00249328
		public static LocalizedString GetFedDomainStatusInfo(string domain)
		{
			return new LocalizedString("GetFedDomainStatusInfo", "Ex1E4B0C", false, true, Strings.ResourceManager, new object[]
			{
				domain
			});
		}

		// Token: 0x06008EC1 RID: 36545 RVA: 0x0024B158 File Offset: 0x00249358
		public static LocalizedString DebugResolvingUserSid(string userid, string sid)
		{
			return new LocalizedString("DebugResolvingUserSid", "Ex4A982E", false, true, Strings.ResourceManager, new object[]
			{
				userid,
				sid
			});
		}

		// Token: 0x17002D1E RID: 11550
		// (get) Token: 0x06008EC2 RID: 36546 RVA: 0x0024B18B File Offset: 0x0024938B
		public static LocalizedString WarningGeneratingMailboxIsNullOABWillNotBeGenerated
		{
			get
			{
				return new LocalizedString("WarningGeneratingMailboxIsNullOABWillNotBeGenerated", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008EC3 RID: 36547 RVA: 0x0024B1AC File Offset: 0x002493AC
		public static LocalizedString FailedToReadAdamPortFromRegistry(string error)
		{
			return new LocalizedString("FailedToReadAdamPortFromRegistry", "Ex5F234B", false, true, Strings.ResourceManager, new object[]
			{
				error
			});
		}

		// Token: 0x17002D1F RID: 11551
		// (get) Token: 0x06008EC4 RID: 36548 RVA: 0x0024B1DB File Offset: 0x002493DB
		public static LocalizedString WarningForceMessage
		{
			get
			{
				return new LocalizedString("WarningForceMessage", "ExBB2838", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002D20 RID: 11552
		// (get) Token: 0x06008EC5 RID: 36549 RVA: 0x0024B1F9 File Offset: 0x002493F9
		public static LocalizedString SetupProgressCreateRBACContainer
		{
			get
			{
				return new LocalizedString("SetupProgressCreateRBACContainer", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008EC6 RID: 36550 RVA: 0x0024B218 File Offset: 0x00249418
		public static LocalizedString RemoveOwaVirtualDirectoryCannotFindVirtualDirectoryException(string applicationRoot, string webSite, string virtualDirectory)
		{
			return new LocalizedString("RemoveOwaVirtualDirectoryCannotFindVirtualDirectoryException", "ExCD3E43", false, true, Strings.ResourceManager, new object[]
			{
				applicationRoot,
				webSite,
				virtualDirectory
			});
		}

		// Token: 0x17002D21 RID: 11553
		// (get) Token: 0x06008EC7 RID: 36551 RVA: 0x0024B24F File Offset: 0x0024944F
		public static LocalizedString MetadataPropertyIsWhiteSpaceOrContainsWhiteSpacePrefixOrSuffix
		{
			get
			{
				return new LocalizedString("MetadataPropertyIsWhiteSpaceOrContainsWhiteSpacePrefixOrSuffix", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008EC8 RID: 36552 RVA: 0x0024B270 File Offset: 0x00249470
		public static LocalizedString ExceptionValidatingConditionFailed(string e)
		{
			return new LocalizedString("ExceptionValidatingConditionFailed", "Ex303E81", false, true, Strings.ResourceManager, new object[]
			{
				e
			});
		}

		// Token: 0x06008EC9 RID: 36553 RVA: 0x0024B2A0 File Offset: 0x002494A0
		public static LocalizedString ConfirmationMessageNewPublicFolderDatabase(string Name)
		{
			return new LocalizedString("ConfirmationMessageNewPublicFolderDatabase", "ExC4B261", false, true, Strings.ResourceManager, new object[]
			{
				Name
			});
		}

		// Token: 0x06008ECA RID: 36554 RVA: 0x0024B2D0 File Offset: 0x002494D0
		public static LocalizedString MissingNonAuthoritativeDomain(SmtpDomain domain)
		{
			return new LocalizedString("MissingNonAuthoritativeDomain", "ExD55B20", false, true, Strings.ResourceManager, new object[]
			{
				domain
			});
		}

		// Token: 0x17002D22 RID: 11554
		// (get) Token: 0x06008ECB RID: 36555 RVA: 0x0024B2FF File Offset: 0x002494FF
		public static LocalizedString InvalidStartAndEndTime
		{
			get
			{
				return new LocalizedString("InvalidStartAndEndTime", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002D23 RID: 11555
		// (get) Token: 0x06008ECC RID: 36556 RVA: 0x0024B31D File Offset: 0x0024951D
		public static LocalizedString CasHealthOwaUrlAndCasArgumentError
		{
			get
			{
				return new LocalizedString("CasHealthOwaUrlAndCasArgumentError", "ExE47BE9", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002D24 RID: 11556
		// (get) Token: 0x06008ECD RID: 36557 RVA: 0x0024B33B File Offset: 0x0024953B
		public static LocalizedString WarnAboutStarAcceptedDomain
		{
			get
			{
				return new LocalizedString("WarnAboutStarAcceptedDomain", "Ex684CAB", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002D25 RID: 11557
		// (get) Token: 0x06008ECE RID: 36558 RVA: 0x0024B359 File Offset: 0x00249559
		public static LocalizedString NoTPDsImported
		{
			get
			{
				return new LocalizedString("NoTPDsImported", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008ECF RID: 36559 RVA: 0x0024B378 File Offset: 0x00249578
		public static LocalizedString ConfirmationMessageSetOutlookProtectionRule(string identity)
		{
			return new LocalizedString("ConfirmationMessageSetOutlookProtectionRule", "ExAA8737", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x17002D26 RID: 11558
		// (get) Token: 0x06008ED0 RID: 36560 RVA: 0x0024B3A7 File Offset: 0x002495A7
		public static LocalizedString SetupProgressCleanEmptyDirs
		{
			get
			{
				return new LocalizedString("SetupProgressCleanEmptyDirs", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002D27 RID: 11559
		// (get) Token: 0x06008ED1 RID: 36561 RVA: 0x0024B3C5 File Offset: 0x002495C5
		public static LocalizedString SearchServiceDescription
		{
			get
			{
				return new LocalizedString("SearchServiceDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002D28 RID: 11560
		// (get) Token: 0x06008ED2 RID: 36562 RVA: 0x0024B3E3 File Offset: 0x002495E3
		public static LocalizedString SetupComponentPostSetupBridgehead
		{
			get
			{
				return new LocalizedString("SetupComponentPostSetupBridgehead", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008ED3 RID: 36563 RVA: 0x0024B404 File Offset: 0x00249604
		public static LocalizedString CasHealthWebAppTestStepFinished(string stepName)
		{
			return new LocalizedString("CasHealthWebAppTestStepFinished", "", false, false, Strings.ResourceManager, new object[]
			{
				stepName
			});
		}

		// Token: 0x17002D29 RID: 11561
		// (get) Token: 0x06008ED4 RID: 36564 RVA: 0x0024B433 File Offset: 0x00249633
		public static LocalizedString ProgressSavingADObject
		{
			get
			{
				return new LocalizedString("ProgressSavingADObject", "Ex93E3AC", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002D2A RID: 11562
		// (get) Token: 0x06008ED5 RID: 36565 RVA: 0x0024B451 File Offset: 0x00249651
		public static LocalizedString TenantOrganizationMissing2
		{
			get
			{
				return new LocalizedString("TenantOrganizationMissing2", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002D2B RID: 11563
		// (get) Token: 0x06008ED6 RID: 36566 RVA: 0x0024B46F File Offset: 0x0024966F
		public static LocalizedString MultipleCoexistenceDomainsFoundException
		{
			get
			{
				return new LocalizedString("MultipleCoexistenceDomainsFoundException", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008ED7 RID: 36567 RVA: 0x0024B490 File Offset: 0x00249690
		public static LocalizedString ErrorMessageMoveMailboxFailed(string step, string message)
		{
			return new LocalizedString("ErrorMessageMoveMailboxFailed", "ExA683DB", false, true, Strings.ResourceManager, new object[]
			{
				step,
				message
			});
		}

		// Token: 0x06008ED8 RID: 36568 RVA: 0x0024B4C4 File Offset: 0x002496C4
		public static LocalizedString SetupLogHeader(string noun, string verb, DateTime startTime)
		{
			return new LocalizedString("SetupLogHeader", "ExB4E2B2", false, true, Strings.ResourceManager, new object[]
			{
				noun,
				verb,
				startTime
			});
		}

		// Token: 0x17002D2C RID: 11564
		// (get) Token: 0x06008ED9 RID: 36569 RVA: 0x0024B500 File Offset: 0x00249700
		public static LocalizedString ErrorNotEnoughPermissions
		{
			get
			{
				return new LocalizedString("ErrorNotEnoughPermissions", "Ex88DCF7", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002D2D RID: 11565
		// (get) Token: 0x06008EDA RID: 36570 RVA: 0x0024B51E File Offset: 0x0024971E
		public static LocalizedString CasHealthOwaGetAuthSucceeded
		{
			get
			{
				return new LocalizedString("CasHealthOwaGetAuthSucceeded", "ExA1CA45", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008EDB RID: 36571 RVA: 0x0024B53C File Offset: 0x0024973C
		public static LocalizedString ErrorMoreThanOneMailTipTranslationForThisCulture(string culture)
		{
			return new LocalizedString("ErrorMoreThanOneMailTipTranslationForThisCulture", "ExD26A1C", false, true, Strings.ResourceManager, new object[]
			{
				culture
			});
		}

		// Token: 0x06008EDC RID: 36572 RVA: 0x0024B56C File Offset: 0x0024976C
		public static LocalizedString PAMOtherError(string ex)
		{
			return new LocalizedString("PAMOtherError", "Ex0297E7", false, true, Strings.ResourceManager, new object[]
			{
				ex
			});
		}

		// Token: 0x17002D2E RID: 11566
		// (get) Token: 0x06008EDD RID: 36573 RVA: 0x0024B59B File Offset: 0x0024979B
		public static LocalizedString ErrorCannotUnlinkMailboxPlanForTenant
		{
			get
			{
				return new LocalizedString("ErrorCannotUnlinkMailboxPlanForTenant", "Ex190EFE", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008EDE RID: 36574 RVA: 0x0024B5BC File Offset: 0x002497BC
		public static LocalizedString ErrorOabVirtualDirctoryPathNotOnFixedDrive(string path)
		{
			return new LocalizedString("ErrorOabVirtualDirctoryPathNotOnFixedDrive", "ExAD1065", false, true, Strings.ResourceManager, new object[]
			{
				path
			});
		}

		// Token: 0x06008EDF RID: 36575 RVA: 0x0024B5EC File Offset: 0x002497EC
		public static LocalizedString ErrorCannotLocalizeDefaultFolders(string mbx, string reason)
		{
			return new LocalizedString("ErrorCannotLocalizeDefaultFolders", "ExDD9AF3", false, true, Strings.ResourceManager, new object[]
			{
				mbx,
				reason
			});
		}

		// Token: 0x17002D2F RID: 11567
		// (get) Token: 0x06008EE0 RID: 36576 RVA: 0x0024B61F File Offset: 0x0024981F
		public static LocalizedString FDServiceDisplayName
		{
			get
			{
				return new LocalizedString("FDServiceDisplayName", "Ex60EEB6", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008EE1 RID: 36577 RVA: 0x0024B640 File Offset: 0x00249840
		public static LocalizedString ConfirmationMessageSetMailFlowPartnerConfigWithName(string name)
		{
			return new LocalizedString("ConfirmationMessageSetMailFlowPartnerConfigWithName", "Ex02CE38", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x06008EE2 RID: 36578 RVA: 0x0024B670 File Offset: 0x00249870
		public static LocalizedString AlsEmailBodyMailboxIds(string mailbox)
		{
			return new LocalizedString("AlsEmailBodyMailboxIds", "", false, false, Strings.ResourceManager, new object[]
			{
				mailbox
			});
		}

		// Token: 0x06008EE3 RID: 36579 RVA: 0x0024B6A0 File Offset: 0x002498A0
		public static LocalizedString DlpPolicyParsingError(string error)
		{
			return new LocalizedString("DlpPolicyParsingError", "", false, false, Strings.ResourceManager, new object[]
			{
				error
			});
		}

		// Token: 0x06008EE4 RID: 36580 RVA: 0x0024B6D0 File Offset: 0x002498D0
		public static LocalizedString ErrorPublicFolderNotUnique(string idStringValue)
		{
			return new LocalizedString("ErrorPublicFolderNotUnique", "ExF2EE85", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		// Token: 0x06008EE5 RID: 36581 RVA: 0x0024B700 File Offset: 0x00249900
		public static LocalizedString MailboxAssistantsServiceCouldNotBeKilled(string serverName)
		{
			return new LocalizedString("MailboxAssistantsServiceCouldNotBeKilled", "Ex244E6D", false, true, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		// Token: 0x06008EE6 RID: 36582 RVA: 0x0024B730 File Offset: 0x00249930
		public static LocalizedString ErrorMailboxAddressNotFound(string idStringValue)
		{
			return new LocalizedString("ErrorMailboxAddressNotFound", "Ex7EBB80", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		// Token: 0x17002D30 RID: 11568
		// (get) Token: 0x06008EE7 RID: 36583 RVA: 0x0024B75F File Offset: 0x0024995F
		public static LocalizedString CasHealthUserNameHeader
		{
			get
			{
				return new LocalizedString("CasHealthUserNameHeader", "Ex4470E4", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008EE8 RID: 36584 RVA: 0x0024B780 File Offset: 0x00249980
		public static LocalizedString ConfirmationMessageSetIPBlockListProvider(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetIPBlockListProvider", "ExC346D8", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x17002D31 RID: 11569
		// (get) Token: 0x06008EE9 RID: 36585 RVA: 0x0024B7AF File Offset: 0x002499AF
		public static LocalizedString ErrorInboxRuleHasNoAction
		{
			get
			{
				return new LocalizedString("ErrorInboxRuleHasNoAction", "Ex084D92", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008EEA RID: 36586 RVA: 0x0024B7D0 File Offset: 0x002499D0
		public static LocalizedString ConfirmationMessageNewInboxRule(string Identity, string mailbox)
		{
			return new LocalizedString("ConfirmationMessageNewInboxRule", "ExDFF2BB", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				mailbox
			});
		}

		// Token: 0x17002D32 RID: 11570
		// (get) Token: 0x06008EEB RID: 36587 RVA: 0x0024B803 File Offset: 0x00249A03
		public static LocalizedString ErrorNotSupportInCrossOrg
		{
			get
			{
				return new LocalizedString("ErrorNotSupportInCrossOrg", "ExFF7594", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002D33 RID: 11571
		// (get) Token: 0x06008EEC RID: 36588 RVA: 0x0024B821 File Offset: 0x00249A21
		public static LocalizedString VerboseSyncTaskNullCookie
		{
			get
			{
				return new LocalizedString("VerboseSyncTaskNullCookie", "Ex0DD462", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008EED RID: 36589 RVA: 0x0024B840 File Offset: 0x00249A40
		public static LocalizedString UnpackedRoles(string roles)
		{
			return new LocalizedString("UnpackedRoles", "Ex8D11B5", false, true, Strings.ResourceManager, new object[]
			{
				roles
			});
		}

		// Token: 0x06008EEE RID: 36590 RVA: 0x0024B870 File Offset: 0x00249A70
		public static LocalizedString ErrorOnlyAllowChangeMembersOnUniversalGroup(string groupName)
		{
			return new LocalizedString("ErrorOnlyAllowChangeMembersOnUniversalGroup", "ExE76FF7", false, true, Strings.ResourceManager, new object[]
			{
				groupName
			});
		}

		// Token: 0x17002D34 RID: 11572
		// (get) Token: 0x06008EEF RID: 36591 RVA: 0x0024B89F File Offset: 0x00249A9F
		public static LocalizedString SetupdProgressPrivacyLink
		{
			get
			{
				return new LocalizedString("SetupdProgressPrivacyLink", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002D35 RID: 11573
		// (get) Token: 0x06008EF0 RID: 36592 RVA: 0x0024B8BD File Offset: 0x00249ABD
		public static LocalizedString SetupProgressTemplateTenant
		{
			get
			{
				return new LocalizedString("SetupProgressTemplateTenant", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002D36 RID: 11574
		// (get) Token: 0x06008EF1 RID: 36593 RVA: 0x0024B8DB File Offset: 0x00249ADB
		public static LocalizedString CasHealthOwaConnectionError
		{
			get
			{
				return new LocalizedString("CasHealthOwaConnectionError", "ExD6BF00", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002D37 RID: 11575
		// (get) Token: 0x06008EF2 RID: 36594 RVA: 0x0024B8F9 File Offset: 0x00249AF9
		public static LocalizedString SetupProgressStoppingInformationStoreService
		{
			get
			{
				return new LocalizedString("SetupProgressStoppingInformationStoreService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002D38 RID: 11576
		// (get) Token: 0x06008EF3 RID: 36595 RVA: 0x0024B917 File Offset: 0x00249B17
		public static LocalizedString SetupProgressGatewayPerfCounters
		{
			get
			{
				return new LocalizedString("SetupProgressGatewayPerfCounters", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008EF4 RID: 36596 RVA: 0x0024B938 File Offset: 0x00249B38
		public static LocalizedString MailboxSearchInPlaceHoldIdentityExists(string identity)
		{
			return new LocalizedString("MailboxSearchInPlaceHoldIdentityExists", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x17002D39 RID: 11577
		// (get) Token: 0x06008EF5 RID: 36597 RVA: 0x0024B967 File Offset: 0x00249B67
		public static LocalizedString FailedToUnregisterContentIndexingBinaries
		{
			get
			{
				return new LocalizedString("FailedToUnregisterContentIndexingBinaries", "ExF1FAB3", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002D3A RID: 11578
		// (get) Token: 0x06008EF6 RID: 36598 RVA: 0x0024B985 File Offset: 0x00249B85
		public static LocalizedString CreateDefaultActiveSyncMailboxPolicy
		{
			get
			{
				return new LocalizedString("CreateDefaultActiveSyncMailboxPolicy", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002D3B RID: 11579
		// (get) Token: 0x06008EF7 RID: 36599 RVA: 0x0024B9A3 File Offset: 0x00249BA3
		public static LocalizedString SetupProgressCreateAutoDiscoverContainer
		{
			get
			{
				return new LocalizedString("SetupProgressCreateAutoDiscoverContainer", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008EF8 RID: 36600 RVA: 0x0024B9C4 File Offset: 0x00249BC4
		public static LocalizedString SeedingLogFileExists(string path)
		{
			return new LocalizedString("SeedingLogFileExists", "ExD4A651", false, true, Strings.ResourceManager, new object[]
			{
				path
			});
		}

		// Token: 0x17002D3C RID: 11580
		// (get) Token: 0x06008EF9 RID: 36601 RVA: 0x0024B9F3 File Offset: 0x00249BF3
		public static LocalizedString FBAServiceDescription
		{
			get
			{
				return new LocalizedString("FBAServiceDescription", "Ex17089F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008EFA RID: 36602 RVA: 0x0024BA14 File Offset: 0x00249C14
		public static LocalizedString ErrorMemberNameBlocked(string memberName)
		{
			return new LocalizedString("ErrorMemberNameBlocked", "ExF26221", false, true, Strings.ResourceManager, new object[]
			{
				memberName
			});
		}

		// Token: 0x17002D3D RID: 11581
		// (get) Token: 0x06008EFB RID: 36603 RVA: 0x0024BA43 File Offset: 0x00249C43
		public static LocalizedString AirSyncReportingProgressActivity
		{
			get
			{
				return new LocalizedString("AirSyncReportingProgressActivity", "Ex546CA9", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008EFC RID: 36604 RVA: 0x0024BA64 File Offset: 0x00249C64
		public static LocalizedString ProgressForceCleanupNode(string node)
		{
			return new LocalizedString("ProgressForceCleanupNode", "", false, false, Strings.ResourceManager, new object[]
			{
				node
			});
		}

		// Token: 0x06008EFD RID: 36605 RVA: 0x0024BA94 File Offset: 0x00249C94
		public static LocalizedString ReplicationCheckFatalError(string checkTitle, string errorMessage)
		{
			return new LocalizedString("ReplicationCheckFatalError", "ExC79833", false, true, Strings.ResourceManager, new object[]
			{
				checkTitle,
				errorMessage
			});
		}

		// Token: 0x06008EFE RID: 36606 RVA: 0x0024BAC8 File Offset: 0x00249CC8
		public static LocalizedString ServerComponentStateInvalidComponentName(string component)
		{
			return new LocalizedString("ServerComponentStateInvalidComponentName", "", false, false, Strings.ResourceManager, new object[]
			{
				component
			});
		}

		// Token: 0x06008EFF RID: 36607 RVA: 0x0024BAF8 File Offset: 0x00249CF8
		public static LocalizedString CasHealthTransactionFailedSummary(string transactionTarget, string errorMsg, string details)
		{
			return new LocalizedString("CasHealthTransactionFailedSummary", "ExAEE8EE", false, true, Strings.ResourceManager, new object[]
			{
				transactionTarget,
				errorMsg,
				details
			});
		}

		// Token: 0x06008F00 RID: 36608 RVA: 0x0024BB30 File Offset: 0x00249D30
		public static LocalizedString TowsFoundScpByDomain(string scp, string domain, string url)
		{
			return new LocalizedString("TowsFoundScpByDomain", "", false, false, Strings.ResourceManager, new object[]
			{
				scp,
				domain,
				url
			});
		}

		// Token: 0x17002D3E RID: 11582
		// (get) Token: 0x06008F01 RID: 36609 RVA: 0x0024BB67 File Offset: 0x00249D67
		public static LocalizedString SetupProgressStoppingExchangeMGMTService
		{
			get
			{
				return new LocalizedString("SetupProgressStoppingExchangeMGMTService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008F02 RID: 36610 RVA: 0x0024BB88 File Offset: 0x00249D88
		public static LocalizedString WarningSetAdminAuditLogConfigDelay(double minutes)
		{
			return new LocalizedString("WarningSetAdminAuditLogConfigDelay", "ExF6342B", false, true, Strings.ResourceManager, new object[]
			{
				minutes
			});
		}

		// Token: 0x17002D3F RID: 11583
		// (get) Token: 0x06008F03 RID: 36611 RVA: 0x0024BBBC File Offset: 0x00249DBC
		public static LocalizedString TaskBothConfigurationOnlyAndQuorumOnlySpecified
		{
			get
			{
				return new LocalizedString("TaskBothConfigurationOnlyAndQuorumOnlySpecified", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008F04 RID: 36612 RVA: 0x0024BBDC File Offset: 0x00249DDC
		public static LocalizedString DatabaseMustBeInDagException(string dbName)
		{
			return new LocalizedString("DatabaseMustBeInDagException", "", false, false, Strings.ResourceManager, new object[]
			{
				dbName
			});
		}

		// Token: 0x06008F05 RID: 36613 RVA: 0x0024BC0C File Offset: 0x00249E0C
		public static LocalizedString DidntCompleteInHours(int hours)
		{
			return new LocalizedString("DidntCompleteInHours", "ExD116A0", false, true, Strings.ResourceManager, new object[]
			{
				hours
			});
		}

		// Token: 0x06008F06 RID: 36614 RVA: 0x0024BC40 File Offset: 0x00249E40
		public static LocalizedString ErrorBackupInProgress(string databaseName)
		{
			return new LocalizedString("ErrorBackupInProgress", "Ex8889AD", false, true, Strings.ResourceManager, new object[]
			{
				databaseName
			});
		}

		// Token: 0x06008F07 RID: 36615 RVA: 0x0024BC70 File Offset: 0x00249E70
		public static LocalizedString ConfirmationMessageRemoveGroup(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveGroup", "Ex228529", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x06008F08 RID: 36616 RVA: 0x0024BCA0 File Offset: 0x00249EA0
		public static LocalizedString MigrationUserSubscriptionInaccessible(string userName, LocalizedString error)
		{
			return new LocalizedString("MigrationUserSubscriptionInaccessible", "", false, false, Strings.ResourceManager, new object[]
			{
				userName,
				error
			});
		}

		// Token: 0x17002D40 RID: 11584
		// (get) Token: 0x06008F09 RID: 36617 RVA: 0x0024BCD8 File Offset: 0x00249ED8
		public static LocalizedString ErrorCorruptFederationMetadata
		{
			get
			{
				return new LocalizedString("ErrorCorruptFederationMetadata", "Ex5A4F3A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008F0A RID: 36618 RVA: 0x0024BCF8 File Offset: 0x00249EF8
		public static LocalizedString ErrorFoundInvalidADObject(string DN)
		{
			return new LocalizedString("ErrorFoundInvalidADObject", "ExD816AA", false, true, Strings.ResourceManager, new object[]
			{
				DN
			});
		}

		// Token: 0x17002D41 RID: 11585
		// (get) Token: 0x06008F0B RID: 36619 RVA: 0x0024BD27 File Offset: 0x00249F27
		public static LocalizedString SetupProgressCreateAutoGroup
		{
			get
			{
				return new LocalizedString("SetupProgressCreateAutoGroup", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008F0C RID: 36620 RVA: 0x0024BD48 File Offset: 0x00249F48
		public static LocalizedString VerboseVerifyServerSucceed(string server)
		{
			return new LocalizedString("VerboseVerifyServerSucceed", "Ex544252", false, true, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		// Token: 0x06008F0D RID: 36621 RVA: 0x0024BD78 File Offset: 0x00249F78
		public static LocalizedString VerboseVerifyingRecipientViewRoot(string ou)
		{
			return new LocalizedString("VerboseVerifyingRecipientViewRoot", "ExF22F6E", false, true, Strings.ResourceManager, new object[]
			{
				ou
			});
		}

		// Token: 0x17002D42 RID: 11586
		// (get) Token: 0x06008F0E RID: 36622 RVA: 0x0024BDA7 File Offset: 0x00249FA7
		public static LocalizedString SetupProgressCleanupFiles
		{
			get
			{
				return new LocalizedString("SetupProgressCleanupFiles", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008F0F RID: 36623 RVA: 0x0024BDC8 File Offset: 0x00249FC8
		public static LocalizedString BlockedSendersNotUpdated(int safeRecipients, int safeRecipientDomains, string identity)
		{
			return new LocalizedString("BlockedSendersNotUpdated", "ExE6D808", false, true, Strings.ResourceManager, new object[]
			{
				safeRecipients,
				safeRecipientDomains,
				identity
			});
		}

		// Token: 0x17002D43 RID: 11587
		// (get) Token: 0x06008F10 RID: 36624 RVA: 0x0024BE09 File Offset: 0x0024A009
		public static LocalizedString CasHealthWebAppNoCasMbxUmHtArgumentError
		{
			get
			{
				return new LocalizedString("CasHealthWebAppNoCasMbxUmHtArgumentError", "ExD08CF2", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002D44 RID: 11588
		// (get) Token: 0x06008F11 RID: 36625 RVA: 0x0024BE27 File Offset: 0x0024A027
		public static LocalizedString SetupProgressStoppingSystemAttendantService
		{
			get
			{
				return new LocalizedString("SetupProgressStoppingSystemAttendantService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008F12 RID: 36626 RVA: 0x0024BE48 File Offset: 0x0024A048
		public static LocalizedString FailedDocumentsResultsServer(string server, int total)
		{
			return new LocalizedString("FailedDocumentsResultsServer", "", false, false, Strings.ResourceManager, new object[]
			{
				server,
				total
			});
		}

		// Token: 0x06008F13 RID: 36627 RVA: 0x0024BE80 File Offset: 0x0024A080
		public static LocalizedString VerboseIgnoreFixingOneDynamicDistributionGroupFilterMetadata(string id)
		{
			return new LocalizedString("VerboseIgnoreFixingOneDynamicDistributionGroupFilterMetadata", "Ex0BF31B", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x06008F14 RID: 36628 RVA: 0x0024BEB0 File Offset: 0x0024A0B0
		public static LocalizedString WarningMessageExistsInReplayQueue(string item)
		{
			return new LocalizedString("WarningMessageExistsInReplayQueue", "", false, false, Strings.ResourceManager, new object[]
			{
				item
			});
		}

		// Token: 0x17002D45 RID: 11589
		// (get) Token: 0x06008F15 RID: 36629 RVA: 0x0024BEDF File Offset: 0x0024A0DF
		public static LocalizedString ErrorBPAMoreThanOnePrereqServerSpecified
		{
			get
			{
				return new LocalizedString("ErrorBPAMoreThanOnePrereqServerSpecified", "Ex000839", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002D46 RID: 11590
		// (get) Token: 0x06008F16 RID: 36630 RVA: 0x0024BEFD File Offset: 0x0024A0FD
		public static LocalizedString ErrorDotNetInstallPathNotFound
		{
			get
			{
				return new LocalizedString("ErrorDotNetInstallPathNotFound", "Ex247940", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002D47 RID: 11591
		// (get) Token: 0x06008F17 RID: 36631 RVA: 0x0024BF1B File Offset: 0x0024A11B
		public static LocalizedString InstallImap4BeServiceTask
		{
			get
			{
				return new LocalizedString("InstallImap4BeServiceTask", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002D48 RID: 11592
		// (get) Token: 0x06008F18 RID: 36632 RVA: 0x0024BF39 File Offset: 0x0024A139
		public static LocalizedString MigrationMustSpecifyEmailOrMailboxDN
		{
			get
			{
				return new LocalizedString("MigrationMustSpecifyEmailOrMailboxDN", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002D49 RID: 11593
		// (get) Token: 0x06008F19 RID: 36633 RVA: 0x0024BF57 File Offset: 0x0024A157
		public static LocalizedString CannotLocateTargetServiceEndpoint
		{
			get
			{
				return new LocalizedString("CannotLocateTargetServiceEndpoint", "Ex0B95ED", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008F1A RID: 36634 RVA: 0x0024BF78 File Offset: 0x0024A178
		public static LocalizedString ErrorDomainIsNotFederated(string domain)
		{
			return new LocalizedString("ErrorDomainIsNotFederated", "Ex2BC0E1", false, true, Strings.ResourceManager, new object[]
			{
				domain
			});
		}

		// Token: 0x06008F1B RID: 36635 RVA: 0x0024BFA8 File Offset: 0x0024A1A8
		public static LocalizedString ConfirmationMessageRemoveWorkloadPolicy(string Name)
		{
			return new LocalizedString("ConfirmationMessageRemoveWorkloadPolicy", "", false, false, Strings.ResourceManager, new object[]
			{
				Name
			});
		}

		// Token: 0x17002D4A RID: 11594
		// (get) Token: 0x06008F1C RID: 36636 RVA: 0x0024BFD7 File Offset: 0x0024A1D7
		public static LocalizedString UnregisterFilterFailed
		{
			get
			{
				return new LocalizedString("UnregisterFilterFailed", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008F1D RID: 36637 RVA: 0x0024BFF8 File Offset: 0x0024A1F8
		public static LocalizedString ErrorAllRoomListNotFound(string idStringValue)
		{
			return new LocalizedString("ErrorAllRoomListNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		// Token: 0x17002D4B RID: 11595
		// (get) Token: 0x06008F1E RID: 36638 RVA: 0x0024C027 File Offset: 0x0024A227
		public static LocalizedString RegSvr32FailedToExit
		{
			get
			{
				return new LocalizedString("RegSvr32FailedToExit", "Ex25A3AE", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002D4C RID: 11596
		// (get) Token: 0x06008F1F RID: 36639 RVA: 0x0024C045 File Offset: 0x0024A245
		public static LocalizedString ComplianceAuditServiceNotUninstalled
		{
			get
			{
				return new LocalizedString("ComplianceAuditServiceNotUninstalled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002D4D RID: 11597
		// (get) Token: 0x06008F20 RID: 36640 RVA: 0x0024C063 File Offset: 0x0024A263
		public static LocalizedString SetupProgressUninstallTransportLogSearchService
		{
			get
			{
				return new LocalizedString("SetupProgressUninstallTransportLogSearchService", "Ex01AB5C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008F21 RID: 36641 RVA: 0x0024C084 File Offset: 0x0024A284
		public static LocalizedString CasHealthWebAppAddingTestInstance(string casServerName, string url)
		{
			return new LocalizedString("CasHealthWebAppAddingTestInstance", "Ex5AEF64", false, true, Strings.ResourceManager, new object[]
			{
				casServerName,
				url
			});
		}

		// Token: 0x06008F22 RID: 36642 RVA: 0x0024C0B8 File Offset: 0x0024A2B8
		public static LocalizedString ClassificationRuleCollectionNestedAnyDepthExceedLimit(int nestedAnyDepthLimit, string offendingRuleIds)
		{
			return new LocalizedString("ClassificationRuleCollectionNestedAnyDepthExceedLimit", "", false, false, Strings.ResourceManager, new object[]
			{
				nestedAnyDepthLimit,
				offendingRuleIds
			});
		}

		// Token: 0x06008F23 RID: 36643 RVA: 0x0024C0F0 File Offset: 0x0024A2F0
		public static LocalizedString InterceptorErrorConditionInvalidProperty(string propertyName)
		{
			return new LocalizedString("InterceptorErrorConditionInvalidProperty", "", false, false, Strings.ResourceManager, new object[]
			{
				propertyName
			});
		}

		// Token: 0x17002D4E RID: 11598
		// (get) Token: 0x06008F24 RID: 36644 RVA: 0x0024C11F File Offset: 0x0024A31F
		public static LocalizedString SetupProgressDisableFastSearchSeedingPortRule
		{
			get
			{
				return new LocalizedString("SetupProgressDisableFastSearchSeedingPortRule", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002D4F RID: 11599
		// (get) Token: 0x06008F25 RID: 36645 RVA: 0x0024C13D File Offset: 0x0024A33D
		public static LocalizedString GlobalLocatorServiceResultSuccess
		{
			get
			{
				return new LocalizedString("GlobalLocatorServiceResultSuccess", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008F26 RID: 36646 RVA: 0x0024C15C File Offset: 0x0024A35C
		public static LocalizedString ConfirmationMessageTestConversations(string Identity)
		{
			return new LocalizedString("ConfirmationMessageTestConversations", "Ex1DF512", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x06008F27 RID: 36647 RVA: 0x0024C18C File Offset: 0x0024A38C
		public static LocalizedString ErrorSiteNameIsLongerThanLimit(string siteName)
		{
			return new LocalizedString("ErrorSiteNameIsLongerThanLimit", "ExEF6681", false, true, Strings.ResourceManager, new object[]
			{
				siteName
			});
		}

		// Token: 0x17002D50 RID: 11600
		// (get) Token: 0x06008F28 RID: 36648 RVA: 0x0024C1BB File Offset: 0x0024A3BB
		public static LocalizedString DagNetworkInconsistentRoleException
		{
			get
			{
				return new LocalizedString("DagNetworkInconsistentRoleException", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002D51 RID: 11601
		// (get) Token: 0x06008F29 RID: 36649 RVA: 0x0024C1D9 File Offset: 0x0024A3D9
		public static LocalizedString SetInstallPathInAppConfig
		{
			get
			{
				return new LocalizedString("SetInstallPathInAppConfig", "ExACB48A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008F2A RID: 36650 RVA: 0x0024C1F8 File Offset: 0x0024A3F8
		public static LocalizedString UserCreateFailed(string username, string exception)
		{
			return new LocalizedString("UserCreateFailed", "ExE23D6A", false, true, Strings.ResourceManager, new object[]
			{
				username,
				exception
			});
		}

		// Token: 0x17002D52 RID: 11602
		// (get) Token: 0x06008F2B RID: 36651 RVA: 0x0024C22B File Offset: 0x0024A42B
		public static LocalizedString ConfirmationMessageRemoveAutodiscoverVirtualDirectory
		{
			get
			{
				return new LocalizedString("ConfirmationMessageRemoveAutodiscoverVirtualDirectory", "Ex5C1A1D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008F2C RID: 36652 RVA: 0x0024C24C File Offset: 0x0024A44C
		public static LocalizedString ConfirmationMessageRemoveMigrationEndpoint(string connectorName)
		{
			return new LocalizedString("ConfirmationMessageRemoveMigrationEndpoint", "", false, false, Strings.ResourceManager, new object[]
			{
				connectorName
			});
		}

		// Token: 0x17002D53 RID: 11603
		// (get) Token: 0x06008F2D RID: 36653 RVA: 0x0024C27B File Offset: 0x0024A47B
		public static LocalizedString DomainControllerName
		{
			get
			{
				return new LocalizedString("DomainControllerName", "Ex623F94", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002D54 RID: 11604
		// (get) Token: 0x06008F2E RID: 36654 RVA: 0x0024C299 File Offset: 0x0024A499
		public static LocalizedString UninstallADTopologyServiceTask
		{
			get
			{
				return new LocalizedString("UninstallADTopologyServiceTask", "ExF0BD0F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008F2F RID: 36655 RVA: 0x0024C2B8 File Offset: 0x0024A4B8
		public static LocalizedString ErrorInvalidMailboxTypeConversion(string id, string fromType, string toType)
		{
			return new LocalizedString("ErrorInvalidMailboxTypeConversion", "Ex752B6C", false, true, Strings.ResourceManager, new object[]
			{
				id,
				fromType,
				toType
			});
		}

		// Token: 0x06008F30 RID: 36656 RVA: 0x0024C2F0 File Offset: 0x0024A4F0
		public static LocalizedString ErrorFailedToSwitchBackToEarlierPermissionModel(Guid groupMailbox, string error)
		{
			return new LocalizedString("ErrorFailedToSwitchBackToEarlierPermissionModel", "", false, false, Strings.ResourceManager, new object[]
			{
				groupMailbox,
				error
			});
		}

		// Token: 0x17002D55 RID: 11605
		// (get) Token: 0x06008F31 RID: 36657 RVA: 0x0024C328 File Offset: 0x0024A528
		public static LocalizedString SmtpConnectivityAllTested
		{
			get
			{
				return new LocalizedString("SmtpConnectivityAllTested", "Ex85C04E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002D56 RID: 11606
		// (get) Token: 0x06008F32 RID: 36658 RVA: 0x0024C346 File Offset: 0x0024A546
		public static LocalizedString ErrorInboxRuleNotSupported
		{
			get
			{
				return new LocalizedString("ErrorInboxRuleNotSupported", "Ex64B5B3", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008F33 RID: 36659 RVA: 0x0024C364 File Offset: 0x0024A564
		public static LocalizedString ErrorSetMailboxPlanRoleAssignment(string user, string role, string plan)
		{
			return new LocalizedString("ErrorSetMailboxPlanRoleAssignment", "ExF60FD0", false, true, Strings.ResourceManager, new object[]
			{
				user,
				role,
				plan
			});
		}

		// Token: 0x06008F34 RID: 36660 RVA: 0x0024C39C File Offset: 0x0024A59C
		public static LocalizedString GetFederationInformationProxy(string proxyAddress)
		{
			return new LocalizedString("GetFederationInformationProxy", "Ex8349C6", false, true, Strings.ResourceManager, new object[]
			{
				proxyAddress
			});
		}

		// Token: 0x06008F35 RID: 36661 RVA: 0x0024C3CC File Offset: 0x0024A5CC
		public static LocalizedString ErrorDomainNameNotAcceptedDomain(string domain)
		{
			return new LocalizedString("ErrorDomainNameNotAcceptedDomain", "ExF8ECE1", false, true, Strings.ResourceManager, new object[]
			{
				domain
			});
		}

		// Token: 0x17002D57 RID: 11607
		// (get) Token: 0x06008F36 RID: 36662 RVA: 0x0024C3FB File Offset: 0x0024A5FB
		public static LocalizedString Verbose
		{
			get
			{
				return new LocalizedString("Verbose", "Ex1E07E9", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008F37 RID: 36663 RVA: 0x0024C41C File Offset: 0x0024A61C
		public static LocalizedString VerboseTaskParameters(string exchangeInstallPath, string relativePath, string fullPath, string xmlNodeName)
		{
			return new LocalizedString("VerboseTaskParameters", "Ex591DBF", false, true, Strings.ResourceManager, new object[]
			{
				exchangeInstallPath,
				relativePath,
				fullPath,
				xmlNodeName
			});
		}

		// Token: 0x06008F38 RID: 36664 RVA: 0x0024C458 File Offset: 0x0024A658
		public static LocalizedString messageRFROperationException(string operation, int returnValue, string serverId, string userName)
		{
			return new LocalizedString("messageRFROperationException", "", false, false, Strings.ResourceManager, new object[]
			{
				operation,
				returnValue,
				serverId,
				userName
			});
		}

		// Token: 0x17002D58 RID: 11608
		// (get) Token: 0x06008F39 RID: 36665 RVA: 0x0024C498 File Offset: 0x0024A698
		public static LocalizedString ContinueToRemoveHoldForInactive
		{
			get
			{
				return new LocalizedString("ContinueToRemoveHoldForInactive", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008F3A RID: 36666 RVA: 0x0024C4B8 File Offset: 0x0024A6B8
		public static LocalizedString InfoAclNotCanonical(string dn)
		{
			return new LocalizedString("InfoAclNotCanonical", "Ex28423C", false, true, Strings.ResourceManager, new object[]
			{
				dn
			});
		}

		// Token: 0x06008F3B RID: 36667 RVA: 0x0024C4E8 File Offset: 0x0024A6E8
		public static LocalizedString ConfirmationMessageSetActiveSyncDeviceAutoblockThreshold(string identity)
		{
			return new LocalizedString("ConfirmationMessageSetActiveSyncDeviceAutoblockThreshold", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x17002D59 RID: 11609
		// (get) Token: 0x06008F3C RID: 36668 RVA: 0x0024C517 File Offset: 0x0024A717
		public static LocalizedString CasHealthLatencyHeader
		{
			get
			{
				return new LocalizedString("CasHealthLatencyHeader", "ExCBB702", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002D5A RID: 11610
		// (get) Token: 0x06008F3D RID: 36669 RVA: 0x0024C535 File Offset: 0x0024A735
		public static LocalizedString ADAttributeFaxNumber
		{
			get
			{
				return new LocalizedString("ADAttributeFaxNumber", "Ex8F68E5", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008F3E RID: 36670 RVA: 0x0024C554 File Offset: 0x0024A754
		public static LocalizedString MailboxSearchNameIsNotUnique(string name)
		{
			return new LocalizedString("MailboxSearchNameIsNotUnique", "ExD7CA77", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x06008F3F RID: 36671 RVA: 0x0024C584 File Offset: 0x0024A784
		public static LocalizedString FailedToEvictNodeException(string nodeName, string dagName, string error)
		{
			return new LocalizedString("FailedToEvictNodeException", "", false, false, Strings.ResourceManager, new object[]
			{
				nodeName,
				dagName,
				error
			});
		}

		// Token: 0x06008F40 RID: 36672 RVA: 0x0024C5BC File Offset: 0x0024A7BC
		public static LocalizedString ConfirmationMessageRemoveDistributionGroupMember(string Identity, string Member)
		{
			return new LocalizedString("ConfirmationMessageRemoveDistributionGroupMember", "Ex6A77B7", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				Member
			});
		}

		// Token: 0x06008F41 RID: 36673 RVA: 0x0024C5F0 File Offset: 0x0024A7F0
		public static LocalizedString VerboseSkipCreatingRoleAssignment(string roleAssignee, string role, string delegationType)
		{
			return new LocalizedString("VerboseSkipCreatingRoleAssignment", "ExA35AB5", false, true, Strings.ResourceManager, new object[]
			{
				roleAssignee,
				role,
				delegationType
			});
		}

		// Token: 0x17002D5B RID: 11611
		// (get) Token: 0x06008F42 RID: 36674 RVA: 0x0024C627 File Offset: 0x0024A827
		public static LocalizedString SetupProgressCreateOutlookContainer
		{
			get
			{
				return new LocalizedString("SetupProgressCreateOutlookContainer", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008F43 RID: 36675 RVA: 0x0024C648 File Offset: 0x0024A848
		public static LocalizedString SeedingEdbFileExists(string path)
		{
			return new LocalizedString("SeedingEdbFileExists", "ExD724EB", false, true, Strings.ResourceManager, new object[]
			{
				path
			});
		}

		// Token: 0x17002D5C RID: 11612
		// (get) Token: 0x06008F44 RID: 36676 RVA: 0x0024C677 File Offset: 0x0024A877
		public static LocalizedString InvalidCategoryObject
		{
			get
			{
				return new LocalizedString("InvalidCategoryObject", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002D5D RID: 11613
		// (get) Token: 0x06008F45 RID: 36677 RVA: 0x0024C695 File Offset: 0x0024A895
		public static LocalizedString OfficeDataLoaderServiceDisplayName
		{
			get
			{
				return new LocalizedString("OfficeDataLoaderServiceDisplayName", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008F46 RID: 36678 RVA: 0x0024C6B4 File Offset: 0x0024A8B4
		public static LocalizedString ErrorUserWithMatchingWindowsLiveIdAndDifferentNetIdExists(string liveID, string recipient)
		{
			return new LocalizedString("ErrorUserWithMatchingWindowsLiveIdAndDifferentNetIdExists", "ExF0B632", false, true, Strings.ResourceManager, new object[]
			{
				liveID,
				recipient
			});
		}

		// Token: 0x17002D5E RID: 11614
		// (get) Token: 0x06008F47 RID: 36679 RVA: 0x0024C6E7 File Offset: 0x0024A8E7
		public static LocalizedString MoveStatusSucceeded
		{
			get
			{
				return new LocalizedString("MoveStatusSucceeded", "ExEE3E53", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008F48 RID: 36680 RVA: 0x0024C708 File Offset: 0x0024A908
		public static LocalizedString MailboxSearchRpcCallFailed(string serverName, int errorCode)
		{
			return new LocalizedString("MailboxSearchRpcCallFailed", "", false, false, Strings.ResourceManager, new object[]
			{
				serverName,
				errorCode
			});
		}

		// Token: 0x06008F49 RID: 36681 RVA: 0x0024C740 File Offset: 0x0024A940
		public static LocalizedString ErrorFailedToRemoveMonitoringMailbox(string databaseName, string exceptionString)
		{
			return new LocalizedString("ErrorFailedToRemoveMonitoringMailbox", "", false, false, Strings.ResourceManager, new object[]
			{
				databaseName,
				exceptionString
			});
		}

		// Token: 0x17002D5F RID: 11615
		// (get) Token: 0x06008F4A RID: 36682 RVA: 0x0024C773 File Offset: 0x0024A973
		public static LocalizedString LoadCredentialsSuccess
		{
			get
			{
				return new LocalizedString("LoadCredentialsSuccess", "ExF932F6", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002D60 RID: 11616
		// (get) Token: 0x06008F4B RID: 36683 RVA: 0x0024C791 File Offset: 0x0024A991
		public static LocalizedString LegacyIncludeOriginalMailParameterWillBeUpgraded
		{
			get
			{
				return new LocalizedString("LegacyIncludeOriginalMailParameterWillBeUpgraded", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008F4C RID: 36684 RVA: 0x0024C7B0 File Offset: 0x0024A9B0
		public static LocalizedString VerboseEndTextExtraction(int streamCount)
		{
			return new LocalizedString("VerboseEndTextExtraction", "", false, false, Strings.ResourceManager, new object[]
			{
				streamCount
			});
		}

		// Token: 0x17002D61 RID: 11617
		// (get) Token: 0x06008F4D RID: 36685 RVA: 0x0024C7E4 File Offset: 0x0024A9E4
		public static LocalizedString FileShareQuorumCheckDesc
		{
			get
			{
				return new LocalizedString("FileShareQuorumCheckDesc", "Ex2C21C1", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002D62 RID: 11618
		// (get) Token: 0x06008F4E RID: 36686 RVA: 0x0024C802 File Offset: 0x0024AA02
		public static LocalizedString ClientAccessComponentDescription
		{
			get
			{
				return new LocalizedString("ClientAccessComponentDescription", "ExC425FB", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008F4F RID: 36687 RVA: 0x0024C820 File Offset: 0x0024AA20
		public static LocalizedString FindingServer(string serverName)
		{
			return new LocalizedString("FindingServer", "Ex511645", false, true, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		// Token: 0x17002D63 RID: 11619
		// (get) Token: 0x06008F50 RID: 36688 RVA: 0x0024C84F File Offset: 0x0024AA4F
		public static LocalizedString StopADTopologyService
		{
			get
			{
				return new LocalizedString("StopADTopologyService", "Ex4C49B0", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002D64 RID: 11620
		// (get) Token: 0x06008F51 RID: 36689 RVA: 0x0024C86D File Offset: 0x0024AA6D
		public static LocalizedString ErrorCannotChangeRoleGroupType
		{
			get
			{
				return new LocalizedString("ErrorCannotChangeRoleGroupType", "ExC3DBCD", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008F52 RID: 36690 RVA: 0x0024C88C File Offset: 0x0024AA8C
		public static LocalizedString InternalTransportCertificateMustBeCAPICertificate(string thumbprint)
		{
			return new LocalizedString("InternalTransportCertificateMustBeCAPICertificate", "Ex504474", false, true, Strings.ResourceManager, new object[]
			{
				thumbprint
			});
		}

		// Token: 0x06008F53 RID: 36691 RVA: 0x0024C8BC File Offset: 0x0024AABC
		public static LocalizedString IllegalVoipPlatformException(string p1, string p2)
		{
			return new LocalizedString("IllegalVoipPlatformException", "Ex4739B0", false, true, Strings.ResourceManager, new object[]
			{
				p1,
				p2
			});
		}

		// Token: 0x17002D65 RID: 11621
		// (get) Token: 0x06008F54 RID: 36692 RVA: 0x0024C8EF File Offset: 0x0024AAEF
		public static LocalizedString ErrorInvalidCasting
		{
			get
			{
				return new LocalizedString("ErrorInvalidCasting", "ExE160BB", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008F55 RID: 36693 RVA: 0x0024C910 File Offset: 0x0024AB10
		public static LocalizedString ErrorPhoneNumberIsNotValid(string phoneNumber)
		{
			return new LocalizedString("ErrorPhoneNumberIsNotValid", "", false, false, Strings.ResourceManager, new object[]
			{
				phoneNumber
			});
		}

		// Token: 0x17002D66 RID: 11622
		// (get) Token: 0x06008F56 RID: 36694 RVA: 0x0024C93F File Offset: 0x0024AB3F
		public static LocalizedString SetupProgressCreatingNewPublicFolderDatabase
		{
			get
			{
				return new LocalizedString("SetupProgressCreatingNewPublicFolderDatabase", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002D67 RID: 11623
		// (get) Token: 0x06008F57 RID: 36695 RVA: 0x0024C95D File Offset: 0x0024AB5D
		public static LocalizedString SortedAvailablePatches
		{
			get
			{
				return new LocalizedString("SortedAvailablePatches", "Ex9294F5", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002D68 RID: 11624
		// (get) Token: 0x06008F58 RID: 36696 RVA: 0x0024C97B File Offset: 0x0024AB7B
		public static LocalizedString WarningSetMailboxLitigationHoldDuration
		{
			get
			{
				return new LocalizedString("WarningSetMailboxLitigationHoldDuration", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008F59 RID: 36697 RVA: 0x0024C99C File Offset: 0x0024AB9C
		public static LocalizedString ErrorRecordReport(string message, int count)
		{
			return new LocalizedString("ErrorRecordReport", "Ex79EAB1", false, true, Strings.ResourceManager, new object[]
			{
				message,
				count
			});
		}

		// Token: 0x06008F5A RID: 36698 RVA: 0x0024C9D4 File Offset: 0x0024ABD4
		public static LocalizedString ErrorCasArrayOrServerAlreadyExists(string idStringValue)
		{
			return new LocalizedString("ErrorCasArrayOrServerAlreadyExists", "ExDBA271", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		// Token: 0x17002D69 RID: 11625
		// (get) Token: 0x06008F5B RID: 36699 RVA: 0x0024CA03 File Offset: 0x0024AC03
		public static LocalizedString ADUserIsMissingData
		{
			get
			{
				return new LocalizedString("ADUserIsMissingData", "ExF18C62", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008F5C RID: 36700 RVA: 0x0024CA24 File Offset: 0x0024AC24
		public static LocalizedString DirectoryObjectNotFoundException(string dn)
		{
			return new LocalizedString("DirectoryObjectNotFoundException", "Ex6CE03A", false, true, Strings.ResourceManager, new object[]
			{
				dn
			});
		}

		// Token: 0x17002D6A RID: 11626
		// (get) Token: 0x06008F5D RID: 36701 RVA: 0x0024CA53 File Offset: 0x0024AC53
		public static LocalizedString ExpiryCertMessage
		{
			get
			{
				return new LocalizedString("ExpiryCertMessage", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008F5E RID: 36702 RVA: 0x0024CA74 File Offset: 0x0024AC74
		public static LocalizedString ConfirmationMessageRemoveMigrationUser(string userName)
		{
			return new LocalizedString("ConfirmationMessageRemoveMigrationUser", "", false, false, Strings.ResourceManager, new object[]
			{
				userName
			});
		}

		// Token: 0x17002D6B RID: 11627
		// (get) Token: 0x06008F5F RID: 36703 RVA: 0x0024CAA3 File Offset: 0x0024ACA3
		public static LocalizedString ContentIndexAlreadyExists
		{
			get
			{
				return new LocalizedString("ContentIndexAlreadyExists", "Ex8A1A5B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008F60 RID: 36704 RVA: 0x0024CAC4 File Offset: 0x0024ACC4
		public static LocalizedString ErrorTeamMailboxResolveUser(string error)
		{
			return new LocalizedString("ErrorTeamMailboxResolveUser", "", false, false, Strings.ResourceManager, new object[]
			{
				error
			});
		}

		// Token: 0x06008F61 RID: 36705 RVA: 0x0024CAF4 File Offset: 0x0024ACF4
		public static LocalizedString WarningNonZeroItemLimitMerge(string badItemLimitParamName)
		{
			return new LocalizedString("WarningNonZeroItemLimitMerge", "", false, false, Strings.ResourceManager, new object[]
			{
				badItemLimitParamName
			});
		}

		// Token: 0x06008F62 RID: 36706 RVA: 0x0024CB24 File Offset: 0x0024AD24
		public static LocalizedString TestApiCallUnderOauthTask(string appid)
		{
			return new LocalizedString("TestApiCallUnderOauthTask", "", false, false, Strings.ResourceManager, new object[]
			{
				appid
			});
		}

		// Token: 0x06008F63 RID: 36707 RVA: 0x0024CB54 File Offset: 0x0024AD54
		public static LocalizedString DatabaseCopyFailedCheck(string configType, string sgName, string failedState, string serverName, string failedMessage)
		{
			return new LocalizedString("DatabaseCopyFailedCheck", "Ex5DDB70", false, true, Strings.ResourceManager, new object[]
			{
				configType,
				sgName,
				failedState,
				serverName,
				failedMessage
			});
		}

		// Token: 0x06008F64 RID: 36708 RVA: 0x0024CB94 File Offset: 0x0024AD94
		public static LocalizedString ErrorAddressListNotFound(string idStringValue)
		{
			return new LocalizedString("ErrorAddressListNotFound", "Ex4F5430", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		// Token: 0x06008F65 RID: 36709 RVA: 0x0024CBC4 File Offset: 0x0024ADC4
		public static LocalizedString VerboseEatUpException(string error)
		{
			return new LocalizedString("VerboseEatUpException", "Ex688C50", false, true, Strings.ResourceManager, new object[]
			{
				error
			});
		}

		// Token: 0x06008F66 RID: 36710 RVA: 0x0024CBF4 File Offset: 0x0024ADF4
		public static LocalizedString NoActiveSyncOrganizationSettingsException(string organizationId)
		{
			return new LocalizedString("NoActiveSyncOrganizationSettingsException", "Ex1D7279", false, true, Strings.ResourceManager, new object[]
			{
				organizationId
			});
		}

		// Token: 0x17002D6C RID: 11628
		// (get) Token: 0x06008F67 RID: 36711 RVA: 0x0024CC23 File Offset: 0x0024AE23
		public static LocalizedString ImportCertificateBase64DataInvalid
		{
			get
			{
				return new LocalizedString("ImportCertificateBase64DataInvalid", "Ex6769A2", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008F68 RID: 36712 RVA: 0x0024CC44 File Offset: 0x0024AE44
		public static LocalizedString ErrorCannotCalculateDefaultScope(string id, string details)
		{
			return new LocalizedString("ErrorCannotCalculateDefaultScope", "Ex86ECCD", false, true, Strings.ResourceManager, new object[]
			{
				id,
				details
			});
		}

		// Token: 0x06008F69 RID: 36713 RVA: 0x0024CC78 File Offset: 0x0024AE78
		public static LocalizedString ConfirmationMessageNewClientAccessArray(string name, string definition, int count, string site)
		{
			return new LocalizedString("ConfirmationMessageNewClientAccessArray", "ExC32595", false, true, Strings.ResourceManager, new object[]
			{
				name,
				definition,
				count,
				site
			});
		}

		// Token: 0x06008F6A RID: 36714 RVA: 0x0024CCB8 File Offset: 0x0024AEB8
		public static LocalizedString ErrorRBACPolicyLinkNotFound(string name)
		{
			return new LocalizedString("ErrorRBACPolicyLinkNotFound", "ExEA178F", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x06008F6B RID: 36715 RVA: 0x0024CCE8 File Offset: 0x0024AEE8
		public static LocalizedString ConfirmationMessageNewTeamMailboxProvisioningPolicy(string Name)
		{
			return new LocalizedString("ConfirmationMessageNewTeamMailboxProvisioningPolicy", "", false, false, Strings.ResourceManager, new object[]
			{
				Name
			});
		}

		// Token: 0x06008F6C RID: 36716 RVA: 0x0024CD18 File Offset: 0x0024AF18
		public static LocalizedString InterceptorErrorPathInvalidCharacters(string path)
		{
			return new LocalizedString("InterceptorErrorPathInvalidCharacters", "", false, false, Strings.ResourceManager, new object[]
			{
				path
			});
		}

		// Token: 0x17002D6D RID: 11629
		// (get) Token: 0x06008F6D RID: 36717 RVA: 0x0024CD47 File Offset: 0x0024AF47
		public static LocalizedString InfoUL
		{
			get
			{
				return new LocalizedString("InfoUL", "Ex929FAD", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002D6E RID: 11630
		// (get) Token: 0x06008F6E RID: 36718 RVA: 0x0024CD65 File Offset: 0x0024AF65
		public static LocalizedString ErrorLocalMachineIsNotExchangeServer
		{
			get
			{
				return new LocalizedString("ErrorLocalMachineIsNotExchangeServer", "ExA5D4CD", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002D6F RID: 11631
		// (get) Token: 0x06008F6F RID: 36719 RVA: 0x0024CD83 File Offset: 0x0024AF83
		public static LocalizedString ErrorEwsEnforceBlockListAndEwsAllowListSpecified
		{
			get
			{
				return new LocalizedString("ErrorEwsEnforceBlockListAndEwsAllowListSpecified", "Ex8C58B4", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008F70 RID: 36720 RVA: 0x0024CDA4 File Offset: 0x0024AFA4
		public static LocalizedString ErrorIisConfigurationWillRetry(string errortype, string error, int retry)
		{
			return new LocalizedString("ErrorIisConfigurationWillRetry", "", false, false, Strings.ResourceManager, new object[]
			{
				errortype,
				error,
				retry
			});
		}

		// Token: 0x06008F71 RID: 36721 RVA: 0x0024CDE0 File Offset: 0x0024AFE0
		public static LocalizedString VerbosePfdbIsSetAsFirstInstance(string id)
		{
			return new LocalizedString("VerbosePfdbIsSetAsFirstInstance", "Ex6AF845", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x17002D70 RID: 11632
		// (get) Token: 0x06008F72 RID: 36722 RVA: 0x0024CE0F File Offset: 0x0024B00F
		public static LocalizedString MoveMailboxSourceCleanupTypeCreateSourceContact
		{
			get
			{
				return new LocalizedString("MoveMailboxSourceCleanupTypeCreateSourceContact", "Ex69F361", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008F73 RID: 36723 RVA: 0x0024CE30 File Offset: 0x0024B030
		public static LocalizedString ErrorOrgUserBeAssignedToParentOrg(string id)
		{
			return new LocalizedString("ErrorOrgUserBeAssignedToParentOrg", "Ex0CA982", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x06008F74 RID: 36724 RVA: 0x0024CE60 File Offset: 0x0024B060
		public static LocalizedString VerboseWillSkipUpdateServicePlan(string org)
		{
			return new LocalizedString("VerboseWillSkipUpdateServicePlan", "Ex8AC90A", false, true, Strings.ResourceManager, new object[]
			{
				org
			});
		}

		// Token: 0x06008F75 RID: 36725 RVA: 0x0024CE90 File Offset: 0x0024B090
		public static LocalizedString ErrorExcludedDCConflict(string hostName)
		{
			return new LocalizedString("ErrorExcludedDCConflict", "Ex1A6B15", false, true, Strings.ResourceManager, new object[]
			{
				hostName
			});
		}

		// Token: 0x06008F76 RID: 36726 RVA: 0x0024CEC0 File Offset: 0x0024B0C0
		public static LocalizedString ErrorCouldNotLocateMailboxPlanForMailUser(string user)
		{
			return new LocalizedString("ErrorCouldNotLocateMailboxPlanForMailUser", "", false, false, Strings.ResourceManager, new object[]
			{
				user
			});
		}

		// Token: 0x17002D71 RID: 11633
		// (get) Token: 0x06008F77 RID: 36727 RVA: 0x0024CEEF File Offset: 0x0024B0EF
		public static LocalizedString MRSHealthPassed
		{
			get
			{
				return new LocalizedString("MRSHealthPassed", "Ex361CB6", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002D72 RID: 11634
		// (get) Token: 0x06008F78 RID: 36728 RVA: 0x0024CF0D File Offset: 0x0024B10D
		public static LocalizedString ErrorAccessingTransportSettings
		{
			get
			{
				return new LocalizedString("ErrorAccessingTransportSettings", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002D73 RID: 11635
		// (get) Token: 0x06008F79 RID: 36729 RVA: 0x0024CF2B File Offset: 0x0024B12B
		public static LocalizedString PopImapLoggingOff
		{
			get
			{
				return new LocalizedString("PopImapLoggingOff", "Ex096E00", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002D74 RID: 11636
		// (get) Token: 0x06008F7A RID: 36730 RVA: 0x0024CF49 File Offset: 0x0024B149
		public static LocalizedString ConfirmationMessageRemoveProvisioningWebServiceVirtualDirectory
		{
			get
			{
				return new LocalizedString("ConfirmationMessageRemoveProvisioningWebServiceVirtualDirectory", "Ex7D213E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002D75 RID: 11637
		// (get) Token: 0x06008F7B RID: 36731 RVA: 0x0024CF67 File Offset: 0x0024B167
		public static LocalizedString MtrtMessageSubmitDetailMessage
		{
			get
			{
				return new LocalizedString("MtrtMessageSubmitDetailMessage", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002D76 RID: 11638
		// (get) Token: 0x06008F7C RID: 36732 RVA: 0x0024CF85 File Offset: 0x0024B185
		public static LocalizedString TheOnlySourceMailboxIsTheTargetMailbox
		{
			get
			{
				return new LocalizedString("TheOnlySourceMailboxIsTheTargetMailbox", "ExEBE54F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008F7D RID: 36733 RVA: 0x0024CFA4 File Offset: 0x0024B1A4
		public static LocalizedString SendConnectorNonSmtpAddressSpaceOnDNSConnector(string addressSpace)
		{
			return new LocalizedString("SendConnectorNonSmtpAddressSpaceOnDNSConnector", "Ex4E1D72", false, true, Strings.ResourceManager, new object[]
			{
				addressSpace
			});
		}

		// Token: 0x17002D77 RID: 11639
		// (get) Token: 0x06008F7E RID: 36734 RVA: 0x0024CFD3 File Offset: 0x0024B1D3
		public static LocalizedString UnifiedMessagingRoleDisplayName
		{
			get
			{
				return new LocalizedString("UnifiedMessagingRoleDisplayName", "Ex5C8072", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008F7F RID: 36735 RVA: 0x0024CFF4 File Offset: 0x0024B1F4
		public static LocalizedString UnableToConnectToEdge(string edgeName, string hubName, string message)
		{
			return new LocalizedString("UnableToConnectToEdge", "ExD6CA53", false, true, Strings.ResourceManager, new object[]
			{
				edgeName,
				hubName,
				message
			});
		}

		// Token: 0x06008F80 RID: 36736 RVA: 0x0024D02C File Offset: 0x0024B22C
		public static LocalizedString ErrorUnexpectedAccountForestValueInGls(string tenant, string actual, string expected)
		{
			return new LocalizedString("ErrorUnexpectedAccountForestValueInGls", "", false, false, Strings.ResourceManager, new object[]
			{
				tenant,
				actual,
				expected
			});
		}

		// Token: 0x06008F81 RID: 36737 RVA: 0x0024D064 File Offset: 0x0024B264
		public static LocalizedString ReportUpdateMovedMailboxError(LocalizedString reason)
		{
			return new LocalizedString("ReportUpdateMovedMailboxError", "ExD3D9B0", false, true, Strings.ResourceManager, new object[]
			{
				reason
			});
		}

		// Token: 0x06008F82 RID: 36738 RVA: 0x0024D098 File Offset: 0x0024B298
		public static LocalizedString CasHealthWebAppBuildVdirList(LocalizedString applicationLongName, string hostName)
		{
			return new LocalizedString("CasHealthWebAppBuildVdirList", "ExB7570D", false, true, Strings.ResourceManager, new object[]
			{
				applicationLongName,
				hostName
			});
		}

		// Token: 0x06008F83 RID: 36739 RVA: 0x0024D0D0 File Offset: 0x0024B2D0
		public static LocalizedString ErrorBadItemLimitOutOfRange(string identity, int actual, int min, int max)
		{
			return new LocalizedString("ErrorBadItemLimitOutOfRange", "Ex0A0EC7", false, true, Strings.ResourceManager, new object[]
			{
				identity,
				actual,
				min,
				max
			});
		}

		// Token: 0x06008F84 RID: 36740 RVA: 0x0024D11C File Offset: 0x0024B31C
		public static LocalizedString ComAdminPropertyException(string objectName, string propertyName, string propertyValue)
		{
			return new LocalizedString("ComAdminPropertyException", "Ex64F3C5", false, true, Strings.ResourceManager, new object[]
			{
				objectName,
				propertyName,
				propertyValue
			});
		}

		// Token: 0x17002D78 RID: 11640
		// (get) Token: 0x06008F85 RID: 36741 RVA: 0x0024D153 File Offset: 0x0024B353
		public static LocalizedString TpdAlreadyImported
		{
			get
			{
				return new LocalizedString("TpdAlreadyImported", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008F86 RID: 36742 RVA: 0x0024D174 File Offset: 0x0024B374
		public static LocalizedString OwaIsapiFilterException(string errorMessage, int hresult)
		{
			return new LocalizedString("OwaIsapiFilterException", "ExE25DBF", false, true, Strings.ResourceManager, new object[]
			{
				errorMessage,
				hresult
			});
		}

		// Token: 0x06008F87 RID: 36743 RVA: 0x0024D1AC File Offset: 0x0024B3AC
		public static LocalizedString ErrorCommandExecutionException(string script, string message)
		{
			return new LocalizedString("ErrorCommandExecutionException", "Ex88D115", false, true, Strings.ResourceManager, new object[]
			{
				script,
				message
			});
		}

		// Token: 0x06008F88 RID: 36744 RVA: 0x0024D1E0 File Offset: 0x0024B3E0
		public static LocalizedString LogExecutingCommand(string commandLine)
		{
			return new LocalizedString("LogExecutingCommand", "ExD63ABD", false, true, Strings.ResourceManager, new object[]
			{
				commandLine
			});
		}

		// Token: 0x06008F89 RID: 36745 RVA: 0x0024D210 File Offset: 0x0024B410
		public static LocalizedString WarningMaxCmdletsRatioNotSupported(string psMaxCmdlets, string exMaxCmdlets)
		{
			return new LocalizedString("WarningMaxCmdletsRatioNotSupported", "", false, false, Strings.ResourceManager, new object[]
			{
				psMaxCmdlets,
				exMaxCmdlets
			});
		}

		// Token: 0x17002D79 RID: 11641
		// (get) Token: 0x06008F8A RID: 36746 RVA: 0x0024D243 File Offset: 0x0024B443
		public static LocalizedString SetupProgressStoppingNotificationsBrokerService
		{
			get
			{
				return new LocalizedString("SetupProgressStoppingNotificationsBrokerService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008F8B RID: 36747 RVA: 0x0024D264 File Offset: 0x0024B464
		public static LocalizedString ConfirmationMessageNewOwaVirtualDirectory(string WebSiteName, string Server)
		{
			return new LocalizedString("ConfirmationMessageNewOwaVirtualDirectory", "ExC32765", false, true, Strings.ResourceManager, new object[]
			{
				WebSiteName,
				Server
			});
		}

		// Token: 0x06008F8C RID: 36748 RVA: 0x0024D298 File Offset: 0x0024B498
		public static LocalizedString TestSearchNoMailbox(string role, string id)
		{
			return new LocalizedString("TestSearchNoMailbox", "Ex9B4ACD", false, true, Strings.ResourceManager, new object[]
			{
				role,
				id
			});
		}

		// Token: 0x17002D7A RID: 11642
		// (get) Token: 0x06008F8D RID: 36749 RVA: 0x0024D2CB File Offset: 0x0024B4CB
		public static LocalizedString CannotBypassDomainNameValidation
		{
			get
			{
				return new LocalizedString("CannotBypassDomainNameValidation", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002D7B RID: 11643
		// (get) Token: 0x06008F8E RID: 36750 RVA: 0x0024D2E9 File Offset: 0x0024B4E9
		public static LocalizedString InitialOrIncrementalMigrationArgument
		{
			get
			{
				return new LocalizedString("InitialOrIncrementalMigrationArgument", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008F8F RID: 36751 RVA: 0x0024D308 File Offset: 0x0024B508
		public static LocalizedString ErrorNoArchiveForPublicMailbox(string user)
		{
			return new LocalizedString("ErrorNoArchiveForPublicMailbox", "", false, false, Strings.ResourceManager, new object[]
			{
				user
			});
		}

		// Token: 0x17002D7C RID: 11644
		// (get) Token: 0x06008F90 RID: 36752 RVA: 0x0024D337 File Offset: 0x0024B537
		public static LocalizedString VerboseBeginFingerprint
		{
			get
			{
				return new LocalizedString("VerboseBeginFingerprint", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002D7D RID: 11645
		// (get) Token: 0x06008F91 RID: 36753 RVA: 0x0024D355 File Offset: 0x0024B555
		public static LocalizedString MailboxReplicationServiceNotRunning
		{
			get
			{
				return new LocalizedString("MailboxReplicationServiceNotRunning", "Ex0D08D2", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008F92 RID: 36754 RVA: 0x0024D374 File Offset: 0x0024B574
		public static LocalizedString ConfirmationMessageSetHostedContentFilterPolicy(string identity)
		{
			return new LocalizedString("ConfirmationMessageSetHostedContentFilterPolicy", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x17002D7E RID: 11646
		// (get) Token: 0x06008F93 RID: 36755 RVA: 0x0024D3A3 File Offset: 0x0024B5A3
		public static LocalizedString AddressBookServiceDescription
		{
			get
			{
				return new LocalizedString("AddressBookServiceDescription", "Ex03307E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002D7F RID: 11647
		// (get) Token: 0x06008F94 RID: 36756 RVA: 0x0024D3C1 File Offset: 0x0024B5C1
		public static LocalizedString MonitoringCorrelationServiceDescription
		{
			get
			{
				return new LocalizedString("MonitoringCorrelationServiceDescription", "ExEB1F62", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002D80 RID: 11648
		// (get) Token: 0x06008F95 RID: 36757 RVA: 0x0024D3DF File Offset: 0x0024B5DF
		public static LocalizedString ErrorCannotRetrieveLocalSite
		{
			get
			{
				return new LocalizedString("ErrorCannotRetrieveLocalSite", "Ex8FFBBA", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008F96 RID: 36758 RVA: 0x0024D400 File Offset: 0x0024B600
		public static LocalizedString ErrorTargetMailboxDnNotFound(string originalId, string originalAlias)
		{
			return new LocalizedString("ErrorTargetMailboxDnNotFound", "ExF5B981", false, true, Strings.ResourceManager, new object[]
			{
				originalId,
				originalAlias
			});
		}

		// Token: 0x17002D81 RID: 11649
		// (get) Token: 0x06008F97 RID: 36759 RVA: 0x0024D433 File Offset: 0x0024B633
		public static LocalizedString SetupProgressDiscoveryMailboxes
		{
			get
			{
				return new LocalizedString("SetupProgressDiscoveryMailboxes", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008F98 RID: 36760 RVA: 0x0024D454 File Offset: 0x0024B654
		public static LocalizedString DagTaskUpdatingAdDagStartedStoppedMembership(string serverName, string dagName)
		{
			return new LocalizedString("DagTaskUpdatingAdDagStartedStoppedMembership", "", false, false, Strings.ResourceManager, new object[]
			{
				serverName,
				dagName
			});
		}

		// Token: 0x06008F99 RID: 36761 RVA: 0x0024D488 File Offset: 0x0024B688
		public static LocalizedString SetMailForestContactNotAllowed(string name)
		{
			return new LocalizedString("SetMailForestContactNotAllowed", "Ex144C0E", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x17002D82 RID: 11650
		// (get) Token: 0x06008F9A RID: 36762 RVA: 0x0024D4B7 File Offset: 0x0024B6B7
		public static LocalizedString ErrorApprovalApplicationIdentityUnsupported
		{
			get
			{
				return new LocalizedString("ErrorApprovalApplicationIdentityUnsupported", "ExAC0556", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002D83 RID: 11651
		// (get) Token: 0x06008F9B RID: 36763 RVA: 0x0024D4D5 File Offset: 0x0024B6D5
		public static LocalizedString CasHealthOwaInternalTrustCertificate
		{
			get
			{
				return new LocalizedString("CasHealthOwaInternalTrustCertificate", "Ex7A970D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002D84 RID: 11652
		// (get) Token: 0x06008F9C RID: 36764 RVA: 0x0024D4F3 File Offset: 0x0024B6F3
		public static LocalizedString EnableCertificateServiceNotInstalled
		{
			get
			{
				return new LocalizedString("EnableCertificateServiceNotInstalled", "Ex6D34A4", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002D85 RID: 11653
		// (get) Token: 0x06008F9D RID: 36765 RVA: 0x0024D511 File Offset: 0x0024B711
		public static LocalizedString SetupProgressCreateOutlookProtectionRulesContainer
		{
			get
			{
				return new LocalizedString("SetupProgressCreateOutlookProtectionRulesContainer", "ExCCC19F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008F9E RID: 36766 RVA: 0x0024D530 File Offset: 0x0024B730
		public static LocalizedString ConfirmationMessageTestMAPIConnectivityIdentity(string Identity)
		{
			return new LocalizedString("ConfirmationMessageTestMAPIConnectivityIdentity", "Ex079C4A", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x17002D86 RID: 11654
		// (get) Token: 0x06008F9F RID: 36767 RVA: 0x0024D55F File Offset: 0x0024B75F
		public static LocalizedString MailboxReplicationServiceIsRunning
		{
			get
			{
				return new LocalizedString("MailboxReplicationServiceIsRunning", "Ex722054", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008FA0 RID: 36768 RVA: 0x0024D580 File Offset: 0x0024B780
		public static LocalizedString InvalidMessageDataClassificationParameterLessThanOne(string paramName)
		{
			return new LocalizedString("InvalidMessageDataClassificationParameterLessThanOne", "", false, false, Strings.ResourceManager, new object[]
			{
				paramName
			});
		}

		// Token: 0x17002D87 RID: 11655
		// (get) Token: 0x06008FA1 RID: 36769 RVA: 0x0024D5AF File Offset: 0x0024B7AF
		public static LocalizedString PolicyNeededForAutotagging
		{
			get
			{
				return new LocalizedString("PolicyNeededForAutotagging", "Ex604251", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008FA2 RID: 36770 RVA: 0x0024D5D0 File Offset: 0x0024B7D0
		public static LocalizedString VerboseRecipientTypeDetailsIgnored(string details)
		{
			return new LocalizedString("VerboseRecipientTypeDetailsIgnored", "ExD0432B", false, true, Strings.ResourceManager, new object[]
			{
				details
			});
		}

		// Token: 0x06008FA3 RID: 36771 RVA: 0x0024D600 File Offset: 0x0024B800
		public static LocalizedString ConfirmationMessageRemoveManagementRoleAssignment(string Identity, string Role, string RoleAssignee, string DelegationType, string RecipientWriteScope, string ConfigWriteScope)
		{
			return new LocalizedString("ConfirmationMessageRemoveManagementRoleAssignment", "Ex321B0B", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				Role,
				RoleAssignee,
				DelegationType,
				RecipientWriteScope,
				ConfigWriteScope
			});
		}

		// Token: 0x17002D88 RID: 11656
		// (get) Token: 0x06008FA4 RID: 36772 RVA: 0x0024D645 File Offset: 0x0024B845
		public static LocalizedString CasHealthOwaLogonScenarioName
		{
			get
			{
				return new LocalizedString("CasHealthOwaLogonScenarioName", "ExFF8B2D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008FA5 RID: 36773 RVA: 0x0024D664 File Offset: 0x0024B864
		public static LocalizedString ErrorOabGenFailedForAllOrgMailboxes(string oabId)
		{
			return new LocalizedString("ErrorOabGenFailedForAllOrgMailboxes", "", false, false, Strings.ResourceManager, new object[]
			{
				oabId
			});
		}

		// Token: 0x17002D89 RID: 11657
		// (get) Token: 0x06008FA6 RID: 36774 RVA: 0x0024D693 File Offset: 0x0024B893
		public static LocalizedString RemoveSecondaryDomainDescription
		{
			get
			{
				return new LocalizedString("RemoveSecondaryDomainDescription", "ExA03D3F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008FA7 RID: 36775 RVA: 0x0024D6B4 File Offset: 0x0024B8B4
		public static LocalizedString ErrorWillNotPerformOnInheritedAce(string rights, string controlType, string id)
		{
			return new LocalizedString("ErrorWillNotPerformOnInheritedAce", "Ex0811FC", false, true, Strings.ResourceManager, new object[]
			{
				rights,
				controlType,
				id
			});
		}

		// Token: 0x06008FA8 RID: 36776 RVA: 0x0024D6EC File Offset: 0x0024B8EC
		public static LocalizedString CasHealthWebAppBadVdirConfig(LocalizedString applicationShortName)
		{
			return new LocalizedString("CasHealthWebAppBadVdirConfig", "Ex9EC38B", false, true, Strings.ResourceManager, new object[]
			{
				applicationShortName
			});
		}

		// Token: 0x06008FA9 RID: 36777 RVA: 0x0024D720 File Offset: 0x0024B920
		public static LocalizedString TestSearchStoreServiceNotRunning(string mdb)
		{
			return new LocalizedString("TestSearchStoreServiceNotRunning", "ExE7D720", false, true, Strings.ResourceManager, new object[]
			{
				mdb
			});
		}

		// Token: 0x06008FAA RID: 36778 RVA: 0x0024D750 File Offset: 0x0024B950
		public static LocalizedString CurrentExternalDirectoryOrganizationId(string externalOrganizationId)
		{
			return new LocalizedString("CurrentExternalDirectoryOrganizationId", "", false, false, Strings.ResourceManager, new object[]
			{
				externalOrganizationId
			});
		}

		// Token: 0x17002D8A RID: 11658
		// (get) Token: 0x06008FAB RID: 36779 RVA: 0x0024D77F File Offset: 0x0024B97F
		public static LocalizedString SetupProgressSkipResetPasswordOnFirstLogonEnabled
		{
			get
			{
				return new LocalizedString("SetupProgressSkipResetPasswordOnFirstLogonEnabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002D8B RID: 11659
		// (get) Token: 0x06008FAC RID: 36780 RVA: 0x0024D79D File Offset: 0x0024B99D
		public static LocalizedString RejectMessageParameterWillBeIgnored
		{
			get
			{
				return new LocalizedString("RejectMessageParameterWillBeIgnored", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002D8C RID: 11660
		// (get) Token: 0x06008FAD RID: 36781 RVA: 0x0024D7BB File Offset: 0x0024B9BB
		public static LocalizedString ReplayLagStatusLabelConfigured
		{
			get
			{
				return new LocalizedString("ReplayLagStatusLabelConfigured", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002D8D RID: 11661
		// (get) Token: 0x06008FAE RID: 36782 RVA: 0x0024D7D9 File Offset: 0x0024B9D9
		public static LocalizedString WarningTooManyLegacyGALsCreated
		{
			get
			{
				return new LocalizedString("WarningTooManyLegacyGALsCreated", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008FAF RID: 36783 RVA: 0x0024D7F8 File Offset: 0x0024B9F8
		public static LocalizedString ContentFilterUsedVerbose(string restrictionStr)
		{
			return new LocalizedString("ContentFilterUsedVerbose", "ExC967DC", false, true, Strings.ResourceManager, new object[]
			{
				restrictionStr
			});
		}

		// Token: 0x06008FB0 RID: 36784 RVA: 0x0024D828 File Offset: 0x0024BA28
		public static LocalizedString ErrorTargetUserAlreadyHasArchiveMailbox(string user)
		{
			return new LocalizedString("ErrorTargetUserAlreadyHasArchiveMailbox", "ExE0955B", false, true, Strings.ResourceManager, new object[]
			{
				user
			});
		}

		// Token: 0x17002D8E RID: 11662
		// (get) Token: 0x06008FB1 RID: 36785 RVA: 0x0024D857 File Offset: 0x0024BA57
		public static LocalizedString ErrorLegacyPublicFolderDatabaseExist
		{
			get
			{
				return new LocalizedString("ErrorLegacyPublicFolderDatabaseExist", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008FB2 RID: 36786 RVA: 0x0024D878 File Offset: 0x0024BA78
		public static LocalizedString ConfirmationMessageMailboxJunkEmailConfiguration(string Identity)
		{
			return new LocalizedString("ConfirmationMessageMailboxJunkEmailConfiguration", "ExB79F0A", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x17002D8F RID: 11663
		// (get) Token: 0x06008FB3 RID: 36787 RVA: 0x0024D8A7 File Offset: 0x0024BAA7
		public static LocalizedString UninstallMailboxTransportDeliveryServiceTask
		{
			get
			{
				return new LocalizedString("UninstallMailboxTransportDeliveryServiceTask", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002D90 RID: 11664
		// (get) Token: 0x06008FB4 RID: 36788 RVA: 0x0024D8C5 File Offset: 0x0024BAC5
		public static LocalizedString LiveIdAuthenticationResultUndefined
		{
			get
			{
				return new LocalizedString("LiveIdAuthenticationResultUndefined", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008FB5 RID: 36789 RVA: 0x0024D8E4 File Offset: 0x0024BAE4
		public static LocalizedString SenderIPAddressOverlapsExistingTenantInboundConnectors(string ipRanges, string inboundConnectorNames)
		{
			return new LocalizedString("SenderIPAddressOverlapsExistingTenantInboundConnectors", "", false, false, Strings.ResourceManager, new object[]
			{
				ipRanges,
				inboundConnectorNames
			});
		}

		// Token: 0x17002D91 RID: 11665
		// (get) Token: 0x06008FB6 RID: 36790 RVA: 0x0024D917 File Offset: 0x0024BB17
		public static LocalizedString AspnetConfigFileNotFound
		{
			get
			{
				return new LocalizedString("AspnetConfigFileNotFound", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002D92 RID: 11666
		// (get) Token: 0x06008FB7 RID: 36791 RVA: 0x0024D935 File Offset: 0x0024BB35
		public static LocalizedString CannotMoveOabToE15OrLaterServer
		{
			get
			{
				return new LocalizedString("CannotMoveOabToE15OrLaterServer", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008FB8 RID: 36792 RVA: 0x0024D954 File Offset: 0x0024BB54
		public static LocalizedString ConfirmationMessageSaveUserPhoto(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSaveUserPhoto", "", false, false, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x06008FB9 RID: 36793 RVA: 0x0024D984 File Offset: 0x0024BB84
		public static LocalizedString FormsAuthenticationMarkPathErrorPathNotFoundException(string metabasePath)
		{
			return new LocalizedString("FormsAuthenticationMarkPathErrorPathNotFoundException", "Ex24D1AC", false, true, Strings.ResourceManager, new object[]
			{
				metabasePath
			});
		}

		// Token: 0x06008FBA RID: 36794 RVA: 0x0024D9B4 File Offset: 0x0024BBB4
		public static LocalizedString CasHealthWebAppResponseReceived(Uri responseUri, HttpStatusCode statusCode, string serverName, string additionalInfo)
		{
			return new LocalizedString("CasHealthWebAppResponseReceived", "Ex83EB8C", false, true, Strings.ResourceManager, new object[]
			{
				responseUri,
				statusCode,
				serverName,
				additionalInfo
			});
		}

		// Token: 0x17002D93 RID: 11667
		// (get) Token: 0x06008FBB RID: 36795 RVA: 0x0024D9F4 File Offset: 0x0024BBF4
		public static LocalizedString ErrorNotSupportedModifyMultivaluedProperties
		{
			get
			{
				return new LocalizedString("ErrorNotSupportedModifyMultivaluedProperties", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008FBC RID: 36796 RVA: 0x0024DA14 File Offset: 0x0024BC14
		public static LocalizedString WarningRetentionPolicyTagCorrupted(string tag)
		{
			return new LocalizedString("WarningRetentionPolicyTagCorrupted", "Ex660FC6", false, true, Strings.ResourceManager, new object[]
			{
				tag
			});
		}

		// Token: 0x06008FBD RID: 36797 RVA: 0x0024DA44 File Offset: 0x0024BC44
		public static LocalizedString ClassificationRuleCollectionRegexValidationFailure(string names)
		{
			return new LocalizedString("ClassificationRuleCollectionRegexValidationFailure", "", false, false, Strings.ResourceManager, new object[]
			{
				names
			});
		}

		// Token: 0x17002D94 RID: 11668
		// (get) Token: 0x06008FBE RID: 36798 RVA: 0x0024DA73 File Offset: 0x0024BC73
		public static LocalizedString RuleCollectionInvalid
		{
			get
			{
				return new LocalizedString("RuleCollectionInvalid", "Ex6FF8B0", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002D95 RID: 11669
		// (get) Token: 0x06008FBF RID: 36799 RVA: 0x0024DA91 File Offset: 0x0024BC91
		public static LocalizedString IsNetlogonRunningScenario
		{
			get
			{
				return new LocalizedString("IsNetlogonRunningScenario", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008FC0 RID: 36800 RVA: 0x0024DAB0 File Offset: 0x0024BCB0
		public static LocalizedString ConfirmationMessageUninstallDlpPolicy(string Identity)
		{
			return new LocalizedString("ConfirmationMessageUninstallDlpPolicy", "", false, false, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x17002D96 RID: 11670
		// (get) Token: 0x06008FC1 RID: 36801 RVA: 0x0024DADF File Offset: 0x0024BCDF
		public static LocalizedString TestCNGPrivateKeyNotSupported
		{
			get
			{
				return new LocalizedString("TestCNGPrivateKeyNotSupported", "Ex23C9D8", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008FC2 RID: 36802 RVA: 0x0024DB00 File Offset: 0x0024BD00
		public static LocalizedString VerboseSettingDisableGls(string value)
		{
			return new LocalizedString("VerboseSettingDisableGls", "", false, false, Strings.ResourceManager, new object[]
			{
				value
			});
		}

		// Token: 0x06008FC3 RID: 36803 RVA: 0x0024DB30 File Offset: 0x0024BD30
		public static LocalizedString CannotLicenseServer(string serverName)
		{
			return new LocalizedString("CannotLicenseServer", "Ex7A3EEA", false, true, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		// Token: 0x06008FC4 RID: 36804 RVA: 0x0024DB60 File Offset: 0x0024BD60
		public static LocalizedString ConfirmationMessageSetMigrationEndpoint(string connectorName)
		{
			return new LocalizedString("ConfirmationMessageSetMigrationEndpoint", "", false, false, Strings.ResourceManager, new object[]
			{
				connectorName
			});
		}

		// Token: 0x06008FC5 RID: 36805 RVA: 0x0024DB90 File Offset: 0x0024BD90
		public static LocalizedString InvalidSmtpAddressOrAlias(string address)
		{
			return new LocalizedString("InvalidSmtpAddressOrAlias", "ExAEDFFB", false, true, Strings.ResourceManager, new object[]
			{
				address
			});
		}

		// Token: 0x06008FC6 RID: 36806 RVA: 0x0024DBC0 File Offset: 0x0024BDC0
		public static LocalizedString ErrorNoNeedApplyMandatoryProperties(string mailbox)
		{
			return new LocalizedString("ErrorNoNeedApplyMandatoryProperties", "Ex3776CE", false, true, Strings.ResourceManager, new object[]
			{
				mailbox
			});
		}

		// Token: 0x06008FC7 RID: 36807 RVA: 0x0024DBF0 File Offset: 0x0024BDF0
		public static LocalizedString ParameterDoesNotExist(string paramName)
		{
			return new LocalizedString("ParameterDoesNotExist", "ExC6B6BD", false, true, Strings.ResourceManager, new object[]
			{
				paramName
			});
		}

		// Token: 0x17002D97 RID: 11671
		// (get) Token: 0x06008FC8 RID: 36808 RVA: 0x0024DC1F File Offset: 0x0024BE1F
		public static LocalizedString Info_MessageItemHasBeenCreated
		{
			get
			{
				return new LocalizedString("Info_MessageItemHasBeenCreated", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008FC9 RID: 36809 RVA: 0x0024DC40 File Offset: 0x0024BE40
		public static LocalizedString E4eRuleRmsTemplateNotFound(string name)
		{
			return new LocalizedString("E4eRuleRmsTemplateNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x06008FCA RID: 36810 RVA: 0x0024DC70 File Offset: 0x0024BE70
		public static LocalizedString ErrorScopeNotExclusive(string scope, string parameterName)
		{
			return new LocalizedString("ErrorScopeNotExclusive", "ExD0C3D2", false, true, Strings.ResourceManager, new object[]
			{
				scope,
				parameterName
			});
		}

		// Token: 0x06008FCB RID: 36811 RVA: 0x0024DCA4 File Offset: 0x0024BEA4
		public static LocalizedString NewDagServerIsAlreadyInDifferentDagException(string mailboxServer, string currentDag, string desiredDag)
		{
			return new LocalizedString("NewDagServerIsAlreadyInDifferentDagException", "", false, false, Strings.ResourceManager, new object[]
			{
				mailboxServer,
				currentDag,
				desiredDag
			});
		}

		// Token: 0x17002D98 RID: 11672
		// (get) Token: 0x06008FCC RID: 36812 RVA: 0x0024DCDB File Offset: 0x0024BEDB
		public static LocalizedString SetupProgressCleanManagement
		{
			get
			{
				return new LocalizedString("SetupProgressCleanManagement", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008FCD RID: 36813 RVA: 0x0024DCFC File Offset: 0x0024BEFC
		public static LocalizedString ErrorCertificateNoSKI(string certThumbprint)
		{
			return new LocalizedString("ErrorCertificateNoSKI", "Ex335442", false, true, Strings.ResourceManager, new object[]
			{
				certThumbprint
			});
		}

		// Token: 0x17002D99 RID: 11673
		// (get) Token: 0x06008FCE RID: 36814 RVA: 0x0024DD2B File Offset: 0x0024BF2B
		public static LocalizedString ErrorSystemAttendantObjectMissing
		{
			get
			{
				return new LocalizedString("ErrorSystemAttendantObjectMissing", "Ex89B6EC", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002D9A RID: 11674
		// (get) Token: 0x06008FCF RID: 36815 RVA: 0x0024DD49 File Offset: 0x0024BF49
		public static LocalizedString InvalidAction
		{
			get
			{
				return new LocalizedString("InvalidAction", "Ex33EE3E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008FD0 RID: 36816 RVA: 0x0024DD68 File Offset: 0x0024BF68
		public static LocalizedString ErrorFailedToUnmountDatabase(string databaseId, string errorMessage)
		{
			return new LocalizedString("ErrorFailedToUnmountDatabase", "ExFE29E2", false, true, Strings.ResourceManager, new object[]
			{
				databaseId,
				errorMessage
			});
		}

		// Token: 0x17002D9B RID: 11675
		// (get) Token: 0x06008FD1 RID: 36817 RVA: 0x0024DD9B File Offset: 0x0024BF9B
		public static LocalizedString NewServiceConnectionPointInvalidParameters
		{
			get
			{
				return new LocalizedString("NewServiceConnectionPointInvalidParameters", "Ex8699E3", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002D9C RID: 11676
		// (get) Token: 0x06008FD2 RID: 36818 RVA: 0x0024DDB9 File Offset: 0x0024BFB9
		public static LocalizedString OauthIsTurnedOff
		{
			get
			{
				return new LocalizedString("OauthIsTurnedOff", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002D9D RID: 11677
		// (get) Token: 0x06008FD3 RID: 36819 RVA: 0x0024DDD7 File Offset: 0x0024BFD7
		public static LocalizedString AutoDiscoverUrlIsBad
		{
			get
			{
				return new LocalizedString("AutoDiscoverUrlIsBad", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002D9E RID: 11678
		// (get) Token: 0x06008FD4 RID: 36820 RVA: 0x0024DDF5 File Offset: 0x0024BFF5
		public static LocalizedString ErrorLocalAccountPartitionRequiredForTT
		{
			get
			{
				return new LocalizedString("ErrorLocalAccountPartitionRequiredForTT", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002D9F RID: 11679
		// (get) Token: 0x06008FD5 RID: 36821 RVA: 0x0024DE13 File Offset: 0x0024C013
		public static LocalizedString InvalidFqdnFromAD
		{
			get
			{
				return new LocalizedString("InvalidFqdnFromAD", "Ex55878E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008FD6 RID: 36822 RVA: 0x0024DE34 File Offset: 0x0024C034
		public static LocalizedString ErrorUnsupportedConfigScopeType(string id, string type)
		{
			return new LocalizedString("ErrorUnsupportedConfigScopeType", "ExB5A420", false, true, Strings.ResourceManager, new object[]
			{
				id,
				type
			});
		}

		// Token: 0x06008FD7 RID: 36823 RVA: 0x0024DE68 File Offset: 0x0024C068
		public static LocalizedString ErrorRetentionIdConflictsWithRetentionTag(string retentionId, string tagName)
		{
			return new LocalizedString("ErrorRetentionIdConflictsWithRetentionTag", "Ex42F496", false, true, Strings.ResourceManager, new object[]
			{
				retentionId,
				tagName
			});
		}

		// Token: 0x06008FD8 RID: 36824 RVA: 0x0024DE9C File Offset: 0x0024C09C
		public static LocalizedString NewDagServerIsAlreadyManuallyConfiguredForClusteringButIsNotInDagException(string mailboxServer, string dagName)
		{
			return new LocalizedString("NewDagServerIsAlreadyManuallyConfiguredForClusteringButIsNotInDagException", "", false, false, Strings.ResourceManager, new object[]
			{
				mailboxServer,
				dagName
			});
		}

		// Token: 0x17002DA0 RID: 11680
		// (get) Token: 0x06008FD9 RID: 36825 RVA: 0x0024DECF File Offset: 0x0024C0CF
		public static LocalizedString VerboseStartAuditLogSearch
		{
			get
			{
				return new LocalizedString("VerboseStartAuditLogSearch", "ExC1B8E1", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002DA1 RID: 11681
		// (get) Token: 0x06008FDA RID: 36826 RVA: 0x0024DEED File Offset: 0x0024C0ED
		public static LocalizedString CasHealthCalendarLongName
		{
			get
			{
				return new LocalizedString("CasHealthCalendarLongName", "ExA14EDE", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002DA2 RID: 11682
		// (get) Token: 0x06008FDB RID: 36827 RVA: 0x0024DF0B File Offset: 0x0024C10B
		public static LocalizedString ErrorWhileFolderSync
		{
			get
			{
				return new LocalizedString("ErrorWhileFolderSync", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002DA3 RID: 11683
		// (get) Token: 0x06008FDC RID: 36828 RVA: 0x0024DF29 File Offset: 0x0024C129
		public static LocalizedString Pop3ServiceDisplayName
		{
			get
			{
				return new LocalizedString("Pop3ServiceDisplayName", "Ex358132", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008FDD RID: 36829 RVA: 0x0024DF48 File Offset: 0x0024C148
		public static LocalizedString ConfirmationMessageConnectMailboxUser(string Identity, string Database)
		{
			return new LocalizedString("ConfirmationMessageConnectMailboxUser", "Ex05EA4B", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				Database
			});
		}

		// Token: 0x06008FDE RID: 36830 RVA: 0x0024DF7C File Offset: 0x0024C17C
		public static LocalizedString ConfirmationMessageNewPublicFolderMigrationRequest(string name)
		{
			return new LocalizedString("ConfirmationMessageNewPublicFolderMigrationRequest", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x17002DA4 RID: 11684
		// (get) Token: 0x06008FDF RID: 36831 RVA: 0x0024DFAB File Offset: 0x0024C1AB
		public static LocalizedString ErrorGetSyncDeletedRecipientRetryFailed
		{
			get
			{
				return new LocalizedString("ErrorGetSyncDeletedRecipientRetryFailed", "ExF37111", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008FE0 RID: 36832 RVA: 0x0024DFCC File Offset: 0x0024C1CC
		public static LocalizedString VerboseDefaultOABIsNewerThanVersionE12(string DN, string version)
		{
			return new LocalizedString("VerboseDefaultOABIsNewerThanVersionE12", "Ex7A2A93", false, true, Strings.ResourceManager, new object[]
			{
				DN,
				version
			});
		}

		// Token: 0x06008FE1 RID: 36833 RVA: 0x0024E000 File Offset: 0x0024C200
		public static LocalizedString ErrorActiveManagerIsNotReachable(string machineName, string errorMessage)
		{
			return new LocalizedString("ErrorActiveManagerIsNotReachable", "ExA1E5E9", false, true, Strings.ResourceManager, new object[]
			{
				machineName,
				errorMessage
			});
		}

		// Token: 0x06008FE2 RID: 36834 RVA: 0x0024E034 File Offset: 0x0024C234
		public static LocalizedString VerboseExtractedTextStreams(int textStreamCount, string streamNames)
		{
			return new LocalizedString("VerboseExtractedTextStreams", "", false, false, Strings.ResourceManager, new object[]
			{
				textStreamCount,
				streamNames
			});
		}

		// Token: 0x17002DA5 RID: 11685
		// (get) Token: 0x06008FE3 RID: 36835 RVA: 0x0024E06C File Offset: 0x0024C26C
		public static LocalizedString ErrorChangingBadwordsTransportRule
		{
			get
			{
				return new LocalizedString("ErrorChangingBadwordsTransportRule", "Ex60201F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002DA6 RID: 11686
		// (get) Token: 0x06008FE4 RID: 36836 RVA: 0x0024E08A File Offset: 0x0024C28A
		public static LocalizedString DatacenterEnvironmentOnlyOperationException
		{
			get
			{
				return new LocalizedString("DatacenterEnvironmentOnlyOperationException", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008FE5 RID: 36837 RVA: 0x0024E0A8 File Offset: 0x0024C2A8
		public static LocalizedString ErrorInstallDlpPolicyRuleWithThisNameAlreadyExists(string name)
		{
			return new LocalizedString("ErrorInstallDlpPolicyRuleWithThisNameAlreadyExists", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x17002DA7 RID: 11687
		// (get) Token: 0x06008FE6 RID: 36838 RVA: 0x0024E0D7 File Offset: 0x0024C2D7
		public static LocalizedString RemoveOrganizationFailWithExistingMailboxes
		{
			get
			{
				return new LocalizedString("RemoveOrganizationFailWithExistingMailboxes", "Ex8A8468", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002DA8 RID: 11688
		// (get) Token: 0x06008FE7 RID: 36839 RVA: 0x0024E0F5 File Offset: 0x0024C2F5
		public static LocalizedString ErrorFederationEnabledIsImmutable
		{
			get
			{
				return new LocalizedString("ErrorFederationEnabledIsImmutable", "Ex8096EC", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002DA9 RID: 11689
		// (get) Token: 0x06008FE8 RID: 36840 RVA: 0x0024E113 File Offset: 0x0024C313
		public static LocalizedString SetupComponentConfiguringInformationStore
		{
			get
			{
				return new LocalizedString("SetupComponentConfiguringInformationStore", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002DAA RID: 11690
		// (get) Token: 0x06008FE9 RID: 36841 RVA: 0x0024E131 File Offset: 0x0024C331
		public static LocalizedString PopImapComponentDescription
		{
			get
			{
				return new LocalizedString("PopImapComponentDescription", "ExADD449", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002DAB RID: 11691
		// (get) Token: 0x06008FEA RID: 36842 RVA: 0x0024E14F File Offset: 0x0024C34F
		public static LocalizedString MoveMailboxSourceCleanupTypeDeleteSourceMailbox
		{
			get
			{
				return new LocalizedString("MoveMailboxSourceCleanupTypeDeleteSourceMailbox", "Ex30C216", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002DAC RID: 11692
		// (get) Token: 0x06008FEB RID: 36843 RVA: 0x0024E16D File Offset: 0x0024C36D
		public static LocalizedString ReplayLagStatusLabelEnabled
		{
			get
			{
				return new LocalizedString("ReplayLagStatusLabelEnabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008FEC RID: 36844 RVA: 0x0024E18C File Offset: 0x0024C38C
		public static LocalizedString MsiCouldNotOpenPackage(string package, string message, int errorCode)
		{
			return new LocalizedString("MsiCouldNotOpenPackage", "ExDB4197", false, true, Strings.ResourceManager, new object[]
			{
				package,
				message,
				errorCode
			});
		}

		// Token: 0x06008FED RID: 36845 RVA: 0x0024E1C8 File Offset: 0x0024C3C8
		public static LocalizedString ErrorWorkloadManagementPolicyName(string Name, string restrictedPrefix1, string restrictedPrefix2)
		{
			return new LocalizedString("ErrorWorkloadManagementPolicyName", "", false, false, Strings.ResourceManager, new object[]
			{
				Name,
				restrictedPrefix1,
				restrictedPrefix2
			});
		}

		// Token: 0x17002DAD RID: 11693
		// (get) Token: 0x06008FEE RID: 36846 RVA: 0x0024E1FF File Offset: 0x0024C3FF
		public static LocalizedString FileDistributionServiceControlComponentDescription
		{
			get
			{
				return new LocalizedString("FileDistributionServiceControlComponentDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008FEF RID: 36847 RVA: 0x0024E220 File Offset: 0x0024C420
		public static LocalizedString ConfirmationMessageSetAuthRedirect(string name)
		{
			return new LocalizedString("ConfirmationMessageSetAuthRedirect", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x06008FF0 RID: 36848 RVA: 0x0024E250 File Offset: 0x0024C450
		public static LocalizedString ErrorRelocationStateRequestedIsMandatory(string tenant)
		{
			return new LocalizedString("ErrorRelocationStateRequestedIsMandatory", "", false, false, Strings.ResourceManager, new object[]
			{
				tenant
			});
		}

		// Token: 0x17002DAE RID: 11694
		// (get) Token: 0x06008FF1 RID: 36849 RVA: 0x0024E27F File Offset: 0x0024C47F
		public static LocalizedString VerboseVerifyRecipientViewRootSucceed
		{
			get
			{
				return new LocalizedString("VerboseVerifyRecipientViewRootSucceed", "ExE33C84", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008FF2 RID: 36850 RVA: 0x0024E2A0 File Offset: 0x0024C4A0
		public static LocalizedString LiveIdAuthenticationSuccess(string userType)
		{
			return new LocalizedString("LiveIdAuthenticationSuccess", "", false, false, Strings.ResourceManager, new object[]
			{
				userType
			});
		}

		// Token: 0x17002DAF RID: 11695
		// (get) Token: 0x06008FF3 RID: 36851 RVA: 0x0024E2CF File Offset: 0x0024C4CF
		public static LocalizedString NewOrganizationDescription
		{
			get
			{
				return new LocalizedString("NewOrganizationDescription", "Ex565C80", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002DB0 RID: 11696
		// (get) Token: 0x06008FF4 RID: 36852 RVA: 0x0024E2ED File Offset: 0x0024C4ED
		public static LocalizedString ArchiveConnectivityResultPrimaryFailure
		{
			get
			{
				return new LocalizedString("ArchiveConnectivityResultPrimaryFailure", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008FF5 RID: 36853 RVA: 0x0024E30C File Offset: 0x0024C50C
		public static LocalizedString ErrorCannotSaveBecauseTooNew(string objectVersion, string currentVersion)
		{
			return new LocalizedString("ErrorCannotSaveBecauseTooNew", "Ex2E3E75", false, true, Strings.ResourceManager, new object[]
			{
				objectVersion,
				currentVersion
			});
		}

		// Token: 0x06008FF6 RID: 36854 RVA: 0x0024E340 File Offset: 0x0024C540
		public static LocalizedString ErrorMailboxVersionTooOld(string name)
		{
			return new LocalizedString("ErrorMailboxVersionTooOld", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x06008FF7 RID: 36855 RVA: 0x0024E370 File Offset: 0x0024C570
		public static LocalizedString WarningCannotResolveUser(string idStringValue)
		{
			return new LocalizedString("WarningCannotResolveUser", "Ex5BD406", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		// Token: 0x06008FF8 RID: 36856 RVA: 0x0024E3A0 File Offset: 0x0024C5A0
		public static LocalizedString ConfirmationMessageUpdateAddressBookPolicy(string Identity)
		{
			return new LocalizedString("ConfirmationMessageUpdateAddressBookPolicy", "", false, false, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x17002DB1 RID: 11697
		// (get) Token: 0x06008FF9 RID: 36857 RVA: 0x0024E3CF File Offset: 0x0024C5CF
		public static LocalizedString ConfirmationMessageEnableAntiSpamUpdates
		{
			get
			{
				return new LocalizedString("ConfirmationMessageEnableAntiSpamUpdates", "ExF05AF9", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06008FFA RID: 36858 RVA: 0x0024E3F0 File Offset: 0x0024C5F0
		public static LocalizedString ConfirmationMessageNewManagementRoleEntry(string Name, string Role)
		{
			return new LocalizedString("ConfirmationMessageNewManagementRoleEntry", "Ex7DFC24", false, true, Strings.ResourceManager, new object[]
			{
				Name,
				Role
			});
		}

		// Token: 0x06008FFB RID: 36859 RVA: 0x0024E424 File Offset: 0x0024C624
		public static LocalizedString ErrorAssigneeUserNotUnique(string id)
		{
			return new LocalizedString("ErrorAssigneeUserNotUnique", "ExC56720", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x17002DB2 RID: 11698
		// (get) Token: 0x06008FFC RID: 36860 RVA: 0x0024E453 File Offset: 0x0024C653
		public static LocalizedString WarningUseConfigurationOnly
		{
			get
			{
				return new LocalizedString("WarningUseConfigurationOnly", "Ex9DC5AD", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002DB3 RID: 11699
		// (get) Token: 0x06008FFD RID: 36861 RVA: 0x0024E471 File Offset: 0x0024C671
		public static LocalizedString IsapiExtensionMustHavePhysicalPathException
		{
			get
			{
				return new LocalizedString("IsapiExtensionMustHavePhysicalPathException", "Ex0AEB0C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002DB4 RID: 11700
		// (get) Token: 0x06008FFE RID: 36862 RVA: 0x0024E48F File Offset: 0x0024C68F
		public static LocalizedString SetMailboxSearchActivity
		{
			get
			{
				return new LocalizedString("SetMailboxSearchActivity", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002DB5 RID: 11701
		// (get) Token: 0x06008FFF RID: 36863 RVA: 0x0024E4AD File Offset: 0x0024C6AD
		public static LocalizedString SetupProgressCreateFederationContainer
		{
			get
			{
				return new LocalizedString("SetupProgressCreateFederationContainer", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009000 RID: 36864 RVA: 0x0024E4CC File Offset: 0x0024C6CC
		public static LocalizedString ErrorFailedToGetDatabaseSize(string databaseId)
		{
			return new LocalizedString("ErrorFailedToGetDatabaseSize", "Ex493F24", false, true, Strings.ResourceManager, new object[]
			{
				databaseId
			});
		}

		// Token: 0x17002DB6 RID: 11702
		// (get) Token: 0x06009001 RID: 36865 RVA: 0x0024E4FB File Offset: 0x0024C6FB
		public static LocalizedString ExchangeTracingProviderInstalledSuccess
		{
			get
			{
				return new LocalizedString("ExchangeTracingProviderInstalledSuccess", "ExDC6A5A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002DB7 RID: 11703
		// (get) Token: 0x06009002 RID: 36866 RVA: 0x0024E519 File Offset: 0x0024C719
		public static LocalizedString SetupProgressStartingServiceHostService
		{
			get
			{
				return new LocalizedString("SetupProgressStartingServiceHostService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009003 RID: 36867 RVA: 0x0024E538 File Offset: 0x0024C738
		public static LocalizedString ErrorManagedConentSettinsNonUnique(string tagName)
		{
			return new LocalizedString("ErrorManagedConentSettinsNonUnique", "", false, false, Strings.ResourceManager, new object[]
			{
				tagName
			});
		}

		// Token: 0x17002DB8 RID: 11704
		// (get) Token: 0x06009004 RID: 36868 RVA: 0x0024E567 File Offset: 0x0024C767
		public static LocalizedString MigrationStartAfterIncorrectMigrationType
		{
			get
			{
				return new LocalizedString("MigrationStartAfterIncorrectMigrationType", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009005 RID: 36869 RVA: 0x0024E588 File Offset: 0x0024C788
		public static LocalizedString ErrorChildFolderNotExistsOnServer(string path, string serverName)
		{
			return new LocalizedString("ErrorChildFolderNotExistsOnServer", "Ex5886CE", false, true, Strings.ResourceManager, new object[]
			{
				path,
				serverName
			});
		}

		// Token: 0x17002DB9 RID: 11705
		// (get) Token: 0x06009006 RID: 36870 RVA: 0x0024E5BB File Offset: 0x0024C7BB
		public static LocalizedString SetupProgressCreateRulesContainer
		{
			get
			{
				return new LocalizedString("SetupProgressCreateRulesContainer", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009007 RID: 36871 RVA: 0x0024E5DC File Offset: 0x0024C7DC
		public static LocalizedString ErrorIncompatbileManagementSiteLink(string domain, string siteLink)
		{
			return new LocalizedString("ErrorIncompatbileManagementSiteLink", "Ex5B71FA", false, true, Strings.ResourceManager, new object[]
			{
				domain,
				siteLink
			});
		}

		// Token: 0x17002DBA RID: 11706
		// (get) Token: 0x06009008 RID: 36872 RVA: 0x0024E60F File Offset: 0x0024C80F
		public static LocalizedString ThrottlingServiceDisplayName
		{
			get
			{
				return new LocalizedString("ThrottlingServiceDisplayName", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002DBB RID: 11707
		// (get) Token: 0x06009009 RID: 36873 RVA: 0x0024E62D File Offset: 0x0024C82D
		public static LocalizedString CasHealthTestNewUserDataCenterScriptName
		{
			get
			{
				return new LocalizedString("CasHealthTestNewUserDataCenterScriptName", "ExC48967", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002DBC RID: 11708
		// (get) Token: 0x0600900A RID: 36874 RVA: 0x0024E64B File Offset: 0x0024C84B
		public static LocalizedString MtrtModerateMessageByManager
		{
			get
			{
				return new LocalizedString("MtrtModerateMessageByManager", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002DBD RID: 11709
		// (get) Token: 0x0600900B RID: 36875 RVA: 0x0024E669 File Offset: 0x0024C869
		public static LocalizedString CasHealthInstructResetCredentials
		{
			get
			{
				return new LocalizedString("CasHealthInstructResetCredentials", "Ex7E8C85", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600900C RID: 36876 RVA: 0x0024E688 File Offset: 0x0024C888
		public static LocalizedString SystemMailboxTarget(string shortTarget)
		{
			return new LocalizedString("SystemMailboxTarget", "ExB91254", false, true, Strings.ResourceManager, new object[]
			{
				shortTarget
			});
		}

		// Token: 0x17002DBE RID: 11710
		// (get) Token: 0x0600900D RID: 36877 RVA: 0x0024E6B7 File Offset: 0x0024C8B7
		public static LocalizedString ErrorInvalidDlpPolicyTemplateIdentity
		{
			get
			{
				return new LocalizedString("ErrorInvalidDlpPolicyTemplateIdentity", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600900E RID: 36878 RVA: 0x0024E6D8 File Offset: 0x0024C8D8
		public static LocalizedString ConfirmationMessageTestTeamMailbox(string Identity)
		{
			return new LocalizedString("ConfirmationMessageTestTeamMailbox", "", false, false, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x0600900F RID: 36879 RVA: 0x0024E708 File Offset: 0x0024C908
		public static LocalizedString ErrorPidRealmDifferentFromMetadata(string newPid, string newRealm, string configPid, string configRealm)
		{
			return new LocalizedString("ErrorPidRealmDifferentFromMetadata", "", false, false, Strings.ResourceManager, new object[]
			{
				newPid,
				newRealm,
				configPid,
				configRealm
			});
		}

		// Token: 0x17002DBF RID: 11711
		// (get) Token: 0x06009010 RID: 36880 RVA: 0x0024E743 File Offset: 0x0024C943
		public static LocalizedString RoleReviewer
		{
			get
			{
				return new LocalizedString("RoleReviewer", "Ex5C4F56", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009011 RID: 36881 RVA: 0x0024E764 File Offset: 0x0024C964
		public static LocalizedString RemovedDeviceFilterRuleByNameAndCharacteristic(string filterName, string ruleName, string characteristic)
		{
			return new LocalizedString("RemovedDeviceFilterRuleByNameAndCharacteristic", "", false, false, Strings.ResourceManager, new object[]
			{
				filterName,
				ruleName,
				characteristic
			});
		}

		// Token: 0x17002DC0 RID: 11712
		// (get) Token: 0x06009012 RID: 36882 RVA: 0x0024E79B File Offset: 0x0024C99B
		public static LocalizedString StartSetupProcess
		{
			get
			{
				return new LocalizedString("StartSetupProcess", "Ex9C0D1A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009013 RID: 36883 RVA: 0x0024E7BC File Offset: 0x0024C9BC
		public static LocalizedString VerboseMountDatabase(string id)
		{
			return new LocalizedString("VerboseMountDatabase", "Ex6D0CE2", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x06009014 RID: 36884 RVA: 0x0024E7EC File Offset: 0x0024C9EC
		public static LocalizedString SmtpConnectivityFailures(string results)
		{
			return new LocalizedString("SmtpConnectivityFailures", "ExD60C3F", false, true, Strings.ResourceManager, new object[]
			{
				results
			});
		}

		// Token: 0x06009015 RID: 36885 RVA: 0x0024E81C File Offset: 0x0024CA1C
		public static LocalizedString ConfirmationMessageRemoveSecondaryDomain(string identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveSecondaryDomain", "ExA249D3", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x17002DC1 RID: 11713
		// (get) Token: 0x06009016 RID: 36886 RVA: 0x0024E84B File Offset: 0x0024CA4B
		public static LocalizedString SMSMWIEnabledAllowedOnlyOnE164ConsumerDialplan
		{
			get
			{
				return new LocalizedString("SMSMWIEnabledAllowedOnlyOnE164ConsumerDialplan", "ExBF3A75", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009017 RID: 36887 RVA: 0x0024E86C File Offset: 0x0024CA6C
		public static LocalizedString WarningNoActiveDatabasesFoundOnServer(string server)
		{
			return new LocalizedString("WarningNoActiveDatabasesFoundOnServer", "ExD6C729", false, true, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		// Token: 0x17002DC2 RID: 11714
		// (get) Token: 0x06009018 RID: 36888 RVA: 0x0024E89B File Offset: 0x0024CA9B
		public static LocalizedString NoKeyInformationInImportedTrustedPublishingDomain
		{
			get
			{
				return new LocalizedString("NoKeyInformationInImportedTrustedPublishingDomain", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002DC3 RID: 11715
		// (get) Token: 0x06009019 RID: 36889 RVA: 0x0024E8B9 File Offset: 0x0024CAB9
		public static LocalizedString ErrorOrganizationIdentityRequired
		{
			get
			{
				return new LocalizedString("ErrorOrganizationIdentityRequired", "Ex2183FB", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600901A RID: 36890 RVA: 0x0024E8D8 File Offset: 0x0024CAD8
		public static LocalizedString ErrorMailboxDatabaseNotOnCurrentCmdletVersion2(string database)
		{
			return new LocalizedString("ErrorMailboxDatabaseNotOnCurrentCmdletVersion2", "", false, false, Strings.ResourceManager, new object[]
			{
				database
			});
		}

		// Token: 0x0600901B RID: 36891 RVA: 0x0024E908 File Offset: 0x0024CB08
		public static LocalizedString InfoProcessRemoveMember(string server)
		{
			return new LocalizedString("InfoProcessRemoveMember", "Ex53DB37", false, true, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		// Token: 0x17002DC4 RID: 11716
		// (get) Token: 0x0600901C RID: 36892 RVA: 0x0024E937 File Offset: 0x0024CB37
		public static LocalizedString TransportSyncManagerServiceNotInstalled
		{
			get
			{
				return new LocalizedString("TransportSyncManagerServiceNotInstalled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002DC5 RID: 11717
		// (get) Token: 0x0600901D RID: 36893 RVA: 0x0024E955 File Offset: 0x0024CB55
		public static LocalizedString ErrorMissingWindowsLiveIdHandler
		{
			get
			{
				return new LocalizedString("ErrorMissingWindowsLiveIdHandler", "Ex71777D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002DC6 RID: 11718
		// (get) Token: 0x0600901E RID: 36894 RVA: 0x0024E973 File Offset: 0x0024CB73
		public static LocalizedString MigrationJobCorrupted
		{
			get
			{
				return new LocalizedString("MigrationJobCorrupted", "ExA45A32", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600901F RID: 36895 RVA: 0x0024E994 File Offset: 0x0024CB94
		public static LocalizedString ConfirmationMessageSetMalwareFilterPolicy(string identity)
		{
			return new LocalizedString("ConfirmationMessageSetMalwareFilterPolicy", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x17002DC7 RID: 11719
		// (get) Token: 0x06009020 RID: 36896 RVA: 0x0024E9C3 File Offset: 0x0024CBC3
		public static LocalizedString SetupProgressCreateDSNContainerHierarcy
		{
			get
			{
				return new LocalizedString("SetupProgressCreateDSNContainerHierarcy", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009021 RID: 36897 RVA: 0x0024E9E4 File Offset: 0x0024CBE4
		public static LocalizedString DatabaseLogonSuccessful(Guid groupMailbox, string server, string domainController)
		{
			return new LocalizedString("DatabaseLogonSuccessful", "", false, false, Strings.ResourceManager, new object[]
			{
				groupMailbox,
				server,
				domainController
			});
		}

		// Token: 0x17002DC8 RID: 11720
		// (get) Token: 0x06009022 RID: 36898 RVA: 0x0024EA20 File Offset: 0x0024CC20
		public static LocalizedString ErrorEndTimeSmallerThanStartTime
		{
			get
			{
				return new LocalizedString("ErrorEndTimeSmallerThanStartTime", "ExAF7A27", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009023 RID: 36899 RVA: 0x0024EA40 File Offset: 0x0024CC40
		public static LocalizedString ErrorCertificateNotValid(string certSubject, string certThumbprint, string message)
		{
			return new LocalizedString("ErrorCertificateNotValid", "Ex97444B", false, true, Strings.ResourceManager, new object[]
			{
				certSubject,
				certThumbprint,
				message
			});
		}

		// Token: 0x06009024 RID: 36900 RVA: 0x0024EA78 File Offset: 0x0024CC78
		public static LocalizedString ErrorArbitrationMbxNotSetForModeration(string id)
		{
			return new LocalizedString("ErrorArbitrationMbxNotSetForModeration", "Ex0B0A8E", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x06009025 RID: 36901 RVA: 0x0024EAA8 File Offset: 0x0024CCA8
		public static LocalizedString ErrorMaxConcurrentMigrationsExceeded(int currentMax)
		{
			return new LocalizedString("ErrorMaxConcurrentMigrationsExceeded", "", false, false, Strings.ResourceManager, new object[]
			{
				currentMax
			});
		}

		// Token: 0x06009026 RID: 36902 RVA: 0x0024EADC File Offset: 0x0024CCDC
		public static LocalizedString PasscodeInformation(string passcode)
		{
			return new LocalizedString("PasscodeInformation", "Ex96FB7B", false, true, Strings.ResourceManager, new object[]
			{
				passcode
			});
		}

		// Token: 0x06009027 RID: 36903 RVA: 0x0024EB0C File Offset: 0x0024CD0C
		public static LocalizedString DataClassificationAmbiguousName(string name)
		{
			return new LocalizedString("DataClassificationAmbiguousName", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x06009028 RID: 36904 RVA: 0x0024EB3C File Offset: 0x0024CD3C
		public static LocalizedString ChangedMessageClass(string setting, string messageClass)
		{
			return new LocalizedString("ChangedMessageClass", "Ex433B89", false, true, Strings.ResourceManager, new object[]
			{
				setting,
				messageClass
			});
		}

		// Token: 0x17002DC9 RID: 11721
		// (get) Token: 0x06009029 RID: 36905 RVA: 0x0024EB6F File Offset: 0x0024CD6F
		public static LocalizedString StoppingMonitoringService
		{
			get
			{
				return new LocalizedString("StoppingMonitoringService", "Ex0DC4FC", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600902A RID: 36906 RVA: 0x0024EB90 File Offset: 0x0024CD90
		public static LocalizedString ConfirmationMessageRemoveTeamMailbox(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveTeamMailbox", "", false, false, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x17002DCA RID: 11722
		// (get) Token: 0x0600902B RID: 36907 RVA: 0x0024EBBF File Offset: 0x0024CDBF
		public static LocalizedString MtrtAddCopyToRecipient
		{
			get
			{
				return new LocalizedString("MtrtAddCopyToRecipient", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600902C RID: 36908 RVA: 0x0024EBE0 File Offset: 0x0024CDE0
		public static LocalizedString ClassificationRuleCollectionPayloadSizeExceededLimitFailure(ulong inputSize, ulong limitSize)
		{
			return new LocalizedString("ClassificationRuleCollectionPayloadSizeExceededLimitFailure", "", false, false, Strings.ResourceManager, new object[]
			{
				inputSize,
				limitSize
			});
		}

		// Token: 0x0600902D RID: 36909 RVA: 0x0024EC20 File Offset: 0x0024CE20
		public static LocalizedString OpeningClusterDatabase(string serverName)
		{
			return new LocalizedString("OpeningClusterDatabase", "", false, false, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		// Token: 0x0600902E RID: 36910 RVA: 0x0024EC50 File Offset: 0x0024CE50
		public static LocalizedString ErrorPasswordIncludesInvalidChars(string memberName)
		{
			return new LocalizedString("ErrorPasswordIncludesInvalidChars", "Ex83AEAD", false, true, Strings.ResourceManager, new object[]
			{
				memberName
			});
		}

		// Token: 0x17002DCB RID: 11723
		// (get) Token: 0x0600902F RID: 36911 RVA: 0x0024EC7F File Offset: 0x0024CE7F
		public static LocalizedString SetupProgressCreateMailboxContainers
		{
			get
			{
				return new LocalizedString("SetupProgressCreateMailboxContainers", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002DCC RID: 11724
		// (get) Token: 0x06009030 RID: 36912 RVA: 0x0024EC9D File Offset: 0x0024CE9D
		public static LocalizedString SetupComponentCafeGlobalConfig
		{
			get
			{
				return new LocalizedString("SetupComponentCafeGlobalConfig", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002DCD RID: 11725
		// (get) Token: 0x06009031 RID: 36913 RVA: 0x0024ECBB File Offset: 0x0024CEBB
		public static LocalizedString ErrorDatabaseCountInServerExceedLimit
		{
			get
			{
				return new LocalizedString("ErrorDatabaseCountInServerExceedLimit", "ExD46B3F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009032 RID: 36914 RVA: 0x0024ECDC File Offset: 0x0024CEDC
		public static LocalizedString ErrorRoleAssignmentPolicyNotFound(string idStringValue)
		{
			return new LocalizedString("ErrorRoleAssignmentPolicyNotFound", "Ex3D5867", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		// Token: 0x17002DCE RID: 11726
		// (get) Token: 0x06009033 RID: 36915 RVA: 0x0024ED0B File Offset: 0x0024CF0B
		public static LocalizedString NoKeyIDTypeInImportedTrustedPublishingDomain
		{
			get
			{
				return new LocalizedString("NoKeyIDTypeInImportedTrustedPublishingDomain", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009034 RID: 36916 RVA: 0x0024ED2C File Offset: 0x0024CF2C
		public static LocalizedString ConfirmationMessageNewMailuserWithWindowsLiveId(string Name, string liveID, string OrganizationalUnit)
		{
			return new LocalizedString("ConfirmationMessageNewMailuserWithWindowsLiveId", "Ex126E4F", false, true, Strings.ResourceManager, new object[]
			{
				Name,
				liveID,
				OrganizationalUnit
			});
		}

		// Token: 0x06009035 RID: 36917 RVA: 0x0024ED64 File Offset: 0x0024CF64
		public static LocalizedString ConfirmationMessageRemoveAttachmentfilterentry(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveAttachmentfilterentry", "ExC32C75", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x06009036 RID: 36918 RVA: 0x0024ED94 File Offset: 0x0024CF94
		public static LocalizedString NoLocalDomainIsFederatedRemotely(string remoteName)
		{
			return new LocalizedString("NoLocalDomainIsFederatedRemotely", "Ex7B15E6", false, true, Strings.ResourceManager, new object[]
			{
				remoteName
			});
		}

		// Token: 0x06009037 RID: 36919 RVA: 0x0024EDC4 File Offset: 0x0024CFC4
		public static LocalizedString ResumeSgcUseState(string server, string serverVersion, string rpcSupportVersion)
		{
			return new LocalizedString("ResumeSgcUseState", "Ex08EC9E", false, true, Strings.ResourceManager, new object[]
			{
				server,
				serverVersion,
				rpcSupportVersion
			});
		}

		// Token: 0x17002DCF RID: 11727
		// (get) Token: 0x06009038 RID: 36920 RVA: 0x0024EDFB File Offset: 0x0024CFFB
		public static LocalizedString ErrorChangePartnerApplicationDirectTrust
		{
			get
			{
				return new LocalizedString("ErrorChangePartnerApplicationDirectTrust", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009039 RID: 36921 RVA: 0x0024EE1C File Offset: 0x0024D01C
		public static LocalizedString ErrorCompilingMFL(string filePath, string toLCIDStr, int errorCode)
		{
			return new LocalizedString("ErrorCompilingMFL", "Ex4EF61D", false, true, Strings.ResourceManager, new object[]
			{
				filePath,
				toLCIDStr,
				errorCode
			});
		}

		// Token: 0x0600903A RID: 36922 RVA: 0x0024EE58 File Offset: 0x0024D058
		public static LocalizedString CmdletHandlerAlreadyDefined(string name, string path)
		{
			return new LocalizedString("CmdletHandlerAlreadyDefined", "Ex4259C6", false, true, Strings.ResourceManager, new object[]
			{
				name,
				path
			});
		}

		// Token: 0x17002DD0 RID: 11728
		// (get) Token: 0x0600903B RID: 36923 RVA: 0x0024EE8B File Offset: 0x0024D08B
		public static LocalizedString ProtectedServiceHostDisplayName
		{
			get
			{
				return new LocalizedString("ProtectedServiceHostDisplayName", "ExC03C8C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600903C RID: 36924 RVA: 0x0024EEAC File Offset: 0x0024D0AC
		public static LocalizedString ErrorNameNotAvailable(string name)
		{
			return new LocalizedString("ErrorNameNotAvailable", "ExBF87FF", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x0600903D RID: 36925 RVA: 0x0024EEDC File Offset: 0x0024D0DC
		public static LocalizedString ErrorPilotServicePlanCanBeUsedToCreateSharedOrgsOnly(string programid, string offerid)
		{
			return new LocalizedString("ErrorPilotServicePlanCanBeUsedToCreateSharedOrgsOnly", "", false, false, Strings.ResourceManager, new object[]
			{
				programid,
				offerid
			});
		}

		// Token: 0x17002DD1 RID: 11729
		// (get) Token: 0x0600903E RID: 36926 RVA: 0x0024EF0F File Offset: 0x0024D10F
		public static LocalizedString EcpAuthenticationNotMatchOwaWarning
		{
			get
			{
				return new LocalizedString("EcpAuthenticationNotMatchOwaWarning", "ExA42EFA", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600903F RID: 36927 RVA: 0x0024EF30 File Offset: 0x0024D130
		public static LocalizedString InstallDefaultSharingPolicy(string organization)
		{
			return new LocalizedString("InstallDefaultSharingPolicy", "Ex88E040", false, true, Strings.ResourceManager, new object[]
			{
				organization
			});
		}

		// Token: 0x06009040 RID: 36928 RVA: 0x0024EF60 File Offset: 0x0024D160
		public static LocalizedString ErrorMovePublicFolderDistributionDisabledOabToTiServer(string oab)
		{
			return new LocalizedString("ErrorMovePublicFolderDistributionDisabledOabToTiServer", "ExA8628D", false, true, Strings.ResourceManager, new object[]
			{
				oab
			});
		}

		// Token: 0x06009041 RID: 36929 RVA: 0x0024EF90 File Offset: 0x0024D190
		public static LocalizedString InfoRemovingAce(string dn, string ace)
		{
			return new LocalizedString("InfoRemovingAce", "Ex666508", false, true, Strings.ResourceManager, new object[]
			{
				dn,
				ace
			});
		}

		// Token: 0x06009042 RID: 36930 RVA: 0x0024EFC4 File Offset: 0x0024D1C4
		public static LocalizedString RemoveDefaultTPD(string name)
		{
			return new LocalizedString("RemoveDefaultTPD", "Ex05E978", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x06009043 RID: 36931 RVA: 0x0024EFF4 File Offset: 0x0024D1F4
		public static LocalizedString AlsEmailBodyMailboxLogonTypes(string logonTypes)
		{
			return new LocalizedString("AlsEmailBodyMailboxLogonTypes", "", false, false, Strings.ResourceManager, new object[]
			{
				logonTypes
			});
		}

		// Token: 0x06009044 RID: 36932 RVA: 0x0024F024 File Offset: 0x0024D224
		public static LocalizedString ErrorNewRoleNeedHierarchicalRoleAssignmentWithoutScopeRestriction(string roleId)
		{
			return new LocalizedString("ErrorNewRoleNeedHierarchicalRoleAssignmentWithoutScopeRestriction", "Ex2B90F0", false, true, Strings.ResourceManager, new object[]
			{
				roleId
			});
		}

		// Token: 0x06009045 RID: 36933 RVA: 0x0024F054 File Offset: 0x0024D254
		public static LocalizedString AlreadyConfiguredComponent(string component)
		{
			return new LocalizedString("AlreadyConfiguredComponent", "Ex994BAE", false, true, Strings.ResourceManager, new object[]
			{
				component
			});
		}

		// Token: 0x06009046 RID: 36934 RVA: 0x0024F084 File Offset: 0x0024D284
		public static LocalizedString UMCallAnsweringRuleFindMeWithContext(string context, int key, string firstNumber)
		{
			return new LocalizedString("UMCallAnsweringRuleFindMeWithContext", "", false, false, Strings.ResourceManager, new object[]
			{
				context,
				key,
				firstNumber
			});
		}

		// Token: 0x06009047 RID: 36935 RVA: 0x0024F0C0 File Offset: 0x0024D2C0
		public static LocalizedString WarningChangeDefaultTPD(string oldTPD, string newTPD)
		{
			return new LocalizedString("WarningChangeDefaultTPD", "Ex8ED679", false, true, Strings.ResourceManager, new object[]
			{
				oldTPD,
				newTPD
			});
		}

		// Token: 0x17002DD2 RID: 11730
		// (get) Token: 0x06009048 RID: 36936 RVA: 0x0024F0F3 File Offset: 0x0024D2F3
		public static LocalizedString SetupProgressStartingSystemAttendantService
		{
			get
			{
				return new LocalizedString("SetupProgressStartingSystemAttendantService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002DD3 RID: 11731
		// (get) Token: 0x06009049 RID: 36937 RVA: 0x0024F111 File Offset: 0x0024D311
		public static LocalizedString InterceptorErrorEventInvalid
		{
			get
			{
				return new LocalizedString("InterceptorErrorEventInvalid", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600904A RID: 36938 RVA: 0x0024F130 File Offset: 0x0024D330
		public static LocalizedString CutoverMigrationNotSupportedForProtocol(string protocol)
		{
			return new LocalizedString("CutoverMigrationNotSupportedForProtocol", "", false, false, Strings.ResourceManager, new object[]
			{
				protocol
			});
		}

		// Token: 0x0600904B RID: 36939 RVA: 0x0024F160 File Offset: 0x0024D360
		public static LocalizedString ErrorInvalidArbitrationMbxTypeForModerationAndAutogroup(string arbitrationMailbox)
		{
			return new LocalizedString("ErrorInvalidArbitrationMbxTypeForModerationAndAutogroup", "Ex984F78", false, true, Strings.ResourceManager, new object[]
			{
				arbitrationMailbox
			});
		}

		// Token: 0x0600904C RID: 36940 RVA: 0x0024F190 File Offset: 0x0024D390
		public static LocalizedString SendConnectorNonSmtpAddressSpaceOnEdge(string addressSpace)
		{
			return new LocalizedString("SendConnectorNonSmtpAddressSpaceOnEdge", "Ex5D8D71", false, true, Strings.ResourceManager, new object[]
			{
				addressSpace
			});
		}

		// Token: 0x0600904D RID: 36941 RVA: 0x0024F1C0 File Offset: 0x0024D3C0
		public static LocalizedString OtherDatabaseCopyHasHighestPreference(string othercopyName)
		{
			return new LocalizedString("OtherDatabaseCopyHasHighestPreference", "ExAB12DC", false, true, Strings.ResourceManager, new object[]
			{
				othercopyName
			});
		}

		// Token: 0x0600904E RID: 36942 RVA: 0x0024F1F0 File Offset: 0x0024D3F0
		public static LocalizedString CouldNotRemoveCompletedRequest(string indexEntry)
		{
			return new LocalizedString("CouldNotRemoveCompletedRequest", "ExEE7BFD", false, true, Strings.ResourceManager, new object[]
			{
				indexEntry
			});
		}

		// Token: 0x0600904F RID: 36943 RVA: 0x0024F220 File Offset: 0x0024D420
		public static LocalizedString ErrorOneManagementOrgMailboxIsRequired(string tenant, string count)
		{
			return new LocalizedString("ErrorOneManagementOrgMailboxIsRequired", "", false, false, Strings.ResourceManager, new object[]
			{
				tenant,
				count
			});
		}

		// Token: 0x06009050 RID: 36944 RVA: 0x0024F254 File Offset: 0x0024D454
		public static LocalizedString ErrorCannotModifyCrossVersionObject(string id)
		{
			return new LocalizedString("ErrorCannotModifyCrossVersionObject", "Ex58CD4C", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x06009051 RID: 36945 RVA: 0x0024F284 File Offset: 0x0024D484
		public static LocalizedString GetDagHealthInfoRequestException(string serverFqdn, string errorMsg)
		{
			return new LocalizedString("GetDagHealthInfoRequestException", "", false, false, Strings.ResourceManager, new object[]
			{
				serverFqdn,
				errorMsg
			});
		}

		// Token: 0x17002DD4 RID: 11732
		// (get) Token: 0x06009052 RID: 36946 RVA: 0x0024F2B7 File Offset: 0x0024D4B7
		public static LocalizedString NewPerfCounters
		{
			get
			{
				return new LocalizedString("NewPerfCounters", "Ex8A6C53", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002DD5 RID: 11733
		// (get) Token: 0x06009053 RID: 36947 RVA: 0x0024F2D5 File Offset: 0x0024D4D5
		public static LocalizedString CalendarAnalysisMixedModeNotSupported
		{
			get
			{
				return new LocalizedString("CalendarAnalysisMixedModeNotSupported", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009054 RID: 36948 RVA: 0x0024F2F4 File Offset: 0x0024D4F4
		public static LocalizedString TestTeamMailboxConstraintError(string para1, string para2)
		{
			return new LocalizedString("TestTeamMailboxConstraintError", "", false, false, Strings.ResourceManager, new object[]
			{
				para1,
				para2
			});
		}

		// Token: 0x06009055 RID: 36949 RVA: 0x0024F328 File Offset: 0x0024D528
		public static LocalizedString ConfirmationMessageDisableMailPublicFolder(string Identity)
		{
			return new LocalizedString("ConfirmationMessageDisableMailPublicFolder", "ExBD4FA7", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x06009056 RID: 36950 RVA: 0x0024F358 File Offset: 0x0024D558
		public static LocalizedString DebugResolvingUserCN(string userid, string cn)
		{
			return new LocalizedString("DebugResolvingUserCN", "Ex508BE0", false, true, Strings.ResourceManager, new object[]
			{
				userid,
				cn
			});
		}

		// Token: 0x06009057 RID: 36951 RVA: 0x0024F38C File Offset: 0x0024D58C
		public static LocalizedString ConfirmationMessageRemoveGls(string entryType, string id)
		{
			return new LocalizedString("ConfirmationMessageRemoveGls", "", false, false, Strings.ResourceManager, new object[]
			{
				entryType,
				id
			});
		}

		// Token: 0x06009058 RID: 36952 RVA: 0x0024F3C0 File Offset: 0x0024D5C0
		public static LocalizedString ErrorCannotCreateFolderUnderNonIpmSubtree(string name, string parent)
		{
			return new LocalizedString("ErrorCannotCreateFolderUnderNonIpmSubtree", "Ex26B5A2", false, true, Strings.ResourceManager, new object[]
			{
				name,
				parent
			});
		}

		// Token: 0x17002DD6 RID: 11734
		// (get) Token: 0x06009059 RID: 36953 RVA: 0x0024F3F3 File Offset: 0x0024D5F3
		public static LocalizedString MapiSubmitSystemProbeFail
		{
			get
			{
				return new LocalizedString("MapiSubmitSystemProbeFail", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002DD7 RID: 11735
		// (get) Token: 0x0600905A RID: 36954 RVA: 0x0024F411 File Offset: 0x0024D611
		public static LocalizedString FinishedUpdatingMFLFiles
		{
			get
			{
				return new LocalizedString("FinishedUpdatingMFLFiles", "ExFF1847", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600905B RID: 36955 RVA: 0x0024F430 File Offset: 0x0024D630
		public static LocalizedString ElcServerNotFound(string mailboxAddress)
		{
			return new LocalizedString("ElcServerNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				mailboxAddress
			});
		}

		// Token: 0x17002DD8 RID: 11736
		// (get) Token: 0x0600905C RID: 36956 RVA: 0x0024F45F File Offset: 0x0024D65F
		public static LocalizedString FailedToChangeServiceConfig
		{
			get
			{
				return new LocalizedString("FailedToChangeServiceConfig", "Ex7D97F8", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600905D RID: 36957 RVA: 0x0024F480 File Offset: 0x0024D680
		public static LocalizedString ConnectionFailedException(int number)
		{
			return new LocalizedString("ConnectionFailedException", "", false, false, Strings.ResourceManager, new object[]
			{
				number
			});
		}

		// Token: 0x17002DD9 RID: 11737
		// (get) Token: 0x0600905E RID: 36958 RVA: 0x0024F4B4 File Offset: 0x0024D6B4
		public static LocalizedString JournalNdrMailboxWarning
		{
			get
			{
				return new LocalizedString("JournalNdrMailboxWarning", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600905F RID: 36959 RVA: 0x0024F4D4 File Offset: 0x0024D6D4
		public static LocalizedString ConfirmationMessageNewExchangeSettings(string Name)
		{
			return new LocalizedString("ConfirmationMessageNewExchangeSettings", "", false, false, Strings.ResourceManager, new object[]
			{
				Name
			});
		}

		// Token: 0x17002DDA RID: 11738
		// (get) Token: 0x06009060 RID: 36960 RVA: 0x0024F503 File Offset: 0x0024D703
		public static LocalizedString DeleteOperation
		{
			get
			{
				return new LocalizedString("DeleteOperation", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002DDB RID: 11739
		// (get) Token: 0x06009061 RID: 36961 RVA: 0x0024F521 File Offset: 0x0024D721
		public static LocalizedString TenantNotificationVerboseNotSendingEmailNoRecipients
		{
			get
			{
				return new LocalizedString("TenantNotificationVerboseNotSendingEmailNoRecipients", "ExC1C7E4", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009062 RID: 36962 RVA: 0x0024F540 File Offset: 0x0024D740
		public static LocalizedString OnPremisesOrganizationConfirmationMessageRemove(OnPremisesOrganizationIdParameter identity)
		{
			return new LocalizedString("OnPremisesOrganizationConfirmationMessageRemove", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x06009063 RID: 36963 RVA: 0x0024F570 File Offset: 0x0024D770
		public static LocalizedString ErrorCannotMovePrimaryAndArchiveInDifferentDirections(string srcPrimary, string targetPrimary, string srcArchive, string targetArchive)
		{
			return new LocalizedString("ErrorCannotMovePrimaryAndArchiveInDifferentDirections", "", false, false, Strings.ResourceManager, new object[]
			{
				srcPrimary,
				targetPrimary,
				srcArchive,
				targetArchive
			});
		}

		// Token: 0x06009064 RID: 36964 RVA: 0x0024F5AC File Offset: 0x0024D7AC
		public static LocalizedString ErrorMoveUnableToGetCopyStatusException(string server, string errorMsg)
		{
			return new LocalizedString("ErrorMoveUnableToGetCopyStatusException", "", false, false, Strings.ResourceManager, new object[]
			{
				server,
				errorMsg
			});
		}

		// Token: 0x06009065 RID: 36965 RVA: 0x0024F5E0 File Offset: 0x0024D7E0
		public static LocalizedString ApplicationUrisDiffer(string localUri, string remoteUri)
		{
			return new LocalizedString("ApplicationUrisDiffer", "Ex42BBFC", false, true, Strings.ResourceManager, new object[]
			{
				localUri,
				remoteUri
			});
		}

		// Token: 0x06009066 RID: 36966 RVA: 0x0024F614 File Offset: 0x0024D814
		public static LocalizedString WarnRpcHttpAdOrphanFound(string id, string server)
		{
			return new LocalizedString("WarnRpcHttpAdOrphanFound", "ExBAC862", false, true, Strings.ResourceManager, new object[]
			{
				id,
				server
			});
		}

		// Token: 0x06009067 RID: 36967 RVA: 0x0024F648 File Offset: 0x0024D848
		public static LocalizedString OnPremisesOrganizationInboundConnectorNotExists(InboundConnectorIdParameter identity)
		{
			return new LocalizedString("OnPremisesOrganizationInboundConnectorNotExists", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x17002DDC RID: 11740
		// (get) Token: 0x06009068 RID: 36968 RVA: 0x0024F677 File Offset: 0x0024D877
		public static LocalizedString InternalJournalRuleScope
		{
			get
			{
				return new LocalizedString("InternalJournalRuleScope", "Ex26BF62", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002DDD RID: 11741
		// (get) Token: 0x06009069 RID: 36969 RVA: 0x0024F695 File Offset: 0x0024D895
		public static LocalizedString TestMigrationServerConnectionFailed
		{
			get
			{
				return new LocalizedString("TestMigrationServerConnectionFailed", "Ex6E3836", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600906A RID: 36970 RVA: 0x0024F6B4 File Offset: 0x0024D8B4
		public static LocalizedString VerboseTestSourceSite(string site)
		{
			return new LocalizedString("VerboseTestSourceSite", "", false, false, Strings.ResourceManager, new object[]
			{
				site
			});
		}

		// Token: 0x0600906B RID: 36971 RVA: 0x0024F6E4 File Offset: 0x0024D8E4
		public static LocalizedString BackupFileNotCreated(string originalFilename, string backupFileName)
		{
			return new LocalizedString("BackupFileNotCreated", "Ex33B9D4", false, true, Strings.ResourceManager, new object[]
			{
				originalFilename,
				backupFileName
			});
		}

		// Token: 0x0600906C RID: 36972 RVA: 0x0024F718 File Offset: 0x0024D918
		public static LocalizedString ErrorCanNotFindWebObject(string name, string webObjectType, string hostName)
		{
			return new LocalizedString("ErrorCanNotFindWebObject", "Ex45DB41", false, true, Strings.ResourceManager, new object[]
			{
				name,
				webObjectType,
				hostName
			});
		}

		// Token: 0x0600906D RID: 36973 RVA: 0x0024F750 File Offset: 0x0024D950
		public static LocalizedString ErrorUnknownAssignmentMethod(string userIdentity)
		{
			return new LocalizedString("ErrorUnknownAssignmentMethod", "ExAAC657", false, true, Strings.ResourceManager, new object[]
			{
				userIdentity
			});
		}

		// Token: 0x0600906E RID: 36974 RVA: 0x0024F780 File Offset: 0x0024D980
		public static LocalizedString VerboseDomainControllerUsedOutOfSiteDatabase(string dcName)
		{
			return new LocalizedString("VerboseDomainControllerUsedOutOfSiteDatabase", "", false, false, Strings.ResourceManager, new object[]
			{
				dcName
			});
		}

		// Token: 0x17002DDE RID: 11742
		// (get) Token: 0x0600906F RID: 36975 RVA: 0x0024F7AF File Offset: 0x0024D9AF
		public static LocalizedString CannotRemoveDefaultSharingPolicy
		{
			get
			{
				return new LocalizedString("CannotRemoveDefaultSharingPolicy", "ExBF79C9", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009070 RID: 36976 RVA: 0x0024F7D0 File Offset: 0x0024D9D0
		public static LocalizedString NoMailboxRoleInstalledException(string serverName)
		{
			return new LocalizedString("NoMailboxRoleInstalledException", "", false, false, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		// Token: 0x06009071 RID: 36977 RVA: 0x0024F800 File Offset: 0x0024DA00
		public static LocalizedString MalwareFilterActionDescription(string policy)
		{
			return new LocalizedString("MalwareFilterActionDescription", "", false, false, Strings.ResourceManager, new object[]
			{
				policy
			});
		}

		// Token: 0x17002DDF RID: 11743
		// (get) Token: 0x06009072 RID: 36978 RVA: 0x0024F82F File Offset: 0x0024DA2F
		public static LocalizedString DatabaseOffline
		{
			get
			{
				return new LocalizedString("DatabaseOffline", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009073 RID: 36979 RVA: 0x0024F850 File Offset: 0x0024DA50
		public static LocalizedString ConfirmationMessageRemoveManagementScope(string identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveManagementScope", "ExF3CC94", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x17002DE0 RID: 11744
		// (get) Token: 0x06009074 RID: 36980 RVA: 0x0024F87F File Offset: 0x0024DA7F
		public static LocalizedString FileAlreadyExists
		{
			get
			{
				return new LocalizedString("FileAlreadyExists", "Ex68AA52", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002DE1 RID: 11745
		// (get) Token: 0x06009075 RID: 36981 RVA: 0x0024F89D File Offset: 0x0024DA9D
		public static LocalizedString ErrorCannotLoadFingerprintCreator
		{
			get
			{
				return new LocalizedString("ErrorCannotLoadFingerprintCreator", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002DE2 RID: 11746
		// (get) Token: 0x06009076 RID: 36982 RVA: 0x0024F8BB File Offset: 0x0024DABB
		public static LocalizedString VerboseChangeWinrmStartType
		{
			get
			{
				return new LocalizedString("VerboseChangeWinrmStartType", "Ex9C1CCC", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002DE3 RID: 11747
		// (get) Token: 0x06009077 RID: 36983 RVA: 0x0024F8D9 File Offset: 0x0024DAD9
		public static LocalizedString ConfiguringMailboxSystemAttendantDependentTasks
		{
			get
			{
				return new LocalizedString("ConfiguringMailboxSystemAttendantDependentTasks", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009078 RID: 36984 RVA: 0x0024F8F8 File Offset: 0x0024DAF8
		public static LocalizedString ConfirmationMessageRemoveMessageClassificationExtended(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveMessageClassificationExtended", "Ex3DD3A8", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x06009079 RID: 36985 RVA: 0x0024F928 File Offset: 0x0024DB28
		public static LocalizedString ErrorAddressListOrGlobalAddressListNotFound(string idStringValue)
		{
			return new LocalizedString("ErrorAddressListOrGlobalAddressListNotFound", "ExB447D6", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		// Token: 0x17002DE4 RID: 11748
		// (get) Token: 0x0600907A RID: 36986 RVA: 0x0024F957 File Offset: 0x0024DB57
		public static LocalizedString StartingMSExchangeFDS
		{
			get
			{
				return new LocalizedString("StartingMSExchangeFDS", "ExEB50A1", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600907B RID: 36987 RVA: 0x0024F978 File Offset: 0x0024DB78
		public static LocalizedString DagTaskProblemChangingQuorumExceptionAccessDenied(string clusterName, string fsw, Exception ex)
		{
			return new LocalizedString("DagTaskProblemChangingQuorumExceptionAccessDenied", "", false, false, Strings.ResourceManager, new object[]
			{
				clusterName,
				fsw,
				ex
			});
		}

		// Token: 0x17002DE5 RID: 11749
		// (get) Token: 0x0600907C RID: 36988 RVA: 0x0024F9AF File Offset: 0x0024DBAF
		public static LocalizedString ErrorInvalidExcludedCmdletPattern
		{
			get
			{
				return new LocalizedString("ErrorInvalidExcludedCmdletPattern", "Ex997ECF", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600907D RID: 36989 RVA: 0x0024F9D0 File Offset: 0x0024DBD0
		public static LocalizedString SupportedToolsDataOverlappingTenantVersionRanges(string toolName)
		{
			return new LocalizedString("SupportedToolsDataOverlappingTenantVersionRanges", "ExECBEF5", false, true, Strings.ResourceManager, new object[]
			{
				toolName
			});
		}

		// Token: 0x17002DE6 RID: 11750
		// (get) Token: 0x0600907E RID: 36990 RVA: 0x0024F9FF File Offset: 0x0024DBFF
		public static LocalizedString CasHealthTaskCasHasNoTopologySite
		{
			get
			{
				return new LocalizedString("CasHealthTaskCasHasNoTopologySite", "Ex6A583B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002DE7 RID: 11751
		// (get) Token: 0x0600907F RID: 36991 RVA: 0x0024FA1D File Offset: 0x0024DC1D
		public static LocalizedString DisasterRecoveryGatewayRoleDescription
		{
			get
			{
				return new LocalizedString("DisasterRecoveryGatewayRoleDescription", "ExE24119", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009080 RID: 36992 RVA: 0x0024FA3C File Offset: 0x0024DC3C
		public static LocalizedString ErrorRollbackGlsExpectsSynchronizationFinishedFullSync(string identity)
		{
			return new LocalizedString("ErrorRollbackGlsExpectsSynchronizationFinishedFullSync", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x17002DE8 RID: 11752
		// (get) Token: 0x06009081 RID: 36993 RVA: 0x0024FA6B File Offset: 0x0024DC6B
		public static LocalizedString GlobalLocatorServiceResultUndefined
		{
			get
			{
				return new LocalizedString("GlobalLocatorServiceResultUndefined", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009082 RID: 36994 RVA: 0x0024FA8C File Offset: 0x0024DC8C
		public static LocalizedString ErrorFailedToNetIdToMemberName(string netId, string message)
		{
			return new LocalizedString("ErrorFailedToNetIdToMemberName", "ExAB54F3", false, true, Strings.ResourceManager, new object[]
			{
				netId,
				message
			});
		}

		// Token: 0x17002DE9 RID: 11753
		// (get) Token: 0x06009083 RID: 36995 RVA: 0x0024FABF File Offset: 0x0024DCBF
		public static LocalizedString SetupProgressCustomScriptsEnabled
		{
			get
			{
				return new LocalizedString("SetupProgressCustomScriptsEnabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009084 RID: 36996 RVA: 0x0024FAE0 File Offset: 0x0024DCE0
		public static LocalizedString RetentionPolicyTagTaskException(string reason)
		{
			return new LocalizedString("RetentionPolicyTagTaskException", "Ex212177", false, true, Strings.ResourceManager, new object[]
			{
				reason
			});
		}

		// Token: 0x17002DEA RID: 11754
		// (get) Token: 0x06009085 RID: 36997 RVA: 0x0024FB0F File Offset: 0x0024DD0F
		public static LocalizedString MessageTypeCalendaring
		{
			get
			{
				return new LocalizedString("MessageTypeCalendaring", "ExECAD45", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002DEB RID: 11755
		// (get) Token: 0x06009086 RID: 36998 RVA: 0x0024FB2D File Offset: 0x0024DD2D
		public static LocalizedString InstallRecoveryActionArbiterServiceTask
		{
			get
			{
				return new LocalizedString("InstallRecoveryActionArbiterServiceTask", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002DEC RID: 11756
		// (get) Token: 0x06009087 RID: 36999 RVA: 0x0024FB4B File Offset: 0x0024DD4B
		public static LocalizedString InvalidNameOrDescriptionForDefaultLocale
		{
			get
			{
				return new LocalizedString("InvalidNameOrDescriptionForDefaultLocale", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009088 RID: 37000 RVA: 0x0024FB6C File Offset: 0x0024DD6C
		public static LocalizedString TenantAlreadyHasRequestPending(string tenantName)
		{
			return new LocalizedString("TenantAlreadyHasRequestPending", "Ex66DAF5", false, true, Strings.ResourceManager, new object[]
			{
				tenantName
			});
		}

		// Token: 0x17002DED RID: 11757
		// (get) Token: 0x06009089 RID: 37001 RVA: 0x0024FB9B File Offset: 0x0024DD9B
		public static LocalizedString ErrorRoomPasswordMustBeSetWhenCreatingARoomADAccount
		{
			get
			{
				return new LocalizedString("ErrorRoomPasswordMustBeSetWhenCreatingARoomADAccount", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002DEE RID: 11758
		// (get) Token: 0x0600908A RID: 37002 RVA: 0x0024FBB9 File Offset: 0x0024DDB9
		public static LocalizedString ExceptionProductInfoRequired
		{
			get
			{
				return new LocalizedString("ExceptionProductInfoRequired", "ExE3DAB5", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600908B RID: 37003 RVA: 0x0024FBD8 File Offset: 0x0024DDD8
		public static LocalizedString verboseNetIdToMemberName(string netId)
		{
			return new LocalizedString("verboseNetIdToMemberName", "ExE35BA9", false, true, Strings.ResourceManager, new object[]
			{
				netId
			});
		}

		// Token: 0x17002DEF RID: 11759
		// (get) Token: 0x0600908C RID: 37004 RVA: 0x0024FC07 File Offset: 0x0024DE07
		public static LocalizedString VerboseSucceedToPrepopulateCache
		{
			get
			{
				return new LocalizedString("VerboseSucceedToPrepopulateCache", "ExEF157A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600908D RID: 37005 RVA: 0x0024FC28 File Offset: 0x0024DE28
		public static LocalizedString SendConnectorSourceAndTargetServersInOneRg(string routingGroupName)
		{
			return new LocalizedString("SendConnectorSourceAndTargetServersInOneRg", "Ex0A0A38", false, true, Strings.ResourceManager, new object[]
			{
				routingGroupName
			});
		}

		// Token: 0x0600908E RID: 37006 RVA: 0x0024FC58 File Offset: 0x0024DE58
		public static LocalizedString ErrorDiscoveryMailboxDatabase(string server)
		{
			return new LocalizedString("ErrorDiscoveryMailboxDatabase", "Ex7A1216", false, true, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		// Token: 0x0600908F RID: 37007 RVA: 0x0024FC88 File Offset: 0x0024DE88
		public static LocalizedString ClassificationRuleCollectionKeywordTooLong(int maxLength, string offendingKeywordProcessorIds)
		{
			return new LocalizedString("ClassificationRuleCollectionKeywordTooLong", "", false, false, Strings.ResourceManager, new object[]
			{
				maxLength,
				offendingKeywordProcessorIds
			});
		}

		// Token: 0x06009090 RID: 37008 RVA: 0x0024FCC0 File Offset: 0x0024DEC0
		public static LocalizedString PopImapDeleteMsg(int msgID)
		{
			return new LocalizedString("PopImapDeleteMsg", "ExA3F70B", false, true, Strings.ResourceManager, new object[]
			{
				msgID
			});
		}

		// Token: 0x06009091 RID: 37009 RVA: 0x0024FCF4 File Offset: 0x0024DEF4
		public static LocalizedString GetEcpVersionException(string ecpDllPath)
		{
			return new LocalizedString("GetEcpVersionException", "Ex96421A", false, true, Strings.ResourceManager, new object[]
			{
				ecpDllPath
			});
		}

		// Token: 0x17002DF0 RID: 11760
		// (get) Token: 0x06009092 RID: 37010 RVA: 0x0024FD23 File Offset: 0x0024DF23
		public static LocalizedString NotMailboxDatabase
		{
			get
			{
				return new LocalizedString("NotMailboxDatabase", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009093 RID: 37011 RVA: 0x0024FD44 File Offset: 0x0024DF44
		public static LocalizedString InvalidAuditSeverityLevel(string severityLevel)
		{
			return new LocalizedString("InvalidAuditSeverityLevel", "", false, false, Strings.ResourceManager, new object[]
			{
				severityLevel
			});
		}

		// Token: 0x06009094 RID: 37012 RVA: 0x0024FD74 File Offset: 0x0024DF74
		public static LocalizedString ErrorExtendedRightNotFound(string idStringValue)
		{
			return new LocalizedString("ErrorExtendedRightNotFound", "Ex837658", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		// Token: 0x06009095 RID: 37013 RVA: 0x0024FDA4 File Offset: 0x0024DFA4
		public static LocalizedString ReadDeletedObjectsAclPermissionDeniedException(string msg)
		{
			return new LocalizedString("ReadDeletedObjectsAclPermissionDeniedException", "Ex936FFA", false, true, Strings.ResourceManager, new object[]
			{
				msg
			});
		}

		// Token: 0x17002DF1 RID: 11761
		// (get) Token: 0x06009096 RID: 37014 RVA: 0x0024FDD3 File Offset: 0x0024DFD3
		public static LocalizedString Error_CheckClientInfo
		{
			get
			{
				return new LocalizedString("Error_CheckClientInfo", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009097 RID: 37015 RVA: 0x0024FDF4 File Offset: 0x0024DFF4
		public static LocalizedString ErrorSetMailboxLitigationHoldDurationNotReadError(string error)
		{
			return new LocalizedString("ErrorSetMailboxLitigationHoldDurationNotReadError", "", false, false, Strings.ResourceManager, new object[]
			{
				error
			});
		}

		// Token: 0x06009098 RID: 37016 RVA: 0x0024FE24 File Offset: 0x0024E024
		public static LocalizedString EcpAdOrphanFound(string id)
		{
			return new LocalizedString("EcpAdOrphanFound", "ExD8A458", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x17002DF2 RID: 11762
		// (get) Token: 0x06009099 RID: 37017 RVA: 0x0024FE53 File Offset: 0x0024E053
		public static LocalizedString DelegationTokenRequestSuccess
		{
			get
			{
				return new LocalizedString("DelegationTokenRequestSuccess", "Ex41391D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600909A RID: 37018 RVA: 0x0024FE74 File Offset: 0x0024E074
		public static LocalizedString CouldNotConnectToClusterError(string machineName, string error)
		{
			return new LocalizedString("CouldNotConnectToClusterError", "ExCAD707", false, true, Strings.ResourceManager, new object[]
			{
				machineName,
				error
			});
		}

		// Token: 0x0600909B RID: 37019 RVA: 0x0024FEA8 File Offset: 0x0024E0A8
		public static LocalizedString ErrorWSManModuleFileNotFound(string file)
		{
			return new LocalizedString("ErrorWSManModuleFileNotFound", "ExE8EB8F", false, true, Strings.ResourceManager, new object[]
			{
				file
			});
		}

		// Token: 0x17002DF3 RID: 11763
		// (get) Token: 0x0600909C RID: 37020 RVA: 0x0024FED7 File Offset: 0x0024E0D7
		public static LocalizedString MOWADeviceTypePrefix
		{
			get
			{
				return new LocalizedString("MOWADeviceTypePrefix", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002DF4 RID: 11764
		// (get) Token: 0x0600909D RID: 37021 RVA: 0x0024FEF5 File Offset: 0x0024E0F5
		public static LocalizedString FFoDisablePrepareSct
		{
			get
			{
				return new LocalizedString("FFoDisablePrepareSct", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600909E RID: 37022 RVA: 0x0024FF14 File Offset: 0x0024E114
		public static LocalizedString AuditLogSearchArbitrationMailboxNotFound(string organization)
		{
			return new LocalizedString("AuditLogSearchArbitrationMailboxNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				organization
			});
		}

		// Token: 0x17002DF5 RID: 11765
		// (get) Token: 0x0600909F RID: 37023 RVA: 0x0024FF43 File Offset: 0x0024E143
		public static LocalizedString SetupProgressConfiguringOAB
		{
			get
			{
				return new LocalizedString("SetupProgressConfiguringOAB", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060090A0 RID: 37024 RVA: 0x0024FF64 File Offset: 0x0024E164
		public static LocalizedString UnableToAddE12DStoExSReplicationException(string dom)
		{
			return new LocalizedString("UnableToAddE12DStoExSReplicationException", "Ex06E5C7", false, true, Strings.ResourceManager, new object[]
			{
				dom
			});
		}

		// Token: 0x17002DF6 RID: 11766
		// (get) Token: 0x060090A1 RID: 37025 RVA: 0x0024FF93 File Offset: 0x0024E193
		public static LocalizedString ErrorDefaultSpamConfigCannotBeDeleted
		{
			get
			{
				return new LocalizedString("ErrorDefaultSpamConfigCannotBeDeleted", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060090A2 RID: 37026 RVA: 0x0024FFB4 File Offset: 0x0024E1B4
		public static LocalizedString FailedDocumentsResultsMailbox(string mailbox, int total)
		{
			return new LocalizedString("FailedDocumentsResultsMailbox", "", false, false, Strings.ResourceManager, new object[]
			{
				mailbox,
				total
			});
		}

		// Token: 0x060090A3 RID: 37027 RVA: 0x0024FFEC File Offset: 0x0024E1EC
		public static LocalizedString TopologyServiceADServerInfo(string serverFqdn)
		{
			return new LocalizedString("TopologyServiceADServerInfo", "", false, false, Strings.ResourceManager, new object[]
			{
				serverFqdn
			});
		}

		// Token: 0x060090A4 RID: 37028 RVA: 0x0025001C File Offset: 0x0024E21C
		public static LocalizedString ErrorDCNotFound(string hostName)
		{
			return new LocalizedString("ErrorDCNotFound", "Ex78C55D", false, true, Strings.ResourceManager, new object[]
			{
				hostName
			});
		}

		// Token: 0x060090A5 RID: 37029 RVA: 0x0025004C File Offset: 0x0024E24C
		public static LocalizedString messageTopologyServiceWCFExceptionThrown(string e)
		{
			return new LocalizedString("messageTopologyServiceWCFExceptionThrown", "", false, false, Strings.ResourceManager, new object[]
			{
				e
			});
		}

		// Token: 0x060090A6 RID: 37030 RVA: 0x0025007C File Offset: 0x0024E27C
		public static LocalizedString DagTaskServersInClusterNotInAd(string serverNames)
		{
			return new LocalizedString("DagTaskServersInClusterNotInAd", "", false, false, Strings.ResourceManager, new object[]
			{
				serverNames
			});
		}

		// Token: 0x060090A7 RID: 37031 RVA: 0x002500AC File Offset: 0x0024E2AC
		public static LocalizedString VerboseSyncTaskDomainControllerToUse(string dc, Guid Id)
		{
			return new LocalizedString("VerboseSyncTaskDomainControllerToUse", "Ex0BD52D", false, true, Strings.ResourceManager, new object[]
			{
				dc,
				Id
			});
		}

		// Token: 0x060090A8 RID: 37032 RVA: 0x002500E4 File Offset: 0x0024E2E4
		public static LocalizedString MoveMailboxConfigurationOnlyShouldMoveE14ToLowerVersion(string displayname, string smtp, string database)
		{
			return new LocalizedString("MoveMailboxConfigurationOnlyShouldMoveE14ToLowerVersion", "Ex620313", false, true, Strings.ResourceManager, new object[]
			{
				displayname,
				smtp,
				database
			});
		}

		// Token: 0x17002DF7 RID: 11767
		// (get) Token: 0x060090A9 RID: 37033 RVA: 0x0025011B File Offset: 0x0024E31B
		public static LocalizedString SetupComponentPreSetupFrontendTransport
		{
			get
			{
				return new LocalizedString("SetupComponentPreSetupFrontendTransport", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002DF8 RID: 11768
		// (get) Token: 0x060090AA RID: 37034 RVA: 0x00250139 File Offset: 0x0024E339
		public static LocalizedString SetupComponentPostSetupGateway
		{
			get
			{
				return new LocalizedString("SetupComponentPostSetupGateway", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002DF9 RID: 11769
		// (get) Token: 0x060090AB RID: 37035 RVA: 0x00250157 File Offset: 0x0024E357
		public static LocalizedString ValidatingTestCasConnectivityRunInstance
		{
			get
			{
				return new LocalizedString("ValidatingTestCasConnectivityRunInstance", "Ex65C5D4", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060090AC RID: 37036 RVA: 0x00250178 File Offset: 0x0024E378
		public static LocalizedString WarningCertificateSameAsPrevious(string thumbprint)
		{
			return new LocalizedString("WarningCertificateSameAsPrevious", "", false, false, Strings.ResourceManager, new object[]
			{
				thumbprint
			});
		}

		// Token: 0x060090AD RID: 37037 RVA: 0x002501A8 File Offset: 0x0024E3A8
		public static LocalizedString ErrorMovingCatalogs(string databaseName, string errorMessage)
		{
			return new LocalizedString("ErrorMovingCatalogs", "Ex2C3441", false, true, Strings.ResourceManager, new object[]
			{
				databaseName,
				errorMessage
			});
		}

		// Token: 0x060090AE RID: 37038 RVA: 0x002501DC File Offset: 0x0024E3DC
		public static LocalizedString ConfirmationClearingChainedProperties(string propertiesToBeCleared)
		{
			return new LocalizedString("ConfirmationClearingChainedProperties", "Ex8C54AA", false, true, Strings.ResourceManager, new object[]
			{
				propertiesToBeCleared
			});
		}

		// Token: 0x060090AF RID: 37039 RVA: 0x0025020C File Offset: 0x0024E40C
		public static LocalizedString RootNodeCannotBeRemoved(string node, string fileName)
		{
			return new LocalizedString("RootNodeCannotBeRemoved", "", false, false, Strings.ResourceManager, new object[]
			{
				node,
				fileName
			});
		}

		// Token: 0x17002DFA RID: 11770
		// (get) Token: 0x060090B0 RID: 37040 RVA: 0x0025023F File Offset: 0x0024E43F
		public static LocalizedString InstallTranscodingServiceEx
		{
			get
			{
				return new LocalizedString("InstallTranscodingServiceEx", "Ex8D1AE8", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060090B1 RID: 37041 RVA: 0x00250260 File Offset: 0x0024E460
		public static LocalizedString ErrorNoPublicFolderDatabaseOnServer(string serverName)
		{
			return new LocalizedString("ErrorNoPublicFolderDatabaseOnServer", "Ex84E963", false, true, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		// Token: 0x17002DFB RID: 11771
		// (get) Token: 0x060090B2 RID: 37042 RVA: 0x0025028F File Offset: 0x0024E48F
		public static LocalizedString GlobalJournalRuleScope
		{
			get
			{
				return new LocalizedString("GlobalJournalRuleScope", "Ex41C6EA", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060090B3 RID: 37043 RVA: 0x002502B0 File Offset: 0x0024E4B0
		public static LocalizedString SeederProgressMsgNoNetwork(string edbName, string serverName, long bytesRead, long bytesWritten, long bytesRemaining, string databaseName)
		{
			return new LocalizedString("SeederProgressMsgNoNetwork", "Ex3F1AE7", false, true, Strings.ResourceManager, new object[]
			{
				edbName,
				serverName,
				bytesRead,
				bytesWritten,
				bytesRemaining,
				databaseName
			});
		}

		// Token: 0x060090B4 RID: 37044 RVA: 0x00250304 File Offset: 0x0024E504
		public static LocalizedString AmMoveRpcCompleted(string db, string server)
		{
			return new LocalizedString("AmMoveRpcCompleted", "Ex84E318", false, true, Strings.ResourceManager, new object[]
			{
				db,
				server
			});
		}

		// Token: 0x17002DFC RID: 11772
		// (get) Token: 0x060090B5 RID: 37045 RVA: 0x00250337 File Offset: 0x0024E537
		public static LocalizedString ActiveManagerCheckDesc
		{
			get
			{
				return new LocalizedString("ActiveManagerCheckDesc", "Ex135886", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060090B6 RID: 37046 RVA: 0x00250358 File Offset: 0x0024E558
		public static LocalizedString LookingForTask(string action, string watermark)
		{
			return new LocalizedString("LookingForTask", "Ex807F10", false, true, Strings.ResourceManager, new object[]
			{
				action,
				watermark
			});
		}

		// Token: 0x060090B7 RID: 37047 RVA: 0x0025038C File Offset: 0x0024E58C
		public static LocalizedString ConfirmationMessageMoveMailboxDatabaseMasterToDisabledServer(string targetserver)
		{
			return new LocalizedString("ConfirmationMessageMoveMailboxDatabaseMasterToDisabledServer", "", false, false, Strings.ResourceManager, new object[]
			{
				targetserver
			});
		}

		// Token: 0x060090B8 RID: 37048 RVA: 0x002503BC File Offset: 0x0024E5BC
		public static LocalizedString CannotValidateIfVOAdmin(string admin)
		{
			return new LocalizedString("CannotValidateIfVOAdmin", "Ex8D1C4C", false, true, Strings.ResourceManager, new object[]
			{
				admin
			});
		}

		// Token: 0x060090B9 RID: 37049 RVA: 0x002503EC File Offset: 0x0024E5EC
		public static LocalizedString ErrorSpecifiedPropertyCannotBeSet(string propertyName)
		{
			return new LocalizedString("ErrorSpecifiedPropertyCannotBeSet", "Ex6A3E5C", false, true, Strings.ResourceManager, new object[]
			{
				propertyName
			});
		}

		// Token: 0x17002DFD RID: 11773
		// (get) Token: 0x060090BA RID: 37050 RVA: 0x0025041B File Offset: 0x0024E61B
		public static LocalizedString SetupComponentConfigurationBridgehead
		{
			get
			{
				return new LocalizedString("SetupComponentConfigurationBridgehead", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002DFE RID: 11774
		// (get) Token: 0x060090BB RID: 37051 RVA: 0x00250439 File Offset: 0x0024E639
		public static LocalizedString ClassificationRuleCollectionDecryptionFailure
		{
			get
			{
				return new LocalizedString("ClassificationRuleCollectionDecryptionFailure", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002DFF RID: 11775
		// (get) Token: 0x060090BC RID: 37052 RVA: 0x00250457 File Offset: 0x0024E657
		public static LocalizedString ProgressRestoringDatabaseStatus
		{
			get
			{
				return new LocalizedString("ProgressRestoringDatabaseStatus", "Ex4ED4CC", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060090BD RID: 37053 RVA: 0x00250478 File Offset: 0x0024E678
		public static LocalizedString ErrorInvalidMetadataUrl(string urlString)
		{
			return new LocalizedString("ErrorInvalidMetadataUrl", "", false, false, Strings.ResourceManager, new object[]
			{
				urlString
			});
		}

		// Token: 0x17002E00 RID: 11776
		// (get) Token: 0x060090BE RID: 37054 RVA: 0x002504A7 File Offset: 0x0024E6A7
		public static LocalizedString CasHealthOwaTimeoutExternal
		{
			get
			{
				return new LocalizedString("CasHealthOwaTimeoutExternal", "ExB41BDF", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002E01 RID: 11777
		// (get) Token: 0x060090BF RID: 37055 RVA: 0x002504C5 File Offset: 0x0024E6C5
		public static LocalizedString TestSearchCheckMailbox
		{
			get
			{
				return new LocalizedString("TestSearchCheckMailbox", "Ex3B3811", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060090C0 RID: 37056 RVA: 0x002504E4 File Offset: 0x0024E6E4
		public static LocalizedString FailedToGetServiceStatusForNodeException(string server, string error)
		{
			return new LocalizedString("FailedToGetServiceStatusForNodeException", "", false, false, Strings.ResourceManager, new object[]
			{
				server,
				error
			});
		}

		// Token: 0x17002E02 RID: 11778
		// (get) Token: 0x060090C1 RID: 37057 RVA: 0x00250517 File Offset: 0x0024E717
		public static LocalizedString SendConnectorDashdashAddressSpaceNotUnique
		{
			get
			{
				return new LocalizedString("SendConnectorDashdashAddressSpaceNotUnique", "Ex8FC27F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060090C2 RID: 37058 RVA: 0x00250538 File Offset: 0x0024E738
		public static LocalizedString ConfirmationMessageRemoveMailboxAssociation(string associationIdentity)
		{
			return new LocalizedString("ConfirmationMessageRemoveMailboxAssociation", "", false, false, Strings.ResourceManager, new object[]
			{
				associationIdentity
			});
		}

		// Token: 0x060090C3 RID: 37059 RVA: 0x00250568 File Offset: 0x0024E768
		public static LocalizedString ExceptionIncomparableType(Type type)
		{
			return new LocalizedString("ExceptionIncomparableType", "ExAF0E67", false, true, Strings.ResourceManager, new object[]
			{
				type
			});
		}

		// Token: 0x17002E03 RID: 11779
		// (get) Token: 0x060090C4 RID: 37060 RVA: 0x00250597 File Offset: 0x0024E797
		public static LocalizedString UninstallImap4BeServiceTask
		{
			get
			{
				return new LocalizedString("UninstallImap4BeServiceTask", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002E04 RID: 11780
		// (get) Token: 0x060090C5 RID: 37061 RVA: 0x002505B5 File Offset: 0x0024E7B5
		public static LocalizedString CopyStatusDisconnectedAndHealthy
		{
			get
			{
				return new LocalizedString("CopyStatusDisconnectedAndHealthy", "ExCC3CD0", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002E05 RID: 11781
		// (get) Token: 0x060090C6 RID: 37062 RVA: 0x002505D3 File Offset: 0x0024E7D3
		public static LocalizedString WarningADServerSettingsUnchanged
		{
			get
			{
				return new LocalizedString("WarningADServerSettingsUnchanged", "Ex794E74", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002E06 RID: 11782
		// (get) Token: 0x060090C7 RID: 37063 RVA: 0x002505F1 File Offset: 0x0024E7F1
		public static LocalizedString CreateMailboxSession
		{
			get
			{
				return new LocalizedString("CreateMailboxSession", "Ex692200", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002E07 RID: 11783
		// (get) Token: 0x060090C8 RID: 37064 RVA: 0x0025060F File Offset: 0x0024E80F
		public static LocalizedString ErrorNoNextCertificate
		{
			get
			{
				return new LocalizedString("ErrorNoNextCertificate", "Ex757208", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060090C9 RID: 37065 RVA: 0x00250630 File Offset: 0x0024E830
		public static LocalizedString RequestFailedValidation(string validationMessage)
		{
			return new LocalizedString("RequestFailedValidation", "ExB91703", false, true, Strings.ResourceManager, new object[]
			{
				validationMessage
			});
		}

		// Token: 0x060090CA RID: 37066 RVA: 0x00250660 File Offset: 0x0024E860
		public static LocalizedString VerboseLogLocationAvailableCondition(string server, string path)
		{
			return new LocalizedString("VerboseLogLocationAvailableCondition", "Ex5AF182", false, true, Strings.ResourceManager, new object[]
			{
				server,
				path
			});
		}

		// Token: 0x060090CB RID: 37067 RVA: 0x00250694 File Offset: 0x0024E894
		public static LocalizedString CannotResolveObjectTypeDefined(string guid)
		{
			return new LocalizedString("CannotResolveObjectTypeDefined", "Ex4CC84F", false, true, Strings.ResourceManager, new object[]
			{
				guid
			});
		}

		// Token: 0x060090CC RID: 37068 RVA: 0x002506C4 File Offset: 0x0024E8C4
		public static LocalizedString ConfirmationMessageMountDatabase(string Identity)
		{
			return new LocalizedString("ConfirmationMessageMountDatabase", "ExD84D09", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x060090CD RID: 37069 RVA: 0x002506F4 File Offset: 0x0024E8F4
		public static LocalizedString WarningSuspendSupportedOnlyDuringSync(string currentState, string s1, string s2)
		{
			return new LocalizedString("WarningSuspendSupportedOnlyDuringSync", "", false, false, Strings.ResourceManager, new object[]
			{
				currentState,
				s1,
				s2
			});
		}

		// Token: 0x17002E08 RID: 11784
		// (get) Token: 0x060090CE RID: 37070 RVA: 0x0025072B File Offset: 0x0024E92B
		public static LocalizedString TokenValidationFailed
		{
			get
			{
				return new LocalizedString("TokenValidationFailed", "ExE27C7D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060090CF RID: 37071 RVA: 0x0025074C File Offset: 0x0024E94C
		public static LocalizedString ErrorCannotRemovePrimaryPublicFolderMailbox(string name)
		{
			return new LocalizedString("ErrorCannotRemovePrimaryPublicFolderMailbox", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x060090D0 RID: 37072 RVA: 0x0025077C File Offset: 0x0024E97C
		public static LocalizedString ErrorManagedByWrongRecipientTypeDetails(string group, string manageBy, string supportedTypeDetails)
		{
			return new LocalizedString("ErrorManagedByWrongRecipientTypeDetails", "ExDC8D94", false, true, Strings.ResourceManager, new object[]
			{
				group,
				manageBy,
				supportedTypeDetails
			});
		}

		// Token: 0x060090D1 RID: 37073 RVA: 0x002507B4 File Offset: 0x0024E9B4
		public static LocalizedString VerboseOabLinkedToPfdb(string oab, string pfdb)
		{
			return new LocalizedString("VerboseOabLinkedToPfdb", "Ex4A7209", false, true, Strings.ResourceManager, new object[]
			{
				oab,
				pfdb
			});
		}

		// Token: 0x060090D2 RID: 37074 RVA: 0x002507E8 File Offset: 0x0024E9E8
		public static LocalizedString GetFederationInformationTokenIssuerMatches(string local, string remote)
		{
			return new LocalizedString("GetFederationInformationTokenIssuerMatches", "Ex0496EF", false, true, Strings.ResourceManager, new object[]
			{
				local,
				remote
			});
		}

		// Token: 0x060090D3 RID: 37075 RVA: 0x0025081C File Offset: 0x0024EA1C
		public static LocalizedString ErrorRoleAssignmentConstraintViolation(string assignmentName, string roleName, string groupName)
		{
			return new LocalizedString("ErrorRoleAssignmentConstraintViolation", "Ex752EB3", false, true, Strings.ResourceManager, new object[]
			{
				assignmentName,
				roleName,
				groupName
			});
		}

		// Token: 0x060090D4 RID: 37076 RVA: 0x00250854 File Offset: 0x0024EA54
		public static LocalizedString SetFedAcceptedDomainCleanup(string domain)
		{
			return new LocalizedString("SetFedAcceptedDomainCleanup", "ExB8CF81", false, true, Strings.ResourceManager, new object[]
			{
				domain
			});
		}

		// Token: 0x17002E09 RID: 11785
		// (get) Token: 0x060090D5 RID: 37077 RVA: 0x00250883 File Offset: 0x0024EA83
		public static LocalizedString CannotCreateAuditLogSearchDueToSearchQuota
		{
			get
			{
				return new LocalizedString("CannotCreateAuditLogSearchDueToSearchQuota", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060090D6 RID: 37078 RVA: 0x002508A4 File Offset: 0x0024EAA4
		public static LocalizedString CasHealthMailboxServerNotFound(string serverName)
		{
			return new LocalizedString("CasHealthMailboxServerNotFound", "Ex4C3731", false, true, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		// Token: 0x17002E0A RID: 11786
		// (get) Token: 0x060090D7 RID: 37079 RVA: 0x002508D3 File Offset: 0x0024EAD3
		public static LocalizedString SavingCalendarLogs
		{
			get
			{
				return new LocalizedString("SavingCalendarLogs", "ExF9F233", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060090D8 RID: 37080 RVA: 0x002508F4 File Offset: 0x0024EAF4
		public static LocalizedString ErrorDatabaseNotFound(string idStringValue)
		{
			return new LocalizedString("ErrorDatabaseNotFound", "Ex3997F7", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		// Token: 0x060090D9 RID: 37081 RVA: 0x00250924 File Offset: 0x0024EB24
		public static LocalizedString AIDatabaseStatusPollThreadHung(string serverName, double currentValue)
		{
			return new LocalizedString("AIDatabaseStatusPollThreadHung", "ExCB8667", false, true, Strings.ResourceManager, new object[]
			{
				serverName,
				currentValue
			});
		}

		// Token: 0x060090DA RID: 37082 RVA: 0x0025095C File Offset: 0x0024EB5C
		public static LocalizedString ManageDelegationProvisioningInDNS(string appid)
		{
			return new LocalizedString("ManageDelegationProvisioningInDNS", "ExCBF692", false, true, Strings.ResourceManager, new object[]
			{
				appid
			});
		}

		// Token: 0x17002E0B RID: 11787
		// (get) Token: 0x060090DB RID: 37083 RVA: 0x0025098B File Offset: 0x0024EB8B
		public static LocalizedString ReplayServiceDescription
		{
			get
			{
				return new LocalizedString("ReplayServiceDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002E0C RID: 11788
		// (get) Token: 0x060090DC RID: 37084 RVA: 0x002509A9 File Offset: 0x0024EBA9
		public static LocalizedString ADAttributeNotes
		{
			get
			{
				return new LocalizedString("ADAttributeNotes", "Ex254850", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060090DD RID: 37085 RVA: 0x002509C8 File Offset: 0x0024EBC8
		public static LocalizedString CertificateRequestMissingForArgument(string server)
		{
			return new LocalizedString("CertificateRequestMissingForArgument", "Ex19F85D", false, true, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		// Token: 0x060090DE RID: 37086 RVA: 0x002509F8 File Offset: 0x0024EBF8
		public static LocalizedString ErrorPasswordTooLong(string memberName)
		{
			return new LocalizedString("ErrorPasswordTooLong", "ExE652FA", false, true, Strings.ResourceManager, new object[]
			{
				memberName
			});
		}

		// Token: 0x17002E0D RID: 11789
		// (get) Token: 0x060090DF RID: 37087 RVA: 0x00250A27 File Offset: 0x0024EC27
		public static LocalizedString SetupProgressLinkOutOfTheBoxMrmTags
		{
			get
			{
				return new LocalizedString("SetupProgressLinkOutOfTheBoxMrmTags", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002E0E RID: 11790
		// (get) Token: 0x060090E0 RID: 37088 RVA: 0x00250A45 File Offset: 0x0024EC45
		public static LocalizedString InstallPop3ServiceTask
		{
			get
			{
				return new LocalizedString("InstallPop3ServiceTask", "ExE09926", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060090E1 RID: 37089 RVA: 0x00250A64 File Offset: 0x0024EC64
		public static LocalizedString VerboseTestEwsFromParameter(string url)
		{
			return new LocalizedString("VerboseTestEwsFromParameter", "", false, false, Strings.ResourceManager, new object[]
			{
				url
			});
		}

		// Token: 0x17002E0F RID: 11791
		// (get) Token: 0x060090E2 RID: 37090 RVA: 0x00250A93 File Offset: 0x0024EC93
		public static LocalizedString ErrorMailboxSearchStoragePermanent
		{
			get
			{
				return new LocalizedString("ErrorMailboxSearchStoragePermanent", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060090E3 RID: 37091 RVA: 0x00250AB4 File Offset: 0x0024ECB4
		public static LocalizedString InstallingPackage(string packageFileName)
		{
			return new LocalizedString("InstallingPackage", "ExBE4DD8", false, true, Strings.ResourceManager, new object[]
			{
				packageFileName
			});
		}

		// Token: 0x060090E4 RID: 37092 RVA: 0x00250AE4 File Offset: 0x0024ECE4
		public static LocalizedString RunFromServer(string serverName)
		{
			return new LocalizedString("RunFromServer", "", false, false, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		// Token: 0x17002E10 RID: 11792
		// (get) Token: 0x060090E5 RID: 37093 RVA: 0x00250B13 File Offset: 0x0024ED13
		public static LocalizedString ErrorCannotSetRecipientContainer
		{
			get
			{
				return new LocalizedString("ErrorCannotSetRecipientContainer", "Ex89A541", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002E11 RID: 11793
		// (get) Token: 0x060090E6 RID: 37094 RVA: 0x00250B31 File Offset: 0x0024ED31
		public static LocalizedString SmimeConfigAmbiguous
		{
			get
			{
				return new LocalizedString("SmimeConfigAmbiguous", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060090E7 RID: 37095 RVA: 0x00250B50 File Offset: 0x0024ED50
		public static LocalizedString GetFederationInformationShouldUseInvalidCertificate(string url, string hostname, string certificateHostnames)
		{
			return new LocalizedString("GetFederationInformationShouldUseInvalidCertificate", "ExA36D2D", false, true, Strings.ResourceManager, new object[]
			{
				url,
				hostname,
				certificateHostnames
			});
		}

		// Token: 0x060090E8 RID: 37096 RVA: 0x00250B88 File Offset: 0x0024ED88
		public static LocalizedString ErrorConnectToApplicationTimeout(string app, string server)
		{
			return new LocalizedString("ErrorConnectToApplicationTimeout", "", false, false, Strings.ResourceManager, new object[]
			{
				app,
				server
			});
		}

		// Token: 0x17002E12 RID: 11794
		// (get) Token: 0x060090E9 RID: 37097 RVA: 0x00250BBB File Offset: 0x0024EDBB
		public static LocalizedString CasHealthOwaAuthResponseHeaderMissing
		{
			get
			{
				return new LocalizedString("CasHealthOwaAuthResponseHeaderMissing", "Ex43CD59", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060090EA RID: 37098 RVA: 0x00250BDC File Offset: 0x0024EDDC
		public static LocalizedString ErrorPathIsNotOnFixedDrive(string field)
		{
			return new LocalizedString("ErrorPathIsNotOnFixedDrive", "Ex327B2B", false, true, Strings.ResourceManager, new object[]
			{
				field
			});
		}

		// Token: 0x060090EB RID: 37099 RVA: 0x00250C0C File Offset: 0x0024EE0C
		public static LocalizedString MsiFullPackagePath(string packagePath, string packageFullPath)
		{
			return new LocalizedString("MsiFullPackagePath", "Ex479106", false, true, Strings.ResourceManager, new object[]
			{
				packagePath,
				packageFullPath
			});
		}

		// Token: 0x17002E13 RID: 11795
		// (get) Token: 0x060090EC RID: 37100 RVA: 0x00250C3F File Offset: 0x0024EE3F
		public static LocalizedString ErrorFailedRmsVersionCheck
		{
			get
			{
				return new LocalizedString("ErrorFailedRmsVersionCheck", "Ex14BA8D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060090ED RID: 37101 RVA: 0x00250C60 File Offset: 0x0024EE60
		public static LocalizedString DagMemberPausedFailed(string nodeName, string dagName)
		{
			return new LocalizedString("DagMemberPausedFailed", "ExB11713", false, true, Strings.ResourceManager, new object[]
			{
				nodeName,
				dagName
			});
		}

		// Token: 0x060090EE RID: 37102 RVA: 0x00250C94 File Offset: 0x0024EE94
		public static LocalizedString ErrorFailedToMoveEdbFile(string fromFilePath, string toFilePath)
		{
			return new LocalizedString("ErrorFailedToMoveEdbFile", "ExE9F1BD", false, true, Strings.ResourceManager, new object[]
			{
				fromFilePath,
				toFilePath
			});
		}

		// Token: 0x17002E14 RID: 11796
		// (get) Token: 0x060090EF RID: 37103 RVA: 0x00250CC7 File Offset: 0x0024EEC7
		public static LocalizedString ErrorParametersMandatory
		{
			get
			{
				return new LocalizedString("ErrorParametersMandatory", "ExD05CC6", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060090F0 RID: 37104 RVA: 0x00250CE8 File Offset: 0x0024EEE8
		public static LocalizedString InfoAddGroupToGroup(string group1, string group2)
		{
			return new LocalizedString("InfoAddGroupToGroup", "Ex18EB9D", false, true, Strings.ResourceManager, new object[]
			{
				group1,
				group2
			});
		}

		// Token: 0x17002E15 RID: 11797
		// (get) Token: 0x060090F1 RID: 37105 RVA: 0x00250D1B File Offset: 0x0024EF1B
		public static LocalizedString ServiceHostServiceControlComponentDescription
		{
			get
			{
				return new LocalizedString("ServiceHostServiceControlComponentDescription", "ExA27BD9", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060090F2 RID: 37106 RVA: 0x00250D3C File Offset: 0x0024EF3C
		public static LocalizedString ConfirmationMessageCompareTextMessagingVerificationCode(string Identity)
		{
			return new LocalizedString("ConfirmationMessageCompareTextMessagingVerificationCode", "Ex09A663", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x17002E16 RID: 11798
		// (get) Token: 0x060090F3 RID: 37107 RVA: 0x00250D6B File Offset: 0x0024EF6B
		public static LocalizedString ErrorRefreshMetadataOptionNotAllowed
		{
			get
			{
				return new LocalizedString("ErrorRefreshMetadataOptionNotAllowed", "Ex51F5C3", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060090F4 RID: 37108 RVA: 0x00250D8C File Offset: 0x0024EF8C
		public static LocalizedString ConfirmationMessageNewPartnerApplication(string name)
		{
			return new LocalizedString("ConfirmationMessageNewPartnerApplication", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x060090F5 RID: 37109 RVA: 0x00250DBC File Offset: 0x0024EFBC
		public static LocalizedString ErrorUnexpectedResults(string domain, string length)
		{
			return new LocalizedString("ErrorUnexpectedResults", "Ex3FF0D5", false, true, Strings.ResourceManager, new object[]
			{
				domain,
				length
			});
		}

		// Token: 0x17002E17 RID: 11799
		// (get) Token: 0x060090F6 RID: 37110 RVA: 0x00250DEF File Offset: 0x0024EFEF
		public static LocalizedString ErrorFailedToGetULEnterprise
		{
			get
			{
				return new LocalizedString("ErrorFailedToGetULEnterprise", "Ex8B1773", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060090F7 RID: 37111 RVA: 0x00250E10 File Offset: 0x0024F010
		public static LocalizedString ConfirmationMessageDisableHostedConnectionFilterRule(string identity)
		{
			return new LocalizedString("ConfirmationMessageDisableHostedConnectionFilterRule", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x17002E18 RID: 11800
		// (get) Token: 0x060090F8 RID: 37112 RVA: 0x00250E3F File Offset: 0x0024F03F
		public static LocalizedString InfoTpdFromRmsOnlineChecked
		{
			get
			{
				return new LocalizedString("InfoTpdFromRmsOnlineChecked", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060090F9 RID: 37113 RVA: 0x00250E60 File Offset: 0x0024F060
		public static LocalizedString ConfirmationMessageSetUMMailboxPolicy(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetUMMailboxPolicy", "Ex9CC071", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x060090FA RID: 37114 RVA: 0x00250E90 File Offset: 0x0024F090
		public static LocalizedString FailedToDecryptPrivateKey(Exception e)
		{
			return new LocalizedString("FailedToDecryptPrivateKey", "", false, false, Strings.ResourceManager, new object[]
			{
				e
			});
		}

		// Token: 0x060090FB RID: 37115 RVA: 0x00250EC0 File Offset: 0x0024F0C0
		public static LocalizedString ErrorCannotExportPstFromPublicFolderMailbox(string mailbox)
		{
			return new LocalizedString("ErrorCannotExportPstFromPublicFolderMailbox", "", false, false, Strings.ResourceManager, new object[]
			{
				mailbox
			});
		}

		// Token: 0x060090FC RID: 37116 RVA: 0x00250EF0 File Offset: 0x0024F0F0
		public static LocalizedString ProgressEmailAddressPolicyRollingBackPriority(string id)
		{
			return new LocalizedString("ProgressEmailAddressPolicyRollingBackPriority", "ExE11E89", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x17002E19 RID: 11801
		// (get) Token: 0x060090FD RID: 37117 RVA: 0x00250F1F File Offset: 0x0024F11F
		public static LocalizedString AuthenticationMethodNone
		{
			get
			{
				return new LocalizedString("AuthenticationMethodNone", "ExC1970E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060090FE RID: 37118 RVA: 0x00250F40 File Offset: 0x0024F140
		public static LocalizedString ErrorCannotChangeResourceMailboxToUserMailbox(string id)
		{
			return new LocalizedString("ErrorCannotChangeResourceMailboxToUserMailbox", "Ex85DBB8", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x17002E1A RID: 11802
		// (get) Token: 0x060090FF RID: 37119 RVA: 0x00250F6F File Offset: 0x0024F16F
		public static LocalizedString CasHealthOwaLogonFailed
		{
			get
			{
				return new LocalizedString("CasHealthOwaLogonFailed", "ExEA10BD", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002E1B RID: 11803
		// (get) Token: 0x06009100 RID: 37120 RVA: 0x00250F8D File Offset: 0x0024F18D
		public static LocalizedString DelegateRoleTypeServerAdmin
		{
			get
			{
				return new LocalizedString("DelegateRoleTypeServerAdmin", "ExD6ADE3", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009101 RID: 37121 RVA: 0x00250FAC File Offset: 0x0024F1AC
		public static LocalizedString ConfirmationMessageEnableMailUserArchive(string Identity)
		{
			return new LocalizedString("ConfirmationMessageEnableMailUserArchive", "ExFC892F", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x17002E1C RID: 11804
		// (get) Token: 0x06009102 RID: 37122 RVA: 0x00250FDB File Offset: 0x0024F1DB
		public static LocalizedString SetupProgressCreateMailboxPlan
		{
			get
			{
				return new LocalizedString("SetupProgressCreateMailboxPlan", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002E1D RID: 11805
		// (get) Token: 0x06009103 RID: 37123 RVA: 0x00250FF9 File Offset: 0x0024F1F9
		public static LocalizedString OwaMetabaseGetPropertiesFailure
		{
			get
			{
				return new LocalizedString("OwaMetabaseGetPropertiesFailure", "Ex8F1E18", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009104 RID: 37124 RVA: 0x00251018 File Offset: 0x0024F218
		public static LocalizedString CannotLicenseRemoteServerWith32BitAdmin(string serverName)
		{
			return new LocalizedString("CannotLicenseRemoteServerWith32BitAdmin", "ExA1675F", false, true, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		// Token: 0x06009105 RID: 37125 RVA: 0x00251048 File Offset: 0x0024F248
		public static LocalizedString ConfirmationMessageRemoveIPBlockListProvider(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveIPBlockListProvider", "ExE5C38B", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x06009106 RID: 37126 RVA: 0x00251078 File Offset: 0x0024F278
		public static LocalizedString CertificateExpired(string thumbprint)
		{
			return new LocalizedString("CertificateExpired", "Ex3F4B0A", false, true, Strings.ResourceManager, new object[]
			{
				thumbprint
			});
		}

		// Token: 0x06009107 RID: 37127 RVA: 0x002510A8 File Offset: 0x0024F2A8
		public static LocalizedString ConfirmationMessageDisableCallAnsweringRule(string identity)
		{
			return new LocalizedString("ConfirmationMessageDisableCallAnsweringRule", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x06009108 RID: 37128 RVA: 0x002510D8 File Offset: 0x0024F2D8
		public static LocalizedString ErrorCannotConvertBuiltInGroup(string group)
		{
			return new LocalizedString("ErrorCannotConvertBuiltInGroup", "Ex048DFD", false, true, Strings.ResourceManager, new object[]
			{
				group
			});
		}

		// Token: 0x06009109 RID: 37129 RVA: 0x00251108 File Offset: 0x0024F308
		public static LocalizedString CannotModifyRuleDueToVersion(string name)
		{
			return new LocalizedString("CannotModifyRuleDueToVersion", "ExA1D25E", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x0600910A RID: 37130 RVA: 0x00251138 File Offset: 0x0024F338
		public static LocalizedString ConfirmationMessageNewSharingPolicy(string Name, string Domains)
		{
			return new LocalizedString("ConfirmationMessageNewSharingPolicy", "Ex05DBB6", false, true, Strings.ResourceManager, new object[]
			{
				Name,
				Domains
			});
		}

		// Token: 0x0600910B RID: 37131 RVA: 0x0025116C File Offset: 0x0024F36C
		public static LocalizedString TenantCannotChangeIsDataMigrationRequested(bool previous, bool now)
		{
			return new LocalizedString("TenantCannotChangeIsDataMigrationRequested", "ExF2DB77", false, true, Strings.ResourceManager, new object[]
			{
				previous,
				now
			});
		}

		// Token: 0x0600910C RID: 37132 RVA: 0x002511AC File Offset: 0x0024F3AC
		public static LocalizedString ConfirmOverwriteInternalTransportCertificate(string oldthumb, DateTime oldexpiry, string newthumb, DateTime newexpiry)
		{
			return new LocalizedString("ConfirmOverwriteInternalTransportCertificate", "Ex2C85A0", false, true, Strings.ResourceManager, new object[]
			{
				oldthumb,
				oldexpiry,
				newthumb,
				newexpiry
			});
		}

		// Token: 0x17002E1E RID: 11806
		// (get) Token: 0x0600910D RID: 37133 RVA: 0x002511F1 File Offset: 0x0024F3F1
		public static LocalizedString ErrorDatabaseOffline
		{
			get
			{
				return new LocalizedString("ErrorDatabaseOffline", "Ex51C10D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002E1F RID: 11807
		// (get) Token: 0x0600910E RID: 37134 RVA: 0x0025120F File Offset: 0x0024F40F
		public static LocalizedString SetupProgressCreatingNewMailboxDatabase
		{
			get
			{
				return new LocalizedString("SetupProgressCreatingNewMailboxDatabase", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600910F RID: 37135 RVA: 0x00251230 File Offset: 0x0024F430
		public static LocalizedString LiveDomainServicesRequestFailed(string exception)
		{
			return new LocalizedString("LiveDomainServicesRequestFailed", "Ex296903", false, true, Strings.ResourceManager, new object[]
			{
				exception
			});
		}

		// Token: 0x17002E20 RID: 11808
		// (get) Token: 0x06009110 RID: 37136 RVA: 0x0025125F File Offset: 0x0024F45F
		public static LocalizedString MailboxPrereqCheck
		{
			get
			{
				return new LocalizedString("MailboxPrereqCheck", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009111 RID: 37137 RVA: 0x00251280 File Offset: 0x0024F480
		public static LocalizedString DuplicateCapabilityMapping(string line, string file, string position)
		{
			return new LocalizedString("DuplicateCapabilityMapping", "Ex937C26", false, true, Strings.ResourceManager, new object[]
			{
				line,
				file,
				position
			});
		}

		// Token: 0x17002E21 RID: 11809
		// (get) Token: 0x06009112 RID: 37138 RVA: 0x002512B7 File Offset: 0x0024F4B7
		public static LocalizedString OnPremisesConfigurationObjectNotFound
		{
			get
			{
				return new LocalizedString("OnPremisesConfigurationObjectNotFound", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009113 RID: 37139 RVA: 0x002512D8 File Offset: 0x0024F4D8
		public static LocalizedString JournalingParameterErrorGccTenantNotFound(string tenant)
		{
			return new LocalizedString("JournalingParameterErrorGccTenantNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				tenant
			});
		}

		// Token: 0x17002E22 RID: 11810
		// (get) Token: 0x06009114 RID: 37140 RVA: 0x00251307 File Offset: 0x0024F507
		public static LocalizedString RoleAuthor
		{
			get
			{
				return new LocalizedString("RoleAuthor", "ExF40A25", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009115 RID: 37141 RVA: 0x00251328 File Offset: 0x0024F528
		public static LocalizedString FailedMoveHistoryEntry(string timestamp, string dbName, string errorString)
		{
			return new LocalizedString("FailedMoveHistoryEntry", "Ex387980", false, true, Strings.ResourceManager, new object[]
			{
				timestamp,
				dbName,
				errorString
			});
		}

		// Token: 0x17002E23 RID: 11811
		// (get) Token: 0x06009116 RID: 37142 RVA: 0x0025135F File Offset: 0x0024F55F
		public static LocalizedString PrepareDomainDescription
		{
			get
			{
				return new LocalizedString("PrepareDomainDescription", "ExC30DB3", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009117 RID: 37143 RVA: 0x00251380 File Offset: 0x0024F580
		public static LocalizedString DagUnableToFindCnoError(string cnoName)
		{
			return new LocalizedString("DagUnableToFindCnoError", "", false, false, Strings.ResourceManager, new object[]
			{
				cnoName
			});
		}

		// Token: 0x06009118 RID: 37144 RVA: 0x002513B0 File Offset: 0x0024F5B0
		public static LocalizedString CantFindCertByThumbprint(string SHA1Thumbprint)
		{
			return new LocalizedString("CantFindCertByThumbprint", "Ex68F572", false, true, Strings.ResourceManager, new object[]
			{
				SHA1Thumbprint
			});
		}

		// Token: 0x17002E24 RID: 11812
		// (get) Token: 0x06009119 RID: 37145 RVA: 0x002513DF File Offset: 0x0024F5DF
		public static LocalizedString OwaNameParameterIgnored
		{
			get
			{
				return new LocalizedString("OwaNameParameterIgnored", "Ex658DBD", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002E25 RID: 11813
		// (get) Token: 0x0600911A RID: 37146 RVA: 0x002513FD File Offset: 0x0024F5FD
		public static LocalizedString ErrorInvalidPostMasterAddress
		{
			get
			{
				return new LocalizedString("ErrorInvalidPostMasterAddress", "Ex29F25A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002E26 RID: 11814
		// (get) Token: 0x0600911B RID: 37147 RVA: 0x0025141B File Offset: 0x0024F61B
		public static LocalizedString SendConnectorDashdashSmarthostNotUnique
		{
			get
			{
				return new LocalizedString("SendConnectorDashdashSmarthostNotUnique", "ExFF7D42", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002E27 RID: 11815
		// (get) Token: 0x0600911C RID: 37148 RVA: 0x00251439 File Offset: 0x0024F639
		public static LocalizedString InvalidDlpPolicyParameter
		{
			get
			{
				return new LocalizedString("InvalidDlpPolicyParameter", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600911D RID: 37149 RVA: 0x00251458 File Offset: 0x0024F658
		public static LocalizedString ErrorAccessingRegistryRaisesException(string hostName, string message)
		{
			return new LocalizedString("ErrorAccessingRegistryRaisesException", "Ex384DA7", false, true, Strings.ResourceManager, new object[]
			{
				hostName,
				message
			});
		}

		// Token: 0x0600911E RID: 37150 RVA: 0x0025148C File Offset: 0x0024F68C
		public static LocalizedString ReportMovedMailboxUpdated(string domainController)
		{
			return new LocalizedString("ReportMovedMailboxUpdated", "Ex412D19", false, true, Strings.ResourceManager, new object[]
			{
				domainController
			});
		}

		// Token: 0x0600911F RID: 37151 RVA: 0x002514BC File Offset: 0x0024F6BC
		public static LocalizedString InvalidTrafficType(string trafficType)
		{
			return new LocalizedString("InvalidTrafficType", "", false, false, Strings.ResourceManager, new object[]
			{
				trafficType
			});
		}

		// Token: 0x17002E28 RID: 11816
		// (get) Token: 0x06009120 RID: 37152 RVA: 0x002514EB File Offset: 0x0024F6EB
		public static LocalizedString UninstallBridgeheadRoleDescription
		{
			get
			{
				return new LocalizedString("UninstallBridgeheadRoleDescription", "ExA725B6", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002E29 RID: 11817
		// (get) Token: 0x06009121 RID: 37153 RVA: 0x00251509 File Offset: 0x0024F709
		public static LocalizedString OldVersionMailboxSkipped
		{
			get
			{
				return new LocalizedString("OldVersionMailboxSkipped", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002E2A RID: 11818
		// (get) Token: 0x06009122 RID: 37154 RVA: 0x00251527 File Offset: 0x0024F727
		public static LocalizedString CannotRemoveUMCertificate
		{
			get
			{
				return new LocalizedString("CannotRemoveUMCertificate", "ExB88C8D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009123 RID: 37155 RVA: 0x00251548 File Offset: 0x0024F748
		public static LocalizedString ErrorCannotRestoreFromConnectedMailbox(string identity)
		{
			return new LocalizedString("ErrorCannotRestoreFromConnectedMailbox", "Ex2D07AD", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x17002E2B RID: 11819
		// (get) Token: 0x06009124 RID: 37156 RVA: 0x00251577 File Offset: 0x0024F777
		public static LocalizedString SetupProcessCreateDefaultDataClassificationConfig
		{
			get
			{
				return new LocalizedString("SetupProcessCreateDefaultDataClassificationConfig", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009125 RID: 37157 RVA: 0x00251598 File Offset: 0x0024F798
		public static LocalizedString ErrorFailedToAddCrossDomainGroupMember(string member, string group, string rootdomserver, string localdomserver, string error)
		{
			return new LocalizedString("ErrorFailedToAddCrossDomainGroupMember", "ExB105A6", false, true, Strings.ResourceManager, new object[]
			{
				member,
				group,
				rootdomserver,
				localdomserver,
				error
			});
		}

		// Token: 0x06009126 RID: 37158 RVA: 0x002515D8 File Offset: 0x0024F7D8
		public static LocalizedString ErrorUserNotBeingMoved(string mailbox)
		{
			return new LocalizedString("ErrorUserNotBeingMoved", "ExDA598F", false, true, Strings.ResourceManager, new object[]
			{
				mailbox
			});
		}

		// Token: 0x17002E2C RID: 11820
		// (get) Token: 0x06009127 RID: 37159 RVA: 0x00251607 File Offset: 0x0024F807
		public static LocalizedString PhoneNumberInvalidLength
		{
			get
			{
				return new LocalizedString("PhoneNumberInvalidLength", "Ex1B4651", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002E2D RID: 11821
		// (get) Token: 0x06009128 RID: 37160 RVA: 0x00251625 File Offset: 0x0024F825
		public static LocalizedString ErrorPathTooLong
		{
			get
			{
				return new LocalizedString("ErrorPathTooLong", "Ex8E6862", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009129 RID: 37161 RVA: 0x00251644 File Offset: 0x0024F844
		public static LocalizedString NoExecutableForService(string serviceName)
		{
			return new LocalizedString("NoExecutableForService", "ExED0906", false, true, Strings.ResourceManager, new object[]
			{
				serviceName
			});
		}

		// Token: 0x0600912A RID: 37162 RVA: 0x00251674 File Offset: 0x0024F874
		public static LocalizedString ErrorInvalidDomainInSmtpAddressTemplate(SmtpProxyAddressTemplate template)
		{
			return new LocalizedString("ErrorInvalidDomainInSmtpAddressTemplate", "Ex322581", false, true, Strings.ResourceManager, new object[]
			{
				template
			});
		}

		// Token: 0x0600912B RID: 37163 RVA: 0x002516A4 File Offset: 0x0024F8A4
		public static LocalizedString PatchFileFound(string filename)
		{
			return new LocalizedString("PatchFileFound", "Ex1AE950", false, true, Strings.ResourceManager, new object[]
			{
				filename
			});
		}

		// Token: 0x0600912C RID: 37164 RVA: 0x002516D4 File Offset: 0x0024F8D4
		public static LocalizedString ErrorRemoteAccountPolicyNotUnique(string idStringValue)
		{
			return new LocalizedString("ErrorRemoteAccountPolicyNotUnique", "ExB7C634", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		// Token: 0x0600912D RID: 37165 RVA: 0x00251704 File Offset: 0x0024F904
		public static LocalizedString ConfirmationMessageCompleteMigrationBatchWithFailedItems(string batchName, int pendingItemCount)
		{
			return new LocalizedString("ConfirmationMessageCompleteMigrationBatchWithFailedItems", "", false, false, Strings.ResourceManager, new object[]
			{
				batchName,
				pendingItemCount
			});
		}

		// Token: 0x17002E2E RID: 11822
		// (get) Token: 0x0600912E RID: 37166 RVA: 0x0025173C File Offset: 0x0024F93C
		public static LocalizedString CertificateStatusRevocationCheckFailure
		{
			get
			{
				return new LocalizedString("CertificateStatusRevocationCheckFailure", "ExC70D46", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002E2F RID: 11823
		// (get) Token: 0x0600912F RID: 37167 RVA: 0x0025175A File Offset: 0x0024F95A
		public static LocalizedString MoveMailboxSourceCleanupTypeNone
		{
			get
			{
				return new LocalizedString("MoveMailboxSourceCleanupTypeNone", "ExED63E6", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009130 RID: 37168 RVA: 0x00251778 File Offset: 0x0024F978
		public static LocalizedString ErrorMemberNameInUse(string memberName)
		{
			return new LocalizedString("ErrorMemberNameInUse", "Ex679957", false, true, Strings.ResourceManager, new object[]
			{
				memberName
			});
		}

		// Token: 0x17002E30 RID: 11824
		// (get) Token: 0x06009131 RID: 37169 RVA: 0x002517A7 File Offset: 0x0024F9A7
		public static LocalizedString ConfirmationMessageTestFederationTrustCertificate
		{
			get
			{
				return new LocalizedString("ConfirmationMessageTestFederationTrustCertificate", "ExEB3A9B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009132 RID: 37170 RVA: 0x002517C8 File Offset: 0x0024F9C8
		public static LocalizedString InfoProcessAction(string obj)
		{
			return new LocalizedString("InfoProcessAction", "Ex0D66D7", false, true, Strings.ResourceManager, new object[]
			{
				obj
			});
		}

		// Token: 0x17002E31 RID: 11825
		// (get) Token: 0x06009133 RID: 37171 RVA: 0x002517F7 File Offset: 0x0024F9F7
		public static LocalizedString ConfirmationMessageRemoveMicrosoftExchangeRecipient
		{
			get
			{
				return new LocalizedString("ConfirmationMessageRemoveMicrosoftExchangeRecipient", "Ex552D36", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009134 RID: 37172 RVA: 0x00251818 File Offset: 0x0024FA18
		public static LocalizedString ErrorExistingAuthServerWithSameRealm(string authServer, string realm)
		{
			return new LocalizedString("ErrorExistingAuthServerWithSameRealm", "", false, false, Strings.ResourceManager, new object[]
			{
				authServer,
				realm
			});
		}

		// Token: 0x06009135 RID: 37173 RVA: 0x0025184C File Offset: 0x0024FA4C
		public static LocalizedString CasHealthNoHttpResponseRecieved(string domain, string userName)
		{
			return new LocalizedString("CasHealthNoHttpResponseRecieved", "Ex3DED7B", false, true, Strings.ResourceManager, new object[]
			{
				domain,
				userName
			});
		}

		// Token: 0x06009136 RID: 37174 RVA: 0x00251880 File Offset: 0x0024FA80
		public static LocalizedString ErrorAddExistentParameters(string role, string cmdlet, string parameters)
		{
			return new LocalizedString("ErrorAddExistentParameters", "ExA63909", false, true, Strings.ResourceManager, new object[]
			{
				role,
				cmdlet,
				parameters
			});
		}

		// Token: 0x17002E32 RID: 11826
		// (get) Token: 0x06009137 RID: 37175 RVA: 0x002518B7 File Offset: 0x0024FAB7
		public static LocalizedString ScenarioAutoDiscoverSoapProvider
		{
			get
			{
				return new LocalizedString("ScenarioAutoDiscoverSoapProvider", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009138 RID: 37176 RVA: 0x002518D8 File Offset: 0x0024FAD8
		public static LocalizedString DatabaseNotFoundException(string p1)
		{
			return new LocalizedString("DatabaseNotFoundException", "ExB0815E", false, true, Strings.ResourceManager, new object[]
			{
				p1
			});
		}

		// Token: 0x17002E33 RID: 11827
		// (get) Token: 0x06009139 RID: 37177 RVA: 0x00251907 File Offset: 0x0024FB07
		public static LocalizedString CouldNotFindEWSStandardAuthBinding
		{
			get
			{
				return new LocalizedString("CouldNotFindEWSStandardAuthBinding", "ExD4582F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002E34 RID: 11828
		// (get) Token: 0x0600913A RID: 37178 RVA: 0x00251925 File Offset: 0x0024FB25
		public static LocalizedString CasHealthPortnumber
		{
			get
			{
				return new LocalizedString("CasHealthPortnumber", "ExFB21A4", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600913B RID: 37179 RVA: 0x00251944 File Offset: 0x0024FB44
		public static LocalizedString WarningFswFailed(string identity)
		{
			return new LocalizedString("WarningFswFailed", "ExF18752", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x0600913C RID: 37180 RVA: 0x00251974 File Offset: 0x0024FB74
		public static LocalizedString LookupAccountNameFailedException(string account, long err)
		{
			return new LocalizedString("LookupAccountNameFailedException", "ExDB6283", false, true, Strings.ResourceManager, new object[]
			{
				account,
				err
			});
		}

		// Token: 0x0600913D RID: 37181 RVA: 0x002519AC File Offset: 0x0024FBAC
		public static LocalizedString RecipientNotValidException(string recipient)
		{
			return new LocalizedString("RecipientNotValidException", "ExA805D8", false, true, Strings.ResourceManager, new object[]
			{
				recipient
			});
		}

		// Token: 0x17002E35 RID: 11829
		// (get) Token: 0x0600913E RID: 37182 RVA: 0x002519DB File Offset: 0x0024FBDB
		public static LocalizedString ErrorElcPolicyToPreE12
		{
			get
			{
				return new LocalizedString("ErrorElcPolicyToPreE12", "Ex63BDA7", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600913F RID: 37183 RVA: 0x002519FC File Offset: 0x0024FBFC
		public static LocalizedString FoundComponents(int count)
		{
			return new LocalizedString("FoundComponents", "ExB86C50", false, true, Strings.ResourceManager, new object[]
			{
				count
			});
		}

		// Token: 0x17002E36 RID: 11830
		// (get) Token: 0x06009140 RID: 37184 RVA: 0x00251A30 File Offset: 0x0024FC30
		public static LocalizedString CasHealthEasScenarioFolderSync
		{
			get
			{
				return new LocalizedString("CasHealthEasScenarioFolderSync", "Ex8F741D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002E37 RID: 11831
		// (get) Token: 0x06009141 RID: 37185 RVA: 0x00251A4E File Offset: 0x0024FC4E
		public static LocalizedString ErrorMoveOabBetweenTwoTiServers
		{
			get
			{
				return new LocalizedString("ErrorMoveOabBetweenTwoTiServers", "Ex904793", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002E38 RID: 11832
		// (get) Token: 0x06009142 RID: 37186 RVA: 0x00251A6C File Offset: 0x0024FC6C
		public static LocalizedString DiscoveryManagementSecurityGroupNotFound
		{
			get
			{
				return new LocalizedString("DiscoveryManagementSecurityGroupNotFound", "Ex063440", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009143 RID: 37187 RVA: 0x00251A8C File Offset: 0x0024FC8C
		public static LocalizedString RemoveADServerMetadataDomainControllerNotFound(string name)
		{
			return new LocalizedString("RemoveADServerMetadataDomainControllerNotFound", "Ex50F6AF", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x06009144 RID: 37188 RVA: 0x00251ABC File Offset: 0x0024FCBC
		public static LocalizedString ErrorLinkedAccountInTheCurrentForest(string forest)
		{
			return new LocalizedString("ErrorLinkedAccountInTheCurrentForest", "ExC227F6", false, true, Strings.ResourceManager, new object[]
			{
				forest
			});
		}

		// Token: 0x17002E39 RID: 11833
		// (get) Token: 0x06009145 RID: 37189 RVA: 0x00251AEB File Offset: 0x0024FCEB
		public static LocalizedString ReleaseAgentBinaryReference
		{
			get
			{
				return new LocalizedString("ReleaseAgentBinaryReference", "ExD27C8B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009146 RID: 37190 RVA: 0x00251B0C File Offset: 0x0024FD0C
		public static LocalizedString ErrorServerNotFound(object idStringValue)
		{
			return new LocalizedString("ErrorServerNotFound", "Ex740290", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		// Token: 0x06009147 RID: 37191 RVA: 0x00251B3C File Offset: 0x0024FD3C
		public static LocalizedString ErrorCannotDeletePrecannedRole(string id)
		{
			return new LocalizedString("ErrorCannotDeletePrecannedRole", "Ex540C34", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x17002E3A RID: 11834
		// (get) Token: 0x06009148 RID: 37192 RVA: 0x00251B6B File Offset: 0x0024FD6B
		public static LocalizedString SetupComponentConfiguringMSARPSService
		{
			get
			{
				return new LocalizedString("SetupComponentConfiguringMSARPSService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002E3B RID: 11835
		// (get) Token: 0x06009149 RID: 37193 RVA: 0x00251B89 File Offset: 0x0024FD89
		public static LocalizedString DisasterRecoveryBridgeheadRoleDescription
		{
			get
			{
				return new LocalizedString("DisasterRecoveryBridgeheadRoleDescription", "Ex81372A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600914A RID: 37194 RVA: 0x00251BA8 File Offset: 0x0024FDA8
		public static LocalizedString ConfirmationMessageRemoveAvailabilityConfig(string name)
		{
			return new LocalizedString("ConfirmationMessageRemoveAvailabilityConfig", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x17002E3C RID: 11836
		// (get) Token: 0x0600914B RID: 37195 RVA: 0x00251BD7 File Offset: 0x0024FDD7
		public static LocalizedString SetupComponentConfiguringRpcProxy
		{
			get
			{
				return new LocalizedString("SetupComponentConfiguringRpcProxy", "ExF4892D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600914C RID: 37196 RVA: 0x00251BF8 File Offset: 0x0024FDF8
		public static LocalizedString RemovingFile(string fileName)
		{
			return new LocalizedString("RemovingFile", "Ex90C399", false, true, Strings.ResourceManager, new object[]
			{
				fileName
			});
		}

		// Token: 0x17002E3D RID: 11837
		// (get) Token: 0x0600914D RID: 37197 RVA: 0x00251C27 File Offset: 0x0024FE27
		public static LocalizedString VerboseFixingDynamicDistributionGroupFilterMetadata
		{
			get
			{
				return new LocalizedString("VerboseFixingDynamicDistributionGroupFilterMetadata", "ExCBC2CF", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600914E RID: 37198 RVA: 0x00251C48 File Offset: 0x0024FE48
		public static LocalizedString NeedRemoveDatabaseFileManually(string databaseName, string edbPath)
		{
			return new LocalizedString("NeedRemoveDatabaseFileManually", "Ex78BE59", false, true, Strings.ResourceManager, new object[]
			{
				databaseName,
				edbPath
			});
		}

		// Token: 0x17002E3E RID: 11838
		// (get) Token: 0x0600914F RID: 37199 RVA: 0x00251C7B File Offset: 0x0024FE7B
		public static LocalizedString SetupProgressEnableWMIOutbound
		{
			get
			{
				return new LocalizedString("SetupProgressEnableWMIOutbound", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002E3F RID: 11839
		// (get) Token: 0x06009150 RID: 37200 RVA: 0x00251C99 File Offset: 0x0024FE99
		public static LocalizedString EmptySearchQuery
		{
			get
			{
				return new LocalizedString("EmptySearchQuery", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002E40 RID: 11840
		// (get) Token: 0x06009151 RID: 37201 RVA: 0x00251CB7 File Offset: 0x0024FEB7
		public static LocalizedString CasHealthOwaReturnedErrorPage
		{
			get
			{
				return new LocalizedString("CasHealthOwaReturnedErrorPage", "Ex316685", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009152 RID: 37202 RVA: 0x00251CD8 File Offset: 0x0024FED8
		public static LocalizedString DiscoveringDomain(string domain)
		{
			return new LocalizedString("DiscoveringDomain", "Ex407C44", false, true, Strings.ResourceManager, new object[]
			{
				domain
			});
		}

		// Token: 0x17002E41 RID: 11841
		// (get) Token: 0x06009153 RID: 37203 RVA: 0x00251D07 File Offset: 0x0024FF07
		public static LocalizedString SpecifiedOUNotUnique
		{
			get
			{
				return new LocalizedString("SpecifiedOUNotUnique", "Ex134177", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009154 RID: 37204 RVA: 0x00251D28 File Offset: 0x0024FF28
		public static LocalizedString ConfirmationMessageUpdateDatabaseCopyServerBegin(string serverName)
		{
			return new LocalizedString("ConfirmationMessageUpdateDatabaseCopyServerBegin", "", false, false, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		// Token: 0x17002E42 RID: 11842
		// (get) Token: 0x06009155 RID: 37205 RVA: 0x00251D57 File Offset: 0x0024FF57
		public static LocalizedString ErrorNoDefaultMailTipTranslationSpecified
		{
			get
			{
				return new LocalizedString("ErrorNoDefaultMailTipTranslationSpecified", "ExC26EDC", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002E43 RID: 11843
		// (get) Token: 0x06009156 RID: 37206 RVA: 0x00251D75 File Offset: 0x0024FF75
		public static LocalizedString SetupProgressTeamMailboxCountQuota
		{
			get
			{
				return new LocalizedString("SetupProgressTeamMailboxCountQuota", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009157 RID: 37207 RVA: 0x00251D94 File Offset: 0x0024FF94
		public static LocalizedString GlobalLocatorServiceFailed(string error)
		{
			return new LocalizedString("GlobalLocatorServiceFailed", "", false, false, Strings.ResourceManager, new object[]
			{
				error
			});
		}

		// Token: 0x06009158 RID: 37208 RVA: 0x00251DC4 File Offset: 0x0024FFC4
		public static LocalizedString DlpPolicyDuplicateLocalizedString(string elementName, string elementValue)
		{
			return new LocalizedString("DlpPolicyDuplicateLocalizedString", "", false, false, Strings.ResourceManager, new object[]
			{
				elementName,
				elementValue
			});
		}

		// Token: 0x17002E44 RID: 11844
		// (get) Token: 0x06009159 RID: 37209 RVA: 0x00251DF7 File Offset: 0x0024FFF7
		public static LocalizedString ErrorPartnerApplicationRealmNotFoundInAuthServer
		{
			get
			{
				return new LocalizedString("ErrorPartnerApplicationRealmNotFoundInAuthServer", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600915A RID: 37210 RVA: 0x00251E18 File Offset: 0x00250018
		public static LocalizedString ErrorRetentionPolicyNotFound(string idStringValue)
		{
			return new LocalizedString("ErrorRetentionPolicyNotFound", "ExB6A2E4", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		// Token: 0x0600915B RID: 37211 RVA: 0x00251E48 File Offset: 0x00250048
		public static LocalizedString PerfCounterCategoryDefinition(string categoryName)
		{
			return new LocalizedString("PerfCounterCategoryDefinition", "Ex250D8E", false, true, Strings.ResourceManager, new object[]
			{
				categoryName
			});
		}

		// Token: 0x0600915C RID: 37212 RVA: 0x00251E78 File Offset: 0x00250078
		public static LocalizedString MaSGroupNotFoundException(Guid guid)
		{
			return new LocalizedString("MaSGroupNotFoundException", "", false, false, Strings.ResourceManager, new object[]
			{
				guid
			});
		}

		// Token: 0x0600915D RID: 37213 RVA: 0x00251EAC File Offset: 0x002500AC
		public static LocalizedString ConfirmationMessageSetFederationTrust3(string Identity, string metadataUrl)
		{
			return new LocalizedString("ConfirmationMessageSetFederationTrust3", "Ex187943", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				metadataUrl
			});
		}

		// Token: 0x0600915E RID: 37214 RVA: 0x00251EE0 File Offset: 0x002500E0
		public static LocalizedString ConfirmationMessageNewEmailAddressPolicySMTPTemplateWithPrecannedFilter(string Name, string IncludedRecipients, string EnabledPrimarySMTPAddressTemplate)
		{
			return new LocalizedString("ConfirmationMessageNewEmailAddressPolicySMTPTemplateWithPrecannedFilter", "ExA6B678", false, true, Strings.ResourceManager, new object[]
			{
				Name,
				IncludedRecipients,
				EnabledPrimarySMTPAddressTemplate
			});
		}

		// Token: 0x0600915F RID: 37215 RVA: 0x00251F18 File Offset: 0x00250118
		public static LocalizedString ServiceInstanceNotMatchMessage(string objectId, string requestServiceInstance, string objectServiceInstance)
		{
			return new LocalizedString("ServiceInstanceNotMatchMessage", "", false, false, Strings.ResourceManager, new object[]
			{
				objectId,
				requestServiceInstance,
				objectServiceInstance
			});
		}

		// Token: 0x06009160 RID: 37216 RVA: 0x00251F50 File Offset: 0x00250150
		public static LocalizedString ConfirmationMessageEnableRpcHttpInternalOnly(string WebSiteName, string Server, string InternalHostname, string InternalClientAuthenticationMethod, string IISAuthenticationMethods)
		{
			return new LocalizedString("ConfirmationMessageEnableRpcHttpInternalOnly", "", false, false, Strings.ResourceManager, new object[]
			{
				WebSiteName,
				Server,
				InternalHostname,
				InternalClientAuthenticationMethod,
				IISAuthenticationMethods
			});
		}

		// Token: 0x06009161 RID: 37217 RVA: 0x00251F90 File Offset: 0x00250190
		public static LocalizedString UnableToGeneratedWatsonReportForHungService(string serviceName, string exception)
		{
			return new LocalizedString("UnableToGeneratedWatsonReportForHungService", "Ex34D500", false, true, Strings.ResourceManager, new object[]
			{
				serviceName,
				exception
			});
		}

		// Token: 0x06009162 RID: 37218 RVA: 0x00251FC4 File Offset: 0x002501C4
		public static LocalizedString ErrorOabVDirAlreadyAssigned(string oab, string oabVdir)
		{
			return new LocalizedString("ErrorOabVDirAlreadyAssigned", "Ex177667", false, true, Strings.ResourceManager, new object[]
			{
				oab,
				oabVdir
			});
		}

		// Token: 0x06009163 RID: 37219 RVA: 0x00251FF8 File Offset: 0x002501F8
		public static LocalizedString WarningRetentionPolicyIdChange(string policyName)
		{
			return new LocalizedString("WarningRetentionPolicyIdChange", "Ex5351D7", false, true, Strings.ResourceManager, new object[]
			{
				policyName
			});
		}

		// Token: 0x06009164 RID: 37220 RVA: 0x00252028 File Offset: 0x00250228
		public static LocalizedString ErrorUMInvalidE164OrExtensionAddressFormat(string s)
		{
			return new LocalizedString("ErrorUMInvalidE164OrExtensionAddressFormat", "Ex902757", false, true, Strings.ResourceManager, new object[]
			{
				s
			});
		}

		// Token: 0x06009165 RID: 37221 RVA: 0x00252058 File Offset: 0x00250258
		public static LocalizedString ErrorCannotSetTransportServerPropertyOnSubscribedEdge(string propertyName)
		{
			return new LocalizedString("ErrorCannotSetTransportServerPropertyOnSubscribedEdge", "Ex694AC1", false, true, Strings.ResourceManager, new object[]
			{
				propertyName
			});
		}

		// Token: 0x17002E45 RID: 11845
		// (get) Token: 0x06009166 RID: 37222 RVA: 0x00252087 File Offset: 0x00250287
		public static LocalizedString ExchangeTrustedSubsystemDescription
		{
			get
			{
				return new LocalizedString("ExchangeTrustedSubsystemDescription", "Ex84BB35", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009167 RID: 37223 RVA: 0x002520A8 File Offset: 0x002502A8
		public static LocalizedString MigrationMaxConcurrentIncrementalSyncsVerificationFailed(Unlimited<int> value, Unlimited<int> maxValue)
		{
			return new LocalizedString("MigrationMaxConcurrentIncrementalSyncsVerificationFailed", "", false, false, Strings.ResourceManager, new object[]
			{
				value,
				maxValue
			});
		}

		// Token: 0x17002E46 RID: 11846
		// (get) Token: 0x06009168 RID: 37224 RVA: 0x002520E5 File Offset: 0x002502E5
		public static LocalizedString InstallingLanguages
		{
			get
			{
				return new LocalizedString("InstallingLanguages", "Ex0CECC4", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009169 RID: 37225 RVA: 0x00252104 File Offset: 0x00250304
		public static LocalizedString SmartHostsIPValidationFailedId(string ipAddress)
		{
			return new LocalizedString("SmartHostsIPValidationFailedId", "", false, false, Strings.ResourceManager, new object[]
			{
				ipAddress
			});
		}

		// Token: 0x0600916A RID: 37226 RVA: 0x00252134 File Offset: 0x00250334
		public static LocalizedString CasHealthCalendarVDirWarning(string vdir, string server)
		{
			return new LocalizedString("CasHealthCalendarVDirWarning", "Ex47832B", false, true, Strings.ResourceManager, new object[]
			{
				vdir,
				server
			});
		}

		// Token: 0x0600916B RID: 37227 RVA: 0x00252168 File Offset: 0x00250368
		public static LocalizedString ConstraintError(DataMoveReplicationConstraintParameter desired, string database)
		{
			return new LocalizedString("ConstraintError", "", false, false, Strings.ResourceManager, new object[]
			{
				desired,
				database
			});
		}

		// Token: 0x0600916C RID: 37228 RVA: 0x002521A0 File Offset: 0x002503A0
		public static LocalizedString VerboseMailboxNotExistInStore(string identity)
		{
			return new LocalizedString("VerboseMailboxNotExistInStore", "Ex559AE9", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x17002E47 RID: 11847
		// (get) Token: 0x0600916D RID: 37229 RVA: 0x002521CF File Offset: 0x002503CF
		public static LocalizedString CannotOnlySpecifyCredential
		{
			get
			{
				return new LocalizedString("CannotOnlySpecifyCredential", "ExDBE898", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600916E RID: 37230 RVA: 0x002521F0 File Offset: 0x002503F0
		public static LocalizedString CannotAssignCertificateToUM(string thumbprint)
		{
			return new LocalizedString("CannotAssignCertificateToUM", "Ex54C2B9", false, true, Strings.ResourceManager, new object[]
			{
				thumbprint
			});
		}

		// Token: 0x17002E48 RID: 11848
		// (get) Token: 0x0600916F RID: 37231 RVA: 0x0025221F File Offset: 0x0025041F
		public static LocalizedString FrontendTransportPrereqCheck
		{
			get
			{
				return new LocalizedString("FrontendTransportPrereqCheck", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002E49 RID: 11849
		// (get) Token: 0x06009170 RID: 37232 RVA: 0x0025223D File Offset: 0x0025043D
		public static LocalizedString SettingMoveRequest
		{
			get
			{
				return new LocalizedString("SettingMoveRequest", "Ex650678", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009171 RID: 37233 RVA: 0x0025225C File Offset: 0x0025045C
		public static LocalizedString ErrorMissingDependentParameter(string missingParamName, string specifiedParamName)
		{
			return new LocalizedString("ErrorMissingDependentParameter", "Ex769B53", false, true, Strings.ResourceManager, new object[]
			{
				missingParamName,
				specifiedParamName
			});
		}

		// Token: 0x06009172 RID: 37234 RVA: 0x00252290 File Offset: 0x00250490
		public static LocalizedString ConfirmationMessageSetPublicFolderDatabase(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetPublicFolderDatabase", "ExD65F49", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x17002E4A RID: 11850
		// (get) Token: 0x06009173 RID: 37235 RVA: 0x002522BF File Offset: 0x002504BF
		public static LocalizedString TenantGuidNotIdentified
		{
			get
			{
				return new LocalizedString("TenantGuidNotIdentified", "Ex4A6868", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009174 RID: 37236 RVA: 0x002522E0 File Offset: 0x002504E0
		public static LocalizedString DivergenceAlreadyExists(string objectId)
		{
			return new LocalizedString("DivergenceAlreadyExists", "", false, false, Strings.ResourceManager, new object[]
			{
				objectId
			});
		}

		// Token: 0x06009175 RID: 37237 RVA: 0x00252310 File Offset: 0x00250510
		public static LocalizedString ConfirmationMessageEnableConversations(string Identity)
		{
			return new LocalizedString("ConfirmationMessageEnableConversations", "Ex75027D", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x17002E4B RID: 11851
		// (get) Token: 0x06009176 RID: 37238 RVA: 0x0025233F File Offset: 0x0025053F
		public static LocalizedString InfoTemplate
		{
			get
			{
				return new LocalizedString("InfoTemplate", "Ex6D630B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009177 RID: 37239 RVA: 0x00252360 File Offset: 0x00250560
		public static LocalizedString ErrorCannotChangeBecauseTooOld(string objectVersion, string currentVersion)
		{
			return new LocalizedString("ErrorCannotChangeBecauseTooOld", "", false, false, Strings.ResourceManager, new object[]
			{
				objectVersion,
				currentVersion
			});
		}

		// Token: 0x17002E4C RID: 11852
		// (get) Token: 0x06009178 RID: 37240 RVA: 0x00252393 File Offset: 0x00250593
		public static LocalizedString AllGroupMembers
		{
			get
			{
				return new LocalizedString("AllGroupMembers", "Ex133491", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009179 RID: 37241 RVA: 0x002523B4 File Offset: 0x002505B4
		public static LocalizedString InvalidCspForCryptoModeInImportedTrustedPublishingDomain(string cspName, int cryptoMode)
		{
			return new LocalizedString("InvalidCspForCryptoModeInImportedTrustedPublishingDomain", "", false, false, Strings.ResourceManager, new object[]
			{
				cspName,
				cryptoMode
			});
		}

		// Token: 0x0600917A RID: 37242 RVA: 0x002523EC File Offset: 0x002505EC
		public static LocalizedString AddAccountRightsFailedException(string account, uint err)
		{
			return new LocalizedString("AddAccountRightsFailedException", "Ex87E61E", false, true, Strings.ResourceManager, new object[]
			{
				account,
				err
			});
		}

		// Token: 0x0600917B RID: 37243 RVA: 0x00252424 File Offset: 0x00250624
		public static LocalizedString CasHealthWebAppVdirNotFoundError(LocalizedString applicationShortName, string vdirName)
		{
			return new LocalizedString("CasHealthWebAppVdirNotFoundError", "ExFC1A78", false, true, Strings.ResourceManager, new object[]
			{
				applicationShortName,
				vdirName
			});
		}

		// Token: 0x17002E4D RID: 11853
		// (get) Token: 0x0600917C RID: 37244 RVA: 0x0025245C File Offset: 0x0025065C
		public static LocalizedString JournalNdrMailboxInJournalRuleJournalEmailAddress
		{
			get
			{
				return new LocalizedString("JournalNdrMailboxInJournalRuleJournalEmailAddress", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600917D RID: 37245 RVA: 0x0025247C File Offset: 0x0025067C
		public static LocalizedString FailedToLocatePublicFolder(string id, string error)
		{
			return new LocalizedString("FailedToLocatePublicFolder", "", false, false, Strings.ResourceManager, new object[]
			{
				id,
				error
			});
		}

		// Token: 0x17002E4E RID: 11854
		// (get) Token: 0x0600917E RID: 37246 RVA: 0x002524AF File Offset: 0x002506AF
		public static LocalizedString SetupComponentConfiguringGatewaySettings
		{
			get
			{
				return new LocalizedString("SetupComponentConfiguringGatewaySettings", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002E4F RID: 11855
		// (get) Token: 0x0600917F RID: 37247 RVA: 0x002524CD File Offset: 0x002506CD
		public static LocalizedString AuthenticationMethodBasic
		{
			get
			{
				return new LocalizedString("AuthenticationMethodBasic", "Ex71E1C8", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009180 RID: 37248 RVA: 0x002524EC File Offset: 0x002506EC
		public static LocalizedString UmLanguagePackDirectory(string path)
		{
			return new LocalizedString("UmLanguagePackDirectory", "Ex1A599A", false, true, Strings.ResourceManager, new object[]
			{
				path
			});
		}

		// Token: 0x06009181 RID: 37249 RVA: 0x0025251C File Offset: 0x0025071C
		public static LocalizedString RmsSharedIdentityComputerNotFound(string serverName)
		{
			return new LocalizedString("RmsSharedIdentityComputerNotFound", "Ex280FC6", false, true, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		// Token: 0x06009182 RID: 37250 RVA: 0x0025254C File Offset: 0x0025074C
		public static LocalizedString LogMigrationOpenRegistryKey(string keyPath)
		{
			return new LocalizedString("LogMigrationOpenRegistryKey", "Ex66604E", false, true, Strings.ResourceManager, new object[]
			{
				keyPath
			});
		}

		// Token: 0x17002E50 RID: 11856
		// (get) Token: 0x06009183 RID: 37251 RVA: 0x0025257B File Offset: 0x0025077B
		public static LocalizedString SetupComponentConfiguringContentIndexing
		{
			get
			{
				return new LocalizedString("SetupComponentConfiguringContentIndexing", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009184 RID: 37252 RVA: 0x0025259C File Offset: 0x0025079C
		public static LocalizedString ErrorDisableMailboxWithAssociatedApprovalRecipents(string id)
		{
			return new LocalizedString("ErrorDisableMailboxWithAssociatedApprovalRecipents", "Ex68CDCC", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x06009185 RID: 37253 RVA: 0x002525CC File Offset: 0x002507CC
		public static LocalizedString TestSearchCreateSearchFolderError(string ID, string database)
		{
			return new LocalizedString("TestSearchCreateSearchFolderError", "Ex4B3264", false, true, Strings.ResourceManager, new object[]
			{
				ID,
				database
			});
		}

		// Token: 0x06009186 RID: 37254 RVA: 0x00252600 File Offset: 0x00250800
		public static LocalizedString ProcessingComponent(string component, string description)
		{
			return new LocalizedString("ProcessingComponent", "ExB472CA", false, true, Strings.ResourceManager, new object[]
			{
				component,
				description
			});
		}

		// Token: 0x06009187 RID: 37255 RVA: 0x00252634 File Offset: 0x00250834
		public static LocalizedString ConfirmationMessageSetRMSTemplate(string name)
		{
			return new LocalizedString("ConfirmationMessageSetRMSTemplate", "Ex02D536", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x06009188 RID: 37256 RVA: 0x00252664 File Offset: 0x00250864
		public static LocalizedString ErrorDbMountedOnServer(string db, string server)
		{
			return new LocalizedString("ErrorDbMountedOnServer", "ExEF7303", false, true, Strings.ResourceManager, new object[]
			{
				db,
				server
			});
		}

		// Token: 0x17002E51 RID: 11857
		// (get) Token: 0x06009189 RID: 37257 RVA: 0x00252697 File Offset: 0x00250897
		public static LocalizedString OperationNotAllowed
		{
			get
			{
				return new LocalizedString("OperationNotAllowed", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600918A RID: 37258 RVA: 0x002526B8 File Offset: 0x002508B8
		public static LocalizedString ConfirmationMessageNewDistributionGroup(string Name, string organizationUnit)
		{
			return new LocalizedString("ConfirmationMessageNewDistributionGroup", "ExC208C0", false, true, Strings.ResourceManager, new object[]
			{
				Name,
				organizationUnit
			});
		}

		// Token: 0x17002E52 RID: 11858
		// (get) Token: 0x0600918B RID: 37259 RVA: 0x002526EB File Offset: 0x002508EB
		public static LocalizedString EnableMessageHistory
		{
			get
			{
				return new LocalizedString("EnableMessageHistory", "ExE73C75", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600918C RID: 37260 RVA: 0x0025270C File Offset: 0x0025090C
		public static LocalizedString DatabaseCopySuspendedCheck(string configType, string sgName, string suspendedState, string serverName, string suspendComment)
		{
			return new LocalizedString("DatabaseCopySuspendedCheck", "ExD9BDDD", false, true, Strings.ResourceManager, new object[]
			{
				configType,
				sgName,
				suspendedState,
				serverName,
				suspendComment
			});
		}

		// Token: 0x0600918D RID: 37261 RVA: 0x0025274C File Offset: 0x0025094C
		public static LocalizedString ConfirmationMessageMoveActiveMailboxDatabasePrefToServer(string targetServer)
		{
			return new LocalizedString("ConfirmationMessageMoveActiveMailboxDatabasePrefToServer", "", false, false, Strings.ResourceManager, new object[]
			{
				targetServer
			});
		}

		// Token: 0x0600918E RID: 37262 RVA: 0x0025277C File Offset: 0x0025097C
		public static LocalizedString AddAccessRuleCOM(string thumbprint)
		{
			return new LocalizedString("AddAccessRuleCOM", "Ex09D17F", false, true, Strings.ResourceManager, new object[]
			{
				thumbprint
			});
		}

		// Token: 0x17002E53 RID: 11859
		// (get) Token: 0x0600918F RID: 37263 RVA: 0x002527AB File Offset: 0x002509AB
		public static LocalizedString NoFoldersInMailbox
		{
			get
			{
				return new LocalizedString("NoFoldersInMailbox", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009190 RID: 37264 RVA: 0x002527CC File Offset: 0x002509CC
		public static LocalizedString WarnCertificateWillNotBeUsedBestIsPKI(string bestMatchThumbprint, string fqdn, string connectors)
		{
			return new LocalizedString("WarnCertificateWillNotBeUsedBestIsPKI", "Ex5A9F39", false, true, Strings.ResourceManager, new object[]
			{
				bestMatchThumbprint,
				fqdn,
				connectors
			});
		}

		// Token: 0x06009191 RID: 37265 RVA: 0x00252804 File Offset: 0x00250A04
		public static LocalizedString InstallFreeBusyFolderGeneralFailure(string exception)
		{
			return new LocalizedString("InstallFreeBusyFolderGeneralFailure", "Ex51ED78", false, true, Strings.ResourceManager, new object[]
			{
				exception
			});
		}

		// Token: 0x06009192 RID: 37266 RVA: 0x00252834 File Offset: 0x00250A34
		public static LocalizedString ErrorUserNotUniqueOnDomainController(string id, string dc)
		{
			return new LocalizedString("ErrorUserNotUniqueOnDomainController", "ExB75A67", false, true, Strings.ResourceManager, new object[]
			{
				id,
				dc
			});
		}

		// Token: 0x17002E54 RID: 11860
		// (get) Token: 0x06009193 RID: 37267 RVA: 0x00252867 File Offset: 0x00250A67
		public static LocalizedString WarningInternalLicensingDisabled
		{
			get
			{
				return new LocalizedString("WarningInternalLicensingDisabled", "ExCDD7CA", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009194 RID: 37268 RVA: 0x00252888 File Offset: 0x00250A88
		public static LocalizedString ErrorUnableToReleaseUri(string uri, string domain, string appId, string errdetails)
		{
			return new LocalizedString("ErrorUnableToReleaseUri", "Ex1FCF67", false, true, Strings.ResourceManager, new object[]
			{
				uri,
				domain,
				appId,
				errdetails
			});
		}

		// Token: 0x17002E55 RID: 11861
		// (get) Token: 0x06009195 RID: 37269 RVA: 0x002528C3 File Offset: 0x00250AC3
		public static LocalizedString MapiTransactionDiagnosticTargetDatabaseNotAttached
		{
			get
			{
				return new LocalizedString("MapiTransactionDiagnosticTargetDatabaseNotAttached", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002E56 RID: 11862
		// (get) Token: 0x06009196 RID: 37270 RVA: 0x002528E1 File Offset: 0x00250AE1
		public static LocalizedString BridgeheadExchangeCertificateComponentDescription
		{
			get
			{
				return new LocalizedString("BridgeheadExchangeCertificateComponentDescription", "ExE5AAD5", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002E57 RID: 11863
		// (get) Token: 0x06009197 RID: 37271 RVA: 0x002528FF File Offset: 0x00250AFF
		public static LocalizedString CatchAllRecipientNotAllowedForNonAuthoritativeAcceptedDomains
		{
			get
			{
				return new LocalizedString("CatchAllRecipientNotAllowedForNonAuthoritativeAcceptedDomains", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009198 RID: 37272 RVA: 0x00252920 File Offset: 0x00250B20
		public static LocalizedString HybridMailflowNullConnector(string TaskName, string Identity)
		{
			return new LocalizedString("HybridMailflowNullConnector", "", false, false, Strings.ResourceManager, new object[]
			{
				TaskName,
				Identity
			});
		}

		// Token: 0x17002E58 RID: 11864
		// (get) Token: 0x06009199 RID: 37273 RVA: 0x00252953 File Offset: 0x00250B53
		public static LocalizedString UninstallMomConnectorServiceTask
		{
			get
			{
				return new LocalizedString("UninstallMomConnectorServiceTask", "ExFEC057", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600919A RID: 37274 RVA: 0x00252974 File Offset: 0x00250B74
		public static LocalizedString ClassificationRuleCollectionVersionViolation(string newRulePackVersion, string existingRulePackVersion)
		{
			return new LocalizedString("ClassificationRuleCollectionVersionViolation", "", false, false, Strings.ResourceManager, new object[]
			{
				newRulePackVersion,
				existingRulePackVersion
			});
		}

		// Token: 0x17002E59 RID: 11865
		// (get) Token: 0x0600919B RID: 37275 RVA: 0x002529A7 File Offset: 0x00250BA7
		public static LocalizedString ExsetdataOrganizationName
		{
			get
			{
				return new LocalizedString("ExsetdataOrganizationName", "ExC2930B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600919C RID: 37276 RVA: 0x002529C8 File Offset: 0x00250BC8
		public static LocalizedString ErrorCannotDetermineInitialDomain(string tenant)
		{
			return new LocalizedString("ErrorCannotDetermineInitialDomain", "", false, false, Strings.ResourceManager, new object[]
			{
				tenant
			});
		}

		// Token: 0x17002E5A RID: 11866
		// (get) Token: 0x0600919D RID: 37277 RVA: 0x002529F7 File Offset: 0x00250BF7
		public static LocalizedString ErrorAccountDisabledForUserMailbox
		{
			get
			{
				return new LocalizedString("ErrorAccountDisabledForUserMailbox", "Ex09727A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600919E RID: 37278 RVA: 0x00252A18 File Offset: 0x00250C18
		public static LocalizedString ErrorObjectIsNotLiveIDEnabled(string user)
		{
			return new LocalizedString("ErrorObjectIsNotLiveIDEnabled", "Ex8CD9E3", false, true, Strings.ResourceManager, new object[]
			{
				user
			});
		}

		// Token: 0x17002E5B RID: 11867
		// (get) Token: 0x0600919F RID: 37279 RVA: 0x00252A47 File Offset: 0x00250C47
		public static LocalizedString SetupProgressStoppingUMService
		{
			get
			{
				return new LocalizedString("SetupProgressStoppingUMService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002E5C RID: 11868
		// (get) Token: 0x060091A0 RID: 37280 RVA: 0x00252A65 File Offset: 0x00250C65
		public static LocalizedString ErrorFailedToGetULTenant
		{
			get
			{
				return new LocalizedString("ErrorFailedToGetULTenant", "Ex9057A0", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002E5D RID: 11869
		// (get) Token: 0x060091A1 RID: 37281 RVA: 0x00252A83 File Offset: 0x00250C83
		public static LocalizedString CasHealthOwaAuthFailInternal
		{
			get
			{
				return new LocalizedString("CasHealthOwaAuthFailInternal", "Ex8CC178", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002E5E RID: 11870
		// (get) Token: 0x060091A2 RID: 37282 RVA: 0x00252AA1 File Offset: 0x00250CA1
		public static LocalizedString InstallMigrationWorkflowServiceTask
		{
			get
			{
				return new LocalizedString("InstallMigrationWorkflowServiceTask", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060091A3 RID: 37283 RVA: 0x00252AC0 File Offset: 0x00250CC0
		public static LocalizedString ErrorInvalidRegistryHive(string hive)
		{
			return new LocalizedString("ErrorInvalidRegistryHive", "Ex0DDEE5", false, true, Strings.ResourceManager, new object[]
			{
				hive
			});
		}

		// Token: 0x17002E5F RID: 11871
		// (get) Token: 0x060091A4 RID: 37284 RVA: 0x00252AEF File Offset: 0x00250CEF
		public static LocalizedString ActiveDirectorySearchViaADDriverScenario
		{
			get
			{
				return new LocalizedString("ActiveDirectorySearchViaADDriverScenario", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060091A5 RID: 37285 RVA: 0x00252B10 File Offset: 0x00250D10
		public static LocalizedString WarnAboutDeprecatedParameter(string ParameterName)
		{
			return new LocalizedString("WarnAboutDeprecatedParameter", "", false, false, Strings.ResourceManager, new object[]
			{
				ParameterName
			});
		}

		// Token: 0x060091A6 RID: 37286 RVA: 0x00252B40 File Offset: 0x00250D40
		public static LocalizedString ErrorDisableMailuserWithLitigationHold(string mbxId)
		{
			return new LocalizedString("ErrorDisableMailuserWithLitigationHold", "", false, false, Strings.ResourceManager, new object[]
			{
				mbxId
			});
		}

		// Token: 0x060091A7 RID: 37287 RVA: 0x00252B70 File Offset: 0x00250D70
		public static LocalizedString ErrorSchemaVersionDoesntApply(string database)
		{
			return new LocalizedString("ErrorSchemaVersionDoesntApply", "", false, false, Strings.ResourceManager, new object[]
			{
				database
			});
		}

		// Token: 0x17002E60 RID: 11872
		// (get) Token: 0x060091A8 RID: 37288 RVA: 0x00252B9F File Offset: 0x00250D9F
		public static LocalizedString ADTopologyServiceDescription
		{
			get
			{
				return new LocalizedString("ADTopologyServiceDescription", "Ex10B390", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060091A9 RID: 37289 RVA: 0x00252BC0 File Offset: 0x00250DC0
		public static LocalizedString ErrorOperationOnOldServer(string serverName)
		{
			return new LocalizedString("ErrorOperationOnOldServer", "Ex96C9FD", false, true, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		// Token: 0x17002E61 RID: 11873
		// (get) Token: 0x060091AA RID: 37290 RVA: 0x00252BEF File Offset: 0x00250DEF
		public static LocalizedString GetHealthReportProgressFinished
		{
			get
			{
				return new LocalizedString("GetHealthReportProgressFinished", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002E62 RID: 11874
		// (get) Token: 0x060091AB RID: 37291 RVA: 0x00252C0D File Offset: 0x00250E0D
		public static LocalizedString DatabaseChecksFailed
		{
			get
			{
				return new LocalizedString("DatabaseChecksFailed", "ExDA9A43", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060091AC RID: 37292 RVA: 0x00252C2C File Offset: 0x00250E2C
		public static LocalizedString InvalidExpression(string expression)
		{
			return new LocalizedString("InvalidExpression", "", false, false, Strings.ResourceManager, new object[]
			{
				expression
			});
		}

		// Token: 0x17002E63 RID: 11875
		// (get) Token: 0x060091AD RID: 37293 RVA: 0x00252C5B File Offset: 0x00250E5B
		public static LocalizedString CopyStatusDisconnectedAndResynchronizing
		{
			get
			{
				return new LocalizedString("CopyStatusDisconnectedAndResynchronizing", "ExC95AEC", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002E64 RID: 11876
		// (get) Token: 0x060091AE RID: 37294 RVA: 0x00252C79 File Offset: 0x00250E79
		public static LocalizedString ErrorEwsValidatorFailed
		{
			get
			{
				return new LocalizedString("ErrorEwsValidatorFailed", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060091AF RID: 37295 RVA: 0x00252C98 File Offset: 0x00250E98
		public static LocalizedString ErrorCannotRemoveMigrationUserOnCurrentState(string user, string batchName)
		{
			return new LocalizedString("ErrorCannotRemoveMigrationUserOnCurrentState", "", false, false, Strings.ResourceManager, new object[]
			{
				user,
				batchName
			});
		}

		// Token: 0x17002E65 RID: 11877
		// (get) Token: 0x060091B0 RID: 37296 RVA: 0x00252CCB File Offset: 0x00250ECB
		public static LocalizedString IPListEntryTypeMismatch
		{
			get
			{
				return new LocalizedString("IPListEntryTypeMismatch", "Ex35A74D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060091B1 RID: 37297 RVA: 0x00252CEC File Offset: 0x00250EEC
		public static LocalizedString ErrorConnectSystemAttendantMailbox(string identity, string database)
		{
			return new LocalizedString("ErrorConnectSystemAttendantMailbox", "ExBFE7AA", false, true, Strings.ResourceManager, new object[]
			{
				identity,
				database
			});
		}

		// Token: 0x060091B2 RID: 37298 RVA: 0x00252D20 File Offset: 0x00250F20
		public static LocalizedString ErrorPublicFolderDatabaseNotUnique(string idStringValue)
		{
			return new LocalizedString("ErrorPublicFolderDatabaseNotUnique", "Ex601939", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		// Token: 0x060091B3 RID: 37299 RVA: 0x00252D50 File Offset: 0x00250F50
		public static LocalizedString ConfirmationMessageSetWebServicesVirtualDirectory(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetWebServicesVirtualDirectory", "Ex64C5BD", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x060091B4 RID: 37300 RVA: 0x00252D80 File Offset: 0x00250F80
		public static LocalizedString ConfirmationMessageNewMalwareFilterRule(string name)
		{
			return new LocalizedString("ConfirmationMessageNewMalwareFilterRule", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x060091B5 RID: 37301 RVA: 0x00252DB0 File Offset: 0x00250FB0
		public static LocalizedString ConfirmationMessageNewAddressBookPolicy(string Name, string AddressLists, string GlobalAddressList, string RoomList, string OfflineAddressBook)
		{
			return new LocalizedString("ConfirmationMessageNewAddressBookPolicy", "", false, false, Strings.ResourceManager, new object[]
			{
				Name,
				AddressLists,
				GlobalAddressList,
				RoomList,
				OfflineAddressBook
			});
		}

		// Token: 0x17002E66 RID: 11878
		// (get) Token: 0x060091B6 RID: 37302 RVA: 0x00252DF0 File Offset: 0x00250FF0
		public static LocalizedString OrganizationWide
		{
			get
			{
				return new LocalizedString("OrganizationWide", "ExEF13A9", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060091B7 RID: 37303 RVA: 0x00252E10 File Offset: 0x00251010
		public static LocalizedString ErrorInvalidContentMailbox(string name)
		{
			return new LocalizedString("ErrorInvalidContentMailbox", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x060091B8 RID: 37304 RVA: 0x00252E40 File Offset: 0x00251040
		public static LocalizedString ConfirmationMessageNewAvailabilityConfig(string orgWideAccount)
		{
			return new LocalizedString("ConfirmationMessageNewAvailabilityConfig", "", false, false, Strings.ResourceManager, new object[]
			{
				orgWideAccount
			});
		}

		// Token: 0x060091B9 RID: 37305 RVA: 0x00252E70 File Offset: 0x00251070
		public static LocalizedString ElementNotFound(string element)
		{
			return new LocalizedString("ElementNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				element
			});
		}

		// Token: 0x060091BA RID: 37306 RVA: 0x00252EA0 File Offset: 0x002510A0
		public static LocalizedString AdminAuditLogSearchCriteria(string searchCriteria)
		{
			return new LocalizedString("AdminAuditLogSearchCriteria", "Ex5034ED", false, true, Strings.ResourceManager, new object[]
			{
				searchCriteria
			});
		}

		// Token: 0x060091BB RID: 37307 RVA: 0x00252ED0 File Offset: 0x002510D0
		public static LocalizedString ErrorMailboxDatabaseNotFound(string identity)
		{
			return new LocalizedString("ErrorMailboxDatabaseNotFound", "Ex23B42B", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x060091BC RID: 37308 RVA: 0x00252F00 File Offset: 0x00251100
		public static LocalizedString OfferIdMatchError(string org, string programid, string offerid, string sharedOrg, string sharedProgramid, string sharedOfferid)
		{
			return new LocalizedString("OfferIdMatchError", "Ex476FFB", false, true, Strings.ResourceManager, new object[]
			{
				org,
				programid,
				offerid,
				sharedOrg,
				sharedProgramid,
				sharedOfferid
			});
		}

		// Token: 0x060091BD RID: 37309 RVA: 0x00252F48 File Offset: 0x00251148
		public static LocalizedString NoGCsAvailableException(string forest)
		{
			return new LocalizedString("NoGCsAvailableException", "ExBCCB0E", false, true, Strings.ResourceManager, new object[]
			{
				forest
			});
		}

		// Token: 0x17002E67 RID: 11879
		// (get) Token: 0x060091BE RID: 37310 RVA: 0x00252F77 File Offset: 0x00251177
		public static LocalizedString ErrorNonExistentDefaultContactsFolder
		{
			get
			{
				return new LocalizedString("ErrorNonExistentDefaultContactsFolder", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060091BF RID: 37311 RVA: 0x00252F98 File Offset: 0x00251198
		public static LocalizedString VerboseSyncTaskCookieHasPageData(Guid orgDc, Guid newDc)
		{
			return new LocalizedString("VerboseSyncTaskCookieHasPageData", "ExE8C1DF", false, true, Strings.ResourceManager, new object[]
			{
				orgDc,
				newDc
			});
		}

		// Token: 0x060091C0 RID: 37312 RVA: 0x00252FD8 File Offset: 0x002511D8
		public static LocalizedString ErrorVerificationCodeNeverSent(string phonenumber)
		{
			return new LocalizedString("ErrorVerificationCodeNeverSent", "Ex1CBE3B", false, true, Strings.ResourceManager, new object[]
			{
				phonenumber
			});
		}

		// Token: 0x060091C1 RID: 37313 RVA: 0x00253008 File Offset: 0x00251208
		public static LocalizedString CouldNotFindHostDirectoryEntryException(string host)
		{
			return new LocalizedString("CouldNotFindHostDirectoryEntryException", "Ex845095", false, true, Strings.ResourceManager, new object[]
			{
				host
			});
		}

		// Token: 0x17002E68 RID: 11880
		// (get) Token: 0x060091C2 RID: 37314 RVA: 0x00253037 File Offset: 0x00251237
		public static LocalizedString CustomCannotBeUsedForPermissionGroups
		{
			get
			{
				return new LocalizedString("CustomCannotBeUsedForPermissionGroups", "Ex89FF54", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002E69 RID: 11881
		// (get) Token: 0x060091C3 RID: 37315 RVA: 0x00253055 File Offset: 0x00251255
		public static LocalizedString MapiTransactionAbortedMsg
		{
			get
			{
				return new LocalizedString("MapiTransactionAbortedMsg", "ExD17184", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002E6A RID: 11882
		// (get) Token: 0x060091C4 RID: 37316 RVA: 0x00253073 File Offset: 0x00251273
		public static LocalizedString ErrorDefaultHostedConnectionFilterPolicyCannotBeDeleted
		{
			get
			{
				return new LocalizedString("ErrorDefaultHostedConnectionFilterPolicyCannotBeDeleted", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060091C5 RID: 37317 RVA: 0x00253094 File Offset: 0x00251294
		public static LocalizedString TestMigrationServerAvailabilityException(string hostname, int port)
		{
			return new LocalizedString("TestMigrationServerAvailabilityException", "ExCEE596", false, true, Strings.ResourceManager, new object[]
			{
				hostname,
				port
			});
		}

		// Token: 0x17002E6B RID: 11883
		// (get) Token: 0x060091C6 RID: 37318 RVA: 0x002530CC File Offset: 0x002512CC
		public static LocalizedString CertAuthWithoutSSLError
		{
			get
			{
				return new LocalizedString("CertAuthWithoutSSLError", "ExC10437", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002E6C RID: 11884
		// (get) Token: 0x060091C7 RID: 37319 RVA: 0x002530EA File Offset: 0x002512EA
		public static LocalizedString NeedEitherAssemblyPathOrName
		{
			get
			{
				return new LocalizedString("NeedEitherAssemblyPathOrName", "Ex9F0C3A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002E6D RID: 11885
		// (get) Token: 0x060091C8 RID: 37320 RVA: 0x00253108 File Offset: 0x00251308
		public static LocalizedString CannotFindTestUser
		{
			get
			{
				return new LocalizedString("CannotFindTestUser", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060091C9 RID: 37321 RVA: 0x00253128 File Offset: 0x00251328
		public static LocalizedString WarningEESandEDSNotFound(string dom)
		{
			return new LocalizedString("WarningEESandEDSNotFound", "Ex0215B2", false, true, Strings.ResourceManager, new object[]
			{
				dom
			});
		}

		// Token: 0x060091CA RID: 37322 RVA: 0x00253158 File Offset: 0x00251358
		public static LocalizedString UnableToResolveValidDomainExchangeCertificateTasksException(string hostName, string physicalName, string fullyQualifiedName, string physicalFullyQualifiedName)
		{
			return new LocalizedString("UnableToResolveValidDomainExchangeCertificateTasksException", "", false, false, Strings.ResourceManager, new object[]
			{
				hostName,
				physicalName,
				fullyQualifiedName,
				physicalFullyQualifiedName
			});
		}

		// Token: 0x17002E6E RID: 11886
		// (get) Token: 0x060091CB RID: 37323 RVA: 0x00253193 File Offset: 0x00251393
		public static LocalizedString MalboxFolderRightsEditAllItems
		{
			get
			{
				return new LocalizedString("MalboxFolderRightsEditAllItems", "Ex422AFD", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060091CC RID: 37324 RVA: 0x002531B4 File Offset: 0x002513B4
		public static LocalizedString RestoreFailedDagUp(string serverName)
		{
			return new LocalizedString("RestoreFailedDagUp", "", false, false, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		// Token: 0x17002E6F RID: 11887
		// (get) Token: 0x060091CD RID: 37325 RVA: 0x002531E3 File Offset: 0x002513E3
		public static LocalizedString CertificateStatusPendingRequest
		{
			get
			{
				return new LocalizedString("CertificateStatusPendingRequest", "Ex98BB17", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002E70 RID: 11888
		// (get) Token: 0x060091CE RID: 37326 RVA: 0x00253201 File Offset: 0x00251401
		public static LocalizedString AddressRewriteExternalAddressExists
		{
			get
			{
				return new LocalizedString("AddressRewriteExternalAddressExists", "Ex8FE332", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060091CF RID: 37327 RVA: 0x00253220 File Offset: 0x00251420
		public static LocalizedString ConfirmationMessageNewMessageClassificationName(string Name, string DisplayName, string SenderDescription)
		{
			return new LocalizedString("ConfirmationMessageNewMessageClassificationName", "Ex541C01", false, true, Strings.ResourceManager, new object[]
			{
				Name,
				DisplayName,
				SenderDescription
			});
		}

		// Token: 0x060091D0 RID: 37328 RVA: 0x00253258 File Offset: 0x00251458
		public static LocalizedString PopImapSettingsPortMismatch(string settings, string protocol, string noun)
		{
			return new LocalizedString("PopImapSettingsPortMismatch", "Ex4D7CCF", false, true, Strings.ResourceManager, new object[]
			{
				settings,
				protocol,
				noun
			});
		}

		// Token: 0x17002E71 RID: 11889
		// (get) Token: 0x060091D1 RID: 37329 RVA: 0x0025328F File Offset: 0x0025148F
		public static LocalizedString ErrorMoveDatabasePathInvalidOnReplicated
		{
			get
			{
				return new LocalizedString("ErrorMoveDatabasePathInvalidOnReplicated", "Ex9A62BF", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002E72 RID: 11890
		// (get) Token: 0x060091D2 RID: 37330 RVA: 0x002532AD File Offset: 0x002514AD
		public static LocalizedString CasTransactionResultFailure
		{
			get
			{
				return new LocalizedString("CasTransactionResultFailure", "Ex37EA24", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060091D3 RID: 37331 RVA: 0x002532CC File Offset: 0x002514CC
		public static LocalizedString GlobalRoutingEntryFound(string phoneNumber)
		{
			return new LocalizedString("GlobalRoutingEntryFound", "", false, false, Strings.ResourceManager, new object[]
			{
				phoneNumber
			});
		}

		// Token: 0x17002E73 RID: 11891
		// (get) Token: 0x060091D4 RID: 37332 RVA: 0x002532FB File Offset: 0x002514FB
		public static LocalizedString RoleOwner
		{
			get
			{
				return new LocalizedString("RoleOwner", "ExFCDCEC", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002E74 RID: 11892
		// (get) Token: 0x060091D5 RID: 37333 RVA: 0x00253319 File Offset: 0x00251519
		public static LocalizedString ConfirmationMessageTestIRMConfiguration
		{
			get
			{
				return new LocalizedString("ConfirmationMessageTestIRMConfiguration", "ExC0893B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060091D6 RID: 37334 RVA: 0x00253338 File Offset: 0x00251538
		public static LocalizedString VerboseDeleteSystemMailbox(string id)
		{
			return new LocalizedString("VerboseDeleteSystemMailbox", "Ex1BB5A3", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x17002E75 RID: 11893
		// (get) Token: 0x060091D7 RID: 37335 RVA: 0x00253367 File Offset: 0x00251567
		public static LocalizedString RejectMessageActionMustBeTheOnlyAction
		{
			get
			{
				return new LocalizedString("RejectMessageActionMustBeTheOnlyAction", "Ex6D70BD", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002E76 RID: 11894
		// (get) Token: 0x060091D8 RID: 37336 RVA: 0x00253385 File Offset: 0x00251585
		public static LocalizedString VerboseIgnoreDefaultScope
		{
			get
			{
				return new LocalizedString("VerboseIgnoreDefaultScope", "ExC09283", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002E77 RID: 11895
		// (get) Token: 0x060091D9 RID: 37337 RVA: 0x002533A3 File Offset: 0x002515A3
		public static LocalizedString InstallFreeBusyFolderAlreadyExists
		{
			get
			{
				return new LocalizedString("InstallFreeBusyFolderAlreadyExists", "ExBD7F1D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002E78 RID: 11896
		// (get) Token: 0x060091DA RID: 37338 RVA: 0x002533C1 File Offset: 0x002515C1
		public static LocalizedString ADAttributeUserLogonName
		{
			get
			{
				return new LocalizedString("ADAttributeUserLogonName", "ExE6AB32", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060091DB RID: 37339 RVA: 0x002533E0 File Offset: 0x002515E0
		public static LocalizedString ConfirmationMessageRemovePublicFolderDatabase(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemovePublicFolderDatabase", "ExB1FD34", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x17002E79 RID: 11897
		// (get) Token: 0x060091DC RID: 37340 RVA: 0x0025340F File Offset: 0x0025160F
		public static LocalizedString CertificateStatusInvalid
		{
			get
			{
				return new LocalizedString("CertificateStatusInvalid", "ExD20896", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060091DD RID: 37341 RVA: 0x00253430 File Offset: 0x00251630
		public static LocalizedString ConfirmationMessageEnableMailboxUser(string Identity)
		{
			return new LocalizedString("ConfirmationMessageEnableMailboxUser", "Ex6A7109", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x060091DE RID: 37342 RVA: 0x00253460 File Offset: 0x00251660
		public static LocalizedString WarningDiscoveryHoldDelay(double minutes)
		{
			return new LocalizedString("WarningDiscoveryHoldDelay", "", false, false, Strings.ResourceManager, new object[]
			{
				minutes
			});
		}

		// Token: 0x060091DF RID: 37343 RVA: 0x00253494 File Offset: 0x00251694
		public static LocalizedString ErrorInvalidExpansionServer(string expansionServer)
		{
			return new LocalizedString("ErrorInvalidExpansionServer", "Ex6696F7", false, true, Strings.ResourceManager, new object[]
			{
				expansionServer
			});
		}

		// Token: 0x060091E0 RID: 37344 RVA: 0x002534C4 File Offset: 0x002516C4
		public static LocalizedString MailboxSearchServiceUnavailable(string serverName, int errorCode)
		{
			return new LocalizedString("MailboxSearchServiceUnavailable", "", false, false, Strings.ResourceManager, new object[]
			{
				serverName,
				errorCode
			});
		}

		// Token: 0x060091E1 RID: 37345 RVA: 0x002534FC File Offset: 0x002516FC
		public static LocalizedString WarningPushCertificate(string thumbprint, string server)
		{
			return new LocalizedString("WarningPushCertificate", "ExF1B854", false, true, Strings.ResourceManager, new object[]
			{
				thumbprint,
				server
			});
		}

		// Token: 0x060091E2 RID: 37346 RVA: 0x00253530 File Offset: 0x00251730
		public static LocalizedString TestMigrationServerAvailabilitySuccess(string hostname, int port)
		{
			return new LocalizedString("TestMigrationServerAvailabilitySuccess", "Ex082B81", false, true, Strings.ResourceManager, new object[]
			{
				hostname,
				port
			});
		}

		// Token: 0x17002E7A RID: 11898
		// (get) Token: 0x060091E3 RID: 37347 RVA: 0x00253568 File Offset: 0x00251768
		public static LocalizedString NewDagCompletedSuccessfully
		{
			get
			{
				return new LocalizedString("NewDagCompletedSuccessfully", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060091E4 RID: 37348 RVA: 0x00253588 File Offset: 0x00251788
		public static LocalizedString ConfirmationMessageRemoveOutboundConnector(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveOutboundConnector", "", false, false, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x060091E5 RID: 37349 RVA: 0x002535B8 File Offset: 0x002517B8
		public static LocalizedString ErrorRoleNotFound(string idStringValue)
		{
			return new LocalizedString("ErrorRoleNotFound", "ExC5FD6B", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		// Token: 0x060091E6 RID: 37350 RVA: 0x002535E8 File Offset: 0x002517E8
		public static LocalizedString ProgressActivityPushFederationCertificate(string thumbprint)
		{
			return new LocalizedString("ProgressActivityPushFederationCertificate", "ExC85FAE", false, true, Strings.ResourceManager, new object[]
			{
				thumbprint
			});
		}

		// Token: 0x060091E7 RID: 37351 RVA: 0x00253618 File Offset: 0x00251818
		public static LocalizedString ConfirmationMessageNewMobileSyncVirtualDirectory(string WebSiteName, string Server)
		{
			return new LocalizedString("ConfirmationMessageNewMobileSyncVirtualDirectory", "Ex356117", false, true, Strings.ResourceManager, new object[]
			{
				WebSiteName,
				Server
			});
		}

		// Token: 0x060091E8 RID: 37352 RVA: 0x0025364C File Offset: 0x0025184C
		public static LocalizedString CallingDomainServicesEndPoint(string method, string endpoint)
		{
			return new LocalizedString("CallingDomainServicesEndPoint", "Ex731C41", false, true, Strings.ResourceManager, new object[]
			{
				method,
				endpoint
			});
		}

		// Token: 0x17002E7B RID: 11899
		// (get) Token: 0x060091E9 RID: 37353 RVA: 0x0025367F File Offset: 0x0025187F
		public static LocalizedString Error_CheckClientIntent
		{
			get
			{
				return new LocalizedString("Error_CheckClientIntent", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002E7C RID: 11900
		// (get) Token: 0x060091EA RID: 37354 RVA: 0x0025369D File Offset: 0x0025189D
		public static LocalizedString MediumPriorityChecksFailed
		{
			get
			{
				return new LocalizedString("MediumPriorityChecksFailed", "Ex9B04F7", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002E7D RID: 11901
		// (get) Token: 0x060091EB RID: 37355 RVA: 0x002536BB File Offset: 0x002518BB
		public static LocalizedString ConfirmationMessageSetHybridMailflow
		{
			get
			{
				return new LocalizedString("ConfirmationMessageSetHybridMailflow", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002E7E RID: 11902
		// (get) Token: 0x060091EC RID: 37356 RVA: 0x002536D9 File Offset: 0x002518D9
		public static LocalizedString BPATestSystemHealthTaskName
		{
			get
			{
				return new LocalizedString("BPATestSystemHealthTaskName", "Ex7B762B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002E7F RID: 11903
		// (get) Token: 0x060091ED RID: 37357 RVA: 0x002536F7 File Offset: 0x002518F7
		public static LocalizedString ErrorMissingNetIDWhenBypassWLID
		{
			get
			{
				return new LocalizedString("ErrorMissingNetIDWhenBypassWLID", "Ex3E81D3", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002E80 RID: 11904
		// (get) Token: 0x060091EE RID: 37358 RVA: 0x00253715 File Offset: 0x00251915
		public static LocalizedString InvalidFqdn
		{
			get
			{
				return new LocalizedString("InvalidFqdn", "ExF89D67", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060091EF RID: 37359 RVA: 0x00253734 File Offset: 0x00251934
		public static LocalizedString ConfirmationMessageNewMailboxImportRequest(string name)
		{
			return new LocalizedString("ConfirmationMessageNewMailboxImportRequest", "Ex24A6C0", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x17002E81 RID: 11905
		// (get) Token: 0x060091F0 RID: 37360 RVA: 0x00253763 File Offset: 0x00251963
		public static LocalizedString ErrorExecutingUserIsNull
		{
			get
			{
				return new LocalizedString("ErrorExecutingUserIsNull", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060091F1 RID: 37361 RVA: 0x00253784 File Offset: 0x00251984
		public static LocalizedString ErrorCannotModifyDeprecatedRole(string id)
		{
			return new LocalizedString("ErrorCannotModifyDeprecatedRole", "Ex9CC3B4", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x060091F2 RID: 37362 RVA: 0x002537B4 File Offset: 0x002519B4
		public static LocalizedString ErrorOperationOnlyOnMailboxServer(string serverName)
		{
			return new LocalizedString("ErrorOperationOnlyOnMailboxServer", "ExE89A0A", false, true, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		// Token: 0x060091F3 RID: 37363 RVA: 0x002537E4 File Offset: 0x002519E4
		public static LocalizedString ErrorUnsupportedMailboxShapeFeatureVersionException(string identity)
		{
			return new LocalizedString("ErrorUnsupportedMailboxShapeFeatureVersionException", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x060091F4 RID: 37364 RVA: 0x00253814 File Offset: 0x00251A14
		public static LocalizedString ErrorCannotParseFsmoRoleOwnerVersion(string metadata, string exception)
		{
			return new LocalizedString("ErrorCannotParseFsmoRoleOwnerVersion", "", false, false, Strings.ResourceManager, new object[]
			{
				metadata,
				exception
			});
		}

		// Token: 0x17002E82 RID: 11906
		// (get) Token: 0x060091F5 RID: 37365 RVA: 0x00253847 File Offset: 0x00251A47
		public static LocalizedString MapiTransactionErrorMsgNoMailboxMdbDismounted
		{
			get
			{
				return new LocalizedString("MapiTransactionErrorMsgNoMailboxMdbDismounted", "Ex530148", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002E83 RID: 11907
		// (get) Token: 0x060091F6 RID: 37366 RVA: 0x00253865 File Offset: 0x00251A65
		public static LocalizedString NotEnoughPrioritiesAvailable
		{
			get
			{
				return new LocalizedString("NotEnoughPrioritiesAvailable", "ExC68907", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060091F7 RID: 37367 RVA: 0x00253884 File Offset: 0x00251A84
		public static LocalizedString CannotStartRunningJob(string name)
		{
			return new LocalizedString("CannotStartRunningJob", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x060091F8 RID: 37368 RVA: 0x002538B4 File Offset: 0x00251AB4
		public static LocalizedString ConfirmationMessageNewRecipientTemplateProvisioningPolicy(string Identity)
		{
			return new LocalizedString("ConfirmationMessageNewRecipientTemplateProvisioningPolicy", "Ex86368A", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x060091F9 RID: 37369 RVA: 0x002538E4 File Offset: 0x00251AE4
		public static LocalizedString ErrorPolicyValidationFailed(string detailError)
		{
			return new LocalizedString("ErrorPolicyValidationFailed", "Ex47BFE3", false, true, Strings.ResourceManager, new object[]
			{
				detailError
			});
		}

		// Token: 0x060091FA RID: 37370 RVA: 0x00253914 File Offset: 0x00251B14
		public static LocalizedString DagMemberStopped(string serverName)
		{
			return new LocalizedString("DagMemberStopped", "Ex567566", false, true, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		// Token: 0x17002E84 RID: 11908
		// (get) Token: 0x060091FB RID: 37371 RVA: 0x00253943 File Offset: 0x00251B43
		public static LocalizedString InformationSkippedAsForAutodiscover
		{
			get
			{
				return new LocalizedString("InformationSkippedAsForAutodiscover", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002E85 RID: 11909
		// (get) Token: 0x060091FC RID: 37372 RVA: 0x00253961 File Offset: 0x00251B61
		public static LocalizedString ErrorTargetServicePlanHasNoMatchingMailboxPlan
		{
			get
			{
				return new LocalizedString("ErrorTargetServicePlanHasNoMatchingMailboxPlan", "ExF0AA19", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060091FD RID: 37373 RVA: 0x00253980 File Offset: 0x00251B80
		public static LocalizedString ConfirmationMessageRemoveWebServicesVirtualDirectory(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveWebServicesVirtualDirectory", "Ex0942CC", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x17002E86 RID: 11910
		// (get) Token: 0x060091FE RID: 37374 RVA: 0x002539AF File Offset: 0x00251BAF
		public static LocalizedString InvalidSubscriptionFile
		{
			get
			{
				return new LocalizedString("InvalidSubscriptionFile", "Ex648198", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060091FF RID: 37375 RVA: 0x002539D0 File Offset: 0x00251BD0
		public static LocalizedString ConfirmationMessageSetMalwareFilterConfig(string identity)
		{
			return new LocalizedString("ConfirmationMessageSetMalwareFilterConfig", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x06009200 RID: 37376 RVA: 0x00253A00 File Offset: 0x00251C00
		public static LocalizedString ConfirmationMessageEnableMailboxWithArchive(string Name)
		{
			return new LocalizedString("ConfirmationMessageEnableMailboxWithArchive", "Ex91F4AB", false, true, Strings.ResourceManager, new object[]
			{
				Name
			});
		}

		// Token: 0x06009201 RID: 37377 RVA: 0x00253A30 File Offset: 0x00251C30
		public static LocalizedString DagFswInsufficientPermissionsToAccessFswException(string fswMachine, Exception ex)
		{
			return new LocalizedString("DagFswInsufficientPermissionsToAccessFswException", "", false, false, Strings.ResourceManager, new object[]
			{
				fswMachine,
				ex
			});
		}

		// Token: 0x17002E87 RID: 11911
		// (get) Token: 0x06009202 RID: 37378 RVA: 0x00253A63 File Offset: 0x00251C63
		public static LocalizedString TenantAlreadyHasFinalizedMigration
		{
			get
			{
				return new LocalizedString("TenantAlreadyHasFinalizedMigration", "Ex88154F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002E88 RID: 11912
		// (get) Token: 0x06009203 RID: 37379 RVA: 0x00253A81 File Offset: 0x00251C81
		public static LocalizedString ErrorCouldNotFindMigrationEndpoint
		{
			get
			{
				return new LocalizedString("ErrorCouldNotFindMigrationEndpoint", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002E89 RID: 11913
		// (get) Token: 0x06009204 RID: 37380 RVA: 0x00253A9F File Offset: 0x00251C9F
		public static LocalizedString WillContinueProcessing
		{
			get
			{
				return new LocalizedString("WillContinueProcessing", "Ex85AFA7", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002E8A RID: 11914
		// (get) Token: 0x06009205 RID: 37381 RVA: 0x00253ABD File Offset: 0x00251CBD
		public static LocalizedString ScenarioExchangeWebServices
		{
			get
			{
				return new LocalizedString("ScenarioExchangeWebServices", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009206 RID: 37382 RVA: 0x00253ADC File Offset: 0x00251CDC
		public static LocalizedString EmptyDeviceFilterRemoved(string name)
		{
			return new LocalizedString("EmptyDeviceFilterRemoved", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x17002E8B RID: 11915
		// (get) Token: 0x06009207 RID: 37383 RVA: 0x00253B0B File Offset: 0x00251D0B
		public static LocalizedString FDS_GM_PerfCountersComponentDescription
		{
			get
			{
				return new LocalizedString("FDS_GM_PerfCountersComponentDescription", "Ex46E79B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002E8C RID: 11916
		// (get) Token: 0x06009208 RID: 37384 RVA: 0x00253B29 File Offset: 0x00251D29
		public static LocalizedString AssistantsServiceDescription
		{
			get
			{
				return new LocalizedString("AssistantsServiceDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009209 RID: 37385 RVA: 0x00253B48 File Offset: 0x00251D48
		public static LocalizedString SmtpConnectivityServerNotConfigured(string server)
		{
			return new LocalizedString("SmtpConnectivityServerNotConfigured", "Ex13BD7D", false, true, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		// Token: 0x17002E8D RID: 11917
		// (get) Token: 0x0600920A RID: 37386 RVA: 0x00253B77 File Offset: 0x00251D77
		public static LocalizedString SetupProgressMaxReceiveTransportQuota
		{
			get
			{
				return new LocalizedString("SetupProgressMaxReceiveTransportQuota", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002E8E RID: 11918
		// (get) Token: 0x0600920B RID: 37387 RVA: 0x00253B95 File Offset: 0x00251D95
		public static LocalizedString FailedToRetrieveAuditLogSearch
		{
			get
			{
				return new LocalizedString("FailedToRetrieveAuditLogSearch", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600920C RID: 37388 RVA: 0x00253BB4 File Offset: 0x00251DB4
		public static LocalizedString ErrorDlpPolicyAlreadyInstalled(string identity)
		{
			return new LocalizedString("ErrorDlpPolicyAlreadyInstalled", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x17002E8F RID: 11919
		// (get) Token: 0x0600920D RID: 37389 RVA: 0x00253BE3 File Offset: 0x00251DE3
		public static LocalizedString ADAttributeCountry
		{
			get
			{
				return new LocalizedString("ADAttributeCountry", "ExB43378", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600920E RID: 37390 RVA: 0x00253C04 File Offset: 0x00251E04
		public static LocalizedString WarningDuplicatedPropertyOriginalEntry(string propertyName)
		{
			return new LocalizedString("WarningDuplicatedPropertyOriginalEntry", "Ex0061EB", false, true, Strings.ResourceManager, new object[]
			{
				propertyName
			});
		}

		// Token: 0x0600920F RID: 37391 RVA: 0x00253C34 File Offset: 0x00251E34
		public static LocalizedString MaxDeviceDeletesPerMonthReached(int deviceDeleteCount, uint maxDeviceDeleteCount)
		{
			return new LocalizedString("MaxDeviceDeletesPerMonthReached", "Ex3D202B", false, true, Strings.ResourceManager, new object[]
			{
				deviceDeleteCount,
				maxDeviceDeleteCount
			});
		}

		// Token: 0x06009210 RID: 37392 RVA: 0x00253C74 File Offset: 0x00251E74
		public static LocalizedString VerboseSavePublicFolderReferral(string idServer)
		{
			return new LocalizedString("VerboseSavePublicFolderReferral", "Ex7F8558", false, true, Strings.ResourceManager, new object[]
			{
				idServer
			});
		}

		// Token: 0x17002E90 RID: 11920
		// (get) Token: 0x06009211 RID: 37393 RVA: 0x00253CA3 File Offset: 0x00251EA3
		public static LocalizedString MapiTransactionResultFailure
		{
			get
			{
				return new LocalizedString("MapiTransactionResultFailure", "ExD1D11D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009212 RID: 37394 RVA: 0x00253CC4 File Offset: 0x00251EC4
		public static LocalizedString MissingPilotOffer(string file, string pilotOffer)
		{
			return new LocalizedString("MissingPilotOffer", "", false, false, Strings.ResourceManager, new object[]
			{
				file,
				pilotOffer
			});
		}

		// Token: 0x17002E91 RID: 11921
		// (get) Token: 0x06009213 RID: 37395 RVA: 0x00253CF7 File Offset: 0x00251EF7
		public static LocalizedString RemoveResubmiRequestMessage
		{
			get
			{
				return new LocalizedString("RemoveResubmiRequestMessage", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002E92 RID: 11922
		// (get) Token: 0x06009214 RID: 37396 RVA: 0x00253D15 File Offset: 0x00251F15
		public static LocalizedString CasHealthOwaPingScenarioDescription
		{
			get
			{
				return new LocalizedString("CasHealthOwaPingScenarioDescription", "Ex2839B4", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009215 RID: 37397 RVA: 0x00253D34 File Offset: 0x00251F34
		public static LocalizedString ConfirmationMessageInvokePreMoveAction(string identity)
		{
			return new LocalizedString("ConfirmationMessageInvokePreMoveAction", "ExD19E15", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x06009216 RID: 37398 RVA: 0x00253D64 File Offset: 0x00251F64
		public static LocalizedString ErrorUnableToCheckMountedStatus(string pfdb, string error)
		{
			return new LocalizedString("ErrorUnableToCheckMountedStatus", "Ex0B05F5", false, true, Strings.ResourceManager, new object[]
			{
				pfdb,
				error
			});
		}

		// Token: 0x06009217 RID: 37399 RVA: 0x00253D98 File Offset: 0x00251F98
		public static LocalizedString ErrorServerDacedAndNotStarted(string dag, string server)
		{
			return new LocalizedString("ErrorServerDacedAndNotStarted", "Ex8E5AA0", false, true, Strings.ResourceManager, new object[]
			{
				dag,
				server
			});
		}

		// Token: 0x06009218 RID: 37400 RVA: 0x00253DCC File Offset: 0x00251FCC
		public static LocalizedString VerboseBumpOrganizationExchangeVersion(string org, string oldVersion, string newVersion)
		{
			return new LocalizedString("VerboseBumpOrganizationExchangeVersion", "ExBCB038", false, true, Strings.ResourceManager, new object[]
			{
				org,
				oldVersion,
				newVersion
			});
		}

		// Token: 0x06009219 RID: 37401 RVA: 0x00253E04 File Offset: 0x00252004
		public static LocalizedString ExceptionStorageAccessDenied(int errCode, string errMsg)
		{
			return new LocalizedString("ExceptionStorageAccessDenied", "ExA245C7", false, true, Strings.ResourceManager, new object[]
			{
				errCode,
				errMsg
			});
		}

		// Token: 0x0600921A RID: 37402 RVA: 0x00253E3C File Offset: 0x0025203C
		public static LocalizedString EnableConversationsProcessingItems(string user)
		{
			return new LocalizedString("EnableConversationsProcessingItems", "ExA32C84", false, true, Strings.ResourceManager, new object[]
			{
				user
			});
		}

		// Token: 0x17002E93 RID: 11923
		// (get) Token: 0x0600921B RID: 37403 RVA: 0x00253E6B File Offset: 0x0025206B
		public static LocalizedString DlpPolicyContainsEmptyKeywords
		{
			get
			{
				return new LocalizedString("DlpPolicyContainsEmptyKeywords", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002E94 RID: 11924
		// (get) Token: 0x0600921C RID: 37404 RVA: 0x00253E89 File Offset: 0x00252089
		public static LocalizedString RoleDoesNotSupportExchangeCertificateTasksException
		{
			get
			{
				return new LocalizedString("RoleDoesNotSupportExchangeCertificateTasksException", "Ex4CE051", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002E95 RID: 11925
		// (get) Token: 0x0600921D RID: 37405 RVA: 0x00253EA7 File Offset: 0x002520A7
		public static LocalizedString RunningAspNetRegIis
		{
			get
			{
				return new LocalizedString("RunningAspNetRegIis", "ExC9B897", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600921E RID: 37406 RVA: 0x00253EC8 File Offset: 0x002520C8
		public static LocalizedString FailedToRemoveDatabaseSection(string database)
		{
			return new LocalizedString("FailedToRemoveDatabaseSection", "", false, false, Strings.ResourceManager, new object[]
			{
				database
			});
		}

		// Token: 0x0600921F RID: 37407 RVA: 0x00253EF8 File Offset: 0x002520F8
		public static LocalizedString FailToValidateSubscripionPrincipalOnEdge(string user, string message)
		{
			return new LocalizedString("FailToValidateSubscripionPrincipalOnEdge", "Ex591719", false, true, Strings.ResourceManager, new object[]
			{
				user,
				message
			});
		}

		// Token: 0x17002E96 RID: 11926
		// (get) Token: 0x06009220 RID: 37408 RVA: 0x00253F2B File Offset: 0x0025212B
		public static LocalizedString MultipleOnPremisesOrganizationsFoundException
		{
			get
			{
				return new LocalizedString("MultipleOnPremisesOrganizationsFoundException", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009221 RID: 37409 RVA: 0x00253F4C File Offset: 0x0025214C
		public static LocalizedString FailedToGetElcUserConfigurationFromService(string responseclass, string code, string error)
		{
			return new LocalizedString("FailedToGetElcUserConfigurationFromService", "", false, false, Strings.ResourceManager, new object[]
			{
				responseclass,
				code,
				error
			});
		}

		// Token: 0x06009222 RID: 37410 RVA: 0x00253F84 File Offset: 0x00252184
		public static LocalizedString WarningRoleEntryAlreadyExists(string roleId, string entryName)
		{
			return new LocalizedString("WarningRoleEntryAlreadyExists", "ExD64134", false, true, Strings.ResourceManager, new object[]
			{
				roleId,
				entryName
			});
		}

		// Token: 0x06009223 RID: 37411 RVA: 0x00253FB8 File Offset: 0x002521B8
		public static LocalizedString VerboseMailboxDelegateAdded(string delegateUser, string principalUser)
		{
			return new LocalizedString("VerboseMailboxDelegateAdded", "ExB17C5F", false, true, Strings.ResourceManager, new object[]
			{
				delegateUser,
				principalUser
			});
		}

		// Token: 0x06009224 RID: 37412 RVA: 0x00253FEC File Offset: 0x002521EC
		public static LocalizedString ConfirmationMessageRemoveEmailAddressPolicy(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveEmailAddressPolicy", "Ex4BFE79", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x17002E97 RID: 11927
		// (get) Token: 0x06009225 RID: 37413 RVA: 0x0025401B File Offset: 0x0025221B
		public static LocalizedString SetupProgressStoppingTransportLogSearchService
		{
			get
			{
				return new LocalizedString("SetupProgressStoppingTransportLogSearchService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002E98 RID: 11928
		// (get) Token: 0x06009226 RID: 37414 RVA: 0x00254039 File Offset: 0x00252239
		public static LocalizedString CopyStatusFailedAndSuspended
		{
			get
			{
				return new LocalizedString("CopyStatusFailedAndSuspended", "Ex1F76A0", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002E99 RID: 11929
		// (get) Token: 0x06009227 RID: 37415 RVA: 0x00254057 File Offset: 0x00252257
		public static LocalizedString ErrorStorageMailboxDatabaseVersionUnsupported
		{
			get
			{
				return new LocalizedString("ErrorStorageMailboxDatabaseVersionUnsupported", "Ex43F1B1", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009228 RID: 37416 RVA: 0x00254078 File Offset: 0x00252278
		public static LocalizedString ConfirmationMessageRemoveLinkedUser(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveLinkedUser", "Ex83FD72", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x06009229 RID: 37417 RVA: 0x002540A8 File Offset: 0x002522A8
		public static LocalizedString VerboseRemoveWSManGlobalModule(string name, string file)
		{
			return new LocalizedString("VerboseRemoveWSManGlobalModule", "ExCA7D7C", false, true, Strings.ResourceManager, new object[]
			{
				name,
				file
			});
		}

		// Token: 0x17002E9A RID: 11930
		// (get) Token: 0x0600922A RID: 37418 RVA: 0x002540DB File Offset: 0x002522DB
		public static LocalizedString ProvisioningRequestAlreadyStarted
		{
			get
			{
				return new LocalizedString("ProvisioningRequestAlreadyStarted", "Ex1FDB63", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600922B RID: 37419 RVA: 0x002540FC File Offset: 0x002522FC
		public static LocalizedString WarningCouldNotCreateDefaultRoleAssignment(string error)
		{
			return new LocalizedString("WarningCouldNotCreateDefaultRoleAssignment", "", false, false, Strings.ResourceManager, new object[]
			{
				error
			});
		}

		// Token: 0x17002E9B RID: 11931
		// (get) Token: 0x0600922C RID: 37420 RVA: 0x0025412B File Offset: 0x0025232B
		public static LocalizedString CasHealthOwaDoLanguageSelection
		{
			get
			{
				return new LocalizedString("CasHealthOwaDoLanguageSelection", "ExFD0D0F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600922D RID: 37421 RVA: 0x0025414C File Offset: 0x0025234C
		public static LocalizedString ConfirmationMessageSetTransportServer(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetTransportServer", "ExE13B1D", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x0600922E RID: 37422 RVA: 0x0025417C File Offset: 0x0025237C
		public static LocalizedString NoRemoteInstallPath(string s)
		{
			return new LocalizedString("NoRemoteInstallPath", "", false, false, Strings.ResourceManager, new object[]
			{
				s
			});
		}

		// Token: 0x17002E9C RID: 11932
		// (get) Token: 0x0600922F RID: 37423 RVA: 0x002541AB File Offset: 0x002523AB
		public static LocalizedString SetupProgressStartingW3SVCService
		{
			get
			{
				return new LocalizedString("SetupProgressStartingW3SVCService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009230 RID: 37424 RVA: 0x002541CC File Offset: 0x002523CC
		public static LocalizedString AccessStoreError(string detailedInformation)
		{
			return new LocalizedString("AccessStoreError", "Ex4C4CCA", false, true, Strings.ResourceManager, new object[]
			{
				detailedInformation
			});
		}

		// Token: 0x06009231 RID: 37425 RVA: 0x002541FC File Offset: 0x002523FC
		public static LocalizedString ErrorMRSIsDownlevel(string serverName, string serverVersion)
		{
			return new LocalizedString("ErrorMRSIsDownlevel", "Ex88C422", false, true, Strings.ResourceManager, new object[]
			{
				serverName,
				serverVersion
			});
		}

		// Token: 0x17002E9D RID: 11933
		// (get) Token: 0x06009232 RID: 37426 RVA: 0x0025422F File Offset: 0x0025242F
		public static LocalizedString NotFederated
		{
			get
			{
				return new LocalizedString("NotFederated", "Ex9E44D1", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002E9E RID: 11934
		// (get) Token: 0x06009233 RID: 37427 RVA: 0x0025424D File Offset: 0x0025244D
		public static LocalizedString ImportDlpPolicyFileDataIsNull
		{
			get
			{
				return new LocalizedString("ImportDlpPolicyFileDataIsNull", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002E9F RID: 11935
		// (get) Token: 0x06009234 RID: 37428 RVA: 0x0025426B File Offset: 0x0025246B
		public static LocalizedString SetupProgressCreateDefaultOWAMailboxPolicy
		{
			get
			{
				return new LocalizedString("SetupProgressCreateDefaultOWAMailboxPolicy", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009235 RID: 37429 RVA: 0x0025428C File Offset: 0x0025248C
		public static LocalizedString AgentDoesNotExist(string name)
		{
			return new LocalizedString("AgentDoesNotExist", "Ex04DD94", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x17002EA0 RID: 11936
		// (get) Token: 0x06009236 RID: 37430 RVA: 0x002542BB File Offset: 0x002524BB
		public static LocalizedString StartPostFileCopyDescription
		{
			get
			{
				return new LocalizedString("StartPostFileCopyDescription", "Ex7D19DC", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009237 RID: 37431 RVA: 0x002542DC File Offset: 0x002524DC
		public static LocalizedString ErrorPSTFileNotExist(string path)
		{
			return new LocalizedString("ErrorPSTFileNotExist", "ExF6EC47", false, true, Strings.ResourceManager, new object[]
			{
				path
			});
		}

		// Token: 0x17002EA1 RID: 11937
		// (get) Token: 0x06009238 RID: 37432 RVA: 0x0025430B File Offset: 0x0025250B
		public static LocalizedString ErrorNoAccountNamespace
		{
			get
			{
				return new LocalizedString("ErrorNoAccountNamespace", "Ex0ADCDD", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002EA2 RID: 11938
		// (get) Token: 0x06009239 RID: 37433 RVA: 0x00254329 File Offset: 0x00252529
		public static LocalizedString Imap4BeServiceDisplayName
		{
			get
			{
				return new LocalizedString("Imap4BeServiceDisplayName", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002EA3 RID: 11939
		// (get) Token: 0x0600923A RID: 37434 RVA: 0x00254347 File Offset: 0x00252547
		public static LocalizedString MessageTypeOof
		{
			get
			{
				return new LocalizedString("MessageTypeOof", "Ex32FE16", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600923B RID: 37435 RVA: 0x00254368 File Offset: 0x00252568
		public static LocalizedString ErrorServerIsNotCasServer(string server)
		{
			return new LocalizedString("ErrorServerIsNotCasServer", "Ex93723D", false, true, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		// Token: 0x17002EA4 RID: 11940
		// (get) Token: 0x0600923C RID: 37436 RVA: 0x00254397 File Offset: 0x00252597
		public static LocalizedString MtrtAddManagerAsRecipient
		{
			get
			{
				return new LocalizedString("MtrtAddManagerAsRecipient", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002EA5 RID: 11941
		// (get) Token: 0x0600923D RID: 37437 RVA: 0x002543B5 File Offset: 0x002525B5
		public static LocalizedString ErrorInvalidBase64String
		{
			get
			{
				return new LocalizedString("ErrorInvalidBase64String", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600923E RID: 37438 RVA: 0x002543D4 File Offset: 0x002525D4
		public static LocalizedString CannotReadRolesFromRegistry(string errorMsg)
		{
			return new LocalizedString("CannotReadRolesFromRegistry", "ExA30854", false, true, Strings.ResourceManager, new object[]
			{
				errorMsg
			});
		}

		// Token: 0x0600923F RID: 37439 RVA: 0x00254404 File Offset: 0x00252604
		public static LocalizedString InvalidMessageDataClassificationParameterConfidenceExceedsMaxAllowed(string paramName, int maxAllowedValue)
		{
			return new LocalizedString("InvalidMessageDataClassificationParameterConfidenceExceedsMaxAllowed", "", false, false, Strings.ResourceManager, new object[]
			{
				paramName,
				maxAllowedValue
			});
		}

		// Token: 0x06009240 RID: 37440 RVA: 0x0025443C File Offset: 0x0025263C
		public static LocalizedString FormsAuthenticationErrorPathBusyException(string metabasePath)
		{
			return new LocalizedString("FormsAuthenticationErrorPathBusyException", "ExE1D70D", false, true, Strings.ResourceManager, new object[]
			{
				metabasePath
			});
		}

		// Token: 0x17002EA6 RID: 11942
		// (get) Token: 0x06009241 RID: 37441 RVA: 0x0025446B File Offset: 0x0025266B
		public static LocalizedString ErrorSuspendCommentWithoutSuspend
		{
			get
			{
				return new LocalizedString("ErrorSuspendCommentWithoutSuspend", "ExB99F6C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009242 RID: 37442 RVA: 0x0025448C File Offset: 0x0025268C
		public static LocalizedString ErrorUserIsAlreadyBeingMoved(string mailbox, string target)
		{
			return new LocalizedString("ErrorUserIsAlreadyBeingMoved", "Ex8DC9F2", false, true, Strings.ResourceManager, new object[]
			{
				mailbox,
				target
			});
		}

		// Token: 0x17002EA7 RID: 11943
		// (get) Token: 0x06009243 RID: 37443 RVA: 0x002544BF File Offset: 0x002526BF
		public static LocalizedString CasHealthLatency
		{
			get
			{
				return new LocalizedString("CasHealthLatency", "Ex914CF2", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009244 RID: 37444 RVA: 0x002544E0 File Offset: 0x002526E0
		public static LocalizedString DatabasesRedundancyCheckFailed(string nodeName, string error)
		{
			return new LocalizedString("DatabasesRedundancyCheckFailed", "", false, false, Strings.ResourceManager, new object[]
			{
				nodeName,
				error
			});
		}

		// Token: 0x17002EA8 RID: 11944
		// (get) Token: 0x06009245 RID: 37445 RVA: 0x00254513 File Offset: 0x00252713
		public static LocalizedString BridgeheadRoleDisplayName
		{
			get
			{
				return new LocalizedString("BridgeheadRoleDisplayName", "Ex18F6DF", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002EA9 RID: 11945
		// (get) Token: 0x06009246 RID: 37446 RVA: 0x00254531 File Offset: 0x00252731
		public static LocalizedString ErrorEnterpriseOrgOutOfDate
		{
			get
			{
				return new LocalizedString("ErrorEnterpriseOrgOutOfDate", "Ex49A48F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009247 RID: 37447 RVA: 0x00254550 File Offset: 0x00252750
		public static LocalizedString VerboseSetSystemAttendantObject(string idSA, string idDatabase)
		{
			return new LocalizedString("VerboseSetSystemAttendantObject", "Ex6455E0", false, true, Strings.ResourceManager, new object[]
			{
				idSA,
				idDatabase
			});
		}

		// Token: 0x17002EAA RID: 11946
		// (get) Token: 0x06009248 RID: 37448 RVA: 0x00254583 File Offset: 0x00252783
		public static LocalizedString ErrorElcUserConfigurationServiceCall
		{
			get
			{
				return new LocalizedString("ErrorElcUserConfigurationServiceCall", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002EAB RID: 11947
		// (get) Token: 0x06009249 RID: 37449 RVA: 0x002545A1 File Offset: 0x002527A1
		public static LocalizedString ErrorAssociatedUserMailboxExistInDC
		{
			get
			{
				return new LocalizedString("ErrorAssociatedUserMailboxExistInDC", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600924A RID: 37450 RVA: 0x002545C0 File Offset: 0x002527C0
		public static LocalizedString InfoPrivilegeAlreadyPresent(string account, string right)
		{
			return new LocalizedString("InfoPrivilegeAlreadyPresent", "Ex1F304D", false, true, Strings.ResourceManager, new object[]
			{
				account,
				right
			});
		}

		// Token: 0x0600924B RID: 37451 RVA: 0x002545F4 File Offset: 0x002527F4
		public static LocalizedString ErrorOfflineAddressBookNotFound(string idStringValue)
		{
			return new LocalizedString("ErrorOfflineAddressBookNotFound", "ExFFF1D3", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		// Token: 0x0600924C RID: 37452 RVA: 0x00254624 File Offset: 0x00252824
		public static LocalizedString ConfigFileNotFoundException(string p1, string p2)
		{
			return new LocalizedString("ConfigFileNotFoundException", "Ex545CA8", false, true, Strings.ResourceManager, new object[]
			{
				p1,
				p2
			});
		}

		// Token: 0x0600924D RID: 37453 RVA: 0x00254658 File Offset: 0x00252858
		public static LocalizedString VerboseParsingOPathFilterFailed(string filter, string err)
		{
			return new LocalizedString("VerboseParsingOPathFilterFailed", "ExA52D2E", false, true, Strings.ResourceManager, new object[]
			{
				filter,
				err
			});
		}

		// Token: 0x0600924E RID: 37454 RVA: 0x0025468C File Offset: 0x0025288C
		public static LocalizedString MigrationMaxConcurrentConnectionsVerificationFailed(string value, string minValue, string maxValue)
		{
			return new LocalizedString("MigrationMaxConcurrentConnectionsVerificationFailed", "", false, false, Strings.ResourceManager, new object[]
			{
				value,
				minValue,
				maxValue
			});
		}

		// Token: 0x0600924F RID: 37455 RVA: 0x002546C4 File Offset: 0x002528C4
		public static LocalizedString ConfirmationMessageRemoveTransportProcessingQuotaOverride(Guid externalDirectoryOrganizationId)
		{
			return new LocalizedString("ConfirmationMessageRemoveTransportProcessingQuotaOverride", "", false, false, Strings.ResourceManager, new object[]
			{
				externalDirectoryOrganizationId
			});
		}

		// Token: 0x06009250 RID: 37456 RVA: 0x002546F8 File Offset: 0x002528F8
		public static LocalizedString ErrorMinVersionGreaterThanMaxVersion(string minVersion, string maxVersion)
		{
			return new LocalizedString("ErrorMinVersionGreaterThanMaxVersion", "", false, false, Strings.ResourceManager, new object[]
			{
				minVersion,
				maxVersion
			});
		}

		// Token: 0x17002EAC RID: 11948
		// (get) Token: 0x06009251 RID: 37457 RVA: 0x0025472B File Offset: 0x0025292B
		public static LocalizedString ErrorPropertyParameter
		{
			get
			{
				return new LocalizedString("ErrorPropertyParameter", "Ex402097", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002EAD RID: 11949
		// (get) Token: 0x06009252 RID: 37458 RVA: 0x00254749 File Offset: 0x00252949
		public static LocalizedString ErrorMsnIsNotSupportedInEnterprise
		{
			get
			{
				return new LocalizedString("ErrorMsnIsNotSupportedInEnterprise", "ExF6FDF7", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002EAE RID: 11950
		// (get) Token: 0x06009253 RID: 37459 RVA: 0x00254767 File Offset: 0x00252967
		public static LocalizedString LongAddressesEnabledOnEdge
		{
			get
			{
				return new LocalizedString("LongAddressesEnabledOnEdge", "ExBFFA27", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009254 RID: 37460 RVA: 0x00254788 File Offset: 0x00252988
		public static LocalizedString SiteMailboxLanguageSet(string language)
		{
			return new LocalizedString("SiteMailboxLanguageSet", "", false, false, Strings.ResourceManager, new object[]
			{
				language
			});
		}

		// Token: 0x17002EAF RID: 11951
		// (get) Token: 0x06009255 RID: 37461 RVA: 0x002547B7 File Offset: 0x002529B7
		public static LocalizedString ComplianceAuditServiceDescription
		{
			get
			{
				return new LocalizedString("ComplianceAuditServiceDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009256 RID: 37462 RVA: 0x002547D8 File Offset: 0x002529D8
		public static LocalizedString MailboxAssistantsServiceStopped(string serverName)
		{
			return new LocalizedString("MailboxAssistantsServiceStopped", "ExA9397F", false, true, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		// Token: 0x17002EB0 RID: 11952
		// (get) Token: 0x06009257 RID: 37463 RVA: 0x00254807 File Offset: 0x00252A07
		public static LocalizedString InfoRmsOnlineAuthenticationCertificateChecked
		{
			get
			{
				return new LocalizedString("InfoRmsOnlineAuthenticationCertificateChecked", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009258 RID: 37464 RVA: 0x00254828 File Offset: 0x00252A28
		public static LocalizedString WarningMessageSetWebServicesVirtualDirectoryWindowsAuthentication(string Identity)
		{
			return new LocalizedString("WarningMessageSetWebServicesVirtualDirectoryWindowsAuthentication", "ExF76263", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x06009259 RID: 37465 RVA: 0x00254858 File Offset: 0x00252A58
		public static LocalizedString ErrorInvalidIso3166Alpha2Code(string code)
		{
			return new LocalizedString("ErrorInvalidIso3166Alpha2Code", "", false, false, Strings.ResourceManager, new object[]
			{
				code
			});
		}

		// Token: 0x0600925A RID: 37466 RVA: 0x00254888 File Offset: 0x00252A88
		public static LocalizedString ErrorCannotConnectToMailboxDatabase(string mdb)
		{
			return new LocalizedString("ErrorCannotConnectToMailboxDatabase", "ExE63F9A", false, true, Strings.ResourceManager, new object[]
			{
				mdb
			});
		}

		// Token: 0x0600925B RID: 37467 RVA: 0x002548B8 File Offset: 0x00252AB8
		public static LocalizedString CasHealthWebAppLiveIdError(Uri requestUri, string exception)
		{
			return new LocalizedString("CasHealthWebAppLiveIdError", "ExD811D5", false, true, Strings.ResourceManager, new object[]
			{
				requestUri,
				exception
			});
		}

		// Token: 0x0600925C RID: 37468 RVA: 0x002548EC File Offset: 0x00252AEC
		public static LocalizedString InvalidMailboxContainerGuid(string specifiedMailboxContainerGuid, string linkedMailboxContainerGuid)
		{
			return new LocalizedString("InvalidMailboxContainerGuid", "", false, false, Strings.ResourceManager, new object[]
			{
				specifiedMailboxContainerGuid,
				linkedMailboxContainerGuid
			});
		}

		// Token: 0x0600925D RID: 37469 RVA: 0x00254920 File Offset: 0x00252B20
		public static LocalizedString ComplianceSearchSendStartMessageError(string workload)
		{
			return new LocalizedString("ComplianceSearchSendStartMessageError", "", false, false, Strings.ResourceManager, new object[]
			{
				workload
			});
		}

		// Token: 0x17002EB1 RID: 11953
		// (get) Token: 0x0600925E RID: 37470 RVA: 0x0025494F File Offset: 0x00252B4F
		public static LocalizedString ErrorSoftDeletedParmatersConflict
		{
			get
			{
				return new LocalizedString("ErrorSoftDeletedParmatersConflict", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002EB2 RID: 11954
		// (get) Token: 0x0600925F RID: 37471 RVA: 0x0025496D File Offset: 0x00252B6D
		public static LocalizedString DefaultGlobalAddressList
		{
			get
			{
				return new LocalizedString("DefaultGlobalAddressList", "Ex7BE90C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002EB3 RID: 11955
		// (get) Token: 0x06009260 RID: 37472 RVA: 0x0025498B File Offset: 0x00252B8B
		public static LocalizedString NoCASE15SP1ServersFoundException
		{
			get
			{
				return new LocalizedString("NoCASE15SP1ServersFoundException", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009261 RID: 37473 RVA: 0x002549AC File Offset: 0x00252BAC
		public static LocalizedString TestSearchDatabaseIsNull(string database)
		{
			return new LocalizedString("TestSearchDatabaseIsNull", "Ex765031", false, true, Strings.ResourceManager, new object[]
			{
				database
			});
		}

		// Token: 0x06009262 RID: 37474 RVA: 0x002549DC File Offset: 0x00252BDC
		public static LocalizedString ErrorLogFolderPathNotUniqueUnderTheSameNode(string filePath, string serverName)
		{
			return new LocalizedString("ErrorLogFolderPathNotUniqueUnderTheSameNode", "ExFE89E0", false, true, Strings.ResourceManager, new object[]
			{
				filePath,
				serverName
			});
		}

		// Token: 0x06009263 RID: 37475 RVA: 0x00254A10 File Offset: 0x00252C10
		public static LocalizedString DebugResolvingDomainAccount(string userid, string domain, string sam)
		{
			return new LocalizedString("DebugResolvingDomainAccount", "ExCFC36A", false, true, Strings.ResourceManager, new object[]
			{
				userid,
				domain,
				sam
			});
		}

		// Token: 0x06009264 RID: 37476 RVA: 0x00254A48 File Offset: 0x00252C48
		public static LocalizedString VerboseMRSRequestDistinguishedName(string id)
		{
			return new LocalizedString("VerboseMRSRequestDistinguishedName", "", false, false, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x17002EB4 RID: 11956
		// (get) Token: 0x06009265 RID: 37477 RVA: 0x00254A77 File Offset: 0x00252C77
		public static LocalizedString UnableToRetrieveArchivePolicyTag
		{
			get
			{
				return new LocalizedString("UnableToRetrieveArchivePolicyTag", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009266 RID: 37478 RVA: 0x00254A98 File Offset: 0x00252C98
		public static LocalizedString DagTaskClusterServiceNotRunningOnNodeException(string nodeName)
		{
			return new LocalizedString("DagTaskClusterServiceNotRunningOnNodeException", "", false, false, Strings.ResourceManager, new object[]
			{
				nodeName
			});
		}

		// Token: 0x06009267 RID: 37479 RVA: 0x00254AC8 File Offset: 0x00252CC8
		public static LocalizedString ConfirmCreatingExclusiveScope(string scope)
		{
			return new LocalizedString("ConfirmCreatingExclusiveScope", "Ex4516CC", false, true, Strings.ResourceManager, new object[]
			{
				scope
			});
		}

		// Token: 0x17002EB5 RID: 11957
		// (get) Token: 0x06009268 RID: 37480 RVA: 0x00254AF7 File Offset: 0x00252CF7
		public static LocalizedString ErrorParametersCannotHaveEmbeddedDot
		{
			get
			{
				return new LocalizedString("ErrorParametersCannotHaveEmbeddedDot", "Ex0FE191", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009269 RID: 37481 RVA: 0x00254B18 File Offset: 0x00252D18
		public static LocalizedString GeneratedWatsonReportForHungService(string serviceName)
		{
			return new LocalizedString("GeneratedWatsonReportForHungService", "ExFB7082", false, true, Strings.ResourceManager, new object[]
			{
				serviceName
			});
		}

		// Token: 0x0600926A RID: 37482 RVA: 0x00254B48 File Offset: 0x00252D48
		public static LocalizedString ErrorSourcePrimaryMailboxDoesNotExist(string user)
		{
			return new LocalizedString("ErrorSourcePrimaryMailboxDoesNotExist", "Ex5DC67F", false, true, Strings.ResourceManager, new object[]
			{
				user
			});
		}

		// Token: 0x0600926B RID: 37483 RVA: 0x00254B78 File Offset: 0x00252D78
		public static LocalizedString ErrorArchiveDumpsterExceedsTargetQuota(string mailboxSize, string targetQuota)
		{
			return new LocalizedString("ErrorArchiveDumpsterExceedsTargetQuota", "Ex5FE4E6", false, true, Strings.ResourceManager, new object[]
			{
				mailboxSize,
				targetQuota
			});
		}

		// Token: 0x0600926C RID: 37484 RVA: 0x00254BAC File Offset: 0x00252DAC
		public static LocalizedString ErrorNoAvailableDefaultFilePath(string fileExt)
		{
			return new LocalizedString("ErrorNoAvailableDefaultFilePath", "Ex9FD64A", false, true, Strings.ResourceManager, new object[]
			{
				fileExt
			});
		}

		// Token: 0x17002EB6 RID: 11958
		// (get) Token: 0x0600926D RID: 37485 RVA: 0x00254BDB File Offset: 0x00252DDB
		public static LocalizedString SetupProgressCreateAcceptedDomainsContainer
		{
			get
			{
				return new LocalizedString("SetupProgressCreateAcceptedDomainsContainer", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600926E RID: 37486 RVA: 0x00254BFC File Offset: 0x00252DFC
		public static LocalizedString InterceptorErrorInvalidEventActionPair(string evt, string action, string validActions)
		{
			return new LocalizedString("InterceptorErrorInvalidEventActionPair", "", false, false, Strings.ResourceManager, new object[]
			{
				evt,
				action,
				validActions
			});
		}

		// Token: 0x17002EB7 RID: 11959
		// (get) Token: 0x0600926F RID: 37487 RVA: 0x00254C33 File Offset: 0x00252E33
		public static LocalizedString ContinueMountWhenDBFilesNotExist
		{
			get
			{
				return new LocalizedString("ContinueMountWhenDBFilesNotExist", "Ex532CC3", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009270 RID: 37488 RVA: 0x00254C54 File Offset: 0x00252E54
		public static LocalizedString UnableToMoveMailboxWithSubscriptions(string name)
		{
			return new LocalizedString("UnableToMoveMailboxWithSubscriptions", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x17002EB8 RID: 11960
		// (get) Token: 0x06009271 RID: 37489 RVA: 0x00254C83 File Offset: 0x00252E83
		public static LocalizedString ExceptionRetryIntervalInvalid
		{
			get
			{
				return new LocalizedString("ExceptionRetryIntervalInvalid", "ExAC88EE", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002EB9 RID: 11961
		// (get) Token: 0x06009272 RID: 37490 RVA: 0x00254CA1 File Offset: 0x00252EA1
		public static LocalizedString InvalidRuleName
		{
			get
			{
				return new LocalizedString("InvalidRuleName", "Ex20E77C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009273 RID: 37491 RVA: 0x00254CC0 File Offset: 0x00252EC0
		public static LocalizedString ErrorPathNotExistsOnServer(string path, string serverName)
		{
			return new LocalizedString("ErrorPathNotExistsOnServer", "ExDBF912", false, true, Strings.ResourceManager, new object[]
			{
				path,
				serverName
			});
		}

		// Token: 0x06009274 RID: 37492 RVA: 0x00254CF4 File Offset: 0x00252EF4
		public static LocalizedString RuleCollectionAlreadyExists(string name)
		{
			return new LocalizedString("RuleCollectionAlreadyExists", "Ex32B279", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x06009275 RID: 37493 RVA: 0x00254D24 File Offset: 0x00252F24
		public static LocalizedString CouldNotUpgradeRetentionTrigger(string setting, string newTrigger, string oldTrigger)
		{
			return new LocalizedString("CouldNotUpgradeRetentionTrigger", "Ex4219E8", false, true, Strings.ResourceManager, new object[]
			{
				setting,
				newTrigger,
				oldTrigger
			});
		}

		// Token: 0x17002EBA RID: 11962
		// (get) Token: 0x06009276 RID: 37494 RVA: 0x00254D5B File Offset: 0x00252F5B
		public static LocalizedString DetermineSourceMailbox
		{
			get
			{
				return new LocalizedString("DetermineSourceMailbox", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009277 RID: 37495 RVA: 0x00254D7C File Offset: 0x00252F7C
		public static LocalizedString ClassificationRuleCollectionNonUniqueLangCodesInRulePackDescriptor(string nonUniqueLangCodes)
		{
			return new LocalizedString("ClassificationRuleCollectionNonUniqueLangCodesInRulePackDescriptor", "", false, false, Strings.ResourceManager, new object[]
			{
				nonUniqueLangCodes
			});
		}

		// Token: 0x17002EBB RID: 11963
		// (get) Token: 0x06009278 RID: 37496 RVA: 0x00254DAB File Offset: 0x00252FAB
		public static LocalizedString ProgressCopyingEdbFile
		{
			get
			{
				return new LocalizedString("ProgressCopyingEdbFile", "ExCDA831", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002EBC RID: 11964
		// (get) Token: 0x06009279 RID: 37497 RVA: 0x00254DC9 File Offset: 0x00252FC9
		public static LocalizedString MoveStatusSkipped
		{
			get
			{
				return new LocalizedString("MoveStatusSkipped", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600927A RID: 37498 RVA: 0x00254DE8 File Offset: 0x00252FE8
		public static LocalizedString ErrorUniversalGroupCannotHaveForeignSP(string universalGroup, string foreignSP)
		{
			return new LocalizedString("ErrorUniversalGroupCannotHaveForeignSP", "ExC03CC1", false, true, Strings.ResourceManager, new object[]
			{
				universalGroup,
				foreignSP
			});
		}

		// Token: 0x17002EBD RID: 11965
		// (get) Token: 0x0600927B RID: 37499 RVA: 0x00254E1B File Offset: 0x0025301B
		public static LocalizedString SetupProgressStartingHygieneUpdateService
		{
			get
			{
				return new LocalizedString("SetupProgressStartingHygieneUpdateService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600927C RID: 37500 RVA: 0x00254E3C File Offset: 0x0025303C
		public static LocalizedString ConfirmationMessageAutoTagCrossValidate(string Identity)
		{
			return new LocalizedString("ConfirmationMessageAutoTagCrossValidate", "Ex5ABB15", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x17002EBE RID: 11966
		// (get) Token: 0x0600927D RID: 37501 RVA: 0x00254E6B File Offset: 0x0025306B
		public static LocalizedString IsIntegQueueFull
		{
			get
			{
				return new LocalizedString("IsIntegQueueFull", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600927E RID: 37502 RVA: 0x00254E8C File Offset: 0x0025308C
		public static LocalizedString InvalidCidrRangeId(string ipRange, int minCidrLength)
		{
			return new LocalizedString("InvalidCidrRangeId", "", false, false, Strings.ResourceManager, new object[]
			{
				ipRange,
				minCidrLength
			});
		}

		// Token: 0x17002EBF RID: 11967
		// (get) Token: 0x0600927F RID: 37503 RVA: 0x00254EC4 File Offset: 0x002530C4
		public static LocalizedString ErrorInvalidEndpointParameterReasonUsedForConnectionTest
		{
			get
			{
				return new LocalizedString("ErrorInvalidEndpointParameterReasonUsedForConnectionTest", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009280 RID: 37504 RVA: 0x00254EE4 File Offset: 0x002530E4
		public static LocalizedString TargetMailboxInSourceIsSkipped(string identity)
		{
			return new LocalizedString("TargetMailboxInSourceIsSkipped", "Ex493753", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x17002EC0 RID: 11968
		// (get) Token: 0x06009281 RID: 37505 RVA: 0x00254F13 File Offset: 0x00253113
		public static LocalizedString StartPostSetupDescription
		{
			get
			{
				return new LocalizedString("StartPostSetupDescription", "ExA33F67", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002EC1 RID: 11969
		// (get) Token: 0x06009282 RID: 37506 RVA: 0x00254F31 File Offset: 0x00253131
		public static LocalizedString StatusSpecifiedForProvisionedServer
		{
			get
			{
				return new LocalizedString("StatusSpecifiedForProvisionedServer", "Ex6DA135", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002EC2 RID: 11970
		// (get) Token: 0x06009283 RID: 37507 RVA: 0x00254F4F File Offset: 0x0025314F
		public static LocalizedString DatabasesReplayKeepingUpCheckDesc
		{
			get
			{
				return new LocalizedString("DatabasesReplayKeepingUpCheckDesc", "Ex1439FE", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009284 RID: 37508 RVA: 0x00254F70 File Offset: 0x00253170
		public static LocalizedString ProcessingAceStatus(string obj)
		{
			return new LocalizedString("ProcessingAceStatus", "Ex4FB1A1", false, true, Strings.ResourceManager, new object[]
			{
				obj
			});
		}

		// Token: 0x17002EC3 RID: 11971
		// (get) Token: 0x06009285 RID: 37509 RVA: 0x00254F9F File Offset: 0x0025319F
		public static LocalizedString RemoveRuleSyncAcrossDifferentVersionsNeeded
		{
			get
			{
				return new LocalizedString("RemoveRuleSyncAcrossDifferentVersionsNeeded", "Ex406C0C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009286 RID: 37510 RVA: 0x00254FC0 File Offset: 0x002531C0
		public static LocalizedString messageADServerNotFoundException(string serverId)
		{
			return new LocalizedString("messageADServerNotFoundException", "", false, false, Strings.ResourceManager, new object[]
			{
				serverId
			});
		}

		// Token: 0x06009287 RID: 37511 RVA: 0x00254FF0 File Offset: 0x002531F0
		public static LocalizedString messageSystemMailboxNotFoundException(string systemMailbox, string database)
		{
			return new LocalizedString("messageSystemMailboxNotFoundException", "", false, false, Strings.ResourceManager, new object[]
			{
				systemMailbox,
				database
			});
		}

		// Token: 0x17002EC4 RID: 11972
		// (get) Token: 0x06009288 RID: 37512 RVA: 0x00255023 File Offset: 0x00253223
		public static LocalizedString LocalFederatedDomainsAreMissingFromTheRemoteOrganizationRelationsipDomains
		{
			get
			{
				return new LocalizedString("LocalFederatedDomainsAreMissingFromTheRemoteOrganizationRelationsipDomains", "Ex81A9B4", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009289 RID: 37513 RVA: 0x00255044 File Offset: 0x00253244
		public static LocalizedString ErrorUnableToResolvePublicToGroup(string userName, string exception)
		{
			return new LocalizedString("ErrorUnableToResolvePublicToGroup", "", false, false, Strings.ResourceManager, new object[]
			{
				userName,
				exception
			});
		}

		// Token: 0x0600928A RID: 37514 RVA: 0x00255078 File Offset: 0x00253278
		public static LocalizedString InterceptorErrorInvalidBehavior(string action, string valid)
		{
			return new LocalizedString("InterceptorErrorInvalidBehavior", "", false, false, Strings.ResourceManager, new object[]
			{
				action,
				valid
			});
		}

		// Token: 0x17002EC5 RID: 11973
		// (get) Token: 0x0600928B RID: 37515 RVA: 0x002550AB File Offset: 0x002532AB
		public static LocalizedString DetailsTemplateMailboxAgent
		{
			get
			{
				return new LocalizedString("DetailsTemplateMailboxAgent", "Ex87050A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600928C RID: 37516 RVA: 0x002550CC File Offset: 0x002532CC
		public static LocalizedString ErrorRemoveGroupRoleAssignment(string user, string role, string group)
		{
			return new LocalizedString("ErrorRemoveGroupRoleAssignment", "Ex2870DA", false, true, Strings.ResourceManager, new object[]
			{
				user,
				role,
				group
			});
		}

		// Token: 0x0600928D RID: 37517 RVA: 0x00255104 File Offset: 0x00253304
		public static LocalizedString CrossPremiseNoEgressTargets(string server)
		{
			return new LocalizedString("CrossPremiseNoEgressTargets", "Ex5EC3EB", false, true, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		// Token: 0x0600928E RID: 37518 RVA: 0x00255134 File Offset: 0x00253334
		public static LocalizedString RemoveDagDestroyedCluster(string clusterName, string lastServer, string dagName)
		{
			return new LocalizedString("RemoveDagDestroyedCluster", "", false, false, Strings.ResourceManager, new object[]
			{
				clusterName,
				lastServer,
				dagName
			});
		}

		// Token: 0x17002EC6 RID: 11974
		// (get) Token: 0x0600928F RID: 37519 RVA: 0x0025516B File Offset: 0x0025336B
		public static LocalizedString CalendarNotificationConfirmation
		{
			get
			{
				return new LocalizedString("CalendarNotificationConfirmation", "Ex61272F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009290 RID: 37520 RVA: 0x0025518C File Offset: 0x0025338C
		public static LocalizedString ErrorCannotAssignPartnerAppRole(string role, string assignee)
		{
			return new LocalizedString("ErrorCannotAssignPartnerAppRole", "", false, false, Strings.ResourceManager, new object[]
			{
				role,
				assignee
			});
		}

		// Token: 0x06009291 RID: 37521 RVA: 0x002551C0 File Offset: 0x002533C0
		public static LocalizedString ConfirmationMessageEnableTransportRule(string Identity)
		{
			return new LocalizedString("ConfirmationMessageEnableTransportRule", "Ex20D4F3", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x06009292 RID: 37522 RVA: 0x002551F0 File Offset: 0x002533F0
		public static LocalizedString UnableToAddE12DStoExSPermissionsException(string dom, string e12ds, string exs, string exsShort, string localdomdc, string rootdomdc)
		{
			return new LocalizedString("UnableToAddE12DStoExSPermissionsException", "Ex3BB3B9", false, true, Strings.ResourceManager, new object[]
			{
				dom,
				e12ds,
				exs,
				exsShort,
				localdomdc,
				rootdomdc
			});
		}

		// Token: 0x06009293 RID: 37523 RVA: 0x00255238 File Offset: 0x00253438
		public static LocalizedString WarningCouldNotRemoveRoleAssignment(string id, string error)
		{
			return new LocalizedString("WarningCouldNotRemoveRoleAssignment", "Ex647E7F", false, true, Strings.ResourceManager, new object[]
			{
				id,
				error
			});
		}

		// Token: 0x06009294 RID: 37524 RVA: 0x0025526C File Offset: 0x0025346C
		public static LocalizedString OpenPolicyFailedException(uint err, string account, string dom)
		{
			return new LocalizedString("OpenPolicyFailedException", "ExF3CB2F", false, true, Strings.ResourceManager, new object[]
			{
				err,
				account,
				dom
			});
		}

		// Token: 0x06009295 RID: 37525 RVA: 0x002552A8 File Offset: 0x002534A8
		public static LocalizedString PatchAttributeValue(string patchvalue)
		{
			return new LocalizedString("PatchAttributeValue", "ExCC505B", false, true, Strings.ResourceManager, new object[]
			{
				patchvalue
			});
		}

		// Token: 0x17002EC7 RID: 11975
		// (get) Token: 0x06009296 RID: 37526 RVA: 0x002552D7 File Offset: 0x002534D7
		public static LocalizedString InstallComplianceServiceTask
		{
			get
			{
				return new LocalizedString("InstallComplianceServiceTask", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009297 RID: 37527 RVA: 0x002552F8 File Offset: 0x002534F8
		public static LocalizedString MoveMailboxParameterError(string parameter, string error)
		{
			return new LocalizedString("MoveMailboxParameterError", "Ex956015", false, true, Strings.ResourceManager, new object[]
			{
				parameter,
				error
			});
		}

		// Token: 0x06009298 RID: 37528 RVA: 0x0025532C File Offset: 0x0025352C
		public static LocalizedString ErrorCouldNotFindRequest(string identity)
		{
			return new LocalizedString("ErrorCouldNotFindRequest", "Ex0EC886", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x06009299 RID: 37529 RVA: 0x0025535C File Offset: 0x0025355C
		public static LocalizedString ErrorPowerShellVdirAppPoolNotExist(string name, string configFile)
		{
			return new LocalizedString("ErrorPowerShellVdirAppPoolNotExist", "Ex8A1DA9", false, true, Strings.ResourceManager, new object[]
			{
				name,
				configFile
			});
		}

		// Token: 0x0600929A RID: 37530 RVA: 0x00255390 File Offset: 0x00253590
		public static LocalizedString InterceptorConfirmModifyingOlderVersion(string oldVersion, string newVersion)
		{
			return new LocalizedString("InterceptorConfirmModifyingOlderVersion", "", false, false, Strings.ResourceManager, new object[]
			{
				oldVersion,
				newVersion
			});
		}

		// Token: 0x17002EC8 RID: 11976
		// (get) Token: 0x0600929B RID: 37531 RVA: 0x002553C3 File Offset: 0x002535C3
		public static LocalizedString ErrorTpdCheckingFailed
		{
			get
			{
				return new LocalizedString("ErrorTpdCheckingFailed", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002EC9 RID: 11977
		// (get) Token: 0x0600929C RID: 37532 RVA: 0x002553E1 File Offset: 0x002535E1
		public static LocalizedString OpenDomainRoutingDisabled
		{
			get
			{
				return new LocalizedString("OpenDomainRoutingDisabled", "Ex2552C9", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002ECA RID: 11978
		// (get) Token: 0x0600929D RID: 37533 RVA: 0x002553FF File Offset: 0x002535FF
		public static LocalizedString BPALoadingLocalConfiguration
		{
			get
			{
				return new LocalizedString("BPALoadingLocalConfiguration", "ExC78B48", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600929E RID: 37534 RVA: 0x00255420 File Offset: 0x00253620
		public static LocalizedString FormsAuthenticationDeleteAccessDeniedException(string paths)
		{
			return new LocalizedString("FormsAuthenticationDeleteAccessDeniedException", "ExFAC54C", false, true, Strings.ResourceManager, new object[]
			{
				paths
			});
		}

		// Token: 0x0600929F RID: 37535 RVA: 0x00255450 File Offset: 0x00253650
		public static LocalizedString ExServerSGroupNotFoundException(string dn)
		{
			return new LocalizedString("ExServerSGroupNotFoundException", "Ex09B98D", false, true, Strings.ResourceManager, new object[]
			{
				dn
			});
		}

		// Token: 0x060092A0 RID: 37536 RVA: 0x00255480 File Offset: 0x00253680
		public static LocalizedString ErrorCannotUpdateReplicationLatency(string id, string dc)
		{
			return new LocalizedString("ErrorCannotUpdateReplicationLatency", "Ex0D143D", false, true, Strings.ResourceManager, new object[]
			{
				id,
				dc
			});
		}

		// Token: 0x060092A1 RID: 37537 RVA: 0x002554B4 File Offset: 0x002536B4
		public static LocalizedString ErrorDefaultTagHasConflictedMessageClasses(string policyId, string msgClass)
		{
			return new LocalizedString("ErrorDefaultTagHasConflictedMessageClasses", "", false, false, Strings.ResourceManager, new object[]
			{
				policyId,
				msgClass
			});
		}

		// Token: 0x060092A2 RID: 37538 RVA: 0x002554E8 File Offset: 0x002536E8
		public static LocalizedString ConfirmationMessageSetRoutingGroupConnector(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetRoutingGroupConnector", "Ex0A9ACA", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x17002ECB RID: 11979
		// (get) Token: 0x060092A3 RID: 37539 RVA: 0x00255517 File Offset: 0x00253717
		public static LocalizedString UninstallFfoPrimingServiceTask
		{
			get
			{
				return new LocalizedString("UninstallFfoPrimingServiceTask", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002ECC RID: 11980
		// (get) Token: 0x060092A4 RID: 37540 RVA: 0x00255535 File Offset: 0x00253735
		public static LocalizedString SetupProgressStartingNotificationsBrokerService
		{
			get
			{
				return new LocalizedString("SetupProgressStartingNotificationsBrokerService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060092A5 RID: 37541 RVA: 0x00255554 File Offset: 0x00253754
		public static LocalizedString SeederAsyncBeginCalled(string dbCopy)
		{
			return new LocalizedString("SeederAsyncBeginCalled", "", false, false, Strings.ResourceManager, new object[]
			{
				dbCopy
			});
		}

		// Token: 0x060092A6 RID: 37542 RVA: 0x00255584 File Offset: 0x00253784
		public static LocalizedString ErrorParsingScript(string fileName, string exception)
		{
			return new LocalizedString("ErrorParsingScript", "Ex51E2F7", false, true, Strings.ResourceManager, new object[]
			{
				fileName,
				exception
			});
		}

		// Token: 0x060092A7 RID: 37543 RVA: 0x002555B8 File Offset: 0x002537B8
		public static LocalizedString ErrorSingleDbCopyMove(string db, string server)
		{
			return new LocalizedString("ErrorSingleDbCopyMove", "Ex0C4975", false, true, Strings.ResourceManager, new object[]
			{
				db,
				server
			});
		}

		// Token: 0x17002ECD RID: 11981
		// (get) Token: 0x060092A8 RID: 37544 RVA: 0x002555EB File Offset: 0x002537EB
		public static LocalizedString ErrorCannotHavePrimaryInDatacenterAndArchiveOnPremise
		{
			get
			{
				return new LocalizedString("ErrorCannotHavePrimaryInDatacenterAndArchiveOnPremise", "ExC81551", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060092A9 RID: 37545 RVA: 0x0025560C File Offset: 0x0025380C
		public static LocalizedString ErrorFailedToMountDatabaseMissingLogFile(string databaseId, string errorMessage)
		{
			return new LocalizedString("ErrorFailedToMountDatabaseMissingLogFile", "Ex416F5F", false, true, Strings.ResourceManager, new object[]
			{
				databaseId,
				errorMessage
			});
		}

		// Token: 0x060092AA RID: 37546 RVA: 0x00255640 File Offset: 0x00253840
		public static LocalizedString ErrorClientAccessArrayNotFound(string identity)
		{
			return new LocalizedString("ErrorClientAccessArrayNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x060092AB RID: 37547 RVA: 0x00255670 File Offset: 0x00253870
		public static LocalizedString CasHealthTransactionFailures(string detailedInformation)
		{
			return new LocalizedString("CasHealthTransactionFailures", "Ex4A5C75", false, true, Strings.ResourceManager, new object[]
			{
				detailedInformation
			});
		}

		// Token: 0x060092AC RID: 37548 RVA: 0x002556A0 File Offset: 0x002538A0
		public static LocalizedString VerboseSearchCompleted(int resultsize)
		{
			return new LocalizedString("VerboseSearchCompleted", "Ex45AEE2", false, true, Strings.ResourceManager, new object[]
			{
				resultsize
			});
		}

		// Token: 0x060092AD RID: 37549 RVA: 0x002556D4 File Offset: 0x002538D4
		public static LocalizedString CannotCancelWipe(string device)
		{
			return new LocalizedString("CannotCancelWipe", "Ex4CCC43", false, true, Strings.ResourceManager, new object[]
			{
				device
			});
		}

		// Token: 0x17002ECE RID: 11982
		// (get) Token: 0x060092AE RID: 37550 RVA: 0x00255703 File Offset: 0x00253903
		public static LocalizedString MtrtRequireEncryption
		{
			get
			{
				return new LocalizedString("MtrtRequireEncryption", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060092AF RID: 37551 RVA: 0x00255724 File Offset: 0x00253924
		public static LocalizedString InfoPublishingUri(Uri uri)
		{
			return new LocalizedString("InfoPublishingUri", "ExCE8545", false, true, Strings.ResourceManager, new object[]
			{
				uri
			});
		}

		// Token: 0x17002ECF RID: 11983
		// (get) Token: 0x060092B0 RID: 37552 RVA: 0x00255753 File Offset: 0x00253953
		public static LocalizedString ErrorFailedRmsVersionCheckInitialization
		{
			get
			{
				return new LocalizedString("ErrorFailedRmsVersionCheckInitialization", "ExCDFCA4", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060092B1 RID: 37553 RVA: 0x00255774 File Offset: 0x00253974
		public static LocalizedString ErrorDlpPolicyTemplateNotFound(string identity)
		{
			return new LocalizedString("ErrorDlpPolicyTemplateNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x17002ED0 RID: 11984
		// (get) Token: 0x060092B2 RID: 37554 RVA: 0x002557A3 File Offset: 0x002539A3
		public static LocalizedString HybridMailflowInboundConnectorComment
		{
			get
			{
				return new LocalizedString("HybridMailflowInboundConnectorComment", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002ED1 RID: 11985
		// (get) Token: 0x060092B3 RID: 37555 RVA: 0x002557C1 File Offset: 0x002539C1
		public static LocalizedString CopyStatusMounted
		{
			get
			{
				return new LocalizedString("CopyStatusMounted", "ExBD78B8", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060092B4 RID: 37556 RVA: 0x002557E0 File Offset: 0x002539E0
		public static LocalizedString FailedToResetRecoveryDatabase(string idDatabase, string errMessage)
		{
			return new LocalizedString("FailedToResetRecoveryDatabase", "Ex5941CF", false, true, Strings.ResourceManager, new object[]
			{
				idDatabase,
				errMessage
			});
		}

		// Token: 0x060092B5 RID: 37557 RVA: 0x00255814 File Offset: 0x00253A14
		public static LocalizedString VerboseBackupIISConfig(string cfgFile)
		{
			return new LocalizedString("VerboseBackupIISConfig", "ExE15DF8", false, true, Strings.ResourceManager, new object[]
			{
				cfgFile
			});
		}

		// Token: 0x17002ED2 RID: 11986
		// (get) Token: 0x060092B6 RID: 37558 RVA: 0x00255843 File Offset: 0x00253A43
		public static LocalizedString CouldNotFindEWSService
		{
			get
			{
				return new LocalizedString("CouldNotFindEWSService", "Ex1B7626", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060092B7 RID: 37559 RVA: 0x00255864 File Offset: 0x00253A64
		public static LocalizedString ConfirmationMessageNewPolicyTipConfig(string name, string val)
		{
			return new LocalizedString("ConfirmationMessageNewPolicyTipConfig", "", false, false, Strings.ResourceManager, new object[]
			{
				name,
				val
			});
		}

		// Token: 0x17002ED3 RID: 11987
		// (get) Token: 0x060092B8 RID: 37560 RVA: 0x00255897 File Offset: 0x00253A97
		public static LocalizedString ErrorNotEnoughInformationToFindUniqueRequest
		{
			get
			{
				return new LocalizedString("ErrorNotEnoughInformationToFindUniqueRequest", "Ex997EF2", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060092B9 RID: 37561 RVA: 0x002558B8 File Offset: 0x00253AB8
		public static LocalizedString FailedToStartNodeException(string nodeNames, string dagName)
		{
			return new LocalizedString("FailedToStartNodeException", "", false, false, Strings.ResourceManager, new object[]
			{
				nodeNames,
				dagName
			});
		}

		// Token: 0x17002ED4 RID: 11988
		// (get) Token: 0x060092BA RID: 37562 RVA: 0x002558EB File Offset: 0x00253AEB
		public static LocalizedString DomainControllerNotSpecifiedException
		{
			get
			{
				return new LocalizedString("DomainControllerNotSpecifiedException", "Ex308D26", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060092BB RID: 37563 RVA: 0x0025590C File Offset: 0x00253B0C
		public static LocalizedString CantFindCertBySubject(string IssuedTo)
		{
			return new LocalizedString("CantFindCertBySubject", "Ex1E7C44", false, true, Strings.ResourceManager, new object[]
			{
				IssuedTo
			});
		}

		// Token: 0x060092BC RID: 37564 RVA: 0x0025593C File Offset: 0x00253B3C
		public static LocalizedString RecipientWithTenantServiceInstanceNotSet(string syncobject)
		{
			return new LocalizedString("RecipientWithTenantServiceInstanceNotSet", "", false, false, Strings.ResourceManager, new object[]
			{
				syncobject
			});
		}

		// Token: 0x17002ED5 RID: 11989
		// (get) Token: 0x060092BD RID: 37565 RVA: 0x0025596B File Offset: 0x00253B6B
		public static LocalizedString ErrorWebSiteNullOrEmpty
		{
			get
			{
				return new LocalizedString("ErrorWebSiteNullOrEmpty", "ExEA4281", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060092BE RID: 37566 RVA: 0x0025598C File Offset: 0x00253B8C
		public static LocalizedString ConfirmationMessageNewPublicFolderMoveRequest(string name)
		{
			return new LocalizedString("ConfirmationMessageNewPublicFolderMoveRequest", "Ex38B1D5", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x060092BF RID: 37567 RVA: 0x002559BC File Offset: 0x00253BBC
		public static LocalizedString VerboseSaveStoreMailboxSecurityDescriptor(string id, string server)
		{
			return new LocalizedString("VerboseSaveStoreMailboxSecurityDescriptor", "Ex67FD32", false, true, Strings.ResourceManager, new object[]
			{
				id,
				server
			});
		}

		// Token: 0x17002ED6 RID: 11990
		// (get) Token: 0x060092C0 RID: 37568 RVA: 0x002559EF File Offset: 0x00253BEF
		public static LocalizedString ProtectedServiceHostServiceControlComponentDescription
		{
			get
			{
				return new LocalizedString("ProtectedServiceHostServiceControlComponentDescription", "ExC89626", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060092C1 RID: 37569 RVA: 0x00255A10 File Offset: 0x00253C10
		public static LocalizedString ConnectionToIPListRPCEndpointFailed(string serverName)
		{
			return new LocalizedString("ConnectionToIPListRPCEndpointFailed", "Ex65CC7E", false, true, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		// Token: 0x17002ED7 RID: 11991
		// (get) Token: 0x060092C2 RID: 37570 RVA: 0x00255A3F File Offset: 0x00253C3F
		public static LocalizedString RemoveOrganizationFailWithSharedConfigurationBacklinks
		{
			get
			{
				return new LocalizedString("RemoveOrganizationFailWithSharedConfigurationBacklinks", "ExC1D855", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060092C3 RID: 37571 RVA: 0x00255A60 File Offset: 0x00253C60
		public static LocalizedString VerboseDeleteDatabaseLogFiles(string server, string oldDir)
		{
			return new LocalizedString("VerboseDeleteDatabaseLogFiles", "Ex3829B7", false, true, Strings.ResourceManager, new object[]
			{
				server,
				oldDir
			});
		}

		// Token: 0x060092C4 RID: 37572 RVA: 0x00255A94 File Offset: 0x00253C94
		public static LocalizedString ErrorNonZeroValueForShadowRetry(string name, string shadowPreference)
		{
			return new LocalizedString("ErrorNonZeroValueForShadowRetry", "", false, false, Strings.ResourceManager, new object[]
			{
				name,
				shadowPreference
			});
		}

		// Token: 0x060092C5 RID: 37573 RVA: 0x00255AC8 File Offset: 0x00253CC8
		public static LocalizedString ErrorOutlook2010OrLaterRequired(string serverName)
		{
			return new LocalizedString("ErrorOutlook2010OrLaterRequired", "Ex7B33AF", false, true, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		// Token: 0x060092C6 RID: 37574 RVA: 0x00255AF8 File Offset: 0x00253CF8
		public static LocalizedString PropertyAlreadyHasAnOverride(string property, string overrideName, string workitemType)
		{
			return new LocalizedString("PropertyAlreadyHasAnOverride", "", false, false, Strings.ResourceManager, new object[]
			{
				property,
				overrideName,
				workitemType
			});
		}

		// Token: 0x17002ED8 RID: 11992
		// (get) Token: 0x060092C7 RID: 37575 RVA: 0x00255B2F File Offset: 0x00253D2F
		public static LocalizedString InternalTransportCertificateCorruptedInADOnHub
		{
			get
			{
				return new LocalizedString("InternalTransportCertificateCorruptedInADOnHub", "ExE1EC84", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060092C8 RID: 37576 RVA: 0x00255B50 File Offset: 0x00253D50
		public static LocalizedString DagTaskRemovedNodeToCluster(string serverName)
		{
			return new LocalizedString("DagTaskRemovedNodeToCluster", "", false, false, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		// Token: 0x17002ED9 RID: 11993
		// (get) Token: 0x060092C9 RID: 37577 RVA: 0x00255B7F File Offset: 0x00253D7F
		public static LocalizedString ErrorNoDefaultPFDatabaseForTenant
		{
			get
			{
				return new LocalizedString("ErrorNoDefaultPFDatabaseForTenant", "Ex5E3546", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060092CA RID: 37578 RVA: 0x00255BA0 File Offset: 0x00253DA0
		public static LocalizedString WarningRenamingRole(string roleName, string validationError)
		{
			return new LocalizedString("WarningRenamingRole", "ExF5819A", false, true, Strings.ResourceManager, new object[]
			{
				roleName,
				validationError
			});
		}

		// Token: 0x17002EDA RID: 11994
		// (get) Token: 0x060092CB RID: 37579 RVA: 0x00255BD3 File Offset: 0x00253DD3
		public static LocalizedString ExceptionPerfCounterInvalidDefinitionFile
		{
			get
			{
				return new LocalizedString("ExceptionPerfCounterInvalidDefinitionFile", "Ex505447", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060092CC RID: 37580 RVA: 0x00255BF4 File Offset: 0x00253DF4
		public static LocalizedString ErrorRetentionTagNotUnique(string idStringValue)
		{
			return new LocalizedString("ErrorRetentionTagNotUnique", "Ex660F33", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		// Token: 0x060092CD RID: 37581 RVA: 0x00255C24 File Offset: 0x00253E24
		public static LocalizedString ConfirmGenerateExchangeCertificate(string friendlyName, string subjectName, string domainNames, AllowedServices services, int keySize)
		{
			return new LocalizedString("ConfirmGenerateExchangeCertificate", "Ex247C34", false, true, Strings.ResourceManager, new object[]
			{
				friendlyName,
				subjectName,
				domainNames,
				services,
				keySize
			});
		}

		// Token: 0x060092CE RID: 37582 RVA: 0x00255C70 File Offset: 0x00253E70
		public static LocalizedString ConfirmationMessageStartOrganizationUpgrade(string OrganizationalPath)
		{
			return new LocalizedString("ConfirmationMessageStartOrganizationUpgrade", "ExC4E446", false, true, Strings.ResourceManager, new object[]
			{
				OrganizationalPath
			});
		}

		// Token: 0x060092CF RID: 37583 RVA: 0x00255CA0 File Offset: 0x00253EA0
		public static LocalizedString UserNotFoundException(string key)
		{
			return new LocalizedString("UserNotFoundException", "Ex08B9F8", false, true, Strings.ResourceManager, new object[]
			{
				key
			});
		}

		// Token: 0x17002EDB RID: 11995
		// (get) Token: 0x060092D0 RID: 37584 RVA: 0x00255CCF File Offset: 0x00253ECF
		public static LocalizedString PhoneNumberReachQuota
		{
			get
			{
				return new LocalizedString("PhoneNumberReachQuota", "Ex877E6A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060092D1 RID: 37585 RVA: 0x00255CF0 File Offset: 0x00253EF0
		public static LocalizedString ConfirmationMessageSetExchangeServer(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetExchangeServer", "ExBC3B4C", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x17002EDC RID: 11996
		// (get) Token: 0x060092D2 RID: 37586 RVA: 0x00255D1F File Offset: 0x00253F1F
		public static LocalizedString SetupProgressInitializeExchangeConfigurationContainer
		{
			get
			{
				return new LocalizedString("SetupProgressInitializeExchangeConfigurationContainer", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060092D3 RID: 37587 RVA: 0x00255D40 File Offset: 0x00253F40
		public static LocalizedString RecipientHasNoExternalId(string syncobject)
		{
			return new LocalizedString("RecipientHasNoExternalId", "", false, false, Strings.ResourceManager, new object[]
			{
				syncobject
			});
		}

		// Token: 0x17002EDD RID: 11997
		// (get) Token: 0x060092D4 RID: 37588 RVA: 0x00255D6F File Offset: 0x00253F6F
		public static LocalizedString ErrorUserNull
		{
			get
			{
				return new LocalizedString("ErrorUserNull", "Ex4BC4CA", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002EDE RID: 11998
		// (get) Token: 0x060092D5 RID: 37589 RVA: 0x00255D8D File Offset: 0x00253F8D
		public static LocalizedString OrgIsntOptinError
		{
			get
			{
				return new LocalizedString("OrgIsntOptinError", "Ex967838", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060092D6 RID: 37590 RVA: 0x00255DAC File Offset: 0x00253FAC
		public static LocalizedString WarningFailedToDeleteSourceMailbox(string detailError)
		{
			return new LocalizedString("WarningFailedToDeleteSourceMailbox", "ExC7CB45", false, true, Strings.ResourceManager, new object[]
			{
				detailError
			});
		}

		// Token: 0x17002EDF RID: 11999
		// (get) Token: 0x060092D7 RID: 37591 RVA: 0x00255DDB File Offset: 0x00253FDB
		public static LocalizedString SetupProgressMailPublicFolderCountQuota
		{
			get
			{
				return new LocalizedString("SetupProgressMailPublicFolderCountQuota", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002EE0 RID: 12000
		// (get) Token: 0x060092D8 RID: 37592 RVA: 0x00255DF9 File Offset: 0x00253FF9
		public static LocalizedString CannotRunDeliveryAgentConnectorTaskOnEdge
		{
			get
			{
				return new LocalizedString("CannotRunDeliveryAgentConnectorTaskOnEdge", "ExB43CE1", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060092D9 RID: 37593 RVA: 0x00255E18 File Offset: 0x00254018
		public static LocalizedString ErrorSchemaVersionOutOfRange(string min, string max)
		{
			return new LocalizedString("ErrorSchemaVersionOutOfRange", "", false, false, Strings.ResourceManager, new object[]
			{
				min,
				max
			});
		}

		// Token: 0x17002EE1 RID: 12001
		// (get) Token: 0x060092DA RID: 37594 RVA: 0x00255E4B File Offset: 0x0025404B
		public static LocalizedString CouldNotGetExecutingUser
		{
			get
			{
				return new LocalizedString("CouldNotGetExecutingUser", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002EE2 RID: 12002
		// (get) Token: 0x060092DB RID: 37595 RVA: 0x00255E69 File Offset: 0x00254069
		public static LocalizedString NoUpdatesDirectorySpecified
		{
			get
			{
				return new LocalizedString("NoUpdatesDirectorySpecified", "ExB1159D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060092DC RID: 37596 RVA: 0x00255E88 File Offset: 0x00254088
		public static LocalizedString SubscriptionCacheOperationFailed(LocalizedString info)
		{
			return new LocalizedString("SubscriptionCacheOperationFailed", "Ex99FDBE", false, true, Strings.ResourceManager, new object[]
			{
				info
			});
		}

		// Token: 0x060092DD RID: 37597 RVA: 0x00255EBC File Offset: 0x002540BC
		public static LocalizedString SourceMailboxMustBeE15OrLater(string mailbox)
		{
			return new LocalizedString("SourceMailboxMustBeE15OrLater", "", false, false, Strings.ResourceManager, new object[]
			{
				mailbox
			});
		}

		// Token: 0x17002EE3 RID: 12003
		// (get) Token: 0x060092DE RID: 37598 RVA: 0x00255EEB File Offset: 0x002540EB
		public static LocalizedString SetupProgressDisableWMIOutbound
		{
			get
			{
				return new LocalizedString("SetupProgressDisableWMIOutbound", "Ex7DF14B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060092DF RID: 37599 RVA: 0x00255F0C File Offset: 0x0025410C
		public static LocalizedString ErrorFailedToReplicateMailbox(string identity, string siteId)
		{
			return new LocalizedString("ErrorFailedToReplicateMailbox", "ExF8F3B2", false, true, Strings.ResourceManager, new object[]
			{
				identity,
				siteId
			});
		}

		// Token: 0x17002EE4 RID: 12004
		// (get) Token: 0x060092E0 RID: 37600 RVA: 0x00255F3F File Offset: 0x0025413F
		public static LocalizedString ValidatingUserObject
		{
			get
			{
				return new LocalizedString("ValidatingUserObject", "ExEA3770", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060092E1 RID: 37601 RVA: 0x00255F60 File Offset: 0x00254160
		public static LocalizedString ConversationsADUserIsNull(string user)
		{
			return new LocalizedString("ConversationsADUserIsNull", "ExE60F1E", false, true, Strings.ResourceManager, new object[]
			{
				user
			});
		}

		// Token: 0x060092E2 RID: 37602 RVA: 0x00255F90 File Offset: 0x00254190
		public static LocalizedString ErrorUserNotHaveRoleAssignmentPolicy(string id)
		{
			return new LocalizedString("ErrorUserNotHaveRoleAssignmentPolicy", "Ex7DC2A7", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x17002EE5 RID: 12005
		// (get) Token: 0x060092E3 RID: 37603 RVA: 0x00255FBF File Offset: 0x002541BF
		public static LocalizedString SetupProgressAddressListsEnabled
		{
			get
			{
				return new LocalizedString("SetupProgressAddressListsEnabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060092E4 RID: 37604 RVA: 0x00255FE0 File Offset: 0x002541E0
		public static LocalizedString ErrorCannotAutoSuspendMoveAlreadyCompleting(string identity)
		{
			return new LocalizedString("ErrorCannotAutoSuspendMoveAlreadyCompleting", "ExFBB6FF", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x060092E5 RID: 37605 RVA: 0x00256010 File Offset: 0x00254210
		public static LocalizedString ErrorCannotDeletePrecannedRoleAssignmentToRoleGroup(string roleAssignment, string roleGroup)
		{
			return new LocalizedString("ErrorCannotDeletePrecannedRoleAssignmentToRoleGroup", "ExDBF83A", false, true, Strings.ResourceManager, new object[]
			{
				roleAssignment,
				roleGroup
			});
		}

		// Token: 0x060092E6 RID: 37606 RVA: 0x00256044 File Offset: 0x00254244
		public static LocalizedString DagTaskUpdatedAdDagMembership(string serverName, string dagName)
		{
			return new LocalizedString("DagTaskUpdatedAdDagMembership", "", false, false, Strings.ResourceManager, new object[]
			{
				serverName,
				dagName
			});
		}

		// Token: 0x060092E7 RID: 37607 RVA: 0x00256078 File Offset: 0x00254278
		public static LocalizedString ErrorGroupNotUniqueOnGlobalCatalog(string id, string gc)
		{
			return new LocalizedString("ErrorGroupNotUniqueOnGlobalCatalog", "Ex3B1259", false, true, Strings.ResourceManager, new object[]
			{
				id,
				gc
			});
		}

		// Token: 0x060092E8 RID: 37608 RVA: 0x002560AC File Offset: 0x002542AC
		public static LocalizedString ErrorCannotRemoveNonActiveOrganization(string identity)
		{
			return new LocalizedString("ErrorCannotRemoveNonActiveOrganization", "Ex48A3D6", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x060092E9 RID: 37609 RVA: 0x002560DC File Offset: 0x002542DC
		public static LocalizedString RemoveDagConfigurationNeedsZeroDagsException(int dagCount)
		{
			return new LocalizedString("RemoveDagConfigurationNeedsZeroDagsException", "", false, false, Strings.ResourceManager, new object[]
			{
				dagCount
			});
		}

		// Token: 0x060092EA RID: 37610 RVA: 0x00256110 File Offset: 0x00254310
		public static LocalizedString DagFswUnableToParseWitnessServerNameException(Exception ex)
		{
			return new LocalizedString("DagFswUnableToParseWitnessServerNameException", "", false, false, Strings.ResourceManager, new object[]
			{
				ex
			});
		}

		// Token: 0x17002EE6 RID: 12006
		// (get) Token: 0x060092EB RID: 37611 RVA: 0x0025613F File Offset: 0x0025433F
		public static LocalizedString SetupComponentAllADRolesPrecompileManagementBinaries
		{
			get
			{
				return new LocalizedString("SetupComponentAllADRolesPrecompileManagementBinaries", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002EE7 RID: 12007
		// (get) Token: 0x060092EC RID: 37612 RVA: 0x0025615D File Offset: 0x0025435D
		public static LocalizedString NotifySenderAndRejectMessageShouldBeSingletonAction
		{
			get
			{
				return new LocalizedString("NotifySenderAndRejectMessageShouldBeSingletonAction", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002EE8 RID: 12008
		// (get) Token: 0x060092ED RID: 37613 RVA: 0x0025617B File Offset: 0x0025437B
		public static LocalizedString ServiceNameAs
		{
			get
			{
				return new LocalizedString("ServiceNameAs", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002EE9 RID: 12009
		// (get) Token: 0x060092EE RID: 37614 RVA: 0x00256199 File Offset: 0x00254399
		public static LocalizedString MultipleWebServicesExternalUrlsFound
		{
			get
			{
				return new LocalizedString("MultipleWebServicesExternalUrlsFound", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060092EF RID: 37615 RVA: 0x002561B8 File Offset: 0x002543B8
		public static LocalizedString AmMoveRpcRequested(string db, string server)
		{
			return new LocalizedString("AmMoveRpcRequested", "Ex337ED6", false, true, Strings.ResourceManager, new object[]
			{
				db,
				server
			});
		}

		// Token: 0x060092F0 RID: 37616 RVA: 0x002561EC File Offset: 0x002543EC
		public static LocalizedString MoveMailboxCrossOrgToPt(string src, string targetServer)
		{
			return new LocalizedString("MoveMailboxCrossOrgToPt", "Ex0B3F99", false, true, Strings.ResourceManager, new object[]
			{
				src,
				targetServer
			});
		}

		// Token: 0x060092F1 RID: 37617 RVA: 0x00256220 File Offset: 0x00254420
		public static LocalizedString CasHealthSyntaxErrorInResponse(string expectedString, string xmlDocStr)
		{
			return new LocalizedString("CasHealthSyntaxErrorInResponse", "ExD98AF0", false, true, Strings.ResourceManager, new object[]
			{
				expectedString,
				xmlDocStr
			});
		}

		// Token: 0x060092F2 RID: 37618 RVA: 0x00256254 File Offset: 0x00254454
		public static LocalizedString ConfirmationMessageRemoveIntraOrganizationConnector(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveIntraOrganizationConnector", "", false, false, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x060092F3 RID: 37619 RVA: 0x00256284 File Offset: 0x00254484
		public static LocalizedString SuccessDisableMailboxQuarantine(string mailbox)
		{
			return new LocalizedString("SuccessDisableMailboxQuarantine", "", false, false, Strings.ResourceManager, new object[]
			{
				mailbox
			});
		}

		// Token: 0x060092F4 RID: 37620 RVA: 0x002562B4 File Offset: 0x002544B4
		public static LocalizedString ConfirmationMessageTestLiveIdAuthenticationIdentity(string identity)
		{
			return new LocalizedString("ConfirmationMessageTestLiveIdAuthenticationIdentity", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x17002EEA RID: 12010
		// (get) Token: 0x060092F5 RID: 37621 RVA: 0x002562E3 File Offset: 0x002544E3
		public static LocalizedString ErrorCannotRemoveMigrationUserFromPublicFolderBatch
		{
			get
			{
				return new LocalizedString("ErrorCannotRemoveMigrationUserFromPublicFolderBatch", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060092F6 RID: 37622 RVA: 0x00256304 File Offset: 0x00254504
		public static LocalizedString ConfirmationMessageNewEmailAddressPolicyAllTemplatesWithCustomFilter(string Name, string RecipientFilter, string EnabledEmailAddressTemplates)
		{
			return new LocalizedString("ConfirmationMessageNewEmailAddressPolicyAllTemplatesWithCustomFilter", "ExAFA4E1", false, true, Strings.ResourceManager, new object[]
			{
				Name,
				RecipientFilter,
				EnabledEmailAddressTemplates
			});
		}

		// Token: 0x060092F7 RID: 37623 RVA: 0x0025633C File Offset: 0x0025453C
		public static LocalizedString ConfirmationMessageSuspendOnlineMoveRequest(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSuspendOnlineMoveRequest", "Ex21BFDB", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x060092F8 RID: 37624 RVA: 0x0025636C File Offset: 0x0025456C
		public static LocalizedString ConfirmationMessageSetSecondaryDomain(string identity)
		{
			return new LocalizedString("ConfirmationMessageSetSecondaryDomain", "Ex9742B9", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x17002EEB RID: 12011
		// (get) Token: 0x060092F9 RID: 37625 RVA: 0x0025639B File Offset: 0x0025459B
		public static LocalizedString RemoteContinuousReplication
		{
			get
			{
				return new LocalizedString("RemoteContinuousReplication", "ExE5C216", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002EEC RID: 12012
		// (get) Token: 0x060092FA RID: 37626 RVA: 0x002563B9 File Offset: 0x002545B9
		public static LocalizedString CasHealthOwaAuthMethodSeparator
		{
			get
			{
				return new LocalizedString("CasHealthOwaAuthMethodSeparator", "ExF16DA4", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002EED RID: 12013
		// (get) Token: 0x060092FB RID: 37627 RVA: 0x002563D7 File Offset: 0x002545D7
		public static LocalizedString DagNetworkSubnetAssignmentIncomplete
		{
			get
			{
				return new LocalizedString("DagNetworkSubnetAssignmentIncomplete", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002EEE RID: 12014
		// (get) Token: 0x060092FC RID: 37628 RVA: 0x002563F5 File Offset: 0x002545F5
		public static LocalizedString GetPop3ConfigurationTask
		{
			get
			{
				return new LocalizedString("GetPop3ConfigurationTask", "ExE956A6", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060092FD RID: 37629 RVA: 0x00256414 File Offset: 0x00254614
		public static LocalizedString AddDatabaseCopyAllCopiesMustBeInTheDagException(string databaseName, string server1, string dag1, string server2)
		{
			return new LocalizedString("AddDatabaseCopyAllCopiesMustBeInTheDagException", "", false, false, Strings.ResourceManager, new object[]
			{
				databaseName,
				server1,
				dag1,
				server2
			});
		}

		// Token: 0x060092FE RID: 37630 RVA: 0x00256450 File Offset: 0x00254650
		public static LocalizedString CasHealthOwaCasColon(string casServerName)
		{
			return new LocalizedString("CasHealthOwaCasColon", "Ex87C095", false, true, Strings.ResourceManager, new object[]
			{
				casServerName
			});
		}

		// Token: 0x060092FF RID: 37631 RVA: 0x00256480 File Offset: 0x00254680
		public static LocalizedString ResourceOnly(string parm)
		{
			return new LocalizedString("ResourceOnly", "", false, false, Strings.ResourceManager, new object[]
			{
				parm
			});
		}

		// Token: 0x06009300 RID: 37632 RVA: 0x002564B0 File Offset: 0x002546B0
		public static LocalizedString MultipleOrgMbxesWithCapability(string capability)
		{
			return new LocalizedString("MultipleOrgMbxesWithCapability", "", false, false, Strings.ResourceManager, new object[]
			{
				capability
			});
		}

		// Token: 0x06009301 RID: 37633 RVA: 0x002564E0 File Offset: 0x002546E0
		public static LocalizedString ErrorMailboxDumpsterExceedsTargetQuota(string mailboxSize, string targetQuota)
		{
			return new LocalizedString("ErrorMailboxDumpsterExceedsTargetQuota", "Ex23FD58", false, true, Strings.ResourceManager, new object[]
			{
				mailboxSize,
				targetQuota
			});
		}

		// Token: 0x17002EEF RID: 12015
		// (get) Token: 0x06009302 RID: 37634 RVA: 0x00256513 File Offset: 0x00254713
		public static LocalizedString UninstallTransportSyncManagerServiceTask
		{
			get
			{
				return new LocalizedString("UninstallTransportSyncManagerServiceTask", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009303 RID: 37635 RVA: 0x00256534 File Offset: 0x00254734
		public static LocalizedString ErrorAuxToAuxAttachment(string parent)
		{
			return new LocalizedString("ErrorAuxToAuxAttachment", "", false, false, Strings.ResourceManager, new object[]
			{
				parent
			});
		}

		// Token: 0x06009304 RID: 37636 RVA: 0x00256564 File Offset: 0x00254764
		public static LocalizedString ConfirmationMessageUninstallDlpPolicyTemplate(string Identity)
		{
			return new LocalizedString("ConfirmationMessageUninstallDlpPolicyTemplate", "", false, false, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x17002EF0 RID: 12016
		// (get) Token: 0x06009305 RID: 37637 RVA: 0x00256593 File Offset: 0x00254793
		public static LocalizedString RegSvr32NotFound
		{
			get
			{
				return new LocalizedString("RegSvr32NotFound", "Ex33AE2B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009306 RID: 37638 RVA: 0x002565B4 File Offset: 0x002547B4
		public static LocalizedString ErrorRedirectionEntryFailedToAdd(string domainName)
		{
			return new LocalizedString("ErrorRedirectionEntryFailedToAdd", "Ex4F8CFC", false, true, Strings.ResourceManager, new object[]
			{
				domainName
			});
		}

		// Token: 0x06009307 RID: 37639 RVA: 0x002565E4 File Offset: 0x002547E4
		public static LocalizedString ErrorTeamMailboxGetByNonMember(string tm)
		{
			return new LocalizedString("ErrorTeamMailboxGetByNonMember", "", false, false, Strings.ResourceManager, new object[]
			{
				tm
			});
		}

		// Token: 0x06009308 RID: 37640 RVA: 0x00256614 File Offset: 0x00254814
		public static LocalizedString ErrorDlpPolicyIsNotInstalled(string identity)
		{
			return new LocalizedString("ErrorDlpPolicyIsNotInstalled", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x06009309 RID: 37641 RVA: 0x00256644 File Offset: 0x00254844
		public static LocalizedString WarningCloseGroupMemberJoinForNoArbitrationMbx(string id)
		{
			return new LocalizedString("WarningCloseGroupMemberJoinForNoArbitrationMbx", "Ex326511", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x0600930A RID: 37642 RVA: 0x00256674 File Offset: 0x00254874
		public static LocalizedString ErrorOfProtocolCommand(string protocol, string response)
		{
			return new LocalizedString("ErrorOfProtocolCommand", "ExA72350", false, true, Strings.ResourceManager, new object[]
			{
				protocol,
				response
			});
		}

		// Token: 0x0600930B RID: 37643 RVA: 0x002566A8 File Offset: 0x002548A8
		public static LocalizedString DagTaskDagNameMustBeComputerNameExceptionM1(string dagName)
		{
			return new LocalizedString("DagTaskDagNameMustBeComputerNameExceptionM1", "", false, false, Strings.ResourceManager, new object[]
			{
				dagName
			});
		}

		// Token: 0x0600930C RID: 37644 RVA: 0x002566D8 File Offset: 0x002548D8
		public static LocalizedString ErrorNoRetentionPolicyForTeamMailbox(string user)
		{
			return new LocalizedString("ErrorNoRetentionPolicyForTeamMailbox", "", false, false, Strings.ResourceManager, new object[]
			{
				user
			});
		}

		// Token: 0x0600930D RID: 37645 RVA: 0x00256708 File Offset: 0x00254908
		public static LocalizedString ErrorRemoveMailboxWithAssociatedApprovalRecipents(string id)
		{
			return new LocalizedString("ErrorRemoveMailboxWithAssociatedApprovalRecipents", "Ex4DCA40", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x0600930E RID: 37646 RVA: 0x00256738 File Offset: 0x00254938
		public static LocalizedString ConfirmationMessageAddMailboxPermissionAccessRights(string Identity, string User, string AccessRights)
		{
			return new LocalizedString("ConfirmationMessageAddMailboxPermissionAccessRights", "Ex205202", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				User,
				AccessRights
			});
		}

		// Token: 0x0600930F RID: 37647 RVA: 0x00256770 File Offset: 0x00254970
		public static LocalizedString ConfirmationMessageSetMailboxPlan(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetMailboxPlan", "Ex3F35AF", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x17002EF1 RID: 12017
		// (get) Token: 0x06009310 RID: 37648 RVA: 0x0025679F File Offset: 0x0025499F
		public static LocalizedString RPSSvcNotRunning
		{
			get
			{
				return new LocalizedString("RPSSvcNotRunning", "Ex969798", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009311 RID: 37649 RVA: 0x002567C0 File Offset: 0x002549C0
		public static LocalizedString ServiceReachedStatus(string servicename, string status)
		{
			return new LocalizedString("ServiceReachedStatus", "ExA7C908", false, true, Strings.ResourceManager, new object[]
			{
				servicename,
				status
			});
		}

		// Token: 0x06009312 RID: 37650 RVA: 0x002567F4 File Offset: 0x002549F4
		public static LocalizedString ErrorLiveDomainInaccessibleEpr(string message, string Url)
		{
			return new LocalizedString("ErrorLiveDomainInaccessibleEpr", "Ex35E364", false, true, Strings.ResourceManager, new object[]
			{
				message,
				Url
			});
		}

		// Token: 0x17002EF2 RID: 12018
		// (get) Token: 0x06009313 RID: 37651 RVA: 0x00256827 File Offset: 0x00254A27
		public static LocalizedString ConfirmationMessageUnconfigureWSManIISHosting
		{
			get
			{
				return new LocalizedString("ConfirmationMessageUnconfigureWSManIISHosting", "ExA89BAF", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002EF3 RID: 12019
		// (get) Token: 0x06009314 RID: 37652 RVA: 0x00256845 File Offset: 0x00254A45
		public static LocalizedString ConfirmationTestAssistantHealth
		{
			get
			{
				return new LocalizedString("ConfirmationTestAssistantHealth", "Ex36D70B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009315 RID: 37653 RVA: 0x00256864 File Offset: 0x00254A64
		public static LocalizedString ConfirmationMessageSetInterceptorRule(string identity)
		{
			return new LocalizedString("ConfirmationMessageSetInterceptorRule", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x06009316 RID: 37654 RVA: 0x00256894 File Offset: 0x00254A94
		public static LocalizedString WarningPreferredServerReplaced(string newDc, string oldDc, string domain)
		{
			return new LocalizedString("WarningPreferredServerReplaced", "ExB9F160", false, true, Strings.ResourceManager, new object[]
			{
				newDc,
				oldDc,
				domain
			});
		}

		// Token: 0x17002EF4 RID: 12020
		// (get) Token: 0x06009317 RID: 37655 RVA: 0x002568CB File Offset: 0x00254ACB
		public static LocalizedString ErrorPerfcountersInvalid
		{
			get
			{
				return new LocalizedString("ErrorPerfcountersInvalid", "Ex3B2256", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009318 RID: 37656 RVA: 0x002568EC File Offset: 0x00254AEC
		public static LocalizedString CasHealthCouldNotLogUserNoDetailedInfo(string userName, string mailboxServerName, string scriptName)
		{
			return new LocalizedString("CasHealthCouldNotLogUserNoDetailedInfo", "Ex8C03F4", false, true, Strings.ResourceManager, new object[]
			{
				userName,
				mailboxServerName,
				scriptName
			});
		}

		// Token: 0x06009319 RID: 37657 RVA: 0x00256924 File Offset: 0x00254B24
		public static LocalizedString ConnectorIPRangeContainsInvalidIPv4AddressId(string ipRange)
		{
			return new LocalizedString("ConnectorIPRangeContainsInvalidIPv4AddressId", "", false, false, Strings.ResourceManager, new object[]
			{
				ipRange
			});
		}

		// Token: 0x0600931A RID: 37658 RVA: 0x00256954 File Offset: 0x00254B54
		public static LocalizedString ProgressActivityPushFederationServer(string server)
		{
			return new LocalizedString("ProgressActivityPushFederationServer", "ExF189AC", false, true, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		// Token: 0x0600931B RID: 37659 RVA: 0x00256984 File Offset: 0x00254B84
		public static LocalizedString IPv6AddressesRangesAreNotAllowedInConnectorId(string ipRange)
		{
			return new LocalizedString("IPv6AddressesRangesAreNotAllowedInConnectorId", "", false, false, Strings.ResourceManager, new object[]
			{
				ipRange
			});
		}

		// Token: 0x17002EF5 RID: 12021
		// (get) Token: 0x0600931C RID: 37660 RVA: 0x002569B3 File Offset: 0x00254BB3
		public static LocalizedString ReplicationCheckWarningsLabel
		{
			get
			{
				return new LocalizedString("ReplicationCheckWarningsLabel", "Ex35B661", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600931D RID: 37661 RVA: 0x002569D4 File Offset: 0x00254BD4
		public static LocalizedString AvailabilityConfigReadException(string dn)
		{
			return new LocalizedString("AvailabilityConfigReadException", "Ex0707DC", false, true, Strings.ResourceManager, new object[]
			{
				dn
			});
		}

		// Token: 0x0600931E RID: 37662 RVA: 0x00256A04 File Offset: 0x00254C04
		public static LocalizedString ErrorCannotDisableLastArbitrationMailboxInOrganization(string mbxId)
		{
			return new LocalizedString("ErrorCannotDisableLastArbitrationMailboxInOrganization", "ExE44936", false, true, Strings.ResourceManager, new object[]
			{
				mbxId
			});
		}

		// Token: 0x0600931F RID: 37663 RVA: 0x00256A34 File Offset: 0x00254C34
		public static LocalizedString WarningNoNeedToConvertMailboxType(string id, string type)
		{
			return new LocalizedString("WarningNoNeedToConvertMailboxType", "", false, false, Strings.ResourceManager, new object[]
			{
				id,
				type
			});
		}

		// Token: 0x06009320 RID: 37664 RVA: 0x00256A68 File Offset: 0x00254C68
		public static LocalizedString GetQueueDigestServerNoServerFoundInDag(string dag)
		{
			return new LocalizedString("GetQueueDigestServerNoServerFoundInDag", "", false, false, Strings.ResourceManager, new object[]
			{
				dag
			});
		}

		// Token: 0x06009321 RID: 37665 RVA: 0x00256A98 File Offset: 0x00254C98
		public static LocalizedString VerboseFindAutoDiscoverUrl(string url, string address)
		{
			return new LocalizedString("VerboseFindAutoDiscoverUrl", "", false, false, Strings.ResourceManager, new object[]
			{
				url,
				address
			});
		}

		// Token: 0x06009322 RID: 37666 RVA: 0x00256ACC File Offset: 0x00254CCC
		public static LocalizedString WarningFailedToMailEnableSourceAccount(string detailError)
		{
			return new LocalizedString("WarningFailedToMailEnableSourceAccount", "Ex9F930F", false, true, Strings.ResourceManager, new object[]
			{
				detailError
			});
		}

		// Token: 0x06009323 RID: 37667 RVA: 0x00256AFC File Offset: 0x00254CFC
		public static LocalizedString UserHasNoFederatedIdentity(string user)
		{
			return new LocalizedString("UserHasNoFederatedIdentity", "", false, false, Strings.ResourceManager, new object[]
			{
				user
			});
		}

		// Token: 0x06009324 RID: 37668 RVA: 0x00256B2C File Offset: 0x00254D2C
		public static LocalizedString ErrorInvalidOperationOnAddDBCopyForRecoveryDB(string pfdb)
		{
			return new LocalizedString("ErrorInvalidOperationOnAddDBCopyForRecoveryDB", "Ex5EE46A", false, true, Strings.ResourceManager, new object[]
			{
				pfdb
			});
		}

		// Token: 0x06009325 RID: 37669 RVA: 0x00256B5C File Offset: 0x00254D5C
		public static LocalizedString ErrorInheritedObjectTypeNotFound(string idStringValue)
		{
			return new LocalizedString("ErrorInheritedObjectTypeNotFound", "ExD2EE76", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		// Token: 0x06009326 RID: 37670 RVA: 0x00256B8C File Offset: 0x00254D8C
		public static LocalizedString MigrationPortVerificationFailed(int port, int minValue, int maxValue)
		{
			return new LocalizedString("MigrationPortVerificationFailed", "", false, false, Strings.ResourceManager, new object[]
			{
				port,
				minValue,
				maxValue
			});
		}

		// Token: 0x17002EF6 RID: 12022
		// (get) Token: 0x06009327 RID: 37671 RVA: 0x00256BD2 File Offset: 0x00254DD2
		public static LocalizedString ElcUserConfigurationServiceBindingNotAvailable
		{
			get
			{
				return new LocalizedString("ElcUserConfigurationServiceBindingNotAvailable", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009328 RID: 37672 RVA: 0x00256BF0 File Offset: 0x00254DF0
		public static LocalizedString ConfirmationMessageMailboxCalendarConfiguration(string Identity)
		{
			return new LocalizedString("ConfirmationMessageMailboxCalendarConfiguration", "ExFF4964", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x17002EF7 RID: 12023
		// (get) Token: 0x06009329 RID: 37673 RVA: 0x00256C1F File Offset: 0x00254E1F
		public static LocalizedString UninstallFrontendTransportRoleDescription
		{
			get
			{
				return new LocalizedString("UninstallFrontendTransportRoleDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600932A RID: 37674 RVA: 0x00256C40 File Offset: 0x00254E40
		public static LocalizedString ConfirmationMessageSetExchangeUpgradeBucket(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetExchangeUpgradeBucket", "", false, false, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x0600932B RID: 37675 RVA: 0x00256C70 File Offset: 0x00254E70
		public static LocalizedString ErrorBadItemLimitAlreadyExceeded(string identity, int encountered, int newlimit)
		{
			return new LocalizedString("ErrorBadItemLimitAlreadyExceeded", "ExD61E59", false, true, Strings.ResourceManager, new object[]
			{
				identity,
				encountered,
				newlimit
			});
		}

		// Token: 0x0600932C RID: 37676 RVA: 0x00256CB4 File Offset: 0x00254EB4
		public static LocalizedString FailedDeleteTempDatabaseLogFiles(string server, string oldDir)
		{
			return new LocalizedString("FailedDeleteTempDatabaseLogFiles", "Ex9622C7", false, true, Strings.ResourceManager, new object[]
			{
				server,
				oldDir
			});
		}

		// Token: 0x0600932D RID: 37677 RVA: 0x00256CE8 File Offset: 0x00254EE8
		public static LocalizedString ActiveDirectoryConnectivityExceptionThrown(string e)
		{
			return new LocalizedString("ActiveDirectoryConnectivityExceptionThrown", "", false, false, Strings.ResourceManager, new object[]
			{
				e
			});
		}

		// Token: 0x0600932E RID: 37678 RVA: 0x00256D18 File Offset: 0x00254F18
		public static LocalizedString AdminAuditLogSearchTimeout(string timeout)
		{
			return new LocalizedString("AdminAuditLogSearchTimeout", "ExD48EFD", false, true, Strings.ResourceManager, new object[]
			{
				timeout
			});
		}

		// Token: 0x0600932F RID: 37679 RVA: 0x00256D48 File Offset: 0x00254F48
		public static LocalizedString ConfirmationMessageNewManagementScope(string type, string filter, string root)
		{
			return new LocalizedString("ConfirmationMessageNewManagementScope", "ExB475EA", false, true, Strings.ResourceManager, new object[]
			{
				type,
				filter,
				root
			});
		}

		// Token: 0x06009330 RID: 37680 RVA: 0x00256D80 File Offset: 0x00254F80
		public static LocalizedString CommentsTooLong(int limit, int actual)
		{
			return new LocalizedString("CommentsTooLong", "Ex2A9DD7", false, true, Strings.ResourceManager, new object[]
			{
				limit,
				actual
			});
		}

		// Token: 0x17002EF8 RID: 12024
		// (get) Token: 0x06009331 RID: 37681 RVA: 0x00256DBD File Offset: 0x00254FBD
		public static LocalizedString SetupProgressStartingTransportSyncManagerService
		{
			get
			{
				return new LocalizedString("SetupProgressStartingTransportSyncManagerService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002EF9 RID: 12025
		// (get) Token: 0x06009332 RID: 37682 RVA: 0x00256DDB File Offset: 0x00254FDB
		public static LocalizedString ErrorAlsEncounteredUnexpectedException
		{
			get
			{
				return new LocalizedString("ErrorAlsEncounteredUnexpectedException", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009333 RID: 37683 RVA: 0x00256DFC File Offset: 0x00254FFC
		public static LocalizedString CrossPremiseProbesPending(string source, string target)
		{
			return new LocalizedString("CrossPremiseProbesPending", "ExA7E7AB", false, true, Strings.ResourceManager, new object[]
			{
				source,
				target
			});
		}

		// Token: 0x17002EFA RID: 12026
		// (get) Token: 0x06009334 RID: 37684 RVA: 0x00256E2F File Offset: 0x0025502F
		public static LocalizedString InvalidEventType
		{
			get
			{
				return new LocalizedString("InvalidEventType", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002EFB RID: 12027
		// (get) Token: 0x06009335 RID: 37685 RVA: 0x00256E4D File Offset: 0x0025504D
		public static LocalizedString ErrorOffboardingDisabled
		{
			get
			{
				return new LocalizedString("ErrorOffboardingDisabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002EFC RID: 12028
		// (get) Token: 0x06009336 RID: 37686 RVA: 0x00256E6B File Offset: 0x0025506B
		public static LocalizedString SetupProgressOwaSmsEnabled
		{
			get
			{
				return new LocalizedString("SetupProgressOwaSmsEnabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009337 RID: 37687 RVA: 0x00256E8C File Offset: 0x0025508C
		public static LocalizedString DlpPolicyScriptExecutionError(string error)
		{
			return new LocalizedString("DlpPolicyScriptExecutionError", "", false, false, Strings.ResourceManager, new object[]
			{
				error
			});
		}

		// Token: 0x06009338 RID: 37688 RVA: 0x00256EBC File Offset: 0x002550BC
		public static LocalizedString WarningRemoveRoleAssignmentToBlockSelf(string id, string roleId)
		{
			return new LocalizedString("WarningRemoveRoleAssignmentToBlockSelf", "ExF169FA", false, true, Strings.ResourceManager, new object[]
			{
				id,
				roleId
			});
		}

		// Token: 0x06009339 RID: 37689 RVA: 0x00256EF0 File Offset: 0x002550F0
		public static LocalizedString CasHealthOwaPingStart(string url)
		{
			return new LocalizedString("CasHealthOwaPingStart", "Ex2C9979", false, true, Strings.ResourceManager, new object[]
			{
				url
			});
		}

		// Token: 0x17002EFD RID: 12029
		// (get) Token: 0x0600933A RID: 37690 RVA: 0x00256F1F File Offset: 0x0025511F
		public static LocalizedString E4eLicensingIsDisabledEnableRule
		{
			get
			{
				return new LocalizedString("E4eLicensingIsDisabledEnableRule", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600933B RID: 37691 RVA: 0x00256F40 File Offset: 0x00255140
		public static LocalizedString AddResubmitRequestFailed(AddResubmitRequestStatus status)
		{
			return new LocalizedString("AddResubmitRequestFailed", "", false, false, Strings.ResourceManager, new object[]
			{
				status
			});
		}

		// Token: 0x0600933C RID: 37692 RVA: 0x00256F74 File Offset: 0x00255174
		public static LocalizedString ConfirmationMessageSetFailedMSOSyncObject(string objectId)
		{
			return new LocalizedString("ConfirmationMessageSetFailedMSOSyncObject", "", false, false, Strings.ResourceManager, new object[]
			{
				objectId
			});
		}

		// Token: 0x0600933D RID: 37693 RVA: 0x00256FA4 File Offset: 0x002551A4
		public static LocalizedString ErrorInvalidRecipientType(string recipientName, string recipientType)
		{
			return new LocalizedString("ErrorInvalidRecipientType", "ExADDDAF", false, true, Strings.ResourceManager, new object[]
			{
				recipientName,
				recipientType
			});
		}

		// Token: 0x0600933E RID: 37694 RVA: 0x00256FD8 File Offset: 0x002551D8
		public static LocalizedString ErrorWorkloadManagementPolicyNotUnique(string id)
		{
			return new LocalizedString("ErrorWorkloadManagementPolicyNotUnique", "", false, false, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x17002EFE RID: 12030
		// (get) Token: 0x0600933F RID: 37695 RVA: 0x00257007 File Offset: 0x00255207
		public static LocalizedString IsNTDSRunningScenario
		{
			get
			{
				return new LocalizedString("IsNTDSRunningScenario", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009340 RID: 37696 RVA: 0x00257028 File Offset: 0x00255228
		public static LocalizedString UsingAuthenticationCredentials(string credentials)
		{
			return new LocalizedString("UsingAuthenticationCredentials", "", false, false, Strings.ResourceManager, new object[]
			{
				credentials
			});
		}

		// Token: 0x06009341 RID: 37697 RVA: 0x00257058 File Offset: 0x00255258
		public static LocalizedString VerboseUpdatingVersion(string id, string oldVersion, string newVersion)
		{
			return new LocalizedString("VerboseUpdatingVersion", "ExDBDAE9", false, true, Strings.ResourceManager, new object[]
			{
				id,
				oldVersion,
				newVersion
			});
		}

		// Token: 0x17002EFF RID: 12031
		// (get) Token: 0x06009342 RID: 37698 RVA: 0x0025708F File Offset: 0x0025528F
		public static LocalizedString SetupProgressGenericPerfCounters
		{
			get
			{
				return new LocalizedString("SetupProgressGenericPerfCounters", "Ex566DC6", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009343 RID: 37699 RVA: 0x002570B0 File Offset: 0x002552B0
		public static LocalizedString MailboxUserNotFoundException(string mailboxName)
		{
			return new LocalizedString("MailboxUserNotFoundException", "", false, false, Strings.ResourceManager, new object[]
			{
				mailboxName
			});
		}

		// Token: 0x17002F00 RID: 12032
		// (get) Token: 0x06009344 RID: 37700 RVA: 0x002570DF File Offset: 0x002552DF
		public static LocalizedString MomConnectorServiceDescription
		{
			get
			{
				return new LocalizedString("MomConnectorServiceDescription", "ExDA154B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002F01 RID: 12033
		// (get) Token: 0x06009345 RID: 37701 RVA: 0x002570FD File Offset: 0x002552FD
		public static LocalizedString ErrorCannotFindMoveRequestWithStatusNone
		{
			get
			{
				return new LocalizedString("ErrorCannotFindMoveRequestWithStatusNone", "Ex5EF75D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009346 RID: 37702 RVA: 0x0025711C File Offset: 0x0025531C
		public static LocalizedString ConfirmationMessageRemoveEdgeSubscription(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveEdgeSubscription", "ExD8E144", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x17002F02 RID: 12034
		// (get) Token: 0x06009347 RID: 37703 RVA: 0x0025714B File Offset: 0x0025534B
		public static LocalizedString SendConnectorDashdashSmarthostNotOffEdge
		{
			get
			{
				return new LocalizedString("SendConnectorDashdashSmarthostNotOffEdge", "Ex34434F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009348 RID: 37704 RVA: 0x0025716C File Offset: 0x0025536C
		public static LocalizedString ConfirmationMessageSetRetentionPolicy(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetRetentionPolicy", "Ex4A7AF4", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x17002F03 RID: 12035
		// (get) Token: 0x06009349 RID: 37705 RVA: 0x0025719B File Offset: 0x0025539B
		public static LocalizedString ProgressCompleting
		{
			get
			{
				return new LocalizedString("ProgressCompleting", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002F04 RID: 12036
		// (get) Token: 0x0600934A RID: 37706 RVA: 0x002571B9 File Offset: 0x002553B9
		public static LocalizedString SetupProgressInstallTransportLogSearchService
		{
			get
			{
				return new LocalizedString("SetupProgressInstallTransportLogSearchService", "Ex2CBF6C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600934B RID: 37707 RVA: 0x002571D8 File Offset: 0x002553D8
		public static LocalizedString ErrorUpdateManagementVDirForRemoteServer(string id, string localServerFqdn, string remoteServerDN)
		{
			return new LocalizedString("ErrorUpdateManagementVDirForRemoteServer", "Ex7C8264", false, true, Strings.ResourceManager, new object[]
			{
				id,
				localServerFqdn,
				remoteServerDN
			});
		}

		// Token: 0x0600934C RID: 37708 RVA: 0x00257210 File Offset: 0x00255410
		public static LocalizedString FailedToResetOabPublicFolderDistribution(string offlineAddressBook, string pfdb, string error)
		{
			return new LocalizedString("FailedToResetOabPublicFolderDistribution", "Ex9E0B76", false, true, Strings.ResourceManager, new object[]
			{
				offlineAddressBook,
				pfdb,
				error
			});
		}

		// Token: 0x0600934D RID: 37709 RVA: 0x00257248 File Offset: 0x00255448
		public static LocalizedString ErrorMailboxDatabaseToRecoverIsRecoveryMailboxDatabase(string mailboxDatabase)
		{
			return new LocalizedString("ErrorMailboxDatabaseToRecoverIsRecoveryMailboxDatabase", "ExA83633", false, true, Strings.ResourceManager, new object[]
			{
				mailboxDatabase
			});
		}

		// Token: 0x0600934E RID: 37710 RVA: 0x00257278 File Offset: 0x00255478
		public static LocalizedString ErrorCannotRetrieveRidManagerContainer(string length)
		{
			return new LocalizedString("ErrorCannotRetrieveRidManagerContainer", "", false, false, Strings.ResourceManager, new object[]
			{
				length
			});
		}

		// Token: 0x0600934F RID: 37711 RVA: 0x002572A8 File Offset: 0x002554A8
		public static LocalizedString RequestIndexEntryIsMissingLocalUserData(string name)
		{
			return new LocalizedString("RequestIndexEntryIsMissingLocalUserData", "Ex3D3B69", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x06009350 RID: 37712 RVA: 0x002572D8 File Offset: 0x002554D8
		public static LocalizedString ErrorParameterRequired(string parameterName)
		{
			return new LocalizedString("ErrorParameterRequired", "Ex947A03", false, true, Strings.ResourceManager, new object[]
			{
				parameterName
			});
		}

		// Token: 0x06009351 RID: 37713 RVA: 0x00257308 File Offset: 0x00255508
		public static LocalizedString ConfirmationMessageNewMailboxShared(string Name, string Shared, string UserPrincipalName, string OrganizationalUnit)
		{
			return new LocalizedString("ConfirmationMessageNewMailboxShared", "ExD6A8D8", false, true, Strings.ResourceManager, new object[]
			{
				Name,
				Shared,
				UserPrincipalName,
				OrganizationalUnit
			});
		}

		// Token: 0x17002F05 RID: 12037
		// (get) Token: 0x06009352 RID: 37714 RVA: 0x00257343 File Offset: 0x00255543
		public static LocalizedString GetProtocolLogNeedsRecipients
		{
			get
			{
				return new LocalizedString("GetProtocolLogNeedsRecipients", "Ex70EA20", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002F06 RID: 12038
		// (get) Token: 0x06009353 RID: 37715 RVA: 0x00257361 File Offset: 0x00255561
		public static LocalizedString ClusterNetworkCheckDesc
		{
			get
			{
				return new LocalizedString("ClusterNetworkCheckDesc", "Ex14C346", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009354 RID: 37716 RVA: 0x00257380 File Offset: 0x00255580
		public static LocalizedString ConfirmationMessageRemoveMailuserAndLiveId(string Identity, string liveId)
		{
			return new LocalizedString("ConfirmationMessageRemoveMailuserAndLiveId", "ExB93C68", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				liveId
			});
		}

		// Token: 0x06009355 RID: 37717 RVA: 0x002573B4 File Offset: 0x002555B4
		public static LocalizedString CannotSetTargetDeliveryDomainOnWildCardDomains(string domain)
		{
			return new LocalizedString("CannotSetTargetDeliveryDomainOnWildCardDomains", "Ex30BC5D", false, true, Strings.ResourceManager, new object[]
			{
				domain
			});
		}

		// Token: 0x17002F07 RID: 12039
		// (get) Token: 0x06009356 RID: 37718 RVA: 0x002573E3 File Offset: 0x002555E3
		public static LocalizedString SetupComponentConfiguringRpcClientAccessProtocol
		{
			get
			{
				return new LocalizedString("SetupComponentConfiguringRpcClientAccessProtocol", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009357 RID: 37719 RVA: 0x00257404 File Offset: 0x00255604
		public static LocalizedString SiteMailboxLinkedToSharePointSite(string url)
		{
			return new LocalizedString("SiteMailboxLinkedToSharePointSite", "", false, false, Strings.ResourceManager, new object[]
			{
				url
			});
		}

		// Token: 0x06009358 RID: 37720 RVA: 0x00257434 File Offset: 0x00255634
		public static LocalizedString VerboseSettingDisableAggregation(string value)
		{
			return new LocalizedString("VerboseSettingDisableAggregation", "", false, false, Strings.ResourceManager, new object[]
			{
				value
			});
		}

		// Token: 0x06009359 RID: 37721 RVA: 0x00257464 File Offset: 0x00255664
		public static LocalizedString CannotSetWebServiceRoleEntry(string entryName)
		{
			return new LocalizedString("CannotSetWebServiceRoleEntry", "", false, false, Strings.ResourceManager, new object[]
			{
				entryName
			});
		}

		// Token: 0x17002F08 RID: 12040
		// (get) Token: 0x0600935A RID: 37722 RVA: 0x00257493 File Offset: 0x00255693
		public static LocalizedString ErrorWSManRegistryCorrupted
		{
			get
			{
				return new LocalizedString("ErrorWSManRegistryCorrupted", "ExC9BC62", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600935B RID: 37723 RVA: 0x002574B4 File Offset: 0x002556B4
		public static LocalizedString AdminAuditLogSearchOutOfRangeResultSize(int maxResultSize)
		{
			return new LocalizedString("AdminAuditLogSearchOutOfRangeResultSize", "Ex635891", false, true, Strings.ResourceManager, new object[]
			{
				maxResultSize
			});
		}

		// Token: 0x17002F09 RID: 12041
		// (get) Token: 0x0600935C RID: 37724 RVA: 0x002574E8 File Offset: 0x002556E8
		public static LocalizedString InvalidTestAccountRequest
		{
			get
			{
				return new LocalizedString("InvalidTestAccountRequest", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002F0A RID: 12042
		// (get) Token: 0x0600935D RID: 37725 RVA: 0x00257506 File Offset: 0x00255706
		public static LocalizedString ErrorCannotFindTargetDeliveryDomain
		{
			get
			{
				return new LocalizedString("ErrorCannotFindTargetDeliveryDomain", "Ex1E71DA", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002F0B RID: 12043
		// (get) Token: 0x0600935E RID: 37726 RVA: 0x00257524 File Offset: 0x00255724
		public static LocalizedString MailboxRoleDisplayName
		{
			get
			{
				return new LocalizedString("MailboxRoleDisplayName", "Ex4A06BA", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002F0C RID: 12044
		// (get) Token: 0x0600935F RID: 37727 RVA: 0x00257542 File Offset: 0x00255742
		public static LocalizedString SetupComponentConfiguringInfoWorker
		{
			get
			{
				return new LocalizedString("SetupComponentConfiguringInfoWorker", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002F0D RID: 12045
		// (get) Token: 0x06009360 RID: 37728 RVA: 0x00257560 File Offset: 0x00255760
		public static LocalizedString ClientAccessIisWebServiceExtensionsDescription
		{
			get
			{
				return new LocalizedString("ClientAccessIisWebServiceExtensionsDescription", "Ex303662", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009361 RID: 37729 RVA: 0x00257580 File Offset: 0x00255780
		public static LocalizedString ErrorAuthenticationFailed(string errstring)
		{
			return new LocalizedString("ErrorAuthenticationFailed", "ExD1234C", false, true, Strings.ResourceManager, new object[]
			{
				errstring
			});
		}

		// Token: 0x17002F0E RID: 12046
		// (get) Token: 0x06009362 RID: 37730 RVA: 0x002575AF File Offset: 0x002557AF
		public static LocalizedString ErrorManageDelegation2ProofDomainOwnership
		{
			get
			{
				return new LocalizedString("ErrorManageDelegation2ProofDomainOwnership", "ExAB4E6A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009363 RID: 37731 RVA: 0x002575D0 File Offset: 0x002557D0
		public static LocalizedString ImportNodeNameDoesNotMatch(string expectedName, string actualName)
		{
			return new LocalizedString("ImportNodeNameDoesNotMatch", "", false, false, Strings.ResourceManager, new object[]
			{
				expectedName,
				actualName
			});
		}

		// Token: 0x06009364 RID: 37732 RVA: 0x00257604 File Offset: 0x00255804
		public static LocalizedString CasHealthOwaHttpGetNonOkayForLogoff(int code, string name)
		{
			return new LocalizedString("CasHealthOwaHttpGetNonOkayForLogoff", "Ex9CE3D8", false, true, Strings.ResourceManager, new object[]
			{
				code,
				name
			});
		}

		// Token: 0x17002F0F RID: 12047
		// (get) Token: 0x06009365 RID: 37733 RVA: 0x0025763C File Offset: 0x0025583C
		public static LocalizedString CasHealthOwaFbaAuthTypeNotExpected
		{
			get
			{
				return new LocalizedString("CasHealthOwaFbaAuthTypeNotExpected", "Ex55B891", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002F10 RID: 12048
		// (get) Token: 0x06009366 RID: 37734 RVA: 0x0025765A File Offset: 0x0025585A
		public static LocalizedString ImportCertificateDataInvalid
		{
			get
			{
				return new LocalizedString("ImportCertificateDataInvalid", "ExA7F8A7", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002F11 RID: 12049
		// (get) Token: 0x06009367 RID: 37735 RVA: 0x00257678 File Offset: 0x00255878
		public static LocalizedString CannotSpecifyBothAllDomainsAndDomain
		{
			get
			{
				return new LocalizedString("CannotSpecifyBothAllDomainsAndDomain", "Ex3A5F77", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002F12 RID: 12050
		// (get) Token: 0x06009368 RID: 37736 RVA: 0x00257696 File Offset: 0x00255896
		public static LocalizedString RegisterComInteropTlbTask
		{
			get
			{
				return new LocalizedString("RegisterComInteropTlbTask", "Ex70AEE8", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009369 RID: 37737 RVA: 0x002576B4 File Offset: 0x002558B4
		public static LocalizedString ErrorExchangeAdministrativeGroupNotFoundDueToAdReplicationLatent(string group)
		{
			return new LocalizedString("ErrorExchangeAdministrativeGroupNotFoundDueToAdReplicationLatent", "ExEABDD8", false, true, Strings.ResourceManager, new object[]
			{
				group
			});
		}

		// Token: 0x0600936A RID: 37738 RVA: 0x002576E4 File Offset: 0x002558E4
		public static LocalizedString MoveMailboxUnexpectedReportingProgress(string error)
		{
			return new LocalizedString("MoveMailboxUnexpectedReportingProgress", "Ex1EF7D8", false, true, Strings.ResourceManager, new object[]
			{
				error
			});
		}

		// Token: 0x17002F13 RID: 12051
		// (get) Token: 0x0600936B RID: 37739 RVA: 0x00257713 File Offset: 0x00255913
		public static LocalizedString ErrorThrottlingPolicyMustBeSpecified
		{
			get
			{
				return new LocalizedString("ErrorThrottlingPolicyMustBeSpecified", "Ex665B24", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002F14 RID: 12052
		// (get) Token: 0x0600936C RID: 37740 RVA: 0x00257731 File Offset: 0x00255931
		public static LocalizedString NotifySenderActionRequiresMcdcPredicate
		{
			get
			{
				return new LocalizedString("NotifySenderActionRequiresMcdcPredicate", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600936D RID: 37741 RVA: 0x00257750 File Offset: 0x00255950
		public static LocalizedString ConfirmationMessageGetDatabaseAvailabilityGroupConfiguration(string Server)
		{
			return new LocalizedString("ConfirmationMessageGetDatabaseAvailabilityGroupConfiguration", "", false, false, Strings.ResourceManager, new object[]
			{
				Server
			});
		}

		// Token: 0x0600936E RID: 37742 RVA: 0x00257780 File Offset: 0x00255980
		public static LocalizedString ErrorServicePlanIsDeprecated(string name, string plan, string programId)
		{
			return new LocalizedString("ErrorServicePlanIsDeprecated", "Ex3DCCB3", false, true, Strings.ResourceManager, new object[]
			{
				name,
				plan,
				programId
			});
		}

		// Token: 0x0600936F RID: 37743 RVA: 0x002577B8 File Offset: 0x002559B8
		public static LocalizedString InfoGroupAlreadyPresent(string group)
		{
			return new LocalizedString("InfoGroupAlreadyPresent", "Ex9B2278", false, true, Strings.ResourceManager, new object[]
			{
				group
			});
		}

		// Token: 0x17002F15 RID: 12053
		// (get) Token: 0x06009370 RID: 37744 RVA: 0x002577E7 File Offset: 0x002559E7
		public static LocalizedString ErrorCannotDisableFederation
		{
			get
			{
				return new LocalizedString("ErrorCannotDisableFederation", "Ex04D89A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009371 RID: 37745 RVA: 0x00257808 File Offset: 0x00255A08
		public static LocalizedString VerboseCheckPFDatabaseLocalReplicas(string id)
		{
			return new LocalizedString("VerboseCheckPFDatabaseLocalReplicas", "Ex3A85A7", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x17002F16 RID: 12054
		// (get) Token: 0x06009372 RID: 37746 RVA: 0x00257837 File Offset: 0x00255A37
		public static LocalizedString ConfirmationMessageAuthNewInProgress
		{
			get
			{
				return new LocalizedString("ConfirmationMessageAuthNewInProgress", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009373 RID: 37747 RVA: 0x00257858 File Offset: 0x00255A58
		public static LocalizedString RunConfigUpdaterRpcVerbose(string server, string database)
		{
			return new LocalizedString("RunConfigUpdaterRpcVerbose", "ExE27E57", false, true, Strings.ResourceManager, new object[]
			{
				server,
				database
			});
		}

		// Token: 0x17002F17 RID: 12055
		// (get) Token: 0x06009374 RID: 37748 RVA: 0x0025788B File Offset: 0x00255A8B
		public static LocalizedString SyncNowFailedToRunException
		{
			get
			{
				return new LocalizedString("SyncNowFailedToRunException", "Ex381ACF", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002F18 RID: 12056
		// (get) Token: 0x06009375 RID: 37749 RVA: 0x002578A9 File Offset: 0x00255AA9
		public static LocalizedString CannotRemoveApprovalApplicationWithMailboxes
		{
			get
			{
				return new LocalizedString("CannotRemoveApprovalApplicationWithMailboxes", "Ex555F36", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009376 RID: 37750 RVA: 0x002578C8 File Offset: 0x00255AC8
		public static LocalizedString ConfirmationMessageAddIPBlockListEntryIPRange(string IPRange)
		{
			return new LocalizedString("ConfirmationMessageAddIPBlockListEntryIPRange", "Ex432605", false, true, Strings.ResourceManager, new object[]
			{
				IPRange
			});
		}

		// Token: 0x17002F19 RID: 12057
		// (get) Token: 0x06009377 RID: 37751 RVA: 0x002578F7 File Offset: 0x00255AF7
		public static LocalizedString RuleNameAlreadyExists
		{
			get
			{
				return new LocalizedString("RuleNameAlreadyExists", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009378 RID: 37752 RVA: 0x00257918 File Offset: 0x00255B18
		public static LocalizedString ErrorRetiredOrganizationFound(string name)
		{
			return new LocalizedString("ErrorRetiredOrganizationFound", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x06009379 RID: 37753 RVA: 0x00257948 File Offset: 0x00255B48
		public static LocalizedString VerboseUnmountDatabase(string id)
		{
			return new LocalizedString("VerboseUnmountDatabase", "Ex21681B", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x17002F1A RID: 12058
		// (get) Token: 0x0600937A RID: 37754 RVA: 0x00257977 File Offset: 0x00255B77
		public static LocalizedString DefaultAllModernGroups
		{
			get
			{
				return new LocalizedString("DefaultAllModernGroups", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002F1B RID: 12059
		// (get) Token: 0x0600937B RID: 37755 RVA: 0x00257995 File Offset: 0x00255B95
		public static LocalizedString RejectText
		{
			get
			{
				return new LocalizedString("RejectText", "ExD78C2F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002F1C RID: 12060
		// (get) Token: 0x0600937C RID: 37756 RVA: 0x002579B3 File Offset: 0x00255BB3
		public static LocalizedString ErrorInvalidWMAFormat
		{
			get
			{
				return new LocalizedString("ErrorInvalidWMAFormat", "ExDE2E0E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600937D RID: 37757 RVA: 0x002579D4 File Offset: 0x00255BD4
		public static LocalizedString MailboxReplicationServiceNotResponding(LocalizedString error)
		{
			return new LocalizedString("MailboxReplicationServiceNotResponding", "Ex8C5305", false, true, Strings.ResourceManager, new object[]
			{
				error
			});
		}

		// Token: 0x17002F1D RID: 12061
		// (get) Token: 0x0600937E RID: 37758 RVA: 0x00257A08 File Offset: 0x00255C08
		public static LocalizedString PartialVerisonMatch
		{
			get
			{
				return new LocalizedString("PartialVerisonMatch", "ExF481C4", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002F1E RID: 12062
		// (get) Token: 0x0600937F RID: 37759 RVA: 0x00257A26 File Offset: 0x00255C26
		public static LocalizedString CasHealthOwaUriHeader
		{
			get
			{
				return new LocalizedString("CasHealthOwaUriHeader", "ExAEED5C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002F1F RID: 12063
		// (get) Token: 0x06009380 RID: 37760 RVA: 0x00257A44 File Offset: 0x00255C44
		public static LocalizedString SetupProgressStartingMailboxAssistantService
		{
			get
			{
				return new LocalizedString("SetupProgressStartingMailboxAssistantService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002F20 RID: 12064
		// (get) Token: 0x06009381 RID: 37761 RVA: 0x00257A62 File Offset: 0x00255C62
		public static LocalizedString VerboseCreatePSFanInProvider
		{
			get
			{
				return new LocalizedString("VerboseCreatePSFanInProvider", "Ex8A2869", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002F21 RID: 12065
		// (get) Token: 0x06009382 RID: 37762 RVA: 0x00257A80 File Offset: 0x00255C80
		public static LocalizedString JournalingParameterErrorFullReportWithoutGcc
		{
			get
			{
				return new LocalizedString("JournalingParameterErrorFullReportWithoutGcc", "ExF53F6E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009383 RID: 37763 RVA: 0x00257AA0 File Offset: 0x00255CA0
		public static LocalizedString DatabaseFilterMustBeValid(string m)
		{
			return new LocalizedString("DatabaseFilterMustBeValid", "Ex7DA160", false, true, Strings.ResourceManager, new object[]
			{
				m
			});
		}

		// Token: 0x17002F22 RID: 12066
		// (get) Token: 0x06009384 RID: 37764 RVA: 0x00257ACF File Offset: 0x00255CCF
		public static LocalizedString MigrationSettingCompeteAfterWithCurrentCompleteAfterInLessThanOneHour
		{
			get
			{
				return new LocalizedString("MigrationSettingCompeteAfterWithCurrentCompleteAfterInLessThanOneHour", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002F23 RID: 12067
		// (get) Token: 0x06009385 RID: 37765 RVA: 0x00257AED File Offset: 0x00255CED
		public static LocalizedString ErrorCannotGenerateSiteMailboxAlias
		{
			get
			{
				return new LocalizedString("ErrorCannotGenerateSiteMailboxAlias", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002F24 RID: 12068
		// (get) Token: 0x06009386 RID: 37766 RVA: 0x00257B0B File Offset: 0x00255D0B
		public static LocalizedString ResumeSgcTimeout
		{
			get
			{
				return new LocalizedString("ResumeSgcTimeout", "Ex6C4233", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009387 RID: 37767 RVA: 0x00257B2C File Offset: 0x00255D2C
		public static LocalizedString UsingTargetMailbox(string targetMailbox)
		{
			return new LocalizedString("UsingTargetMailbox", "", false, false, Strings.ResourceManager, new object[]
			{
				targetMailbox
			});
		}

		// Token: 0x17002F25 RID: 12069
		// (get) Token: 0x06009388 RID: 37768 RVA: 0x00257B5B File Offset: 0x00255D5B
		public static LocalizedString ProgressActivityNewFederationTrust
		{
			get
			{
				return new LocalizedString("ProgressActivityNewFederationTrust", "Ex28630C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002F26 RID: 12070
		// (get) Token: 0x06009389 RID: 37769 RVA: 0x00257B79 File Offset: 0x00255D79
		public static LocalizedString ErrorOnboardingDisabled
		{
			get
			{
				return new LocalizedString("ErrorOnboardingDisabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600938A RID: 37770 RVA: 0x00257B98 File Offset: 0x00255D98
		public static LocalizedString VerboseUninstallWSManModule(string module)
		{
			return new LocalizedString("VerboseUninstallWSManModule", "ExBEA949", false, true, Strings.ResourceManager, new object[]
			{
				module
			});
		}

		// Token: 0x0600938B RID: 37771 RVA: 0x00257BC8 File Offset: 0x00255DC8
		public static LocalizedString ConfirmationMessageSetClientAccessArray(string idStringValue)
		{
			return new LocalizedString("ConfirmationMessageSetClientAccessArray", "Ex058132", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		// Token: 0x0600938C RID: 37772 RVA: 0x00257BF8 File Offset: 0x00255DF8
		public static LocalizedString DomainControllerServerNotFound(string serverName)
		{
			return new LocalizedString("DomainControllerServerNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		// Token: 0x17002F27 RID: 12071
		// (get) Token: 0x0600938D RID: 37773 RVA: 0x00257C27 File Offset: 0x00255E27
		public static LocalizedString CompletedAceActivity
		{
			get
			{
				return new LocalizedString("CompletedAceActivity", "ExEBAAE7", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600938E RID: 37774 RVA: 0x00257C48 File Offset: 0x00255E48
		public static LocalizedString TenantNotificationDebugFormatMessageFailed(CultureInfo language)
		{
			return new LocalizedString("TenantNotificationDebugFormatMessageFailed", "ExDDAEFE", false, true, Strings.ResourceManager, new object[]
			{
				language
			});
		}

		// Token: 0x17002F28 RID: 12072
		// (get) Token: 0x0600938F RID: 37775 RVA: 0x00257C77 File Offset: 0x00255E77
		public static LocalizedString ErrorSpecifyOrganizatonAndContainerBoth
		{
			get
			{
				return new LocalizedString("ErrorSpecifyOrganizatonAndContainerBoth", "Ex8DA906", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002F29 RID: 12073
		// (get) Token: 0x06009390 RID: 37776 RVA: 0x00257C95 File Offset: 0x00255E95
		public static LocalizedString UnableToRetrieveManagedFolder
		{
			get
			{
				return new LocalizedString("UnableToRetrieveManagedFolder", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009391 RID: 37777 RVA: 0x00257CB4 File Offset: 0x00255EB4
		public static LocalizedString ConfirmationMessageSetMobileSyncVirtualDirectory(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetMobileSyncVirtualDirectory", "Ex4C366E", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x17002F2A RID: 12074
		// (get) Token: 0x06009392 RID: 37778 RVA: 0x00257CE3 File Offset: 0x00255EE3
		public static LocalizedString AddressRewriteWildcardWarning
		{
			get
			{
				return new LocalizedString("AddressRewriteWildcardWarning", "ExBA842F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009393 RID: 37779 RVA: 0x00257D04 File Offset: 0x00255F04
		public static LocalizedString MigrationMailboxLimitExceeded(int maxCount)
		{
			return new LocalizedString("MigrationMailboxLimitExceeded", "ExBEBEDD", false, true, Strings.ResourceManager, new object[]
			{
				maxCount
			});
		}

		// Token: 0x17002F2B RID: 12075
		// (get) Token: 0x06009394 RID: 37780 RVA: 0x00257D38 File Offset: 0x00255F38
		public static LocalizedString ForeignConnectorNullOrEmptyDropDirectory
		{
			get
			{
				return new LocalizedString("ForeignConnectorNullOrEmptyDropDirectory", "ExD6AD20", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002F2C RID: 12076
		// (get) Token: 0x06009395 RID: 37781 RVA: 0x00257D56 File Offset: 0x00255F56
		public static LocalizedString SetupComponentConfiguringAddressBookService
		{
			get
			{
				return new LocalizedString("SetupComponentConfiguringAddressBookService", "ExBF1D0A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002F2D RID: 12077
		// (get) Token: 0x06009396 RID: 37782 RVA: 0x00257D74 File Offset: 0x00255F74
		public static LocalizedString ErrorTemplatesMayNotContainImmutableIds
		{
			get
			{
				return new LocalizedString("ErrorTemplatesMayNotContainImmutableIds", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009397 RID: 37783 RVA: 0x00257D94 File Offset: 0x00255F94
		public static LocalizedString WarningDedicatedMailboxPlanNotFound(string mailboxPlanName)
		{
			return new LocalizedString("WarningDedicatedMailboxPlanNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				mailboxPlanName
			});
		}

		// Token: 0x17002F2E RID: 12078
		// (get) Token: 0x06009398 RID: 37784 RVA: 0x00257DC3 File Offset: 0x00255FC3
		public static LocalizedString AuthenticationMethodWindowsIntegrated
		{
			get
			{
				return new LocalizedString("AuthenticationMethodWindowsIntegrated", "Ex96B353", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009399 RID: 37785 RVA: 0x00257DE4 File Offset: 0x00255FE4
		public static LocalizedString ConfirmationMessageNewEdgeSyncEhfConnectorWithSiteSpecified(string id)
		{
			return new LocalizedString("ConfirmationMessageNewEdgeSyncEhfConnectorWithSiteSpecified", "ExA9E753", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x17002F2F RID: 12079
		// (get) Token: 0x0600939A RID: 37786 RVA: 0x00257E13 File Offset: 0x00256013
		public static LocalizedString StartOrganizationUpgradeDescription
		{
			get
			{
				return new LocalizedString("StartOrganizationUpgradeDescription", "Ex31CC64", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002F30 RID: 12080
		// (get) Token: 0x0600939B RID: 37787 RVA: 0x00257E31 File Offset: 0x00256031
		public static LocalizedString SetupProgressSyncAccountsMirroredAccountsEnabled
		{
			get
			{
				return new LocalizedString("SetupProgressSyncAccountsMirroredAccountsEnabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002F31 RID: 12081
		// (get) Token: 0x0600939C RID: 37788 RVA: 0x00257E4F File Offset: 0x0025604F
		public static LocalizedString ErrorManagedByCannotBeEmpty
		{
			get
			{
				return new LocalizedString("ErrorManagedByCannotBeEmpty", "ExB06609", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600939D RID: 37789 RVA: 0x00257E70 File Offset: 0x00256070
		public static LocalizedString ErrorUnableToRenameEndUserRoleNameAlreadyExist(string actualEndUserRole, string targetEndUserRoleName)
		{
			return new LocalizedString("ErrorUnableToRenameEndUserRoleNameAlreadyExist", "ExF3C4E1", false, true, Strings.ResourceManager, new object[]
			{
				actualEndUserRole,
				targetEndUserRoleName
			});
		}

		// Token: 0x0600939E RID: 37790 RVA: 0x00257EA4 File Offset: 0x002560A4
		public static LocalizedString ErrorSharePointSiteHasNoValidWebCollectionUrl(string url)
		{
			return new LocalizedString("ErrorSharePointSiteHasNoValidWebCollectionUrl", "", false, false, Strings.ResourceManager, new object[]
			{
				url
			});
		}

		// Token: 0x17002F32 RID: 12082
		// (get) Token: 0x0600939F RID: 37791 RVA: 0x00257ED3 File Offset: 0x002560D3
		public static LocalizedString VerifyStoreServiceExists
		{
			get
			{
				return new LocalizedString("VerifyStoreServiceExists", "Ex333B4E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060093A0 RID: 37792 RVA: 0x00257EF4 File Offset: 0x002560F4
		public static LocalizedString FailedToValidateTemplate(Guid templateId, WellKnownErrorCode eCode)
		{
			return new LocalizedString("FailedToValidateTemplate", "", false, false, Strings.ResourceManager, new object[]
			{
				templateId,
				eCode
			});
		}

		// Token: 0x17002F33 RID: 12083
		// (get) Token: 0x060093A1 RID: 37793 RVA: 0x00257F31 File Offset: 0x00256131
		public static LocalizedString DefaultUser
		{
			get
			{
				return new LocalizedString("DefaultUser", "Ex4A31FC", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002F34 RID: 12084
		// (get) Token: 0x060093A2 RID: 37794 RVA: 0x00257F4F File Offset: 0x0025614F
		public static LocalizedString ErrorDumpsterTagWrongRetentionAction
		{
			get
			{
				return new LocalizedString("ErrorDumpsterTagWrongRetentionAction", "Ex56E4E4", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060093A3 RID: 37795 RVA: 0x00257F70 File Offset: 0x00256170
		public static LocalizedString VerbosePathOnFixedOrNetworkDriveCondition(string server, string path)
		{
			return new LocalizedString("VerbosePathOnFixedOrNetworkDriveCondition", "ExB5C1D7", false, true, Strings.ResourceManager, new object[]
			{
				server,
				path
			});
		}

		// Token: 0x17002F35 RID: 12085
		// (get) Token: 0x060093A4 RID: 37796 RVA: 0x00257FA3 File Offset: 0x002561A3
		public static LocalizedString ErrorAuthCannotDeleteCurrent
		{
			get
			{
				return new LocalizedString("ErrorAuthCannotDeleteCurrent", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002F36 RID: 12086
		// (get) Token: 0x060093A5 RID: 37797 RVA: 0x00257FC1 File Offset: 0x002561C1
		public static LocalizedString ConfirmationMessageNewSearchDocumentFormat
		{
			get
			{
				return new LocalizedString("ConfirmationMessageNewSearchDocumentFormat", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060093A6 RID: 37798 RVA: 0x00257FE0 File Offset: 0x002561E0
		public static LocalizedString ErrorGrantSendOnBehalfToRecipientTypeError(string recipient)
		{
			return new LocalizedString("ErrorGrantSendOnBehalfToRecipientTypeError", "ExE27825", false, true, Strings.ResourceManager, new object[]
			{
				recipient
			});
		}

		// Token: 0x060093A7 RID: 37799 RVA: 0x00258010 File Offset: 0x00256210
		public static LocalizedString ErrorCannedRoleGroupCannotBeEmpty(string roleGroupName, string membersToRemove)
		{
			return new LocalizedString("ErrorCannedRoleGroupCannotBeEmpty", "ExE62E99", false, true, Strings.ResourceManager, new object[]
			{
				roleGroupName,
				membersToRemove
			});
		}

		// Token: 0x060093A8 RID: 37800 RVA: 0x00258044 File Offset: 0x00256244
		public static LocalizedString MonitoringItemAlreadyHasLocalOverride(string workitem, string overrideName, string workitemType)
		{
			return new LocalizedString("MonitoringItemAlreadyHasLocalOverride", "", false, false, Strings.ResourceManager, new object[]
			{
				workitem,
				overrideName,
				workitemType
			});
		}

		// Token: 0x060093A9 RID: 37801 RVA: 0x0025807C File Offset: 0x0025627C
		public static LocalizedString MismatchedFederation(string localTokenIssuerUri, string remoteTokenIssuerUris, string localApplicationUri, string remoteApplicationUris)
		{
			return new LocalizedString("MismatchedFederation", "", false, false, Strings.ResourceManager, new object[]
			{
				localTokenIssuerUri,
				remoteTokenIssuerUris,
				localApplicationUri,
				remoteApplicationUris
			});
		}

		// Token: 0x060093AA RID: 37802 RVA: 0x002580B8 File Offset: 0x002562B8
		public static LocalizedString ProvideSnapinNameForCmdletEntryForRole(string roleType)
		{
			return new LocalizedString("ProvideSnapinNameForCmdletEntryForRole", "Ex1C0F03", false, true, Strings.ResourceManager, new object[]
			{
				roleType
			});
		}

		// Token: 0x060093AB RID: 37803 RVA: 0x002580E8 File Offset: 0x002562E8
		public static LocalizedString ErrorUserOrSecurityGroupNotFound(string id)
		{
			return new LocalizedString("ErrorUserOrSecurityGroupNotFound", "ExC607B5", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x060093AC RID: 37804 RVA: 0x00258118 File Offset: 0x00256318
		public static LocalizedString ConfirmationMessageMoveMailboxDatabaseMasterSourceServer(string sourceserver, string targetserver)
		{
			return new LocalizedString("ConfirmationMessageMoveMailboxDatabaseMasterSourceServer", "Ex257B3A", false, true, Strings.ResourceManager, new object[]
			{
				sourceserver,
				targetserver
			});
		}

		// Token: 0x060093AD RID: 37805 RVA: 0x0025814C File Offset: 0x0025634C
		public static LocalizedString ProgressActivityRemovingManagementRoleTree(string id)
		{
			return new LocalizedString("ProgressActivityRemovingManagementRoleTree", "Ex532853", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x060093AE RID: 37806 RVA: 0x0025817C File Offset: 0x0025637C
		public static LocalizedString ServiceDidNotReachStatus(string servicename, string status)
		{
			return new LocalizedString("ServiceDidNotReachStatus", "Ex3B7627", false, true, Strings.ResourceManager, new object[]
			{
				servicename,
				status
			});
		}

		// Token: 0x060093AF RID: 37807 RVA: 0x002581B0 File Offset: 0x002563B0
		public static LocalizedString TestMailflowInvalidTargetEmailAddress(string targetEmailAddress)
		{
			return new LocalizedString("TestMailflowInvalidTargetEmailAddress", "ExB6A436", false, true, Strings.ResourceManager, new object[]
			{
				targetEmailAddress
			});
		}

		// Token: 0x17002F37 RID: 12087
		// (get) Token: 0x060093B0 RID: 37808 RVA: 0x002581DF File Offset: 0x002563DF
		public static LocalizedString ServerLocatorServiceCheckDesc
		{
			get
			{
				return new LocalizedString("ServerLocatorServiceCheckDesc", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060093B1 RID: 37809 RVA: 0x00258200 File Offset: 0x00256400
		public static LocalizedString ErrorOrganizationNotUnique(string idStringValue)
		{
			return new LocalizedString("ErrorOrganizationNotUnique", "Ex77A3D2", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		// Token: 0x17002F38 RID: 12088
		// (get) Token: 0x060093B2 RID: 37810 RVA: 0x0025822F File Offset: 0x0025642F
		public static LocalizedString AuthenticationMethodUnknown
		{
			get
			{
				return new LocalizedString("AuthenticationMethodUnknown", "Ex3B4F20", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060093B3 RID: 37811 RVA: 0x00258250 File Offset: 0x00256450
		public static LocalizedString ConfirmationMessageRemovePhoto(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemovePhoto", "", false, false, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x060093B4 RID: 37812 RVA: 0x00258280 File Offset: 0x00256480
		public static LocalizedString ErrorCannotGenerateExternalDirectoryObjectIdOnInternalRecipientType(string id, string recipientType)
		{
			return new LocalizedString("ErrorCannotGenerateExternalDirectoryObjectIdOnInternalRecipientType", "", false, false, Strings.ResourceManager, new object[]
			{
				id,
				recipientType
			});
		}

		// Token: 0x17002F39 RID: 12089
		// (get) Token: 0x060093B5 RID: 37813 RVA: 0x002582B3 File Offset: 0x002564B3
		public static LocalizedString FileDistributionServiceComponentDescription
		{
			get
			{
				return new LocalizedString("FileDistributionServiceComponentDescription", "Ex968A86", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060093B6 RID: 37814 RVA: 0x002582D4 File Offset: 0x002564D4
		public static LocalizedString TotalFolderSize(string folderPath)
		{
			return new LocalizedString("TotalFolderSize", "", false, false, Strings.ResourceManager, new object[]
			{
				folderPath
			});
		}

		// Token: 0x17002F3A RID: 12090
		// (get) Token: 0x060093B7 RID: 37815 RVA: 0x00258303 File Offset: 0x00256503
		public static LocalizedString MtrtMessageDefer
		{
			get
			{
				return new LocalizedString("MtrtMessageDefer", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060093B8 RID: 37816 RVA: 0x00258324 File Offset: 0x00256524
		public static LocalizedString InterceptorErrorInvalidConditionMatchTypePair(string value, string error)
		{
			return new LocalizedString("InterceptorErrorInvalidConditionMatchTypePair", "", false, false, Strings.ResourceManager, new object[]
			{
				value,
				error
			});
		}

		// Token: 0x060093B9 RID: 37817 RVA: 0x00258358 File Offset: 0x00256558
		public static LocalizedString ErrorExistingAuthServerWithDefaultAuthorizationEndpoint(string authServer)
		{
			return new LocalizedString("ErrorExistingAuthServerWithDefaultAuthorizationEndpoint", "", false, false, Strings.ResourceManager, new object[]
			{
				authServer
			});
		}

		// Token: 0x060093BA RID: 37818 RVA: 0x00258388 File Offset: 0x00256588
		public static LocalizedString ConfirmationResettingPartitionTrust(string partitionName, string trust)
		{
			return new LocalizedString("ConfirmationResettingPartitionTrust", "", false, false, Strings.ResourceManager, new object[]
			{
				partitionName,
				trust
			});
		}

		// Token: 0x17002F3B RID: 12091
		// (get) Token: 0x060093BB RID: 37819 RVA: 0x002583BB File Offset: 0x002565BB
		public static LocalizedString OrganizationNotSpecified
		{
			get
			{
				return new LocalizedString("OrganizationNotSpecified", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060093BC RID: 37820 RVA: 0x002583DC File Offset: 0x002565DC
		public static LocalizedString ErrorFailedToGenerateRandomPassword(string password, string fullName, string accounName, string errorMessage)
		{
			return new LocalizedString("ErrorFailedToGenerateRandomPassword", "Ex87B08C", false, true, Strings.ResourceManager, new object[]
			{
				password,
				fullName,
				accounName,
				errorMessage
			});
		}

		// Token: 0x17002F3C RID: 12092
		// (get) Token: 0x060093BD RID: 37821 RVA: 0x00258417 File Offset: 0x00256617
		public static LocalizedString ErrorDlpPolicyNameOrTemplateParameterMustBeSpecified
		{
			get
			{
				return new LocalizedString("ErrorDlpPolicyNameOrTemplateParameterMustBeSpecified", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060093BE RID: 37822 RVA: 0x00258438 File Offset: 0x00256638
		public static LocalizedString DagNodeNotFound(string nodeName)
		{
			return new LocalizedString("DagNodeNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				nodeName
			});
		}

		// Token: 0x17002F3D RID: 12093
		// (get) Token: 0x060093BF RID: 37823 RVA: 0x00258467 File Offset: 0x00256667
		public static LocalizedString NoValidIssuerCertificate
		{
			get
			{
				return new LocalizedString("NoValidIssuerCertificate", "ExC92FFF", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002F3E RID: 12094
		// (get) Token: 0x060093C0 RID: 37824 RVA: 0x00258485 File Offset: 0x00256685
		public static LocalizedString UninstallMigrationWorkflowServiceTask
		{
			get
			{
				return new LocalizedString("UninstallMigrationWorkflowServiceTask", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060093C1 RID: 37825 RVA: 0x002584A4 File Offset: 0x002566A4
		public static LocalizedString ConfirmationMessageUpdateGlobalAddressList(string Identity)
		{
			return new LocalizedString("ConfirmationMessageUpdateGlobalAddressList", "Ex93C79A", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x17002F3F RID: 12095
		// (get) Token: 0x060093C2 RID: 37826 RVA: 0x002584D3 File Offset: 0x002566D3
		public static LocalizedString MustSpecifyEitherAccessOrExtendedRightsException
		{
			get
			{
				return new LocalizedString("MustSpecifyEitherAccessOrExtendedRightsException", "ExBBAA3C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060093C3 RID: 37827 RVA: 0x002584F4 File Offset: 0x002566F4
		public static LocalizedString OrganizationHasNoFederatedDomains(string organization)
		{
			return new LocalizedString("OrganizationHasNoFederatedDomains", "", false, false, Strings.ResourceManager, new object[]
			{
				organization
			});
		}

		// Token: 0x060093C4 RID: 37828 RVA: 0x00258524 File Offset: 0x00256724
		public static LocalizedString ErrorRequestCompletedDuringCancellation(string indexEntry)
		{
			return new LocalizedString("ErrorRequestCompletedDuringCancellation", "ExCEC05F", false, true, Strings.ResourceManager, new object[]
			{
				indexEntry
			});
		}

		// Token: 0x17002F40 RID: 12096
		// (get) Token: 0x060093C5 RID: 37829 RVA: 0x00258553 File Offset: 0x00256753
		public static LocalizedString RpcClientAccessServiceDescription
		{
			get
			{
				return new LocalizedString("RpcClientAccessServiceDescription", "Ex286B2B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060093C6 RID: 37830 RVA: 0x00258574 File Offset: 0x00256774
		public static LocalizedString ErrorInvalidMailboxAssociationIdentity(string input)
		{
			return new LocalizedString("ErrorInvalidMailboxAssociationIdentity", "", false, false, Strings.ResourceManager, new object[]
			{
				input
			});
		}

		// Token: 0x17002F41 RID: 12097
		// (get) Token: 0x060093C7 RID: 37831 RVA: 0x002585A3 File Offset: 0x002567A3
		public static LocalizedString ConfirmationMessageNewMapiVirtualDirectory
		{
			get
			{
				return new LocalizedString("ConfirmationMessageNewMapiVirtualDirectory", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060093C8 RID: 37832 RVA: 0x002585C4 File Offset: 0x002567C4
		public static LocalizedString CasHealthPowerShellConnectionAuthenticationType(string authType)
		{
			return new LocalizedString("CasHealthPowerShellConnectionAuthenticationType", "ExE00DA0", false, true, Strings.ResourceManager, new object[]
			{
				authType
			});
		}

		// Token: 0x17002F42 RID: 12098
		// (get) Token: 0x060093C9 RID: 37833 RVA: 0x002585F3 File Offset: 0x002567F3
		public static LocalizedString VerboseResolvingRecipientOrganizationalUnitScope
		{
			get
			{
				return new LocalizedString("VerboseResolvingRecipientOrganizationalUnitScope", "Ex82A98A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060093CA RID: 37834 RVA: 0x00258614 File Offset: 0x00256814
		public static LocalizedString ErrorRetentionPolicyNotUnique(string idStringValue)
		{
			return new LocalizedString("ErrorRetentionPolicyNotUnique", "ExAA47FB", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		// Token: 0x060093CB RID: 37835 RVA: 0x00258644 File Offset: 0x00256844
		public static LocalizedString CasHealthEcpServiceRequestResult(string statusCode)
		{
			return new LocalizedString("CasHealthEcpServiceRequestResult", "Ex443C5B", false, true, Strings.ResourceManager, new object[]
			{
				statusCode
			});
		}

		// Token: 0x060093CC RID: 37836 RVA: 0x00258674 File Offset: 0x00256874
		public static LocalizedString ErrorLargeItemLimitAlreadyExceeded(string name, int encountered, string newlimit)
		{
			return new LocalizedString("ErrorLargeItemLimitAlreadyExceeded", "", false, false, Strings.ResourceManager, new object[]
			{
				name,
				encountered,
				newlimit
			});
		}

		// Token: 0x060093CD RID: 37837 RVA: 0x002586B0 File Offset: 0x002568B0
		public static LocalizedString ErrorELCFolderNotUnique(string idStringValue)
		{
			return new LocalizedString("ErrorELCFolderNotUnique", "Ex77A43F", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		// Token: 0x17002F43 RID: 12099
		// (get) Token: 0x060093CE RID: 37838 RVA: 0x002586DF File Offset: 0x002568DF
		public static LocalizedString AutodiscoverySuccess
		{
			get
			{
				return new LocalizedString("AutodiscoverySuccess", "Ex2407E6", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060093CF RID: 37839 RVA: 0x00258700 File Offset: 0x00256900
		public static LocalizedString CasHealthWebAppNoSession(string hostName, string message, string innerMessage)
		{
			return new LocalizedString("CasHealthWebAppNoSession", "Ex21303E", false, true, Strings.ResourceManager, new object[]
			{
				hostName,
				message,
				innerMessage
			});
		}

		// Token: 0x060093D0 RID: 37840 RVA: 0x00258738 File Offset: 0x00256938
		public static LocalizedString ConfirmationMessageAutoTagTrain(string Identity)
		{
			return new LocalizedString("ConfirmationMessageAutoTagTrain", "Ex8DCF83", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x060093D1 RID: 37841 RVA: 0x00258768 File Offset: 0x00256968
		public static LocalizedString ConfirmationMessageRemoveInboxRule(string Identity, string mailbox)
		{
			return new LocalizedString("ConfirmationMessageRemoveInboxRule", "Ex360915", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				mailbox
			});
		}

		// Token: 0x17002F44 RID: 12100
		// (get) Token: 0x060093D2 RID: 37842 RVA: 0x0025879B File Offset: 0x0025699B
		public static LocalizedString CentralAdminServiceDescription
		{
			get
			{
				return new LocalizedString("CentralAdminServiceDescription", "ExD95CE1", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060093D3 RID: 37843 RVA: 0x002587BC File Offset: 0x002569BC
		public static LocalizedString CasHealthOwaTestUrlSpecified(string url)
		{
			return new LocalizedString("CasHealthOwaTestUrlSpecified", "ExC95D31", false, true, Strings.ResourceManager, new object[]
			{
				url
			});
		}

		// Token: 0x060093D4 RID: 37844 RVA: 0x002587EC File Offset: 0x002569EC
		public static LocalizedString ParsingTokenIssuerCertificate(string thumbprint)
		{
			return new LocalizedString("ParsingTokenIssuerCertificate", "Ex7E1125", false, true, Strings.ResourceManager, new object[]
			{
				thumbprint
			});
		}

		// Token: 0x17002F45 RID: 12101
		// (get) Token: 0x060093D5 RID: 37845 RVA: 0x0025881B File Offset: 0x00256A1B
		public static LocalizedString ErrorCannotSetDowngradedExchangeServerAuthOnEdge
		{
			get
			{
				return new LocalizedString("ErrorCannotSetDowngradedExchangeServerAuthOnEdge", "Ex1BEC33", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002F46 RID: 12102
		// (get) Token: 0x060093D6 RID: 37846 RVA: 0x00258839 File Offset: 0x00256A39
		public static LocalizedString MigrationCsvStreamParameterInvalid
		{
			get
			{
				return new LocalizedString("MigrationCsvStreamParameterInvalid", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002F47 RID: 12103
		// (get) Token: 0x060093D7 RID: 37847 RVA: 0x00258857 File Offset: 0x00256A57
		public static LocalizedString InstallMailSubmissionServiceTask
		{
			get
			{
				return new LocalizedString("InstallMailSubmissionServiceTask", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002F48 RID: 12104
		// (get) Token: 0x060093D8 RID: 37848 RVA: 0x00258875 File Offset: 0x00256A75
		public static LocalizedString SetupComponentMalwareFiltering
		{
			get
			{
				return new LocalizedString("SetupComponentMalwareFiltering", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002F49 RID: 12105
		// (get) Token: 0x060093D9 RID: 37849 RVA: 0x00258893 File Offset: 0x00256A93
		public static LocalizedString ProtolcolWarnTrustAllCertificates
		{
			get
			{
				return new LocalizedString("ProtolcolWarnTrustAllCertificates", "Ex860457", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060093DA RID: 37850 RVA: 0x002588B4 File Offset: 0x00256AB4
		public static LocalizedString ErrorMailboxServerNotFound(string idStringValue)
		{
			return new LocalizedString("ErrorMailboxServerNotFound", "ExD2A29B", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		// Token: 0x060093DB RID: 37851 RVA: 0x002588E4 File Offset: 0x00256AE4
		public static LocalizedString ErrorDirectoryManagementWebServiceNotFound(string path)
		{
			return new LocalizedString("ErrorDirectoryManagementWebServiceNotFound", "Ex340AF9", false, true, Strings.ResourceManager, new object[]
			{
				path
			});
		}

		// Token: 0x060093DC RID: 37852 RVA: 0x00258914 File Offset: 0x00256B14
		public static LocalizedString SafeSendersNotUpdated(int contacts, int safeSenders, int safeSenderDomains, string identity)
		{
			return new LocalizedString("SafeSendersNotUpdated", "ExB7A18E", false, true, Strings.ResourceManager, new object[]
			{
				contacts,
				safeSenders,
				safeSenderDomains,
				identity
			});
		}

		// Token: 0x17002F4A RID: 12106
		// (get) Token: 0x060093DD RID: 37853 RVA: 0x0025895E File Offset: 0x00256B5E
		public static LocalizedString ErrorLocalNotForTenantAdmins
		{
			get
			{
				return new LocalizedString("ErrorLocalNotForTenantAdmins", "Ex67D621", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060093DE RID: 37854 RVA: 0x0025897C File Offset: 0x00256B7C
		public static LocalizedString ConfirmationMessageSetMailboxAuditLogAgeLimitZero(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetMailboxAuditLogAgeLimitZero", "Ex01C8D3", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x060093DF RID: 37855 RVA: 0x002589AC File Offset: 0x00256BAC
		public static LocalizedString ConfirmationMessageEnableMailboxWithRemoteArchive(string Name, string ArchiveDomain)
		{
			return new LocalizedString("ConfirmationMessageEnableMailboxWithRemoteArchive", "ExA166D3", false, true, Strings.ResourceManager, new object[]
			{
				Name,
				ArchiveDomain
			});
		}

		// Token: 0x17002F4B RID: 12107
		// (get) Token: 0x060093E0 RID: 37856 RVA: 0x002589DF File Offset: 0x00256BDF
		public static LocalizedString AttemptToMakeUserLogon
		{
			get
			{
				return new LocalizedString("AttemptToMakeUserLogon", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060093E1 RID: 37857 RVA: 0x00258A00 File Offset: 0x00256C00
		public static LocalizedString ErrorRoleNotUnique(string idStringValue)
		{
			return new LocalizedString("ErrorRoleNotUnique", "Ex75BFC9", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		// Token: 0x060093E2 RID: 37858 RVA: 0x00258A30 File Offset: 0x00256C30
		public static LocalizedString ConfirmationMessageRemoveMobileDeviceWhileRemoteWipeIsPending(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveMobileDeviceWhileRemoteWipeIsPending", "Ex7440BD", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x060093E3 RID: 37859 RVA: 0x00258A60 File Offset: 0x00256C60
		public static LocalizedString ConfirmationMessageCompleteMigrationBatchWithPendingItems(string batchName, int pendingItemCount)
		{
			return new LocalizedString("ConfirmationMessageCompleteMigrationBatchWithPendingItems", "", false, false, Strings.ResourceManager, new object[]
			{
				batchName,
				pendingItemCount
			});
		}

		// Token: 0x060093E4 RID: 37860 RVA: 0x00258A98 File Offset: 0x00256C98
		public static LocalizedString ConfirmationMessageEnableMailContact(string Identity, string ExternalEmailAddress)
		{
			return new LocalizedString("ConfirmationMessageEnableMailContact", "ExF3A0A7", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				ExternalEmailAddress
			});
		}

		// Token: 0x17002F4C RID: 12108
		// (get) Token: 0x060093E5 RID: 37861 RVA: 0x00258ACB File Offset: 0x00256CCB
		public static LocalizedString IisTasksWebSiteValidationProperty
		{
			get
			{
				return new LocalizedString("IisTasksWebSiteValidationProperty", "Ex8B9F5D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060093E6 RID: 37862 RVA: 0x00258AEC File Offset: 0x00256CEC
		public static LocalizedString ErrorSingleDatabaseCopy(string db)
		{
			return new LocalizedString("ErrorSingleDatabaseCopy", "ExBC980F", false, true, Strings.ResourceManager, new object[]
			{
				db
			});
		}

		// Token: 0x060093E7 RID: 37863 RVA: 0x00258B1C File Offset: 0x00256D1C
		public static LocalizedString ErrorGlobalAddressListNotFound(string idStringValue)
		{
			return new LocalizedString("ErrorGlobalAddressListNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		// Token: 0x060093E8 RID: 37864 RVA: 0x00258B4C File Offset: 0x00256D4C
		public static LocalizedString VerboseTestSourceServer(string serverFqdn)
		{
			return new LocalizedString("VerboseTestSourceServer", "", false, false, Strings.ResourceManager, new object[]
			{
				serverFqdn
			});
		}

		// Token: 0x060093E9 RID: 37865 RVA: 0x00258B7C File Offset: 0x00256D7C
		public static LocalizedString ErrorArchiveGuidsDontMatch(string sourceId, string destId, Guid sourceGuid, Guid destGuid)
		{
			return new LocalizedString("ErrorArchiveGuidsDontMatch", "Ex6BD2E0", false, true, Strings.ResourceManager, new object[]
			{
				sourceId,
				destId,
				sourceGuid,
				destGuid
			});
		}

		// Token: 0x060093EA RID: 37866 RVA: 0x00258BC4 File Offset: 0x00256DC4
		public static LocalizedString ErrorMailboxHasNoArchive(string identity)
		{
			return new LocalizedString("ErrorMailboxHasNoArchive", "ExA8C796", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x17002F4D RID: 12109
		// (get) Token: 0x060093EB RID: 37867 RVA: 0x00258BF3 File Offset: 0x00256DF3
		public static LocalizedString ErrorIncrementalSyncIntervalCannotBeSetOnNonIncrementalRequests
		{
			get
			{
				return new LocalizedString("ErrorIncrementalSyncIntervalCannotBeSetOnNonIncrementalRequests", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002F4E RID: 12110
		// (get) Token: 0x060093EC RID: 37868 RVA: 0x00258C11 File Offset: 0x00256E11
		public static LocalizedString ErrorCannotRestoreFromPrivateToPublicMailbox
		{
			get
			{
				return new LocalizedString("ErrorCannotRestoreFromPrivateToPublicMailbox", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060093ED RID: 37869 RVA: 0x00258C30 File Offset: 0x00256E30
		public static LocalizedString UsersContainerNotFound(string domain, Guid guid)
		{
			return new LocalizedString("UsersContainerNotFound", "ExB6863D", false, true, Strings.ResourceManager, new object[]
			{
				domain,
				guid
			});
		}

		// Token: 0x060093EE RID: 37870 RVA: 0x00258C68 File Offset: 0x00256E68
		public static LocalizedString ErrorTeamMailboxRemoveByNonOwner(string tm)
		{
			return new LocalizedString("ErrorTeamMailboxRemoveByNonOwner", "", false, false, Strings.ResourceManager, new object[]
			{
				tm
			});
		}

		// Token: 0x060093EF RID: 37871 RVA: 0x00258C98 File Offset: 0x00256E98
		public static LocalizedString ErrorArchiveRecoveryArchiveInUse(string user, Guid archiveGuid, string anotherUser)
		{
			return new LocalizedString("ErrorArchiveRecoveryArchiveInUse", "ExA78846", false, true, Strings.ResourceManager, new object[]
			{
				user,
				archiveGuid,
				anotherUser
			});
		}

		// Token: 0x17002F4F RID: 12111
		// (get) Token: 0x060093F0 RID: 37872 RVA: 0x00258CD4 File Offset: 0x00256ED4
		public static LocalizedString DelegateRoleTypeRecipientAdmin
		{
			get
			{
				return new LocalizedString("DelegateRoleTypeRecipientAdmin", "Ex257CA8", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002F50 RID: 12112
		// (get) Token: 0x060093F1 RID: 37873 RVA: 0x00258CF2 File Offset: 0x00256EF2
		public static LocalizedString SharedCacheServiceDisplayName
		{
			get
			{
				return new LocalizedString("SharedCacheServiceDisplayName", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002F51 RID: 12113
		// (get) Token: 0x060093F2 RID: 37874 RVA: 0x00258D10 File Offset: 0x00256F10
		public static LocalizedString MtrtNoDetailInformation
		{
			get
			{
				return new LocalizedString("MtrtNoDetailInformation", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060093F3 RID: 37875 RVA: 0x00258D30 File Offset: 0x00256F30
		public static LocalizedString DataClassificationAmbiguousIdentifier(string identifier)
		{
			return new LocalizedString("DataClassificationAmbiguousIdentifier", "", false, false, Strings.ResourceManager, new object[]
			{
				identifier
			});
		}

		// Token: 0x060093F4 RID: 37876 RVA: 0x00258D60 File Offset: 0x00256F60
		public static LocalizedString ConfirmationMessageSetMalwareFilterRule(string identity)
		{
			return new LocalizedString("ConfirmationMessageSetMalwareFilterRule", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x060093F5 RID: 37877 RVA: 0x00258D90 File Offset: 0x00256F90
		public static LocalizedString ErrorSettingTeamMailboxUserPermissions(string message)
		{
			return new LocalizedString("ErrorSettingTeamMailboxUserPermissions", "", false, false, Strings.ResourceManager, new object[]
			{
				message
			});
		}

		// Token: 0x060093F6 RID: 37878 RVA: 0x00258DC0 File Offset: 0x00256FC0
		public static LocalizedString ConfirmationMessageSetAdminAuditLogConfig(string org)
		{
			return new LocalizedString("ConfirmationMessageSetAdminAuditLogConfig", "ExD93DDD", false, true, Strings.ResourceManager, new object[]
			{
				org
			});
		}

		// Token: 0x17002F52 RID: 12114
		// (get) Token: 0x060093F7 RID: 37879 RVA: 0x00258DEF File Offset: 0x00256FEF
		public static LocalizedString ErrorLoadCertificateOnEdge
		{
			get
			{
				return new LocalizedString("ErrorLoadCertificateOnEdge", "Ex763565", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060093F8 RID: 37880 RVA: 0x00258E10 File Offset: 0x00257010
		public static LocalizedString PhoneNumberNotANumber(int digits)
		{
			return new LocalizedString("PhoneNumberNotANumber", "Ex1711DD", false, true, Strings.ResourceManager, new object[]
			{
				digits
			});
		}

		// Token: 0x060093F9 RID: 37881 RVA: 0x00258E44 File Offset: 0x00257044
		public static LocalizedString RmsSharedIdentityInconsistentState(LocalizedString details)
		{
			return new LocalizedString("RmsSharedIdentityInconsistentState", "Ex379D99", false, true, Strings.ResourceManager, new object[]
			{
				details
			});
		}

		// Token: 0x17002F53 RID: 12115
		// (get) Token: 0x060093FA RID: 37882 RVA: 0x00258E78 File Offset: 0x00257078
		public static LocalizedString AllPolicyAssignees
		{
			get
			{
				return new LocalizedString("AllPolicyAssignees", "ExAC30D8", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060093FB RID: 37883 RVA: 0x00258E98 File Offset: 0x00257098
		public static LocalizedString ConfirmationMessageSetHostedConnectorFilterPolicy(string identity)
		{
			return new LocalizedString("ConfirmationMessageSetHostedConnectorFilterPolicy", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x060093FC RID: 37884 RVA: 0x00258EC8 File Offset: 0x002570C8
		public static LocalizedString WarningNoDatabasesWereMovedBackToServer(string server)
		{
			return new LocalizedString("WarningNoDatabasesWereMovedBackToServer", "", false, false, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		// Token: 0x060093FD RID: 37885 RVA: 0x00258EF8 File Offset: 0x002570F8
		public static LocalizedString DagTaskCheckingClusterMembershipOfServer(string mailboxServerName)
		{
			return new LocalizedString("DagTaskCheckingClusterMembershipOfServer", "", false, false, Strings.ResourceManager, new object[]
			{
				mailboxServerName
			});
		}

		// Token: 0x060093FE RID: 37886 RVA: 0x00258F28 File Offset: 0x00257128
		public static LocalizedString ErrorInvalidApplicationUri(string uri)
		{
			return new LocalizedString("ErrorInvalidApplicationUri", "Ex04285F", false, true, Strings.ResourceManager, new object[]
			{
				uri
			});
		}

		// Token: 0x17002F54 RID: 12116
		// (get) Token: 0x060093FF RID: 37887 RVA: 0x00258F57 File Offset: 0x00257157
		public static LocalizedString ConfirmationTurnOffJournalArchiving
		{
			get
			{
				return new LocalizedString("ConfirmationTurnOffJournalArchiving", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002F55 RID: 12117
		// (get) Token: 0x06009400 RID: 37888 RVA: 0x00258F75 File Offset: 0x00257175
		public static LocalizedString ConfirmationMessageSetSenderIdConfig
		{
			get
			{
				return new LocalizedString("ConfirmationMessageSetSenderIdConfig", "ExA20BF7", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002F56 RID: 12118
		// (get) Token: 0x06009401 RID: 37889 RVA: 0x00258F93 File Offset: 0x00257193
		public static LocalizedString SetupProgressPrecompilingBinaries
		{
			get
			{
				return new LocalizedString("SetupProgressPrecompilingBinaries", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002F57 RID: 12119
		// (get) Token: 0x06009402 RID: 37890 RVA: 0x00258FB1 File Offset: 0x002571B1
		public static LocalizedString ProgressCompletingSearch
		{
			get
			{
				return new LocalizedString("ProgressCompletingSearch", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009403 RID: 37891 RVA: 0x00258FD0 File Offset: 0x002571D0
		public static LocalizedString ErrorWindowsLiveIdNotExist(string liveId)
		{
			return new LocalizedString("ErrorWindowsLiveIdNotExist", "ExE4D0D3", false, true, Strings.ResourceManager, new object[]
			{
				liveId
			});
		}

		// Token: 0x06009404 RID: 37892 RVA: 0x00259000 File Offset: 0x00257200
		public static LocalizedString SendConnectorRgcNotFound(string connectorDn)
		{
			return new LocalizedString("SendConnectorRgcNotFound", "Ex8FE049", false, true, Strings.ResourceManager, new object[]
			{
				connectorDn
			});
		}

		// Token: 0x17002F58 RID: 12120
		// (get) Token: 0x06009405 RID: 37893 RVA: 0x0025902F File Offset: 0x0025722F
		public static LocalizedString CallerIsInMyDefaultContactsFolder
		{
			get
			{
				return new LocalizedString("CallerIsInMyDefaultContactsFolder", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009406 RID: 37894 RVA: 0x00259050 File Offset: 0x00257250
		public static LocalizedString ErrorWhileFolderSyncForDeletion(string folderId)
		{
			return new LocalizedString("ErrorWhileFolderSyncForDeletion", "", false, false, Strings.ResourceManager, new object[]
			{
				folderId
			});
		}

		// Token: 0x06009407 RID: 37895 RVA: 0x00259080 File Offset: 0x00257280
		public static LocalizedString OutboundConnectorIdNotFound(string connectorIdentity)
		{
			return new LocalizedString("OutboundConnectorIdNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				connectorIdentity
			});
		}

		// Token: 0x17002F59 RID: 12121
		// (get) Token: 0x06009408 RID: 37896 RVA: 0x002590AF File Offset: 0x002572AF
		public static LocalizedString SetupProgressMessageTrackingPermissions
		{
			get
			{
				return new LocalizedString("SetupProgressMessageTrackingPermissions", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009409 RID: 37897 RVA: 0x002590D0 File Offset: 0x002572D0
		public static LocalizedString CasHealthWebAppConfirmTestWithServer(LocalizedString applicationLongName, string clientAccessServerName)
		{
			return new LocalizedString("CasHealthWebAppConfirmTestWithServer", "Ex75741D", false, true, Strings.ResourceManager, new object[]
			{
				applicationLongName,
				clientAccessServerName
			});
		}

		// Token: 0x0600940A RID: 37898 RVA: 0x00259108 File Offset: 0x00257308
		public static LocalizedString RestoreMailboxNotE14OrLater(string databaseName)
		{
			return new LocalizedString("RestoreMailboxNotE14OrLater", "Ex305FFA", false, true, Strings.ResourceManager, new object[]
			{
				databaseName
			});
		}

		// Token: 0x0600940B RID: 37899 RVA: 0x00259138 File Offset: 0x00257338
		public static LocalizedString ErrorGroupAlreadyMailEnabled(string id)
		{
			return new LocalizedString("ErrorGroupAlreadyMailEnabled", "Ex472416", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x17002F5A RID: 12122
		// (get) Token: 0x0600940C RID: 37900 RVA: 0x00259167 File Offset: 0x00257367
		public static LocalizedString SetupProgressStartingUMService
		{
			get
			{
				return new LocalizedString("SetupProgressStartingUMService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600940D RID: 37901 RVA: 0x00259188 File Offset: 0x00257388
		public static LocalizedString ErrorCertificateHasNoPrivateKey(string certThumbprint)
		{
			return new LocalizedString("ErrorCertificateHasNoPrivateKey", "Ex6FE967", false, true, Strings.ResourceManager, new object[]
			{
				certThumbprint
			});
		}

		// Token: 0x0600940E RID: 37902 RVA: 0x002591B8 File Offset: 0x002573B8
		public static LocalizedString InfoAddingAce(string dn, string ace)
		{
			return new LocalizedString("InfoAddingAce", "Ex1902B6", false, true, Strings.ResourceManager, new object[]
			{
				dn,
				ace
			});
		}

		// Token: 0x17002F5B RID: 12123
		// (get) Token: 0x0600940F RID: 37903 RVA: 0x002591EB File Offset: 0x002573EB
		public static LocalizedString RequestIsMissing
		{
			get
			{
				return new LocalizedString("RequestIsMissing", "ExF13CAA", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009410 RID: 37904 RVA: 0x0025920C File Offset: 0x0025740C
		public static LocalizedString ConfirmationMessageNewMigrationBatch(string fileName, string tenantName)
		{
			return new LocalizedString("ConfirmationMessageNewMigrationBatch", "Ex7A33F9", false, true, Strings.ResourceManager, new object[]
			{
				fileName,
				tenantName
			});
		}

		// Token: 0x06009411 RID: 37905 RVA: 0x00259240 File Offset: 0x00257440
		public static LocalizedString CrossValidationIncorrectFolds(string mailbox)
		{
			return new LocalizedString("CrossValidationIncorrectFolds", "Ex957A48", false, true, Strings.ResourceManager, new object[]
			{
				mailbox
			});
		}

		// Token: 0x06009412 RID: 37906 RVA: 0x00259270 File Offset: 0x00257470
		public static LocalizedString AddedDeviceFilterRule(string name)
		{
			return new LocalizedString("AddedDeviceFilterRule", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x06009413 RID: 37907 RVA: 0x002592A0 File Offset: 0x002574A0
		public static LocalizedString CurrentQueryTime(string time)
		{
			return new LocalizedString("CurrentQueryTime", "ExFEDF54", false, true, Strings.ResourceManager, new object[]
			{
				time
			});
		}

		// Token: 0x17002F5C RID: 12124
		// (get) Token: 0x06009414 RID: 37908 RVA: 0x002592CF File Offset: 0x002574CF
		public static LocalizedString ConfirmationMessageSetADServerSettings
		{
			get
			{
				return new LocalizedString("ConfirmationMessageSetADServerSettings", "ExE3BB66", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009415 RID: 37909 RVA: 0x002592F0 File Offset: 0x002574F0
		public static LocalizedString NodeNotElement(string node, string fileName)
		{
			return new LocalizedString("NodeNotElement", "Ex61B371", false, true, Strings.ResourceManager, new object[]
			{
				node,
				fileName
			});
		}

		// Token: 0x06009416 RID: 37910 RVA: 0x00259324 File Offset: 0x00257524
		public static LocalizedString ErrorMailboxIsNotAudit(string identity)
		{
			return new LocalizedString("ErrorMailboxIsNotAudit", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x06009417 RID: 37911 RVA: 0x00259354 File Offset: 0x00257554
		public static LocalizedString DCWithGivenNameCouldNotBeFound(string name)
		{
			return new LocalizedString("DCWithGivenNameCouldNotBeFound", "Ex7D97B5", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x06009418 RID: 37912 RVA: 0x00259384 File Offset: 0x00257584
		public static LocalizedString invalidFipsCryptoModeInImportedTrustedPublishingDomain(int cryptoMode)
		{
			return new LocalizedString("invalidFipsCryptoModeInImportedTrustedPublishingDomain", "", false, false, Strings.ResourceManager, new object[]
			{
				cryptoMode
			});
		}

		// Token: 0x06009419 RID: 37913 RVA: 0x002593B8 File Offset: 0x002575B8
		public static LocalizedString DagTaskServerFswServerNotAccessibleWithWmi(string fswServer)
		{
			return new LocalizedString("DagTaskServerFswServerNotAccessibleWithWmi", "", false, false, Strings.ResourceManager, new object[]
			{
				fswServer
			});
		}

		// Token: 0x17002F5D RID: 12125
		// (get) Token: 0x0600941A RID: 37914 RVA: 0x002593E7 File Offset: 0x002575E7
		public static LocalizedString DeviceOk
		{
			get
			{
				return new LocalizedString("DeviceOk", "ExEF7FDD", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600941B RID: 37915 RVA: 0x00259408 File Offset: 0x00257608
		public static LocalizedString WarningDuplicateProxyAddressIsFiltered(string dup)
		{
			return new LocalizedString("WarningDuplicateProxyAddressIsFiltered", "", false, false, Strings.ResourceManager, new object[]
			{
				dup
			});
		}

		// Token: 0x0600941C RID: 37916 RVA: 0x00259438 File Offset: 0x00257638
		public static LocalizedString ExWindowsPermissionsGroupNotFoundException(Guid guid)
		{
			return new LocalizedString("ExWindowsPermissionsGroupNotFoundException", "ExA1CAC9", false, true, Strings.ResourceManager, new object[]
			{
				guid
			});
		}

		// Token: 0x17002F5E RID: 12126
		// (get) Token: 0x0600941D RID: 37917 RVA: 0x0025946C File Offset: 0x0025766C
		public static LocalizedString MountStatusMounted
		{
			get
			{
				return new LocalizedString("MountStatusMounted", "Ex6AD1FC", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600941E RID: 37918 RVA: 0x0025948C File Offset: 0x0025768C
		public static LocalizedString ErrorInvalidParameterForPublicFolderTasks(string parameter, string operation)
		{
			return new LocalizedString("ErrorInvalidParameterForPublicFolderTasks", "", false, false, Strings.ResourceManager, new object[]
			{
				parameter,
				operation
			});
		}

		// Token: 0x17002F5F RID: 12127
		// (get) Token: 0x0600941F RID: 37919 RVA: 0x002594BF File Offset: 0x002576BF
		public static LocalizedString LeaseExpired
		{
			get
			{
				return new LocalizedString("LeaseExpired", "ExE0458D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009420 RID: 37920 RVA: 0x002594E0 File Offset: 0x002576E0
		public static LocalizedString DatabaseNamesMustBeUnique(string message)
		{
			return new LocalizedString("DatabaseNamesMustBeUnique", "Ex11972B", false, true, Strings.ResourceManager, new object[]
			{
				message
			});
		}

		// Token: 0x17002F60 RID: 12128
		// (get) Token: 0x06009421 RID: 37921 RVA: 0x0025950F File Offset: 0x0025770F
		public static LocalizedString ThirdPartyReplCheckDesc
		{
			get
			{
				return new LocalizedString("ThirdPartyReplCheckDesc", "Ex4A2D65", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009422 RID: 37922 RVA: 0x00259530 File Offset: 0x00257730
		public static LocalizedString CouldNotUpgradeDisabledContentSettings(string setting)
		{
			return new LocalizedString("CouldNotUpgradeDisabledContentSettings", "Ex1DD28B", false, true, Strings.ResourceManager, new object[]
			{
				setting
			});
		}

		// Token: 0x17002F61 RID: 12129
		// (get) Token: 0x06009423 RID: 37923 RVA: 0x0025955F File Offset: 0x0025775F
		public static LocalizedString CMCConnectorRequiresTenantScopedInboundConnector
		{
			get
			{
				return new LocalizedString("CMCConnectorRequiresTenantScopedInboundConnector", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009424 RID: 37924 RVA: 0x00259580 File Offset: 0x00257780
		public static LocalizedString ExchangeServerNotFoundException(string p1)
		{
			return new LocalizedString("ExchangeServerNotFoundException", "Ex898E48", false, true, Strings.ResourceManager, new object[]
			{
				p1
			});
		}

		// Token: 0x17002F62 RID: 12130
		// (get) Token: 0x06009425 RID: 37925 RVA: 0x002595AF File Offset: 0x002577AF
		public static LocalizedString SetupProgressStartingWMIService
		{
			get
			{
				return new LocalizedString("SetupProgressStartingWMIService", "ExD0A858", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002F63 RID: 12131
		// (get) Token: 0x06009426 RID: 37926 RVA: 0x002595CD File Offset: 0x002577CD
		public static LocalizedString VerboseCheckRequiredRegistryKeys
		{
			get
			{
				return new LocalizedString("VerboseCheckRequiredRegistryKeys", "Ex713219", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009427 RID: 37927 RVA: 0x002595EC File Offset: 0x002577EC
		public static LocalizedString WarningRmsOnlineAuthenticationCertificateExpiryApproaching(DateTime when)
		{
			return new LocalizedString("WarningRmsOnlineAuthenticationCertificateExpiryApproaching", "", false, false, Strings.ResourceManager, new object[]
			{
				when
			});
		}

		// Token: 0x17002F64 RID: 12132
		// (get) Token: 0x06009428 RID: 37928 RVA: 0x00259620 File Offset: 0x00257820
		public static LocalizedString VerboseStartResolvingUsers
		{
			get
			{
				return new LocalizedString("VerboseStartResolvingUsers", "Ex06819E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002F65 RID: 12133
		// (get) Token: 0x06009429 RID: 37929 RVA: 0x0025963E File Offset: 0x0025783E
		public static LocalizedString InfoCreatePL
		{
			get
			{
				return new LocalizedString("InfoCreatePL", "ExA64E1B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600942A RID: 37930 RVA: 0x0025965C File Offset: 0x0025785C
		public static LocalizedString ConfirmationMessageSetServerMonitor(string monitorName, string targetResource, bool isRepairing)
		{
			return new LocalizedString("ConfirmationMessageSetServerMonitor", "", false, false, Strings.ResourceManager, new object[]
			{
				monitorName,
				targetResource,
				isRepairing
			});
		}

		// Token: 0x17002F66 RID: 12134
		// (get) Token: 0x0600942B RID: 37931 RVA: 0x00259698 File Offset: 0x00257898
		public static LocalizedString ConfirmationMessageDisableSendConnector
		{
			get
			{
				return new LocalizedString("ConfirmationMessageDisableSendConnector", "Ex920CBA", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600942C RID: 37932 RVA: 0x002596B8 File Offset: 0x002578B8
		public static LocalizedString VerboseSaveADSecurityDescriptor(string id)
		{
			return new LocalizedString("VerboseSaveADSecurityDescriptor", "Ex969480", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x17002F67 RID: 12135
		// (get) Token: 0x0600942D RID: 37933 RVA: 0x002596E7 File Offset: 0x002578E7
		public static LocalizedString UsageTypePartner
		{
			get
			{
				return new LocalizedString("UsageTypePartner", "Ex9F9416", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600942E RID: 37934 RVA: 0x00259708 File Offset: 0x00257908
		public static LocalizedString ErrorLeadingTrailingWhitespaces(string param, string value)
		{
			return new LocalizedString("ErrorLeadingTrailingWhitespaces", "ExD12EC9", false, true, Strings.ResourceManager, new object[]
			{
				param,
				value
			});
		}

		// Token: 0x0600942F RID: 37935 RVA: 0x0025973C File Offset: 0x0025793C
		public static LocalizedString RemoveDlpPolicyCorruptRule(string dlpPolicyName, string Details)
		{
			return new LocalizedString("RemoveDlpPolicyCorruptRule", "", false, false, Strings.ResourceManager, new object[]
			{
				dlpPolicyName,
				Details
			});
		}

		// Token: 0x06009430 RID: 37936 RVA: 0x00259770 File Offset: 0x00257970
		public static LocalizedString ExportMailboxShouldExport(string srcDisplayname, string tgtDisplayname, string smtp, string targetFolder)
		{
			return new LocalizedString("ExportMailboxShouldExport", "Ex4B73CF", false, true, Strings.ResourceManager, new object[]
			{
				srcDisplayname,
				tgtDisplayname,
				smtp,
				targetFolder
			});
		}

		// Token: 0x17002F68 RID: 12136
		// (get) Token: 0x06009431 RID: 37937 RVA: 0x002597AB File Offset: 0x002579AB
		public static LocalizedString ErrorInvalidMailboxAuditLogSearchCriteria
		{
			get
			{
				return new LocalizedString("ErrorInvalidMailboxAuditLogSearchCriteria", "Ex14D0CA", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009432 RID: 37938 RVA: 0x002597CC File Offset: 0x002579CC
		public static LocalizedString FoundProcessesForService(string executable, string serviceName, string processId, string startTime, string endTime)
		{
			return new LocalizedString("FoundProcessesForService", "Ex04F535", false, true, Strings.ResourceManager, new object[]
			{
				executable,
				serviceName,
				processId,
				startTime,
				endTime
			});
		}

		// Token: 0x17002F69 RID: 12137
		// (get) Token: 0x06009433 RID: 37939 RVA: 0x0025980C File Offset: 0x00257A0C
		public static LocalizedString ErrorInvalidGroupTypeForPublicToGroups
		{
			get
			{
				return new LocalizedString("ErrorInvalidGroupTypeForPublicToGroups", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009434 RID: 37940 RVA: 0x0025982C File Offset: 0x00257A2C
		public static LocalizedString ErrorGroupNotFoundOnGlobalCatalog(string id, string gc)
		{
			return new LocalizedString("ErrorGroupNotFoundOnGlobalCatalog", "Ex686575", false, true, Strings.ResourceManager, new object[]
			{
				id,
				gc
			});
		}

		// Token: 0x06009435 RID: 37941 RVA: 0x00259860 File Offset: 0x00257A60
		public static LocalizedString CannotCreateRuleDueToVersion(string name)
		{
			return new LocalizedString("CannotCreateRuleDueToVersion", "Ex902D76", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x06009436 RID: 37942 RVA: 0x00259890 File Offset: 0x00257A90
		public static LocalizedString ConfirmationMessageSetDlpPolicy(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetDlpPolicy", "", false, false, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x06009437 RID: 37943 RVA: 0x002598C0 File Offset: 0x00257AC0
		public static LocalizedString ConfirmationMessageEnableOrganizationRelationship(string identity)
		{
			return new LocalizedString("ConfirmationMessageEnableOrganizationRelationship", "ExA2553A", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x17002F6A RID: 12138
		// (get) Token: 0x06009438 RID: 37944 RVA: 0x002598EF File Offset: 0x00257AEF
		public static LocalizedString SetupProgressCreateArbitrationMailbox
		{
			get
			{
				return new LocalizedString("SetupProgressCreateArbitrationMailbox", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002F6B RID: 12139
		// (get) Token: 0x06009439 RID: 37945 RVA: 0x0025990D File Offset: 0x00257B0D
		public static LocalizedString ArchiveDisabledError
		{
			get
			{
				return new LocalizedString("ArchiveDisabledError", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002F6C RID: 12140
		// (get) Token: 0x0600943A RID: 37946 RVA: 0x0025992B File Offset: 0x00257B2B
		public static LocalizedString SSTFileSizeExceedLimit
		{
			get
			{
				return new LocalizedString("SSTFileSizeExceedLimit", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600943B RID: 37947 RVA: 0x0025994C File Offset: 0x00257B4C
		public static LocalizedString CannotFindLocalAdminGroupException(string dn)
		{
			return new LocalizedString("CannotFindLocalAdminGroupException", "Ex3F6F96", false, true, Strings.ResourceManager, new object[]
			{
				dn
			});
		}

		// Token: 0x0600943C RID: 37948 RVA: 0x0025997C File Offset: 0x00257B7C
		public static LocalizedString InvalidSmtpBanner(string banner)
		{
			return new LocalizedString("InvalidSmtpBanner", "Ex039D12", false, true, Strings.ResourceManager, new object[]
			{
				banner
			});
		}

		// Token: 0x17002F6D RID: 12141
		// (get) Token: 0x0600943D RID: 37949 RVA: 0x002599AB File Offset: 0x00257BAB
		public static LocalizedString WarningOABWithoutDistribution
		{
			get
			{
				return new LocalizedString("WarningOABWithoutDistribution", "Ex57A7D5", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002F6E RID: 12142
		// (get) Token: 0x0600943E RID: 37950 RVA: 0x002599C9 File Offset: 0x00257BC9
		public static LocalizedString MtrtReportSeverityLevelMed
		{
			get
			{
				return new LocalizedString("MtrtReportSeverityLevelMed", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600943F RID: 37951 RVA: 0x002599E8 File Offset: 0x00257BE8
		public static LocalizedString RemoveMailboxSearchConfirmation(string identity)
		{
			return new LocalizedString("RemoveMailboxSearchConfirmation", "Ex9AF30F", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x06009440 RID: 37952 RVA: 0x00259A18 File Offset: 0x00257C18
		public static LocalizedString ConfirmationMessageSetGlobalAddressList(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetGlobalAddressList", "Ex309639", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x17002F6F RID: 12143
		// (get) Token: 0x06009441 RID: 37953 RVA: 0x00259A47 File Offset: 0x00257C47
		public static LocalizedString InvalidDlpRoleAccess
		{
			get
			{
				return new LocalizedString("InvalidDlpRoleAccess", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009442 RID: 37954 RVA: 0x00259A68 File Offset: 0x00257C68
		public static LocalizedString ConfirmationMessageSetSyncServiceInstance(string serviceInstanceId)
		{
			return new LocalizedString("ConfirmationMessageSetSyncServiceInstance", "", false, false, Strings.ResourceManager, new object[]
			{
				serviceInstanceId
			});
		}

		// Token: 0x06009443 RID: 37955 RVA: 0x00259A98 File Offset: 0x00257C98
		public static LocalizedString ErrorCannotMoveTeamMailboxesDownlevel(string mailbox)
		{
			return new LocalizedString("ErrorCannotMoveTeamMailboxesDownlevel", "", false, false, Strings.ResourceManager, new object[]
			{
				mailbox
			});
		}

		// Token: 0x17002F70 RID: 12144
		// (get) Token: 0x06009444 RID: 37956 RVA: 0x00259AC7 File Offset: 0x00257CC7
		public static LocalizedString VerboseRestartWSManService
		{
			get
			{
				return new LocalizedString("VerboseRestartWSManService", "Ex55DF97", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002F71 RID: 12145
		// (get) Token: 0x06009445 RID: 37957 RVA: 0x00259AE5 File Offset: 0x00257CE5
		public static LocalizedString ConfirmationMessageConfigureWSManIISHosting
		{
			get
			{
				return new LocalizedString("ConfirmationMessageConfigureWSManIISHosting", "Ex2E5543", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009446 RID: 37958 RVA: 0x00259B04 File Offset: 0x00257D04
		public static LocalizedString ErrorMemberNameUnavailableUsedForDL(string memberName)
		{
			return new LocalizedString("ErrorMemberNameUnavailableUsedForDL", "Ex1428E0", false, true, Strings.ResourceManager, new object[]
			{
				memberName
			});
		}

		// Token: 0x17002F72 RID: 12146
		// (get) Token: 0x06009447 RID: 37959 RVA: 0x00259B33 File Offset: 0x00257D33
		public static LocalizedString ErrorAggregatedMailboxGuidNotSpecified
		{
			get
			{
				return new LocalizedString("ErrorAggregatedMailboxGuidNotSpecified", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009448 RID: 37960 RVA: 0x00259B54 File Offset: 0x00257D54
		public static LocalizedString UmLanguagePackFullPath(string path)
		{
			return new LocalizedString("UmLanguagePackFullPath", "ExBB6A07", false, true, Strings.ResourceManager, new object[]
			{
				path
			});
		}

		// Token: 0x06009449 RID: 37961 RVA: 0x00259B84 File Offset: 0x00257D84
		public static LocalizedString UpdateRecipientNotSupportedInRemoteForestWarning(string alias, string domainController)
		{
			return new LocalizedString("UpdateRecipientNotSupportedInRemoteForestWarning", "Ex891D6D", false, true, Strings.ResourceManager, new object[]
			{
				alias,
				domainController
			});
		}

		// Token: 0x0600944A RID: 37962 RVA: 0x00259BB8 File Offset: 0x00257DB8
		public static LocalizedString ErrorInboxRuleUserInvalid(string user)
		{
			return new LocalizedString("ErrorInboxRuleUserInvalid", "Ex79EE61", false, true, Strings.ResourceManager, new object[]
			{
				user
			});
		}

		// Token: 0x0600944B RID: 37963 RVA: 0x00259BE8 File Offset: 0x00257DE8
		public static LocalizedString NullOrgIdException(string s)
		{
			return new LocalizedString("NullOrgIdException", "", false, false, Strings.ResourceManager, new object[]
			{
				s
			});
		}

		// Token: 0x0600944C RID: 37964 RVA: 0x00259C18 File Offset: 0x00257E18
		public static LocalizedString ErrorResponseContainsError(string code, string message)
		{
			return new LocalizedString("ErrorResponseContainsError", "", false, false, Strings.ResourceManager, new object[]
			{
				code,
				message
			});
		}

		// Token: 0x17002F73 RID: 12147
		// (get) Token: 0x0600944D RID: 37965 RVA: 0x00259C4B File Offset: 0x00257E4B
		public static LocalizedString MobileDeviceLogSuccess
		{
			get
			{
				return new LocalizedString("MobileDeviceLogSuccess", "Ex5648DC", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002F74 RID: 12148
		// (get) Token: 0x0600944E RID: 37966 RVA: 0x00259C69 File Offset: 0x00257E69
		public static LocalizedString TestOutboundOauthLog
		{
			get
			{
				return new LocalizedString("TestOutboundOauthLog", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002F75 RID: 12149
		// (get) Token: 0x0600944F RID: 37967 RVA: 0x00259C87 File Offset: 0x00257E87
		public static LocalizedString UninstallMonitoringCorrelationServiceTask
		{
			get
			{
				return new LocalizedString("UninstallMonitoringCorrelationServiceTask", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002F76 RID: 12150
		// (get) Token: 0x06009450 RID: 37968 RVA: 0x00259CA5 File Offset: 0x00257EA5
		public static LocalizedString UseDagDefaultOnOffOn
		{
			get
			{
				return new LocalizedString("UseDagDefaultOnOffOn", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009451 RID: 37969 RVA: 0x00259CC4 File Offset: 0x00257EC4
		public static LocalizedString FailedToSystemProbeCmdlet(string failure)
		{
			return new LocalizedString("FailedToSystemProbeCmdlet", "", false, false, Strings.ResourceManager, new object[]
			{
				failure
			});
		}

		// Token: 0x06009452 RID: 37970 RVA: 0x00259CF4 File Offset: 0x00257EF4
		public static LocalizedString ErrorCannotModifyPrecannedRole(string id)
		{
			return new LocalizedString("ErrorCannotModifyPrecannedRole", "ExDE074F", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x06009453 RID: 37971 RVA: 0x00259D24 File Offset: 0x00257F24
		public static LocalizedString ErrorPropertiesInvalid(string properties)
		{
			return new LocalizedString("ErrorPropertiesInvalid", "", false, false, Strings.ResourceManager, new object[]
			{
				properties
			});
		}

		// Token: 0x17002F77 RID: 12151
		// (get) Token: 0x06009454 RID: 37972 RVA: 0x00259D53 File Offset: 0x00257F53
		public static LocalizedString SetupProgressFastSearchSeedingPortRule
		{
			get
			{
				return new LocalizedString("SetupProgressFastSearchSeedingPortRule", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009455 RID: 37973 RVA: 0x00259D74 File Offset: 0x00257F74
		public static LocalizedString ComplianceBindingAmbiguous(string name)
		{
			return new LocalizedString("ComplianceBindingAmbiguous", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x06009456 RID: 37974 RVA: 0x00259DA4 File Offset: 0x00257FA4
		public static LocalizedString ClassificationRuleCollectionAnyBlocksExceedLimit(int anyBlocksLimit, string offendingRuleIds)
		{
			return new LocalizedString("ClassificationRuleCollectionAnyBlocksExceedLimit", "", false, false, Strings.ResourceManager, new object[]
			{
				anyBlocksLimit,
				offendingRuleIds
			});
		}

		// Token: 0x06009457 RID: 37975 RVA: 0x00259DDC File Offset: 0x00257FDC
		public static LocalizedString EventManifestActionFailed(string manifestName, string action, int exitCode, string errors)
		{
			return new LocalizedString("EventManifestActionFailed", "Ex35EAD9", false, true, Strings.ResourceManager, new object[]
			{
				manifestName,
				action,
				exitCode,
				errors
			});
		}

		// Token: 0x17002F78 RID: 12152
		// (get) Token: 0x06009458 RID: 37976 RVA: 0x00259E1C File Offset: 0x0025801C
		public static LocalizedString RemoveRemoteAccountPolicyFailedWithExistingMailboxes
		{
			get
			{
				return new LocalizedString("RemoveRemoteAccountPolicyFailedWithExistingMailboxes", "ExF3D3B1", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002F79 RID: 12153
		// (get) Token: 0x06009459 RID: 37977 RVA: 0x00259E3A File Offset: 0x0025803A
		public static LocalizedString BPAUpdateCheckCompleted
		{
			get
			{
				return new LocalizedString("BPAUpdateCheckCompleted", "ExFA729D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600945A RID: 37978 RVA: 0x00259E58 File Offset: 0x00258058
		public static LocalizedString ErrorPublicFolderUserNotUnique(string identity)
		{
			return new LocalizedString("ErrorPublicFolderUserNotUnique", "Ex41F5BF", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x0600945B RID: 37979 RVA: 0x00259E88 File Offset: 0x00258088
		public static LocalizedString ConfirmationMessageRemoveRequestDebug(string requestGuid)
		{
			return new LocalizedString("ConfirmationMessageRemoveRequestDebug", "Ex60E9FC", false, true, Strings.ResourceManager, new object[]
			{
				requestGuid
			});
		}

		// Token: 0x0600945C RID: 37980 RVA: 0x00259EB8 File Offset: 0x002580B8
		public static LocalizedString ConfirmationMessageNewMailUser(string Name, string ExternalEmailAddress, string UserPrincipalName, string OrganizationalUnit)
		{
			return new LocalizedString("ConfirmationMessageNewMailUser", "Ex13F5B0", false, true, Strings.ResourceManager, new object[]
			{
				Name,
				ExternalEmailAddress,
				UserPrincipalName,
				OrganizationalUnit
			});
		}

		// Token: 0x0600945D RID: 37981 RVA: 0x00259EF4 File Offset: 0x002580F4
		public static LocalizedString RawRequestJobDump(string jobDump)
		{
			return new LocalizedString("RawRequestJobDump", "", false, false, Strings.ResourceManager, new object[]
			{
				jobDump
			});
		}

		// Token: 0x0600945E RID: 37982 RVA: 0x00259F24 File Offset: 0x00258124
		public static LocalizedString CouldNotConnectToCluster(string machineName)
		{
			return new LocalizedString("CouldNotConnectToCluster", "ExB48AAB", false, true, Strings.ResourceManager, new object[]
			{
				machineName
			});
		}

		// Token: 0x0600945F RID: 37983 RVA: 0x00259F54 File Offset: 0x00258154
		public static LocalizedString ErrorServerOutOfScope(string mbx, string reason)
		{
			return new LocalizedString("ErrorServerOutOfScope", "Ex8CE8E1", false, true, Strings.ResourceManager, new object[]
			{
				mbx,
				reason
			});
		}

		// Token: 0x06009460 RID: 37984 RVA: 0x00259F88 File Offset: 0x00258188
		public static LocalizedString ConfirmationMessageMailboxAutoReplyConfiguration(string Identity)
		{
			return new LocalizedString("ConfirmationMessageMailboxAutoReplyConfiguration", "Ex48FB06", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x06009461 RID: 37985 RVA: 0x00259FB8 File Offset: 0x002581B8
		public static LocalizedString UpdatingDatabaseCopyObject(string hostServer, string replayLag, string truncLag)
		{
			return new LocalizedString("UpdatingDatabaseCopyObject", "Ex42F1B5", false, true, Strings.ResourceManager, new object[]
			{
				hostServer,
				replayLag,
				truncLag
			});
		}

		// Token: 0x06009462 RID: 37986 RVA: 0x00259FF0 File Offset: 0x002581F0
		public static LocalizedString ErrorRemoveAddressBookPolicyWithAssociatedUsers(string name)
		{
			return new LocalizedString("ErrorRemoveAddressBookPolicyWithAssociatedUsers", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x06009463 RID: 37987 RVA: 0x0025A020 File Offset: 0x00258220
		public static LocalizedString CustomizedDsnNotConfigured(string status)
		{
			return new LocalizedString("CustomizedDsnNotConfigured", "ExEDCDA1", false, true, Strings.ResourceManager, new object[]
			{
				status
			});
		}

		// Token: 0x06009464 RID: 37988 RVA: 0x0025A050 File Offset: 0x00258250
		public static LocalizedString StringResourceNotFound(string strID)
		{
			return new LocalizedString("StringResourceNotFound", "Ex7327F7", false, true, Strings.ResourceManager, new object[]
			{
				strID
			});
		}

		// Token: 0x17002F7A RID: 12154
		// (get) Token: 0x06009465 RID: 37989 RVA: 0x0025A07F File Offset: 0x0025827F
		public static LocalizedString CasHealthDirectPushAndSyncAggregateScenarioDescription
		{
			get
			{
				return new LocalizedString("CasHealthDirectPushAndSyncAggregateScenarioDescription", "ExB76514", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002F7B RID: 12155
		// (get) Token: 0x06009466 RID: 37990 RVA: 0x0025A09D File Offset: 0x0025829D
		public static LocalizedString MalboxFolderRightsFolderOwner
		{
			get
			{
				return new LocalizedString("MalboxFolderRightsFolderOwner", "Ex8E6525", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009467 RID: 37991 RVA: 0x0025A0BC File Offset: 0x002582BC
		public static LocalizedString ConfirmationMessageRemoveAvailabilityAddressSpace(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveAvailabilityAddressSpace", "ExC9910C", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x17002F7C RID: 12156
		// (get) Token: 0x06009468 RID: 37992 RVA: 0x0025A0EB File Offset: 0x002582EB
		public static LocalizedString ErrorParentIISPathNull
		{
			get
			{
				return new LocalizedString("ErrorParentIISPathNull", "Ex8205FE", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009469 RID: 37993 RVA: 0x0025A10C File Offset: 0x0025830C
		public static LocalizedString ErrorReceiveConnectorNotUnique(object idStringValue)
		{
			return new LocalizedString("ErrorReceiveConnectorNotUnique", "", false, false, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		// Token: 0x0600946A RID: 37994 RVA: 0x0025A13C File Offset: 0x0025833C
		public static LocalizedString VerboseReadStoreMailboxSecurityDescriptor(string id, string server)
		{
			return new LocalizedString("VerboseReadStoreMailboxSecurityDescriptor", "Ex5D105D", false, true, Strings.ResourceManager, new object[]
			{
				id,
				server
			});
		}

		// Token: 0x17002F7D RID: 12157
		// (get) Token: 0x0600946B RID: 37995 RVA: 0x0025A16F File Offset: 0x0025836F
		public static LocalizedString ErrorFailedToGetRacAndClcEnterprise
		{
			get
			{
				return new LocalizedString("ErrorFailedToGetRacAndClcEnterprise", "ExEABCCF", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002F7E RID: 12158
		// (get) Token: 0x0600946C RID: 37996 RVA: 0x0025A18D File Offset: 0x0025838D
		public static LocalizedString MessageTracingClientServiceDisplayName
		{
			get
			{
				return new LocalizedString("MessageTracingClientServiceDisplayName", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600946D RID: 37997 RVA: 0x0025A1AC File Offset: 0x002583AC
		public static LocalizedString TowsSslError(string url, string status, string message)
		{
			return new LocalizedString("TowsSslError", "", false, false, Strings.ResourceManager, new object[]
			{
				url,
				status,
				message
			});
		}

		// Token: 0x17002F7F RID: 12159
		// (get) Token: 0x0600946E RID: 37998 RVA: 0x0025A1E3 File Offset: 0x002583E3
		public static LocalizedString ErrorTenantNeedsUpgradeFirst
		{
			get
			{
				return new LocalizedString("ErrorTenantNeedsUpgradeFirst", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600946F RID: 37999 RVA: 0x0025A204 File Offset: 0x00258404
		public static LocalizedString ConfirmationMessageRemoveInterceptorRule(string identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveInterceptorRule", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x17002F80 RID: 12160
		// (get) Token: 0x06009470 RID: 38000 RVA: 0x0025A233 File Offset: 0x00258433
		public static LocalizedString DelegationTokenValidationSuccess
		{
			get
			{
				return new LocalizedString("DelegationTokenValidationSuccess", "ExB0E182", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009471 RID: 38001 RVA: 0x0025A254 File Offset: 0x00258454
		public static LocalizedString TestSearchCatalogState(string state)
		{
			return new LocalizedString("TestSearchCatalogState", "Ex2B2459", false, true, Strings.ResourceManager, new object[]
			{
				state
			});
		}

		// Token: 0x06009472 RID: 38002 RVA: 0x0025A284 File Offset: 0x00258484
		public static LocalizedString CorruptRule(string name, string reason)
		{
			return new LocalizedString("CorruptRule", "ExF00D51", false, true, Strings.ResourceManager, new object[]
			{
				name,
				reason
			});
		}

		// Token: 0x06009473 RID: 38003 RVA: 0x0025A2B8 File Offset: 0x002584B8
		public static LocalizedString VerboseDefaultOABServerIsNotE12(string DN)
		{
			return new LocalizedString("VerboseDefaultOABServerIsNotE12", "Ex2C27E3", false, true, Strings.ResourceManager, new object[]
			{
				DN
			});
		}

		// Token: 0x17002F81 RID: 12161
		// (get) Token: 0x06009474 RID: 38004 RVA: 0x0025A2E7 File Offset: 0x002584E7
		public static LocalizedString WarningNoAuthServerWithDefaultAuthorizationEndpoint
		{
			get
			{
				return new LocalizedString("WarningNoAuthServerWithDefaultAuthorizationEndpoint", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009475 RID: 38005 RVA: 0x0025A308 File Offset: 0x00258508
		public static LocalizedString ConfirmationMessageRemoveOfflineAddressBook(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveOfflineAddressBook", "Ex2BE557", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x17002F82 RID: 12162
		// (get) Token: 0x06009476 RID: 38006 RVA: 0x0025A337 File Offset: 0x00258537
		public static LocalizedString ErrorMapiVirtualDirectoryMustBeLocalServerToReset
		{
			get
			{
				return new LocalizedString("ErrorMapiVirtualDirectoryMustBeLocalServerToReset", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009477 RID: 38007 RVA: 0x0025A358 File Offset: 0x00258558
		public static LocalizedString ConfirmationMessageNewManagedFolderMailboxPolicy(string Name)
		{
			return new LocalizedString("ConfirmationMessageNewManagedFolderMailboxPolicy", "Ex3553CA", false, true, Strings.ResourceManager, new object[]
			{
				Name
			});
		}

		// Token: 0x17002F83 RID: 12163
		// (get) Token: 0x06009478 RID: 38008 RVA: 0x0025A387 File Offset: 0x00258587
		public static LocalizedString ExternalAddress
		{
			get
			{
				return new LocalizedString("ExternalAddress", "Ex846EA2", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002F84 RID: 12164
		// (get) Token: 0x06009479 RID: 38009 RVA: 0x0025A3A5 File Offset: 0x002585A5
		public static LocalizedString UninstallFBAServiceTask
		{
			get
			{
				return new LocalizedString("UninstallFBAServiceTask", "Ex6D5BC9", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002F85 RID: 12165
		// (get) Token: 0x0600947A RID: 38010 RVA: 0x0025A3C3 File Offset: 0x002585C3
		public static LocalizedString TenantOrganizationMissing
		{
			get
			{
				return new LocalizedString("TenantOrganizationMissing", "ExB4C6AF", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002F86 RID: 12166
		// (get) Token: 0x0600947B RID: 38011 RVA: 0x0025A3E1 File Offset: 0x002585E1
		public static LocalizedString TestTeamMailboxOutboundOauthLog
		{
			get
			{
				return new LocalizedString("TestTeamMailboxOutboundOauthLog", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002F87 RID: 12167
		// (get) Token: 0x0600947C RID: 38012 RVA: 0x0025A3FF File Offset: 0x002585FF
		public static LocalizedString SetupProgressStoppingEdgeSyncService
		{
			get
			{
				return new LocalizedString("SetupProgressStoppingEdgeSyncService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002F88 RID: 12168
		// (get) Token: 0x0600947D RID: 38013 RVA: 0x0025A41D File Offset: 0x0025861D
		public static LocalizedString MailboxLogonScenario
		{
			get
			{
				return new LocalizedString("MailboxLogonScenario", "ExECD99D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600947E RID: 38014 RVA: 0x0025A43C File Offset: 0x0025863C
		public static LocalizedString ParameterNotApplicableToInstalledServerRoles(string parameter)
		{
			return new LocalizedString("ParameterNotApplicableToInstalledServerRoles", "Ex17EC92", false, true, Strings.ResourceManager, new object[]
			{
				parameter
			});
		}

		// Token: 0x0600947F RID: 38015 RVA: 0x0025A46C File Offset: 0x0025866C
		public static LocalizedString ConfirmationMessageAddIPBlockListProvider(string Name, string LookupDomain)
		{
			return new LocalizedString("ConfirmationMessageAddIPBlockListProvider", "ExC37E78", false, true, Strings.ResourceManager, new object[]
			{
				Name,
				LookupDomain
			});
		}

		// Token: 0x06009480 RID: 38016 RVA: 0x0025A4A0 File Offset: 0x002586A0
		public static LocalizedString VerboseLoadingAssignmentsByScope(string id)
		{
			return new LocalizedString("VerboseLoadingAssignmentsByScope", "ExB9556B", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x06009481 RID: 38017 RVA: 0x0025A4D0 File Offset: 0x002586D0
		public static LocalizedString ParsingTokenIssuerUri(string tokenIssuerUri)
		{
			return new LocalizedString("ParsingTokenIssuerUri", "Ex4AADB0", false, true, Strings.ResourceManager, new object[]
			{
				tokenIssuerUri
			});
		}

		// Token: 0x17002F89 RID: 12169
		// (get) Token: 0x06009482 RID: 38018 RVA: 0x0025A4FF File Offset: 0x002586FF
		public static LocalizedString ConversationsFailedToCreateAllItemsFolder
		{
			get
			{
				return new LocalizedString("ConversationsFailedToCreateAllItemsFolder", "ExB265F7", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009483 RID: 38019 RVA: 0x0025A520 File Offset: 0x00258720
		public static LocalizedString RpcHttpE2kServers(string servers)
		{
			return new LocalizedString("RpcHttpE2kServers", "ExC32DD9", false, true, Strings.ResourceManager, new object[]
			{
				servers
			});
		}

		// Token: 0x06009484 RID: 38020 RVA: 0x0025A550 File Offset: 0x00258750
		public static LocalizedString ErrorUserNotUniqueOnGlobalCatalog(string id, string gc)
		{
			return new LocalizedString("ErrorUserNotUniqueOnGlobalCatalog", "Ex4FAC55", false, true, Strings.ResourceManager, new object[]
			{
				id,
				gc
			});
		}

		// Token: 0x06009485 RID: 38021 RVA: 0x0025A584 File Offset: 0x00258784
		public static LocalizedString VerboseInstallKerberosAuthenticationModule(string module)
		{
			return new LocalizedString("VerboseInstallKerberosAuthenticationModule", "Ex324A79", false, true, Strings.ResourceManager, new object[]
			{
				module
			});
		}

		// Token: 0x06009486 RID: 38022 RVA: 0x0025A5B4 File Offset: 0x002587B4
		public static LocalizedString ConfirmationMessageNewDeliveryAgentConnector(string Name, string AddressSpaces)
		{
			return new LocalizedString("ConfirmationMessageNewDeliveryAgentConnector", "ExE94CBD", false, true, Strings.ResourceManager, new object[]
			{
				Name,
				AddressSpaces
			});
		}

		// Token: 0x06009487 RID: 38023 RVA: 0x0025A5E8 File Offset: 0x002587E8
		public static LocalizedString VerboseConnectingIISVDir(string path)
		{
			return new LocalizedString("VerboseConnectingIISVDir", "ExC8913A", false, true, Strings.ResourceManager, new object[]
			{
				path
			});
		}

		// Token: 0x17002F8A RID: 12170
		// (get) Token: 0x06009488 RID: 38024 RVA: 0x0025A617 File Offset: 0x00258817
		public static LocalizedString BootstrapAccountExpireTooSoon
		{
			get
			{
				return new LocalizedString("BootstrapAccountExpireTooSoon", "Ex1033AB", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009489 RID: 38025 RVA: 0x0025A638 File Offset: 0x00258838
		public static LocalizedString CasHealthPowerShellCmdletExecutionSummary(string casServer)
		{
			return new LocalizedString("CasHealthPowerShellCmdletExecutionSummary", "", false, false, Strings.ResourceManager, new object[]
			{
				casServer
			});
		}

		// Token: 0x17002F8B RID: 12171
		// (get) Token: 0x0600948A RID: 38026 RVA: 0x0025A667 File Offset: 0x00258867
		public static LocalizedString NewDagConfigurationCompletedSuccessfully
		{
			get
			{
				return new LocalizedString("NewDagConfigurationCompletedSuccessfully", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002F8C RID: 12172
		// (get) Token: 0x0600948B RID: 38027 RVA: 0x0025A685 File Offset: 0x00258885
		public static LocalizedString RetryLaterException
		{
			get
			{
				return new LocalizedString("RetryLaterException", "Ex7982BE", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600948C RID: 38028 RVA: 0x0025A6A4 File Offset: 0x002588A4
		public static LocalizedString ErrorPolicyOutOfRoleScope(string id, string orgName)
		{
			return new LocalizedString("ErrorPolicyOutOfRoleScope", "ExA97A04", false, true, Strings.ResourceManager, new object[]
			{
				id,
				orgName
			});
		}

		// Token: 0x0600948D RID: 38029 RVA: 0x0025A6D8 File Offset: 0x002588D8
		public static LocalizedString CasHealthOwaHttpGetOkay(int code, string codeName)
		{
			return new LocalizedString("CasHealthOwaHttpGetOkay", "Ex32F71F", false, true, Strings.ResourceManager, new object[]
			{
				code,
				codeName
			});
		}

		// Token: 0x17002F8D RID: 12173
		// (get) Token: 0x0600948E RID: 38030 RVA: 0x0025A710 File Offset: 0x00258910
		public static LocalizedString ConfigureSchema
		{
			get
			{
				return new LocalizedString("ConfigureSchema", "Ex212DB8", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002F8E RID: 12174
		// (get) Token: 0x0600948F RID: 38031 RVA: 0x0025A72E File Offset: 0x0025892E
		public static LocalizedString UninstallMessageTracingClientServiceTask
		{
			get
			{
				return new LocalizedString("UninstallMessageTracingClientServiceTask", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009490 RID: 38032 RVA: 0x0025A74C File Offset: 0x0025894C
		public static LocalizedString ErrorGroupRecipientNeeded(string badId)
		{
			return new LocalizedString("ErrorGroupRecipientNeeded", "ExF30758", false, true, Strings.ResourceManager, new object[]
			{
				badId
			});
		}

		// Token: 0x06009491 RID: 38033 RVA: 0x0025A77C File Offset: 0x0025897C
		public static LocalizedString ConfirmationMessageImportRMSTPD(string name)
		{
			return new LocalizedString("ConfirmationMessageImportRMSTPD", "Ex9A3B52", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x17002F8F RID: 12175
		// (get) Token: 0x06009492 RID: 38034 RVA: 0x0025A7AB File Offset: 0x002589AB
		public static LocalizedString SetupProgressStoppingWMIProviderService
		{
			get
			{
				return new LocalizedString("SetupProgressStoppingWMIProviderService", "ExCDF8F8", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009493 RID: 38035 RVA: 0x0025A7CC File Offset: 0x002589CC
		public static LocalizedString GetMsoDiagnosticsExclusiveParameters(string parameter1, string parameter2)
		{
			return new LocalizedString("GetMsoDiagnosticsExclusiveParameters", "", false, false, Strings.ResourceManager, new object[]
			{
				parameter1,
				parameter2
			});
		}

		// Token: 0x17002F90 RID: 12176
		// (get) Token: 0x06009494 RID: 38036 RVA: 0x0025A7FF File Offset: 0x002589FF
		public static LocalizedString FinishedCopyingOwaLPFiles
		{
			get
			{
				return new LocalizedString("FinishedCopyingOwaLPFiles", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009495 RID: 38037 RVA: 0x0025A820 File Offset: 0x00258A20
		public static LocalizedString ErrorDeleteActiveSourceNTAccount(string sourceuser)
		{
			return new LocalizedString("ErrorDeleteActiveSourceNTAccount", "Ex3A75A6", false, true, Strings.ResourceManager, new object[]
			{
				sourceuser
			});
		}

		// Token: 0x06009496 RID: 38038 RVA: 0x0025A850 File Offset: 0x00258A50
		public static LocalizedString ErrorCannotDeletePrecannedRoleGroup(string id)
		{
			return new LocalizedString("ErrorCannotDeletePrecannedRoleGroup", "Ex222E07", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x06009497 RID: 38039 RVA: 0x0025A880 File Offset: 0x00258A80
		public static LocalizedString InsufficientEmailsForTraining(string mailbox)
		{
			return new LocalizedString("InsufficientEmailsForTraining", "Ex328F53", false, true, Strings.ResourceManager, new object[]
			{
				mailbox
			});
		}

		// Token: 0x06009498 RID: 38040 RVA: 0x0025A8B0 File Offset: 0x00258AB0
		public static LocalizedString ErrorTargetDatabaseIsNotE2K7OrLater(string targetDatabaseId)
		{
			return new LocalizedString("ErrorTargetDatabaseIsNotE2K7OrLater", "ExE23974", false, true, Strings.ResourceManager, new object[]
			{
				targetDatabaseId
			});
		}

		// Token: 0x17002F91 RID: 12177
		// (get) Token: 0x06009499 RID: 38041 RVA: 0x0025A8DF File Offset: 0x00258ADF
		public static LocalizedString TenantNotificationTestFirstOrgNotSupported
		{
			get
			{
				return new LocalizedString("TenantNotificationTestFirstOrgNotSupported", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600949A RID: 38042 RVA: 0x0025A900 File Offset: 0x00258B00
		public static LocalizedString ConfirmationMessageRemoveMservEntry(string id)
		{
			return new LocalizedString("ConfirmationMessageRemoveMservEntry", "", false, false, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x0600949B RID: 38043 RVA: 0x0025A930 File Offset: 0x00258B30
		public static LocalizedString ElcNoLocalMbxOrArchive(string mailboxAddress)
		{
			return new LocalizedString("ElcNoLocalMbxOrArchive", "", false, false, Strings.ResourceManager, new object[]
			{
				mailboxAddress
			});
		}

		// Token: 0x17002F92 RID: 12178
		// (get) Token: 0x0600949C RID: 38044 RVA: 0x0025A95F File Offset: 0x00258B5F
		public static LocalizedString ErrorTeamMailboxCannotIdentifyTheUser
		{
			get
			{
				return new LocalizedString("ErrorTeamMailboxCannotIdentifyTheUser", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002F93 RID: 12179
		// (get) Token: 0x0600949D RID: 38045 RVA: 0x0025A97D File Offset: 0x00258B7D
		public static LocalizedString SetupProgressCreateModeratedRecipientsRetentionPolicyTag
		{
			get
			{
				return new LocalizedString("SetupProgressCreateModeratedRecipientsRetentionPolicyTag", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600949E RID: 38046 RVA: 0x0025A99C File Offset: 0x00258B9C
		public static LocalizedString ErrorFailedToRemoveSystemMailbox(string databaseName, string exceptionString)
		{
			return new LocalizedString("ErrorFailedToRemoveSystemMailbox", "Ex29C281", false, true, Strings.ResourceManager, new object[]
			{
				databaseName,
				exceptionString
			});
		}

		// Token: 0x0600949F RID: 38047 RVA: 0x0025A9D0 File Offset: 0x00258BD0
		public static LocalizedString ExInvalidArgumentForServerRoleException(string property, string role)
		{
			return new LocalizedString("ExInvalidArgumentForServerRoleException", "", false, false, Strings.ResourceManager, new object[]
			{
				property,
				role
			});
		}

		// Token: 0x060094A0 RID: 38048 RVA: 0x0025AA04 File Offset: 0x00258C04
		public static LocalizedString ErrorParameterNotSupportedForMigration(string parameterName)
		{
			return new LocalizedString("ErrorParameterNotSupportedForMigration", "", false, false, Strings.ResourceManager, new object[]
			{
				parameterName
			});
		}

		// Token: 0x060094A1 RID: 38049 RVA: 0x0025AA34 File Offset: 0x00258C34
		public static LocalizedString ErrorCouldNotReadDatabaseCopy(string database)
		{
			return new LocalizedString("ErrorCouldNotReadDatabaseCopy", "Ex54F8C5", false, true, Strings.ResourceManager, new object[]
			{
				database
			});
		}

		// Token: 0x17002F94 RID: 12180
		// (get) Token: 0x060094A2 RID: 38050 RVA: 0x0025AA63 File Offset: 0x00258C63
		public static LocalizedString GetHealthReportProgressActivity
		{
			get
			{
				return new LocalizedString("GetHealthReportProgressActivity", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002F95 RID: 12181
		// (get) Token: 0x060094A3 RID: 38051 RVA: 0x0025AA81 File Offset: 0x00258C81
		public static LocalizedString ConfirmationExportAutoDiscoverConfig
		{
			get
			{
				return new LocalizedString("ConfirmationExportAutoDiscoverConfig", "Ex6D38BF", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002F96 RID: 12182
		// (get) Token: 0x060094A4 RID: 38052 RVA: 0x0025AA9F File Offset: 0x00258C9F
		public static LocalizedString ErrorFailedToGetTemplateEnterprise
		{
			get
			{
				return new LocalizedString("ErrorFailedToGetTemplateEnterprise", "Ex32034C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002F97 RID: 12183
		// (get) Token: 0x060094A5 RID: 38053 RVA: 0x0025AABD File Offset: 0x00258CBD
		public static LocalizedString DebugStartCreateMemberRequest
		{
			get
			{
				return new LocalizedString("DebugStartCreateMemberRequest", "Ex71AE7B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060094A6 RID: 38054 RVA: 0x0025AADC File Offset: 0x00258CDC
		public static LocalizedString ErrorCannotMoveArchiveMailboxesDownlevel(string mailbox)
		{
			return new LocalizedString("ErrorCannotMoveArchiveMailboxesDownlevel", "Ex671FC0", false, true, Strings.ResourceManager, new object[]
			{
				mailbox
			});
		}

		// Token: 0x060094A7 RID: 38055 RVA: 0x0025AB0C File Offset: 0x00258D0C
		public static LocalizedString VerboseResetOab(string id)
		{
			return new LocalizedString("VerboseResetOab", "Ex55DAD9", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x060094A8 RID: 38056 RVA: 0x0025AB3C File Offset: 0x00258D3C
		public static LocalizedString DlpPolicyModeIsOverridenByModeParameter(string ruleMode, string policyMode)
		{
			return new LocalizedString("DlpPolicyModeIsOverridenByModeParameter", "", false, false, Strings.ResourceManager, new object[]
			{
				ruleMode,
				policyMode
			});
		}

		// Token: 0x17002F98 RID: 12184
		// (get) Token: 0x060094A9 RID: 38057 RVA: 0x0025AB6F File Offset: 0x00258D6F
		public static LocalizedString CannotModifyPhotoBecauseMailboxIsInTransit
		{
			get
			{
				return new LocalizedString("CannotModifyPhotoBecauseMailboxIsInTransit", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002F99 RID: 12185
		// (get) Token: 0x060094AA RID: 38058 RVA: 0x0025AB8D File Offset: 0x00258D8D
		public static LocalizedString InfoOrganizationContextChecked
		{
			get
			{
				return new LocalizedString("InfoOrganizationContextChecked", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060094AB RID: 38059 RVA: 0x0025ABAC File Offset: 0x00258DAC
		public static LocalizedString ErrorMailboxAuditLogSearchFailed(string error, Exception ex)
		{
			return new LocalizedString("ErrorMailboxAuditLogSearchFailed", "Ex274093", false, true, Strings.ResourceManager, new object[]
			{
				error,
				ex
			});
		}

		// Token: 0x060094AC RID: 38060 RVA: 0x0025ABE0 File Offset: 0x00258DE0
		public static LocalizedString CasHealthOwaHttpGetNonOkayForLogon(int code, string name)
		{
			return new LocalizedString("CasHealthOwaHttpGetNonOkayForLogon", "ExE747EB", false, true, Strings.ResourceManager, new object[]
			{
				code,
				name
			});
		}

		// Token: 0x17002F9A RID: 12186
		// (get) Token: 0x060094AD RID: 38061 RVA: 0x0025AC18 File Offset: 0x00258E18
		public static LocalizedString CasHealthWarnCredenditialsPassedInTheClear
		{
			get
			{
				return new LocalizedString("CasHealthWarnCredenditialsPassedInTheClear", "ExDBE9D7", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060094AE RID: 38062 RVA: 0x0025AC38 File Offset: 0x00258E38
		public static LocalizedString ConfirmationMessageSetAdSiteLink(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetAdSiteLink", "Ex7D42E4", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x17002F9B RID: 12187
		// (get) Token: 0x060094AF RID: 38063 RVA: 0x0025AC67 File Offset: 0x00258E67
		public static LocalizedString ForwardSyncServiceDescription
		{
			get
			{
				return new LocalizedString("ForwardSyncServiceDescription", "Ex9231D2", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060094B0 RID: 38064 RVA: 0x0025AC88 File Offset: 0x00258E88
		public static LocalizedString IncorrectlyFormattedColumn(string line, string file)
		{
			return new LocalizedString("IncorrectlyFormattedColumn", "Ex31C6FD", false, true, Strings.ResourceManager, new object[]
			{
				line,
				file
			});
		}

		// Token: 0x060094B1 RID: 38065 RVA: 0x0025ACBC File Offset: 0x00258EBC
		public static LocalizedString WarningFailedToCreateSourceContact(string detailError)
		{
			return new LocalizedString("WarningFailedToCreateSourceContact", "Ex4219AE", false, true, Strings.ResourceManager, new object[]
			{
				detailError
			});
		}

		// Token: 0x060094B2 RID: 38066 RVA: 0x0025ACEC File Offset: 0x00258EEC
		public static LocalizedString VerboseGrantingEoaFullAccessOnMailbox(string mailbox)
		{
			return new LocalizedString("VerboseGrantingEoaFullAccessOnMailbox", "Ex894E97", false, true, Strings.ResourceManager, new object[]
			{
				mailbox
			});
		}

		// Token: 0x060094B3 RID: 38067 RVA: 0x0025AD1C File Offset: 0x00258F1C
		public static LocalizedString ErrorExistingAuthServerWithEmptyRealm(string authServer)
		{
			return new LocalizedString("ErrorExistingAuthServerWithEmptyRealm", "", false, false, Strings.ResourceManager, new object[]
			{
				authServer
			});
		}

		// Token: 0x060094B4 RID: 38068 RVA: 0x0025AD4C File Offset: 0x00258F4C
		public static LocalizedString AlsEmailBodyMailboxOperations(string operations)
		{
			return new LocalizedString("AlsEmailBodyMailboxOperations", "", false, false, Strings.ResourceManager, new object[]
			{
				operations
			});
		}

		// Token: 0x17002F9C RID: 12188
		// (get) Token: 0x060094B5 RID: 38069 RVA: 0x0025AD7B File Offset: 0x00258F7B
		public static LocalizedString CasHealthScenarioAutodiscoverCas
		{
			get
			{
				return new LocalizedString("CasHealthScenarioAutodiscoverCas", "ExAC4BAC", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060094B6 RID: 38070 RVA: 0x0025AD9C File Offset: 0x00258F9C
		public static LocalizedString InvalidParameterForFilter(string invalidParameter, string filterType, string validParameter)
		{
			return new LocalizedString("InvalidParameterForFilter", "ExA5C7D3", false, true, Strings.ResourceManager, new object[]
			{
				invalidParameter,
				filterType,
				validParameter
			});
		}

		// Token: 0x060094B7 RID: 38071 RVA: 0x0025ADD4 File Offset: 0x00258FD4
		public static LocalizedString ErrorAtLeastOneSideMustBeCurrentProductVersion(string version)
		{
			return new LocalizedString("ErrorAtLeastOneSideMustBeCurrentProductVersion", "Ex861FB5", false, true, Strings.ResourceManager, new object[]
			{
				version
			});
		}

		// Token: 0x060094B8 RID: 38072 RVA: 0x0025AE04 File Offset: 0x00259004
		public static LocalizedString ErrorClassificationAlreadyDefined(string name, Guid guid)
		{
			return new LocalizedString("ErrorClassificationAlreadyDefined", "Ex4D9424", false, true, Strings.ResourceManager, new object[]
			{
				name,
				guid
			});
		}

		// Token: 0x060094B9 RID: 38073 RVA: 0x0025AE3C File Offset: 0x0025903C
		public static LocalizedString ConfigurationNotSynchronized(string objectType, string serverList)
		{
			return new LocalizedString("ConfigurationNotSynchronized", "ExA71CEE", false, true, Strings.ResourceManager, new object[]
			{
				objectType,
				serverList
			});
		}

		// Token: 0x17002F9D RID: 12189
		// (get) Token: 0x060094BA RID: 38074 RVA: 0x0025AE6F File Offset: 0x0025906F
		public static LocalizedString MigrationCompleteAfterAndAutoCompleteExclusive
		{
			get
			{
				return new LocalizedString("MigrationCompleteAfterAndAutoCompleteExclusive", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002F9E RID: 12190
		// (get) Token: 0x060094BB RID: 38075 RVA: 0x0025AE8D File Offset: 0x0025908D
		public static LocalizedString ADAttributeCity
		{
			get
			{
				return new LocalizedString("ADAttributeCity", "ExBFE9B1", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002F9F RID: 12191
		// (get) Token: 0x060094BC RID: 38076 RVA: 0x0025AEAB File Offset: 0x002590AB
		public static LocalizedString CouldNotFindAutodiscoverStandardAuthBinding
		{
			get
			{
				return new LocalizedString("CouldNotFindAutodiscoverStandardAuthBinding", "Ex893375", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060094BD RID: 38077 RVA: 0x0025AECC File Offset: 0x002590CC
		public static LocalizedString ErrorNoOfflineSuspendWhenReadyToComplete(string identity)
		{
			return new LocalizedString("ErrorNoOfflineSuspendWhenReadyToComplete", "ExEC575A", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x060094BE RID: 38078 RVA: 0x0025AEFC File Offset: 0x002590FC
		public static LocalizedString ConfirmationMessageRemoveAccountPartition(string partition)
		{
			return new LocalizedString("ConfirmationMessageRemoveAccountPartition", "", false, false, Strings.ResourceManager, new object[]
			{
				partition
			});
		}

		// Token: 0x17002FA0 RID: 12192
		// (get) Token: 0x060094BF RID: 38079 RVA: 0x0025AF2B File Offset: 0x0025912B
		public static LocalizedString ErrorNeedOrgIdentity
		{
			get
			{
				return new LocalizedString("ErrorNeedOrgIdentity", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060094C0 RID: 38080 RVA: 0x0025AF4C File Offset: 0x0025914C
		public static LocalizedString TransportRpcUnavailable(string server)
		{
			return new LocalizedString("TransportRpcUnavailable", "", false, false, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		// Token: 0x17002FA1 RID: 12193
		// (get) Token: 0x060094C1 RID: 38081 RVA: 0x0025AF7B File Offset: 0x0025917B
		public static LocalizedString UninstallPop3ServiceTask
		{
			get
			{
				return new LocalizedString("UninstallPop3ServiceTask", "Ex8883D9", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060094C2 RID: 38082 RVA: 0x0025AF9C File Offset: 0x0025919C
		public static LocalizedString ErrorRuleStateInconsistentWithComplianceProgram(string state, string identity, string requiredState)
		{
			return new LocalizedString("ErrorRuleStateInconsistentWithComplianceProgram", "", false, false, Strings.ResourceManager, new object[]
			{
				state,
				identity,
				requiredState
			});
		}

		// Token: 0x17002FA2 RID: 12194
		// (get) Token: 0x060094C3 RID: 38083 RVA: 0x0025AFD3 File Offset: 0x002591D3
		public static LocalizedString DlpPolicyXmlMissingElements
		{
			get
			{
				return new LocalizedString("DlpPolicyXmlMissingElements", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060094C4 RID: 38084 RVA: 0x0025AFF4 File Offset: 0x002591F4
		public static LocalizedString ExchangeCmdletsNotAllowedInRole(string roleType)
		{
			return new LocalizedString("ExchangeCmdletsNotAllowedInRole", "Ex7712AD", false, true, Strings.ResourceManager, new object[]
			{
				roleType
			});
		}

		// Token: 0x060094C5 RID: 38085 RVA: 0x0025B024 File Offset: 0x00259224
		public static LocalizedString RcrExceedDbLimitException(string server, int limit)
		{
			return new LocalizedString("RcrExceedDbLimitException", "", false, false, Strings.ResourceManager, new object[]
			{
				server,
				limit
			});
		}

		// Token: 0x17002FA3 RID: 12195
		// (get) Token: 0x060094C6 RID: 38086 RVA: 0x0025B05C File Offset: 0x0025925C
		public static LocalizedString CasHealthOwaGetAuthStart
		{
			get
			{
				return new LocalizedString("CasHealthOwaGetAuthStart", "Ex1A41BC", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002FA4 RID: 12196
		// (get) Token: 0x060094C7 RID: 38087 RVA: 0x0025B07A File Offset: 0x0025927A
		public static LocalizedString CasHealthTestNewUserHostingScriptName
		{
			get
			{
				return new LocalizedString("CasHealthTestNewUserHostingScriptName", "Ex2817EA", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002FA5 RID: 12197
		// (get) Token: 0x060094C8 RID: 38088 RVA: 0x0025B098 File Offset: 0x00259298
		public static LocalizedString ConfirmationMessageTestActiveDirectoryConnectivity
		{
			get
			{
				return new LocalizedString("ConfirmationMessageTestActiveDirectoryConnectivity", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060094C9 RID: 38089 RVA: 0x0025B0B8 File Offset: 0x002592B8
		public static LocalizedString ErrorExceededMaximumCollectionCount(string propertyName, int maxLength, int actualLength)
		{
			return new LocalizedString("ErrorExceededMaximumCollectionCount", "Ex192D59", false, true, Strings.ResourceManager, new object[]
			{
				propertyName,
				maxLength,
				actualLength
			});
		}

		// Token: 0x17002FA6 RID: 12198
		// (get) Token: 0x060094CA RID: 38090 RVA: 0x0025B0F9 File Offset: 0x002592F9
		public static LocalizedString ErrorMissingInternalUrlInRemoteScenario
		{
			get
			{
				return new LocalizedString("ErrorMissingInternalUrlInRemoteScenario", "ExCE9057", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002FA7 RID: 12199
		// (get) Token: 0x060094CB RID: 38091 RVA: 0x0025B117 File Offset: 0x00259317
		public static LocalizedString RetrieveFederationMetadataFailed
		{
			get
			{
				return new LocalizedString("RetrieveFederationMetadataFailed", "Ex2D2345", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060094CC RID: 38092 RVA: 0x0025B138 File Offset: 0x00259338
		public static LocalizedString UnexpectedNonAuthoritativeDomain(SmtpDomain domain)
		{
			return new LocalizedString("UnexpectedNonAuthoritativeDomain", "ExBA8752", false, true, Strings.ResourceManager, new object[]
			{
				domain
			});
		}

		// Token: 0x17002FA8 RID: 12200
		// (get) Token: 0x060094CD RID: 38093 RVA: 0x0025B167 File Offset: 0x00259367
		public static LocalizedString DataClassificationConfigFirstOrgNotSupported
		{
			get
			{
				return new LocalizedString("DataClassificationConfigFirstOrgNotSupported", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060094CE RID: 38094 RVA: 0x0025B188 File Offset: 0x00259388
		public static LocalizedString ErrorScopeNotUnique(string idStringValue)
		{
			return new LocalizedString("ErrorScopeNotUnique", "ExDAC99C", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		// Token: 0x060094CF RID: 38095 RVA: 0x0025B1B8 File Offset: 0x002593B8
		public static LocalizedString ErrorPublicFolderStatisticsNotFoundInDatacenter(string folder, string organization)
		{
			return new LocalizedString("ErrorPublicFolderStatisticsNotFoundInDatacenter", "ExF91CDE", false, true, Strings.ResourceManager, new object[]
			{
				folder,
				organization
			});
		}

		// Token: 0x17002FA9 RID: 12201
		// (get) Token: 0x060094D0 RID: 38096 RVA: 0x0025B1EB File Offset: 0x002593EB
		public static LocalizedString SetSecondaryDomainDescription
		{
			get
			{
				return new LocalizedString("SetSecondaryDomainDescription", "ExBB10BD", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060094D1 RID: 38097 RVA: 0x0025B20C File Offset: 0x0025940C
		public static LocalizedString ErrorOabVirtualDirectoryAlreadyExists(string vdir, string website, string serverName)
		{
			return new LocalizedString("ErrorOabVirtualDirectoryAlreadyExists", "ExDDC4ED", false, true, Strings.ResourceManager, new object[]
			{
				vdir,
				website,
				serverName
			});
		}

		// Token: 0x060094D2 RID: 38098 RVA: 0x0025B244 File Offset: 0x00259444
		public static LocalizedString ErrorDatabaseWrongVersion(string dbName)
		{
			return new LocalizedString("ErrorDatabaseWrongVersion", "", false, false, Strings.ResourceManager, new object[]
			{
				dbName
			});
		}

		// Token: 0x060094D3 RID: 38099 RVA: 0x0025B274 File Offset: 0x00259474
		public static LocalizedString ConfirmationMessageNewUser(string Name)
		{
			return new LocalizedString("ConfirmationMessageNewUser", "Ex236C0A", false, true, Strings.ResourceManager, new object[]
			{
				Name
			});
		}

		// Token: 0x060094D4 RID: 38100 RVA: 0x0025B2A4 File Offset: 0x002594A4
		public static LocalizedString NoMonitoringErrorsInTestReplicationHealth(string machineName)
		{
			return new LocalizedString("NoMonitoringErrorsInTestReplicationHealth", "ExCC8360", false, true, Strings.ResourceManager, new object[]
			{
				machineName
			});
		}

		// Token: 0x060094D5 RID: 38101 RVA: 0x0025B2D4 File Offset: 0x002594D4
		public static LocalizedString SelfMemberAlreadyExistsException(string group)
		{
			return new LocalizedString("SelfMemberAlreadyExistsException", "ExBA234B", false, true, Strings.ResourceManager, new object[]
			{
				group
			});
		}

		// Token: 0x060094D6 RID: 38102 RVA: 0x0025B304 File Offset: 0x00259504
		public static LocalizedString ConfirmationMessageSetFederatedOrganizationIdentifier2(string Identity, string administrator)
		{
			return new LocalizedString("ConfirmationMessageSetFederatedOrganizationIdentifier2", "Ex97235B", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				administrator
			});
		}

		// Token: 0x060094D7 RID: 38103 RVA: 0x0025B338 File Offset: 0x00259538
		public static LocalizedString InterceptorErrorCustomTextNonAscii(string value)
		{
			return new LocalizedString("InterceptorErrorCustomTextNonAscii", "", false, false, Strings.ResourceManager, new object[]
			{
				value
			});
		}

		// Token: 0x060094D8 RID: 38104 RVA: 0x0025B368 File Offset: 0x00259568
		public static LocalizedString ErrorFailedToRemoveWinRMSchemaFile(string fileName, string error)
		{
			return new LocalizedString("ErrorFailedToRemoveWinRMSchemaFile", "ExD4047C", false, true, Strings.ResourceManager, new object[]
			{
				fileName,
				error
			});
		}

		// Token: 0x060094D9 RID: 38105 RVA: 0x0025B39C File Offset: 0x0025959C
		public static LocalizedString ConfirmationMessageMoveOfflineAddressBookE14ToLowerVersion(string Identity, string Server)
		{
			return new LocalizedString("ConfirmationMessageMoveOfflineAddressBookE14ToLowerVersion", "Ex1A05A4", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				Server
			});
		}

		// Token: 0x060094DA RID: 38106 RVA: 0x0025B3D0 File Offset: 0x002595D0
		public static LocalizedString ConfirmationMessageRemoveIPAllowListEntry(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveIPAllowListEntry", "Ex0523BD", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x17002FAA RID: 12202
		// (get) Token: 0x060094DB RID: 38107 RVA: 0x0025B3FF File Offset: 0x002595FF
		public static LocalizedString ErrorInvalidLogonType
		{
			get
			{
				return new LocalizedString("ErrorInvalidLogonType", "Ex410EC9", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060094DC RID: 38108 RVA: 0x0025B420 File Offset: 0x00259620
		public static LocalizedString ConfirmationMessageMailboxMessageConfiguration(string Identity)
		{
			return new LocalizedString("ConfirmationMessageMailboxMessageConfiguration", "Ex4E726A", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x060094DD RID: 38109 RVA: 0x0025B450 File Offset: 0x00259650
		public static LocalizedString MoveMailboxDuplicates(string displayName)
		{
			return new LocalizedString("MoveMailboxDuplicates", "ExD31DF0", false, true, Strings.ResourceManager, new object[]
			{
				displayName
			});
		}

		// Token: 0x17002FAB RID: 12203
		// (get) Token: 0x060094DE RID: 38110 RVA: 0x0025B47F File Offset: 0x0025967F
		public static LocalizedString MtrtSetSpamConfidenceLevel
		{
			get
			{
				return new LocalizedString("MtrtSetSpamConfidenceLevel", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060094DF RID: 38111 RVA: 0x0025B4A0 File Offset: 0x002596A0
		public static LocalizedString VerboseUpdateStoreMailboxState(string mdb, string mailbox)
		{
			return new LocalizedString("VerboseUpdateStoreMailboxState", "", false, false, Strings.ResourceManager, new object[]
			{
				mdb,
				mailbox
			});
		}

		// Token: 0x060094E0 RID: 38112 RVA: 0x0025B4D4 File Offset: 0x002596D4
		public static LocalizedString SomeWebServicesTransactionsFailed(string detailedInformation)
		{
			return new LocalizedString("SomeWebServicesTransactionsFailed", "ExC32CBB", false, true, Strings.ResourceManager, new object[]
			{
				detailedInformation
			});
		}

		// Token: 0x060094E1 RID: 38113 RVA: 0x0025B504 File Offset: 0x00259704
		public static LocalizedString ErrorRpcHttpNotEnabled(string server)
		{
			return new LocalizedString("ErrorRpcHttpNotEnabled", "Ex2EEFA2", false, true, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		// Token: 0x060094E2 RID: 38114 RVA: 0x0025B534 File Offset: 0x00259734
		public static LocalizedString ConfirmationMessageAdminAuditLogAgeLimitZero(string org)
		{
			return new LocalizedString("ConfirmationMessageAdminAuditLogAgeLimitZero", "Ex96A507", false, true, Strings.ResourceManager, new object[]
			{
				org
			});
		}

		// Token: 0x060094E3 RID: 38115 RVA: 0x0025B564 File Offset: 0x00259764
		public static LocalizedString CasHealthPowerShellSkipCertVDir(string vdirName)
		{
			return new LocalizedString("CasHealthPowerShellSkipCertVDir", "Ex4012F7", false, true, Strings.ResourceManager, new object[]
			{
				vdirName
			});
		}

		// Token: 0x17002FAC RID: 12204
		// (get) Token: 0x060094E4 RID: 38116 RVA: 0x0025B593 File Offset: 0x00259793
		public static LocalizedString ErrorInvalidOSPServerRole
		{
			get
			{
				return new LocalizedString("ErrorInvalidOSPServerRole", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060094E5 RID: 38117 RVA: 0x0025B5B4 File Offset: 0x002597B4
		public static LocalizedString VerboseEdbFileLocationUniqueUnderServerCondition(string server, string path)
		{
			return new LocalizedString("VerboseEdbFileLocationUniqueUnderServerCondition", "ExF8BD14", false, true, Strings.ResourceManager, new object[]
			{
				server,
				path
			});
		}

		// Token: 0x17002FAD RID: 12205
		// (get) Token: 0x060094E6 RID: 38118 RVA: 0x0025B5E7 File Offset: 0x002597E7
		public static LocalizedString ErrorModifyTiServerNotAllowed
		{
			get
			{
				return new LocalizedString("ErrorModifyTiServerNotAllowed", "ExF1B0E3", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002FAE RID: 12206
		// (get) Token: 0x060094E7 RID: 38119 RVA: 0x0025B605 File Offset: 0x00259805
		public static LocalizedString MediumPriorityChecksWarning
		{
			get
			{
				return new LocalizedString("MediumPriorityChecksWarning", "Ex971080", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002FAF RID: 12207
		// (get) Token: 0x060094E8 RID: 38120 RVA: 0x0025B623 File Offset: 0x00259823
		public static LocalizedString InstallCentralAdminServiceTask
		{
			get
			{
				return new LocalizedString("InstallCentralAdminServiceTask", "Ex38EAB6", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002FB0 RID: 12208
		// (get) Token: 0x060094E9 RID: 38121 RVA: 0x0025B641 File Offset: 0x00259841
		public static LocalizedString WarningRoleAssignmentWithDatabaseScopeApplicableOnlyInSP
		{
			get
			{
				return new LocalizedString("WarningRoleAssignmentWithDatabaseScopeApplicableOnlyInSP", "Ex55AE58", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060094EA RID: 38122 RVA: 0x0025B660 File Offset: 0x00259860
		public static LocalizedString AccessMismatchLocalRemote(string localName, string localFlag, string remoteName, string remoteProperty)
		{
			return new LocalizedString("AccessMismatchLocalRemote", "Ex8AF89C", false, true, Strings.ResourceManager, new object[]
			{
				localName,
				localFlag,
				remoteName,
				remoteProperty
			});
		}

		// Token: 0x060094EB RID: 38123 RVA: 0x0025B69C File Offset: 0x0025989C
		public static LocalizedString WarningFailedToCreateAssignmentForNewRole(string roleId)
		{
			return new LocalizedString("WarningFailedToCreateAssignmentForNewRole", "Ex656981", false, true, Strings.ResourceManager, new object[]
			{
				roleId
			});
		}

		// Token: 0x060094EC RID: 38124 RVA: 0x0025B6CC File Offset: 0x002598CC
		public static LocalizedString ErrorContentFilterInvalid(LocalizedString errorMessage)
		{
			return new LocalizedString("ErrorContentFilterInvalid", "ExA68BD8", false, true, Strings.ResourceManager, new object[]
			{
				errorMessage
			});
		}

		// Token: 0x17002FB1 RID: 12209
		// (get) Token: 0x060094ED RID: 38125 RVA: 0x0025B700 File Offset: 0x00259900
		public static LocalizedString DDGFilterIsNonoptimized
		{
			get
			{
				return new LocalizedString("DDGFilterIsNonoptimized", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002FB2 RID: 12210
		// (get) Token: 0x060094EE RID: 38126 RVA: 0x0025B71E File Offset: 0x0025991E
		public static LocalizedString ErrorModifyE12DatabaseNotAllowed
		{
			get
			{
				return new LocalizedString("ErrorModifyE12DatabaseNotAllowed", "Ex384996", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002FB3 RID: 12211
		// (get) Token: 0x060094EF RID: 38127 RVA: 0x0025B73C File Offset: 0x0025993C
		public static LocalizedString ErrorWebObjOrPropertiesNull
		{
			get
			{
				return new LocalizedString("ErrorWebObjOrPropertiesNull", "Ex70F91B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002FB4 RID: 12212
		// (get) Token: 0x060094F0 RID: 38128 RVA: 0x0025B75A File Offset: 0x0025995A
		public static LocalizedString ProgressStopUpdateOtherAD
		{
			get
			{
				return new LocalizedString("ProgressStopUpdateOtherAD", "ExE7FF37", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002FB5 RID: 12213
		// (get) Token: 0x060094F1 RID: 38129 RVA: 0x0025B778 File Offset: 0x00259978
		public static LocalizedString ContentIndexServiceDisplayName
		{
			get
			{
				return new LocalizedString("ContentIndexServiceDisplayName", "Ex0B80BE", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060094F2 RID: 38130 RVA: 0x0025B798 File Offset: 0x00259998
		public static LocalizedString ConfirmationMessageRemoveMailboxStoreMailboxIdentity(string Database, string StoreMailboxIdentity)
		{
			return new LocalizedString("ConfirmationMessageRemoveMailboxStoreMailboxIdentity", "Ex6C2034", false, true, Strings.ResourceManager, new object[]
			{
				Database,
				StoreMailboxIdentity
			});
		}

		// Token: 0x060094F3 RID: 38131 RVA: 0x0025B7CC File Offset: 0x002599CC
		public static LocalizedString ConfirmationMessageSetGroup(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetGroup", "ExC09B18", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x060094F4 RID: 38132 RVA: 0x0025B7FC File Offset: 0x002599FC
		public static LocalizedString MessageClassIsNotValid(string messageClass)
		{
			return new LocalizedString("MessageClassIsNotValid", "", false, false, Strings.ResourceManager, new object[]
			{
				messageClass
			});
		}

		// Token: 0x17002FB6 RID: 12214
		// (get) Token: 0x060094F5 RID: 38133 RVA: 0x0025B82B File Offset: 0x00259A2B
		public static LocalizedString ErrorEmptyFsmoRoleOwnerAttribute
		{
			get
			{
				return new LocalizedString("ErrorEmptyFsmoRoleOwnerAttribute", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060094F6 RID: 38134 RVA: 0x0025B84C File Offset: 0x00259A4C
		public static LocalizedString ErrorTrustedPublishingDomainNotUnique(string idStringValue)
		{
			return new LocalizedString("ErrorTrustedPublishingDomainNotUnique", "Ex257C3C", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		// Token: 0x17002FB7 RID: 12215
		// (get) Token: 0x060094F7 RID: 38135 RVA: 0x0025B87B File Offset: 0x00259A7B
		public static LocalizedString ErrorSetGroupMailboxAddMembersOtherUser
		{
			get
			{
				return new LocalizedString("ErrorSetGroupMailboxAddMembersOtherUser", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060094F8 RID: 38136 RVA: 0x0025B89C File Offset: 0x00259A9C
		public static LocalizedString ExchangeTenantNotFound(string syncobject)
		{
			return new LocalizedString("ExchangeTenantNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				syncobject
			});
		}

		// Token: 0x060094F9 RID: 38137 RVA: 0x0025B8CC File Offset: 0x00259ACC
		public static LocalizedString ExchangeSettingsScopeNotFound(string groupName, string id)
		{
			return new LocalizedString("ExchangeSettingsScopeNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				groupName,
				id
			});
		}

		// Token: 0x17002FB8 RID: 12216
		// (get) Token: 0x060094FA RID: 38138 RVA: 0x0025B8FF File Offset: 0x00259AFF
		public static LocalizedString UninstallOSPRoleDescription
		{
			get
			{
				return new LocalizedString("UninstallOSPRoleDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002FB9 RID: 12217
		// (get) Token: 0x060094FB RID: 38139 RVA: 0x0025B91D File Offset: 0x00259B1D
		public static LocalizedString ErrorInvalidDlpPolicyIdentity
		{
			get
			{
				return new LocalizedString("ErrorInvalidDlpPolicyIdentity", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060094FC RID: 38140 RVA: 0x0025B93C File Offset: 0x00259B3C
		public static LocalizedString ErrorTargetRecipientIsNotAnMEU(string remoteId)
		{
			return new LocalizedString("ErrorTargetRecipientIsNotAnMEU", "Ex17DC3E", false, true, Strings.ResourceManager, new object[]
			{
				remoteId
			});
		}

		// Token: 0x17002FBA RID: 12218
		// (get) Token: 0x060094FD RID: 38141 RVA: 0x0025B96B File Offset: 0x00259B6B
		public static LocalizedString MtrtApplyClassification
		{
			get
			{
				return new LocalizedString("MtrtApplyClassification", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060094FE RID: 38142 RVA: 0x0025B98C File Offset: 0x00259B8C
		public static LocalizedString VerboseWillSkipOrganizationUpgrade(string org)
		{
			return new LocalizedString("VerboseWillSkipOrganizationUpgrade", "Ex27A13B", false, true, Strings.ResourceManager, new object[]
			{
				org
			});
		}

		// Token: 0x060094FF RID: 38143 RVA: 0x0025B9BC File Offset: 0x00259BBC
		public static LocalizedString NodeNotUnique(string node, string fileName)
		{
			return new LocalizedString("NodeNotUnique", "ExFDD1E7", false, true, Strings.ResourceManager, new object[]
			{
				node,
				fileName
			});
		}

		// Token: 0x06009500 RID: 38144 RVA: 0x0025B9F0 File Offset: 0x00259BF0
		public static LocalizedString InfoAddedGroupToGroup(string group1, string group2, string rootdomserver, string localdomserver)
		{
			return new LocalizedString("InfoAddedGroupToGroup", "ExD5B124", false, true, Strings.ResourceManager, new object[]
			{
				group1,
				group2,
				rootdomserver,
				localdomserver
			});
		}

		// Token: 0x17002FBB RID: 12219
		// (get) Token: 0x06009501 RID: 38145 RVA: 0x0025BA2B File Offset: 0x00259C2B
		public static LocalizedString ConfirmationMessageSetRecipientFilterConfig
		{
			get
			{
				return new LocalizedString("ConfirmationMessageSetRecipientFilterConfig", "Ex095620", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009502 RID: 38146 RVA: 0x0025BA4C File Offset: 0x00259C4C
		public static LocalizedString ErrorTeamMailboxEnqueueMembershipSyncEvent(string details)
		{
			return new LocalizedString("ErrorTeamMailboxEnqueueMembershipSyncEvent", "", false, false, Strings.ResourceManager, new object[]
			{
				details
			});
		}

		// Token: 0x06009503 RID: 38147 RVA: 0x0025BA7C File Offset: 0x00259C7C
		public static LocalizedString DagNetworkSubnetIdConflictError(string subnetId1, string subnetId2)
		{
			return new LocalizedString("DagNetworkSubnetIdConflictError", "Ex2490CD", false, true, Strings.ResourceManager, new object[]
			{
				subnetId1,
				subnetId2
			});
		}

		// Token: 0x06009504 RID: 38148 RVA: 0x0025BAB0 File Offset: 0x00259CB0
		public static LocalizedString ReplicationCheckResultToStringCaseNotHandled(ReplicationCheckResultEnum result)
		{
			return new LocalizedString("ReplicationCheckResultToStringCaseNotHandled", "", false, false, Strings.ResourceManager, new object[]
			{
				result
			});
		}

		// Token: 0x06009505 RID: 38149 RVA: 0x0025BAE4 File Offset: 0x00259CE4
		public static LocalizedString ConfirmationMessageNewPublicFolderDatabaseRepairRequest(string database)
		{
			return new LocalizedString("ConfirmationMessageNewPublicFolderDatabaseRepairRequest", "ExEB8C5D", false, true, Strings.ResourceManager, new object[]
			{
				database
			});
		}

		// Token: 0x06009506 RID: 38150 RVA: 0x0025BB14 File Offset: 0x00259D14
		public static LocalizedString ServerLocatorServiceRequestFailed(string machineName, string error)
		{
			return new LocalizedString("ServerLocatorServiceRequestFailed", "", false, false, Strings.ResourceManager, new object[]
			{
				machineName,
				error
			});
		}

		// Token: 0x06009507 RID: 38151 RVA: 0x0025BB48 File Offset: 0x00259D48
		public static LocalizedString ErrorFailedToGenerateFileNameFromAlias(string mailbox, string alias)
		{
			return new LocalizedString("ErrorFailedToGenerateFileNameFromAlias", "ExD863D7", false, true, Strings.ResourceManager, new object[]
			{
				mailbox,
				alias
			});
		}

		// Token: 0x06009508 RID: 38152 RVA: 0x0025BB7C File Offset: 0x00259D7C
		public static LocalizedString ErrorMaxCmdletsNotSupported(string psMaxOperations, string psMaxCmdlets, string exMaxCmdlets)
		{
			return new LocalizedString("ErrorMaxCmdletsNotSupported", "", false, false, Strings.ResourceManager, new object[]
			{
				psMaxOperations,
				psMaxCmdlets,
				exMaxCmdlets
			});
		}

		// Token: 0x17002FBC RID: 12220
		// (get) Token: 0x06009509 RID: 38153 RVA: 0x0025BBB3 File Offset: 0x00259DB3
		public static LocalizedString ADAttributeCustomAttribute13
		{
			get
			{
				return new LocalizedString("ADAttributeCustomAttribute13", "Ex3D04B7", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002FBD RID: 12221
		// (get) Token: 0x0600950A RID: 38154 RVA: 0x0025BBD1 File Offset: 0x00259DD1
		public static LocalizedString ErrorSessionNotFound
		{
			get
			{
				return new LocalizedString("ErrorSessionNotFound", "Ex5684B4", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600950B RID: 38155 RVA: 0x0025BBF0 File Offset: 0x00259DF0
		public static LocalizedString ConfirmationMessageRemoveThrottlingPolicy(string Name, string scope)
		{
			return new LocalizedString("ConfirmationMessageRemoveThrottlingPolicy", "Ex437627", false, true, Strings.ResourceManager, new object[]
			{
				Name,
				scope
			});
		}

		// Token: 0x0600950C RID: 38156 RVA: 0x0025BC24 File Offset: 0x00259E24
		public static LocalizedString UpdateMovedMailboxFailureAfterADSwitchover(LocalizedString reason)
		{
			return new LocalizedString("UpdateMovedMailboxFailureAfterADSwitchover", "ExBFD97C", false, true, Strings.ResourceManager, new object[]
			{
				reason
			});
		}

		// Token: 0x0600950D RID: 38157 RVA: 0x0025BC58 File Offset: 0x00259E58
		public static LocalizedString ConfirmationMessageRemoveDatabaseAvailabilityGroupServer(string MailboxServer, string Dag)
		{
			return new LocalizedString("ConfirmationMessageRemoveDatabaseAvailabilityGroupServer", "Ex7A3DA4", false, true, Strings.ResourceManager, new object[]
			{
				MailboxServer,
				Dag
			});
		}

		// Token: 0x0600950E RID: 38158 RVA: 0x0025BC8C File Offset: 0x00259E8C
		public static LocalizedString NotValidEmailAddress(string emailAddress)
		{
			return new LocalizedString("NotValidEmailAddress", "", false, false, Strings.ResourceManager, new object[]
			{
				emailAddress
			});
		}

		// Token: 0x17002FBE RID: 12222
		// (get) Token: 0x0600950F RID: 38159 RVA: 0x0025BCBB File Offset: 0x00259EBB
		public static LocalizedString CopyStatusDisconnected
		{
			get
			{
				return new LocalizedString("CopyStatusDisconnected", "Ex0C6E15", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009510 RID: 38160 RVA: 0x0025BCDC File Offset: 0x00259EDC
		public static LocalizedString ErrorUnableToGetUserSid(string userName)
		{
			return new LocalizedString("ErrorUnableToGetUserSid", "", false, false, Strings.ResourceManager, new object[]
			{
				userName
			});
		}

		// Token: 0x06009511 RID: 38161 RVA: 0x0025BD0C File Offset: 0x00259F0C
		public static LocalizedString RmsSharedIdentityBeingUnlinkedFromComputer(string userDn, string userOriginatingServer, string computerDn, string computerOriginatingServer)
		{
			return new LocalizedString("RmsSharedIdentityBeingUnlinkedFromComputer", "Ex47E4B1", false, true, Strings.ResourceManager, new object[]
			{
				userDn,
				userOriginatingServer,
				computerDn,
				computerOriginatingServer
			});
		}

		// Token: 0x06009512 RID: 38162 RVA: 0x0025BD48 File Offset: 0x00259F48
		public static LocalizedString UMCallAnsweringRuleTimeOfDaySimple(string workinghours)
		{
			return new LocalizedString("UMCallAnsweringRuleTimeOfDaySimple", "", false, false, Strings.ResourceManager, new object[]
			{
				workinghours
			});
		}

		// Token: 0x06009513 RID: 38163 RVA: 0x0025BD78 File Offset: 0x00259F78
		public static LocalizedString OrganizationHasNoFederation(string organization)
		{
			return new LocalizedString("OrganizationHasNoFederation", "", false, false, Strings.ResourceManager, new object[]
			{
				organization
			});
		}

		// Token: 0x17002FBF RID: 12223
		// (get) Token: 0x06009514 RID: 38164 RVA: 0x0025BDA7 File Offset: 0x00259FA7
		public static LocalizedString CannotSpecifyBothDoNotUpdateAndForceUpdate
		{
			get
			{
				return new LocalizedString("CannotSpecifyBothDoNotUpdateAndForceUpdate", "Ex2DCC63", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009515 RID: 38165 RVA: 0x0025BDC8 File Offset: 0x00259FC8
		public static LocalizedString RemoveNonEmptyOabVirtualDirectory(string oabvdir, string oabs)
		{
			return new LocalizedString("RemoveNonEmptyOabVirtualDirectory", "ExFAA488", false, true, Strings.ResourceManager, new object[]
			{
				oabvdir,
				oabs
			});
		}

		// Token: 0x17002FC0 RID: 12224
		// (get) Token: 0x06009516 RID: 38166 RVA: 0x0025BDFB File Offset: 0x00259FFB
		public static LocalizedString ErrorsDomainNotReserved
		{
			get
			{
				return new LocalizedString("ErrorsDomainNotReserved", "ExCCD219", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002FC1 RID: 12225
		// (get) Token: 0x06009517 RID: 38167 RVA: 0x0025BE19 File Offset: 0x0025A019
		public static LocalizedString PowerShellComponentDescription
		{
			get
			{
				return new LocalizedString("PowerShellComponentDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002FC2 RID: 12226
		// (get) Token: 0x06009518 RID: 38168 RVA: 0x0025BE37 File Offset: 0x0025A037
		public static LocalizedString Error_SentRepresentingRemoved
		{
			get
			{
				return new LocalizedString("Error_SentRepresentingRemoved", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002FC3 RID: 12227
		// (get) Token: 0x06009519 RID: 38169 RVA: 0x0025BE55 File Offset: 0x0025A055
		public static LocalizedString JournalNdrMailboxCannotBeNull
		{
			get
			{
				return new LocalizedString("JournalNdrMailboxCannotBeNull", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002FC4 RID: 12228
		// (get) Token: 0x0600951A RID: 38170 RVA: 0x0025BE73 File Offset: 0x0025A073
		public static LocalizedString BPADownloadingFailed
		{
			get
			{
				return new LocalizedString("BPADownloadingFailed", "Ex50CA54", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600951B RID: 38171 RVA: 0x0025BE94 File Offset: 0x0025A094
		public static LocalizedString ReadNetworkAdapterInfo(string exception)
		{
			return new LocalizedString("ReadNetworkAdapterInfo", "ExCEDD17", false, true, Strings.ResourceManager, new object[]
			{
				exception
			});
		}

		// Token: 0x17002FC5 RID: 12229
		// (get) Token: 0x0600951C RID: 38172 RVA: 0x0025BEC3 File Offset: 0x0025A0C3
		public static LocalizedString SkippedUpdatingMFLFiles
		{
			get
			{
				return new LocalizedString("SkippedUpdatingMFLFiles", "ExA17099", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002FC6 RID: 12230
		// (get) Token: 0x0600951D RID: 38173 RVA: 0x0025BEE1 File Offset: 0x0025A0E1
		public static LocalizedString ErrorBPAOutFileNotFound
		{
			get
			{
				return new LocalizedString("ErrorBPAOutFileNotFound", "Ex392174", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002FC7 RID: 12231
		// (get) Token: 0x0600951E RID: 38174 RVA: 0x0025BEFF File Offset: 0x0025A0FF
		public static LocalizedString ErrorFileTypeIsUnsupported
		{
			get
			{
				return new LocalizedString("ErrorFileTypeIsUnsupported", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600951F RID: 38175 RVA: 0x0025BF20 File Offset: 0x0025A120
		public static LocalizedString RemoveMailForestContactNotAllowed(string name)
		{
			return new LocalizedString("RemoveMailForestContactNotAllowed", "ExFD6723", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x17002FC8 RID: 12232
		// (get) Token: 0x06009520 RID: 38176 RVA: 0x0025BF4F File Offset: 0x0025A14F
		public static LocalizedString ClusterRpcCheckDesc
		{
			get
			{
				return new LocalizedString("ClusterRpcCheckDesc", "ExB8471F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002FC9 RID: 12233
		// (get) Token: 0x06009521 RID: 38177 RVA: 0x0025BF6D File Offset: 0x0025A16D
		public static LocalizedString SetupProgressOrganizationalQueryBaseDNEnabled
		{
			get
			{
				return new LocalizedString("SetupProgressOrganizationalQueryBaseDNEnabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002FCA RID: 12234
		// (get) Token: 0x06009522 RID: 38178 RVA: 0x0025BF8B File Offset: 0x0025A18B
		public static LocalizedString ErrorNoActiveDCForProvisioningReconciliationCookie
		{
			get
			{
				return new LocalizedString("ErrorNoActiveDCForProvisioningReconciliationCookie", "ExA9D1A0", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009523 RID: 38179 RVA: 0x0025BFAC File Offset: 0x0025A1AC
		public static LocalizedString ConfirmationMessageSetHostedContentFilterConfig(string identity)
		{
			return new LocalizedString("ConfirmationMessageSetHostedContentFilterConfig", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x17002FCB RID: 12235
		// (get) Token: 0x06009524 RID: 38180 RVA: 0x0025BFDB File Offset: 0x0025A1DB
		public static LocalizedString UMCallAnsweringRuleCallbackLater
		{
			get
			{
				return new LocalizedString("UMCallAnsweringRuleCallbackLater", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002FCC RID: 12236
		// (get) Token: 0x06009525 RID: 38181 RVA: 0x0025BFF9 File Offset: 0x0025A1F9
		public static LocalizedString ActiveSyncMetabaseIsapiUninstallFailure
		{
			get
			{
				return new LocalizedString("ActiveSyncMetabaseIsapiUninstallFailure", "ExDC46B7", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009526 RID: 38182 RVA: 0x0025C018 File Offset: 0x0025A218
		public static LocalizedString TooFewMailboxServersToStart(string dag, int number)
		{
			return new LocalizedString("TooFewMailboxServersToStart", "", false, false, Strings.ResourceManager, new object[]
			{
				dag,
				number
			});
		}

		// Token: 0x17002FCD RID: 12237
		// (get) Token: 0x06009527 RID: 38183 RVA: 0x0025C050 File Offset: 0x0025A250
		public static LocalizedString ADAttributeCompany
		{
			get
			{
				return new LocalizedString("ADAttributeCompany", "ExF398A9", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002FCE RID: 12238
		// (get) Token: 0x06009528 RID: 38184 RVA: 0x0025C06E File Offset: 0x0025A26E
		public static LocalizedString SetupProgressStartingHTTPFilterService
		{
			get
			{
				return new LocalizedString("SetupProgressStartingHTTPFilterService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009529 RID: 38185 RVA: 0x0025C08C File Offset: 0x0025A28C
		public static LocalizedString ConfirmationMessageSetThrottlingPolicyAssociation(string Identity, string policyName)
		{
			return new LocalizedString("ConfirmationMessageSetThrottlingPolicyAssociation", "Ex5E6F5E", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				policyName
			});
		}

		// Token: 0x0600952A RID: 38186 RVA: 0x0025C0C0 File Offset: 0x0025A2C0
		public static LocalizedString ErrorSynchronizationTypeTokenNotRecognized(string token, string parameterName)
		{
			return new LocalizedString("ErrorSynchronizationTypeTokenNotRecognized", "ExF9A318", false, true, Strings.ResourceManager, new object[]
			{
				token,
				parameterName
			});
		}

		// Token: 0x0600952B RID: 38187 RVA: 0x0025C0F4 File Offset: 0x0025A2F4
		public static LocalizedString ErrorInvalidServicePlanTransition(string oldServicePlan, string newServicePlan, string feature, string oldFeatureValue, string newFeatureValue)
		{
			return new LocalizedString("ErrorInvalidServicePlanTransition", "ExB5FB16", false, true, Strings.ResourceManager, new object[]
			{
				oldServicePlan,
				newServicePlan,
				feature,
				oldFeatureValue,
				newFeatureValue
			});
		}

		// Token: 0x0600952C RID: 38188 RVA: 0x0025C134 File Offset: 0x0025A334
		public static LocalizedString VerboseDeleteDirectory(string server, string dir)
		{
			return new LocalizedString("VerboseDeleteDirectory", "ExC684C8", false, true, Strings.ResourceManager, new object[]
			{
				server,
				dir
			});
		}

		// Token: 0x17002FCF RID: 12239
		// (get) Token: 0x0600952D RID: 38189 RVA: 0x0025C167 File Offset: 0x0025A367
		public static LocalizedString AttachmentFilterEntryExists
		{
			get
			{
				return new LocalizedString("AttachmentFilterEntryExists", "Ex2E0B47", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600952E RID: 38190 RVA: 0x0025C188 File Offset: 0x0025A388
		public static LocalizedString ErrorMoveActiveCopyIsSeedingSourceException(string db, string server)
		{
			return new LocalizedString("ErrorMoveActiveCopyIsSeedingSourceException", "", false, false, Strings.ResourceManager, new object[]
			{
				db,
				server
			});
		}

		// Token: 0x0600952F RID: 38191 RVA: 0x0025C1BC File Offset: 0x0025A3BC
		public static LocalizedString ErrorEsnIncompatibleRule(string rule)
		{
			return new LocalizedString("ErrorEsnIncompatibleRule", "", false, false, Strings.ResourceManager, new object[]
			{
				rule
			});
		}

		// Token: 0x17002FD0 RID: 12240
		// (get) Token: 0x06009530 RID: 38192 RVA: 0x0025C1EB File Offset: 0x0025A3EB
		public static LocalizedString NullServerObject
		{
			get
			{
				return new LocalizedString("NullServerObject", "ExDB44B7", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002FD1 RID: 12241
		// (get) Token: 0x06009531 RID: 38193 RVA: 0x0025C209 File Offset: 0x0025A409
		public static LocalizedString TooManyFederationTrust
		{
			get
			{
				return new LocalizedString("TooManyFederationTrust", "Ex793CB6", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002FD2 RID: 12242
		// (get) Token: 0x06009532 RID: 38194 RVA: 0x0025C227 File Offset: 0x0025A427
		public static LocalizedString CalendarSave
		{
			get
			{
				return new LocalizedString("CalendarSave", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009533 RID: 38195 RVA: 0x0025C248 File Offset: 0x0025A448
		public static LocalizedString ConfirmationMessageNewRoutingGroupConnectorTwoWays(string name, string sourceRgName, string targetRgName, int cost)
		{
			return new LocalizedString("ConfirmationMessageNewRoutingGroupConnectorTwoWays", "ExE33B88", false, true, Strings.ResourceManager, new object[]
			{
				name,
				sourceRgName,
				targetRgName,
				cost
			});
		}

		// Token: 0x06009534 RID: 38196 RVA: 0x0025C288 File Offset: 0x0025A488
		public static LocalizedString ErrorRedirectionEntryForDomainNotFound(string domainName)
		{
			return new LocalizedString("ErrorRedirectionEntryForDomainNotFound", "ExE2F659", false, true, Strings.ResourceManager, new object[]
			{
				domainName
			});
		}

		// Token: 0x06009535 RID: 38197 RVA: 0x0025C2B8 File Offset: 0x0025A4B8
		public static LocalizedString AssemblyPathIsNotRegistered(string path)
		{
			return new LocalizedString("AssemblyPathIsNotRegistered", "Ex2340DE", false, true, Strings.ResourceManager, new object[]
			{
				path
			});
		}

		// Token: 0x06009536 RID: 38198 RVA: 0x0025C2E8 File Offset: 0x0025A4E8
		public static LocalizedString ErrorCredentialRequiredForIdentity(string identity)
		{
			return new LocalizedString("ErrorCredentialRequiredForIdentity", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x06009537 RID: 38199 RVA: 0x0025C318 File Offset: 0x0025A518
		public static LocalizedString TestSearchGetNonIpmSubTreeFolderError(string ID, string database)
		{
			return new LocalizedString("TestSearchGetNonIpmSubTreeFolderError", "Ex99FD20", false, true, Strings.ResourceManager, new object[]
			{
				ID,
				database
			});
		}

		// Token: 0x06009538 RID: 38200 RVA: 0x0025C34C File Offset: 0x0025A54C
		public static LocalizedString CmdletExecutionError(string cmdlet)
		{
			return new LocalizedString("CmdletExecutionError", "", false, false, Strings.ResourceManager, new object[]
			{
				cmdlet
			});
		}

		// Token: 0x06009539 RID: 38201 RVA: 0x0025C37C File Offset: 0x0025A57C
		public static LocalizedString ProtocolSettingsDetails(string server, string port)
		{
			return new LocalizedString("ProtocolSettingsDetails", "Ex4372B2", false, true, Strings.ResourceManager, new object[]
			{
				server,
				port
			});
		}

		// Token: 0x0600953A RID: 38202 RVA: 0x0025C3B0 File Offset: 0x0025A5B0
		public static LocalizedString CouldNotUpgradeJournaling(string setting)
		{
			return new LocalizedString("CouldNotUpgradeJournaling", "Ex5604EC", false, true, Strings.ResourceManager, new object[]
			{
				setting
			});
		}

		// Token: 0x0600953B RID: 38203 RVA: 0x0025C3E0 File Offset: 0x0025A5E0
		public static LocalizedString ConfirmationMessageDisableOrganizationRelationship(string identity)
		{
			return new LocalizedString("ConfirmationMessageDisableOrganizationRelationship", "Ex1920FE", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x0600953C RID: 38204 RVA: 0x0025C410 File Offset: 0x0025A610
		public static LocalizedString ManageIsapiExtensionFoundMoreThanOneExtensionException(string groupId, string extensionBinary, string matches)
		{
			return new LocalizedString("ManageIsapiExtensionFoundMoreThanOneExtensionException", "ExEBFB3D", false, true, Strings.ResourceManager, new object[]
			{
				groupId,
				extensionBinary,
				matches
			});
		}

		// Token: 0x17002FD3 RID: 12243
		// (get) Token: 0x0600953D RID: 38205 RVA: 0x0025C447 File Offset: 0x0025A647
		public static LocalizedString SetupComponentPreSetupOSP
		{
			get
			{
				return new LocalizedString("SetupComponentPreSetupOSP", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600953E RID: 38206 RVA: 0x0025C468 File Offset: 0x0025A668
		public static LocalizedString ErrorAuxHasParent(string aux)
		{
			return new LocalizedString("ErrorAuxHasParent", "", false, false, Strings.ResourceManager, new object[]
			{
				aux
			});
		}

		// Token: 0x0600953F RID: 38207 RVA: 0x0025C498 File Offset: 0x0025A698
		public static LocalizedString ConfirmationMessageEnableDistributionGroup(string Identity)
		{
			return new LocalizedString("ConfirmationMessageEnableDistributionGroup", "ExF42304", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x17002FD4 RID: 12244
		// (get) Token: 0x06009540 RID: 38208 RVA: 0x0025C4C7 File Offset: 0x0025A6C7
		public static LocalizedString ErrorUseDatabaseRetentionDefaultsCanOnlySetToFalse
		{
			get
			{
				return new LocalizedString("ErrorUseDatabaseRetentionDefaultsCanOnlySetToFalse", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002FD5 RID: 12245
		// (get) Token: 0x06009541 RID: 38209 RVA: 0x0025C4E5 File Offset: 0x0025A6E5
		public static LocalizedString TransportCommonServiceControlComponentDescription
		{
			get
			{
				return new LocalizedString("TransportCommonServiceControlComponentDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009542 RID: 38210 RVA: 0x0025C504 File Offset: 0x0025A704
		public static LocalizedString ConfirmationMessageUpdateRecipient(string Identity)
		{
			return new LocalizedString("ConfirmationMessageUpdateRecipient", "Ex712FE0", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x17002FD6 RID: 12246
		// (get) Token: 0x06009543 RID: 38211 RVA: 0x0025C533 File Offset: 0x0025A733
		public static LocalizedString MsiPropertyTooLarge
		{
			get
			{
				return new LocalizedString("MsiPropertyTooLarge", "Ex3F289F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009544 RID: 38212 RVA: 0x0025C554 File Offset: 0x0025A754
		public static LocalizedString ErrorMetabasePathNotFound(string metabasePath)
		{
			return new LocalizedString("ErrorMetabasePathNotFound", "Ex46276B", false, true, Strings.ResourceManager, new object[]
			{
				metabasePath
			});
		}

		// Token: 0x06009545 RID: 38213 RVA: 0x0025C584 File Offset: 0x0025A784
		public static LocalizedString ErrorFolderLocationUnknown(string folder)
		{
			return new LocalizedString("ErrorFolderLocationUnknown", "", false, false, Strings.ResourceManager, new object[]
			{
				folder
			});
		}

		// Token: 0x17002FD7 RID: 12247
		// (get) Token: 0x06009546 RID: 38214 RVA: 0x0025C5B3 File Offset: 0x0025A7B3
		public static LocalizedString ArchiveConnectivityResultSuccess
		{
			get
			{
				return new LocalizedString("ArchiveConnectivityResultSuccess", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002FD8 RID: 12248
		// (get) Token: 0x06009547 RID: 38215 RVA: 0x0025C5D1 File Offset: 0x0025A7D1
		public static LocalizedString FailedToRegisterContentIndexingBinaries
		{
			get
			{
				return new LocalizedString("FailedToRegisterContentIndexingBinaries", "Ex0E1AD6", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009548 RID: 38216 RVA: 0x0025C5F0 File Offset: 0x0025A7F0
		public static LocalizedString WarningRemoveInvalidRoleAssignment(string roleId)
		{
			return new LocalizedString("WarningRemoveInvalidRoleAssignment", "ExF624E6", false, true, Strings.ResourceManager, new object[]
			{
				roleId
			});
		}

		// Token: 0x06009549 RID: 38217 RVA: 0x0025C620 File Offset: 0x0025A820
		public static LocalizedString ConfirmationMessageSetResourcePolicy(string Name)
		{
			return new LocalizedString("ConfirmationMessageSetResourcePolicy", "", false, false, Strings.ResourceManager, new object[]
			{
				Name
			});
		}

		// Token: 0x0600954A RID: 38218 RVA: 0x0025C650 File Offset: 0x0025A850
		public static LocalizedString BatchValidationWarningsAutoStart(string batchName)
		{
			return new LocalizedString("BatchValidationWarningsAutoStart", "", false, false, Strings.ResourceManager, new object[]
			{
				batchName
			});
		}

		// Token: 0x17002FD9 RID: 12249
		// (get) Token: 0x0600954B RID: 38219 RVA: 0x0025C67F File Offset: 0x0025A87F
		public static LocalizedString ErrorRmsOnlinePrerequisites
		{
			get
			{
				return new LocalizedString("ErrorRmsOnlinePrerequisites", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600954C RID: 38220 RVA: 0x0025C6A0 File Offset: 0x0025A8A0
		public static LocalizedString ErrorAppHostOrWindowsAuthenticationNotFound(string windowsAuth, string metabasePath, string localpath)
		{
			return new LocalizedString("ErrorAppHostOrWindowsAuthenticationNotFound", "ExFB5442", false, true, Strings.ResourceManager, new object[]
			{
				windowsAuth,
				metabasePath,
				localpath
			});
		}

		// Token: 0x17002FDA RID: 12250
		// (get) Token: 0x0600954D RID: 38221 RVA: 0x0025C6D7 File Offset: 0x0025A8D7
		public static LocalizedString ErrorServerNameModified
		{
			get
			{
				return new LocalizedString("ErrorServerNameModified", "ExD55FAB", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600954E RID: 38222 RVA: 0x0025C6F8 File Offset: 0x0025A8F8
		public static LocalizedString GetIISVersionException(string server)
		{
			return new LocalizedString("GetIISVersionException", "Ex633AA4", false, true, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		// Token: 0x17002FDB RID: 12251
		// (get) Token: 0x0600954F RID: 38223 RVA: 0x0025C727 File Offset: 0x0025A927
		public static LocalizedString MailSubmissionServiceDescription
		{
			get
			{
				return new LocalizedString("MailSubmissionServiceDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009550 RID: 38224 RVA: 0x0025C748 File Offset: 0x0025A948
		public static LocalizedString DatabaseListMustBeValid(string m)
		{
			return new LocalizedString("DatabaseListMustBeValid", "Ex0FB073", false, true, Strings.ResourceManager, new object[]
			{
				m
			});
		}

		// Token: 0x06009551 RID: 38225 RVA: 0x0025C778 File Offset: 0x0025A978
		public static LocalizedString InvalidIdentity(string identity, string format)
		{
			return new LocalizedString("InvalidIdentity", "", false, false, Strings.ResourceManager, new object[]
			{
				identity,
				format
			});
		}

		// Token: 0x17002FDC RID: 12252
		// (get) Token: 0x06009552 RID: 38226 RVA: 0x0025C7AB File Offset: 0x0025A9AB
		public static LocalizedString VerboseFixingAddressBookFilterMetadata
		{
			get
			{
				return new LocalizedString("VerboseFixingAddressBookFilterMetadata", "ExEF409E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002FDD RID: 12253
		// (get) Token: 0x06009553 RID: 38227 RVA: 0x0025C7C9 File Offset: 0x0025A9C9
		public static LocalizedString ErrorMovingToOldExchangeDatabaseUnsupported
		{
			get
			{
				return new LocalizedString("ErrorMovingToOldExchangeDatabaseUnsupported", "ExB82862", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002FDE RID: 12254
		// (get) Token: 0x06009554 RID: 38228 RVA: 0x0025C7E7 File Offset: 0x0025A9E7
		public static LocalizedString ErrorOnlyDefaultTagAllowCustomizedMessageClass
		{
			get
			{
				return new LocalizedString("ErrorOnlyDefaultTagAllowCustomizedMessageClass", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009555 RID: 38229 RVA: 0x0025C808 File Offset: 0x0025AA08
		public static LocalizedString ErrorLinkOpOnDehydratedTenant(string parameter)
		{
			return new LocalizedString("ErrorLinkOpOnDehydratedTenant", "", false, false, Strings.ResourceManager, new object[]
			{
				parameter
			});
		}

		// Token: 0x06009556 RID: 38230 RVA: 0x0025C838 File Offset: 0x0025AA38
		public static LocalizedString ErrorConvertGroupContainsNonRoomMailbox(string idGroup, string idMember)
		{
			return new LocalizedString("ErrorConvertGroupContainsNonRoomMailbox", "Ex2905EA", false, true, Strings.ResourceManager, new object[]
			{
				idGroup,
				idMember
			});
		}

		// Token: 0x06009557 RID: 38231 RVA: 0x0025C86C File Offset: 0x0025AA6C
		public static LocalizedString ErrorInvalidArbitrationMbxType(string arbitrationMailbox)
		{
			return new LocalizedString("ErrorInvalidArbitrationMbxType", "Ex662D5C", false, true, Strings.ResourceManager, new object[]
			{
				arbitrationMailbox
			});
		}

		// Token: 0x06009558 RID: 38232 RVA: 0x0025C89C File Offset: 0x0025AA9C
		public static LocalizedString DagTaskServersInAdNotInCluster(string serverNames)
		{
			return new LocalizedString("DagTaskServersInAdNotInCluster", "", false, false, Strings.ResourceManager, new object[]
			{
				serverNames
			});
		}

		// Token: 0x17002FDF RID: 12255
		// (get) Token: 0x06009559 RID: 38233 RVA: 0x0025C8CB File Offset: 0x0025AACB
		public static LocalizedString DagFswInternalErrorFswObjectNotInitialized
		{
			get
			{
				return new LocalizedString("DagFswInternalErrorFswObjectNotInitialized", "Ex7031D2", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600955A RID: 38234 RVA: 0x0025C8EC File Offset: 0x0025AAEC
		public static LocalizedString WarningMessageRemoveWebServicesVirtualDirectory(string Identity)
		{
			return new LocalizedString("WarningMessageRemoveWebServicesVirtualDirectory", "Ex5D99F8", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x17002FE0 RID: 12256
		// (get) Token: 0x0600955B RID: 38235 RVA: 0x0025C91B File Offset: 0x0025AB1B
		public static LocalizedString ChunkingEnabledSettingConflict
		{
			get
			{
				return new LocalizedString("ChunkingEnabledSettingConflict", "Ex612C5F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002FE1 RID: 12257
		// (get) Token: 0x0600955C RID: 38236 RVA: 0x0025C939 File Offset: 0x0025AB39
		public static LocalizedString CafeLocalPermissionsComponentDescription
		{
			get
			{
				return new LocalizedString("CafeLocalPermissionsComponentDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600955D RID: 38237 RVA: 0x0025C958 File Offset: 0x0025AB58
		public static LocalizedString CrossPremiseSessionFailure(string source, string target)
		{
			return new LocalizedString("CrossPremiseSessionFailure", "Ex552EE7", false, true, Strings.ResourceManager, new object[]
			{
				source,
				target
			});
		}

		// Token: 0x0600955E RID: 38238 RVA: 0x0025C98C File Offset: 0x0025AB8C
		public static LocalizedString UninstallOldMSIFor(string lang, string msiType)
		{
			return new LocalizedString("UninstallOldMSIFor", "ExA908F2", false, true, Strings.ResourceManager, new object[]
			{
				lang,
				msiType
			});
		}

		// Token: 0x0600955F RID: 38239 RVA: 0x0025C9C0 File Offset: 0x0025ABC0
		public static LocalizedString ErrorCallingNetSh(string command, string error)
		{
			return new LocalizedString("ErrorCallingNetSh", "", false, false, Strings.ResourceManager, new object[]
			{
				command,
				error
			});
		}

		// Token: 0x06009560 RID: 38240 RVA: 0x0025C9F4 File Offset: 0x0025ABF4
		public static LocalizedString SuccessRemoveGlobalMonitoringOverride(string identity)
		{
			return new LocalizedString("SuccessRemoveGlobalMonitoringOverride", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x06009561 RID: 38241 RVA: 0x0025CA24 File Offset: 0x0025AC24
		public static LocalizedString TSMDBperformanceCounterNotLoaded(string serverName, string counterName)
		{
			return new LocalizedString("TSMDBperformanceCounterNotLoaded", "Ex7E52BD", false, true, Strings.ResourceManager, new object[]
			{
				serverName,
				counterName
			});
		}

		// Token: 0x06009562 RID: 38242 RVA: 0x0025CA58 File Offset: 0x0025AC58
		public static LocalizedString VerboseCheckIfTopLevelRoleThatSelfDelegatorRemovalCheckCanBeWaivedFor(string id, string roleType)
		{
			return new LocalizedString("VerboseCheckIfTopLevelRoleThatSelfDelegatorRemovalCheckCanBeWaivedFor", "ExD3D50A", false, true, Strings.ResourceManager, new object[]
			{
				id,
				roleType
			});
		}

		// Token: 0x17002FE2 RID: 12258
		// (get) Token: 0x06009563 RID: 38243 RVA: 0x0025CA8B File Offset: 0x0025AC8B
		public static LocalizedString CasHealthGetFolderScenarioDescription
		{
			get
			{
				return new LocalizedString("CasHealthGetFolderScenarioDescription", "Ex078A8B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002FE3 RID: 12259
		// (get) Token: 0x06009564 RID: 38244 RVA: 0x0025CAA9 File Offset: 0x0025ACA9
		public static LocalizedString ConfirmationMessageTestTenantMonitoringPerfCounters
		{
			get
			{
				return new LocalizedString("ConfirmationMessageTestTenantMonitoringPerfCounters", "ExB8745A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002FE4 RID: 12260
		// (get) Token: 0x06009565 RID: 38245 RVA: 0x0025CAC7 File Offset: 0x0025ACC7
		public static LocalizedString SetupComponentTransportGlobalConfig
		{
			get
			{
				return new LocalizedString("SetupComponentTransportGlobalConfig", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009566 RID: 38246 RVA: 0x0025CAE8 File Offset: 0x0025ACE8
		public static LocalizedString ErrorInvalidOperationOnEapObject(string id, string msg)
		{
			return new LocalizedString("ErrorInvalidOperationOnEapObject", "Ex061962", false, true, Strings.ResourceManager, new object[]
			{
				id,
				msg
			});
		}

		// Token: 0x06009567 RID: 38247 RVA: 0x0025CB1C File Offset: 0x0025AD1C
		public static LocalizedString InvalidUMFaxServerURIValue(string faxServerUri)
		{
			return new LocalizedString("InvalidUMFaxServerURIValue", "Ex221C40", false, true, Strings.ResourceManager, new object[]
			{
				faxServerUri
			});
		}

		// Token: 0x17002FE5 RID: 12261
		// (get) Token: 0x06009568 RID: 38248 RVA: 0x0025CB4B File Offset: 0x0025AD4B
		public static LocalizedString UpdateDbcCatalogOnlyAndDatabaseOnlyAreMutuallyExclusiveException
		{
			get
			{
				return new LocalizedString("UpdateDbcCatalogOnlyAndDatabaseOnlyAreMutuallyExclusiveException", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009569 RID: 38249 RVA: 0x0025CB6C File Offset: 0x0025AD6C
		public static LocalizedString ErrorMultipleDatabaseCopies(string id)
		{
			return new LocalizedString("ErrorMultipleDatabaseCopies", "Ex191F5D", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x17002FE6 RID: 12262
		// (get) Token: 0x0600956A RID: 38250 RVA: 0x0025CB9B File Offset: 0x0025AD9B
		public static LocalizedString GetHealthReportProgressStarting
		{
			get
			{
				return new LocalizedString("GetHealthReportProgressStarting", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600956B RID: 38251 RVA: 0x0025CBBC File Offset: 0x0025ADBC
		public static LocalizedString ConfirmationMessageAddADPermissionAccessRights(string Identity, string User, string AccessRights)
		{
			return new LocalizedString("ConfirmationMessageAddADPermissionAccessRights", "ExCC54AB", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				User,
				AccessRights
			});
		}

		// Token: 0x0600956C RID: 38252 RVA: 0x0025CBF4 File Offset: 0x0025ADF4
		public static LocalizedString InvalidDataSourceException(int number)
		{
			return new LocalizedString("InvalidDataSourceException", "", false, false, Strings.ResourceManager, new object[]
			{
				number
			});
		}

		// Token: 0x0600956D RID: 38253 RVA: 0x0025CC28 File Offset: 0x0025AE28
		public static LocalizedString VerboseGetSyncDeletedRecipientNeedsRetry(int retryCount)
		{
			return new LocalizedString("VerboseGetSyncDeletedRecipientNeedsRetry", "Ex5B0B06", false, true, Strings.ResourceManager, new object[]
			{
				retryCount
			});
		}

		// Token: 0x0600956E RID: 38254 RVA: 0x0025CC5C File Offset: 0x0025AE5C
		public static LocalizedString TestRHCheckTPRListener(string serverVersion, string rpcSupportedVersion)
		{
			return new LocalizedString("TestRHCheckTPRListener", "Ex791BAC", false, true, Strings.ResourceManager, new object[]
			{
				serverVersion,
				rpcSupportedVersion
			});
		}

		// Token: 0x0600956F RID: 38255 RVA: 0x0025CC90 File Offset: 0x0025AE90
		public static LocalizedString ConfirmationMessageRemoveRetentionPolicy(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveRetentionPolicy", "Ex11CE38", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x17002FE7 RID: 12263
		// (get) Token: 0x06009570 RID: 38256 RVA: 0x0025CCBF File Offset: 0x0025AEBF
		public static LocalizedString Pop3BeServiceDisplayName
		{
			get
			{
				return new LocalizedString("Pop3BeServiceDisplayName", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009571 RID: 38257 RVA: 0x0025CCE0 File Offset: 0x0025AEE0
		public static LocalizedString AutodiscoverServiceCallSucceeded(string url)
		{
			return new LocalizedString("AutodiscoverServiceCallSucceeded", "ExB7ECEA", false, true, Strings.ResourceManager, new object[]
			{
				url
			});
		}

		// Token: 0x17002FE8 RID: 12264
		// (get) Token: 0x06009572 RID: 38258 RVA: 0x0025CD0F File Offset: 0x0025AF0F
		public static LocalizedString SupervisionPolicyAmbiguous
		{
			get
			{
				return new LocalizedString("SupervisionPolicyAmbiguous", "Ex5E8F7F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002FE9 RID: 12265
		// (get) Token: 0x06009573 RID: 38259 RVA: 0x0025CD2D File Offset: 0x0025AF2D
		public static LocalizedString ProgressStartUpdateAD
		{
			get
			{
				return new LocalizedString("ProgressStartUpdateAD", "ExC615CB", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009574 RID: 38260 RVA: 0x0025CD4C File Offset: 0x0025AF4C
		public static LocalizedString ErrorUnexpectedRemoveStoreMailboxState(string identity, string state, string argument)
		{
			return new LocalizedString("ErrorUnexpectedRemoveStoreMailboxState", "Ex4BAC5A", false, true, Strings.ResourceManager, new object[]
			{
				identity,
				state,
				argument
			});
		}

		// Token: 0x17002FEA RID: 12266
		// (get) Token: 0x06009575 RID: 38261 RVA: 0x0025CD83 File Offset: 0x0025AF83
		public static LocalizedString DagMgmtServiceDisplayName
		{
			get
			{
				return new LocalizedString("DagMgmtServiceDisplayName", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002FEB RID: 12267
		// (get) Token: 0x06009576 RID: 38262 RVA: 0x0025CDA1 File Offset: 0x0025AFA1
		public static LocalizedString IncludeKeywordStatisticsParameterConflict
		{
			get
			{
				return new LocalizedString("IncludeKeywordStatisticsParameterConflict", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002FEC RID: 12268
		// (get) Token: 0x06009577 RID: 38263 RVA: 0x0025CDBF File Offset: 0x0025AFBF
		public static LocalizedString MtrtReportSeverityLevelLow
		{
			get
			{
				return new LocalizedString("MtrtReportSeverityLevelLow", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009578 RID: 38264 RVA: 0x0025CDE0 File Offset: 0x0025AFE0
		public static LocalizedString GroupsIsNotAllowedForHold(string group)
		{
			return new LocalizedString("GroupsIsNotAllowedForHold", "", false, false, Strings.ResourceManager, new object[]
			{
				group
			});
		}

		// Token: 0x17002FED RID: 12269
		// (get) Token: 0x06009579 RID: 38265 RVA: 0x0025CE0F File Offset: 0x0025B00F
		public static LocalizedString ClassificationRuleCollectionIllegalScopedSetOperation
		{
			get
			{
				return new LocalizedString("ClassificationRuleCollectionIllegalScopedSetOperation", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002FEE RID: 12270
		// (get) Token: 0x0600957A RID: 38266 RVA: 0x0025CE2D File Offset: 0x0025B02D
		public static LocalizedString MigrationMustSpecifyEmailOrMailboxDNOrMailboxPermission
		{
			get
			{
				return new LocalizedString("MigrationMustSpecifyEmailOrMailboxDNOrMailboxPermission", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600957B RID: 38267 RVA: 0x0025CE4C File Offset: 0x0025B04C
		public static LocalizedString DagConfigVersionConflictException(string dagConfigName, int dagconfigversion, int xmlversion)
		{
			return new LocalizedString("DagConfigVersionConflictException", "", false, false, Strings.ResourceManager, new object[]
			{
				dagConfigName,
				dagconfigversion,
				xmlversion
			});
		}

		// Token: 0x0600957C RID: 38268 RVA: 0x0025CE90 File Offset: 0x0025B090
		public static LocalizedString ConfirmationMessageNewTenantRelocationRequest(string Identity)
		{
			return new LocalizedString("ConfirmationMessageNewTenantRelocationRequest", "", false, false, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x17002FEF RID: 12271
		// (get) Token: 0x0600957D RID: 38269 RVA: 0x0025CEBF File Offset: 0x0025B0BF
		public static LocalizedString WarningMessageNewTPRDag
		{
			get
			{
				return new LocalizedString("WarningMessageNewTPRDag", "ExAA7A44", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600957E RID: 38270 RVA: 0x0025CEE0 File Offset: 0x0025B0E0
		public static LocalizedString CannotRemoveServiceInstanceError(string serviceInstanceId)
		{
			return new LocalizedString("CannotRemoveServiceInstanceError", "", false, false, Strings.ResourceManager, new object[]
			{
				serviceInstanceId
			});
		}

		// Token: 0x0600957F RID: 38271 RVA: 0x0025CF10 File Offset: 0x0025B110
		public static LocalizedString FailureAndReason(string message, string reason)
		{
			return new LocalizedString("FailureAndReason", "Ex64623E", false, true, Strings.ResourceManager, new object[]
			{
				message,
				reason
			});
		}

		// Token: 0x06009580 RID: 38272 RVA: 0x0025CF44 File Offset: 0x0025B144
		public static LocalizedString DatabaseReplayQueueNotKeepingUp(string dbName, string serverName, long queueLength)
		{
			return new LocalizedString("DatabaseReplayQueueNotKeepingUp", "ExAA6331", false, true, Strings.ResourceManager, new object[]
			{
				dbName,
				serverName,
				queueLength
			});
		}

		// Token: 0x06009581 RID: 38273 RVA: 0x0025CF80 File Offset: 0x0025B180
		public static LocalizedString ValidPatch(string name, int order)
		{
			return new LocalizedString("ValidPatch", "Ex4AEC1B", false, true, Strings.ResourceManager, new object[]
			{
				name,
				order
			});
		}

		// Token: 0x06009582 RID: 38274 RVA: 0x0025CFB8 File Offset: 0x0025B1B8
		public static LocalizedString BackupFileCreated(string originalFilename, string backupFileName)
		{
			return new LocalizedString("BackupFileCreated", "Ex914EA8", false, true, Strings.ResourceManager, new object[]
			{
				originalFilename,
				backupFileName
			});
		}

		// Token: 0x17002FF0 RID: 12272
		// (get) Token: 0x06009583 RID: 38275 RVA: 0x0025CFEB File Offset: 0x0025B1EB
		public static LocalizedString JournalingParameterErrorGccWithOrganization
		{
			get
			{
				return new LocalizedString("JournalingParameterErrorGccWithOrganization", "ExA00199", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002FF1 RID: 12273
		// (get) Token: 0x06009584 RID: 38276 RVA: 0x0025D009 File Offset: 0x0025B209
		public static LocalizedString SetupProgressDisableMigrationRPCFirewallRule
		{
			get
			{
				return new LocalizedString("SetupProgressDisableMigrationRPCFirewallRule", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009585 RID: 38277 RVA: 0x0025D028 File Offset: 0x0025B228
		public static LocalizedString InfoCertificationUri(Uri uri)
		{
			return new LocalizedString("InfoCertificationUri", "ExCAC3FF", false, true, Strings.ResourceManager, new object[]
			{
				uri
			});
		}

		// Token: 0x17002FF2 RID: 12274
		// (get) Token: 0x06009586 RID: 38278 RVA: 0x0025D057 File Offset: 0x0025B257
		public static LocalizedString AlsEmailBodyCriteria
		{
			get
			{
				return new LocalizedString("AlsEmailBodyCriteria", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002FF3 RID: 12275
		// (get) Token: 0x06009587 RID: 38279 RVA: 0x0025D075 File Offset: 0x0025B275
		public static LocalizedString SetServiceInstanceMapReturnedNull
		{
			get
			{
				return new LocalizedString("SetServiceInstanceMapReturnedNull", "Ex48052F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002FF4 RID: 12276
		// (get) Token: 0x06009588 RID: 38280 RVA: 0x0025D093 File Offset: 0x0025B293
		public static LocalizedString CopyStatusNotConfigured
		{
			get
			{
				return new LocalizedString("CopyStatusNotConfigured", "Ex8C1C56", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002FF5 RID: 12277
		// (get) Token: 0x06009589 RID: 38281 RVA: 0x0025D0B1 File Offset: 0x0025B2B1
		public static LocalizedString ClassificationRuleCollectionInvalidObject
		{
			get
			{
				return new LocalizedString("ClassificationRuleCollectionInvalidObject", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600958A RID: 38282 RVA: 0x0025D0D0 File Offset: 0x0025B2D0
		public static LocalizedString XmlDeserializationException(string filename, string error, string addlInfo)
		{
			return new LocalizedString("XmlDeserializationException", "", false, false, Strings.ResourceManager, new object[]
			{
				filename,
				error,
				addlInfo
			});
		}

		// Token: 0x17002FF6 RID: 12278
		// (get) Token: 0x0600958B RID: 38283 RVA: 0x0025D107 File Offset: 0x0025B307
		public static LocalizedString CannotResolveSiteRedirectionTemplateMessage
		{
			get
			{
				return new LocalizedString("CannotResolveSiteRedirectionTemplateMessage", "Ex9995DA", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600958C RID: 38284 RVA: 0x0025D128 File Offset: 0x0025B328
		public static LocalizedString ExportMultipleMailboxToOnePST(string pstPath)
		{
			return new LocalizedString("ExportMultipleMailboxToOnePST", "Ex2FCEA6", false, true, Strings.ResourceManager, new object[]
			{
				pstPath
			});
		}

		// Token: 0x0600958D RID: 38285 RVA: 0x0025D158 File Offset: 0x0025B358
		public static LocalizedString CannotFindGlobalCatalogsInForest(string forestFqdn)
		{
			return new LocalizedString("CannotFindGlobalCatalogsInForest", "Ex4295B4", false, true, Strings.ResourceManager, new object[]
			{
				forestFqdn
			});
		}

		// Token: 0x17002FF7 RID: 12279
		// (get) Token: 0x0600958E RID: 38286 RVA: 0x0025D187 File Offset: 0x0025B387
		public static LocalizedString SetupComponentConfiguringPublicFolder
		{
			get
			{
				return new LocalizedString("SetupComponentConfiguringPublicFolder", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600958F RID: 38287 RVA: 0x0025D1A8 File Offset: 0x0025B3A8
		public static LocalizedString TestSearchCreateSearchFolder(string MDB, string ID)
		{
			return new LocalizedString("TestSearchCreateSearchFolder", "ExEE23AE", false, true, Strings.ResourceManager, new object[]
			{
				MDB,
				ID
			});
		}

		// Token: 0x06009590 RID: 38288 RVA: 0x0025D1DC File Offset: 0x0025B3DC
		public static LocalizedString CouldNotSaveContentSetting(string setting)
		{
			return new LocalizedString("CouldNotSaveContentSetting", "ExC50594", false, true, Strings.ResourceManager, new object[]
			{
				setting
			});
		}

		// Token: 0x06009591 RID: 38289 RVA: 0x0025D20C File Offset: 0x0025B40C
		public static LocalizedString ErrorSubmitCommandFailed(int code, string message)
		{
			return new LocalizedString("ErrorSubmitCommandFailed", "ExE46568", false, true, Strings.ResourceManager, new object[]
			{
				code,
				message
			});
		}

		// Token: 0x17002FF8 RID: 12280
		// (get) Token: 0x06009592 RID: 38290 RVA: 0x0025D244 File Offset: 0x0025B444
		public static LocalizedString CasHealthNoTuplesToTest
		{
			get
			{
				return new LocalizedString("CasHealthNoTuplesToTest", "ExB9847D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002FF9 RID: 12281
		// (get) Token: 0x06009593 RID: 38291 RVA: 0x0025D262 File Offset: 0x0025B462
		public static LocalizedString SetupProgressStoppingProtectedServiceHostService
		{
			get
			{
				return new LocalizedString("SetupProgressStoppingProtectedServiceHostService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009594 RID: 38292 RVA: 0x0025D280 File Offset: 0x0025B480
		public static LocalizedString GetFederationInformationResults(string results)
		{
			return new LocalizedString("GetFederationInformationResults", "Ex3F7E37", false, true, Strings.ResourceManager, new object[]
			{
				results
			});
		}

		// Token: 0x06009595 RID: 38293 RVA: 0x0025D2B0 File Offset: 0x0025B4B0
		public static LocalizedString RemovingMoveJobFromAd(string identity)
		{
			return new LocalizedString("RemovingMoveJobFromAd", "ExB5887C", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x17002FFA RID: 12282
		// (get) Token: 0x06009596 RID: 38294 RVA: 0x0025D2DF File Offset: 0x0025B4DF
		public static LocalizedString SetupComponentDomainGlobalConfig
		{
			get
			{
				return new LocalizedString("SetupComponentDomainGlobalConfig", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002FFB RID: 12283
		// (get) Token: 0x06009597 RID: 38295 RVA: 0x0025D2FD File Offset: 0x0025B4FD
		public static LocalizedString DagFswUnableToDetermineFrontendTransportServerException
		{
			get
			{
				return new LocalizedString("DagFswUnableToDetermineFrontendTransportServerException", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002FFC RID: 12284
		// (get) Token: 0x06009598 RID: 38296 RVA: 0x0025D31B File Offset: 0x0025B51B
		public static LocalizedString ErrorCannotCreateRuleWithoutCondition
		{
			get
			{
				return new LocalizedString("ErrorCannotCreateRuleWithoutCondition", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009599 RID: 38297 RVA: 0x0025D33C File Offset: 0x0025B53C
		public static LocalizedString EntryNoAllowedInRoleType(string entryType, string roleType)
		{
			return new LocalizedString("EntryNoAllowedInRoleType", "ExA96F98", false, true, Strings.ResourceManager, new object[]
			{
				entryType,
				roleType
			});
		}

		// Token: 0x0600959A RID: 38298 RVA: 0x0025D370 File Offset: 0x0025B570
		public static LocalizedString ErrorElcFolderNotFound(string folderid)
		{
			return new LocalizedString("ErrorElcFolderNotFound", "Ex45FEA6", false, true, Strings.ResourceManager, new object[]
			{
				folderid
			});
		}

		// Token: 0x17002FFD RID: 12285
		// (get) Token: 0x0600959B RID: 38299 RVA: 0x0025D39F File Offset: 0x0025B59F
		public static LocalizedString CopyStatusServiceDown
		{
			get
			{
				return new LocalizedString("CopyStatusServiceDown", "ExF53C9E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002FFE RID: 12286
		// (get) Token: 0x0600959C RID: 38300 RVA: 0x0025D3BD File Offset: 0x0025B5BD
		public static LocalizedString ErrorNoNewSiteFolderDatabaseFound
		{
			get
			{
				return new LocalizedString("ErrorNoNewSiteFolderDatabaseFound", "Ex0FE9D5", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17002FFF RID: 12287
		// (get) Token: 0x0600959D RID: 38301 RVA: 0x0025D3DB File Offset: 0x0025B5DB
		public static LocalizedString CasHealthAllTransactionsSucceeded
		{
			get
			{
				return new LocalizedString("CasHealthAllTransactionsSucceeded", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003000 RID: 12288
		// (get) Token: 0x0600959E RID: 38302 RVA: 0x0025D3F9 File Offset: 0x0025B5F9
		public static LocalizedString AdminToolsPrereqCheck
		{
			get
			{
				return new LocalizedString("AdminToolsPrereqCheck", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003001 RID: 12289
		// (get) Token: 0x0600959F RID: 38303 RVA: 0x0025D417 File Offset: 0x0025B617
		public static LocalizedString SetupPrereqAnalysisInProgress
		{
			get
			{
				return new LocalizedString("SetupPrereqAnalysisInProgress", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003002 RID: 12290
		// (get) Token: 0x060095A0 RID: 38304 RVA: 0x0025D435 File Offset: 0x0025B635
		public static LocalizedString UninstallReplayServiceTask
		{
			get
			{
				return new LocalizedString("UninstallReplayServiceTask", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060095A1 RID: 38305 RVA: 0x0025D454 File Offset: 0x0025B654
		public static LocalizedString ConfirmationMessageRemoveUMMailboxPolicy(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveUMMailboxPolicy", "Ex83626A", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x17003003 RID: 12291
		// (get) Token: 0x060095A2 RID: 38306 RVA: 0x0025D483 File Offset: 0x0025B683
		public static LocalizedString SetupComponentMidFileCopyAdminTools
		{
			get
			{
				return new LocalizedString("SetupComponentMidFileCopyAdminTools", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003004 RID: 12292
		// (get) Token: 0x060095A3 RID: 38307 RVA: 0x0025D4A1 File Offset: 0x0025B6A1
		public static LocalizedString FailedToAccessIrmConfiguration
		{
			get
			{
				return new LocalizedString("FailedToAccessIrmConfiguration", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003005 RID: 12293
		// (get) Token: 0x060095A4 RID: 38308 RVA: 0x0025D4BF File Offset: 0x0025B6BF
		public static LocalizedString CopyStatusUnknown
		{
			get
			{
				return new LocalizedString("CopyStatusUnknown", "ExC9884C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003006 RID: 12294
		// (get) Token: 0x060095A5 RID: 38309 RVA: 0x0025D4DD File Offset: 0x0025B6DD
		public static LocalizedString ErrorBPAOutDirectoryNotFound
		{
			get
			{
				return new LocalizedString("ErrorBPAOutDirectoryNotFound", "Ex735FFB", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060095A6 RID: 38310 RVA: 0x0025D4FC File Offset: 0x0025B6FC
		public static LocalizedString ConfirmationMessageSetDynamicDistributionGroup(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetDynamicDistributionGroup", "Ex43AE1C", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x17003007 RID: 12295
		// (get) Token: 0x060095A7 RID: 38311 RVA: 0x0025D52B File Offset: 0x0025B72B
		public static LocalizedString OmaVDirNotFound
		{
			get
			{
				return new LocalizedString("OmaVDirNotFound", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060095A8 RID: 38312 RVA: 0x0025D54C File Offset: 0x0025B74C
		public static LocalizedString InvalidPropertyOverrideValue(string propertyOverride)
		{
			return new LocalizedString("InvalidPropertyOverrideValue", "", false, false, Strings.ResourceManager, new object[]
			{
				propertyOverride
			});
		}

		// Token: 0x060095A9 RID: 38313 RVA: 0x0025D57C File Offset: 0x0025B77C
		public static LocalizedString ErrorClassificationNameCannotBeBlank(string applyClassificationParameterName)
		{
			return new LocalizedString("ErrorClassificationNameCannotBeBlank", "", false, false, Strings.ResourceManager, new object[]
			{
				applyClassificationParameterName
			});
		}

		// Token: 0x17003008 RID: 12296
		// (get) Token: 0x060095AA RID: 38314 RVA: 0x0025D5AB File Offset: 0x0025B7AB
		public static LocalizedString SetupProgressInstallingHealthManager
		{
			get
			{
				return new LocalizedString("SetupProgressInstallingHealthManager", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060095AB RID: 38315 RVA: 0x0025D5CC File Offset: 0x0025B7CC
		public static LocalizedString CannotStopNonRunningJob(string name)
		{
			return new LocalizedString("CannotStopNonRunningJob", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x17003009 RID: 12297
		// (get) Token: 0x060095AC RID: 38316 RVA: 0x0025D5FB File Offset: 0x0025B7FB
		public static LocalizedString ErrorMultipleProvisioningPolicyExist
		{
			get
			{
				return new LocalizedString("ErrorMultipleProvisioningPolicyExist", "Ex8B0CCD", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060095AD RID: 38317 RVA: 0x0025D61C File Offset: 0x0025B81C
		public static LocalizedString WebServicesTestOutcomeToString(string source, string serviceEndpoint, string scenario, string result, string latency, string error, string verbose)
		{
			return new LocalizedString("WebServicesTestOutcomeToString", "", false, false, Strings.ResourceManager, new object[]
			{
				source,
				serviceEndpoint,
				scenario,
				result,
				latency,
				error,
				verbose
			});
		}

		// Token: 0x1700300A RID: 12298
		// (get) Token: 0x060095AE RID: 38318 RVA: 0x0025D666 File Offset: 0x0025B866
		public static LocalizedString UninstallAdminToolsRoleDescription
		{
			get
			{
				return new LocalizedString("UninstallAdminToolsRoleDescription", "Ex53ACB5", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060095AF RID: 38319 RVA: 0x0025D684 File Offset: 0x0025B884
		public static LocalizedString WarningActivationDateBeforeCurrentDate(string activationDateParameterName)
		{
			return new LocalizedString("WarningActivationDateBeforeCurrentDate", "", false, false, Strings.ResourceManager, new object[]
			{
				activationDateParameterName
			});
		}

		// Token: 0x060095B0 RID: 38320 RVA: 0x0025D6B4 File Offset: 0x0025B8B4
		public static LocalizedString ConfirmationMessageSetManagementRoleAssignment(string Identity, string Role, string RoleAssignee, string DelegationType, string RecipientWriteScope, string ConfigWriteScope)
		{
			return new LocalizedString("ConfirmationMessageSetManagementRoleAssignment", "ExE489BA", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				Role,
				RoleAssignee,
				DelegationType,
				RecipientWriteScope,
				ConfigWriteScope
			});
		}

		// Token: 0x060095B1 RID: 38321 RVA: 0x0025D6FC File Offset: 0x0025B8FC
		public static LocalizedString WaitForServiceStatusChange(uint time, string servicename, string status)
		{
			return new LocalizedString("WaitForServiceStatusChange", "ExF54813", false, true, Strings.ResourceManager, new object[]
			{
				time,
				servicename,
				status
			});
		}

		// Token: 0x1700300B RID: 12299
		// (get) Token: 0x060095B2 RID: 38322 RVA: 0x0025D738 File Offset: 0x0025B938
		public static LocalizedString InvalidCertAuthValue
		{
			get
			{
				return new LocalizedString("InvalidCertAuthValue", "Ex4A346A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700300C RID: 12300
		// (get) Token: 0x060095B3 RID: 38323 RVA: 0x0025D756 File Offset: 0x0025B956
		public static LocalizedString ConfirmImportExchangeCertificateDirect
		{
			get
			{
				return new LocalizedString("ConfirmImportExchangeCertificateDirect", "Ex1FF2DE", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060095B4 RID: 38324 RVA: 0x0025D774 File Offset: 0x0025B974
		public static LocalizedString VerboseCreatedRoleAssignment(string id)
		{
			return new LocalizedString("VerboseCreatedRoleAssignment", "Ex2B39AB", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x1700300D RID: 12301
		// (get) Token: 0x060095B5 RID: 38325 RVA: 0x0025D7A3 File Offset: 0x0025B9A3
		public static LocalizedString ErrorUseDatabaseQuotaDefaultsCanOnlySetToFalse
		{
			get
			{
				return new LocalizedString("ErrorUseDatabaseQuotaDefaultsCanOnlySetToFalse", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700300E RID: 12302
		// (get) Token: 0x060095B6 RID: 38326 RVA: 0x0025D7C1 File Offset: 0x0025B9C1
		public static LocalizedString ErrorAuthInvalidNewEffectiveDate
		{
			get
			{
				return new LocalizedString("ErrorAuthInvalidNewEffectiveDate", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060095B7 RID: 38327 RVA: 0x0025D7E0 File Offset: 0x0025B9E0
		public static LocalizedString CannotParseRuleDueToVersion(string name)
		{
			return new LocalizedString("CannotParseRuleDueToVersion", "Ex82018E", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x060095B8 RID: 38328 RVA: 0x0025D810 File Offset: 0x0025BA10
		public static LocalizedString ExchVirtualDirectoryCannotFindWebSite(string siteName, string computerName)
		{
			return new LocalizedString("ExchVirtualDirectoryCannotFindWebSite", "Ex025E40", false, true, Strings.ResourceManager, new object[]
			{
				siteName,
				computerName
			});
		}

		// Token: 0x060095B9 RID: 38329 RVA: 0x0025D844 File Offset: 0x0025BA44
		public static LocalizedString ErrorInvalidParentExtendedFolderFlags(string id, string parent, string invalidExtendedFlags)
		{
			return new LocalizedString("ErrorInvalidParentExtendedFolderFlags", "", false, false, Strings.ResourceManager, new object[]
			{
				id,
				parent,
				invalidExtendedFlags
			});
		}

		// Token: 0x060095BA RID: 38330 RVA: 0x0025D87C File Offset: 0x0025BA7C
		public static LocalizedString NewPolicyTipConfigInvalidLocale(string locales)
		{
			return new LocalizedString("NewPolicyTipConfigInvalidLocale", "", false, false, Strings.ResourceManager, new object[]
			{
				locales
			});
		}

		// Token: 0x060095BB RID: 38331 RVA: 0x0025D8AC File Offset: 0x0025BAAC
		public static LocalizedString ConfirmationMessageDisableAddressListPaging(string org)
		{
			return new LocalizedString("ConfirmationMessageDisableAddressListPaging", "ExE8834D", false, true, Strings.ResourceManager, new object[]
			{
				org
			});
		}

		// Token: 0x1700300F RID: 12303
		// (get) Token: 0x060095BC RID: 38332 RVA: 0x0025D8DB File Offset: 0x0025BADB
		public static LocalizedString UsageTypeInternal
		{
			get
			{
				return new LocalizedString("UsageTypeInternal", "ExE35850", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060095BD RID: 38333 RVA: 0x0025D8FC File Offset: 0x0025BAFC
		public static LocalizedString ErrorUserNotInRoleGroups(string id)
		{
			return new LocalizedString("ErrorUserNotInRoleGroups", "Ex6138EF", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x060095BE RID: 38334 RVA: 0x0025D92C File Offset: 0x0025BB2C
		public static LocalizedString UsingProxy(string proxyAddress)
		{
			return new LocalizedString("UsingProxy", "ExAA4A0B", false, true, Strings.ResourceManager, new object[]
			{
				proxyAddress
			});
		}

		// Token: 0x060095BF RID: 38335 RVA: 0x0025D95C File Offset: 0x0025BB5C
		public static LocalizedString ErrorAppCmdNotExist(string file)
		{
			return new LocalizedString("ErrorAppCmdNotExist", "Ex53E3B6", false, true, Strings.ResourceManager, new object[]
			{
				file
			});
		}

		// Token: 0x060095C0 RID: 38336 RVA: 0x0025D98C File Offset: 0x0025BB8C
		public static LocalizedString DagServerCantBeRemovedInDatacenterActivationMode(string mailbox, string dagName)
		{
			return new LocalizedString("DagServerCantBeRemovedInDatacenterActivationMode", "", false, false, Strings.ResourceManager, new object[]
			{
				mailbox,
				dagName
			});
		}

		// Token: 0x17003010 RID: 12304
		// (get) Token: 0x060095C1 RID: 38337 RVA: 0x0025D9BF File Offset: 0x0025BBBF
		public static LocalizedString InvalidParamIdentityHasWildcardException
		{
			get
			{
				return new LocalizedString("InvalidParamIdentityHasWildcardException", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003011 RID: 12305
		// (get) Token: 0x060095C2 RID: 38338 RVA: 0x0025D9DD File Offset: 0x0025BBDD
		public static LocalizedString WarningFixedMissingGALEntry
		{
			get
			{
				return new LocalizedString("WarningFixedMissingGALEntry", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060095C3 RID: 38339 RVA: 0x0025D9FC File Offset: 0x0025BBFC
		public static LocalizedString VerboseCopyDirectory(string server, string fromDir, string toDir)
		{
			return new LocalizedString("VerboseCopyDirectory", "Ex1C2ED0", false, true, Strings.ResourceManager, new object[]
			{
				server,
				fromDir,
				toDir
			});
		}

		// Token: 0x17003012 RID: 12306
		// (get) Token: 0x060095C4 RID: 38340 RVA: 0x0025DA33 File Offset: 0x0025BC33
		public static LocalizedString GlobalLocatorServiceSuccess
		{
			get
			{
				return new LocalizedString("GlobalLocatorServiceSuccess", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060095C5 RID: 38341 RVA: 0x0025DA54 File Offset: 0x0025BC54
		public static LocalizedString ServerFilterMustBeValid(string m)
		{
			return new LocalizedString("ServerFilterMustBeValid", "Ex230D6F", false, true, Strings.ResourceManager, new object[]
			{
				m
			});
		}

		// Token: 0x060095C6 RID: 38342 RVA: 0x0025DA84 File Offset: 0x0025BC84
		public static LocalizedString ConfirmationMessageNewMailboxLinked(string Name, string LinkedMasterAccount, string LinkedDomainController, string UserPrincipalName, string OrganizationalUnit)
		{
			return new LocalizedString("ConfirmationMessageNewMailboxLinked", "ExBC7BA4", false, true, Strings.ResourceManager, new object[]
			{
				Name,
				LinkedMasterAccount,
				LinkedDomainController,
				UserPrincipalName,
				OrganizationalUnit
			});
		}

		// Token: 0x17003013 RID: 12307
		// (get) Token: 0x060095C7 RID: 38343 RVA: 0x0025DAC4 File Offset: 0x0025BCC4
		public static LocalizedString ErrorMoveWebDistributionEnabledOabToTiServer
		{
			get
			{
				return new LocalizedString("ErrorMoveWebDistributionEnabledOabToTiServer", "ExF8E10F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003014 RID: 12308
		// (get) Token: 0x060095C8 RID: 38344 RVA: 0x0025DAE2 File Offset: 0x0025BCE2
		public static LocalizedString CasHealthEasFolderSyncScenarioDescription
		{
			get
			{
				return new LocalizedString("CasHealthEasFolderSyncScenarioDescription", "ExC1D238", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060095C9 RID: 38345 RVA: 0x0025DB00 File Offset: 0x0025BD00
		public static LocalizedString VerboseCopyDatabaseCatalogFiles(string server, string oldDir, string newDir)
		{
			return new LocalizedString("VerboseCopyDatabaseCatalogFiles", "ExE2FB6B", false, true, Strings.ResourceManager, new object[]
			{
				server,
				oldDir,
				newDir
			});
		}

		// Token: 0x060095CA RID: 38346 RVA: 0x0025DB38 File Offset: 0x0025BD38
		public static LocalizedString RmsVersionMismatchException(Uri uri)
		{
			return new LocalizedString("RmsVersionMismatchException", "", false, false, Strings.ResourceManager, new object[]
			{
				uri
			});
		}

		// Token: 0x060095CB RID: 38347 RVA: 0x0025DB68 File Offset: 0x0025BD68
		public static LocalizedString RemoveADServerMetadataRemovingServerDN(string serverDN)
		{
			return new LocalizedString("RemoveADServerMetadataRemovingServerDN", "ExD5F6F9", false, true, Strings.ResourceManager, new object[]
			{
				serverDN
			});
		}

		// Token: 0x17003015 RID: 12309
		// (get) Token: 0x060095CC RID: 38348 RVA: 0x0025DB97 File Offset: 0x0025BD97
		public static LocalizedString ConfirmationMessageSetResourceConfig
		{
			get
			{
				return new LocalizedString("ConfirmationMessageSetResourceConfig", "ExC3C8D4", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003016 RID: 12310
		// (get) Token: 0x060095CD RID: 38349 RVA: 0x0025DBB5 File Offset: 0x0025BDB5
		public static LocalizedString UMCallAnsweringRuleCheckAutomaticReplies
		{
			get
			{
				return new LocalizedString("UMCallAnsweringRuleCheckAutomaticReplies", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003017 RID: 12311
		// (get) Token: 0x060095CE RID: 38350 RVA: 0x0025DBD3 File Offset: 0x0025BDD3
		public static LocalizedString ErrorCreatePublicFolderTree
		{
			get
			{
				return new LocalizedString("ErrorCreatePublicFolderTree", "ExC345AF", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060095CF RID: 38351 RVA: 0x0025DBF4 File Offset: 0x0025BDF4
		public static LocalizedString InvalidTypeOfExpression(string expectedType, string actualType)
		{
			return new LocalizedString("InvalidTypeOfExpression", "", false, false, Strings.ResourceManager, new object[]
			{
				expectedType,
				actualType
			});
		}

		// Token: 0x060095D0 RID: 38352 RVA: 0x0025DC28 File Offset: 0x0025BE28
		public static LocalizedString ErrorMultipleMatchedUser(string mailboxId)
		{
			return new LocalizedString("ErrorMultipleMatchedUser", "Ex7F19D1", false, true, Strings.ResourceManager, new object[]
			{
				mailboxId
			});
		}

		// Token: 0x060095D1 RID: 38353 RVA: 0x0025DC58 File Offset: 0x0025BE58
		public static LocalizedString AgentAlreadyExists(string name)
		{
			return new LocalizedString("AgentAlreadyExists", "Ex5B23F9", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x060095D2 RID: 38354 RVA: 0x0025DC88 File Offset: 0x0025BE88
		public static LocalizedString AmMoveRpcRequestedAnyServer(string db)
		{
			return new LocalizedString("AmMoveRpcRequestedAnyServer", "ExD38CA6", false, true, Strings.ResourceManager, new object[]
			{
				db
			});
		}

		// Token: 0x060095D3 RID: 38355 RVA: 0x0025DCB8 File Offset: 0x0025BEB8
		public static LocalizedString ErrorPrimaryOnlyCrossForestMovesWithoutArchive(string mailbox)
		{
			return new LocalizedString("ErrorPrimaryOnlyCrossForestMovesWithoutArchive", "", false, false, Strings.ResourceManager, new object[]
			{
				mailbox
			});
		}

		// Token: 0x060095D4 RID: 38356 RVA: 0x0025DCE8 File Offset: 0x0025BEE8
		public static LocalizedString VerboseConnectionAdminRpcInterface(string server)
		{
			return new LocalizedString("VerboseConnectionAdminRpcInterface", "Ex349730", false, true, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		// Token: 0x060095D5 RID: 38357 RVA: 0x0025DD18 File Offset: 0x0025BF18
		public static LocalizedString ErrorOabNotFoundForUser(string user)
		{
			return new LocalizedString("ErrorOabNotFoundForUser", "", false, false, Strings.ResourceManager, new object[]
			{
				user
			});
		}

		// Token: 0x17003018 RID: 12312
		// (get) Token: 0x060095D6 RID: 38358 RVA: 0x0025DD47 File Offset: 0x0025BF47
		public static LocalizedString TopologyServiceResultUndefined
		{
			get
			{
				return new LocalizedString("TopologyServiceResultUndefined", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060095D7 RID: 38359 RVA: 0x0025DD68 File Offset: 0x0025BF68
		public static LocalizedString ErrorSyncMailboxWithMasterAccountSid(string masterAccountSid, string linkedMasterAccount)
		{
			return new LocalizedString("ErrorSyncMailboxWithMasterAccountSid", "Ex3BF0E4", false, true, Strings.ResourceManager, new object[]
			{
				masterAccountSid,
				linkedMasterAccount
			});
		}

		// Token: 0x060095D8 RID: 38360 RVA: 0x0025DD9C File Offset: 0x0025BF9C
		public static LocalizedString ExchangeSettingsGroupAlreadyExists(string name)
		{
			return new LocalizedString("ExchangeSettingsGroupAlreadyExists", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x060095D9 RID: 38361 RVA: 0x0025DDCC File Offset: 0x0025BFCC
		public static LocalizedString messageLiveIdConnectivityWCFExceptionThrown(string e)
		{
			return new LocalizedString("messageLiveIdConnectivityWCFExceptionThrown", "", false, false, Strings.ResourceManager, new object[]
			{
				e
			});
		}

		// Token: 0x17003019 RID: 12313
		// (get) Token: 0x060095DA RID: 38362 RVA: 0x0025DDFB File Offset: 0x0025BFFB
		public static LocalizedString ErrorSharedConfigurationRequiresServicePlan
		{
			get
			{
				return new LocalizedString("ErrorSharedConfigurationRequiresServicePlan", "Ex53AB6B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060095DB RID: 38363 RVA: 0x0025DE1C File Offset: 0x0025C01C
		public static LocalizedString ConfirmationMessageSetNotification(string identity)
		{
			return new LocalizedString("ConfirmationMessageSetNotification", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x060095DC RID: 38364 RVA: 0x0025DE4C File Offset: 0x0025C04C
		public static LocalizedString ErrorStringContainsLeadingSpace(string idStringValue, string param)
		{
			return new LocalizedString("ErrorStringContainsLeadingSpace", "ExADFA95", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue,
				param
			});
		}

		// Token: 0x060095DD RID: 38365 RVA: 0x0025DE80 File Offset: 0x0025C080
		public static LocalizedString SyncstateupgradeFailedWarning(string user)
		{
			return new LocalizedString("SyncstateupgradeFailedWarning", "Ex4E4C1B", false, true, Strings.ResourceManager, new object[]
			{
				user
			});
		}

		// Token: 0x1700301A RID: 12314
		// (get) Token: 0x060095DE RID: 38366 RVA: 0x0025DEAF File Offset: 0x0025C0AF
		public static LocalizedString SomeMdbsWereMovedWhileRunningPrefix
		{
			get
			{
				return new LocalizedString("SomeMdbsWereMovedWhileRunningPrefix", "Ex9BD5ED", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060095DF RID: 38367 RVA: 0x0025DED0 File Offset: 0x0025C0D0
		public static LocalizedString CouldNotFindElementWithAttribute(string elementName, string attribute, string attributeValue)
		{
			return new LocalizedString("CouldNotFindElementWithAttribute", "ExE58B89", false, true, Strings.ResourceManager, new object[]
			{
				elementName,
				attribute,
				attributeValue
			});
		}

		// Token: 0x060095E0 RID: 38368 RVA: 0x0025DF08 File Offset: 0x0025C108
		public static LocalizedString InvalidDisclaimerMacroName(string invalidMacroName)
		{
			return new LocalizedString("InvalidDisclaimerMacroName", "Ex82AB9F", false, true, Strings.ResourceManager, new object[]
			{
				invalidMacroName
			});
		}

		// Token: 0x060095E1 RID: 38369 RVA: 0x0025DF38 File Offset: 0x0025C138
		public static LocalizedString ErrorRemoveOfflineAddressBookWithAssociatedAddressBookPolicies(string name)
		{
			return new LocalizedString("ErrorRemoveOfflineAddressBookWithAssociatedAddressBookPolicies", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x1700301B RID: 12315
		// (get) Token: 0x060095E2 RID: 38370 RVA: 0x0025DF67 File Offset: 0x0025C167
		public static LocalizedString InstallingPOP3Service
		{
			get
			{
				return new LocalizedString("InstallingPOP3Service", "ExB5C999", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700301C RID: 12316
		// (get) Token: 0x060095E3 RID: 38371 RVA: 0x0025DF85 File Offset: 0x0025C185
		public static LocalizedString AddressRewriteInternalAddressExists
		{
			get
			{
				return new LocalizedString("AddressRewriteInternalAddressExists", "ExBB6949", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060095E4 RID: 38372 RVA: 0x0025DFA4 File Offset: 0x0025C1A4
		public static LocalizedString ReplicationCheckWarningException(string checkTitle, string warningMessage)
		{
			return new LocalizedString("ReplicationCheckWarningException", "", false, false, Strings.ResourceManager, new object[]
			{
				checkTitle,
				warningMessage
			});
		}

		// Token: 0x1700301D RID: 12317
		// (get) Token: 0x060095E5 RID: 38373 RVA: 0x0025DFD7 File Offset: 0x0025C1D7
		public static LocalizedString CannotSetDefaultTPD
		{
			get
			{
				return new LocalizedString("CannotSetDefaultTPD", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700301E RID: 12318
		// (get) Token: 0x060095E6 RID: 38374 RVA: 0x0025DFF5 File Offset: 0x0025C1F5
		public static LocalizedString SetupProgressStartingHealthManagerService
		{
			get
			{
				return new LocalizedString("SetupProgressStartingHealthManagerService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060095E7 RID: 38375 RVA: 0x0025E014 File Offset: 0x0025C214
		public static LocalizedString RemovingAceFromDkmContainerAcl(string containerName, string account)
		{
			return new LocalizedString("RemovingAceFromDkmContainerAcl", "", false, false, Strings.ResourceManager, new object[]
			{
				containerName,
				account
			});
		}

		// Token: 0x1700301F RID: 12319
		// (get) Token: 0x060095E8 RID: 38376 RVA: 0x0025E047 File Offset: 0x0025C247
		public static LocalizedString SetupProgressRemovingLegacySystemMailboxUsers
		{
			get
			{
				return new LocalizedString("SetupProgressRemovingLegacySystemMailboxUsers", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060095E9 RID: 38377 RVA: 0x0025E068 File Offset: 0x0025C268
		public static LocalizedString VerboseSkipObject(string id)
		{
			return new LocalizedString("VerboseSkipObject", "Ex35A55B", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x060095EA RID: 38378 RVA: 0x0025E098 File Offset: 0x0025C298
		public static LocalizedString SubscriptionConnectionError(string error)
		{
			return new LocalizedString("SubscriptionConnectionError", "Ex7994E2", false, true, Strings.ResourceManager, new object[]
			{
				error
			});
		}

		// Token: 0x17003020 RID: 12320
		// (get) Token: 0x060095EB RID: 38379 RVA: 0x0025E0C7 File Offset: 0x0025C2C7
		public static LocalizedString StoppingPOP3Service
		{
			get
			{
				return new LocalizedString("StoppingPOP3Service", "Ex67643A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060095EC RID: 38380 RVA: 0x0025E0E8 File Offset: 0x0025C2E8
		public static LocalizedString ErrorEdbFilePathOccupiedByFile(string filePath, string serverName)
		{
			return new LocalizedString("ErrorEdbFilePathOccupiedByFile", "ExCAE40C", false, true, Strings.ResourceManager, new object[]
			{
				filePath,
				serverName
			});
		}

		// Token: 0x060095ED RID: 38381 RVA: 0x0025E11C File Offset: 0x0025C31C
		public static LocalizedString VerboseParsingOPathFilterSucceed(string filter)
		{
			return new LocalizedString("VerboseParsingOPathFilterSucceed", "ExE4993E", false, true, Strings.ResourceManager, new object[]
			{
				filter
			});
		}

		// Token: 0x060095EE RID: 38382 RVA: 0x0025E14C File Offset: 0x0025C34C
		public static LocalizedString ErrorProvisioningFederatedExchange(string details)
		{
			return new LocalizedString("ErrorProvisioningFederatedExchange", "ExB5F48C", false, true, Strings.ResourceManager, new object[]
			{
				details
			});
		}

		// Token: 0x060095EF RID: 38383 RVA: 0x0025E17C File Offset: 0x0025C37C
		public static LocalizedString DataClassificationNonUniqueQuery(string localizedName, string uniqueId, string collectionId)
		{
			return new LocalizedString("DataClassificationNonUniqueQuery", "", false, false, Strings.ResourceManager, new object[]
			{
				localizedName,
				uniqueId,
				collectionId
			});
		}

		// Token: 0x17003021 RID: 12321
		// (get) Token: 0x060095F0 RID: 38384 RVA: 0x0025E1B3 File Offset: 0x0025C3B3
		public static LocalizedString InvalidPredicate
		{
			get
			{
				return new LocalizedString("InvalidPredicate", "Ex60BA1E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003022 RID: 12322
		// (get) Token: 0x060095F1 RID: 38385 RVA: 0x0025E1D1 File Offset: 0x0025C3D1
		public static LocalizedString VerboseEnableBasicAuthForWSMan
		{
			get
			{
				return new LocalizedString("VerboseEnableBasicAuthForWSMan", "ExD690BC", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060095F2 RID: 38386 RVA: 0x0025E1F0 File Offset: 0x0025C3F0
		public static LocalizedString ComAdminUnableToInstallComponentsException(string applicationNameOrKey, string path)
		{
			return new LocalizedString("ComAdminUnableToInstallComponentsException", "Ex2525E1", false, true, Strings.ResourceManager, new object[]
			{
				applicationNameOrKey,
				path
			});
		}

		// Token: 0x17003023 RID: 12323
		// (get) Token: 0x060095F3 RID: 38387 RVA: 0x0025E223 File Offset: 0x0025C423
		public static LocalizedString ErrorSharePointUrlNotWhitelisted
		{
			get
			{
				return new LocalizedString("ErrorSharePointUrlNotWhitelisted", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003024 RID: 12324
		// (get) Token: 0x060095F4 RID: 38388 RVA: 0x0025E241 File Offset: 0x0025C441
		public static LocalizedString InfoOverallFail
		{
			get
			{
				return new LocalizedString("InfoOverallFail", "ExCF471C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003025 RID: 12325
		// (get) Token: 0x060095F5 RID: 38389 RVA: 0x0025E25F File Offset: 0x0025C45F
		public static LocalizedString ErrorArchiveMainCouldNotBeProvisioned
		{
			get
			{
				return new LocalizedString("ErrorArchiveMainCouldNotBeProvisioned", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060095F6 RID: 38390 RVA: 0x0025E280 File Offset: 0x0025C480
		public static LocalizedString VerboseGetStoreConfigDCName(string server)
		{
			return new LocalizedString("VerboseGetStoreConfigDCName", "ExFA92B1", false, true, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		// Token: 0x060095F7 RID: 38391 RVA: 0x0025E2B0 File Offset: 0x0025C4B0
		public static LocalizedString ErrorUserNotFoundOnGlobalCatalog(string id, string gc)
		{
			return new LocalizedString("ErrorUserNotFoundOnGlobalCatalog", "Ex469FB7", false, true, Strings.ResourceManager, new object[]
			{
				id,
				gc
			});
		}

		// Token: 0x060095F8 RID: 38392 RVA: 0x0025E2E4 File Offset: 0x0025C4E4
		public static LocalizedString DagFswUnableToCreateWitnessDirectoryException(string fswMachine, string directory, Exception ex)
		{
			return new LocalizedString("DagFswUnableToCreateWitnessDirectoryException", "", false, false, Strings.ResourceManager, new object[]
			{
				fswMachine,
				directory,
				ex
			});
		}

		// Token: 0x060095F9 RID: 38393 RVA: 0x0025E31C File Offset: 0x0025C51C
		public static LocalizedString RestoreOrExportTargetFolderIsSpecial(string targetfolder, string targetmailbox)
		{
			return new LocalizedString("RestoreOrExportTargetFolderIsSpecial", "ExF84709", false, true, Strings.ResourceManager, new object[]
			{
				targetfolder,
				targetmailbox
			});
		}

		// Token: 0x17003026 RID: 12326
		// (get) Token: 0x060095FA RID: 38394 RVA: 0x0025E34F File Offset: 0x0025C54F
		public static LocalizedString ConfirmationMessageSetServiceInstanceMap
		{
			get
			{
				return new LocalizedString("ConfirmationMessageSetServiceInstanceMap", "Ex74320D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003027 RID: 12327
		// (get) Token: 0x060095FB RID: 38395 RVA: 0x0025E36D File Offset: 0x0025C56D
		public static LocalizedString UserWithoutFederatedDomain
		{
			get
			{
				return new LocalizedString("UserWithoutFederatedDomain", "Ex3A25DE", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060095FC RID: 38396 RVA: 0x0025E38C File Offset: 0x0025C58C
		public static LocalizedString TraceCannotCreateXmlReportFolder(string folderName, string exception)
		{
			return new LocalizedString("TraceCannotCreateXmlReportFolder", "ExEF0E03", false, true, Strings.ResourceManager, new object[]
			{
				folderName,
				exception
			});
		}

		// Token: 0x060095FD RID: 38397 RVA: 0x0025E3C0 File Offset: 0x0025C5C0
		public static LocalizedString ExAllHostedOrganizationsGroupNotFoundException(Guid guid)
		{
			return new LocalizedString("ExAllHostedOrganizationsGroupNotFoundException", "ExB5319E", false, true, Strings.ResourceManager, new object[]
			{
				guid
			});
		}

		// Token: 0x17003028 RID: 12328
		// (get) Token: 0x060095FE RID: 38398 RVA: 0x0025E3F4 File Offset: 0x0025C5F4
		public static LocalizedString CasHealthConfirmTestActiveSyncLocalMachine
		{
			get
			{
				return new LocalizedString("CasHealthConfirmTestActiveSyncLocalMachine", "Ex9946D1", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060095FF RID: 38399 RVA: 0x0025E414 File Offset: 0x0025C614
		public static LocalizedString DataClassificationNonUniqueNameViolation(string name)
		{
			return new LocalizedString("DataClassificationNonUniqueNameViolation", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x06009600 RID: 38400 RVA: 0x0025E444 File Offset: 0x0025C644
		public static LocalizedString ErrorTooManyRemoteDomains(int max)
		{
			return new LocalizedString("ErrorTooManyRemoteDomains", "", false, false, Strings.ResourceManager, new object[]
			{
				max
			});
		}

		// Token: 0x06009601 RID: 38401 RVA: 0x0025E478 File Offset: 0x0025C678
		public static LocalizedString ErrorUserNotFound(string idStringValue)
		{
			return new LocalizedString("ErrorUserNotFound", "ExFA9BC9", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		// Token: 0x17003029 RID: 12329
		// (get) Token: 0x06009602 RID: 38402 RVA: 0x0025E4A7 File Offset: 0x0025C6A7
		public static LocalizedString TasksRpcListenerCheckDesc
		{
			get
			{
				return new LocalizedString("TasksRpcListenerCheckDesc", "Ex451F89", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009603 RID: 38403 RVA: 0x0025E4C8 File Offset: 0x0025C6C8
		public static LocalizedString CasHealthWarnUserCredentials(string strUserName)
		{
			return new LocalizedString("CasHealthWarnUserCredentials", "ExD098D5", false, true, Strings.ResourceManager, new object[]
			{
				strUserName
			});
		}

		// Token: 0x1700302A RID: 12330
		// (get) Token: 0x06009604 RID: 38404 RVA: 0x0025E4F7 File Offset: 0x0025C6F7
		public static LocalizedString ExcludeDuplicateMessagesParameterConflict
		{
			get
			{
				return new LocalizedString("ExcludeDuplicateMessagesParameterConflict", "ExF5DBEF", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009605 RID: 38405 RVA: 0x0025E518 File Offset: 0x0025C718
		public static LocalizedString ConfirmationMessageSetMailboxWithNewWindowsLiveID(string Identity, string liveId)
		{
			return new LocalizedString("ConfirmationMessageSetMailboxWithNewWindowsLiveID", "ExB03144", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				liveId
			});
		}

		// Token: 0x06009606 RID: 38406 RVA: 0x0025E54C File Offset: 0x0025C74C
		public static LocalizedString ConfirmationMessageNewMalwareFilterConfig(string name)
		{
			return new LocalizedString("ConfirmationMessageNewMalwareFilterConfig", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x06009607 RID: 38407 RVA: 0x0025E57C File Offset: 0x0025C77C
		public static LocalizedString ElcServiceCallFailed(string serverName, string errorCode)
		{
			return new LocalizedString("ElcServiceCallFailed", "", false, false, Strings.ResourceManager, new object[]
			{
				serverName,
				errorCode
			});
		}

		// Token: 0x06009608 RID: 38408 RVA: 0x0025E5B0 File Offset: 0x0025C7B0
		public static LocalizedString ProgressFixIPAddr(string node)
		{
			return new LocalizedString("ProgressFixIPAddr", "Ex8DC59D", false, true, Strings.ResourceManager, new object[]
			{
				node
			});
		}

		// Token: 0x06009609 RID: 38409 RVA: 0x0025E5E0 File Offset: 0x0025C7E0
		public static LocalizedString CannotFindCmdletInSnapin(string cmdletName, string snapinName)
		{
			return new LocalizedString("CannotFindCmdletInSnapin", "ExC43D8C", false, true, Strings.ResourceManager, new object[]
			{
				cmdletName,
				snapinName
			});
		}

		// Token: 0x1700302B RID: 12331
		// (get) Token: 0x0600960A RID: 38410 RVA: 0x0025E613 File Offset: 0x0025C813
		public static LocalizedString ErrorDomainServicesNotYetImplemented
		{
			get
			{
				return new LocalizedString("ErrorDomainServicesNotYetImplemented", "ExA74B95", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600960B RID: 38411 RVA: 0x0025E634 File Offset: 0x0025C834
		public static LocalizedString IsNotMemberOfVOAdmin(string admin)
		{
			return new LocalizedString("IsNotMemberOfVOAdmin", "Ex27A7EC", false, true, Strings.ResourceManager, new object[]
			{
				admin
			});
		}

		// Token: 0x0600960C RID: 38412 RVA: 0x0025E664 File Offset: 0x0025C864
		public static LocalizedString ConfirmationResettingLocalForestAccountPartition(string partitionName)
		{
			return new LocalizedString("ConfirmationResettingLocalForestAccountPartition", "", false, false, Strings.ResourceManager, new object[]
			{
				partitionName
			});
		}

		// Token: 0x0600960D RID: 38413 RVA: 0x0025E694 File Offset: 0x0025C894
		public static LocalizedString ConfirmationMessageRemoveAuthServer(string name)
		{
			return new LocalizedString("ConfirmationMessageRemoveAuthServer", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x0600960E RID: 38414 RVA: 0x0025E6C4 File Offset: 0x0025C8C4
		public static LocalizedString ErrorDagNotFound(string identity)
		{
			return new LocalizedString("ErrorDagNotFound", "ExF97763", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x0600960F RID: 38415 RVA: 0x0025E6F4 File Offset: 0x0025C8F4
		public static LocalizedString ConfirmationMessageGetDatabaseAvailabilityGroup(string Server)
		{
			return new LocalizedString("ConfirmationMessageGetDatabaseAvailabilityGroup", "Ex3EAC28", false, true, Strings.ResourceManager, new object[]
			{
				Server
			});
		}

		// Token: 0x1700302C RID: 12332
		// (get) Token: 0x06009610 RID: 38416 RVA: 0x0025E723 File Offset: 0x0025C923
		public static LocalizedString RequestNameAvailabilityComplete
		{
			get
			{
				return new LocalizedString("RequestNameAvailabilityComplete", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700302D RID: 12333
		// (get) Token: 0x06009611 RID: 38417 RVA: 0x0025E741 File Offset: 0x0025C941
		public static LocalizedString MigrationMustSpecifyEmailOrMailboxDNOrSkipVerification
		{
			get
			{
				return new LocalizedString("MigrationMustSpecifyEmailOrMailboxDNOrSkipVerification", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009612 RID: 38418 RVA: 0x0025E760 File Offset: 0x0025C960
		public static LocalizedString ConfirmationMessageSetSharingPolicy(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetSharingPolicy", "ExC098A3", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x1700302E RID: 12334
		// (get) Token: 0x06009613 RID: 38419 RVA: 0x0025E78F File Offset: 0x0025C98F
		public static LocalizedString ErrorInvalidFfoServerRole
		{
			get
			{
				return new LocalizedString("ErrorInvalidFfoServerRole", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700302F RID: 12335
		// (get) Token: 0x06009614 RID: 38420 RVA: 0x0025E7AD File Offset: 0x0025C9AD
		public static LocalizedString ErrorNotEnoughInformationToFindRequestOfCorrectType
		{
			get
			{
				return new LocalizedString("ErrorNotEnoughInformationToFindRequestOfCorrectType", "Ex9F4BEB", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003030 RID: 12336
		// (get) Token: 0x06009615 RID: 38421 RVA: 0x0025E7CB File Offset: 0x0025C9CB
		public static LocalizedString UninstallCafeIisWebServiceExtensions
		{
			get
			{
				return new LocalizedString("UninstallCafeIisWebServiceExtensions", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009616 RID: 38422 RVA: 0x0025E7EC File Offset: 0x0025C9EC
		public static LocalizedString RemoveLiveFedDomainReserveResponse(string domain)
		{
			return new LocalizedString("RemoveLiveFedDomainReserveResponse", "ExF73CDF", false, true, Strings.ResourceManager, new object[]
			{
				domain
			});
		}

		// Token: 0x06009617 RID: 38423 RVA: 0x0025E81C File Offset: 0x0025CA1C
		public static LocalizedString ErrorUpdateRecipient(string idRecipient, string errorMessage)
		{
			return new LocalizedString("ErrorUpdateRecipient", "Ex248239", false, true, Strings.ResourceManager, new object[]
			{
				idRecipient,
				errorMessage
			});
		}

		// Token: 0x17003031 RID: 12337
		// (get) Token: 0x06009618 RID: 38424 RVA: 0x0025E84F File Offset: 0x0025CA4F
		public static LocalizedString ServerNameConflict
		{
			get
			{
				return new LocalizedString("ServerNameConflict", "Ex91C930", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009619 RID: 38425 RVA: 0x0025E870 File Offset: 0x0025CA70
		public static LocalizedString CannotRemoveFederatedAcceptedDomain(string domain)
		{
			return new LocalizedString("CannotRemoveFederatedAcceptedDomain", "Ex8F0DD6", false, true, Strings.ResourceManager, new object[]
			{
				domain
			});
		}

		// Token: 0x0600961A RID: 38426 RVA: 0x0025E8A0 File Offset: 0x0025CAA0
		public static LocalizedString AlsEmailBodyMailboxShowDetails(bool value)
		{
			return new LocalizedString("AlsEmailBodyMailboxShowDetails", "", false, false, Strings.ResourceManager, new object[]
			{
				value
			});
		}

		// Token: 0x17003032 RID: 12338
		// (get) Token: 0x0600961B RID: 38427 RVA: 0x0025E8D4 File Offset: 0x0025CAD4
		public static LocalizedString NewPolicyTipConfigInvalidUrl
		{
			get
			{
				return new LocalizedString("NewPolicyTipConfigInvalidUrl", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600961C RID: 38428 RVA: 0x0025E8F4 File Offset: 0x0025CAF4
		public static LocalizedString ErrorTeamMailboxMaxShowInMyClientReached(string tm, int num)
		{
			return new LocalizedString("ErrorTeamMailboxMaxShowInMyClientReached", "", false, false, Strings.ResourceManager, new object[]
			{
				tm,
				num
			});
		}

		// Token: 0x0600961D RID: 38429 RVA: 0x0025E92C File Offset: 0x0025CB2C
		public static LocalizedString HubServerVersionNotFound(string server)
		{
			return new LocalizedString("HubServerVersionNotFound", "ExF856B0", false, true, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		// Token: 0x17003033 RID: 12339
		// (get) Token: 0x0600961E RID: 38430 RVA: 0x0025E95B File Offset: 0x0025CB5B
		public static LocalizedString Free
		{
			get
			{
				return new LocalizedString("Free", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600961F RID: 38431 RVA: 0x0025E97C File Offset: 0x0025CB7C
		public static LocalizedString MobileDeviceLogNoPermissionsException(string path)
		{
			return new LocalizedString("MobileDeviceLogNoPermissionsException", "Ex19D528", false, true, Strings.ResourceManager, new object[]
			{
				path
			});
		}

		// Token: 0x17003034 RID: 12340
		// (get) Token: 0x06009620 RID: 38432 RVA: 0x0025E9AB File Offset: 0x0025CBAB
		public static LocalizedString TpdIsHSMEncrypted
		{
			get
			{
				return new LocalizedString("TpdIsHSMEncrypted", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003035 RID: 12341
		// (get) Token: 0x06009621 RID: 38433 RVA: 0x0025E9C9 File Offset: 0x0025CBC9
		public static LocalizedString ConfirmationMessageSetPerimeterConfig
		{
			get
			{
				return new LocalizedString("ConfirmationMessageSetPerimeterConfig", "Ex70CC42", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009622 RID: 38434 RVA: 0x0025E9E8 File Offset: 0x0025CBE8
		public static LocalizedString ErrorRoleEntryNotFound(string roleId, string entryName)
		{
			return new LocalizedString("ErrorRoleEntryNotFound", "Ex1BA9AF", false, true, Strings.ResourceManager, new object[]
			{
				roleId,
				entryName
			});
		}

		// Token: 0x06009623 RID: 38435 RVA: 0x0025EA1C File Offset: 0x0025CC1C
		public static LocalizedString OwaGzipEnabledOnLegacyVirtualDirectoryWhenMailboxRoleInstalledWarning(string id)
		{
			return new LocalizedString("OwaGzipEnabledOnLegacyVirtualDirectoryWhenMailboxRoleInstalledWarning", "Ex49A2DF", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x06009624 RID: 38436 RVA: 0x0025EA4C File Offset: 0x0025CC4C
		public static LocalizedString StandaloneMailboxNoReplication(string serverName)
		{
			return new LocalizedString("StandaloneMailboxNoReplication", "ExDBB39B", false, true, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		// Token: 0x17003036 RID: 12342
		// (get) Token: 0x06009625 RID: 38437 RVA: 0x0025EA7B File Offset: 0x0025CC7B
		public static LocalizedString ErrorRetentionActionNowAllowed
		{
			get
			{
				return new LocalizedString("ErrorRetentionActionNowAllowed", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003037 RID: 12343
		// (get) Token: 0x06009626 RID: 38438 RVA: 0x0025EA99 File Offset: 0x0025CC99
		public static LocalizedString ChangePasswordInvalidCredentials
		{
			get
			{
				return new LocalizedString("ChangePasswordInvalidCredentials", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009627 RID: 38439 RVA: 0x0025EAB8 File Offset: 0x0025CCB8
		public static LocalizedString WarningChangingUserPrincipalName(string userPrincipalName, string windowsLiveID)
		{
			return new LocalizedString("WarningChangingUserPrincipalName", "", false, false, Strings.ResourceManager, new object[]
			{
				userPrincipalName,
				windowsLiveID
			});
		}

		// Token: 0x06009628 RID: 38440 RVA: 0x0025EAEC File Offset: 0x0025CCEC
		public static LocalizedString OperationExceedsPerServiceInstanceFullSyncObjectRequestLimit(int limit, string serviceInstanceId)
		{
			return new LocalizedString("OperationExceedsPerServiceInstanceFullSyncObjectRequestLimit", "", false, false, Strings.ResourceManager, new object[]
			{
				limit,
				serviceInstanceId
			});
		}

		// Token: 0x06009629 RID: 38441 RVA: 0x0025EB24 File Offset: 0x0025CD24
		public static LocalizedString ConfirmationMessageEnableServiceEmailChannel(string Identity)
		{
			return new LocalizedString("ConfirmationMessageEnableServiceEmailChannel", "ExE48774", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x17003038 RID: 12344
		// (get) Token: 0x0600962A RID: 38442 RVA: 0x0025EB53 File Offset: 0x0025CD53
		public static LocalizedString ConfirmationMessageSetAttachmentfilterlistconfig
		{
			get
			{
				return new LocalizedString("ConfirmationMessageSetAttachmentfilterlistconfig", "ExF98585", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003039 RID: 12345
		// (get) Token: 0x0600962B RID: 38443 RVA: 0x0025EB71 File Offset: 0x0025CD71
		public static LocalizedString ConfirmationMessageNewAutodiscoverVirtualDirectory
		{
			get
			{
				return new LocalizedString("ConfirmationMessageNewAutodiscoverVirtualDirectory", "Ex90AF90", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700303A RID: 12346
		// (get) Token: 0x0600962C RID: 38444 RVA: 0x0025EB8F File Offset: 0x0025CD8F
		public static LocalizedString UnifiedMessagingDatacenterComponentDescription
		{
			get
			{
				return new LocalizedString("UnifiedMessagingDatacenterComponentDescription", "Ex98E2E0", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700303B RID: 12347
		// (get) Token: 0x0600962D RID: 38445 RVA: 0x0025EBAD File Offset: 0x0025CDAD
		public static LocalizedString ConfirmationGetLitigationHoldInformation
		{
			get
			{
				return new LocalizedString("ConfirmationGetLitigationHoldInformation", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600962E RID: 38446 RVA: 0x0025EBCC File Offset: 0x0025CDCC
		public static LocalizedString ConfirmationMessageRemoveActiveSyncDeviceAccessRule(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveActiveSyncDeviceAccessRule", "Ex0603CB", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x1700303C RID: 12348
		// (get) Token: 0x0600962F RID: 38447 RVA: 0x0025EBFB File Offset: 0x0025CDFB
		public static LocalizedString FfoPrimingServiceDisplayName
		{
			get
			{
				return new LocalizedString("FfoPrimingServiceDisplayName", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700303D RID: 12349
		// (get) Token: 0x06009630 RID: 38448 RVA: 0x0025EC19 File Offset: 0x0025CE19
		public static LocalizedString Error_StartDateCheck
		{
			get
			{
				return new LocalizedString("Error_StartDateCheck", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009631 RID: 38449 RVA: 0x0025EC38 File Offset: 0x0025CE38
		public static LocalizedString ConfirmationMessageSetJournalrule(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetJournalrule", "ExA18710", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x06009632 RID: 38450 RVA: 0x0025EC68 File Offset: 0x0025CE68
		public static LocalizedString ErrorDeprovisionedTargetNotPassed(string identity)
		{
			return new LocalizedString("ErrorDeprovisionedTargetNotPassed", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x06009633 RID: 38451 RVA: 0x0025EC98 File Offset: 0x0025CE98
		public static LocalizedString CannotRemoveTenantWideDivergence(string objectId)
		{
			return new LocalizedString("CannotRemoveTenantWideDivergence", "", false, false, Strings.ResourceManager, new object[]
			{
				objectId
			});
		}

		// Token: 0x06009634 RID: 38452 RVA: 0x0025ECC8 File Offset: 0x0025CEC8
		public static LocalizedString MigrationJobAlreadyExists(string jobName)
		{
			return new LocalizedString("MigrationJobAlreadyExists", "", false, false, Strings.ResourceManager, new object[]
			{
				jobName
			});
		}

		// Token: 0x1700303E RID: 12350
		// (get) Token: 0x06009635 RID: 38453 RVA: 0x0025ECF7 File Offset: 0x0025CEF7
		public static LocalizedString WrongSubscriptionIdentity
		{
			get
			{
				return new LocalizedString("WrongSubscriptionIdentity", "Ex94B62D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700303F RID: 12351
		// (get) Token: 0x06009636 RID: 38454 RVA: 0x0025ED15 File Offset: 0x0025CF15
		public static LocalizedString ConfirmationMessageTestExchangeSearch
		{
			get
			{
				return new LocalizedString("ConfirmationMessageTestExchangeSearch", "Ex3C3719", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009637 RID: 38455 RVA: 0x0025ED34 File Offset: 0x0025CF34
		public static LocalizedString UpdatesDirectoryNotFound(string directory)
		{
			return new LocalizedString("UpdatesDirectoryNotFound", "Ex1D4A38", false, true, Strings.ResourceManager, new object[]
			{
				directory
			});
		}

		// Token: 0x06009638 RID: 38456 RVA: 0x0025ED64 File Offset: 0x0025CF64
		public static LocalizedString ErrorDlpTemplateRequiresParameter(string parameterName, string requiredParameters)
		{
			return new LocalizedString("ErrorDlpTemplateRequiresParameter", "", false, false, Strings.ResourceManager, new object[]
			{
				parameterName,
				requiredParameters
			});
		}

		// Token: 0x17003040 RID: 12352
		// (get) Token: 0x06009639 RID: 38457 RVA: 0x0025ED97 File Offset: 0x0025CF97
		public static LocalizedString RoleEditor
		{
			get
			{
				return new LocalizedString("RoleEditor", "ExFA7367", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003041 RID: 12353
		// (get) Token: 0x0600963A RID: 38458 RVA: 0x0025EDB5 File Offset: 0x0025CFB5
		public static LocalizedString ErrorUnknownPartition
		{
			get
			{
				return new LocalizedString("ErrorUnknownPartition", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003042 RID: 12354
		// (get) Token: 0x0600963B RID: 38459 RVA: 0x0025EDD3 File Offset: 0x0025CFD3
		public static LocalizedString ConfirmationMessageImportTransportRuleCollection
		{
			get
			{
				return new LocalizedString("ConfirmationMessageImportTransportRuleCollection", "Ex96280B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600963C RID: 38460 RVA: 0x0025EDF4 File Offset: 0x0025CFF4
		public static LocalizedString ErrorOWAEnabledStatusNotConsistent(string id)
		{
			return new LocalizedString("ErrorOWAEnabledStatusNotConsistent", "Ex9DF7D4", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x0600963D RID: 38461 RVA: 0x0025EE24 File Offset: 0x0025D024
		public static LocalizedString ConfirmationMessageNewMailboxDiscovery(string Name, string Database, string Discovery, string UserPrincipalName, string OrganizationalUnit)
		{
			return new LocalizedString("ConfirmationMessageNewMailboxDiscovery", "Ex11FB12", false, true, Strings.ResourceManager, new object[]
			{
				Name,
				Database,
				Discovery,
				UserPrincipalName,
				OrganizationalUnit
			});
		}

		// Token: 0x0600963E RID: 38462 RVA: 0x0025EE64 File Offset: 0x0025D064
		public static LocalizedString ErrorSamePublicFolderMRSJobInstancesNotAllowed(string requestType)
		{
			return new LocalizedString("ErrorSamePublicFolderMRSJobInstancesNotAllowed", "", false, false, Strings.ResourceManager, new object[]
			{
				requestType
			});
		}

		// Token: 0x0600963F RID: 38463 RVA: 0x0025EE94 File Offset: 0x0025D094
		public static LocalizedString ResettingIsDefaultIsNotSupported(string paramName, string policyName)
		{
			return new LocalizedString("ResettingIsDefaultIsNotSupported", "Ex56AD31", false, true, Strings.ResourceManager, new object[]
			{
				paramName,
				policyName
			});
		}

		// Token: 0x06009640 RID: 38464 RVA: 0x0025EEC8 File Offset: 0x0025D0C8
		public static LocalizedString ErrorProxyAddressAlreadyExists(string address, string user)
		{
			return new LocalizedString("ErrorProxyAddressAlreadyExists", "Ex801472", false, true, Strings.ResourceManager, new object[]
			{
				address,
				user
			});
		}

		// Token: 0x06009641 RID: 38465 RVA: 0x0025EEFC File Offset: 0x0025D0FC
		public static LocalizedString ErrorMailboxRelocationSplitSourceNotInContainer(string mailbox)
		{
			return new LocalizedString("ErrorMailboxRelocationSplitSourceNotInContainer", "", false, false, Strings.ResourceManager, new object[]
			{
				mailbox
			});
		}

		// Token: 0x17003043 RID: 12355
		// (get) Token: 0x06009642 RID: 38466 RVA: 0x0025EF2B File Offset: 0x0025D12B
		public static LocalizedString RegasmNotFound
		{
			get
			{
				return new LocalizedString("RegasmNotFound", "Ex296BFA", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003044 RID: 12356
		// (get) Token: 0x06009643 RID: 38467 RVA: 0x0025EF49 File Offset: 0x0025D149
		public static LocalizedString SetServiceInstanceMapResultCodeObjectNotFound
		{
			get
			{
				return new LocalizedString("SetServiceInstanceMapResultCodeObjectNotFound", "Ex809E75", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003045 RID: 12357
		// (get) Token: 0x06009644 RID: 38468 RVA: 0x0025EF67 File Offset: 0x0025D167
		public static LocalizedString FederationTrustValid
		{
			get
			{
				return new LocalizedString("FederationTrustValid", "Ex77435D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009645 RID: 38469 RVA: 0x0025EF88 File Offset: 0x0025D188
		public static LocalizedString ConfirmationMessageDisableJournalrule(string Identity)
		{
			return new LocalizedString("ConfirmationMessageDisableJournalrule", "Ex07E7B2", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x17003046 RID: 12358
		// (get) Token: 0x06009646 RID: 38470 RVA: 0x0025EFB7 File Offset: 0x0025D1B7
		public static LocalizedString MoveAlreadyCanceled
		{
			get
			{
				return new LocalizedString("MoveAlreadyCanceled", "Ex8EB7A1", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009647 RID: 38471 RVA: 0x0025EFD8 File Offset: 0x0025D1D8
		public static LocalizedString CasHealthTestUserOnWrongSite(string userName, string foundOn, string shouldBeOn)
		{
			return new LocalizedString("CasHealthTestUserOnWrongSite", "ExE00790", false, true, Strings.ResourceManager, new object[]
			{
				userName,
				foundOn,
				shouldBeOn
			});
		}

		// Token: 0x17003047 RID: 12359
		// (get) Token: 0x06009648 RID: 38472 RVA: 0x0025F00F File Offset: 0x0025D20F
		public static LocalizedString ADAttributeCustomAttribute7
		{
			get
			{
				return new LocalizedString("ADAttributeCustomAttribute7", "Ex2116DE", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003048 RID: 12360
		// (get) Token: 0x06009649 RID: 38473 RVA: 0x0025F02D File Offset: 0x0025D22D
		public static LocalizedString ErrorOnlyForestWideBlockIsAllowed
		{
			get
			{
				return new LocalizedString("ErrorOnlyForestWideBlockIsAllowed", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600964A RID: 38474 RVA: 0x0025F04C File Offset: 0x0025D24C
		public static LocalizedString FailedToMatchTemplateDistributionPointToLicensingUri(Guid templateGuid, Uri templateDp, Uri tpdDp)
		{
			return new LocalizedString("FailedToMatchTemplateDistributionPointToLicensingUri", "", false, false, Strings.ResourceManager, new object[]
			{
				templateGuid,
				templateDp,
				tpdDp
			});
		}

		// Token: 0x0600964B RID: 38475 RVA: 0x0025F088 File Offset: 0x0025D288
		public static LocalizedString ConditionIncompatibleWithTheSubtype(string conditionName, string subtypeName)
		{
			return new LocalizedString("ConditionIncompatibleWithTheSubtype", "", false, false, Strings.ResourceManager, new object[]
			{
				conditionName,
				subtypeName
			});
		}

		// Token: 0x0600964C RID: 38476 RVA: 0x0025F0BC File Offset: 0x0025D2BC
		public static LocalizedString EtrHasE4eAction(string ruleName)
		{
			return new LocalizedString("EtrHasE4eAction", "", false, false, Strings.ResourceManager, new object[]
			{
				ruleName
			});
		}

		// Token: 0x17003049 RID: 12361
		// (get) Token: 0x0600964D RID: 38477 RVA: 0x0025F0EB File Offset: 0x0025D2EB
		public static LocalizedString InstallHealthManagerServiceTask
		{
			get
			{
				return new LocalizedString("InstallHealthManagerServiceTask", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700304A RID: 12362
		// (get) Token: 0x0600964E RID: 38478 RVA: 0x0025F109 File Offset: 0x0025D309
		public static LocalizedString NoComponentInfoFilesException
		{
			get
			{
				return new LocalizedString("NoComponentInfoFilesException", "Ex78807D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700304B RID: 12363
		// (get) Token: 0x0600964F RID: 38479 RVA: 0x0025F127 File Offset: 0x0025D327
		public static LocalizedString SetupComponentMTAConfiguration
		{
			get
			{
				return new LocalizedString("SetupComponentMTAConfiguration", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009650 RID: 38480 RVA: 0x0025F148 File Offset: 0x0025D348
		public static LocalizedString ProgressCreateAltFsw(string serverName, string filePath)
		{
			return new LocalizedString("ProgressCreateAltFsw", "Ex966BDB", false, true, Strings.ResourceManager, new object[]
			{
				serverName,
				filePath
			});
		}

		// Token: 0x06009651 RID: 38481 RVA: 0x0025F17C File Offset: 0x0025D37C
		public static LocalizedString ErrorAddressBookPolicyNotFound(string idStringValue)
		{
			return new LocalizedString("ErrorAddressBookPolicyNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		// Token: 0x1700304C RID: 12364
		// (get) Token: 0x06009652 RID: 38482 RVA: 0x0025F1AB File Offset: 0x0025D3AB
		public static LocalizedString MountStatusUnknown
		{
			get
			{
				return new LocalizedString("MountStatusUnknown", "Ex14474E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700304D RID: 12365
		// (get) Token: 0x06009653 RID: 38483 RVA: 0x0025F1C9 File Offset: 0x0025D3C9
		public static LocalizedString ErrorVerificationCodeTooManyFailed
		{
			get
			{
				return new LocalizedString("ErrorVerificationCodeTooManyFailed", "ExAF0F4A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700304E RID: 12366
		// (get) Token: 0x06009654 RID: 38484 RVA: 0x0025F1E7 File Offset: 0x0025D3E7
		public static LocalizedString CustomerFeedbackEnabledError
		{
			get
			{
				return new LocalizedString("CustomerFeedbackEnabledError", "ExE43A8D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009655 RID: 38485 RVA: 0x0025F208 File Offset: 0x0025D408
		public static LocalizedString ErrorDeviceIdInBothLists(string deviceId)
		{
			return new LocalizedString("ErrorDeviceIdInBothLists", "ExFF29A6", false, true, Strings.ResourceManager, new object[]
			{
				deviceId
			});
		}

		// Token: 0x1700304F RID: 12367
		// (get) Token: 0x06009656 RID: 38486 RVA: 0x0025F237 File Offset: 0x0025D437
		public static LocalizedString MigrationReportNotFound
		{
			get
			{
				return new LocalizedString("MigrationReportNotFound", "Ex3B7A80", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003050 RID: 12368
		// (get) Token: 0x06009657 RID: 38487 RVA: 0x0025F255 File Offset: 0x0025D455
		public static LocalizedString InitializedWithInvalidObjectId
		{
			get
			{
				return new LocalizedString("InitializedWithInvalidObjectId", "Ex47D4C3", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009658 RID: 38488 RVA: 0x0025F274 File Offset: 0x0025D474
		public static LocalizedString SuccessEnableMailboxQuarantine(string mailbox)
		{
			return new LocalizedString("SuccessEnableMailboxQuarantine", "", false, false, Strings.ResourceManager, new object[]
			{
				mailbox
			});
		}

		// Token: 0x17003051 RID: 12369
		// (get) Token: 0x06009659 RID: 38489 RVA: 0x0025F2A3 File Offset: 0x0025D4A3
		public static LocalizedString DatabaseSeedStatusLabelRead
		{
			get
			{
				return new LocalizedString("DatabaseSeedStatusLabelRead", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600965A RID: 38490 RVA: 0x0025F2C4 File Offset: 0x0025D4C4
		public static LocalizedString ErrorKerbauthModuleFileNotFound(string file)
		{
			return new LocalizedString("ErrorKerbauthModuleFileNotFound", "Ex6A239D", false, true, Strings.ResourceManager, new object[]
			{
				file
			});
		}

		// Token: 0x0600965B RID: 38491 RVA: 0x0025F2F4 File Offset: 0x0025D4F4
		public static LocalizedString CasHealthOwaConfirmTestUrl(string url)
		{
			return new LocalizedString("CasHealthOwaConfirmTestUrl", "ExE30BC4", false, true, Strings.ResourceManager, new object[]
			{
				url
			});
		}

		// Token: 0x0600965C RID: 38492 RVA: 0x0025F324 File Offset: 0x0025D524
		public static LocalizedString DatabaseCopyRpcResultNotFound(string configType, string sgName)
		{
			return new LocalizedString("DatabaseCopyRpcResultNotFound", "Ex825659", false, true, Strings.ResourceManager, new object[]
			{
				configType,
				sgName
			});
		}

		// Token: 0x17003052 RID: 12370
		// (get) Token: 0x0600965D RID: 38493 RVA: 0x0025F357 File Offset: 0x0025D557
		public static LocalizedString UnableToDiscoverMailboxPermission
		{
			get
			{
				return new LocalizedString("UnableToDiscoverMailboxPermission", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600965E RID: 38494 RVA: 0x0025F378 File Offset: 0x0025D578
		public static LocalizedString DagSubnetDown(string subnetId, string netName, string subnetState)
		{
			return new LocalizedString("DagSubnetDown", "ExCB0BD7", false, true, Strings.ResourceManager, new object[]
			{
				subnetId,
				netName,
				subnetState
			});
		}

		// Token: 0x0600965F RID: 38495 RVA: 0x0025F3B0 File Offset: 0x0025D5B0
		public static LocalizedString ErrorFilePathMustBeUNC(string pathName)
		{
			return new LocalizedString("ErrorFilePathMustBeUNC", "Ex513D73", false, true, Strings.ResourceManager, new object[]
			{
				pathName
			});
		}

		// Token: 0x06009660 RID: 38496 RVA: 0x0025F3E0 File Offset: 0x0025D5E0
		public static LocalizedString ConfirmationMessageSetRecipientTemplateProvisioningPolicy(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetRecipientTemplateProvisioningPolicy", "ExFAD646", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x17003053 RID: 12371
		// (get) Token: 0x06009661 RID: 38497 RVA: 0x0025F40F File Offset: 0x0025D60F
		public static LocalizedString SuppressXAnonymousTlsEnabledWithoutDowngradedExchangeAuth
		{
			get
			{
				return new LocalizedString("SuppressXAnonymousTlsEnabledWithoutDowngradedExchangeAuth", "Ex7510B7", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009662 RID: 38498 RVA: 0x0025F430 File Offset: 0x0025D630
		public static LocalizedString UpdatingAdminToolsConfiguredVersion(string newValue)
		{
			return new LocalizedString("UpdatingAdminToolsConfiguredVersion", "ExC94F5A", false, true, Strings.ResourceManager, new object[]
			{
				newValue
			});
		}

		// Token: 0x17003054 RID: 12372
		// (get) Token: 0x06009663 RID: 38499 RVA: 0x0025F45F File Offset: 0x0025D65F
		public static LocalizedString MtrtRouteMessageHighRisk
		{
			get
			{
				return new LocalizedString("MtrtRouteMessageHighRisk", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009664 RID: 38500 RVA: 0x0025F480 File Offset: 0x0025D680
		public static LocalizedString RemoveDagFailedToDestroyClusterException(string clusterName, string dagName, uint status)
		{
			return new LocalizedString("RemoveDagFailedToDestroyClusterException", "", false, false, Strings.ResourceManager, new object[]
			{
				clusterName,
				dagName,
				status
			});
		}

		// Token: 0x17003055 RID: 12373
		// (get) Token: 0x06009665 RID: 38501 RVA: 0x0025F4BC File Offset: 0x0025D6BC
		public static LocalizedString SetupProgressFederationEnabled
		{
			get
			{
				return new LocalizedString("SetupProgressFederationEnabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003056 RID: 12374
		// (get) Token: 0x06009666 RID: 38502 RVA: 0x0025F4DA File Offset: 0x0025D6DA
		public static LocalizedString CasHealthEasTestTypeAndAutodiscoverArgumentError
		{
			get
			{
				return new LocalizedString("CasHealthEasTestTypeAndAutodiscoverArgumentError", "Ex0AB15B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003057 RID: 12375
		// (get) Token: 0x06009667 RID: 38503 RVA: 0x0025F4F8 File Offset: 0x0025D6F8
		public static LocalizedString ErrorCreatedAfterLaterThanToday
		{
			get
			{
				return new LocalizedString("ErrorCreatedAfterLaterThanToday", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003058 RID: 12376
		// (get) Token: 0x06009668 RID: 38504 RVA: 0x0025F516 File Offset: 0x0025D716
		public static LocalizedString FileUploadServiceDescription
		{
			get
			{
				return new LocalizedString("FileUploadServiceDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009669 RID: 38505 RVA: 0x0025F534 File Offset: 0x0025D734
		public static LocalizedString ConfirmationMessageSetClientAccessServer(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetClientAccessServer", "Ex258A73", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x0600966A RID: 38506 RVA: 0x0025F564 File Offset: 0x0025D764
		public static LocalizedString ErrorMailboxRelocationJoinTargetNotContainer(string mailbox)
		{
			return new LocalizedString("ErrorMailboxRelocationJoinTargetNotContainer", "", false, false, Strings.ResourceManager, new object[]
			{
				mailbox
			});
		}

		// Token: 0x17003059 RID: 12377
		// (get) Token: 0x0600966B RID: 38507 RVA: 0x0025F593 File Offset: 0x0025D793
		public static LocalizedString CasHealthPerformanceCounterName
		{
			get
			{
				return new LocalizedString("CasHealthPerformanceCounterName", "Ex1ABE76", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700305A RID: 12378
		// (get) Token: 0x0600966C RID: 38508 RVA: 0x0025F5B1 File Offset: 0x0025D7B1
		public static LocalizedString InstallIisWebServiceExtensionNoChanges
		{
			get
			{
				return new LocalizedString("InstallIisWebServiceExtensionNoChanges", "Ex50C5C6", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700305B RID: 12379
		// (get) Token: 0x0600966D RID: 38509 RVA: 0x0025F5CF File Offset: 0x0025D7CF
		public static LocalizedString ErrorExceededMaxiumNumberOfDatabasesPerServer
		{
			get
			{
				return new LocalizedString("ErrorExceededMaxiumNumberOfDatabasesPerServer", "Ex451B7D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600966E RID: 38510 RVA: 0x0025F5F0 File Offset: 0x0025D7F0
		public static LocalizedString MaxDevicesReachedSingular(uint maxDevicesLimit)
		{
			return new LocalizedString("MaxDevicesReachedSingular", "", false, false, Strings.ResourceManager, new object[]
			{
				maxDevicesLimit
			});
		}

		// Token: 0x0600966F RID: 38511 RVA: 0x0025F624 File Offset: 0x0025D824
		public static LocalizedString ExceptionMandatoryParameter(string parameter)
		{
			return new LocalizedString("ExceptionMandatoryParameter", "Ex338334", false, true, Strings.ResourceManager, new object[]
			{
				parameter
			});
		}

		// Token: 0x06009670 RID: 38512 RVA: 0x0025F654 File Offset: 0x0025D854
		public static LocalizedString GetQueueDigestAmbiguosSite(AdSiteIdParameter adObjectId)
		{
			return new LocalizedString("GetQueueDigestAmbiguosSite", "", false, false, Strings.ResourceManager, new object[]
			{
				adObjectId
			});
		}

		// Token: 0x06009671 RID: 38513 RVA: 0x0025F684 File Offset: 0x0025D884
		public static LocalizedString WarningNTSecurityDescriptorNotUpdated(string objectId, string reason)
		{
			return new LocalizedString("WarningNTSecurityDescriptorNotUpdated", "Ex82F34D", false, true, Strings.ResourceManager, new object[]
			{
				objectId,
				reason
			});
		}

		// Token: 0x1700305C RID: 12380
		// (get) Token: 0x06009672 RID: 38514 RVA: 0x0025F6B7 File Offset: 0x0025D8B7
		public static LocalizedString UMMailboxPolicySetFaxServerURIError
		{
			get
			{
				return new LocalizedString("UMMailboxPolicySetFaxServerURIError", "Ex680145", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009673 RID: 38515 RVA: 0x0025F6D8 File Offset: 0x0025D8D8
		public static LocalizedString ExportSkippedE15Rules(int skippedRuleCount)
		{
			return new LocalizedString("ExportSkippedE15Rules", "", false, false, Strings.ResourceManager, new object[]
			{
				skippedRuleCount
			});
		}

		// Token: 0x06009674 RID: 38516 RVA: 0x0025F70C File Offset: 0x0025D90C
		public static LocalizedString ErrorDisclaimerTextBig(int size)
		{
			return new LocalizedString("ErrorDisclaimerTextBig", "", false, false, Strings.ResourceManager, new object[]
			{
				size
			});
		}

		// Token: 0x06009675 RID: 38517 RVA: 0x0025F740 File Offset: 0x0025D940
		public static LocalizedString WarningBackgroundDatabaseMaintenanceChangeRequiresRemount(string pfdb)
		{
			return new LocalizedString("WarningBackgroundDatabaseMaintenanceChangeRequiresRemount", "Ex3909FA", false, true, Strings.ResourceManager, new object[]
			{
				pfdb
			});
		}

		// Token: 0x1700305D RID: 12381
		// (get) Token: 0x06009676 RID: 38518 RVA: 0x0025F76F File Offset: 0x0025D96F
		public static LocalizedString UninstallCafeRoleDescription
		{
			get
			{
				return new LocalizedString("UninstallCafeRoleDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009677 RID: 38519 RVA: 0x0025F790 File Offset: 0x0025D990
		public static LocalizedString MailboxAuditLogSearchFailed(string criteria, string userid)
		{
			return new LocalizedString("MailboxAuditLogSearchFailed", "Ex037A97", false, true, Strings.ResourceManager, new object[]
			{
				criteria,
				userid
			});
		}

		// Token: 0x1700305E RID: 12382
		// (get) Token: 0x06009678 RID: 38520 RVA: 0x0025F7C3 File Offset: 0x0025D9C3
		public static LocalizedString RemoveHuntGroupsLinkedToTenantDialPlans
		{
			get
			{
				return new LocalizedString("RemoveHuntGroupsLinkedToTenantDialPlans", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009679 RID: 38521 RVA: 0x0025F7E4 File Offset: 0x0025D9E4
		public static LocalizedString ErrorMoveAddressListAcrossOrganization(string id, string idTarget)
		{
			return new LocalizedString("ErrorMoveAddressListAcrossOrganization", "Ex2C59E7", false, true, Strings.ResourceManager, new object[]
			{
				id,
				idTarget
			});
		}

		// Token: 0x1700305F RID: 12383
		// (get) Token: 0x0600967A RID: 38522 RVA: 0x0025F817 File Offset: 0x0025DA17
		public static LocalizedString ErrorCannotCreateFingerprint
		{
			get
			{
				return new LocalizedString("ErrorCannotCreateFingerprint", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600967B RID: 38523 RVA: 0x0025F838 File Offset: 0x0025DA38
		public static LocalizedString ErrorRemoveMailuserWithLitigationHold(string mbxId)
		{
			return new LocalizedString("ErrorRemoveMailuserWithLitigationHold", "", false, false, Strings.ResourceManager, new object[]
			{
				mbxId
			});
		}

		// Token: 0x17003060 RID: 12384
		// (get) Token: 0x0600967C RID: 38524 RVA: 0x0025F867 File Offset: 0x0025DA67
		public static LocalizedString InvalidEndDate
		{
			get
			{
				return new LocalizedString("InvalidEndDate", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003061 RID: 12385
		// (get) Token: 0x0600967D RID: 38525 RVA: 0x0025F885 File Offset: 0x0025DA85
		public static LocalizedString InstallFreeBusyFolderCannotGetOrganizationContainer
		{
			get
			{
				return new LocalizedString("InstallFreeBusyFolderCannotGetOrganizationContainer", "Ex3F7A2F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600967E RID: 38526 RVA: 0x0025F8A4 File Offset: 0x0025DAA4
		public static LocalizedString ClassificationRuleCollectionInternalFailure(int error)
		{
			return new LocalizedString("ClassificationRuleCollectionInternalFailure", "", false, false, Strings.ResourceManager, new object[]
			{
				error
			});
		}

		// Token: 0x0600967F RID: 38527 RVA: 0x0025F8D8 File Offset: 0x0025DAD8
		public static LocalizedString WarningSetMailboxLitigationOwnerIdentity(string owner)
		{
			return new LocalizedString("WarningSetMailboxLitigationOwnerIdentity", "", false, false, Strings.ResourceManager, new object[]
			{
				owner
			});
		}

		// Token: 0x06009680 RID: 38528 RVA: 0x0025F908 File Offset: 0x0025DB08
		public static LocalizedString ErrorNoDeletionNoTarget(string paramDelContent, string paramDelAssociatedMsg)
		{
			return new LocalizedString("ErrorNoDeletionNoTarget", "ExC3638F", false, true, Strings.ResourceManager, new object[]
			{
				paramDelContent,
				paramDelAssociatedMsg
			});
		}

		// Token: 0x06009681 RID: 38529 RVA: 0x0025F93C File Offset: 0x0025DB3C
		public static LocalizedString InvalidComplianceBindingWarning(string list)
		{
			return new LocalizedString("InvalidComplianceBindingWarning", "", false, false, Strings.ResourceManager, new object[]
			{
				list
			});
		}

		// Token: 0x17003062 RID: 12386
		// (get) Token: 0x06009682 RID: 38530 RVA: 0x0025F96B File Offset: 0x0025DB6B
		public static LocalizedString ErrorSetPublicFolderMailMailEnabledFalse
		{
			get
			{
				return new LocalizedString("ErrorSetPublicFolderMailMailEnabledFalse", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003063 RID: 12387
		// (get) Token: 0x06009683 RID: 38531 RVA: 0x0025F989 File Offset: 0x0025DB89
		public static LocalizedString SetupProgressConfigurePerimeterConfig
		{
			get
			{
				return new LocalizedString("SetupProgressConfigurePerimeterConfig", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009684 RID: 38532 RVA: 0x0025F9A8 File Offset: 0x0025DBA8
		public static LocalizedString ConfirmationMessageUninstallProvisioningAgent(string Assembly)
		{
			return new LocalizedString("ConfirmationMessageUninstallProvisioningAgent", "Ex4165ED", false, true, Strings.ResourceManager, new object[]
			{
				Assembly
			});
		}

		// Token: 0x06009685 RID: 38533 RVA: 0x0025F9D8 File Offset: 0x0025DBD8
		public static LocalizedString ConfirmationMessageEnableMailboxLinked(string Identity, string LinkedMasterAccount, string LinkedDomainController)
		{
			return new LocalizedString("ConfirmationMessageEnableMailboxLinked", "Ex9245B3", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				LinkedMasterAccount,
				LinkedDomainController
			});
		}

		// Token: 0x06009686 RID: 38534 RVA: 0x0025FA10 File Offset: 0x0025DC10
		public static LocalizedString NoEntityLinkedToTenantInReportingDB(string tenantName)
		{
			return new LocalizedString("NoEntityLinkedToTenantInReportingDB", "Ex64EAA7", false, true, Strings.ResourceManager, new object[]
			{
				tenantName
			});
		}

		// Token: 0x06009687 RID: 38535 RVA: 0x0025FA40 File Offset: 0x0025DC40
		public static LocalizedString ErrorCompleteFlagNotAllowed(string identity, string actual, string expected)
		{
			return new LocalizedString("ErrorCompleteFlagNotAllowed", "", false, false, Strings.ResourceManager, new object[]
			{
				identity,
				actual,
				expected
			});
		}

		// Token: 0x17003064 RID: 12388
		// (get) Token: 0x06009688 RID: 38536 RVA: 0x0025FA77 File Offset: 0x0025DC77
		public static LocalizedString SetupProgressStartingProtectedServiceHostService
		{
			get
			{
				return new LocalizedString("SetupProgressStartingProtectedServiceHostService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003065 RID: 12389
		// (get) Token: 0x06009689 RID: 38537 RVA: 0x0025FA95 File Offset: 0x0025DC95
		public static LocalizedString SetupProgressIssueWarningMaiboxQuota
		{
			get
			{
				return new LocalizedString("SetupProgressIssueWarningMaiboxQuota", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600968A RID: 38538 RVA: 0x0025FAB4 File Offset: 0x0025DCB4
		public static LocalizedString ErrorSourceServerNotInDag(string server)
		{
			return new LocalizedString("ErrorSourceServerNotInDag", "ExCFFE67", false, true, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		// Token: 0x0600968B RID: 38539 RVA: 0x0025FAE4 File Offset: 0x0025DCE4
		public static LocalizedString CasHealthSpecifiedCASServerVersionNotMatched(string cmdletName, int casServerMajorVersion)
		{
			return new LocalizedString("CasHealthSpecifiedCASServerVersionNotMatched", "ExCD9086", false, true, Strings.ResourceManager, new object[]
			{
				cmdletName,
				casServerMajorVersion
			});
		}

		// Token: 0x0600968C RID: 38540 RVA: 0x0025FB1C File Offset: 0x0025DD1C
		public static LocalizedString RegistryInsufficientPermissionException(string keyPath, string valueName)
		{
			return new LocalizedString("RegistryInsufficientPermissionException", "", false, false, Strings.ResourceManager, new object[]
			{
				keyPath,
				valueName
			});
		}

		// Token: 0x0600968D RID: 38541 RVA: 0x0025FB50 File Offset: 0x0025DD50
		public static LocalizedString ErrorAssigneeComputerNotUnique(string id)
		{
			return new LocalizedString("ErrorAssigneeComputerNotUnique", "Ex084F5D", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x0600968E RID: 38542 RVA: 0x0025FB80 File Offset: 0x0025DD80
		public static LocalizedString ErrorRecipientIdParamElementsNotUnique(string paramName, string recipient)
		{
			return new LocalizedString("ErrorRecipientIdParamElementsNotUnique", "Ex9A26FB", false, true, Strings.ResourceManager, new object[]
			{
				paramName,
				recipient
			});
		}

		// Token: 0x17003066 RID: 12390
		// (get) Token: 0x0600968F RID: 38543 RVA: 0x0025FBB3 File Offset: 0x0025DDB3
		public static LocalizedString InvalidPredicateSequence
		{
			get
			{
				return new LocalizedString("InvalidPredicateSequence", "ExD503A9", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009690 RID: 38544 RVA: 0x0025FBD4 File Offset: 0x0025DDD4
		public static LocalizedString DagCantBeSetIntoDatacenterActivationMode(string dagName)
		{
			return new LocalizedString("DagCantBeSetIntoDatacenterActivationMode", "", false, false, Strings.ResourceManager, new object[]
			{
				dagName
			});
		}

		// Token: 0x17003067 RID: 12391
		// (get) Token: 0x06009691 RID: 38545 RVA: 0x0025FC03 File Offset: 0x0025DE03
		public static LocalizedString InstallAdminToolsRoleDescription
		{
			get
			{
				return new LocalizedString("InstallAdminToolsRoleDescription", "Ex8ADE44", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009692 RID: 38546 RVA: 0x0025FC24 File Offset: 0x0025DE24
		public static LocalizedString SharedConfigurationNotEnabled(string org, string sharedConfigurationInfo)
		{
			return new LocalizedString("SharedConfigurationNotEnabled", "", false, false, Strings.ResourceManager, new object[]
			{
				org,
				sharedConfigurationInfo
			});
		}

		// Token: 0x06009693 RID: 38547 RVA: 0x0025FC58 File Offset: 0x0025DE58
		public static LocalizedString DagTaskNodeNotUpExceptionTryConfigOnlyException(string machineName, string clusterName, string machineState)
		{
			return new LocalizedString("DagTaskNodeNotUpExceptionTryConfigOnlyException", "", false, false, Strings.ResourceManager, new object[]
			{
				machineName,
				clusterName,
				machineState
			});
		}

		// Token: 0x06009694 RID: 38548 RVA: 0x0025FC90 File Offset: 0x0025DE90
		public static LocalizedString OptInNotSupportedForPre14Mailbox(string versionRequired, string mailbox, string currentVersion)
		{
			return new LocalizedString("OptInNotSupportedForPre14Mailbox", "ExD56AA0", false, true, Strings.ResourceManager, new object[]
			{
				versionRequired,
				mailbox,
				currentVersion
			});
		}

		// Token: 0x17003068 RID: 12392
		// (get) Token: 0x06009695 RID: 38549 RVA: 0x0025FCC7 File Offset: 0x0025DEC7
		public static LocalizedString ProgressCopyingCopySystemFiles
		{
			get
			{
				return new LocalizedString("ProgressCopyingCopySystemFiles", "ExAE8BCD", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009696 RID: 38550 RVA: 0x0025FCE8 File Offset: 0x0025DEE8
		public static LocalizedString DagTaskMultipleDefaultGatewaysFound(string serverName)
		{
			return new LocalizedString("DagTaskMultipleDefaultGatewaysFound", "", false, false, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		// Token: 0x06009697 RID: 38551 RVA: 0x0025FD18 File Offset: 0x0025DF18
		public static LocalizedString WarningRulesWillNotBeCopied(string identity)
		{
			return new LocalizedString("WarningRulesWillNotBeCopied", "Ex59E4EC", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x06009698 RID: 38552 RVA: 0x0025FD48 File Offset: 0x0025DF48
		public static LocalizedString ErrorUnknownMailboxFolderAccessRights(string input)
		{
			return new LocalizedString("ErrorUnknownMailboxFolderAccessRights", "Ex3B7F21", false, true, Strings.ResourceManager, new object[]
			{
				input
			});
		}

		// Token: 0x06009699 RID: 38553 RVA: 0x0025FD78 File Offset: 0x0025DF78
		public static LocalizedString DagTaskRemoveNodeCleanupFailed(string NodeName)
		{
			return new LocalizedString("DagTaskRemoveNodeCleanupFailed", "Ex425DCA", false, true, Strings.ResourceManager, new object[]
			{
				NodeName
			});
		}

		// Token: 0x17003069 RID: 12393
		// (get) Token: 0x0600969A RID: 38554 RVA: 0x0025FDA7 File Offset: 0x0025DFA7
		public static LocalizedString ErrorBPAOutFileSave
		{
			get
			{
				return new LocalizedString("ErrorBPAOutFileSave", "ExD44202", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600969B RID: 38555 RVA: 0x0025FDC8 File Offset: 0x0025DFC8
		public static LocalizedString ErrorCreatedUserNotExist(string Id)
		{
			return new LocalizedString("ErrorCreatedUserNotExist", "Ex553D19", false, true, Strings.ResourceManager, new object[]
			{
				Id
			});
		}

		// Token: 0x0600969C RID: 38556 RVA: 0x0025FDF8 File Offset: 0x0025DFF8
		public static LocalizedString CasHealthPowerShellLogonFailed(string vDir, string errorMessage)
		{
			return new LocalizedString("CasHealthPowerShellLogonFailed", "ExFA38BC", false, true, Strings.ResourceManager, new object[]
			{
				vDir,
				errorMessage
			});
		}

		// Token: 0x0600969D RID: 38557 RVA: 0x0025FE2C File Offset: 0x0025E02C
		public static LocalizedString DatabaseNamesMustBeValid(string list)
		{
			return new LocalizedString("DatabaseNamesMustBeValid", "ExD429F6", false, true, Strings.ResourceManager, new object[]
			{
				list
			});
		}

		// Token: 0x0600969E RID: 38558 RVA: 0x0025FE5C File Offset: 0x0025E05C
		public static LocalizedString ErrorRBACPolicyNotFound(string id)
		{
			return new LocalizedString("ErrorRBACPolicyNotFound", "ExCEF5A4", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x1700306A RID: 12394
		// (get) Token: 0x0600969F RID: 38559 RVA: 0x0025FE8B File Offset: 0x0025E08B
		public static LocalizedString ErrorInvalidParametersForLocalPublicFolderMailboxMigration
		{
			get
			{
				return new LocalizedString("ErrorInvalidParametersForLocalPublicFolderMailboxMigration", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060096A0 RID: 38560 RVA: 0x0025FEAC File Offset: 0x0025E0AC
		public static LocalizedString VerboseFailedDoubleWriteOperation(string error)
		{
			return new LocalizedString("VerboseFailedDoubleWriteOperation", "ExB873F0", false, true, Strings.ResourceManager, new object[]
			{
				error
			});
		}

		// Token: 0x1700306B RID: 12395
		// (get) Token: 0x060096A1 RID: 38561 RVA: 0x0025FEDB File Offset: 0x0025E0DB
		public static LocalizedString HybridIsEnabledOnPremisesButTenantIsNotUpgraded
		{
			get
			{
				return new LocalizedString("HybridIsEnabledOnPremisesButTenantIsNotUpgraded", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700306C RID: 12396
		// (get) Token: 0x060096A2 RID: 38562 RVA: 0x0025FEF9 File Offset: 0x0025E0F9
		public static LocalizedString SetupProgressRemovingDefaultTransportAgents
		{
			get
			{
				return new LocalizedString("SetupProgressRemovingDefaultTransportAgents", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060096A3 RID: 38563 RVA: 0x0025FF18 File Offset: 0x0025E118
		public static LocalizedString NeedToConfigOABForWeb(string oab)
		{
			return new LocalizedString("NeedToConfigOABForWeb", "Ex8B3CC6", false, true, Strings.ResourceManager, new object[]
			{
				oab
			});
		}

		// Token: 0x060096A4 RID: 38564 RVA: 0x0025FF48 File Offset: 0x0025E148
		public static LocalizedString MtrtMessageSend(string originalServerIP)
		{
			return new LocalizedString("MtrtMessageSend", "", false, false, Strings.ResourceManager, new object[]
			{
				originalServerIP
			});
		}

		// Token: 0x1700306D RID: 12397
		// (get) Token: 0x060096A5 RID: 38565 RVA: 0x0025FF77 File Offset: 0x0025E177
		public static LocalizedString ConfirmationMessageGetSearchDocumentFormat
		{
			get
			{
				return new LocalizedString("ConfirmationMessageGetSearchDocumentFormat", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060096A6 RID: 38566 RVA: 0x0025FF98 File Offset: 0x0025E198
		public static LocalizedString OnlineIsIntegException(string database, string failure)
		{
			return new LocalizedString("OnlineIsIntegException", "ExF36F54", false, true, Strings.ResourceManager, new object[]
			{
				database,
				failure
			});
		}

		// Token: 0x1700306E RID: 12398
		// (get) Token: 0x060096A7 RID: 38567 RVA: 0x0025FFCB File Offset: 0x0025E1CB
		public static LocalizedString SendConnectorUpdatingnteropUsgMembership
		{
			get
			{
				return new LocalizedString("SendConnectorUpdatingnteropUsgMembership", "Ex67FD26", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700306F RID: 12399
		// (get) Token: 0x060096A8 RID: 38568 RVA: 0x0025FFE9 File Offset: 0x0025E1E9
		public static LocalizedString SetupProgressMailboxCountQuota
		{
			get
			{
				return new LocalizedString("SetupProgressMailboxCountQuota", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060096A9 RID: 38569 RVA: 0x00260008 File Offset: 0x0025E208
		public static LocalizedString CasHealthOwaMissingAuthType(string schemeName)
		{
			return new LocalizedString("CasHealthOwaMissingAuthType", "Ex32151D", false, true, Strings.ResourceManager, new object[]
			{
				schemeName
			});
		}

		// Token: 0x060096AA RID: 38570 RVA: 0x00260038 File Offset: 0x0025E238
		public static LocalizedString ProtocolTransactionShortErrorMsgFromException(string exceptionType, string exceptionMessage)
		{
			return new LocalizedString("ProtocolTransactionShortErrorMsgFromException", "ExA8031A", false, true, Strings.ResourceManager, new object[]
			{
				exceptionType,
				exceptionMessage
			});
		}

		// Token: 0x17003070 RID: 12400
		// (get) Token: 0x060096AB RID: 38571 RVA: 0x0026006B File Offset: 0x0025E26B
		public static LocalizedString CreateExchangePrincipalObject
		{
			get
			{
				return new LocalizedString("CreateExchangePrincipalObject", "Ex28ABC2", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060096AC RID: 38572 RVA: 0x0026008C File Offset: 0x0025E28C
		public static LocalizedString ErrorAddressBookMailboxPolicyNotUnique(string idStringValue)
		{
			return new LocalizedString("ErrorAddressBookMailboxPolicyNotUnique", "", false, false, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		// Token: 0x060096AD RID: 38573 RVA: 0x002600BC File Offset: 0x0025E2BC
		public static LocalizedString SuspendSuccessInformationalMessage(string identity)
		{
			return new LocalizedString("SuspendSuccessInformationalMessage", "ExA24EDA", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x060096AE RID: 38574 RVA: 0x002600EC File Offset: 0x0025E2EC
		public static LocalizedString ServiceFailedToStart(string service)
		{
			return new LocalizedString("ServiceFailedToStart", "Ex97AE1D", false, true, Strings.ResourceManager, new object[]
			{
				service
			});
		}

		// Token: 0x17003071 RID: 12401
		// (get) Token: 0x060096AF RID: 38575 RVA: 0x0026011B File Offset: 0x0025E31B
		public static LocalizedString ExceptionInvalidUILevel
		{
			get
			{
				return new LocalizedString("ExceptionInvalidUILevel", "Ex3ADC08", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003072 RID: 12402
		// (get) Token: 0x060096B0 RID: 38576 RVA: 0x00260139 File Offset: 0x0025E339
		public static LocalizedString UninstallComplianceAuditServiceTask
		{
			get
			{
				return new LocalizedString("UninstallComplianceAuditServiceTask", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060096B1 RID: 38577 RVA: 0x00260158 File Offset: 0x0025E358
		public static LocalizedString ErrorTenantNotBeingRelocated(string identity)
		{
			return new LocalizedString("ErrorTenantNotBeingRelocated", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x17003073 RID: 12403
		// (get) Token: 0x060096B2 RID: 38578 RVA: 0x00260187 File Offset: 0x0025E387
		public static LocalizedString ParameterVersionMismatch
		{
			get
			{
				return new LocalizedString("ParameterVersionMismatch", "Ex46C67E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060096B3 RID: 38579 RVA: 0x002601A8 File Offset: 0x0025E3A8
		public static LocalizedString ErrorCannotCreateRoleAssignmentToADeprecatedRole(string id)
		{
			return new LocalizedString("ErrorCannotCreateRoleAssignmentToADeprecatedRole", "Ex79EEEE", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x17003074 RID: 12404
		// (get) Token: 0x060096B4 RID: 38580 RVA: 0x002601D7 File Offset: 0x0025E3D7
		public static LocalizedString ErrorAddGroupToItself
		{
			get
			{
				return new LocalizedString("ErrorAddGroupToItself", "Ex5D0C4F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003075 RID: 12405
		// (get) Token: 0x060096B5 RID: 38581 RVA: 0x002601F5 File Offset: 0x0025E3F5
		public static LocalizedString SetupProgressSetPermissionsOnAdminGroup
		{
			get
			{
				return new LocalizedString("SetupProgressSetPermissionsOnAdminGroup", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060096B6 RID: 38582 RVA: 0x00260214 File Offset: 0x0025E414
		public static LocalizedString MFLFileNotFound(string filePath)
		{
			return new LocalizedString("MFLFileNotFound", "Ex0B9E48", false, true, Strings.ResourceManager, new object[]
			{
				filePath
			});
		}

		// Token: 0x17003076 RID: 12406
		// (get) Token: 0x060096B7 RID: 38583 RVA: 0x00260243 File Offset: 0x0025E443
		public static LocalizedString UninstallDagMgmtServiceTask
		{
			get
			{
				return new LocalizedString("UninstallDagMgmtServiceTask", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003077 RID: 12407
		// (get) Token: 0x060096B8 RID: 38584 RVA: 0x00260261 File Offset: 0x0025E461
		public static LocalizedString SendConnectorMixedSourceServerRoles
		{
			get
			{
				return new LocalizedString("SendConnectorMixedSourceServerRoles", "ExB28C9C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060096B9 RID: 38585 RVA: 0x00260280 File Offset: 0x0025E480
		public static LocalizedString ConfirmationMessageSetComponentState(string name, string state)
		{
			return new LocalizedString("ConfirmationMessageSetComponentState", "", false, false, Strings.ResourceManager, new object[]
			{
				name,
				state
			});
		}

		// Token: 0x060096BA RID: 38586 RVA: 0x002602B4 File Offset: 0x0025E4B4
		public static LocalizedString VerboseAdministrativeGroupLinkedToPfdb(string administrativeGroup, string pfdb)
		{
			return new LocalizedString("VerboseAdministrativeGroupLinkedToPfdb", "ExEB8DC4", false, true, Strings.ResourceManager, new object[]
			{
				administrativeGroup,
				pfdb
			});
		}

		// Token: 0x17003078 RID: 12408
		// (get) Token: 0x060096BB RID: 38587 RVA: 0x002602E7 File Offset: 0x0025E4E7
		public static LocalizedString CasHealthNoteSecureAccess
		{
			get
			{
				return new LocalizedString("CasHealthNoteSecureAccess", "ExC42620", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003079 RID: 12409
		// (get) Token: 0x060096BC RID: 38588 RVA: 0x00260305 File Offset: 0x0025E505
		public static LocalizedString WarningCleanExistingPipelineTracingContent
		{
			get
			{
				return new LocalizedString("WarningCleanExistingPipelineTracingContent", "ExA1A126", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060096BD RID: 38589 RVA: 0x00260324 File Offset: 0x0025E524
		public static LocalizedString ConfirmationMessageConnectMailboxValidateOnly(string Identity, string ValidateOnly, string Database)
		{
			return new LocalizedString("ConfirmationMessageConnectMailboxValidateOnly", "ExA6EDD2", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				ValidateOnly,
				Database
			});
		}

		// Token: 0x060096BE RID: 38590 RVA: 0x0026035C File Offset: 0x0025E55C
		public static LocalizedString ServerAdminLinkEmptyException(string dn)
		{
			return new LocalizedString("ServerAdminLinkEmptyException", "ExCF5C4C", false, true, Strings.ResourceManager, new object[]
			{
				dn
			});
		}

		// Token: 0x060096BF RID: 38591 RVA: 0x0026038C File Offset: 0x0025E58C
		public static LocalizedString ConfirmationMessageDisableFederatedOrgId(string org)
		{
			return new LocalizedString("ConfirmationMessageDisableFederatedOrgId", "Ex957C83", false, true, Strings.ResourceManager, new object[]
			{
				org
			});
		}

		// Token: 0x1700307A RID: 12410
		// (get) Token: 0x060096C0 RID: 38592 RVA: 0x002603BB File Offset: 0x0025E5BB
		public static LocalizedString CasHealthOwaGetLogoffSucceeded
		{
			get
			{
				return new LocalizedString("CasHealthOwaGetLogoffSucceeded", "Ex5DE9E7", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700307B RID: 12411
		// (get) Token: 0x060096C1 RID: 38593 RVA: 0x002603D9 File Offset: 0x0025E5D9
		public static LocalizedString InfoRacAndClc
		{
			get
			{
				return new LocalizedString("InfoRacAndClc", "Ex1747D3", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060096C2 RID: 38594 RVA: 0x002603F8 File Offset: 0x0025E5F8
		public static LocalizedString ErrorServerNotE14OrLater(string server)
		{
			return new LocalizedString("ErrorServerNotE14OrLater", "ExC1ECB8", false, true, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		// Token: 0x060096C3 RID: 38595 RVA: 0x00260428 File Offset: 0x0025E628
		public static LocalizedString ErrorInvalidAuthServerRealm(string realm)
		{
			return new LocalizedString("ErrorInvalidAuthServerRealm", "", false, false, Strings.ResourceManager, new object[]
			{
				realm
			});
		}

		// Token: 0x060096C4 RID: 38596 RVA: 0x00260458 File Offset: 0x0025E658
		public static LocalizedString DisableMailForestContactNotAllowed(string name)
		{
			return new LocalizedString("DisableMailForestContactNotAllowed", "Ex27B63E", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x060096C5 RID: 38597 RVA: 0x00260488 File Offset: 0x0025E688
		public static LocalizedString NoSystemProbesFound(DateTime start, DateTime end)
		{
			return new LocalizedString("NoSystemProbesFound", "", false, false, Strings.ResourceManager, new object[]
			{
				start,
				end
			});
		}

		// Token: 0x060096C6 RID: 38598 RVA: 0x002604C8 File Offset: 0x0025E6C8
		public static LocalizedString ErrorRoleAssignmentPolicyNotUnique(string idStringValue)
		{
			return new LocalizedString("ErrorRoleAssignmentPolicyNotUnique", "Ex03DE94", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		// Token: 0x1700307C RID: 12412
		// (get) Token: 0x060096C7 RID: 38599 RVA: 0x002604F7 File Offset: 0x0025E6F7
		public static LocalizedString ConfirmationMessageSetAuthConfig
		{
			get
			{
				return new LocalizedString("ConfirmationMessageSetAuthConfig", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060096C8 RID: 38600 RVA: 0x00260518 File Offset: 0x0025E718
		public static LocalizedString LogSourceMailboxRemoved(string id)
		{
			return new LocalizedString("LogSourceMailboxRemoved", "ExD7615D", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x060096C9 RID: 38601 RVA: 0x00260548 File Offset: 0x0025E748
		public static LocalizedString FailToAddServerAdminToLocalAdminGroup(string user, string exceptionMessage)
		{
			return new LocalizedString("FailToAddServerAdminToLocalAdminGroup", "Ex9D6189", false, true, Strings.ResourceManager, new object[]
			{
				user,
				exceptionMessage
			});
		}

		// Token: 0x1700307D RID: 12413
		// (get) Token: 0x060096CA RID: 38602 RVA: 0x0026057B File Offset: 0x0025E77B
		public static LocalizedString CatalogDoesntExist
		{
			get
			{
				return new LocalizedString("CatalogDoesntExist", "ExFCE04C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700307E RID: 12414
		// (get) Token: 0x060096CB RID: 38603 RVA: 0x00260599 File Offset: 0x0025E799
		public static LocalizedString ErrorAuthServiceNameNotBlank
		{
			get
			{
				return new LocalizedString("ErrorAuthServiceNameNotBlank", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700307F RID: 12415
		// (get) Token: 0x060096CC RID: 38604 RVA: 0x002605B7 File Offset: 0x0025E7B7
		public static LocalizedString ConfirmationMessageSetSenderReputationConfig
		{
			get
			{
				return new LocalizedString("ConfirmationMessageSetSenderReputationConfig", "ExC349DF", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060096CD RID: 38605 RVA: 0x002605D8 File Offset: 0x0025E7D8
		public static LocalizedString UMCallAnsweringRuleTransferToWithContext(string context, int key, string number)
		{
			return new LocalizedString("UMCallAnsweringRuleTransferToWithContext", "", false, false, Strings.ResourceManager, new object[]
			{
				context,
				key,
				number
			});
		}

		// Token: 0x060096CE RID: 38606 RVA: 0x00260614 File Offset: 0x0025E814
		public static LocalizedString ErrorMailboxFolderNotUnique(string id)
		{
			return new LocalizedString("ErrorMailboxFolderNotUnique", "Ex32BB2B", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x17003080 RID: 12416
		// (get) Token: 0x060096CF RID: 38607 RVA: 0x00260643 File Offset: 0x0025E843
		public static LocalizedString SetupComponentPreSetupBridgehead
		{
			get
			{
				return new LocalizedString("SetupComponentPreSetupBridgehead", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060096D0 RID: 38608 RVA: 0x00260664 File Offset: 0x0025E864
		public static LocalizedString ReplicationCheckGeneralFail(string checkTitle, string errorMessage)
		{
			return new LocalizedString("ReplicationCheckGeneralFail", "Ex5BA2A8", false, true, Strings.ResourceManager, new object[]
			{
				checkTitle,
				errorMessage
			});
		}

		// Token: 0x060096D1 RID: 38609 RVA: 0x00260698 File Offset: 0x0025E898
		public static LocalizedString ConfirmationMessageExportRecipientDataProperty(string recipient)
		{
			return new LocalizedString("ConfirmationMessageExportRecipientDataProperty", "Ex4A22E8", false, true, Strings.ResourceManager, new object[]
			{
				recipient
			});
		}

		// Token: 0x060096D2 RID: 38610 RVA: 0x002606C8 File Offset: 0x0025E8C8
		public static LocalizedString ErrorFileIsTooLargeForFingerprint(int fileSize, int max)
		{
			return new LocalizedString("ErrorFileIsTooLargeForFingerprint", "", false, false, Strings.ResourceManager, new object[]
			{
				fileSize,
				max
			});
		}

		// Token: 0x17003081 RID: 12417
		// (get) Token: 0x060096D3 RID: 38611 RVA: 0x00260705 File Offset: 0x0025E905
		public static LocalizedString ProcessUtilizationManagerServiceDisplayName
		{
			get
			{
				return new LocalizedString("ProcessUtilizationManagerServiceDisplayName", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060096D4 RID: 38612 RVA: 0x00260724 File Offset: 0x0025E924
		public static LocalizedString ProgressEmailAddressPolicyAdjustingPriority(string id)
		{
			return new LocalizedString("ProgressEmailAddressPolicyAdjustingPriority", "Ex69DABC", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x17003082 RID: 12418
		// (get) Token: 0x060096D5 RID: 38613 RVA: 0x00260753 File Offset: 0x0025E953
		public static LocalizedString PromptToOverwriteDlpPoliciesOnImport
		{
			get
			{
				return new LocalizedString("PromptToOverwriteDlpPoliciesOnImport", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060096D6 RID: 38614 RVA: 0x00260774 File Offset: 0x0025E974
		public static LocalizedString ConfirmationMessageSetTransportRule(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetTransportRule", "Ex9097E5", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x17003083 RID: 12419
		// (get) Token: 0x060096D7 RID: 38615 RVA: 0x002607A3 File Offset: 0x0025E9A3
		public static LocalizedString NewReceiveConnectorAddingPermissionsDoneMsg
		{
			get
			{
				return new LocalizedString("NewReceiveConnectorAddingPermissionsDoneMsg", "ExC81382", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060096D8 RID: 38616 RVA: 0x002607C1 File Offset: 0x0025E9C1
		public static LocalizedString VerboseMultiSiteDCContact(string[] dcNames)
		{
			return new LocalizedString("VerboseMultiSiteDCContact", "Ex4ADB3D", false, true, Strings.ResourceManager, dcNames);
		}

		// Token: 0x060096D9 RID: 38617 RVA: 0x002607DC File Offset: 0x0025E9DC
		public static LocalizedString ErrorUsersNotInSameOrganization(string src, string tgt)
		{
			return new LocalizedString("ErrorUsersNotInSameOrganization", "ExFDED7A", false, true, Strings.ResourceManager, new object[]
			{
				src,
				tgt
			});
		}

		// Token: 0x17003084 RID: 12420
		// (get) Token: 0x060096DA RID: 38618 RVA: 0x0026080F File Offset: 0x0025EA0F
		public static LocalizedString MessageTraceMinimumCriteriaFieldsInErrorDeliveryStatus
		{
			get
			{
				return new LocalizedString("MessageTraceMinimumCriteriaFieldsInErrorDeliveryStatus", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060096DB RID: 38619 RVA: 0x00260830 File Offset: 0x0025EA30
		public static LocalizedString TestSearchActiveManager(string MDB, string error)
		{
			return new LocalizedString("TestSearchActiveManager", "Ex9B7B53", false, true, Strings.ResourceManager, new object[]
			{
				MDB,
				error
			});
		}

		// Token: 0x060096DC RID: 38620 RVA: 0x00260864 File Offset: 0x0025EA64
		public static LocalizedString ErrorSimilarResourcePolicyExist(string wlmPolicy, string type)
		{
			return new LocalizedString("ErrorSimilarResourcePolicyExist", "", false, false, Strings.ResourceManager, new object[]
			{
				wlmPolicy,
				type
			});
		}

		// Token: 0x060096DD RID: 38621 RVA: 0x00260898 File Offset: 0x0025EA98
		public static LocalizedString VerboseDeletePFProxy(string id)
		{
			return new LocalizedString("VerboseDeletePFProxy", "Ex340337", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x060096DE RID: 38622 RVA: 0x002608C8 File Offset: 0x0025EAC8
		public static LocalizedString FailedToJoinNode(string nodeName, string dagName, string error)
		{
			return new LocalizedString("FailedToJoinNode", "Ex43C278", false, true, Strings.ResourceManager, new object[]
			{
				nodeName,
				dagName,
				error
			});
		}

		// Token: 0x17003085 RID: 12421
		// (get) Token: 0x060096DF RID: 38623 RVA: 0x002608FF File Offset: 0x0025EAFF
		public static LocalizedString UninstallClientAccessRoleDescription
		{
			get
			{
				return new LocalizedString("UninstallClientAccessRoleDescription", "ExCF221F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003086 RID: 12422
		// (get) Token: 0x060096E0 RID: 38624 RVA: 0x0026091D File Offset: 0x0025EB1D
		public static LocalizedString SetupComponentConfiguringDatacenterMailbox
		{
			get
			{
				return new LocalizedString("SetupComponentConfiguringDatacenterMailbox", "Ex8821B5", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003087 RID: 12423
		// (get) Token: 0x060096E1 RID: 38625 RVA: 0x0026093B File Offset: 0x0025EB3B
		public static LocalizedString UserNotInAd
		{
			get
			{
				return new LocalizedString("UserNotInAd", "Ex8BA2A7", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003088 RID: 12424
		// (get) Token: 0x060096E2 RID: 38626 RVA: 0x00260959 File Offset: 0x0025EB59
		public static LocalizedString SendConnectorInvalidSourceIPAddress
		{
			get
			{
				return new LocalizedString("SendConnectorInvalidSourceIPAddress", "Ex595BB2", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060096E3 RID: 38627 RVA: 0x00260978 File Offset: 0x0025EB78
		public static LocalizedString VerboseOfflineDatabaseResource(string id, string server)
		{
			return new LocalizedString("VerboseOfflineDatabaseResource", "Ex885C6B", false, true, Strings.ResourceManager, new object[]
			{
				id,
				server
			});
		}

		// Token: 0x060096E4 RID: 38628 RVA: 0x002609AC File Offset: 0x0025EBAC
		public static LocalizedString MonitoringServiceRequestTimedout(string machineName, TimeSpan timeout)
		{
			return new LocalizedString("MonitoringServiceRequestTimedout", "", false, false, Strings.ResourceManager, new object[]
			{
				machineName,
				timeout
			});
		}

		// Token: 0x060096E5 RID: 38629 RVA: 0x002609E4 File Offset: 0x0025EBE4
		public static LocalizedString ConfirmationMessageSetCalendarNotification(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetCalendarNotification", "ExDE0887", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x060096E6 RID: 38630 RVA: 0x00260A14 File Offset: 0x0025EC14
		public static LocalizedString ErrorNoAvailableDefaultName(string mbx)
		{
			return new LocalizedString("ErrorNoAvailableDefaultName", "Ex057E0B", false, true, Strings.ResourceManager, new object[]
			{
				mbx
			});
		}

		// Token: 0x17003089 RID: 12425
		// (get) Token: 0x060096E7 RID: 38631 RVA: 0x00260A43 File Offset: 0x0025EC43
		public static LocalizedString WarningDelegatesExceededOutlookLimit
		{
			get
			{
				return new LocalizedString("WarningDelegatesExceededOutlookLimit", "ExF23CF8", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700308A RID: 12426
		// (get) Token: 0x060096E8 RID: 38632 RVA: 0x00260A61 File Offset: 0x0025EC61
		public static LocalizedString PatternContainsLeadingTrailingWhiteSpace
		{
			get
			{
				return new LocalizedString("PatternContainsLeadingTrailingWhiteSpace", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060096E9 RID: 38633 RVA: 0x00260A80 File Offset: 0x0025EC80
		public static LocalizedString MigrationEndpointNotFound(string identity)
		{
			return new LocalizedString("MigrationEndpointNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x060096EA RID: 38634 RVA: 0x00260AB0 File Offset: 0x0025ECB0
		public static LocalizedString GetDbcsRpcQueryAllDone(int count)
		{
			return new LocalizedString("GetDbcsRpcQueryAllDone", "Ex31E483", false, true, Strings.ResourceManager, new object[]
			{
				count
			});
		}

		// Token: 0x060096EB RID: 38635 RVA: 0x00260AE4 File Offset: 0x0025ECE4
		public static LocalizedString ConfirmationMessageNewGroupMailbox(string Name, string UserPrincipalName, string OrganizationalUnit)
		{
			return new LocalizedString("ConfirmationMessageNewGroupMailbox", "", false, false, Strings.ResourceManager, new object[]
			{
				Name,
				UserPrincipalName,
				OrganizationalUnit
			});
		}

		// Token: 0x1700308B RID: 12427
		// (get) Token: 0x060096EC RID: 38636 RVA: 0x00260B1B File Offset: 0x0025ED1B
		public static LocalizedString DuplicateInitialDomain
		{
			get
			{
				return new LocalizedString("DuplicateInitialDomain", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060096ED RID: 38637 RVA: 0x00260B3C File Offset: 0x0025ED3C
		public static LocalizedString AmInvalidRoleStandaloneServer(string machineName)
		{
			return new LocalizedString("AmInvalidRoleStandaloneServer", "ExB67BCF", false, true, Strings.ResourceManager, new object[]
			{
				machineName
			});
		}

		// Token: 0x1700308C RID: 12428
		// (get) Token: 0x060096EE RID: 38638 RVA: 0x00260B6B File Offset: 0x0025ED6B
		public static LocalizedString AddressRewriteUnrecognizedAddress
		{
			get
			{
				return new LocalizedString("AddressRewriteUnrecognizedAddress", "Ex86A4AA", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700308D RID: 12429
		// (get) Token: 0x060096EF RID: 38639 RVA: 0x00260B89 File Offset: 0x0025ED89
		public static LocalizedString AmbiguousDatabaseAndExchangeServerParameters
		{
			get
			{
				return new LocalizedString("AmbiguousDatabaseAndExchangeServerParameters", "Ex1B35FB", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060096F0 RID: 38640 RVA: 0x00260BA8 File Offset: 0x0025EDA8
		public static LocalizedString VerboseRollbackPublicFolderReferralChange(string idServer)
		{
			return new LocalizedString("VerboseRollbackPublicFolderReferralChange", "Ex644161", false, true, Strings.ResourceManager, new object[]
			{
				idServer
			});
		}

		// Token: 0x060096F1 RID: 38641 RVA: 0x00260BD8 File Offset: 0x0025EDD8
		public static LocalizedString ErrorFailToParseLocalLongFullPath(string objectIdentity, string propertyName, string path, string error)
		{
			return new LocalizedString("ErrorFailToParseLocalLongFullPath", "Ex084B35", false, true, Strings.ResourceManager, new object[]
			{
				objectIdentity,
				propertyName,
				path,
				error
			});
		}

		// Token: 0x060096F2 RID: 38642 RVA: 0x00260C14 File Offset: 0x0025EE14
		public static LocalizedString ErrorArchiveDatabaseDoesNotMatchUser(string archiveDb, string userDb)
		{
			return new LocalizedString("ErrorArchiveDatabaseDoesNotMatchUser", "Ex836446", false, true, Strings.ResourceManager, new object[]
			{
				archiveDb,
				userDb
			});
		}

		// Token: 0x060096F3 RID: 38643 RVA: 0x00260C48 File Offset: 0x0025EE48
		public static LocalizedString ErrorNotMsoOrganization(string orgId)
		{
			return new LocalizedString("ErrorNotMsoOrganization", "Ex6E1098", false, true, Strings.ResourceManager, new object[]
			{
				orgId
			});
		}

		// Token: 0x1700308E RID: 12430
		// (get) Token: 0x060096F4 RID: 38644 RVA: 0x00260C77 File Offset: 0x0025EE77
		public static LocalizedString ADAttributeOffice
		{
			get
			{
				return new LocalizedString("ADAttributeOffice", "Ex352624", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700308F RID: 12431
		// (get) Token: 0x060096F5 RID: 38645 RVA: 0x00260C95 File Offset: 0x0025EE95
		public static LocalizedString ExportCertificateAs12KeyNotExportable
		{
			get
			{
				return new LocalizedString("ExportCertificateAs12KeyNotExportable", "ExD98E0B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060096F6 RID: 38646 RVA: 0x00260CB4 File Offset: 0x0025EEB4
		public static LocalizedString WarningSourceServersSkipped(string serverNames)
		{
			return new LocalizedString("WarningSourceServersSkipped", "", false, false, Strings.ResourceManager, new object[]
			{
				serverNames
			});
		}

		// Token: 0x060096F7 RID: 38647 RVA: 0x00260CE4 File Offset: 0x0025EEE4
		public static LocalizedString SupervisionPoliciesNotFound(string policies)
		{
			return new LocalizedString("SupervisionPoliciesNotFound", "Ex5BDBEC", false, true, Strings.ResourceManager, new object[]
			{
				policies
			});
		}

		// Token: 0x17003090 RID: 12432
		// (get) Token: 0x060096F8 RID: 38648 RVA: 0x00260D13 File Offset: 0x0025EF13
		public static LocalizedString InvalidParamSpecifyIdentityOrDagException
		{
			get
			{
				return new LocalizedString("InvalidParamSpecifyIdentityOrDagException", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003091 RID: 12433
		// (get) Token: 0x060096F9 RID: 38649 RVA: 0x00260D31 File Offset: 0x0025EF31
		public static LocalizedString StartingW3SVC
		{
			get
			{
				return new LocalizedString("StartingW3SVC", "Ex3441AE", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060096FA RID: 38650 RVA: 0x00260D50 File Offset: 0x0025EF50
		public static LocalizedString ErrorArchiveCanNotBeDownVersion(string archiveDatabase, string primaryDatabase)
		{
			return new LocalizedString("ErrorArchiveCanNotBeDownVersion", "", false, false, Strings.ResourceManager, new object[]
			{
				archiveDatabase,
				primaryDatabase
			});
		}

		// Token: 0x17003092 RID: 12434
		// (get) Token: 0x060096FB RID: 38651 RVA: 0x00260D83 File Offset: 0x0025EF83
		public static LocalizedString MigrationWorkflowServiceDisplayName
		{
			get
			{
				return new LocalizedString("MigrationWorkflowServiceDisplayName", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060096FC RID: 38652 RVA: 0x00260DA4 File Offset: 0x0025EFA4
		public static LocalizedString ConfirmationMessageRemoveRecipientEnforcementProvisioningPolicy(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveRecipientEnforcementProvisioningPolicy", "ExCC9C61", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x17003093 RID: 12435
		// (get) Token: 0x060096FD RID: 38653 RVA: 0x00260DD3 File Offset: 0x0025EFD3
		public static LocalizedString Imap4ServiceDisplayName
		{
			get
			{
				return new LocalizedString("Imap4ServiceDisplayName", "Ex111E5B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060096FE RID: 38654 RVA: 0x00260DF4 File Offset: 0x0025EFF4
		public static LocalizedString CrossPremiseProbeResponseMatch(string source, string target)
		{
			return new LocalizedString("CrossPremiseProbeResponseMatch", "ExA3A122", false, true, Strings.ResourceManager, new object[]
			{
				source,
				target
			});
		}

		// Token: 0x17003094 RID: 12436
		// (get) Token: 0x060096FF RID: 38655 RVA: 0x00260E27 File Offset: 0x0025F027
		public static LocalizedString ProvisioningRequestCorrupted
		{
			get
			{
				return new LocalizedString("ProvisioningRequestCorrupted", "Ex7CE2E7", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003095 RID: 12437
		// (get) Token: 0x06009700 RID: 38656 RVA: 0x00260E45 File Offset: 0x0025F045
		public static LocalizedString MapiTransactionErrorMsgNoMailbox
		{
			get
			{
				return new LocalizedString("MapiTransactionErrorMsgNoMailbox", "Ex9BE761", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003096 RID: 12438
		// (get) Token: 0x06009701 RID: 38657 RVA: 0x00260E63 File Offset: 0x0025F063
		public static LocalizedString InPlaceHoldNotAllowedForPublicFolders
		{
			get
			{
				return new LocalizedString("InPlaceHoldNotAllowedForPublicFolders", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009702 RID: 38658 RVA: 0x00260E84 File Offset: 0x0025F084
		public static LocalizedString ServiceReachedStatusDuringWait(string servicename, string status)
		{
			return new LocalizedString("ServiceReachedStatusDuringWait", "ExE105D6", false, true, Strings.ResourceManager, new object[]
			{
				servicename,
				status
			});
		}

		// Token: 0x06009703 RID: 38659 RVA: 0x00260EB8 File Offset: 0x0025F0B8
		public static LocalizedString ErrorNoValidPhones(string contact)
		{
			return new LocalizedString("ErrorNoValidPhones", "", false, false, Strings.ResourceManager, new object[]
			{
				contact
			});
		}

		// Token: 0x17003097 RID: 12439
		// (get) Token: 0x06009704 RID: 38660 RVA: 0x00260EE7 File Offset: 0x0025F0E7
		public static LocalizedString SetupProgressGALEnabled
		{
			get
			{
				return new LocalizedString("SetupProgressGALEnabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003098 RID: 12440
		// (get) Token: 0x06009705 RID: 38661 RVA: 0x00260F05 File Offset: 0x0025F105
		public static LocalizedString CasHealthTestMultipleMailboxServersFound
		{
			get
			{
				return new LocalizedString("CasHealthTestMultipleMailboxServersFound", "ExB2B2A9", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003099 RID: 12441
		// (get) Token: 0x06009706 RID: 38662 RVA: 0x00260F23 File Offset: 0x0025F123
		public static LocalizedString ErrorTooManyGALsCreated
		{
			get
			{
				return new LocalizedString("ErrorTooManyGALsCreated", "Ex35CBD6", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009707 RID: 38663 RVA: 0x00260F44 File Offset: 0x0025F144
		public static LocalizedString InvalidThumbprintFormat(string thumbprint)
		{
			return new LocalizedString("InvalidThumbprintFormat", "Ex20D263", false, true, Strings.ResourceManager, new object[]
			{
				thumbprint
			});
		}

		// Token: 0x1700309A RID: 12442
		// (get) Token: 0x06009708 RID: 38664 RVA: 0x00260F73 File Offset: 0x0025F173
		public static LocalizedString AddOutlookTenantAcceptedDomains
		{
			get
			{
				return new LocalizedString("AddOutlookTenantAcceptedDomains", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700309B RID: 12443
		// (get) Token: 0x06009709 RID: 38665 RVA: 0x00260F91 File Offset: 0x0025F191
		public static LocalizedString CannotRemoveSendConnectorCertificate
		{
			get
			{
				return new LocalizedString("CannotRemoveSendConnectorCertificate", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600970A RID: 38666 RVA: 0x00260FB0 File Offset: 0x0025F1B0
		public static LocalizedString LogSourceRecipient(string type, string id, string alias, string externalEmailAddress, string legacyDN, string primarySmtpAddress, string emailAddresses)
		{
			return new LocalizedString("LogSourceRecipient", "Ex54830F", false, true, Strings.ResourceManager, new object[]
			{
				type,
				id,
				alias,
				externalEmailAddress,
				legacyDN,
				primarySmtpAddress,
				emailAddresses
			});
		}

		// Token: 0x0600970B RID: 38667 RVA: 0x00260FFC File Offset: 0x0025F1FC
		public static LocalizedString DataClassificationFingerprintsDuplicated(string name)
		{
			return new LocalizedString("DataClassificationFingerprintsDuplicated", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x1700309C RID: 12444
		// (get) Token: 0x0600970C RID: 38668 RVA: 0x0026102B File Offset: 0x0025F22B
		public static LocalizedString CopyStatusSeedingSource
		{
			get
			{
				return new LocalizedString("CopyStatusSeedingSource", "Ex76DB7C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700309D RID: 12445
		// (get) Token: 0x0600970D RID: 38669 RVA: 0x00261049 File Offset: 0x0025F249
		public static LocalizedString SetOpenDomainRoutingOnHotmailMigrateDomain
		{
			get
			{
				return new LocalizedString("SetOpenDomainRoutingOnHotmailMigrateDomain", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600970E RID: 38670 RVA: 0x00261068 File Offset: 0x0025F268
		public static LocalizedString EMailAddressNotFound(string s)
		{
			return new LocalizedString("EMailAddressNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				s
			});
		}

		// Token: 0x1700309E RID: 12446
		// (get) Token: 0x0600970F RID: 38671 RVA: 0x00261097 File Offset: 0x0025F297
		public static LocalizedString ErrorSystemFolderPathNotUniqueUnderTheSameNode
		{
			get
			{
				return new LocalizedString("ErrorSystemFolderPathNotUniqueUnderTheSameNode", "ExED7F68", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009710 RID: 38672 RVA: 0x002610B8 File Offset: 0x0025F2B8
		public static LocalizedString DagNetTaskIsManualOnly(string taskName, string dagName)
		{
			return new LocalizedString("DagNetTaskIsManualOnly", "", false, false, Strings.ResourceManager, new object[]
			{
				taskName,
				dagName
			});
		}

		// Token: 0x1700309F RID: 12447
		// (get) Token: 0x06009711 RID: 38673 RVA: 0x002610EB File Offset: 0x0025F2EB
		public static LocalizedString CannotLocateWebRequestorEndpoint
		{
			get
			{
				return new LocalizedString("CannotLocateWebRequestorEndpoint", "Ex225B59", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009712 RID: 38674 RVA: 0x0026110C File Offset: 0x0025F30C
		public static LocalizedString DiscoveringAdditionalDomain(string domain)
		{
			return new LocalizedString("DiscoveringAdditionalDomain", "Ex8C05AA", false, true, Strings.ResourceManager, new object[]
			{
				domain
			});
		}

		// Token: 0x06009713 RID: 38675 RVA: 0x0026113C File Offset: 0x0025F33C
		public static LocalizedString ISIntegCorruptionFormat(string corruptionType, bool corruptionFixed)
		{
			return new LocalizedString("ISIntegCorruptionFormat", "", false, false, Strings.ResourceManager, new object[]
			{
				corruptionType,
				corruptionFixed
			});
		}

		// Token: 0x06009714 RID: 38676 RVA: 0x00261174 File Offset: 0x0025F374
		public static LocalizedString ErrorWhileFolderSyncForUpdation(string folderId)
		{
			return new LocalizedString("ErrorWhileFolderSyncForUpdation", "", false, false, Strings.ResourceManager, new object[]
			{
				folderId
			});
		}

		// Token: 0x170030A0 RID: 12448
		// (get) Token: 0x06009715 RID: 38677 RVA: 0x002611A3 File Offset: 0x0025F3A3
		public static LocalizedString ErrorSiteNotSpecifiedAndLocalSiteNotFound
		{
			get
			{
				return new LocalizedString("ErrorSiteNotSpecifiedAndLocalSiteNotFound", "ExB4AD2E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009716 RID: 38678 RVA: 0x002611C4 File Offset: 0x0025F3C4
		public static LocalizedString IisTasksReadRegistryKeySecurityException(string key)
		{
			return new LocalizedString("IisTasksReadRegistryKeySecurityException", "Ex83CC6D", false, true, Strings.ResourceManager, new object[]
			{
				key
			});
		}

		// Token: 0x06009717 RID: 38679 RVA: 0x002611F4 File Offset: 0x0025F3F4
		public static LocalizedString WarningInvalidDedicatedMailboxPlanData(string mailboxPlanData)
		{
			return new LocalizedString("WarningInvalidDedicatedMailboxPlanData", "", false, false, Strings.ResourceManager, new object[]
			{
				mailboxPlanData
			});
		}

		// Token: 0x06009718 RID: 38680 RVA: 0x00261224 File Offset: 0x0025F424
		public static LocalizedString ErrorOrganizationNotUpgradable(string indentity, string status)
		{
			return new LocalizedString("ErrorOrganizationNotUpgradable", "Ex411143", false, true, Strings.ResourceManager, new object[]
			{
				indentity,
				status
			});
		}

		// Token: 0x06009719 RID: 38681 RVA: 0x00261258 File Offset: 0x0025F458
		public static LocalizedString ExistingProductConfiguration(string productCodeString, string propertyValues)
		{
			return new LocalizedString("ExistingProductConfiguration", "Ex5ADF60", false, true, Strings.ResourceManager, new object[]
			{
				productCodeString,
				propertyValues
			});
		}

		// Token: 0x170030A1 RID: 12449
		// (get) Token: 0x0600971A RID: 38682 RVA: 0x0026128B File Offset: 0x0025F48B
		public static LocalizedString TransportSyncManagerServiceNotUninstalled
		{
			get
			{
				return new LocalizedString("TransportSyncManagerServiceNotUninstalled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170030A2 RID: 12450
		// (get) Token: 0x0600971B RID: 38683 RVA: 0x002612A9 File Offset: 0x0025F4A9
		public static LocalizedString InstallExchangeStreamingOpticsTask
		{
			get
			{
				return new LocalizedString("InstallExchangeStreamingOpticsTask", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170030A3 RID: 12451
		// (get) Token: 0x0600971C RID: 38684 RVA: 0x002612C7 File Offset: 0x0025F4C7
		public static LocalizedString MountStatusDismounted
		{
			get
			{
				return new LocalizedString("MountStatusDismounted", "Ex8BD00A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600971D RID: 38685 RVA: 0x002612E8 File Offset: 0x0025F4E8
		public static LocalizedString ErrorPublicFolderReferralServerIsNotMailboxServer(string server)
		{
			return new LocalizedString("ErrorPublicFolderReferralServerIsNotMailboxServer", "ExE77BFF", false, true, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		// Token: 0x170030A4 RID: 12452
		// (get) Token: 0x0600971E RID: 38686 RVA: 0x00261317 File Offset: 0x0025F517
		public static LocalizedString AutoDiscoverIsNotSetInOrgRelationship
		{
			get
			{
				return new LocalizedString("AutoDiscoverIsNotSetInOrgRelationship", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600971F RID: 38687 RVA: 0x00261338 File Offset: 0x0025F538
		public static LocalizedString ErrorRecoveryItemNotFoundByIdentity(string identity)
		{
			return new LocalizedString("ErrorRecoveryItemNotFoundByIdentity", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x06009720 RID: 38688 RVA: 0x00261368 File Offset: 0x0025F568
		public static LocalizedString DagNetworkDistinctSubnetListError(string subnetId1, string subnetId2)
		{
			return new LocalizedString("DagNetworkDistinctSubnetListError", "Ex5ABFD2", false, true, Strings.ResourceManager, new object[]
			{
				subnetId1,
				subnetId2
			});
		}

		// Token: 0x06009721 RID: 38689 RVA: 0x0026139C File Offset: 0x0025F59C
		public static LocalizedString ErrorNewRemoveRoleAssignmentNeedHierarchicalRoleAssignment(string id, string roleId)
		{
			return new LocalizedString("ErrorNewRemoveRoleAssignmentNeedHierarchicalRoleAssignment", "ExD01C5A", false, true, Strings.ResourceManager, new object[]
			{
				id,
				roleId
			});
		}

		// Token: 0x06009722 RID: 38690 RVA: 0x002613D0 File Offset: 0x0025F5D0
		public static LocalizedString ErrorResultSizeOutOfRange(string min, string max)
		{
			return new LocalizedString("ErrorResultSizeOutOfRange", "ExEA0D2D", false, true, Strings.ResourceManager, new object[]
			{
				min,
				max
			});
		}

		// Token: 0x06009723 RID: 38691 RVA: 0x00261404 File Offset: 0x0025F604
		public static LocalizedString ErrorVerifyLinkedForest(string message)
		{
			return new LocalizedString("ErrorVerifyLinkedForest", "Ex908DA0", false, true, Strings.ResourceManager, new object[]
			{
				message
			});
		}

		// Token: 0x170030A5 RID: 12453
		// (get) Token: 0x06009724 RID: 38692 RVA: 0x00261433 File Offset: 0x0025F633
		public static LocalizedString ExchangeSettingsGuidUsage
		{
			get
			{
				return new LocalizedString("ExchangeSettingsGuidUsage", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009725 RID: 38693 RVA: 0x00261454 File Offset: 0x0025F654
		public static LocalizedString VerboseSelectedTextStream(int length, string content)
		{
			return new LocalizedString("VerboseSelectedTextStream", "", false, false, Strings.ResourceManager, new object[]
			{
				length,
				content
			});
		}

		// Token: 0x06009726 RID: 38694 RVA: 0x0026148C File Offset: 0x0025F68C
		public static LocalizedString SeederPrepareDbSeedRpcBegin(string taskName, string targetMachine)
		{
			return new LocalizedString("SeederPrepareDbSeedRpcBegin", "Ex2BCF3A", false, true, Strings.ResourceManager, new object[]
			{
				taskName,
				targetMachine
			});
		}

		// Token: 0x170030A6 RID: 12454
		// (get) Token: 0x06009727 RID: 38695 RVA: 0x002614BF File Offset: 0x0025F6BF
		public static LocalizedString ExternalRelayDomainsAreNotAllowedInDatacenterAndFfo
		{
			get
			{
				return new LocalizedString("ExternalRelayDomainsAreNotAllowedInDatacenterAndFfo", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009728 RID: 38696 RVA: 0x002614E0 File Offset: 0x0025F6E0
		public static LocalizedString ErrorFolderNotExist(string folder)
		{
			return new LocalizedString("ErrorFolderNotExist", "", false, false, Strings.ResourceManager, new object[]
			{
				folder
			});
		}

		// Token: 0x06009729 RID: 38697 RVA: 0x00261510 File Offset: 0x0025F710
		public static LocalizedString TestSearchServerNoMdbs(string serverName)
		{
			return new LocalizedString("TestSearchServerNoMdbs", "ExD8D7EB", false, true, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		// Token: 0x0600972A RID: 38698 RVA: 0x00261540 File Offset: 0x0025F740
		public static LocalizedString ErrorPropertyTypeNotUnique(string idStringValue)
		{
			return new LocalizedString("ErrorPropertyTypeNotUnique", "ExAE1CD6", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		// Token: 0x170030A7 RID: 12455
		// (get) Token: 0x0600972B RID: 38699 RVA: 0x0026156F File Offset: 0x0025F76F
		public static LocalizedString ComplianceSearchInitializingMessage
		{
			get
			{
				return new LocalizedString("ComplianceSearchInitializingMessage", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600972C RID: 38700 RVA: 0x00261590 File Offset: 0x0025F790
		public static LocalizedString UnableToGetProcessIdOfService(string serviceName, string exception)
		{
			return new LocalizedString("UnableToGetProcessIdOfService", "Ex974076", false, true, Strings.ResourceManager, new object[]
			{
				serviceName,
				exception
			});
		}

		// Token: 0x0600972D RID: 38701 RVA: 0x002615C4 File Offset: 0x0025F7C4
		public static LocalizedString FailedToSaveCorruptServerException(string fqdn, string error)
		{
			return new LocalizedString("FailedToSaveCorruptServerException", "ExBC9651", false, true, Strings.ResourceManager, new object[]
			{
				fqdn,
				error
			});
		}

		// Token: 0x0600972E RID: 38702 RVA: 0x002615F8 File Offset: 0x0025F7F8
		public static LocalizedString CatchAllRecipientNotUnique(RecipientIdParameter name)
		{
			return new LocalizedString("CatchAllRecipientNotUnique", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x0600972F RID: 38703 RVA: 0x00261628 File Offset: 0x0025F828
		public static LocalizedString ErrorDuplicateActiveOrganizationExists(string name)
		{
			return new LocalizedString("ErrorDuplicateActiveOrganizationExists", "ExB8565B", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x06009730 RID: 38704 RVA: 0x00261658 File Offset: 0x0025F858
		public static LocalizedString InvalidRegex(string regex)
		{
			return new LocalizedString("InvalidRegex", "", false, false, Strings.ResourceManager, new object[]
			{
				regex
			});
		}

		// Token: 0x06009731 RID: 38705 RVA: 0x00261688 File Offset: 0x0025F888
		public static LocalizedString SiteMailboxCreatorSet(string creator)
		{
			return new LocalizedString("SiteMailboxCreatorSet", "", false, false, Strings.ResourceManager, new object[]
			{
				creator
			});
		}

		// Token: 0x170030A8 RID: 12456
		// (get) Token: 0x06009732 RID: 38706 RVA: 0x002616B7 File Offset: 0x0025F8B7
		public static LocalizedString ServerNotHubOrEdge
		{
			get
			{
				return new LocalizedString("ServerNotHubOrEdge", "Ex5724F2", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170030A9 RID: 12457
		// (get) Token: 0x06009733 RID: 38707 RVA: 0x002616D5 File Offset: 0x0025F8D5
		public static LocalizedString ErrorCannotProvideNetIDAndSmtpAddress
		{
			get
			{
				return new LocalizedString("ErrorCannotProvideNetIDAndSmtpAddress", "ExA21886", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170030AA RID: 12458
		// (get) Token: 0x06009734 RID: 38708 RVA: 0x002616F3 File Offset: 0x0025F8F3
		public static LocalizedString SetupProgressRemovingAdamInstance
		{
			get
			{
				return new LocalizedString("SetupProgressRemovingAdamInstance", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009735 RID: 38709 RVA: 0x00261714 File Offset: 0x0025F914
		public static LocalizedString ErrorReadDatabaseSecurityDescriptor(string identity)
		{
			return new LocalizedString("ErrorReadDatabaseSecurityDescriptor", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x06009736 RID: 38710 RVA: 0x00261744 File Offset: 0x0025F944
		public static LocalizedString ErrorTeamMailboxCanNotUnLinkSharePointByNonSiteOwner(string site)
		{
			return new LocalizedString("ErrorTeamMailboxCanNotUnLinkSharePointByNonSiteOwner", "", false, false, Strings.ResourceManager, new object[]
			{
				site
			});
		}

		// Token: 0x06009737 RID: 38711 RVA: 0x00261774 File Offset: 0x0025F974
		public static LocalizedString ErrorNotificationPhoneNumberAbsent(string identity)
		{
			return new LocalizedString("ErrorNotificationPhoneNumberAbsent", "Ex77C835", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x06009738 RID: 38712 RVA: 0x002617A4 File Offset: 0x0025F9A4
		public static LocalizedString ErrorFailToCreateExchangeAdministratorsGroup(string groupType, string container, string memberOperated, string exception)
		{
			return new LocalizedString("ErrorFailToCreateExchangeAdministratorsGroup", "Ex674148", false, true, Strings.ResourceManager, new object[]
			{
				groupType,
				container,
				memberOperated,
				exception
			});
		}

		// Token: 0x06009739 RID: 38713 RVA: 0x002617E0 File Offset: 0x0025F9E0
		public static LocalizedString SeedingErrorDirectoryIsFile(string field, string file)
		{
			return new LocalizedString("SeedingErrorDirectoryIsFile", "Ex79B54D", false, true, Strings.ResourceManager, new object[]
			{
				field,
				file
			});
		}

		// Token: 0x170030AB RID: 12459
		// (get) Token: 0x0600973A RID: 38714 RVA: 0x00261813 File Offset: 0x0025FA13
		public static LocalizedString ErrorRpcHttpBasicAuthOverHttpDisallowed
		{
			get
			{
				return new LocalizedString("ErrorRpcHttpBasicAuthOverHttpDisallowed", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170030AC RID: 12460
		// (get) Token: 0x0600973B RID: 38715 RVA: 0x00261831 File Offset: 0x0025FA31
		public static LocalizedString SetupComponentPreSetupAllRoles
		{
			get
			{
				return new LocalizedString("SetupComponentPreSetupAllRoles", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600973C RID: 38716 RVA: 0x00261850 File Offset: 0x0025FA50
		public static LocalizedString ErrorFailedToCleanupDatabase(string databaseId, string errorMessage)
		{
			return new LocalizedString("ErrorFailedToCleanupDatabase", "ExF6D973", false, true, Strings.ResourceManager, new object[]
			{
				databaseId,
				errorMessage
			});
		}

		// Token: 0x0600973D RID: 38717 RVA: 0x00261884 File Offset: 0x0025FA84
		public static LocalizedString InfoCreateE12DSGroup(string e12ds)
		{
			return new LocalizedString("InfoCreateE12DSGroup", "ExC57AC0", false, true, Strings.ResourceManager, new object[]
			{
				e12ds
			});
		}

		// Token: 0x0600973E RID: 38718 RVA: 0x002618B4 File Offset: 0x0025FAB4
		public static LocalizedString ErrorSetVersion4OabToTiServerWithoutSP3(string server)
		{
			return new LocalizedString("ErrorSetVersion4OabToTiServerWithoutSP3", "Ex99F664", false, true, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		// Token: 0x0600973F RID: 38719 RVA: 0x002618E4 File Offset: 0x0025FAE4
		public static LocalizedString ConfirmationMessageSetThrottlingPolicy(string Name, string scope)
		{
			return new LocalizedString("ConfirmationMessageSetThrottlingPolicy", "ExA27FF1", false, true, Strings.ResourceManager, new object[]
			{
				Name,
				scope
			});
		}

		// Token: 0x06009740 RID: 38720 RVA: 0x00261918 File Offset: 0x0025FB18
		public static LocalizedString VerboseADReferral(string id, string dc, string details)
		{
			return new LocalizedString("VerboseADReferral", "Ex2CDA94", false, true, Strings.ResourceManager, new object[]
			{
				id,
				dc,
				details
			});
		}

		// Token: 0x06009741 RID: 38721 RVA: 0x00261950 File Offset: 0x0025FB50
		public static LocalizedString ErrorCannotChangeLocaleProperty(string field, string msgcl)
		{
			return new LocalizedString("ErrorCannotChangeLocaleProperty", "ExEC0E5B", false, true, Strings.ResourceManager, new object[]
			{
				field,
				msgcl
			});
		}

		// Token: 0x06009742 RID: 38722 RVA: 0x00261984 File Offset: 0x0025FB84
		public static LocalizedString SendConnectorDuplicateSourceServerException(string server)
		{
			return new LocalizedString("SendConnectorDuplicateSourceServerException", "Ex27104D", false, true, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		// Token: 0x170030AD RID: 12461
		// (get) Token: 0x06009743 RID: 38723 RVA: 0x002619B3 File Offset: 0x0025FBB3
		public static LocalizedString ProgressCopying
		{
			get
			{
				return new LocalizedString("ProgressCopying", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170030AE RID: 12462
		// (get) Token: 0x06009744 RID: 38724 RVA: 0x002619D1 File Offset: 0x0025FBD1
		public static LocalizedString ErrorSubscriptionFileMustBeXml
		{
			get
			{
				return new LocalizedString("ErrorSubscriptionFileMustBeXml", "Ex88CC60", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170030AF RID: 12463
		// (get) Token: 0x06009745 RID: 38725 RVA: 0x002619EF File Offset: 0x0025FBEF
		public static LocalizedString CasHealthEcpScenarioTestWebService
		{
			get
			{
				return new LocalizedString("CasHealthEcpScenarioTestWebService", "ExC0704F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009746 RID: 38726 RVA: 0x00261A10 File Offset: 0x0025FC10
		public static LocalizedString InvalidIPAddress(string address)
		{
			return new LocalizedString("InvalidIPAddress", "", false, false, Strings.ResourceManager, new object[]
			{
				address
			});
		}

		// Token: 0x170030B0 RID: 12464
		// (get) Token: 0x06009747 RID: 38727 RVA: 0x00261A3F File Offset: 0x0025FC3F
		public static LocalizedString ErrorNewTeamMailboxParameter
		{
			get
			{
				return new LocalizedString("ErrorNewTeamMailboxParameter", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009748 RID: 38728 RVA: 0x00261A60 File Offset: 0x0025FC60
		public static LocalizedString UnableToReadDlpPolicy(string reason)
		{
			return new LocalizedString("UnableToReadDlpPolicy", "", false, false, Strings.ResourceManager, new object[]
			{
				reason
			});
		}

		// Token: 0x170030B1 RID: 12465
		// (get) Token: 0x06009749 RID: 38729 RVA: 0x00261A8F File Offset: 0x0025FC8F
		public static LocalizedString RmsSharedIdentityLocalComputerNotFound
		{
			get
			{
				return new LocalizedString("RmsSharedIdentityLocalComputerNotFound", "Ex4FC86F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600974A RID: 38730 RVA: 0x00261AB0 File Offset: 0x0025FCB0
		public static LocalizedString ExceptionCannotDelegateEdgeServerAdmin(string server)
		{
			return new LocalizedString("ExceptionCannotDelegateEdgeServerAdmin", "Ex32BE4E", false, true, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		// Token: 0x0600974B RID: 38731 RVA: 0x00261AE0 File Offset: 0x0025FCE0
		public static LocalizedString ConfirmationMessageSetTeamMailbox(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetTeamMailbox", "", false, false, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x170030B2 RID: 12466
		// (get) Token: 0x0600974C RID: 38732 RVA: 0x00261B0F File Offset: 0x0025FD0F
		public static LocalizedString CalendarVDirDisabledWarning
		{
			get
			{
				return new LocalizedString("CalendarVDirDisabledWarning", "Ex451B1F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600974D RID: 38733 RVA: 0x00261B30 File Offset: 0x0025FD30
		public static LocalizedString InitializeServerResponse(string response)
		{
			return new LocalizedString("InitializeServerResponse", "Ex609754", false, true, Strings.ResourceManager, new object[]
			{
				response
			});
		}

		// Token: 0x0600974E RID: 38734 RVA: 0x00261B60 File Offset: 0x0025FD60
		public static LocalizedString DagMemberNoDatabases(string serverName)
		{
			return new LocalizedString("DagMemberNoDatabases", "ExF55AEC", false, true, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		// Token: 0x170030B3 RID: 12467
		// (get) Token: 0x0600974F RID: 38735 RVA: 0x00261B8F File Offset: 0x0025FD8F
		public static LocalizedString UninstallForwardSyncServiceTask
		{
			get
			{
				return new LocalizedString("UninstallForwardSyncServiceTask", "Ex167E96", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009750 RID: 38736 RVA: 0x00261BB0 File Offset: 0x0025FDB0
		public static LocalizedString VerboseFailedSetAccessControl(string server, string dir, string error)
		{
			return new LocalizedString("VerboseFailedSetAccessControl", "Ex54C7CE", false, true, Strings.ResourceManager, new object[]
			{
				server,
				dir,
				error
			});
		}

		// Token: 0x06009751 RID: 38737 RVA: 0x00261BE8 File Offset: 0x0025FDE8
		public static LocalizedString ErrorWhileUpdatingBadWordsRules(string ruleName, string details)
		{
			return new LocalizedString("ErrorWhileUpdatingBadWordsRules", "ExAC1C2C", false, true, Strings.ResourceManager, new object[]
			{
				ruleName,
				details
			});
		}

		// Token: 0x06009752 RID: 38738 RVA: 0x00261C1C File Offset: 0x0025FE1C
		public static LocalizedString ConfirmationMessageNewMSOFullSyncRequest(string objectId, string serviceInstanceId, string options)
		{
			return new LocalizedString("ConfirmationMessageNewMSOFullSyncRequest", "", false, false, Strings.ResourceManager, new object[]
			{
				objectId,
				serviceInstanceId,
				options
			});
		}

		// Token: 0x06009753 RID: 38739 RVA: 0x00261C54 File Offset: 0x0025FE54
		public static LocalizedString ErrorTeamMailboxCanNotLinkSharePointByNonSiteOwner(string site)
		{
			return new LocalizedString("ErrorTeamMailboxCanNotLinkSharePointByNonSiteOwner", "", false, false, Strings.ResourceManager, new object[]
			{
				site
			});
		}

		// Token: 0x06009754 RID: 38740 RVA: 0x00261C84 File Offset: 0x0025FE84
		public static LocalizedString ParsingWebRequestorRedirectEndPoint(string redirectEpr)
		{
			return new LocalizedString("ParsingWebRequestorRedirectEndPoint", "Ex3B40EA", false, true, Strings.ResourceManager, new object[]
			{
				redirectEpr
			});
		}

		// Token: 0x06009755 RID: 38741 RVA: 0x00261CB4 File Offset: 0x0025FEB4
		public static LocalizedString ReportMovedMailboxMorphedToMailUser(string domainController)
		{
			return new LocalizedString("ReportMovedMailboxMorphedToMailUser", "Ex67DCCD", false, true, Strings.ResourceManager, new object[]
			{
				domainController
			});
		}

		// Token: 0x170030B4 RID: 12468
		// (get) Token: 0x06009756 RID: 38742 RVA: 0x00261CE3 File Offset: 0x0025FEE3
		public static LocalizedString InstallImap4ServiceTask
		{
			get
			{
				return new LocalizedString("InstallImap4ServiceTask", "Ex092B51", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009757 RID: 38743 RVA: 0x00261D04 File Offset: 0x0025FF04
		public static LocalizedString ErrorCannotAssignRoleToPartnerApp(string role, string app)
		{
			return new LocalizedString("ErrorCannotAssignRoleToPartnerApp", "", false, false, Strings.ResourceManager, new object[]
			{
				role,
				app
			});
		}

		// Token: 0x06009758 RID: 38744 RVA: 0x00261D38 File Offset: 0x0025FF38
		public static LocalizedString DuplicateTriplet(string line, string file, string programID, string offerID)
		{
			return new LocalizedString("DuplicateTriplet", "ExD8DFF1", false, true, Strings.ResourceManager, new object[]
			{
				line,
				file,
				programID,
				offerID
			});
		}

		// Token: 0x06009759 RID: 38745 RVA: 0x00261D74 File Offset: 0x0025FF74
		public static LocalizedString ConfirmRemovalOfCorruptMoveRequest(string identity, string validationMessage)
		{
			return new LocalizedString("ConfirmRemovalOfCorruptMoveRequest", "ExA46BAE", false, true, Strings.ResourceManager, new object[]
			{
				identity,
				validationMessage
			});
		}

		// Token: 0x0600975A RID: 38746 RVA: 0x00261DA8 File Offset: 0x0025FFA8
		public static LocalizedString ErrorScopeNotFound(string idStringValue)
		{
			return new LocalizedString("ErrorScopeNotFound", "Ex7FBB87", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		// Token: 0x0600975B RID: 38747 RVA: 0x00261DD8 File Offset: 0x0025FFD8
		public static LocalizedString ErrorLiveDomainUriNotUnique(string message)
		{
			return new LocalizedString("ErrorLiveDomainUriNotUnique", "ExB04A64", false, true, Strings.ResourceManager, new object[]
			{
				message
			});
		}

		// Token: 0x170030B5 RID: 12469
		// (get) Token: 0x0600975C RID: 38748 RVA: 0x00261E07 File Offset: 0x00260007
		public static LocalizedString ConfirmationMessageExportJournalRuleCollection
		{
			get
			{
				return new LocalizedString("ConfirmationMessageExportJournalRuleCollection", "ExB45BE2", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170030B6 RID: 12470
		// (get) Token: 0x0600975D RID: 38749 RVA: 0x00261E25 File Offset: 0x00260025
		public static LocalizedString MtrtRightsProtectMessage
		{
			get
			{
				return new LocalizedString("MtrtRightsProtectMessage", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600975E RID: 38750 RVA: 0x00261E44 File Offset: 0x00260044
		public static LocalizedString WarningDistributionListJoinApprovalRequired(string requesterId, string groupId, string messageId)
		{
			return new LocalizedString("WarningDistributionListJoinApprovalRequired", "Ex60CF2A", false, true, Strings.ResourceManager, new object[]
			{
				requesterId,
				groupId,
				messageId
			});
		}

		// Token: 0x170030B7 RID: 12471
		// (get) Token: 0x0600975F RID: 38751 RVA: 0x00261E7B File Offset: 0x0026007B
		public static LocalizedString CannotSetBothEhfAndFfoRoutingId
		{
			get
			{
				return new LocalizedString("CannotSetBothEhfAndFfoRoutingId", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170030B8 RID: 12472
		// (get) Token: 0x06009760 RID: 38752 RVA: 0x00261E99 File Offset: 0x00260099
		public static LocalizedString InstallCentralAdminFrontEndRoleDescription
		{
			get
			{
				return new LocalizedString("InstallCentralAdminFrontEndRoleDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009761 RID: 38753 RVA: 0x00261EB8 File Offset: 0x002600B8
		public static LocalizedString CasHealthEasCommandFailedWithError(string commandName, string errorString, string additionalInfo)
		{
			return new LocalizedString("CasHealthEasCommandFailedWithError", "ExB5270A", false, true, Strings.ResourceManager, new object[]
			{
				commandName,
				errorString,
				additionalInfo
			});
		}

		// Token: 0x06009762 RID: 38754 RVA: 0x00261EF0 File Offset: 0x002600F0
		public static LocalizedString VerboseTestUserOrganization(string orgId)
		{
			return new LocalizedString("VerboseTestUserOrganization", "", false, false, Strings.ResourceManager, new object[]
			{
				orgId
			});
		}

		// Token: 0x06009763 RID: 38755 RVA: 0x00261F20 File Offset: 0x00260120
		public static LocalizedString ConfirmationMessageResumeDatabaseCopyIdentity(string Identity, string Server)
		{
			return new LocalizedString("ConfirmationMessageResumeDatabaseCopyIdentity", "Ex4F4BF3", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				Server
			});
		}

		// Token: 0x06009764 RID: 38756 RVA: 0x00261F54 File Offset: 0x00260154
		public static LocalizedString CouldNotRemoveMoveRequest(string identity)
		{
			return new LocalizedString("CouldNotRemoveMoveRequest", "Ex7213F0", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x06009765 RID: 38757 RVA: 0x00261F84 File Offset: 0x00260184
		public static LocalizedString ErrorGivingUpWaitingOnMRS(string identity)
		{
			return new LocalizedString("ErrorGivingUpWaitingOnMRS", "Ex8783FE", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x06009766 RID: 38758 RVA: 0x00261FB4 File Offset: 0x002601B4
		public static LocalizedString DagTaskFixedUpIpResources(string status)
		{
			return new LocalizedString("DagTaskFixedUpIpResources", "", false, false, Strings.ResourceManager, new object[]
			{
				status
			});
		}

		// Token: 0x170030B9 RID: 12473
		// (get) Token: 0x06009767 RID: 38759 RVA: 0x00261FE3 File Offset: 0x002601E3
		public static LocalizedString DebugStartSaveDataObject
		{
			get
			{
				return new LocalizedString("DebugStartSaveDataObject", "ExF761AA", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009768 RID: 38760 RVA: 0x00262004 File Offset: 0x00260204
		public static LocalizedString ErrorRemoveMailboxWithDiscoveryHold(string mbxId)
		{
			return new LocalizedString("ErrorRemoveMailboxWithDiscoveryHold", "", false, false, Strings.ResourceManager, new object[]
			{
				mbxId
			});
		}

		// Token: 0x170030BA RID: 12474
		// (get) Token: 0x06009769 RID: 38761 RVA: 0x00262033 File Offset: 0x00260233
		public static LocalizedString RpcClientAccessServiceControlComponentDescription
		{
			get
			{
				return new LocalizedString("RpcClientAccessServiceControlComponentDescription", "Ex73E6F0", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600976A RID: 38762 RVA: 0x00262054 File Offset: 0x00260254
		public static LocalizedString SeederAlreadyFailedPrompt(string dbName, string targetServer, string sourceServer)
		{
			return new LocalizedString("SeederAlreadyFailedPrompt", "ExC20081", false, true, Strings.ResourceManager, new object[]
			{
				dbName,
				targetServer,
				sourceServer
			});
		}

		// Token: 0x170030BB RID: 12475
		// (get) Token: 0x0600976B RID: 38763 RVA: 0x0026208B File Offset: 0x0026028B
		public static LocalizedString FfoReportingMessage
		{
			get
			{
				return new LocalizedString("FfoReportingMessage", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170030BC RID: 12476
		// (get) Token: 0x0600976C RID: 38764 RVA: 0x002620A9 File Offset: 0x002602A9
		public static LocalizedString WarningPromotingSecondaryToPrimary
		{
			get
			{
				return new LocalizedString("WarningPromotingSecondaryToPrimary", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600976D RID: 38765 RVA: 0x002620C8 File Offset: 0x002602C8
		public static LocalizedString CannotFindSchemaAttributeException(string attr, string schemaDN, string server)
		{
			return new LocalizedString("CannotFindSchemaAttributeException", "Ex3A869C", false, true, Strings.ResourceManager, new object[]
			{
				attr,
				schemaDN,
				server
			});
		}

		// Token: 0x170030BD RID: 12477
		// (get) Token: 0x0600976E RID: 38766 RVA: 0x002620FF File Offset: 0x002602FF
		public static LocalizedString TestMailflowNoSystemMailbox
		{
			get
			{
				return new LocalizedString("TestMailflowNoSystemMailbox", "ExCB5719", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600976F RID: 38767 RVA: 0x00262120 File Offset: 0x00260320
		public static LocalizedString ConfirmationMessageRemoveRequest(string indexEntry)
		{
			return new LocalizedString("ConfirmationMessageRemoveRequest", "ExAEE6FE", false, true, Strings.ResourceManager, new object[]
			{
				indexEntry
			});
		}

		// Token: 0x06009770 RID: 38768 RVA: 0x00262150 File Offset: 0x00260350
		public static LocalizedString DuplicateContentFilterPhrase(string phrase)
		{
			return new LocalizedString("DuplicateContentFilterPhrase", "", false, false, Strings.ResourceManager, new object[]
			{
				phrase
			});
		}

		// Token: 0x06009771 RID: 38769 RVA: 0x00262180 File Offset: 0x00260380
		public static LocalizedString CasHealthOwaBadHttpResponseStream(string url)
		{
			return new LocalizedString("CasHealthOwaBadHttpResponseStream", "Ex1DF4AC", false, true, Strings.ResourceManager, new object[]
			{
				url
			});
		}

		// Token: 0x06009772 RID: 38770 RVA: 0x002621B0 File Offset: 0x002603B0
		public static LocalizedString SearchDuplicateSource(string sourceDisplayName)
		{
			return new LocalizedString("SearchDuplicateSource", "", false, false, Strings.ResourceManager, new object[]
			{
				sourceDisplayName
			});
		}

		// Token: 0x170030BE RID: 12478
		// (get) Token: 0x06009773 RID: 38771 RVA: 0x002621DF File Offset: 0x002603DF
		public static LocalizedString FailedToCreateEwsConnection
		{
			get
			{
				return new LocalizedString("FailedToCreateEwsConnection", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170030BF RID: 12479
		// (get) Token: 0x06009774 RID: 38772 RVA: 0x002621FD File Offset: 0x002603FD
		public static LocalizedString VerboseWaitingForReplicationInTargetForest
		{
			get
			{
				return new LocalizedString("VerboseWaitingForReplicationInTargetForest", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009775 RID: 38773 RVA: 0x0026221C File Offset: 0x0026041C
		public static LocalizedString ExceptionWebObjectAlreadyExists(string name)
		{
			return new LocalizedString("ExceptionWebObjectAlreadyExists", "ExC9BA8A", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x170030C0 RID: 12480
		// (get) Token: 0x06009776 RID: 38774 RVA: 0x0026224B File Offset: 0x0026044B
		public static LocalizedString UserCreatedFolder
		{
			get
			{
				return new LocalizedString("UserCreatedFolder", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009777 RID: 38775 RVA: 0x0026226C File Offset: 0x0026046C
		public static LocalizedString UserFederatedDomainNotInRemoteOrgRelationship(string userFedDomain)
		{
			return new LocalizedString("UserFederatedDomainNotInRemoteOrgRelationship", "", false, false, Strings.ResourceManager, new object[]
			{
				userFedDomain
			});
		}

		// Token: 0x170030C1 RID: 12481
		// (get) Token: 0x06009778 RID: 38776 RVA: 0x0026229B File Offset: 0x0026049B
		public static LocalizedString GetMsoDiagnosticsNewCookieIsBeingUsed
		{
			get
			{
				return new LocalizedString("GetMsoDiagnosticsNewCookieIsBeingUsed", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009779 RID: 38777 RVA: 0x002622BC File Offset: 0x002604BC
		public static LocalizedString ConfirmationMessageStartComplianceSearch(string name)
		{
			return new LocalizedString("ConfirmationMessageStartComplianceSearch", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x0600977A RID: 38778 RVA: 0x002622EC File Offset: 0x002604EC
		public static LocalizedString TopologyServiceFailed(string operation, string error)
		{
			return new LocalizedString("TopologyServiceFailed", "", false, false, Strings.ResourceManager, new object[]
			{
				operation,
				error
			});
		}

		// Token: 0x0600977B RID: 38779 RVA: 0x00262320 File Offset: 0x00260520
		public static LocalizedString WarningCannotUpgradeInvalidRoleAssignment(string roleAssignmentId)
		{
			return new LocalizedString("WarningCannotUpgradeInvalidRoleAssignment", "Ex50C090", false, true, Strings.ResourceManager, new object[]
			{
				roleAssignmentId
			});
		}

		// Token: 0x170030C2 RID: 12482
		// (get) Token: 0x0600977C RID: 38780 RVA: 0x0026234F File Offset: 0x0026054F
		public static LocalizedString SetupProgressUninstallingContentIndexingMSI
		{
			get
			{
				return new LocalizedString("SetupProgressUninstallingContentIndexingMSI", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170030C3 RID: 12483
		// (get) Token: 0x0600977D RID: 38781 RVA: 0x0026236D File Offset: 0x0026056D
		public static LocalizedString MigrationCSVRequired
		{
			get
			{
				return new LocalizedString("MigrationCSVRequired", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600977E RID: 38782 RVA: 0x0026238C File Offset: 0x0026058C
		public static LocalizedString VerboseCheckingAgainstPartnerApplicationMetadataUrl(string url)
		{
			return new LocalizedString("VerboseCheckingAgainstPartnerApplicationMetadataUrl", "", false, false, Strings.ResourceManager, new object[]
			{
				url
			});
		}

		// Token: 0x170030C4 RID: 12484
		// (get) Token: 0x0600977F RID: 38783 RVA: 0x002623BB File Offset: 0x002605BB
		public static LocalizedString ErrorNewRoleInvalidValueUnscopedParameter
		{
			get
			{
				return new LocalizedString("ErrorNewRoleInvalidValueUnscopedParameter", "ExF39DB6", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170030C5 RID: 12485
		// (get) Token: 0x06009780 RID: 38784 RVA: 0x002623D9 File Offset: 0x002605D9
		public static LocalizedString CallingGetFederationInformation
		{
			get
			{
				return new LocalizedString("CallingGetFederationInformation", "Ex356AA3", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170030C6 RID: 12486
		// (get) Token: 0x06009781 RID: 38785 RVA: 0x002623F7 File Offset: 0x002605F7
		public static LocalizedString DagTaskFixingUpIpResources
		{
			get
			{
				return new LocalizedString("DagTaskFixingUpIpResources", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009782 RID: 38786 RVA: 0x00262418 File Offset: 0x00260618
		public static LocalizedString ErrorCertificateNotCAPI(string certThumbprint)
		{
			return new LocalizedString("ErrorCertificateNotCAPI", "Ex6B2874", false, true, Strings.ResourceManager, new object[]
			{
				certThumbprint
			});
		}

		// Token: 0x170030C7 RID: 12487
		// (get) Token: 0x06009783 RID: 38787 RVA: 0x00262447 File Offset: 0x00260647
		public static LocalizedString ApplicationUrisSkipped
		{
			get
			{
				return new LocalizedString("ApplicationUrisSkipped", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009784 RID: 38788 RVA: 0x00262468 File Offset: 0x00260668
		public static LocalizedString PopImapErrorUnexpectedValue(object theValue)
		{
			return new LocalizedString("PopImapErrorUnexpectedValue", "Ex35609E", false, true, Strings.ResourceManager, new object[]
			{
				theValue
			});
		}

		// Token: 0x170030C8 RID: 12488
		// (get) Token: 0x06009785 RID: 38789 RVA: 0x00262497 File Offset: 0x00260697
		public static LocalizedString ErrorSetPublicFolderMailMailRecipientGuidNull
		{
			get
			{
				return new LocalizedString("ErrorSetPublicFolderMailMailRecipientGuidNull", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170030C9 RID: 12489
		// (get) Token: 0x06009786 RID: 38790 RVA: 0x002624B5 File Offset: 0x002606B5
		public static LocalizedString MultipleSubscriptionSites
		{
			get
			{
				return new LocalizedString("MultipleSubscriptionSites", "ExC29568", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170030CA RID: 12490
		// (get) Token: 0x06009787 RID: 38791 RVA: 0x002624D3 File Offset: 0x002606D3
		public static LocalizedString ErrorOWAVdirAppPoolNotExist
		{
			get
			{
				return new LocalizedString("ErrorOWAVdirAppPoolNotExist", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009788 RID: 38792 RVA: 0x002624F4 File Offset: 0x002606F4
		public static LocalizedString RcrConfigString(string serverName)
		{
			return new LocalizedString("RcrConfigString", "Ex2EA7D5", false, true, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		// Token: 0x170030CB RID: 12491
		// (get) Token: 0x06009789 RID: 38793 RVA: 0x00262523 File Offset: 0x00260723
		public static LocalizedString CasHealthPowerShellShortName
		{
			get
			{
				return new LocalizedString("CasHealthPowerShellShortName", "ExE40BD2", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170030CC RID: 12492
		// (get) Token: 0x0600978A RID: 38794 RVA: 0x00262541 File Offset: 0x00260741
		public static LocalizedString CopyStatusHealthy
		{
			get
			{
				return new LocalizedString("CopyStatusHealthy", "Ex5A5CBB", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600978B RID: 38795 RVA: 0x00262560 File Offset: 0x00260760
		public static LocalizedString CasHealthOwaAuthTypesSupported2(string method1, string method2)
		{
			return new LocalizedString("CasHealthOwaAuthTypesSupported2", "Ex3B40FB", false, true, Strings.ResourceManager, new object[]
			{
				method1,
				method2
			});
		}

		// Token: 0x0600978C RID: 38796 RVA: 0x00262594 File Offset: 0x00260794
		public static LocalizedString ConfirmExportExchangeCertificate(string thumbprint)
		{
			return new LocalizedString("ConfirmExportExchangeCertificate", "Ex65B493", false, true, Strings.ResourceManager, new object[]
			{
				thumbprint
			});
		}

		// Token: 0x0600978D RID: 38797 RVA: 0x002625C4 File Offset: 0x002607C4
		public static LocalizedString InfoCheckRmsVersion(Uri uri)
		{
			return new LocalizedString("InfoCheckRmsVersion", "ExF84D5F", false, true, Strings.ResourceManager, new object[]
			{
				uri
			});
		}

		// Token: 0x170030CD RID: 12493
		// (get) Token: 0x0600978E RID: 38798 RVA: 0x002625F3 File Offset: 0x002607F3
		public static LocalizedString SubscriptionPasswordEmptyException
		{
			get
			{
				return new LocalizedString("SubscriptionPasswordEmptyException", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600978F RID: 38799 RVA: 0x00262614 File Offset: 0x00260814
		public static LocalizedString ErrorTryingToReadPfx(string file, string message)
		{
			return new LocalizedString("ErrorTryingToReadPfx", "Ex23E8F5", false, true, Strings.ResourceManager, new object[]
			{
				file,
				message
			});
		}

		// Token: 0x06009790 RID: 38800 RVA: 0x00262648 File Offset: 0x00260848
		public static LocalizedString ConfirmationMessageNewMailFlowPartnerConfigWithName(string name)
		{
			return new LocalizedString("ConfirmationMessageNewMailFlowPartnerConfigWithName", "Ex901FB7", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x06009791 RID: 38801 RVA: 0x00262678 File Offset: 0x00260878
		public static LocalizedString TestMailflowServerWithoutMdbs(string mailboxServer)
		{
			return new LocalizedString("TestMailflowServerWithoutMdbs", "ExBF464A", false, true, Strings.ResourceManager, new object[]
			{
				mailboxServer
			});
		}

		// Token: 0x170030CE RID: 12494
		// (get) Token: 0x06009792 RID: 38802 RVA: 0x002626A7 File Offset: 0x002608A7
		public static LocalizedString ReportsMPNotInstalled
		{
			get
			{
				return new LocalizedString("ReportsMPNotInstalled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009793 RID: 38803 RVA: 0x002626C8 File Offset: 0x002608C8
		public static LocalizedString ConfirmationMessageMoveMailboxDatabaseMasterAnyServerSourceServer(string sourceserver)
		{
			return new LocalizedString("ConfirmationMessageMoveMailboxDatabaseMasterAnyServerSourceServer", "Ex848B6B", false, true, Strings.ResourceManager, new object[]
			{
				sourceserver
			});
		}

		// Token: 0x06009794 RID: 38804 RVA: 0x002626F8 File Offset: 0x002608F8
		public static LocalizedString VerboseDeleteMonitoringMailbox(string id)
		{
			return new LocalizedString("VerboseDeleteMonitoringMailbox", "", false, false, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x06009795 RID: 38805 RVA: 0x00262728 File Offset: 0x00260928
		public static LocalizedString ErrorMoveVersion4OabToTiServerWithoutSP3(string oab)
		{
			return new LocalizedString("ErrorMoveVersion4OabToTiServerWithoutSP3", "Ex6717FF", false, true, Strings.ResourceManager, new object[]
			{
				oab
			});
		}

		// Token: 0x170030CF RID: 12495
		// (get) Token: 0x06009796 RID: 38806 RVA: 0x00262757 File Offset: 0x00260957
		public static LocalizedString RequestOnInaccessibleDatabase
		{
			get
			{
				return new LocalizedString("RequestOnInaccessibleDatabase", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009797 RID: 38807 RVA: 0x00262778 File Offset: 0x00260978
		public static LocalizedString SmtpConnectivityFailureEvent(string server, string failures, string untested, string successes)
		{
			return new LocalizedString("SmtpConnectivityFailureEvent", "Ex791B06", false, true, Strings.ResourceManager, new object[]
			{
				server,
				failures,
				untested,
				successes
			});
		}

		// Token: 0x06009798 RID: 38808 RVA: 0x002627B4 File Offset: 0x002609B4
		public static LocalizedString HeaderValues(string s)
		{
			return new LocalizedString("HeaderValues", "", false, false, Strings.ResourceManager, new object[]
			{
				s
			});
		}

		// Token: 0x06009799 RID: 38809 RVA: 0x002627E4 File Offset: 0x002609E4
		public static LocalizedString MailboxSearchIdentityMustBeFullyQualified(string identity)
		{
			return new LocalizedString("MailboxSearchIdentityMustBeFullyQualified", "ExE17E92", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x0600979A RID: 38810 RVA: 0x00262814 File Offset: 0x00260A14
		public static LocalizedString WritingInformationScript(string file)
		{
			return new LocalizedString("WritingInformationScript", "ExB94339", false, true, Strings.ResourceManager, new object[]
			{
				file
			});
		}

		// Token: 0x170030D0 RID: 12496
		// (get) Token: 0x0600979B RID: 38811 RVA: 0x00262843 File Offset: 0x00260A43
		public static LocalizedString SetupProgressStartingServices
		{
			get
			{
				return new LocalizedString("SetupProgressStartingServices", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600979C RID: 38812 RVA: 0x00262864 File Offset: 0x00260A64
		public static LocalizedString ErrorAddressBookPolicyNotUnique(string idStringValue)
		{
			return new LocalizedString("ErrorAddressBookPolicyNotUnique", "", false, false, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		// Token: 0x170030D1 RID: 12497
		// (get) Token: 0x0600979D RID: 38813 RVA: 0x00262893 File Offset: 0x00260A93
		public static LocalizedString Busy
		{
			get
			{
				return new LocalizedString("Busy", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170030D2 RID: 12498
		// (get) Token: 0x0600979E RID: 38814 RVA: 0x002628B1 File Offset: 0x00260AB1
		public static LocalizedString DatabaseAvailabilityCheckDesc
		{
			get
			{
				return new LocalizedString("DatabaseAvailabilityCheckDesc", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600979F RID: 38815 RVA: 0x002628D0 File Offset: 0x00260AD0
		public static LocalizedString CafeRoleNotInstalled(string thumbprint, string serverName)
		{
			return new LocalizedString("CafeRoleNotInstalled", "", false, false, Strings.ResourceManager, new object[]
			{
				thumbprint,
				serverName
			});
		}

		// Token: 0x060097A0 RID: 38816 RVA: 0x00262904 File Offset: 0x00260B04
		public static LocalizedString CapabilityDoesNotMatchOthers(string capability)
		{
			return new LocalizedString("CapabilityDoesNotMatchOthers", "Ex5B32C3", false, true, Strings.ResourceManager, new object[]
			{
				capability
			});
		}

		// Token: 0x170030D3 RID: 12499
		// (get) Token: 0x060097A1 RID: 38817 RVA: 0x00262933 File Offset: 0x00260B33
		public static LocalizedString ClassificationRuleCollectionStorageFailure
		{
			get
			{
				return new LocalizedString("ClassificationRuleCollectionStorageFailure", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170030D4 RID: 12500
		// (get) Token: 0x060097A2 RID: 38818 RVA: 0x00262951 File Offset: 0x00260B51
		public static LocalizedString ErrorCannotModifyFolderName
		{
			get
			{
				return new LocalizedString("ErrorCannotModifyFolderName", "Ex831426", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170030D5 RID: 12501
		// (get) Token: 0x060097A3 RID: 38819 RVA: 0x0026296F File Offset: 0x00260B6F
		public static LocalizedString JournalingReportNdrToSameAsRecipient
		{
			get
			{
				return new LocalizedString("JournalingReportNdrToSameAsRecipient", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060097A4 RID: 38820 RVA: 0x00262990 File Offset: 0x00260B90
		public static LocalizedString NewFederationTrustAddAppUri(string appId, string appUri)
		{
			return new LocalizedString("NewFederationTrustAddAppUri", "Ex28CC51", false, true, Strings.ResourceManager, new object[]
			{
				appId,
				appUri
			});
		}

		// Token: 0x170030D6 RID: 12502
		// (get) Token: 0x060097A5 RID: 38821 RVA: 0x002629C3 File Offset: 0x00260BC3
		public static LocalizedString XRopConnectLogon
		{
			get
			{
				return new LocalizedString("XRopConnectLogon", "Ex300794", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060097A6 RID: 38822 RVA: 0x002629E4 File Offset: 0x00260BE4
		public static LocalizedString UMCallAnsweringRuleCallerIdCondition(string caller)
		{
			return new LocalizedString("UMCallAnsweringRuleCallerIdCondition", "", false, false, Strings.ResourceManager, new object[]
			{
				caller
			});
		}

		// Token: 0x060097A7 RID: 38823 RVA: 0x00262A14 File Offset: 0x00260C14
		public static LocalizedString ComfirmConnectToMatchingUser(string userId, string alias)
		{
			return new LocalizedString("ComfirmConnectToMatchingUser", "Ex32F88A", false, true, Strings.ResourceManager, new object[]
			{
				userId,
				alias
			});
		}

		// Token: 0x060097A8 RID: 38824 RVA: 0x00262A48 File Offset: 0x00260C48
		public static LocalizedString ConfirmationMessageAddAttachmentfilterentry(string Name, string Type)
		{
			return new LocalizedString("ConfirmationMessageAddAttachmentfilterentry", "Ex95B5CB", false, true, Strings.ResourceManager, new object[]
			{
				Name,
				Type
			});
		}

		// Token: 0x060097A9 RID: 38825 RVA: 0x00262A7C File Offset: 0x00260C7C
		public static LocalizedString ErrorTeamMailboxSendNotifications(string error)
		{
			return new LocalizedString("ErrorTeamMailboxSendNotifications", "", false, false, Strings.ResourceManager, new object[]
			{
				error
			});
		}

		// Token: 0x060097AA RID: 38826 RVA: 0x00262AAC File Offset: 0x00260CAC
		public static LocalizedString CertFileNotFound(string file)
		{
			return new LocalizedString("CertFileNotFound", "ExAEB642", false, true, Strings.ResourceManager, new object[]
			{
				file
			});
		}

		// Token: 0x170030D7 RID: 12503
		// (get) Token: 0x060097AB RID: 38827 RVA: 0x00262ADB File Offset: 0x00260CDB
		public static LocalizedString ErrorRpcHttpMustSpecifyExternalClientsRequireSslParameter
		{
			get
			{
				return new LocalizedString("ErrorRpcHttpMustSpecifyExternalClientsRequireSslParameter", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060097AC RID: 38828 RVA: 0x00262AFC File Offset: 0x00260CFC
		public static LocalizedString ConfirmationMessageRemoveClientAccessArray(string idStringValue)
		{
			return new LocalizedString("ConfirmationMessageRemoveClientAccessArray", "ExA3E11C", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		// Token: 0x170030D8 RID: 12504
		// (get) Token: 0x060097AD RID: 38829 RVA: 0x00262B2B File Offset: 0x00260D2B
		public static LocalizedString SetupProgressProhibitSendReceiveQuota
		{
			get
			{
				return new LocalizedString("SetupProgressProhibitSendReceiveQuota", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170030D9 RID: 12505
		// (get) Token: 0x060097AE RID: 38830 RVA: 0x00262B49 File Offset: 0x00260D49
		public static LocalizedString ScenarioEwsGetFolder
		{
			get
			{
				return new LocalizedString("ScenarioEwsGetFolder", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170030DA RID: 12506
		// (get) Token: 0x060097AF RID: 38831 RVA: 0x00262B67 File Offset: 0x00260D67
		public static LocalizedString CalendarLogIdentityNotSpecified
		{
			get
			{
				return new LocalizedString("CalendarLogIdentityNotSpecified", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060097B0 RID: 38832 RVA: 0x00262B88 File Offset: 0x00260D88
		public static LocalizedString ExceptionUserObjectNotFound(string id)
		{
			return new LocalizedString("ExceptionUserObjectNotFound", "ExEA327D", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x060097B1 RID: 38833 RVA: 0x00262BB8 File Offset: 0x00260DB8
		public static LocalizedString ErrorThumbprintNotFound(string thumbprint)
		{
			return new LocalizedString("ErrorThumbprintNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				thumbprint
			});
		}

		// Token: 0x170030DB RID: 12507
		// (get) Token: 0x060097B2 RID: 38834 RVA: 0x00262BE7 File Offset: 0x00260DE7
		public static LocalizedString ErrorBypassWLIDAndRemovedMailboxTogether
		{
			get
			{
				return new LocalizedString("ErrorBypassWLIDAndRemovedMailboxTogether", "Ex899361", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060097B3 RID: 38835 RVA: 0x00262C08 File Offset: 0x00260E08
		public static LocalizedString InvalidAggregateByType(string aggregateType)
		{
			return new LocalizedString("InvalidAggregateByType", "", false, false, Strings.ResourceManager, new object[]
			{
				aggregateType
			});
		}

		// Token: 0x170030DC RID: 12508
		// (get) Token: 0x060097B4 RID: 38836 RVA: 0x00262C37 File Offset: 0x00260E37
		public static LocalizedString StartingHealthService
		{
			get
			{
				return new LocalizedString("StartingHealthService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060097B5 RID: 38837 RVA: 0x00262C58 File Offset: 0x00260E58
		public static LocalizedString ClientRequestId(string s)
		{
			return new LocalizedString("ClientRequestId", "", false, false, Strings.ResourceManager, new object[]
			{
				s
			});
		}

		// Token: 0x060097B6 RID: 38838 RVA: 0x00262C88 File Offset: 0x00260E88
		public static LocalizedString CreateWkGuidPermissionDeniedException(string entry)
		{
			return new LocalizedString("CreateWkGuidPermissionDeniedException", "Ex0FE83A", false, true, Strings.ResourceManager, new object[]
			{
				entry
			});
		}

		// Token: 0x170030DD RID: 12509
		// (get) Token: 0x060097B7 RID: 38839 RVA: 0x00262CB7 File Offset: 0x00260EB7
		public static LocalizedString InstallMomConnectorServiceTask
		{
			get
			{
				return new LocalizedString("InstallMomConnectorServiceTask", "ExD77059", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060097B8 RID: 38840 RVA: 0x00262CD8 File Offset: 0x00260ED8
		public static LocalizedString MailboxQuotaValues(string mailbox, string mbxQuota, string archiveQuota, string dumpsterQuota)
		{
			return new LocalizedString("MailboxQuotaValues", "", false, false, Strings.ResourceManager, new object[]
			{
				mailbox,
				mbxQuota,
				archiveQuota,
				dumpsterQuota
			});
		}

		// Token: 0x060097B9 RID: 38841 RVA: 0x00262D14 File Offset: 0x00260F14
		public static LocalizedString SetArchivePermissionException(string user, Exception exception)
		{
			return new LocalizedString("SetArchivePermissionException", "Ex318141", false, true, Strings.ResourceManager, new object[]
			{
				user,
				exception
			});
		}

		// Token: 0x060097BA RID: 38842 RVA: 0x00262D48 File Offset: 0x00260F48
		public static LocalizedString VerboseNoAssociatedMRSRequestOnDatabaseCondition(string id)
		{
			return new LocalizedString("VerboseNoAssociatedMRSRequestOnDatabaseCondition", "Ex65B940", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x170030DE RID: 12510
		// (get) Token: 0x060097BB RID: 38843 RVA: 0x00262D77 File Offset: 0x00260F77
		public static LocalizedString ExchangeUpgradeBucketInvalidCapacityValue
		{
			get
			{
				return new LocalizedString("ExchangeUpgradeBucketInvalidCapacityValue", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170030DF RID: 12511
		// (get) Token: 0x060097BC RID: 38844 RVA: 0x00262D95 File Offset: 0x00260F95
		public static LocalizedString MapiTransactionResultSuccess
		{
			get
			{
				return new LocalizedString("MapiTransactionResultSuccess", "ExB5A583", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060097BD RID: 38845 RVA: 0x00262DB4 File Offset: 0x00260FB4
		public static LocalizedString WarningOABSourceServerDoesNotExist(string serverName)
		{
			return new LocalizedString("WarningOABSourceServerDoesNotExist", "Ex25B0C6", false, true, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		// Token: 0x170030E0 RID: 12512
		// (get) Token: 0x060097BE RID: 38846 RVA: 0x00262DE3 File Offset: 0x00260FE3
		public static LocalizedString ErrorBPAOutFileLoad
		{
			get
			{
				return new LocalizedString("ErrorBPAOutFileLoad", "Ex8F4E08", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170030E1 RID: 12513
		// (get) Token: 0x060097BF RID: 38847 RVA: 0x00262E01 File Offset: 0x00261001
		public static LocalizedString AccessStoreSuccess
		{
			get
			{
				return new LocalizedString("AccessStoreSuccess", "Ex6C1537", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060097C0 RID: 38848 RVA: 0x00262E20 File Offset: 0x00261020
		public static LocalizedString ErrorChildObjectTypeNotFound(string idStringValue)
		{
			return new LocalizedString("ErrorChildObjectTypeNotFound", "Ex421E92", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		// Token: 0x060097C1 RID: 38849 RVA: 0x00262E50 File Offset: 0x00261050
		public static LocalizedString CannotSpecifyParameterWithE15OrLaterOab(string parameterName)
		{
			return new LocalizedString("CannotSpecifyParameterWithE15OrLaterOab", "", false, false, Strings.ResourceManager, new object[]
			{
				parameterName
			});
		}

		// Token: 0x060097C2 RID: 38850 RVA: 0x00262E80 File Offset: 0x00261080
		public static LocalizedString VerboseTestOabFromParameter(string url)
		{
			return new LocalizedString("VerboseTestOabFromParameter", "", false, false, Strings.ResourceManager, new object[]
			{
				url
			});
		}

		// Token: 0x060097C3 RID: 38851 RVA: 0x00262EB0 File Offset: 0x002610B0
		public static LocalizedString ErrorIisVersionIsInvalid(string serverName)
		{
			return new LocalizedString("ErrorIisVersionIsInvalid", "Ex42C286", false, true, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		// Token: 0x060097C4 RID: 38852 RVA: 0x00262EE0 File Offset: 0x002610E0
		public static LocalizedString ConfirmationMessageSuspendRequest(string name)
		{
			return new LocalizedString("ConfirmationMessageSuspendRequest", "ExF609D3", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x060097C5 RID: 38853 RVA: 0x00262F10 File Offset: 0x00261110
		public static LocalizedString FailedDeleteOldDatabaseLogFiles(string server, string oldDir)
		{
			return new LocalizedString("FailedDeleteOldDatabaseLogFiles", "ExEC18B1", false, true, Strings.ResourceManager, new object[]
			{
				server,
				oldDir
			});
		}

		// Token: 0x170030E2 RID: 12514
		// (get) Token: 0x060097C6 RID: 38854 RVA: 0x00262F43 File Offset: 0x00261143
		public static LocalizedString ErrorSuspendAndResumeDontSupportFalse
		{
			get
			{
				return new LocalizedString("ErrorSuspendAndResumeDontSupportFalse", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060097C7 RID: 38855 RVA: 0x00262F64 File Offset: 0x00261164
		public static LocalizedString BackSyncObjectExcludedExtended(DirectoryObjectClass directoryObjectClass, string objectId, ADObjectId adObjectId, DirectoryObjectErrorCode errorCode, ProcessingStage processingStage)
		{
			return new LocalizedString("BackSyncObjectExcludedExtended", "ExAB7286", false, true, Strings.ResourceManager, new object[]
			{
				directoryObjectClass,
				objectId,
				adObjectId,
				errorCode,
				processingStage
			});
		}

		// Token: 0x170030E3 RID: 12515
		// (get) Token: 0x060097C8 RID: 38856 RVA: 0x00262FB3 File Offset: 0x002611B3
		public static LocalizedString InstallCafeIisWebServiceExtensions
		{
			get
			{
				return new LocalizedString("InstallCafeIisWebServiceExtensions", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060097C9 RID: 38857 RVA: 0x00262FD4 File Offset: 0x002611D4
		public static LocalizedString ConfirmationMessageTestSenderId(string IPAddress, string PurportedResponsibleDomain)
		{
			return new LocalizedString("ConfirmationMessageTestSenderId", "ExF97952", false, true, Strings.ResourceManager, new object[]
			{
				IPAddress,
				PurportedResponsibleDomain
			});
		}

		// Token: 0x060097CA RID: 38858 RVA: 0x00263008 File Offset: 0x00261208
		public static LocalizedString ConfirmationMessageRemoveGlobalAddressList(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveGlobalAddressList", "Ex2CAFFD", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x060097CB RID: 38859 RVA: 0x00263038 File Offset: 0x00261238
		public static LocalizedString ImportFromPSTShouldImport(string srcDisplayname, string PSTFolderPath)
		{
			return new LocalizedString("ImportFromPSTShouldImport", "Ex9AF8B6", false, true, Strings.ResourceManager, new object[]
			{
				srcDisplayname,
				PSTFolderPath
			});
		}

		// Token: 0x060097CC RID: 38860 RVA: 0x0026306C File Offset: 0x0026126C
		public static LocalizedString PAMRPCError(string ex)
		{
			return new LocalizedString("PAMRPCError", "ExC18A6E", false, true, Strings.ResourceManager, new object[]
			{
				ex
			});
		}

		// Token: 0x060097CD RID: 38861 RVA: 0x0026309C File Offset: 0x0026129C
		public static LocalizedString FileShareWitnessPathDown(string path, string node, string cluster, int ec)
		{
			return new LocalizedString("FileShareWitnessPathDown", "Ex47B4A8", false, true, Strings.ResourceManager, new object[]
			{
				path,
				node,
				cluster,
				ec
			});
		}

		// Token: 0x060097CE RID: 38862 RVA: 0x002630DC File Offset: 0x002612DC
		public static LocalizedString ErrorIncorrectInputDag(string name)
		{
			return new LocalizedString("ErrorIncorrectInputDag", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x060097CF RID: 38863 RVA: 0x0026310C File Offset: 0x0026130C
		public static LocalizedString ErrorRedirectionDuplicateDomainName(string domainName)
		{
			return new LocalizedString("ErrorRedirectionDuplicateDomainName", "ExCA1DA1", false, true, Strings.ResourceManager, new object[]
			{
				domainName
			});
		}

		// Token: 0x060097D0 RID: 38864 RVA: 0x0026313C File Offset: 0x0026133C
		public static LocalizedString MissingHydratedOffer(string file, string hydrateOffer)
		{
			return new LocalizedString("MissingHydratedOffer", "", false, false, Strings.ResourceManager, new object[]
			{
				file,
				hydrateOffer
			});
		}

		// Token: 0x060097D1 RID: 38865 RVA: 0x00263170 File Offset: 0x00261370
		public static LocalizedString ReceiveConnectorMappingConflict(string receiveConnectorId)
		{
			return new LocalizedString("ReceiveConnectorMappingConflict", "Ex142B4F", false, true, Strings.ResourceManager, new object[]
			{
				receiveConnectorId
			});
		}

		// Token: 0x060097D2 RID: 38866 RVA: 0x002631A0 File Offset: 0x002613A0
		public static LocalizedString VerboseUpdatedServiceEndpoint(string endpoint, string serverName)
		{
			return new LocalizedString("VerboseUpdatedServiceEndpoint", "Ex1F0E18", false, true, Strings.ResourceManager, new object[]
			{
				endpoint,
				serverName
			});
		}

		// Token: 0x060097D3 RID: 38867 RVA: 0x002631D4 File Offset: 0x002613D4
		public static LocalizedString ErrorCouldNotRemoveRoleAssignments(string roleGroupId)
		{
			return new LocalizedString("ErrorCouldNotRemoveRoleAssignments", "Ex528454", false, true, Strings.ResourceManager, new object[]
			{
				roleGroupId
			});
		}

		// Token: 0x060097D4 RID: 38868 RVA: 0x00263204 File Offset: 0x00261404
		public static LocalizedString TenantNotificationDebugHelpProviderReturnedEmptyUrl(string eventSource, int eventId, string language)
		{
			return new LocalizedString("TenantNotificationDebugHelpProviderReturnedEmptyUrl", "Ex9DAF2B", false, true, Strings.ResourceManager, new object[]
			{
				eventSource,
				eventId,
				language
			});
		}

		// Token: 0x060097D5 RID: 38869 RVA: 0x00263240 File Offset: 0x00261440
		public static LocalizedString ConfirmationMessageTestMAPIConnectivityServer(string Server)
		{
			return new LocalizedString("ConfirmationMessageTestMAPIConnectivityServer", "Ex3F4931", false, true, Strings.ResourceManager, new object[]
			{
				Server
			});
		}

		// Token: 0x060097D6 RID: 38870 RVA: 0x00263270 File Offset: 0x00261470
		public static LocalizedString UMRoleNotInstalled(string thumbprint, string serverName)
		{
			return new LocalizedString("UMRoleNotInstalled", "ExBD419E", false, true, Strings.ResourceManager, new object[]
			{
				thumbprint,
				serverName
			});
		}

		// Token: 0x060097D7 RID: 38871 RVA: 0x002632A4 File Offset: 0x002614A4
		public static LocalizedString ChangesTakeEffectAfterRestartingPopImapService(string protocol, string service, string server)
		{
			return new LocalizedString("ChangesTakeEffectAfterRestartingPopImapService", "", false, false, Strings.ResourceManager, new object[]
			{
				protocol,
				service,
				server
			});
		}

		// Token: 0x060097D8 RID: 38872 RVA: 0x002632DC File Offset: 0x002614DC
		public static LocalizedString ResponseMessage(string s)
		{
			return new LocalizedString("ResponseMessage", "", false, false, Strings.ResourceManager, new object[]
			{
				s
			});
		}

		// Token: 0x170030E4 RID: 12516
		// (get) Token: 0x060097D9 RID: 38873 RVA: 0x0026330B File Offset: 0x0026150B
		public static LocalizedString VerboseStartWinrm
		{
			get
			{
				return new LocalizedString("VerboseStartWinrm", "ExB55061", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170030E5 RID: 12517
		// (get) Token: 0x060097DA RID: 38874 RVA: 0x00263329 File Offset: 0x00261529
		public static LocalizedString CasHealthCalendarScenarioTestViewDesc
		{
			get
			{
				return new LocalizedString("CasHealthCalendarScenarioTestViewDesc", "Ex315855", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060097DB RID: 38875 RVA: 0x00263348 File Offset: 0x00261548
		public static LocalizedString InfoWarning(LocalizedString message)
		{
			return new LocalizedString("InfoWarning", "Ex4C0ED3", false, true, Strings.ResourceManager, new object[]
			{
				message
			});
		}

		// Token: 0x060097DC RID: 38876 RVA: 0x0026337C File Offset: 0x0026157C
		public static LocalizedString ConfirmationMessageStartDatabaseAvailabilityGroupADSite(string Identity, string ad)
		{
			return new LocalizedString("ConfirmationMessageStartDatabaseAvailabilityGroupADSite", "Ex93CF9F", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				ad
			});
		}

		// Token: 0x060097DD RID: 38877 RVA: 0x002633B0 File Offset: 0x002615B0
		public static LocalizedString ErrorVerifyLinkedGroupForest(string message)
		{
			return new LocalizedString("ErrorVerifyLinkedGroupForest", "Ex477DA9", false, true, Strings.ResourceManager, new object[]
			{
				message
			});
		}

		// Token: 0x060097DE RID: 38878 RVA: 0x002633E0 File Offset: 0x002615E0
		public static LocalizedString ConfirmationMessageRemoveManagementRole(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveManagementRole", "Ex50BD92", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x170030E6 RID: 12518
		// (get) Token: 0x060097DF RID: 38879 RVA: 0x0026340F File Offset: 0x0026160F
		public static LocalizedString UpdateAspnetConfigFailed
		{
			get
			{
				return new LocalizedString("UpdateAspnetConfigFailed", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060097E0 RID: 38880 RVA: 0x00263430 File Offset: 0x00261630
		public static LocalizedString VerboseRestartWSManAppPool(string appPool)
		{
			return new LocalizedString("VerboseRestartWSManAppPool", "Ex2CA648", false, true, Strings.ResourceManager, new object[]
			{
				appPool
			});
		}

		// Token: 0x060097E1 RID: 38881 RVA: 0x00263460 File Offset: 0x00261660
		public static LocalizedString SendConnectorWrongTargetServerRg(string serverName)
		{
			return new LocalizedString("SendConnectorWrongTargetServerRg", "Ex47CADC", false, true, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		// Token: 0x170030E7 RID: 12519
		// (get) Token: 0x060097E2 RID: 38882 RVA: 0x0026348F File Offset: 0x0026168F
		public static LocalizedString SingleCopyDatabase
		{
			get
			{
				return new LocalizedString("SingleCopyDatabase", "Ex533AB7", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170030E8 RID: 12520
		// (get) Token: 0x060097E3 RID: 38883 RVA: 0x002634AD File Offset: 0x002616AD
		public static LocalizedString ConfirmationMessageSetIPBlockListConfig
		{
			get
			{
				return new LocalizedString("ConfirmationMessageSetIPBlockListConfig", "Ex330D36", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060097E4 RID: 38884 RVA: 0x002634CC File Offset: 0x002616CC
		public static LocalizedString CasHealthEcpServiceRequestException(string message, string casServer, string fullResponse)
		{
			return new LocalizedString("CasHealthEcpServiceRequestException", "Ex090901", false, true, Strings.ResourceManager, new object[]
			{
				message,
				casServer,
				fullResponse
			});
		}

		// Token: 0x170030E9 RID: 12521
		// (get) Token: 0x060097E5 RID: 38885 RVA: 0x00263503 File Offset: 0x00261703
		public static LocalizedString InvalidRecipientAddress
		{
			get
			{
				return new LocalizedString("InvalidRecipientAddress", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170030EA RID: 12522
		// (get) Token: 0x060097E6 RID: 38886 RVA: 0x00263521 File Offset: 0x00261721
		public static LocalizedString AttachmentFilterEntryNotFound
		{
			get
			{
				return new LocalizedString("AttachmentFilterEntryNotFound", "ExB92B73", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060097E7 RID: 38887 RVA: 0x00263540 File Offset: 0x00261740
		public static LocalizedString VerboseSucceededReplicatingObject(string objectId, string server)
		{
			return new LocalizedString("VerboseSucceededReplicatingObject", "", false, false, Strings.ResourceManager, new object[]
			{
				objectId,
				server
			});
		}

		// Token: 0x060097E8 RID: 38888 RVA: 0x00263574 File Offset: 0x00261774
		public static LocalizedString AmUnknownRole(string machineName, string error)
		{
			return new LocalizedString("AmUnknownRole", "ExAFEA33", false, true, Strings.ResourceManager, new object[]
			{
				machineName,
				error
			});
		}

		// Token: 0x170030EB RID: 12523
		// (get) Token: 0x060097E9 RID: 38889 RVA: 0x002635A7 File Offset: 0x002617A7
		public static LocalizedString CasHealthEcpScenarioTestWebServiceDescription
		{
			get
			{
				return new LocalizedString("CasHealthEcpScenarioTestWebServiceDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060097EA RID: 38890 RVA: 0x002635C8 File Offset: 0x002617C8
		public static LocalizedString ProvisioningAgentTasksOnlyRunOnCas(string server)
		{
			return new LocalizedString("ProvisioningAgentTasksOnlyRunOnCas", "ExBCE3EC", false, true, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		// Token: 0x170030EC RID: 12524
		// (get) Token: 0x060097EB RID: 38891 RVA: 0x002635F7 File Offset: 0x002617F7
		public static LocalizedString WarningUnsupportedEdgeTransportConfigProperty
		{
			get
			{
				return new LocalizedString("WarningUnsupportedEdgeTransportConfigProperty", "ExA9B428", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060097EC RID: 38892 RVA: 0x00263618 File Offset: 0x00261818
		public static LocalizedString SetLiveFedDomainReserveResponse(string domain)
		{
			return new LocalizedString("SetLiveFedDomainReserveResponse", "Ex6AB5B0", false, true, Strings.ResourceManager, new object[]
			{
				domain
			});
		}

		// Token: 0x170030ED RID: 12525
		// (get) Token: 0x060097ED RID: 38893 RVA: 0x00263647 File Offset: 0x00261847
		public static LocalizedString ErrorBPAConfigFileNotFound
		{
			get
			{
				return new LocalizedString("ErrorBPAConfigFileNotFound", "Ex81B36D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170030EE RID: 12526
		// (get) Token: 0x060097EE RID: 38894 RVA: 0x00263665 File Offset: 0x00261865
		public static LocalizedString TargetDatabasesNotAllowed
		{
			get
			{
				return new LocalizedString("TargetDatabasesNotAllowed", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060097EF RID: 38895 RVA: 0x00263684 File Offset: 0x00261884
		public static LocalizedString AlsSubjectAdminFailure(string name)
		{
			return new LocalizedString("AlsSubjectAdminFailure", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x170030EF RID: 12527
		// (get) Token: 0x060097F0 RID: 38896 RVA: 0x002636B3 File Offset: 0x002618B3
		public static LocalizedString LocalSiteNotFound
		{
			get
			{
				return new LocalizedString("LocalSiteNotFound", "Ex3A36FC", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060097F1 RID: 38897 RVA: 0x002636D4 File Offset: 0x002618D4
		public static LocalizedString FailedToDeleteE14SearchObjectWhenUpgrade(string searchName, string error)
		{
			return new LocalizedString("FailedToDeleteE14SearchObjectWhenUpgrade", "", false, false, Strings.ResourceManager, new object[]
			{
				searchName,
				error
			});
		}

		// Token: 0x060097F2 RID: 38898 RVA: 0x00263708 File Offset: 0x00261908
		public static LocalizedString ErrorCertificateNotRSA(string certThumbprint)
		{
			return new LocalizedString("ErrorCertificateNotRSA", "Ex367F68", false, true, Strings.ResourceManager, new object[]
			{
				certThumbprint
			});
		}

		// Token: 0x060097F3 RID: 38899 RVA: 0x00263738 File Offset: 0x00261938
		public static LocalizedString AppConfigIOException(string fileName, int maxRetries, int retryInterval)
		{
			return new LocalizedString("AppConfigIOException", "ExBB7D1F", false, true, Strings.ResourceManager, new object[]
			{
				fileName,
				maxRetries,
				retryInterval
			});
		}

		// Token: 0x060097F4 RID: 38900 RVA: 0x0026377C File Offset: 0x0026197C
		public static LocalizedString CasHealthErrorPopulatingMailbox(string exceptionMessage)
		{
			return new LocalizedString("CasHealthErrorPopulatingMailbox", "ExD0EE3B", false, true, Strings.ResourceManager, new object[]
			{
				exceptionMessage
			});
		}

		// Token: 0x060097F5 RID: 38901 RVA: 0x002637AC File Offset: 0x002619AC
		public static LocalizedString WarningOperationOnDBWithJetCircularLogging(string pfdb)
		{
			return new LocalizedString("WarningOperationOnDBWithJetCircularLogging", "Ex34E5B4", false, true, Strings.ResourceManager, new object[]
			{
				pfdb
			});
		}

		// Token: 0x170030F0 RID: 12528
		// (get) Token: 0x060097F6 RID: 38902 RVA: 0x002637DB File Offset: 0x002619DB
		public static LocalizedString SetupComponentAdam
		{
			get
			{
				return new LocalizedString("SetupComponentAdam", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060097F7 RID: 38903 RVA: 0x002637FC File Offset: 0x002619FC
		public static LocalizedString RcrDatabaseFailoverOfflineLoss(string database, string sourceMachine, string lastMountedMachine)
		{
			return new LocalizedString("RcrDatabaseFailoverOfflineLoss", "ExB2F8DE", false, true, Strings.ResourceManager, new object[]
			{
				database,
				sourceMachine,
				lastMountedMachine
			});
		}

		// Token: 0x060097F8 RID: 38904 RVA: 0x00263834 File Offset: 0x00261A34
		public static LocalizedString ErrorCanNotUpgradePolicyWithMailboxSetting(string id)
		{
			return new LocalizedString("ErrorCanNotUpgradePolicyWithMailboxSetting", "Ex49253A", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x060097F9 RID: 38905 RVA: 0x00263864 File Offset: 0x00261A64
		public static LocalizedString FailedToSortPatches(uint error)
		{
			return new LocalizedString("FailedToSortPatches", "Ex6CC757", false, true, Strings.ResourceManager, new object[]
			{
				error
			});
		}

		// Token: 0x060097FA RID: 38906 RVA: 0x00263898 File Offset: 0x00261A98
		public static LocalizedString ConfirmationMessageSetClassificationRuleCollection(string identity)
		{
			return new LocalizedString("ConfirmationMessageSetClassificationRuleCollection", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x060097FB RID: 38907 RVA: 0x002638C8 File Offset: 0x00261AC8
		public static LocalizedString ErrorInvalidArchiveRecipientType(string user, string recipientType)
		{
			return new LocalizedString("ErrorInvalidArchiveRecipientType", "Ex4E9F3C", false, true, Strings.ResourceManager, new object[]
			{
				user,
				recipientType
			});
		}

		// Token: 0x060097FC RID: 38908 RVA: 0x002638FC File Offset: 0x00261AFC
		public static LocalizedString WarningChangeOfFederatedIdentitySourceADAttribute(string defaultValue)
		{
			return new LocalizedString("WarningChangeOfFederatedIdentitySourceADAttribute", "Ex550296", false, true, Strings.ResourceManager, new object[]
			{
				defaultValue
			});
		}

		// Token: 0x060097FD RID: 38909 RVA: 0x0026392C File Offset: 0x00261B2C
		public static LocalizedString ErrorCannotRetrieveServer(string dn)
		{
			return new LocalizedString("ErrorCannotRetrieveServer", "", false, false, Strings.ResourceManager, new object[]
			{
				dn
			});
		}

		// Token: 0x060097FE RID: 38910 RVA: 0x0026395C File Offset: 0x00261B5C
		public static LocalizedString ErrorServicePlanMailboxPlanInvalidSkuCapability(string skuCapability, string validSkuCapabilities)
		{
			return new LocalizedString("ErrorServicePlanMailboxPlanInvalidSkuCapability", "Ex05DAA8", false, true, Strings.ResourceManager, new object[]
			{
				skuCapability,
				validSkuCapabilities
			});
		}

		// Token: 0x170030F1 RID: 12529
		// (get) Token: 0x060097FF RID: 38911 RVA: 0x0026398F File Offset: 0x00261B8F
		public static LocalizedString ErrorApplyRusFailed
		{
			get
			{
				return new LocalizedString("ErrorApplyRusFailed", "ExBB121D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009800 RID: 38912 RVA: 0x002639B0 File Offset: 0x00261BB0
		public static LocalizedString ErrorNonEndUserRoleCannoBeAssignedToPolicy(string name)
		{
			return new LocalizedString("ErrorNonEndUserRoleCannoBeAssignedToPolicy", "Ex8C36F7", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x170030F2 RID: 12530
		// (get) Token: 0x06009801 RID: 38913 RVA: 0x002639DF File Offset: 0x00261BDF
		public static LocalizedString MtrtEventReceive
		{
			get
			{
				return new LocalizedString("MtrtEventReceive", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170030F3 RID: 12531
		// (get) Token: 0x06009802 RID: 38914 RVA: 0x002639FD File Offset: 0x00261BFD
		public static LocalizedString GlobalRoutingEntryVerificationSkipped
		{
			get
			{
				return new LocalizedString("GlobalRoutingEntryVerificationSkipped", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170030F4 RID: 12532
		// (get) Token: 0x06009803 RID: 38915 RVA: 0x00263A1B File Offset: 0x00261C1B
		public static LocalizedString MalboxFolderRightsNone
		{
			get
			{
				return new LocalizedString("MalboxFolderRightsNone", "ExDA0886", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009804 RID: 38916 RVA: 0x00263A3C File Offset: 0x00261C3C
		public static LocalizedString LoadedParameters(string configFilePath, int count)
		{
			return new LocalizedString("LoadedParameters", "Ex821A43", false, true, Strings.ResourceManager, new object[]
			{
				configFilePath,
				count
			});
		}

		// Token: 0x06009805 RID: 38917 RVA: 0x00263A74 File Offset: 0x00261C74
		public static LocalizedString ElcMdbNotFound(string mailboxAddress)
		{
			return new LocalizedString("ElcMdbNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				mailboxAddress
			});
		}

		// Token: 0x06009806 RID: 38918 RVA: 0x00263AA4 File Offset: 0x00261CA4
		public static LocalizedString ErrorMaxNumberOfCallerIds(int maxPhoneNumber, int maxContacts, int maxDefaultContactFolder)
		{
			return new LocalizedString("ErrorMaxNumberOfCallerIds", "", false, false, Strings.ResourceManager, new object[]
			{
				maxPhoneNumber,
				maxContacts,
				maxDefaultContactFolder
			});
		}

		// Token: 0x06009807 RID: 38919 RVA: 0x00263AEC File Offset: 0x00261CEC
		public static LocalizedString ConfirmationMessageRemoveManagedFolderMailboxPolicy(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveManagedFolderMailboxPolicy", "Ex219725", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x06009808 RID: 38920 RVA: 0x00263B1C File Offset: 0x00261D1C
		public static LocalizedString IllegalResumptionException(string oldVerb, string newVerb)
		{
			return new LocalizedString("IllegalResumptionException", "", false, false, Strings.ResourceManager, new object[]
			{
				oldVerb,
				newVerb
			});
		}

		// Token: 0x06009809 RID: 38921 RVA: 0x00263B50 File Offset: 0x00261D50
		public static LocalizedString AdminAuditLogSearchOutOfRangeStartIndex(int maxResultSize)
		{
			return new LocalizedString("AdminAuditLogSearchOutOfRangeStartIndex", "Ex6F60DD", false, true, Strings.ResourceManager, new object[]
			{
				maxResultSize
			});
		}

		// Token: 0x0600980A RID: 38922 RVA: 0x00263B84 File Offset: 0x00261D84
		public static LocalizedString SeederAlreadyCancelledPrompt(string dbName, string targetServer, string sourceServer)
		{
			return new LocalizedString("SeederAlreadyCancelledPrompt", "ExDFA091", false, true, Strings.ResourceManager, new object[]
			{
				dbName,
				targetServer,
				sourceServer
			});
		}

		// Token: 0x170030F5 RID: 12533
		// (get) Token: 0x0600980B RID: 38923 RVA: 0x00263BBB File Offset: 0x00261DBB
		public static LocalizedString ClassificationRuleCollectionIllegalScopedNewOobOperation
		{
			get
			{
				return new LocalizedString("ClassificationRuleCollectionIllegalScopedNewOobOperation", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600980C RID: 38924 RVA: 0x00263BDC File Offset: 0x00261DDC
		public static LocalizedString SchemaVersionDataValidationException(string validationError)
		{
			return new LocalizedString("SchemaVersionDataValidationException", "ExBB7C1A", false, true, Strings.ResourceManager, new object[]
			{
				validationError
			});
		}

		// Token: 0x0600980D RID: 38925 RVA: 0x00263C0C File Offset: 0x00261E0C
		public static LocalizedString ExceptionRunProcessFailed(int errorCode)
		{
			return new LocalizedString("ExceptionRunProcessFailed", "Ex376603", false, true, Strings.ResourceManager, new object[]
			{
				errorCode
			});
		}

		// Token: 0x170030F6 RID: 12534
		// (get) Token: 0x0600980E RID: 38926 RVA: 0x00263C40 File Offset: 0x00261E40
		public static LocalizedString ErrorBPAIisInstalledParameterRequired
		{
			get
			{
				return new LocalizedString("ErrorBPAIisInstalledParameterRequired", "Ex2B98A5", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170030F7 RID: 12535
		// (get) Token: 0x0600980F RID: 38927 RVA: 0x00263C5E File Offset: 0x00261E5E
		public static LocalizedString InvalidSelectionTarget
		{
			get
			{
				return new LocalizedString("InvalidSelectionTarget", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009810 RID: 38928 RVA: 0x00263C7C File Offset: 0x00261E7C
		public static LocalizedString MRSProxyIsRespondingtoPing(string mrsProxyServer)
		{
			return new LocalizedString("MRSProxyIsRespondingtoPing", "", false, false, Strings.ResourceManager, new object[]
			{
				mrsProxyServer
			});
		}

		// Token: 0x170030F8 RID: 12536
		// (get) Token: 0x06009811 RID: 38929 RVA: 0x00263CAB File Offset: 0x00261EAB
		public static LocalizedString VerboseSearchingAssigneeInDomainNC
		{
			get
			{
				return new LocalizedString("VerboseSearchingAssigneeInDomainNC", "ExAEF458", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170030F9 RID: 12537
		// (get) Token: 0x06009812 RID: 38930 RVA: 0x00263CC9 File Offset: 0x00261EC9
		public static LocalizedString SetupComponentConfiguringMailboxPermissions
		{
			get
			{
				return new LocalizedString("SetupComponentConfiguringMailboxPermissions", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009813 RID: 38931 RVA: 0x00263CE8 File Offset: 0x00261EE8
		public static LocalizedString CannotFindPKConfigFile(string file)
		{
			return new LocalizedString("CannotFindPKConfigFile", "Ex9297EF", false, true, Strings.ResourceManager, new object[]
			{
				file
			});
		}

		// Token: 0x06009814 RID: 38932 RVA: 0x00263D18 File Offset: 0x00261F18
		public static LocalizedString UMCallAnsweringRuleFindMeWithContextAndWithSecondNumber(string context, int key, string firstNumber, string secondNumber)
		{
			return new LocalizedString("UMCallAnsweringRuleFindMeWithContextAndWithSecondNumber", "", false, false, Strings.ResourceManager, new object[]
			{
				context,
				key,
				firstNumber,
				secondNumber
			});
		}

		// Token: 0x170030FA RID: 12538
		// (get) Token: 0x06009815 RID: 38933 RVA: 0x00263D58 File Offset: 0x00261F58
		public static LocalizedString ErrorAlsSearchResultLargeAttachmentSize
		{
			get
			{
				return new LocalizedString("ErrorAlsSearchResultLargeAttachmentSize", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170030FB RID: 12539
		// (get) Token: 0x06009816 RID: 38934 RVA: 0x00263D76 File Offset: 0x00261F76
		public static LocalizedString SetupProgressCreateRBACScopesContainer
		{
			get
			{
				return new LocalizedString("SetupProgressCreateRBACScopesContainer", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170030FC RID: 12540
		// (get) Token: 0x06009817 RID: 38935 RVA: 0x00263D94 File Offset: 0x00261F94
		public static LocalizedString SetupProgressHostedContentFilterPolicy
		{
			get
			{
				return new LocalizedString("SetupProgressHostedContentFilterPolicy", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009818 RID: 38936 RVA: 0x00263DB4 File Offset: 0x00261FB4
		public static LocalizedString ConfirmationMessageRemoveELCContentSettings(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveELCContentSettings", "Ex4213B4", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x06009819 RID: 38937 RVA: 0x00263DE4 File Offset: 0x00261FE4
		public static LocalizedString MRSExpectedDiagnosticsElementMissing(string xPath, string xml)
		{
			return new LocalizedString("MRSExpectedDiagnosticsElementMissing", "", false, false, Strings.ResourceManager, new object[]
			{
				xPath,
				xml
			});
		}

		// Token: 0x170030FD RID: 12541
		// (get) Token: 0x0600981A RID: 38938 RVA: 0x00263E17 File Offset: 0x00262017
		public static LocalizedString DuplicateDataClassificationSpecified
		{
			get
			{
				return new LocalizedString("DuplicateDataClassificationSpecified", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600981B RID: 38939 RVA: 0x00263E38 File Offset: 0x00262038
		public static LocalizedString ConfirmationMessageGetTeamMailboxDiagnostics(string Identity)
		{
			return new LocalizedString("ConfirmationMessageGetTeamMailboxDiagnostics", "", false, false, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x0600981C RID: 38940 RVA: 0x00263E68 File Offset: 0x00262068
		public static LocalizedString ErrorFailedToGetDatabaseProcessInfo(string databaseId)
		{
			return new LocalizedString("ErrorFailedToGetDatabaseProcessInfo", "", false, false, Strings.ResourceManager, new object[]
			{
				databaseId
			});
		}

		// Token: 0x0600981D RID: 38941 RVA: 0x00263E98 File Offset: 0x00262098
		public static LocalizedString ErrorMoveRequestIsProtected(string mailbox)
		{
			return new LocalizedString("ErrorMoveRequestIsProtected", "Ex975829", false, true, Strings.ResourceManager, new object[]
			{
				mailbox
			});
		}

		// Token: 0x0600981E RID: 38942 RVA: 0x00263EC8 File Offset: 0x002620C8
		public static LocalizedString RemoveDagNeedsZeroServersException(int serverCount)
		{
			return new LocalizedString("RemoveDagNeedsZeroServersException", "", false, false, Strings.ResourceManager, new object[]
			{
				serverCount
			});
		}

		// Token: 0x0600981F RID: 38943 RVA: 0x00263EFC File Offset: 0x002620FC
		public static LocalizedString ErrorInvalidAuthScheme(string scheme)
		{
			return new LocalizedString("ErrorInvalidAuthScheme", "", false, false, Strings.ResourceManager, new object[]
			{
				scheme
			});
		}

		// Token: 0x170030FE RID: 12542
		// (get) Token: 0x06009820 RID: 38944 RVA: 0x00263F2B File Offset: 0x0026212B
		public static LocalizedString MailboxTransportDeliveryServiceDisplayName
		{
			get
			{
				return new LocalizedString("MailboxTransportDeliveryServiceDisplayName", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009821 RID: 38945 RVA: 0x00263F4C File Offset: 0x0026214C
		public static LocalizedString VerboseIgnoringAssignment(string id)
		{
			return new LocalizedString("VerboseIgnoringAssignment", "Ex8BF9C3", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x170030FF RID: 12543
		// (get) Token: 0x06009822 RID: 38946 RVA: 0x00263F7B File Offset: 0x0026217B
		public static LocalizedString ErrorSetSendAsOnMailboxPermissionNotAllowed
		{
			get
			{
				return new LocalizedString("ErrorSetSendAsOnMailboxPermissionNotAllowed", "ExB91969", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003100 RID: 12544
		// (get) Token: 0x06009823 RID: 38947 RVA: 0x00263F99 File Offset: 0x00262199
		public static LocalizedString ErrorAnotherPublicFolderMigrationTypeAlreadyInProgress
		{
			get
			{
				return new LocalizedString("ErrorAnotherPublicFolderMigrationTypeAlreadyInProgress", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003101 RID: 12545
		// (get) Token: 0x06009824 RID: 38948 RVA: 0x00263FB7 File Offset: 0x002621B7
		public static LocalizedString ErrorNoDCInLocalSite
		{
			get
			{
				return new LocalizedString("ErrorNoDCInLocalSite", "Ex7B4211", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009825 RID: 38949 RVA: 0x00263FD8 File Offset: 0x002621D8
		public static LocalizedString WarningLPDirectoryNotFound(string path)
		{
			return new LocalizedString("WarningLPDirectoryNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				path
			});
		}

		// Token: 0x06009826 RID: 38950 RVA: 0x00264008 File Offset: 0x00262208
		public static LocalizedString ErrorCannotMoveLitigationHoldToPreE14(string identity)
		{
			return new LocalizedString("ErrorCannotMoveLitigationHoldToPreE14", "ExC72C3B", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x06009827 RID: 38951 RVA: 0x00264038 File Offset: 0x00262238
		public static LocalizedString ConfirmEnableCertForUM(string thumbprint)
		{
			return new LocalizedString("ConfirmEnableCertForUM", "ExE41067", false, true, Strings.ResourceManager, new object[]
			{
				thumbprint
			});
		}

		// Token: 0x17003102 RID: 12546
		// (get) Token: 0x06009828 RID: 38952 RVA: 0x00264067 File Offset: 0x00262267
		public static LocalizedString BridgeheadPrereqCheck
		{
			get
			{
				return new LocalizedString("BridgeheadPrereqCheck", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003103 RID: 12547
		// (get) Token: 0x06009829 RID: 38953 RVA: 0x00264085 File Offset: 0x00262285
		public static LocalizedString PhoneNumberAlreadyRegistered
		{
			get
			{
				return new LocalizedString("PhoneNumberAlreadyRegistered", "ExCF4B78", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003104 RID: 12548
		// (get) Token: 0x0600982A RID: 38954 RVA: 0x002640A3 File Offset: 0x002622A3
		public static LocalizedString ErrorTeamMailboxCanNotLoadPolicy
		{
			get
			{
				return new LocalizedString("ErrorTeamMailboxCanNotLoadPolicy", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003105 RID: 12549
		// (get) Token: 0x0600982B RID: 38955 RVA: 0x002640C1 File Offset: 0x002622C1
		public static LocalizedString VerboseResolvingExclusiveRecipientWriteScope
		{
			get
			{
				return new LocalizedString("VerboseResolvingExclusiveRecipientWriteScope", "Ex743C51", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600982C RID: 38956 RVA: 0x002640E0 File Offset: 0x002622E0
		public static LocalizedString ConfirmationMessageUpdateDistributionGroupMember(string Identity)
		{
			return new LocalizedString("ConfirmationMessageUpdateDistributionGroupMember", "ExFE7171", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x0600982D RID: 38957 RVA: 0x00264110 File Offset: 0x00262310
		public static LocalizedString ErrorAmbiguousRetentionPolicyTagId(string folderid)
		{
			return new LocalizedString("ErrorAmbiguousRetentionPolicyTagId", "ExD64865", false, true, Strings.ResourceManager, new object[]
			{
				folderid
			});
		}

		// Token: 0x17003106 RID: 12550
		// (get) Token: 0x0600982E RID: 38958 RVA: 0x0026413F File Offset: 0x0026233F
		public static LocalizedString ConfirmationMessageTestOutlookWebServices
		{
			get
			{
				return new LocalizedString("ConfirmationMessageTestOutlookWebServices", "Ex74913E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003107 RID: 12551
		// (get) Token: 0x0600982F RID: 38959 RVA: 0x0026415D File Offset: 0x0026235D
		public static LocalizedString AddSecondaryDomainDescription
		{
			get
			{
				return new LocalizedString("AddSecondaryDomainDescription", "Ex978641", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009830 RID: 38960 RVA: 0x0026417C File Offset: 0x0026237C
		public static LocalizedString ErrorInvalidRecipientTypeDetails(string recipientName)
		{
			return new LocalizedString("ErrorInvalidRecipientTypeDetails", "", false, false, Strings.ResourceManager, new object[]
			{
				recipientName
			});
		}

		// Token: 0x17003108 RID: 12552
		// (get) Token: 0x06009831 RID: 38961 RVA: 0x002641AB File Offset: 0x002623AB
		public static LocalizedString ErrorImportingTpdFromRmsOnline
		{
			get
			{
				return new LocalizedString("ErrorImportingTpdFromRmsOnline", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003109 RID: 12553
		// (get) Token: 0x06009832 RID: 38962 RVA: 0x002641C9 File Offset: 0x002623C9
		public static LocalizedString DisasterRecoveryCafeRoleDescription
		{
			get
			{
				return new LocalizedString("DisasterRecoveryCafeRoleDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009833 RID: 38963 RVA: 0x002641E8 File Offset: 0x002623E8
		public static LocalizedString ErrorRelocationStateRequestedIsNotAllowed(string tenant)
		{
			return new LocalizedString("ErrorRelocationStateRequestedIsNotAllowed", "", false, false, Strings.ResourceManager, new object[]
			{
				tenant
			});
		}

		// Token: 0x06009834 RID: 38964 RVA: 0x00264218 File Offset: 0x00262418
		public static LocalizedString WarningSystemAddressListNotFound(string addressList)
		{
			return new LocalizedString("WarningSystemAddressListNotFound", "Ex05C6D1", false, true, Strings.ResourceManager, new object[]
			{
				addressList
			});
		}

		// Token: 0x06009835 RID: 38965 RVA: 0x00264248 File Offset: 0x00262448
		public static LocalizedString ErrorServicePlanDoesntAllowHydration(string programid, string offerid)
		{
			return new LocalizedString("ErrorServicePlanDoesntAllowHydration", "", false, false, Strings.ResourceManager, new object[]
			{
				programid,
				offerid
			});
		}

		// Token: 0x06009836 RID: 38966 RVA: 0x0026427C File Offset: 0x0026247C
		public static LocalizedString VerboseCreatePublicFolderTree(string id)
		{
			return new LocalizedString("VerboseCreatePublicFolderTree", "Ex7EACC6", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x1700310A RID: 12554
		// (get) Token: 0x06009837 RID: 38967 RVA: 0x002642AB File Offset: 0x002624AB
		public static LocalizedString CasHealthConnectionType
		{
			get
			{
				return new LocalizedString("CasHealthConnectionType", "ExF5CE72", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009838 RID: 38968 RVA: 0x002642CC File Offset: 0x002624CC
		public static LocalizedString NoDomainInTheRemoteOrganizationRelationshipIsFederatedLocally(string remoteName)
		{
			return new LocalizedString("NoDomainInTheRemoteOrganizationRelationshipIsFederatedLocally", "Ex40E36D", false, true, Strings.ResourceManager, new object[]
			{
				remoteName
			});
		}

		// Token: 0x06009839 RID: 38969 RVA: 0x002642FC File Offset: 0x002624FC
		public static LocalizedString TestSearchErrorEvent(string error)
		{
			return new LocalizedString("TestSearchErrorEvent", "Ex823C76", false, true, Strings.ResourceManager, new object[]
			{
				error
			});
		}

		// Token: 0x1700310B RID: 12555
		// (get) Token: 0x0600983A RID: 38970 RVA: 0x0026432B File Offset: 0x0026252B
		public static LocalizedString SetupProgressOfflineAddressBookEnabled
		{
			get
			{
				return new LocalizedString("SetupProgressOfflineAddressBookEnabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700310C RID: 12556
		// (get) Token: 0x0600983B RID: 38971 RVA: 0x00264349 File Offset: 0x00262549
		public static LocalizedString CasHealthOwaVdirNameHeader
		{
			get
			{
				return new LocalizedString("CasHealthOwaVdirNameHeader", "Ex7B0D7E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600983C RID: 38972 RVA: 0x00264368 File Offset: 0x00262568
		public static LocalizedString VerboseRemovingRoleGroup(string id)
		{
			return new LocalizedString("VerboseRemovingRoleGroup", "Ex9917FF", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x0600983D RID: 38973 RVA: 0x00264398 File Offset: 0x00262598
		public static LocalizedString ServerNotFound(string source)
		{
			return new LocalizedString("ServerNotFound", "Ex669F24", false, true, Strings.ResourceManager, new object[]
			{
				source
			});
		}

		// Token: 0x1700310D RID: 12557
		// (get) Token: 0x0600983E RID: 38974 RVA: 0x002643C7 File Offset: 0x002625C7
		public static LocalizedString AllActiveSyncTransactionsSucceeded
		{
			get
			{
				return new LocalizedString("AllActiveSyncTransactionsSucceeded", "Ex4D6E91", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600983F RID: 38975 RVA: 0x002643E8 File Offset: 0x002625E8
		public static LocalizedString ErrorRemoveUserFailed(string id)
		{
			return new LocalizedString("ErrorRemoveUserFailed", "Ex59CEDA", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x06009840 RID: 38976 RVA: 0x00264418 File Offset: 0x00262618
		public static LocalizedString ErrorCouldNotAddGroupMember(string member, string group, string message)
		{
			return new LocalizedString("ErrorCouldNotAddGroupMember", "Ex6E255B", false, true, Strings.ResourceManager, new object[]
			{
				member,
				group,
				message
			});
		}

		// Token: 0x06009841 RID: 38977 RVA: 0x00264450 File Offset: 0x00262650
		public static LocalizedString WarningFailedCreateDirectory(string server, string dir)
		{
			return new LocalizedString("WarningFailedCreateDirectory", "Ex361BF1", false, true, Strings.ResourceManager, new object[]
			{
				server,
				dir
			});
		}

		// Token: 0x06009842 RID: 38978 RVA: 0x00264484 File Offset: 0x00262684
		public static LocalizedString ConfirmationMessageRemoveMailboxDatabase(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveMailboxDatabase", "Ex8ED02B", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x06009843 RID: 38979 RVA: 0x002644B4 File Offset: 0x002626B4
		public static LocalizedString MaxDevicesReached(int deviceCount, uint maxDevicesLimit)
		{
			return new LocalizedString("MaxDevicesReached", "Ex8EFF8A", false, true, Strings.ResourceManager, new object[]
			{
				deviceCount,
				maxDevicesLimit
			});
		}

		// Token: 0x1700310E RID: 12558
		// (get) Token: 0x06009844 RID: 38980 RVA: 0x002644F1 File Offset: 0x002626F1
		public static LocalizedString RootDomainNotFoundException
		{
			get
			{
				return new LocalizedString("RootDomainNotFoundException", "ExDB13BA", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009845 RID: 38981 RVA: 0x00264510 File Offset: 0x00262710
		public static LocalizedString ConfirmationMessageRemoveEdgeSyncSendConnector(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveEdgeSyncSendConnector", "Ex2A819C", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x1700310F RID: 12559
		// (get) Token: 0x06009846 RID: 38982 RVA: 0x0026453F File Offset: 0x0026273F
		public static LocalizedString RequestAlreadyCanceled
		{
			get
			{
				return new LocalizedString("RequestAlreadyCanceled", "ExCC7252", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003110 RID: 12560
		// (get) Token: 0x06009847 RID: 38983 RVA: 0x0026455D File Offset: 0x0026275D
		public static LocalizedString InstallWatchDogServiceTask
		{
			get
			{
				return new LocalizedString("InstallWatchDogServiceTask", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009848 RID: 38984 RVA: 0x0026457C File Offset: 0x0026277C
		public static LocalizedString ConfirmationMessageRemoveInboundConnector(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveInboundConnector", "", false, false, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x17003111 RID: 12561
		// (get) Token: 0x06009849 RID: 38985 RVA: 0x002645AB File Offset: 0x002627AB
		public static LocalizedString ScopeIsInUse
		{
			get
			{
				return new LocalizedString("ScopeIsInUse", "ExE2775C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600984A RID: 38986 RVA: 0x002645CC File Offset: 0x002627CC
		public static LocalizedString ConfirmationMessageNewRetentionPolicy(string Name)
		{
			return new LocalizedString("ConfirmationMessageNewRetentionPolicy", "Ex896F73", false, true, Strings.ResourceManager, new object[]
			{
				Name
			});
		}

		// Token: 0x17003112 RID: 12562
		// (get) Token: 0x0600984B RID: 38987 RVA: 0x002645FB File Offset: 0x002627FB
		public static LocalizedString CasHealthOwaInvalidCertificate
		{
			get
			{
				return new LocalizedString("CasHealthOwaInvalidCertificate", "Ex09968F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600984C RID: 38988 RVA: 0x0026461C File Offset: 0x0026281C
		public static LocalizedString DagFswServerNotAccessibleException(string fswMachine, Exception ex)
		{
			return new LocalizedString("DagFswServerNotAccessibleException", "", false, false, Strings.ResourceManager, new object[]
			{
				fswMachine,
				ex
			});
		}

		// Token: 0x0600984D RID: 38989 RVA: 0x00264650 File Offset: 0x00262850
		public static LocalizedString ErrorParameterInvalidForFederatedTenant(string organization)
		{
			return new LocalizedString("ErrorParameterInvalidForFederatedTenant", "ExEA381B", false, true, Strings.ResourceManager, new object[]
			{
				organization
			});
		}

		// Token: 0x17003113 RID: 12563
		// (get) Token: 0x0600984E RID: 38990 RVA: 0x0026467F File Offset: 0x0026287F
		public static LocalizedString TestSearchCheckService
		{
			get
			{
				return new LocalizedString("TestSearchCheckService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003114 RID: 12564
		// (get) Token: 0x0600984F RID: 38991 RVA: 0x0026469D File Offset: 0x0026289D
		public static LocalizedString ServiceHostDisplayName
		{
			get
			{
				return new LocalizedString("ServiceHostDisplayName", "ExCA1864", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009850 RID: 38992 RVA: 0x002646BC File Offset: 0x002628BC
		public static LocalizedString RemoveDagServerDatabaseIsReplicatedException(string mailboxServer, string databaseName)
		{
			return new LocalizedString("RemoveDagServerDatabaseIsReplicatedException", "", false, false, Strings.ResourceManager, new object[]
			{
				mailboxServer,
				databaseName
			});
		}

		// Token: 0x06009851 RID: 38993 RVA: 0x002646F0 File Offset: 0x002628F0
		public static LocalizedString WarningSetAdminAuditLogOnPreE15(string org)
		{
			return new LocalizedString("WarningSetAdminAuditLogOnPreE15", "", false, false, Strings.ResourceManager, new object[]
			{
				org
			});
		}

		// Token: 0x06009852 RID: 38994 RVA: 0x00264720 File Offset: 0x00262920
		public static LocalizedString EnableConversationsPreProcessing(string user)
		{
			return new LocalizedString("EnableConversationsPreProcessing", "ExC90F46", false, true, Strings.ResourceManager, new object[]
			{
				user
			});
		}

		// Token: 0x17003115 RID: 12565
		// (get) Token: 0x06009853 RID: 38995 RVA: 0x0026474F File Offset: 0x0026294F
		public static LocalizedString SetupProgressInstallGlobalSettingsContainer
		{
			get
			{
				return new LocalizedString("SetupProgressInstallGlobalSettingsContainer", "ExAFFC6A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009854 RID: 38996 RVA: 0x00264770 File Offset: 0x00262970
		public static LocalizedString SetDatabaseRequestedSchemaVersion(string database, int version)
		{
			return new LocalizedString("SetDatabaseRequestedSchemaVersion", "", false, false, Strings.ResourceManager, new object[]
			{
				database,
				version
			});
		}

		// Token: 0x06009855 RID: 38997 RVA: 0x002647A8 File Offset: 0x002629A8
		public static LocalizedString ConfirmationMessageNewMailboxLinkedWithSyncMailbox(string Name, string MasterAccountSid, string UserPrincipalName, string OrganizationalUnit)
		{
			return new LocalizedString("ConfirmationMessageNewMailboxLinkedWithSyncMailbox", "Ex2B061C", false, true, Strings.ResourceManager, new object[]
			{
				Name,
				MasterAccountSid,
				UserPrincipalName,
				OrganizationalUnit
			});
		}

		// Token: 0x06009856 RID: 38998 RVA: 0x002647E4 File Offset: 0x002629E4
		public static LocalizedString ErrorMailboxExceedsTargetQuota(string mailboxSize, string targetQuota)
		{
			return new LocalizedString("ErrorMailboxExceedsTargetQuota", "ExE49EB7", false, true, Strings.ResourceManager, new object[]
			{
				mailboxSize,
				targetQuota
			});
		}

		// Token: 0x17003116 RID: 12566
		// (get) Token: 0x06009857 RID: 38999 RVA: 0x00264817 File Offset: 0x00262A17
		public static LocalizedString TopologyServiceResultSuccess
		{
			get
			{
				return new LocalizedString("TopologyServiceResultSuccess", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003117 RID: 12567
		// (get) Token: 0x06009858 RID: 39000 RVA: 0x00264835 File Offset: 0x00262A35
		public static LocalizedString InfoOverallPass
		{
			get
			{
				return new LocalizedString("InfoOverallPass", "ExE9F688", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003118 RID: 12568
		// (get) Token: 0x06009859 RID: 39001 RVA: 0x00264853 File Offset: 0x00262A53
		public static LocalizedString ErrorCannotUpdateGlsDomainFromOrgId
		{
			get
			{
				return new LocalizedString("ErrorCannotUpdateGlsDomainFromOrgId", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600985A RID: 39002 RVA: 0x00264874 File Offset: 0x00262A74
		public static LocalizedString UnknownFederationDomainAuthenticationType(string domain)
		{
			return new LocalizedString("UnknownFederationDomainAuthenticationType", "", false, false, Strings.ResourceManager, new object[]
			{
				domain
			});
		}

		// Token: 0x0600985B RID: 39003 RVA: 0x002648A4 File Offset: 0x00262AA4
		public static LocalizedString InformationSqlStatement(string statement)
		{
			return new LocalizedString("InformationSqlStatement", "", false, false, Strings.ResourceManager, new object[]
			{
				statement
			});
		}

		// Token: 0x0600985C RID: 39004 RVA: 0x002648D4 File Offset: 0x00262AD4
		public static LocalizedString InvalidLicenseName(string name)
		{
			return new LocalizedString("InvalidLicenseName", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x0600985D RID: 39005 RVA: 0x00264904 File Offset: 0x00262B04
		public static LocalizedString MailForestContactFound(int num)
		{
			return new LocalizedString("MailForestContactFound", "ExAB4FAE", false, true, Strings.ResourceManager, new object[]
			{
				num
			});
		}

		// Token: 0x0600985E RID: 39006 RVA: 0x00264938 File Offset: 0x00262B38
		public static LocalizedString RunCmdletOnSite(string site)
		{
			return new LocalizedString("RunCmdletOnSite", "", false, false, Strings.ResourceManager, new object[]
			{
				site
			});
		}

		// Token: 0x17003119 RID: 12569
		// (get) Token: 0x0600985F RID: 39007 RVA: 0x00264967 File Offset: 0x00262B67
		public static LocalizedString SendConnectorTargetServersNotSet
		{
			get
			{
				return new LocalizedString("SendConnectorTargetServersNotSet", "Ex20205C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009860 RID: 39008 RVA: 0x00264988 File Offset: 0x00262B88
		public static LocalizedString DeleteVirtualDirectoryFail(string serverName, string metabasePath)
		{
			return new LocalizedString("DeleteVirtualDirectoryFail", "Ex6EE1C3", false, true, Strings.ResourceManager, new object[]
			{
				serverName,
				metabasePath
			});
		}

		// Token: 0x1700311A RID: 12570
		// (get) Token: 0x06009861 RID: 39009 RVA: 0x002649BB File Offset: 0x00262BBB
		public static LocalizedString SetupComponentMonitoring
		{
			get
			{
				return new LocalizedString("SetupComponentMonitoring", "Ex4142AF", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700311B RID: 12571
		// (get) Token: 0x06009862 RID: 39010 RVA: 0x002649D9 File Offset: 0x00262BD9
		public static LocalizedString ImportFileDataIsNull
		{
			get
			{
				return new LocalizedString("ImportFileDataIsNull", "Ex428987", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009863 RID: 39011 RVA: 0x002649F8 File Offset: 0x00262BF8
		public static LocalizedString MobileDeviceLogException(string msg)
		{
			return new LocalizedString("MobileDeviceLogException", "Ex4BFB07", false, true, Strings.ResourceManager, new object[]
			{
				msg
			});
		}

		// Token: 0x06009864 RID: 39012 RVA: 0x00264A28 File Offset: 0x00262C28
		public static LocalizedString ConfirmationMessageSetWorkloadManagementPolicy(string Name)
		{
			return new LocalizedString("ConfirmationMessageSetWorkloadManagementPolicy", "", false, false, Strings.ResourceManager, new object[]
			{
				Name
			});
		}

		// Token: 0x06009865 RID: 39013 RVA: 0x00264A58 File Offset: 0x00262C58
		public static LocalizedString ConfirmationMessageRemoveAddressBookPolicy(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveAddressBookPolicy", "", false, false, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x1700311C RID: 12572
		// (get) Token: 0x06009866 RID: 39014 RVA: 0x00264A87 File Offset: 0x00262C87
		public static LocalizedString ErrorDatabaseUnavailableForProvisioning
		{
			get
			{
				return new LocalizedString("ErrorDatabaseUnavailableForProvisioning", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009867 RID: 39015 RVA: 0x00264AA8 File Offset: 0x00262CA8
		public static LocalizedString CasHealthConfirmTestActiveSyncWithServer(string clientAccessServerName)
		{
			return new LocalizedString("CasHealthConfirmTestActiveSyncWithServer", "Ex981AB0", false, true, Strings.ResourceManager, new object[]
			{
				clientAccessServerName
			});
		}

		// Token: 0x1700311D RID: 12573
		// (get) Token: 0x06009868 RID: 39016 RVA: 0x00264AD7 File Offset: 0x00262CD7
		public static LocalizedString StartingToCopyOwaLPFiles
		{
			get
			{
				return new LocalizedString("StartingToCopyOwaLPFiles", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700311E RID: 12574
		// (get) Token: 0x06009869 RID: 39017 RVA: 0x00264AF5 File Offset: 0x00262CF5
		public static LocalizedString AutodiscoverServiceCallFailed
		{
			get
			{
				return new LocalizedString("AutodiscoverServiceCallFailed", "Ex0508B7", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700311F RID: 12575
		// (get) Token: 0x0600986A RID: 39018 RVA: 0x00264B13 File Offset: 0x00262D13
		public static LocalizedString IncompatibleDatabaseSchemaVersionsInDAG
		{
			get
			{
				return new LocalizedString("IncompatibleDatabaseSchemaVersionsInDAG", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600986B RID: 39019 RVA: 0x00264B34 File Offset: 0x00262D34
		public static LocalizedString TraceCannotCreateXmlReportFile(string filename, string exception)
		{
			return new LocalizedString("TraceCannotCreateXmlReportFile", "Ex3C776F", false, true, Strings.ResourceManager, new object[]
			{
				filename,
				exception
			});
		}

		// Token: 0x17003120 RID: 12576
		// (get) Token: 0x0600986C RID: 39020 RVA: 0x00264B67 File Offset: 0x00262D67
		public static LocalizedString ErrorBPAConfigFileLoad
		{
			get
			{
				return new LocalizedString("ErrorBPAConfigFileLoad", "Ex0B89B2", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003121 RID: 12577
		// (get) Token: 0x0600986D RID: 39021 RVA: 0x00264B85 File Offset: 0x00262D85
		public static LocalizedString Imap4ServiceDescription
		{
			get
			{
				return new LocalizedString("Imap4ServiceDescription", "Ex7CD064", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003122 RID: 12578
		// (get) Token: 0x0600986E RID: 39022 RVA: 0x00264BA3 File Offset: 0x00262DA3
		public static LocalizedString SetupProgressMaxConcurrentMigrations
		{
			get
			{
				return new LocalizedString("SetupProgressMaxConcurrentMigrations", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600986F RID: 39023 RVA: 0x00264BC4 File Offset: 0x00262DC4
		public static LocalizedString ConfirmationMessageRemoveSyncServiceInstance(string serviceInstanceId)
		{
			return new LocalizedString("ConfirmationMessageRemoveSyncServiceInstance", "", false, false, Strings.ResourceManager, new object[]
			{
				serviceInstanceId
			});
		}

		// Token: 0x06009870 RID: 39024 RVA: 0x00264BF4 File Offset: 0x00262DF4
		public static LocalizedString OutlookProtectionRuleNameIsNotUnique(string name)
		{
			return new LocalizedString("OutlookProtectionRuleNameIsNotUnique", "ExC1C013", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x17003123 RID: 12579
		// (get) Token: 0x06009871 RID: 39025 RVA: 0x00264C23 File Offset: 0x00262E23
		public static LocalizedString WarningSafetyNetHoldTimeMustBeGreaterThanReplayLagTime
		{
			get
			{
				return new LocalizedString("WarningSafetyNetHoldTimeMustBeGreaterThanReplayLagTime", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009872 RID: 39026 RVA: 0x00264C44 File Offset: 0x00262E44
		public static LocalizedString ErrorCanRetargetOnlyQueuedMoves(string identity)
		{
			return new LocalizedString("ErrorCanRetargetOnlyQueuedMoves", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x17003124 RID: 12580
		// (get) Token: 0x06009873 RID: 39027 RVA: 0x00264C73 File Offset: 0x00262E73
		public static LocalizedString SetupComponentMidFileCopyAllRoles
		{
			get
			{
				return new LocalizedString("SetupComponentMidFileCopyAllRoles", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003125 RID: 12581
		// (get) Token: 0x06009874 RID: 39028 RVA: 0x00264C91 File Offset: 0x00262E91
		public static LocalizedString UninstallMonitoringServiceTask
		{
			get
			{
				return new LocalizedString("UninstallMonitoringServiceTask", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009875 RID: 39029 RVA: 0x00264CB0 File Offset: 0x00262EB0
		public static LocalizedString WarningClusterNodeNotFoundInDag(string nodeName, string dagName)
		{
			return new LocalizedString("WarningClusterNodeNotFoundInDag", "Ex654AE7", false, true, Strings.ResourceManager, new object[]
			{
				nodeName,
				dagName
			});
		}

		// Token: 0x06009876 RID: 39030 RVA: 0x00264CE4 File Offset: 0x00262EE4
		public static LocalizedString SetServiceInstanceMapResultFormat(string code, string description)
		{
			return new LocalizedString("SetServiceInstanceMapResultFormat", "Ex4FAF9C", false, true, Strings.ResourceManager, new object[]
			{
				code,
				description
			});
		}

		// Token: 0x17003126 RID: 12582
		// (get) Token: 0x06009877 RID: 39031 RVA: 0x00264D17 File Offset: 0x00262F17
		public static LocalizedString SmartHostsValidationFailedWarningMessage
		{
			get
			{
				return new LocalizedString("SmartHostsValidationFailedWarningMessage", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003127 RID: 12583
		// (get) Token: 0x06009878 RID: 39032 RVA: 0x00264D35 File Offset: 0x00262F35
		public static LocalizedString ClassificationRuleCollectionEngineValidationFailure
		{
			get
			{
				return new LocalizedString("ClassificationRuleCollectionEngineValidationFailure", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003128 RID: 12584
		// (get) Token: 0x06009879 RID: 39033 RVA: 0x00264D53 File Offset: 0x00262F53
		public static LocalizedString CasHealthDeleteItemScenarioDescription
		{
			get
			{
				return new LocalizedString("CasHealthDeleteItemScenarioDescription", "Ex35AB6B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600987A RID: 39034 RVA: 0x00264D74 File Offset: 0x00262F74
		public static LocalizedString ErrorCannotGetDomainStatusFromPartnerSTS(string domain, string appId, string errdetails)
		{
			return new LocalizedString("ErrorCannotGetDomainStatusFromPartnerSTS", "Ex2BC462", false, true, Strings.ResourceManager, new object[]
			{
				domain,
				appId,
				errdetails
			});
		}

		// Token: 0x0600987B RID: 39035 RVA: 0x00264DAC File Offset: 0x00262FAC
		public static LocalizedString CommentsHaveInvalidChars(int ch)
		{
			return new LocalizedString("CommentsHaveInvalidChars", "ExC95DE4", false, true, Strings.ResourceManager, new object[]
			{
				ch
			});
		}

		// Token: 0x0600987C RID: 39036 RVA: 0x00264DE0 File Offset: 0x00262FE0
		public static LocalizedString ConfirmationMessageNewManagementRole(string Name, string Parent)
		{
			return new LocalizedString("ConfirmationMessageNewManagementRole", "Ex863DF4", false, true, Strings.ResourceManager, new object[]
			{
				Name,
				Parent
			});
		}

		// Token: 0x0600987D RID: 39037 RVA: 0x00264E14 File Offset: 0x00263014
		public static LocalizedString ConfirmationMessageNewEdgeSyncServiceConfigWithSiteSpecified(string id)
		{
			return new LocalizedString("ConfirmationMessageNewEdgeSyncServiceConfigWithSiteSpecified", "ExAED717", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x17003129 RID: 12585
		// (get) Token: 0x0600987E RID: 39038 RVA: 0x00264E43 File Offset: 0x00263043
		public static LocalizedString ADAttributeMobileNumber
		{
			get
			{
				return new LocalizedString("ADAttributeMobileNumber", "ExBE844A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600987F RID: 39039 RVA: 0x00264E64 File Offset: 0x00263064
		public static LocalizedString LogMigrationBeforeApplyRUS(string alias, string proxyAddresses)
		{
			return new LocalizedString("LogMigrationBeforeApplyRUS", "Ex84CC11", false, true, Strings.ResourceManager, new object[]
			{
				alias,
				proxyAddresses
			});
		}

		// Token: 0x1700312A RID: 12586
		// (get) Token: 0x06009880 RID: 39040 RVA: 0x00264E97 File Offset: 0x00263097
		public static LocalizedString SetupProgressCleanRegistry
		{
			get
			{
				return new LocalizedString("SetupProgressCleanRegistry", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009881 RID: 39041 RVA: 0x00264EB8 File Offset: 0x002630B8
		public static LocalizedString ConfirmationMessageSetMalwareFilteringServer(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetMalwareFilteringServer", "", false, false, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x1700312B RID: 12587
		// (get) Token: 0x06009882 RID: 39042 RVA: 0x00264EE7 File Offset: 0x002630E7
		public static LocalizedString VerboseCheckRequiredFiles
		{
			get
			{
				return new LocalizedString("VerboseCheckRequiredFiles", "Ex5AB0E7", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700312C RID: 12588
		// (get) Token: 0x06009883 RID: 39043 RVA: 0x00264F05 File Offset: 0x00263105
		public static LocalizedString BackSyncUrlNeedsToBeAbsolute
		{
			get
			{
				return new LocalizedString("BackSyncUrlNeedsToBeAbsolute", "ExCA6673", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009884 RID: 39044 RVA: 0x00264F24 File Offset: 0x00263124
		public static LocalizedString NoExchangeRoleInstalled(string serverName)
		{
			return new LocalizedString("NoExchangeRoleInstalled", "Ex7D7A51", false, true, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		// Token: 0x1700312D RID: 12589
		// (get) Token: 0x06009885 RID: 39045 RVA: 0x00264F53 File Offset: 0x00263153
		public static LocalizedString FfoWebServicePostConfigComponentDescription
		{
			get
			{
				return new LocalizedString("FfoWebServicePostConfigComponentDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700312E RID: 12590
		// (get) Token: 0x06009886 RID: 39046 RVA: 0x00264F71 File Offset: 0x00263171
		public static LocalizedString SetupProgressStartingWatchDogService
		{
			get
			{
				return new LocalizedString("SetupProgressStartingWatchDogService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009887 RID: 39047 RVA: 0x00264F90 File Offset: 0x00263190
		public static LocalizedString CalendarLogFileDoesNotExist(string uri)
		{
			return new LocalizedString("CalendarLogFileDoesNotExist", "", false, false, Strings.ResourceManager, new object[]
			{
				uri
			});
		}

		// Token: 0x1700312F RID: 12591
		// (get) Token: 0x06009888 RID: 39048 RVA: 0x00264FBF File Offset: 0x002631BF
		public static LocalizedString CasHealthNoMailboxServersToTest
		{
			get
			{
				return new LocalizedString("CasHealthNoMailboxServersToTest", "ExC2BEEC", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003130 RID: 12592
		// (get) Token: 0x06009889 RID: 39049 RVA: 0x00264FDD File Offset: 0x002631DD
		public static LocalizedString ProvisionServerDescription
		{
			get
			{
				return new LocalizedString("ProvisionServerDescription", "ExEBAAE8", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600988A RID: 39050 RVA: 0x00264FFC File Offset: 0x002631FC
		public static LocalizedString ErrorEmptyForestUrl(string domain)
		{
			return new LocalizedString("ErrorEmptyForestUrl", "Ex60246C", false, true, Strings.ResourceManager, new object[]
			{
				domain
			});
		}

		// Token: 0x0600988B RID: 39051 RVA: 0x0026502C File Offset: 0x0026322C
		public static LocalizedString WarningPossibleDataLossWithGlsRollback(string identity, string targetForest, string sourceForest)
		{
			return new LocalizedString("WarningPossibleDataLossWithGlsRollback", "", false, false, Strings.ResourceManager, new object[]
			{
				identity,
				targetForest,
				sourceForest
			});
		}

		// Token: 0x17003131 RID: 12593
		// (get) Token: 0x0600988C RID: 39052 RVA: 0x00265063 File Offset: 0x00263263
		public static LocalizedString ErrorChangePasswordForAppPasswordAccount
		{
			get
			{
				return new LocalizedString("ErrorChangePasswordForAppPasswordAccount", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600988D RID: 39053 RVA: 0x00265084 File Offset: 0x00263284
		public static LocalizedString VerboseFailedToMemberNameToNetId(string memberName, string message)
		{
			return new LocalizedString("VerboseFailedToMemberNameToNetId", "Ex40A8DD", false, true, Strings.ResourceManager, new object[]
			{
				memberName,
				message
			});
		}

		// Token: 0x0600988E RID: 39054 RVA: 0x002650B8 File Offset: 0x002632B8
		public static LocalizedString TPDWithoutPrivateKey(string name)
		{
			return new LocalizedString("TPDWithoutPrivateKey", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x0600988F RID: 39055 RVA: 0x002650E8 File Offset: 0x002632E8
		public static LocalizedString ResubmitRequestGenericRpcError(string message)
		{
			return new LocalizedString("ResubmitRequestGenericRpcError", "", false, false, Strings.ResourceManager, new object[]
			{
				message
			});
		}

		// Token: 0x17003132 RID: 12594
		// (get) Token: 0x06009890 RID: 39056 RVA: 0x00265117 File Offset: 0x00263317
		public static LocalizedString NoRecipients
		{
			get
			{
				return new LocalizedString("NoRecipients", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009891 RID: 39057 RVA: 0x00265138 File Offset: 0x00263338
		public static LocalizedString CouldNotCreateMSOOnboardingService(string reason)
		{
			return new LocalizedString("CouldNotCreateMSOOnboardingService", "ExB2A3DA", false, true, Strings.ResourceManager, new object[]
			{
				reason
			});
		}

		// Token: 0x17003133 RID: 12595
		// (get) Token: 0x06009892 RID: 39058 RVA: 0x00265167 File Offset: 0x00263367
		public static LocalizedString ErrorSetGroupMailboxNoOwners
		{
			get
			{
				return new LocalizedString("ErrorSetGroupMailboxNoOwners", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009893 RID: 39059 RVA: 0x00265188 File Offset: 0x00263388
		public static LocalizedString ConfirmationMessageNewPowerShellVirtualDirectory(string name, string server)
		{
			return new LocalizedString("ConfirmationMessageNewPowerShellVirtualDirectory", "Ex7D2A04", false, true, Strings.ResourceManager, new object[]
			{
				name,
				server
			});
		}

		// Token: 0x17003134 RID: 12596
		// (get) Token: 0x06009894 RID: 39060 RVA: 0x002651BB File Offset: 0x002633BB
		public static LocalizedString ErrorMovingUnsupportedArchiveUser
		{
			get
			{
				return new LocalizedString("ErrorMovingUnsupportedArchiveUser", "Ex23BA44", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003135 RID: 12597
		// (get) Token: 0x06009895 RID: 39061 RVA: 0x002651D9 File Offset: 0x002633D9
		public static LocalizedString MicrosoftExchangeRecipientExists
		{
			get
			{
				return new LocalizedString("MicrosoftExchangeRecipientExists", "ExF69FCD", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009896 RID: 39062 RVA: 0x002651F8 File Offset: 0x002633F8
		public static LocalizedString RegistryKeyDoesNotExist(string registryKey, string rootkey)
		{
			return new LocalizedString("RegistryKeyDoesNotExist", "ExD56FD0", false, true, Strings.ResourceManager, new object[]
			{
				registryKey,
				rootkey
			});
		}

		// Token: 0x06009897 RID: 39063 RVA: 0x0026522C File Offset: 0x0026342C
		public static LocalizedString ConfirmationMessageNewSyncGroup(string Name)
		{
			return new LocalizedString("ConfirmationMessageNewSyncGroup", "Ex373BB3", false, true, Strings.ResourceManager, new object[]
			{
				Name
			});
		}

		// Token: 0x06009898 RID: 39064 RVA: 0x0026525C File Offset: 0x0026345C
		public static LocalizedString ErrorIncompatibleParameters(string paramName1, string paramName2)
		{
			return new LocalizedString("ErrorIncompatibleParameters", "Ex75FA15", false, true, Strings.ResourceManager, new object[]
			{
				paramName1,
				paramName2
			});
		}

		// Token: 0x06009899 RID: 39065 RVA: 0x00265290 File Offset: 0x00263490
		public static LocalizedString ConfirmationMessageCompleteMigrationBatch(string batchName)
		{
			return new LocalizedString("ConfirmationMessageCompleteMigrationBatch", "", false, false, Strings.ResourceManager, new object[]
			{
				batchName
			});
		}

		// Token: 0x0600989A RID: 39066 RVA: 0x002652C0 File Offset: 0x002634C0
		public static LocalizedString BadPublicFoldersParameterException(string value)
		{
			return new LocalizedString("BadPublicFoldersParameterException", "Ex8C87C6", false, true, Strings.ResourceManager, new object[]
			{
				value
			});
		}

		// Token: 0x17003136 RID: 12598
		// (get) Token: 0x0600989B RID: 39067 RVA: 0x002652EF File Offset: 0x002634EF
		public static LocalizedString DeletionAndLogOnlyNotPermitted
		{
			get
			{
				return new LocalizedString("DeletionAndLogOnlyNotPermitted", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003137 RID: 12599
		// (get) Token: 0x0600989C RID: 39068 RVA: 0x0026530D File Offset: 0x0026350D
		public static LocalizedString MtrtMessageDeliverDetailMessage
		{
			get
			{
				return new LocalizedString("MtrtMessageDeliverDetailMessage", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003138 RID: 12600
		// (get) Token: 0x0600989D RID: 39069 RVA: 0x0026532B File Offset: 0x0026352B
		public static LocalizedString ErrorMustSpecifyEitherAbsoluteOrRelativePath
		{
			get
			{
				return new LocalizedString("ErrorMustSpecifyEitherAbsoluteOrRelativePath", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600989E RID: 39070 RVA: 0x0026534C File Offset: 0x0026354C
		public static LocalizedString ErrorTenantInLockdown(string identity)
		{
			return new LocalizedString("ErrorTenantInLockdown", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x17003139 RID: 12601
		// (get) Token: 0x0600989F RID: 39071 RVA: 0x0026537B File Offset: 0x0026357B
		public static LocalizedString SetupComponentPostPrepForestGlobalConfig
		{
			get
			{
				return new LocalizedString("SetupComponentPostPrepForestGlobalConfig", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060098A0 RID: 39072 RVA: 0x0026539C File Offset: 0x0026359C
		public static LocalizedString CheckPointNotProgressed(uint previous, uint current)
		{
			return new LocalizedString("CheckPointNotProgressed", "Ex31939F", false, true, Strings.ResourceManager, new object[]
			{
				previous,
				current
			});
		}

		// Token: 0x060098A1 RID: 39073 RVA: 0x002653DC File Offset: 0x002635DC
		public static LocalizedString ConfirmationMessageRemoveFederationTrust(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveFederationTrust", "ExFA9938", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x060098A2 RID: 39074 RVA: 0x0026540C File Offset: 0x0026360C
		public static LocalizedString InfoAceNotPresent(string dn, string account)
		{
			return new LocalizedString("InfoAceNotPresent", "Ex6C2C81", false, true, Strings.ResourceManager, new object[]
			{
				dn,
				account
			});
		}

		// Token: 0x1700313A RID: 12602
		// (get) Token: 0x060098A3 RID: 39075 RVA: 0x0026543F File Offset: 0x0026363F
		public static LocalizedString ErrorCannotSetGlobalThrottlingPolicyWithoutForceSettingGlobalParameter
		{
			get
			{
				return new LocalizedString("ErrorCannotSetGlobalThrottlingPolicyWithoutForceSettingGlobalParameter", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060098A4 RID: 39076 RVA: 0x00265460 File Offset: 0x00263660
		public static LocalizedString ConfirmationMessageAuthNewInProgressReplace(string thumbprint1, string thumbprint2)
		{
			return new LocalizedString("ConfirmationMessageAuthNewInProgressReplace", "", false, false, Strings.ResourceManager, new object[]
			{
				thumbprint1,
				thumbprint2
			});
		}

		// Token: 0x060098A5 RID: 39077 RVA: 0x00265494 File Offset: 0x00263694
		public static LocalizedString ErrorArbitrationMbxCrossOrg(string arbitrationMailbox)
		{
			return new LocalizedString("ErrorArbitrationMbxCrossOrg", "Ex71FD54", false, true, Strings.ResourceManager, new object[]
			{
				arbitrationMailbox
			});
		}

		// Token: 0x1700313B RID: 12603
		// (get) Token: 0x060098A6 RID: 39078 RVA: 0x002654C3 File Offset: 0x002636C3
		public static LocalizedString InformationSkippedEws
		{
			get
			{
				return new LocalizedString("InformationSkippedEws", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060098A7 RID: 39079 RVA: 0x002654E4 File Offset: 0x002636E4
		public static LocalizedString FailedLoadRegistryKey(string key, string error)
		{
			return new LocalizedString("FailedLoadRegistryKey", "", false, false, Strings.ResourceManager, new object[]
			{
				key,
				error
			});
		}

		// Token: 0x1700313C RID: 12604
		// (get) Token: 0x060098A8 RID: 39080 RVA: 0x00265517 File Offset: 0x00263717
		public static LocalizedString SupervisionPolicyCollectionAmbiguous
		{
			get
			{
				return new LocalizedString("SupervisionPolicyCollectionAmbiguous", "Ex598996", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700313D RID: 12605
		// (get) Token: 0x060098A9 RID: 39081 RVA: 0x00265535 File Offset: 0x00263735
		public static LocalizedString CopyStatusNonExchangeReplication
		{
			get
			{
				return new LocalizedString("CopyStatusNonExchangeReplication", "ExFE508B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060098AA RID: 39082 RVA: 0x00265554 File Offset: 0x00263754
		public static LocalizedString WarningDismountDatabaseToContinue(string databaseName)
		{
			return new LocalizedString("WarningDismountDatabaseToContinue", "ExD02549", false, true, Strings.ResourceManager, new object[]
			{
				databaseName
			});
		}

		// Token: 0x1700313E RID: 12606
		// (get) Token: 0x060098AB RID: 39083 RVA: 0x00265583 File Offset: 0x00263783
		public static LocalizedString ErrorAccountEnabledForNonUserMailbox
		{
			get
			{
				return new LocalizedString("ErrorAccountEnabledForNonUserMailbox", "Ex161545", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700313F RID: 12607
		// (get) Token: 0x060098AC RID: 39084 RVA: 0x002655A1 File Offset: 0x002637A1
		public static LocalizedString ErrorInvalidOperationOnProvisionedMailboxServer
		{
			get
			{
				return new LocalizedString("ErrorInvalidOperationOnProvisionedMailboxServer", "ExB46AC9", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060098AD RID: 39085 RVA: 0x002655C0 File Offset: 0x002637C0
		public static LocalizedString ConfirmationMessageReleaseQuarantineMessage(string identity)
		{
			return new LocalizedString("ConfirmationMessageReleaseQuarantineMessage", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x17003140 RID: 12608
		// (get) Token: 0x060098AE RID: 39086 RVA: 0x002655EF File Offset: 0x002637EF
		public static LocalizedString NegativePriority
		{
			get
			{
				return new LocalizedString("NegativePriority", "Ex87173B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060098AF RID: 39087 RVA: 0x00265610 File Offset: 0x00263810
		public static LocalizedString InfoAceAlreadyPresent(string dn, string account)
		{
			return new LocalizedString("InfoAceAlreadyPresent", "ExFBC842", false, true, Strings.ResourceManager, new object[]
			{
				dn,
				account
			});
		}

		// Token: 0x17003141 RID: 12609
		// (get) Token: 0x060098B0 RID: 39088 RVA: 0x00265643 File Offset: 0x00263843
		public static LocalizedString InstallFfoWebServiceRoleDescription
		{
			get
			{
				return new LocalizedString("InstallFfoWebServiceRoleDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003142 RID: 12610
		// (get) Token: 0x060098B1 RID: 39089 RVA: 0x00265661 File Offset: 0x00263861
		public static LocalizedString RemoveOrganizationFailWithoutSharedConfigurationParameter
		{
			get
			{
				return new LocalizedString("RemoveOrganizationFailWithoutSharedConfigurationParameter", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003143 RID: 12611
		// (get) Token: 0x060098B2 RID: 39090 RVA: 0x0026567F File Offset: 0x0026387F
		public static LocalizedString InformationSkippedAsForEWS
		{
			get
			{
				return new LocalizedString("InformationSkippedAsForEWS", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003144 RID: 12612
		// (get) Token: 0x060098B3 RID: 39091 RVA: 0x0026569D File Offset: 0x0026389D
		public static LocalizedString ErrorUseDataPropertyNameParameter
		{
			get
			{
				return new LocalizedString("ErrorUseDataPropertyNameParameter", "Ex821FAC", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060098B4 RID: 39092 RVA: 0x002656BC File Offset: 0x002638BC
		public static LocalizedString MissingMailboxId(string credentialsUserName)
		{
			return new LocalizedString("MissingMailboxId", "", false, false, Strings.ResourceManager, new object[]
			{
				credentialsUserName
			});
		}

		// Token: 0x060098B5 RID: 39093 RVA: 0x002656EC File Offset: 0x002638EC
		public static LocalizedString ConfirmationMessageSetMailboxServer(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetMailboxServer", "Ex632AB8", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x17003145 RID: 12613
		// (get) Token: 0x060098B6 RID: 39094 RVA: 0x0026571B File Offset: 0x0026391B
		public static LocalizedString DatabaseStatus
		{
			get
			{
				return new LocalizedString("DatabaseStatus", "Ex4B4714", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060098B7 RID: 39095 RVA: 0x0026573C File Offset: 0x0026393C
		public static LocalizedString VerboseUpdateDatabaseResource(string server)
		{
			return new LocalizedString("VerboseUpdateDatabaseResource", "ExCA508A", false, true, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		// Token: 0x060098B8 RID: 39096 RVA: 0x0026576C File Offset: 0x0026396C
		public static LocalizedString ParameterValueIsAlreadySet(string parameterName)
		{
			return new LocalizedString("ParameterValueIsAlreadySet", "Ex7D3326", false, true, Strings.ResourceManager, new object[]
			{
				parameterName
			});
		}

		// Token: 0x17003146 RID: 12614
		// (get) Token: 0x060098B9 RID: 39097 RVA: 0x0026579B File Offset: 0x0026399B
		public static LocalizedString InfoGetPublishingUri
		{
			get
			{
				return new LocalizedString("InfoGetPublishingUri", "Ex37BDFC", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060098BA RID: 39098 RVA: 0x002657BC File Offset: 0x002639BC
		public static LocalizedString FailureToCallAutodiscoverService(string uri, string exceptionMessage)
		{
			return new LocalizedString("FailureToCallAutodiscoverService", "Ex720327", false, true, Strings.ResourceManager, new object[]
			{
				uri,
				exceptionMessage
			});
		}

		// Token: 0x060098BB RID: 39099 RVA: 0x002657F0 File Offset: 0x002639F0
		public static LocalizedString ClassificationRuleCollectionPatternTooLong(int maxLength)
		{
			return new LocalizedString("ClassificationRuleCollectionPatternTooLong", "", false, false, Strings.ResourceManager, new object[]
			{
				maxLength
			});
		}

		// Token: 0x17003147 RID: 12615
		// (get) Token: 0x060098BC RID: 39100 RVA: 0x00265824 File Offset: 0x00263A24
		public static LocalizedString MomConnectorServiceDisplayName
		{
			get
			{
				return new LocalizedString("MomConnectorServiceDisplayName", "Ex8CD757", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060098BD RID: 39101 RVA: 0x00265844 File Offset: 0x00263A44
		public static LocalizedString VerboseServiceValidatorRequestTrace(string name, string message)
		{
			return new LocalizedString("VerboseServiceValidatorRequestTrace", "", false, false, Strings.ResourceManager, new object[]
			{
				name,
				message
			});
		}

		// Token: 0x17003148 RID: 12616
		// (get) Token: 0x060098BE RID: 39102 RVA: 0x00265877 File Offset: 0x00263A77
		public static LocalizedString InstallMailboxTransportDeliveryServiceTask
		{
			get
			{
				return new LocalizedString("InstallMailboxTransportDeliveryServiceTask", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060098BF RID: 39103 RVA: 0x00265898 File Offset: 0x00263A98
		public static LocalizedString WarningFailedToDeleteSourceNTAccount(string detailError)
		{
			return new LocalizedString("WarningFailedToDeleteSourceNTAccount", "Ex276CEE", false, true, Strings.ResourceManager, new object[]
			{
				detailError
			});
		}

		// Token: 0x060098C0 RID: 39104 RVA: 0x002658C8 File Offset: 0x00263AC8
		public static LocalizedString ConfirmationMessageEnableInboxRule(string Identity, string mailbox)
		{
			return new LocalizedString("ConfirmationMessageEnableInboxRule", "ExB4487F", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				mailbox
			});
		}

		// Token: 0x17003149 RID: 12617
		// (get) Token: 0x060098C1 RID: 39105 RVA: 0x002658FB File Offset: 0x00263AFB
		public static LocalizedString PreserveAppSettingsTask
		{
			get
			{
				return new LocalizedString("PreserveAppSettingsTask", "Ex63B9C8", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700314A RID: 12618
		// (get) Token: 0x060098C2 RID: 39106 RVA: 0x00265919 File Offset: 0x00263B19
		public static LocalizedString SetupProgressRecreateCannedRBACRoles
		{
			get
			{
				return new LocalizedString("SetupProgressRecreateCannedRBACRoles", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060098C3 RID: 39107 RVA: 0x00265938 File Offset: 0x00263B38
		public static LocalizedString ConfirmationMessageDisableReplayLag(string dbName, string serverName)
		{
			return new LocalizedString("ConfirmationMessageDisableReplayLag", "", false, false, Strings.ResourceManager, new object[]
			{
				dbName,
				serverName
			});
		}

		// Token: 0x1700314B RID: 12619
		// (get) Token: 0x060098C4 RID: 39108 RVA: 0x0026596B File Offset: 0x00263B6B
		public static LocalizedString SetupComponentPostSetupOSP
		{
			get
			{
				return new LocalizedString("SetupComponentPostSetupOSP", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060098C5 RID: 39109 RVA: 0x0026598C File Offset: 0x00263B8C
		public static LocalizedString SearchStoppedCannotBeResumed(string name)
		{
			return new LocalizedString("SearchStoppedCannotBeResumed", "Ex4FAC65", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x1700314C RID: 12620
		// (get) Token: 0x060098C6 RID: 39110 RVA: 0x002659BB File Offset: 0x00263BBB
		public static LocalizedString SetupProgressUMEnabled
		{
			get
			{
				return new LocalizedString("SetupProgressUMEnabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060098C7 RID: 39111 RVA: 0x002659DC File Offset: 0x00263BDC
		public static LocalizedString ErrorSecondaryDomainNotFound(string identity)
		{
			return new LocalizedString("ErrorSecondaryDomainNotFound", "ExD10453", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x060098C8 RID: 39112 RVA: 0x00265A0C File Offset: 0x00263C0C
		public static LocalizedString ConfirmationMonitoringItemNotFound(string identity, string monitoringItemType)
		{
			return new LocalizedString("ConfirmationMonitoringItemNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				identity,
				monitoringItemType
			});
		}

		// Token: 0x1700314D RID: 12621
		// (get) Token: 0x060098C9 RID: 39113 RVA: 0x00265A3F File Offset: 0x00263C3F
		public static LocalizedString NewReceiveConnectorAddingPermissionsMsg
		{
			get
			{
				return new LocalizedString("NewReceiveConnectorAddingPermissionsMsg", "ExF11640", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060098CA RID: 39114 RVA: 0x00265A60 File Offset: 0x00263C60
		public static LocalizedString CertFileIsNotPfx(string file)
		{
			return new LocalizedString("CertFileIsNotPfx", "Ex660B38", false, true, Strings.ResourceManager, new object[]
			{
				file
			});
		}

		// Token: 0x060098CB RID: 39115 RVA: 0x00265A90 File Offset: 0x00263C90
		public static LocalizedString ErrorCannotRemoveAllCookies(string timeSpan)
		{
			return new LocalizedString("ErrorCannotRemoveAllCookies", "", false, false, Strings.ResourceManager, new object[]
			{
				timeSpan
			});
		}

		// Token: 0x060098CC RID: 39116 RVA: 0x00265AC0 File Offset: 0x00263CC0
		public static LocalizedString SendConnectorWrongTargetServerRole(string serverName)
		{
			return new LocalizedString("SendConnectorWrongTargetServerRole", "Ex86DA2D", false, true, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		// Token: 0x1700314E RID: 12622
		// (get) Token: 0x060098CD RID: 39117 RVA: 0x00265AEF File Offset: 0x00263CEF
		public static LocalizedString ProgressForceQuorum
		{
			get
			{
				return new LocalizedString("ProgressForceQuorum", "Ex146335", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060098CE RID: 39118 RVA: 0x00265B10 File Offset: 0x00263D10
		public static LocalizedString ErrorRulesSizeOverLimit(string identity)
		{
			return new LocalizedString("ErrorRulesSizeOverLimit", "ExF219AA", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x060098CF RID: 39119 RVA: 0x00265B40 File Offset: 0x00263D40
		public static LocalizedString ErrorTooManyItems(int tenantLimit)
		{
			return new LocalizedString("ErrorTooManyItems", "", false, false, Strings.ResourceManager, new object[]
			{
				tenantLimit
			});
		}

		// Token: 0x060098D0 RID: 39120 RVA: 0x00265B74 File Offset: 0x00263D74
		public static LocalizedString ErrorMailboxNotFound(string identity)
		{
			return new LocalizedString("ErrorMailboxNotFound", "Ex41BAF5", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x060098D1 RID: 39121 RVA: 0x00265BA4 File Offset: 0x00263DA4
		public static LocalizedString ErrorCannotRemoveAccountNamespace(string domain)
		{
			return new LocalizedString("ErrorCannotRemoveAccountNamespace", "Ex5B946A", false, true, Strings.ResourceManager, new object[]
			{
				domain
			});
		}

		// Token: 0x1700314F RID: 12623
		// (get) Token: 0x060098D2 RID: 39122 RVA: 0x00265BD3 File Offset: 0x00263DD3
		public static LocalizedString TestTeamMailboxSharePointResponseDetails
		{
			get
			{
				return new LocalizedString("TestTeamMailboxSharePointResponseDetails", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060098D3 RID: 39123 RVA: 0x00265BF4 File Offset: 0x00263DF4
		public static LocalizedString ErrorUnableToLogonGroupMailbox(Guid groupMailbox, string server, string domainController, string exception)
		{
			return new LocalizedString("ErrorUnableToLogonGroupMailbox", "", false, false, Strings.ResourceManager, new object[]
			{
				groupMailbox,
				server,
				domainController,
				exception
			});
		}

		// Token: 0x17003150 RID: 12624
		// (get) Token: 0x060098D4 RID: 39124 RVA: 0x00265C34 File Offset: 0x00263E34
		public static LocalizedString SetupProgressInstallTransportLogSearchSerice
		{
			get
			{
				return new LocalizedString("SetupProgressInstallTransportLogSearchSerice", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060098D5 RID: 39125 RVA: 0x00265C54 File Offset: 0x00263E54
		public static LocalizedString AOGroupNotFoundException(string dn)
		{
			return new LocalizedString("AOGroupNotFoundException", "Ex81D86A", false, true, Strings.ResourceManager, new object[]
			{
				dn
			});
		}

		// Token: 0x17003151 RID: 12625
		// (get) Token: 0x060098D6 RID: 39126 RVA: 0x00265C83 File Offset: 0x00263E83
		public static LocalizedString MtrtEventSend
		{
			get
			{
				return new LocalizedString("MtrtEventSend", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003152 RID: 12626
		// (get) Token: 0x060098D7 RID: 39127 RVA: 0x00265CA1 File Offset: 0x00263EA1
		public static LocalizedString EnableAntiSpamUpdatesDeprecated
		{
			get
			{
				return new LocalizedString("EnableAntiSpamUpdatesDeprecated", "Ex0F956B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060098D8 RID: 39128 RVA: 0x00265CC0 File Offset: 0x00263EC0
		public static LocalizedString ConfirmationMessageSetRpcHttp(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetRpcHttp", "ExCEA218", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x17003153 RID: 12627
		// (get) Token: 0x060098D9 RID: 39129 RVA: 0x00265CEF File Offset: 0x00263EEF
		public static LocalizedString IntegratedVDirNotFound
		{
			get
			{
				return new LocalizedString("IntegratedVDirNotFound", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060098DA RID: 39130 RVA: 0x00265D10 File Offset: 0x00263F10
		public static LocalizedString ErrorVerificationCodeSentTooManyTimes(string phonenumber)
		{
			return new LocalizedString("ErrorVerificationCodeSentTooManyTimes", "Ex6FBAC4", false, true, Strings.ResourceManager, new object[]
			{
				phonenumber
			});
		}

		// Token: 0x17003154 RID: 12628
		// (get) Token: 0x060098DB RID: 39131 RVA: 0x00265D3F File Offset: 0x00263F3F
		public static LocalizedString CopyStatusResynchronizing
		{
			get
			{
				return new LocalizedString("CopyStatusResynchronizing", "ExA14908", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003155 RID: 12629
		// (get) Token: 0x060098DC RID: 39132 RVA: 0x00265D5D File Offset: 0x00263F5D
		public static LocalizedString SetupProgressConfigureMessageClassificationsContainer
		{
			get
			{
				return new LocalizedString("SetupProgressConfigureMessageClassificationsContainer", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003156 RID: 12630
		// (get) Token: 0x060098DD RID: 39133 RVA: 0x00265D7B File Offset: 0x00263F7B
		public static LocalizedString ComplianceProgramStateError
		{
			get
			{
				return new LocalizedString("ComplianceProgramStateError", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003157 RID: 12631
		// (get) Token: 0x060098DE RID: 39134 RVA: 0x00265D99 File Offset: 0x00263F99
		public static LocalizedString DebugEndGeneratingUniqueSamAccountName
		{
			get
			{
				return new LocalizedString("DebugEndGeneratingUniqueSamAccountName", "Ex56703B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060098DF RID: 39135 RVA: 0x00265DB8 File Offset: 0x00263FB8
		public static LocalizedString ErrorPatternIsTooLong(string regex, int maxLength)
		{
			return new LocalizedString("ErrorPatternIsTooLong", "", false, false, Strings.ResourceManager, new object[]
			{
				regex,
				maxLength
			});
		}

		// Token: 0x060098E0 RID: 39136 RVA: 0x00265DF0 File Offset: 0x00263FF0
		public static LocalizedString ExchangeSettingsWarningMaximumSize(int currentSize, int maxSize)
		{
			return new LocalizedString("ExchangeSettingsWarningMaximumSize", "", false, false, Strings.ResourceManager, new object[]
			{
				currentSize,
				maxSize
			});
		}

		// Token: 0x17003158 RID: 12632
		// (get) Token: 0x060098E1 RID: 39137 RVA: 0x00265E2D File Offset: 0x0026402D
		public static LocalizedString SkippingInvalidTypeInGroupExpansion
		{
			get
			{
				return new LocalizedString("SkippingInvalidTypeInGroupExpansion", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060098E2 RID: 39138 RVA: 0x00265E4C File Offset: 0x0026404C
		public static LocalizedString WarningRemovePolicyWithAssociatedUsers(string name)
		{
			return new LocalizedString("WarningRemovePolicyWithAssociatedUsers", "Ex724BB5", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x17003159 RID: 12633
		// (get) Token: 0x060098E3 RID: 39139 RVA: 0x00265E7B File Offset: 0x0026407B
		public static LocalizedString GetMsoDiagnosticsFindingTheCookie
		{
			get
			{
				return new LocalizedString("GetMsoDiagnosticsFindingTheCookie", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060098E4 RID: 39140 RVA: 0x00265E9C File Offset: 0x0026409C
		public static LocalizedString FoundConflictingWKObjectException(string wkobj, string path)
		{
			return new LocalizedString("FoundConflictingWKObjectException", "ExC333AE", false, true, Strings.ResourceManager, new object[]
			{
				wkobj,
				path
			});
		}

		// Token: 0x1700315A RID: 12634
		// (get) Token: 0x060098E5 RID: 39141 RVA: 0x00265ECF File Offset: 0x002640CF
		public static LocalizedString ProgressCopyingSystemFiles
		{
			get
			{
				return new LocalizedString("ProgressCopyingSystemFiles", "ExCCE887", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060098E6 RID: 39142 RVA: 0x00265EF0 File Offset: 0x002640F0
		public static LocalizedString ExForeignForestSGroupNotFoundException(string name, string domain)
		{
			return new LocalizedString("ExForeignForestSGroupNotFoundException", "ExE505DB", false, true, Strings.ResourceManager, new object[]
			{
				name,
				domain
			});
		}

		// Token: 0x1700315B RID: 12635
		// (get) Token: 0x060098E7 RID: 39143 RVA: 0x00265F23 File Offset: 0x00264123
		public static LocalizedString SendMessage
		{
			get
			{
				return new LocalizedString("SendMessage", "Ex7E5E77", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060098E8 RID: 39144 RVA: 0x00265F44 File Offset: 0x00264144
		public static LocalizedString ErrorResourceSearchPropertyInvalid(string property)
		{
			return new LocalizedString("ErrorResourceSearchPropertyInvalid", "ExE95B19", false, true, Strings.ResourceManager, new object[]
			{
				property
			});
		}

		// Token: 0x060098E9 RID: 39145 RVA: 0x00265F74 File Offset: 0x00264174
		public static LocalizedString MigrationTypeDoesntSupportConnectionSettings(MigrationType migrationType)
		{
			return new LocalizedString("MigrationTypeDoesntSupportConnectionSettings", "", false, false, Strings.ResourceManager, new object[]
			{
				migrationType
			});
		}

		// Token: 0x060098EA RID: 39146 RVA: 0x00265FA8 File Offset: 0x002641A8
		public static LocalizedString CasHealthOwaTestFailed(string url)
		{
			return new LocalizedString("CasHealthOwaTestFailed", "ExA2098F", false, true, Strings.ResourceManager, new object[]
			{
				url
			});
		}

		// Token: 0x1700315C RID: 12636
		// (get) Token: 0x060098EB RID: 39147 RVA: 0x00265FD7 File Offset: 0x002641D7
		public static LocalizedString RoleAvailabilityOnly
		{
			get
			{
				return new LocalizedString("RoleAvailabilityOnly", "Ex44CAAE", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060098EC RID: 39148 RVA: 0x00265FF8 File Offset: 0x002641F8
		public static LocalizedString ConfirmationMessageNewWorkloadPolicy(string Name)
		{
			return new LocalizedString("ConfirmationMessageNewWorkloadPolicy", "", false, false, Strings.ResourceManager, new object[]
			{
				Name
			});
		}

		// Token: 0x1700315D RID: 12637
		// (get) Token: 0x060098ED RID: 39149 RVA: 0x00266027 File Offset: 0x00264227
		public static LocalizedString CasHealthSecureAccess
		{
			get
			{
				return new LocalizedString("CasHealthSecureAccess", "Ex57B6B2", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060098EE RID: 39150 RVA: 0x00266048 File Offset: 0x00264248
		public static LocalizedString ErrorArchiveExceedsTargetQuota(string mailboxSize, string targetQuota)
		{
			return new LocalizedString("ErrorArchiveExceedsTargetQuota", "ExA96198", false, true, Strings.ResourceManager, new object[]
			{
				mailboxSize,
				targetQuota
			});
		}

		// Token: 0x1700315E RID: 12638
		// (get) Token: 0x060098EF RID: 39151 RVA: 0x0026607B File Offset: 0x0026427B
		public static LocalizedString MigrationNewBatchUsersShareBatch
		{
			get
			{
				return new LocalizedString("MigrationNewBatchUsersShareBatch", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700315F RID: 12639
		// (get) Token: 0x060098F0 RID: 39152 RVA: 0x00266099 File Offset: 0x00264299
		public static LocalizedString SetBothForwardingAddressConfirmationMessage
		{
			get
			{
				return new LocalizedString("SetBothForwardingAddressConfirmationMessage", "Ex1FBC06", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060098F1 RID: 39153 RVA: 0x002660B8 File Offset: 0x002642B8
		public static LocalizedString VerboseSetAccessControl(string server, string dir)
		{
			return new LocalizedString("VerboseSetAccessControl", "ExF82C0F", false, true, Strings.ResourceManager, new object[]
			{
				server,
				dir
			});
		}

		// Token: 0x17003160 RID: 12640
		// (get) Token: 0x060098F2 RID: 39154 RVA: 0x002660EB File Offset: 0x002642EB
		public static LocalizedString InstallMonitoringRoleDescription
		{
			get
			{
				return new LocalizedString("InstallMonitoringRoleDescription", "Ex2B7CA9", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003161 RID: 12641
		// (get) Token: 0x060098F3 RID: 39155 RVA: 0x00266109 File Offset: 0x00264309
		public static LocalizedString NotEnoughInformationSupplied
		{
			get
			{
				return new LocalizedString("NotEnoughInformationSupplied", "Ex03CF05", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003162 RID: 12642
		// (get) Token: 0x060098F4 RID: 39156 RVA: 0x00266127 File Offset: 0x00264327
		public static LocalizedString OnPremisesConnectorHasRouteUsingMXId
		{
			get
			{
				return new LocalizedString("OnPremisesConnectorHasRouteUsingMXId", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060098F5 RID: 39157 RVA: 0x00266148 File Offset: 0x00264348
		public static LocalizedString ErrorWKObjectExists(string wkentry, string container)
		{
			return new LocalizedString("ErrorWKObjectExists", "Ex3460ED", false, true, Strings.ResourceManager, new object[]
			{
				wkentry,
				container
			});
		}

		// Token: 0x060098F6 RID: 39158 RVA: 0x0026617C File Offset: 0x0026437C
		public static LocalizedString WarningCancelSourceCleanupDueToApplyingPolicyFailed(string option, string sourceMailbox)
		{
			return new LocalizedString("WarningCancelSourceCleanupDueToApplyingPolicyFailed", "Ex7E7216", false, true, Strings.ResourceManager, new object[]
			{
				option,
				sourceMailbox
			});
		}

		// Token: 0x060098F7 RID: 39159 RVA: 0x002661B0 File Offset: 0x002643B0
		public static LocalizedString InvalidQueryException(int number)
		{
			return new LocalizedString("InvalidQueryException", "", false, false, Strings.ResourceManager, new object[]
			{
				number
			});
		}

		// Token: 0x17003163 RID: 12643
		// (get) Token: 0x060098F8 RID: 39160 RVA: 0x002661E4 File Offset: 0x002643E4
		public static LocalizedString ErrorLocalServerIsNotMailboxServer
		{
			get
			{
				return new LocalizedString("ErrorLocalServerIsNotMailboxServer", "ExF88C0E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003164 RID: 12644
		// (get) Token: 0x060098F9 RID: 39161 RVA: 0x00266202 File Offset: 0x00264402
		public static LocalizedString ErrorPatternCannotContainMultiMatchOnGroupOrAssertion
		{
			get
			{
				return new LocalizedString("ErrorPatternCannotContainMultiMatchOnGroupOrAssertion", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003165 RID: 12645
		// (get) Token: 0x060098FA RID: 39162 RVA: 0x00266220 File Offset: 0x00264420
		public static LocalizedString CertificateStatusValid
		{
			get
			{
				return new LocalizedString("CertificateStatusValid", "ExA17747", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060098FB RID: 39163 RVA: 0x00266240 File Offset: 0x00264440
		public static LocalizedString DuplicateOrganizationRelationshipDomain(string domain)
		{
			return new LocalizedString("DuplicateOrganizationRelationshipDomain", "Ex09E361", false, true, Strings.ResourceManager, new object[]
			{
				domain
			});
		}

		// Token: 0x060098FC RID: 39164 RVA: 0x00266270 File Offset: 0x00264470
		public static LocalizedString ErrorAssigneeSecurityGroupNotFound(string id)
		{
			return new LocalizedString("ErrorAssigneeSecurityGroupNotFound", "Ex5E5E76", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x060098FD RID: 39165 RVA: 0x002662A0 File Offset: 0x002644A0
		public static LocalizedString PartnerFilterMustBeValid(string m)
		{
			return new LocalizedString("PartnerFilterMustBeValid", "Ex949BD7", false, true, Strings.ResourceManager, new object[]
			{
				m
			});
		}

		// Token: 0x060098FE RID: 39166 RVA: 0x002662D0 File Offset: 0x002644D0
		public static LocalizedString GetDbcsOverridingServer(string implicitServer, string explicitServer, string effectiveIdentity)
		{
			return new LocalizedString("GetDbcsOverridingServer", "Ex04608E", false, true, Strings.ResourceManager, new object[]
			{
				implicitServer,
				explicitServer,
				effectiveIdentity
			});
		}

		// Token: 0x060098FF RID: 39167 RVA: 0x00266308 File Offset: 0x00264508
		public static LocalizedString MailboxAssistantsServiceNotRunning(string serverName, string currentState)
		{
			return new LocalizedString("MailboxAssistantsServiceNotRunning", "Ex3CC909", false, true, Strings.ResourceManager, new object[]
			{
				serverName,
				currentState
			});
		}

		// Token: 0x06009900 RID: 39168 RVA: 0x0026633C File Offset: 0x0026453C
		public static LocalizedString MigrationMaxConcurrentMigrationsVerificationFailed(int value, int minValue, int maxValue)
		{
			return new LocalizedString("MigrationMaxConcurrentMigrationsVerificationFailed", "", false, false, Strings.ResourceManager, new object[]
			{
				value,
				minValue,
				maxValue
			});
		}

		// Token: 0x06009901 RID: 39169 RVA: 0x00266384 File Offset: 0x00264584
		public static LocalizedString ConfirmationMessageDisableCmdletExtensionAgent(string identity)
		{
			return new LocalizedString("ConfirmationMessageDisableCmdletExtensionAgent", "Ex201162", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x17003166 RID: 12646
		// (get) Token: 0x06009902 RID: 39170 RVA: 0x002663B3 File Offset: 0x002645B3
		public static LocalizedString DlpPolicyVersionUnsupported
		{
			get
			{
				return new LocalizedString("DlpPolicyVersionUnsupported", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003167 RID: 12647
		// (get) Token: 0x06009903 RID: 39171 RVA: 0x002663D1 File Offset: 0x002645D1
		public static LocalizedString ErrorMapiVirtualDirectoryMustSpecifyIISAuthenticationMethods
		{
			get
			{
				return new LocalizedString("ErrorMapiVirtualDirectoryMustSpecifyIISAuthenticationMethods", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009904 RID: 39172 RVA: 0x002663F0 File Offset: 0x002645F0
		public static LocalizedString ErrorZeroOrLessValueForShadowRetry(string name, string shadowPreference)
		{
			return new LocalizedString("ErrorZeroOrLessValueForShadowRetry", "", false, false, Strings.ResourceManager, new object[]
			{
				name,
				shadowPreference
			});
		}

		// Token: 0x06009905 RID: 39173 RVA: 0x00266424 File Offset: 0x00264624
		public static LocalizedString ErrorCannotMovePublicFolderMailboxesDownlevel(string mailbox)
		{
			return new LocalizedString("ErrorCannotMovePublicFolderMailboxesDownlevel", "", false, false, Strings.ResourceManager, new object[]
			{
				mailbox
			});
		}

		// Token: 0x17003168 RID: 12648
		// (get) Token: 0x06009906 RID: 39174 RVA: 0x00266453 File Offset: 0x00264653
		public static LocalizedString RecoveryActionArbiterServiceDescription
		{
			get
			{
				return new LocalizedString("RecoveryActionArbiterServiceDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003169 RID: 12649
		// (get) Token: 0x06009907 RID: 39175 RVA: 0x00266471 File Offset: 0x00264671
		public static LocalizedString SetupProgressUninstallTransportLogSearchSerice
		{
			get
			{
				return new LocalizedString("SetupProgressUninstallTransportLogSearchSerice", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009908 RID: 39176 RVA: 0x00266490 File Offset: 0x00264690
		public static LocalizedString ContainerNotFoundException(string domain)
		{
			return new LocalizedString("ContainerNotFoundException", "ExA5D720", false, true, Strings.ResourceManager, new object[]
			{
				domain
			});
		}

		// Token: 0x1700316A RID: 12650
		// (get) Token: 0x06009909 RID: 39177 RVA: 0x002664BF File Offset: 0x002646BF
		public static LocalizedString ConfirmationMessageRemoveSearchDocumentFormat
		{
			get
			{
				return new LocalizedString("ConfirmationMessageRemoveSearchDocumentFormat", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600990A RID: 39178 RVA: 0x002664E0 File Offset: 0x002646E0
		public static LocalizedString AceTypeHasUnsupportedValueException(string aceType)
		{
			return new LocalizedString("AceTypeHasUnsupportedValueException", "Ex56588D", false, true, Strings.ResourceManager, new object[]
			{
				aceType
			});
		}

		// Token: 0x0600990B RID: 39179 RVA: 0x00266510 File Offset: 0x00264710
		public static LocalizedString MobileDeviceNotExistException(string deviceId)
		{
			return new LocalizedString("MobileDeviceNotExistException", "Ex09E98A", false, true, Strings.ResourceManager, new object[]
			{
				deviceId
			});
		}

		// Token: 0x1700316B RID: 12651
		// (get) Token: 0x0600990C RID: 39180 RVA: 0x0026653F File Offset: 0x0026473F
		public static LocalizedString ErrorCannotMovePublicFolderIntoNonPublicFolderMailbox
		{
			get
			{
				return new LocalizedString("ErrorCannotMovePublicFolderIntoNonPublicFolderMailbox", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600990D RID: 39181 RVA: 0x00266560 File Offset: 0x00264760
		public static LocalizedString CouldNotSelectArchiveDatabase(string user)
		{
			return new LocalizedString("CouldNotSelectArchiveDatabase", "Ex2B5E35", false, true, Strings.ResourceManager, new object[]
			{
				user
			});
		}

		// Token: 0x0600990E RID: 39182 RVA: 0x00266590 File Offset: 0x00264790
		public static LocalizedString DuplicateAcceptedDomain(string domain)
		{
			return new LocalizedString("DuplicateAcceptedDomain", "Ex70A660", false, true, Strings.ResourceManager, new object[]
			{
				domain
			});
		}

		// Token: 0x1700316C RID: 12652
		// (get) Token: 0x0600990F RID: 39183 RVA: 0x002665BF File Offset: 0x002647BF
		public static LocalizedString InvalidStoreMailboxIdentity
		{
			get
			{
				return new LocalizedString("InvalidStoreMailboxIdentity", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009910 RID: 39184 RVA: 0x002665E0 File Offset: 0x002647E0
		public static LocalizedString ErrorPublicFolderUserNotFound(string identity)
		{
			return new LocalizedString("ErrorPublicFolderUserNotFound", "Ex68A265", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x06009911 RID: 39185 RVA: 0x00266610 File Offset: 0x00264810
		public static LocalizedString ConfirmationMessageNewGls(string entryType, string id)
		{
			return new LocalizedString("ConfirmationMessageNewGls", "", false, false, Strings.ResourceManager, new object[]
			{
				entryType,
				id
			});
		}

		// Token: 0x06009912 RID: 39186 RVA: 0x00266644 File Offset: 0x00264844
		public static LocalizedString MapiTransactionShortErrorMsgFromExceptionWithInnerException(string exceptionType, string exceptionMessage, string innerExceptionType, string innerExceptionMessage)
		{
			return new LocalizedString("MapiTransactionShortErrorMsgFromExceptionWithInnerException", "Ex69878A", false, true, Strings.ResourceManager, new object[]
			{
				exceptionType,
				exceptionMessage,
				innerExceptionType,
				innerExceptionMessage
			});
		}

		// Token: 0x1700316D RID: 12653
		// (get) Token: 0x06009913 RID: 39187 RVA: 0x0026667F File Offset: 0x0026487F
		public static LocalizedString NewFilterNeitherOptimizedNorImproved
		{
			get
			{
				return new LocalizedString("NewFilterNeitherOptimizedNorImproved", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009914 RID: 39188 RVA: 0x002666A0 File Offset: 0x002648A0
		public static LocalizedString ConfirmationMessageRemoveActiveSyncMailboxPolicy(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveActiveSyncMailboxPolicy", "", false, false, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x06009915 RID: 39189 RVA: 0x002666D0 File Offset: 0x002648D0
		public static LocalizedString DagFswSharePointsToWrongDirectoryException(string share, string server, string currentdirectory, string witnessdirectory)
		{
			return new LocalizedString("DagFswSharePointsToWrongDirectoryException", "", false, false, Strings.ResourceManager, new object[]
			{
				share,
				server,
				currentdirectory,
				witnessdirectory
			});
		}

		// Token: 0x06009916 RID: 39190 RVA: 0x0026670C File Offset: 0x0026490C
		public static LocalizedString DataClassificationRequiresHigherServerVersion(string name)
		{
			return new LocalizedString("DataClassificationRequiresHigherServerVersion", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x06009917 RID: 39191 RVA: 0x0026673C File Offset: 0x0026493C
		public static LocalizedString WarningRetentionPolicyTagNotFoundForApproval(string appName, string org)
		{
			return new LocalizedString("WarningRetentionPolicyTagNotFoundForApproval", "ExEB43AA", false, true, Strings.ResourceManager, new object[]
			{
				appName,
				org
			});
		}

		// Token: 0x06009918 RID: 39192 RVA: 0x00266770 File Offset: 0x00264970
		public static LocalizedString ErrorRollbackGlsExpectsPostGlsState(string identity)
		{
			return new LocalizedString("ErrorRollbackGlsExpectsPostGlsState", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x06009919 RID: 39193 RVA: 0x002667A0 File Offset: 0x002649A0
		public static LocalizedString ConfirmationMessageSetPartnerApplication(string name)
		{
			return new LocalizedString("ConfirmationMessageSetPartnerApplication", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x0600991A RID: 39194 RVA: 0x002667D0 File Offset: 0x002649D0
		public static LocalizedString InterceptorErrorTimeIntervalInvalid(TimeSpan interval)
		{
			return new LocalizedString("InterceptorErrorTimeIntervalInvalid", "", false, false, Strings.ResourceManager, new object[]
			{
				interval
			});
		}

		// Token: 0x0600991B RID: 39195 RVA: 0x00266804 File Offset: 0x00264A04
		public static LocalizedString SetServerComponentStateServerUnreachable(string fqdn, string error)
		{
			return new LocalizedString("SetServerComponentStateServerUnreachable", "", false, false, Strings.ResourceManager, new object[]
			{
				fqdn,
				error
			});
		}

		// Token: 0x0600991C RID: 39196 RVA: 0x00266838 File Offset: 0x00264A38
		public static LocalizedString CalendarDiagnosticLogsNotFound(string subject, string identity)
		{
			return new LocalizedString("CalendarDiagnosticLogsNotFound", "ExC2AAD8", false, true, Strings.ResourceManager, new object[]
			{
				subject,
				identity
			});
		}

		// Token: 0x1700316E RID: 12654
		// (get) Token: 0x0600991D RID: 39197 RVA: 0x0026686B File Offset: 0x00264A6B
		public static LocalizedString GetMsoDiagnosticsMoreDataIsAvailable
		{
			get
			{
				return new LocalizedString("GetMsoDiagnosticsMoreDataIsAvailable", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700316F RID: 12655
		// (get) Token: 0x0600991E RID: 39198 RVA: 0x00266889 File Offset: 0x00264A89
		public static LocalizedString SetupComponentTransportLogSearchService
		{
			get
			{
				return new LocalizedString("SetupComponentTransportLogSearchService", "Ex76B33D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003170 RID: 12656
		// (get) Token: 0x0600991F RID: 39199 RVA: 0x002668A7 File Offset: 0x00264AA7
		public static LocalizedString ErrorTagTypeModified
		{
			get
			{
				return new LocalizedString("ErrorTagTypeModified", "ExB1B6A8", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003171 RID: 12657
		// (get) Token: 0x06009920 RID: 39200 RVA: 0x002668C5 File Offset: 0x00264AC5
		public static LocalizedString CatchAllRecipientNotAllowedForArbitrationMailbox
		{
			get
			{
				return new LocalizedString("CatchAllRecipientNotAllowedForArbitrationMailbox", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003172 RID: 12658
		// (get) Token: 0x06009921 RID: 39201 RVA: 0x002668E3 File Offset: 0x00264AE3
		public static LocalizedString ErrorLegacyOABDoesNotSupportLinkedMailbox
		{
			get
			{
				return new LocalizedString("ErrorLegacyOABDoesNotSupportLinkedMailbox", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009922 RID: 39202 RVA: 0x00266904 File Offset: 0x00264B04
		public static LocalizedString CasHealthPowerShellConnectionUserCredential(string userName, string type)
		{
			return new LocalizedString("CasHealthPowerShellConnectionUserCredential", "Ex5055C4", false, true, Strings.ResourceManager, new object[]
			{
				userName,
				type
			});
		}

		// Token: 0x06009923 RID: 39203 RVA: 0x00266938 File Offset: 0x00264B38
		public static LocalizedString OwaAttachmentInvalidStringLengthException(string fieldName, int index, string value, int min, int max)
		{
			return new LocalizedString("OwaAttachmentInvalidStringLengthException", "ExC53538", false, true, Strings.ResourceManager, new object[]
			{
				fieldName,
				index,
				value,
				min,
				max
			});
		}

		// Token: 0x17003173 RID: 12659
		// (get) Token: 0x06009924 RID: 39204 RVA: 0x00266987 File Offset: 0x00264B87
		public static LocalizedString ErrorSelectUserCmdletOnlyWorksForTwoUsers
		{
			get
			{
				return new LocalizedString("ErrorSelectUserCmdletOnlyWorksForTwoUsers", "Ex5D7C44", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009925 RID: 39205 RVA: 0x002669A8 File Offset: 0x00264BA8
		public static LocalizedString ClassificationRuleCollectionResourceNotFoundViolation(string ruleIds)
		{
			return new LocalizedString("ClassificationRuleCollectionResourceNotFoundViolation", "", false, false, Strings.ResourceManager, new object[]
			{
				ruleIds
			});
		}

		// Token: 0x17003174 RID: 12660
		// (get) Token: 0x06009926 RID: 39206 RVA: 0x002669D7 File Offset: 0x00264BD7
		public static LocalizedString ErrorServicePlanIsNotSet
		{
			get
			{
				return new LocalizedString("ErrorServicePlanIsNotSet", "ExE58959", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003175 RID: 12661
		// (get) Token: 0x06009927 RID: 39207 RVA: 0x002669F5 File Offset: 0x00264BF5
		public static LocalizedString MtrtRemoveHeader
		{
			get
			{
				return new LocalizedString("MtrtRemoveHeader", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009928 RID: 39208 RVA: 0x00266A14 File Offset: 0x00264C14
		public static LocalizedString LogSourceAccountRemoved(string id)
		{
			return new LocalizedString("LogSourceAccountRemoved", "ExE8D82B", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x06009929 RID: 39209 RVA: 0x00266A44 File Offset: 0x00264C44
		public static LocalizedString ErrorRemoveArbitrationMailboxWithOABsAssigned(string mbxId)
		{
			return new LocalizedString("ErrorRemoveArbitrationMailboxWithOABsAssigned", "", false, false, Strings.ResourceManager, new object[]
			{
				mbxId
			});
		}

		// Token: 0x0600992A RID: 39210 RVA: 0x00266A74 File Offset: 0x00264C74
		public static LocalizedString InstalledRoles(string roles)
		{
			return new LocalizedString("InstalledRoles", "ExAA23FB", false, true, Strings.ResourceManager, new object[]
			{
				roles
			});
		}

		// Token: 0x0600992B RID: 39211 RVA: 0x00266AA4 File Offset: 0x00264CA4
		public static LocalizedString WarningCustomRoleCreatedDuringUpgrade(string id, string customUserRoleId, string deprecatedCannedRole)
		{
			return new LocalizedString("WarningCustomRoleCreatedDuringUpgrade", "ExEAAF38", false, true, Strings.ResourceManager, new object[]
			{
				id,
				customUserRoleId,
				deprecatedCannedRole
			});
		}

		// Token: 0x0600992C RID: 39212 RVA: 0x00266ADC File Offset: 0x00264CDC
		public static LocalizedString VerboseFoundValidAlternateServiceAccountCredential(string qualifiedUserName, DateTime whenAdded)
		{
			return new LocalizedString("VerboseFoundValidAlternateServiceAccountCredential", "Ex102129", false, true, Strings.ResourceManager, new object[]
			{
				qualifiedUserName,
				whenAdded
			});
		}

		// Token: 0x0600992D RID: 39213 RVA: 0x00266B14 File Offset: 0x00264D14
		public static LocalizedString MigrationRemoteServerTooLongException(string propertyName)
		{
			return new LocalizedString("MigrationRemoteServerTooLongException", "ExA93CD1", false, true, Strings.ResourceManager, new object[]
			{
				propertyName
			});
		}

		// Token: 0x17003176 RID: 12662
		// (get) Token: 0x0600992E RID: 39214 RVA: 0x00266B43 File Offset: 0x00264D43
		public static LocalizedString JournalingParameterErrorExpiryDateWithoutGcc
		{
			get
			{
				return new LocalizedString("JournalingParameterErrorExpiryDateWithoutGcc", "ExD5D09C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600992F RID: 39215 RVA: 0x00266B64 File Offset: 0x00264D64
		public static LocalizedString ErrorEvictLiveIdMemberNotExists(string memberName)
		{
			return new LocalizedString("ErrorEvictLiveIdMemberNotExists", "Ex8C4707", false, true, Strings.ResourceManager, new object[]
			{
				memberName
			});
		}

		// Token: 0x06009930 RID: 39216 RVA: 0x00266B94 File Offset: 0x00264D94
		public static LocalizedString SeedingPathErrorException(string error)
		{
			return new LocalizedString("SeedingPathErrorException", "Ex8A9684", false, true, Strings.ResourceManager, new object[]
			{
				error
			});
		}

		// Token: 0x17003177 RID: 12663
		// (get) Token: 0x06009931 RID: 39217 RVA: 0x00266BC3 File Offset: 0x00264DC3
		public static LocalizedString ConfirmationMessageSetImap4Config
		{
			get
			{
				return new LocalizedString("ConfirmationMessageSetImap4Config", "ExA67A87", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009932 RID: 39218 RVA: 0x00266BE4 File Offset: 0x00264DE4
		public static LocalizedString TestMailflowFailed(string source, string target, int executionTimeout)
		{
			return new LocalizedString("TestMailflowFailed", "Ex6442F0", false, true, Strings.ResourceManager, new object[]
			{
				source,
				target,
				executionTimeout
			});
		}

		// Token: 0x17003178 RID: 12664
		// (get) Token: 0x06009933 RID: 39219 RVA: 0x00266C20 File Offset: 0x00264E20
		public static LocalizedString InCorrectRequiredPOPSetting
		{
			get
			{
				return new LocalizedString("InCorrectRequiredPOPSetting", "Ex1C7BD6", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003179 RID: 12665
		// (get) Token: 0x06009934 RID: 39220 RVA: 0x00266C3E File Offset: 0x00264E3E
		public static LocalizedString WarnAboutSetDatabaseDefaults
		{
			get
			{
				return new LocalizedString("WarnAboutSetDatabaseDefaults", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009935 RID: 39221 RVA: 0x00266C5C File Offset: 0x00264E5C
		public static LocalizedString InvalidMonitorIdentity(string monitorIdentity)
		{
			return new LocalizedString("InvalidMonitorIdentity", "", false, false, Strings.ResourceManager, new object[]
			{
				monitorIdentity
			});
		}

		// Token: 0x1700317A RID: 12666
		// (get) Token: 0x06009936 RID: 39222 RVA: 0x00266C8B File Offset: 0x00264E8B
		public static LocalizedString ErrorRestrictionWithWrongGroupType
		{
			get
			{
				return new LocalizedString("ErrorRestrictionWithWrongGroupType", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009937 RID: 39223 RVA: 0x00266CAC File Offset: 0x00264EAC
		public static LocalizedString BadDefaultsParameterException(string value)
		{
			return new LocalizedString("BadDefaultsParameterException", "Ex0DF586", false, true, Strings.ResourceManager, new object[]
			{
				value
			});
		}

		// Token: 0x06009938 RID: 39224 RVA: 0x00266CDC File Offset: 0x00264EDC
		public static LocalizedString ErrorMaxKeyMappings(int maxKeyMappings)
		{
			return new LocalizedString("ErrorMaxKeyMappings", "", false, false, Strings.ResourceManager, new object[]
			{
				maxKeyMappings
			});
		}

		// Token: 0x06009939 RID: 39225 RVA: 0x00266D10 File Offset: 0x00264F10
		public static LocalizedString ErrorCertificateAlreadyinPublish(string thumbprint)
		{
			return new LocalizedString("ErrorCertificateAlreadyinPublish", "", false, false, Strings.ResourceManager, new object[]
			{
				thumbprint
			});
		}

		// Token: 0x1700317B RID: 12667
		// (get) Token: 0x0600993A RID: 39226 RVA: 0x00266D3F File Offset: 0x00264F3F
		public static LocalizedString DagMembersUpCheckDesc
		{
			get
			{
				return new LocalizedString("DagMembersUpCheckDesc", "Ex5C8AE0", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600993B RID: 39227 RVA: 0x00266D60 File Offset: 0x00264F60
		public static LocalizedString ConfirmationMessageCleanMailboxDatabase(string Identity)
		{
			return new LocalizedString("ConfirmationMessageCleanMailboxDatabase", "Ex962299", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x0600993C RID: 39228 RVA: 0x00266D90 File Offset: 0x00264F90
		public static LocalizedString UnpackedDatacenterRoles(string roles)
		{
			return new LocalizedString("UnpackedDatacenterRoles", "Ex62436A", false, true, Strings.ResourceManager, new object[]
			{
				roles
			});
		}

		// Token: 0x0600993D RID: 39229 RVA: 0x00266DC0 File Offset: 0x00264FC0
		public static LocalizedString CasHealthCalendarCheckError(string scenario, string info)
		{
			return new LocalizedString("CasHealthCalendarCheckError", "Ex7D797C", false, true, Strings.ResourceManager, new object[]
			{
				scenario,
				info
			});
		}

		// Token: 0x1700317C RID: 12668
		// (get) Token: 0x0600993E RID: 39230 RVA: 0x00266DF3 File Offset: 0x00264FF3
		public static LocalizedString ErrorCannotDisablePublicFolderMailboxWithFolders
		{
			get
			{
				return new LocalizedString("ErrorCannotDisablePublicFolderMailboxWithFolders", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600993F RID: 39231 RVA: 0x00266E14 File Offset: 0x00265014
		public static LocalizedString ConfirmationMessageCompleteMoveRequest(string Identity)
		{
			return new LocalizedString("ConfirmationMessageCompleteMoveRequest", "Ex77EEE8", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x06009940 RID: 39232 RVA: 0x00266E44 File Offset: 0x00265044
		public static LocalizedString ConfirmationMessageSetCmdletExtensionAgent(string identity)
		{
			return new LocalizedString("ConfirmationMessageSetCmdletExtensionAgent", "ExCE74E7", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x06009941 RID: 39233 RVA: 0x00266E74 File Offset: 0x00265074
		public static LocalizedString ErrorCannotContactServerForCert(string server, string thumbprint)
		{
			return new LocalizedString("ErrorCannotContactServerForCert", "", false, false, Strings.ResourceManager, new object[]
			{
				server,
				thumbprint
			});
		}

		// Token: 0x1700317D RID: 12669
		// (get) Token: 0x06009942 RID: 39234 RVA: 0x00266EA7 File Offset: 0x002650A7
		public static LocalizedString CasHealthScenarioLogon
		{
			get
			{
				return new LocalizedString("CasHealthScenarioLogon", "Ex5AAA6D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700317E RID: 12670
		// (get) Token: 0x06009943 RID: 39235 RVA: 0x00266EC5 File Offset: 0x002650C5
		public static LocalizedString ADAttributeInitials
		{
			get
			{
				return new LocalizedString("ADAttributeInitials", "Ex2817D2", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700317F RID: 12671
		// (get) Token: 0x06009944 RID: 39236 RVA: 0x00266EE3 File Offset: 0x002650E3
		public static LocalizedString NeedIisRestartWarning
		{
			get
			{
				return new LocalizedString("NeedIisRestartWarning", "ExD9CDD7", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003180 RID: 12672
		// (get) Token: 0x06009945 RID: 39237 RVA: 0x00266F01 File Offset: 0x00265101
		public static LocalizedString ErrorFailedToCreatePL
		{
			get
			{
				return new LocalizedString("ErrorFailedToCreatePL", "ExCD0E2B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003181 RID: 12673
		// (get) Token: 0x06009946 RID: 39238 RVA: 0x00266F1F File Offset: 0x0026511F
		public static LocalizedString VerifyRoleInstalled
		{
			get
			{
				return new LocalizedString("VerifyRoleInstalled", "Ex288999", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003182 RID: 12674
		// (get) Token: 0x06009947 RID: 39239 RVA: 0x00266F3D File Offset: 0x0026513D
		public static LocalizedString ConfirmationMessageGetFailedContentIndexDocuments
		{
			get
			{
				return new LocalizedString("ConfirmationMessageGetFailedContentIndexDocuments", "Ex1744E7", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009948 RID: 39240 RVA: 0x00266F5C File Offset: 0x0026515C
		public static LocalizedString FormsAuthenticationDeleteMarksIfUnusedCheckMarkAccessDeniedException(string metabasePath)
		{
			return new LocalizedString("FormsAuthenticationDeleteMarksIfUnusedCheckMarkAccessDeniedException", "Ex8C9590", false, true, Strings.ResourceManager, new object[]
			{
				metabasePath
			});
		}

		// Token: 0x17003183 RID: 12675
		// (get) Token: 0x06009949 RID: 39241 RVA: 0x00266F8B File Offset: 0x0026518B
		public static LocalizedString FailedToLoadEdgeSyncConfigFile
		{
			get
			{
				return new LocalizedString("FailedToLoadEdgeSyncConfigFile", "Ex5CBA87", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003184 RID: 12676
		// (get) Token: 0x0600994A RID: 39242 RVA: 0x00266FA9 File Offset: 0x002651A9
		public static LocalizedString ClassificationRuleCollectionIneffectiveSharingViolationCheck
		{
			get
			{
				return new LocalizedString("ClassificationRuleCollectionIneffectiveSharingViolationCheck", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003185 RID: 12677
		// (get) Token: 0x0600994B RID: 39243 RVA: 0x00266FC7 File Offset: 0x002651C7
		public static LocalizedString VerboseFailedToTestWriteAccessToExchangeServers
		{
			get
			{
				return new LocalizedString("VerboseFailedToTestWriteAccessToExchangeServers", "ExA39611", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600994C RID: 39244 RVA: 0x00266FE8 File Offset: 0x002651E8
		public static LocalizedString ErrorChildObjectTypeNotUnique(string idStringValue)
		{
			return new LocalizedString("ErrorChildObjectTypeNotUnique", "ExDC2533", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		// Token: 0x17003186 RID: 12678
		// (get) Token: 0x0600994D RID: 39245 RVA: 0x00267017 File Offset: 0x00265217
		public static LocalizedString ErrorInvalidGuidFormat
		{
			get
			{
				return new LocalizedString("ErrorInvalidGuidFormat", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600994E RID: 39246 RVA: 0x00267038 File Offset: 0x00265238
		public static LocalizedString ErrorRoleEntryParameterExistOnChildren(string parameter, string entryName, string roleId, string childRole)
		{
			return new LocalizedString("ErrorRoleEntryParameterExistOnChildren", "Ex5F3859", false, true, Strings.ResourceManager, new object[]
			{
				parameter,
				entryName,
				roleId,
				childRole
			});
		}

		// Token: 0x0600994F RID: 39247 RVA: 0x00267074 File Offset: 0x00265274
		public static LocalizedString ConfirmationMessageNewHostedContentFilterConfig(string name)
		{
			return new LocalizedString("ConfirmationMessageNewHostedContentFilterConfig", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x17003187 RID: 12679
		// (get) Token: 0x06009950 RID: 39248 RVA: 0x002670A3 File Offset: 0x002652A3
		public static LocalizedString MtrtDecrypt
		{
			get
			{
				return new LocalizedString("MtrtDecrypt", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009951 RID: 39249 RVA: 0x002670C4 File Offset: 0x002652C4
		public static LocalizedString ErrorNotMailboxServer(string server)
		{
			return new LocalizedString("ErrorNotMailboxServer", "ExCD3837", false, true, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		// Token: 0x06009952 RID: 39250 RVA: 0x002670F4 File Offset: 0x002652F4
		public static LocalizedString CasHealthShortErrorMsgFromExceptionWithInnerException(string exceptionType, string exceptionMessage, string innerExceptionType, string innerExceptionMessage)
		{
			return new LocalizedString("CasHealthShortErrorMsgFromExceptionWithInnerException", "Ex26CE59", false, true, Strings.ResourceManager, new object[]
			{
				exceptionType,
				exceptionMessage,
				innerExceptionType,
				innerExceptionMessage
			});
		}

		// Token: 0x17003188 RID: 12680
		// (get) Token: 0x06009953 RID: 39251 RVA: 0x0026712F File Offset: 0x0026532F
		public static LocalizedString ErrorNotRunningAsTenantAdmin
		{
			get
			{
				return new LocalizedString("ErrorNotRunningAsTenantAdmin", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009954 RID: 39252 RVA: 0x00267150 File Offset: 0x00265350
		public static LocalizedString RecipientFromFirstOrganization(string syncobject)
		{
			return new LocalizedString("RecipientFromFirstOrganization", "", false, false, Strings.ResourceManager, new object[]
			{
				syncobject
			});
		}

		// Token: 0x17003189 RID: 12681
		// (get) Token: 0x06009955 RID: 39253 RVA: 0x0026717F File Offset: 0x0026537F
		public static LocalizedString InstallMonitoringServiceTask
		{
			get
			{
				return new LocalizedString("InstallMonitoringServiceTask", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009956 RID: 39254 RVA: 0x002671A0 File Offset: 0x002653A0
		public static LocalizedString VerboseInstallWSManModule(string module)
		{
			return new LocalizedString("VerboseInstallWSManModule", "ExCA23D9", false, true, Strings.ResourceManager, new object[]
			{
				module
			});
		}

		// Token: 0x06009957 RID: 39255 RVA: 0x002671D0 File Offset: 0x002653D0
		public static LocalizedString ErrorLiveIdDoesNotExist(string windowsLiveId)
		{
			return new LocalizedString("ErrorLiveIdDoesNotExist", "Ex1E20CA", false, true, Strings.ResourceManager, new object[]
			{
				windowsLiveId
			});
		}

		// Token: 0x06009958 RID: 39256 RVA: 0x00267200 File Offset: 0x00265400
		public static LocalizedString FailedToCheckDiscoveryHoldStatusException(LocalizedString error)
		{
			return new LocalizedString("FailedToCheckDiscoveryHoldStatusException", "", false, false, Strings.ResourceManager, new object[]
			{
				error
			});
		}

		// Token: 0x1700318A RID: 12682
		// (get) Token: 0x06009959 RID: 39257 RVA: 0x00267234 File Offset: 0x00265434
		public static LocalizedString CreateDumpster20Tag
		{
			get
			{
				return new LocalizedString("CreateDumpster20Tag", "Ex22D394", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700318B RID: 12683
		// (get) Token: 0x0600995A RID: 39258 RVA: 0x00267252 File Offset: 0x00265452
		public static LocalizedString InstallClientAccessRoleDescription
		{
			get
			{
				return new LocalizedString("InstallClientAccessRoleDescription", "Ex6C021E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700318C RID: 12684
		// (get) Token: 0x0600995B RID: 39259 RVA: 0x00267270 File Offset: 0x00265470
		public static LocalizedString ConfirmationMessageTestWebServicesConnectivity
		{
			get
			{
				return new LocalizedString("ConfirmationMessageTestWebServicesConnectivity", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600995C RID: 39260 RVA: 0x00267290 File Offset: 0x00265490
		public static LocalizedString ConfirmationMessageEnableMailboxDiscovery(string Identity)
		{
			return new LocalizedString("ConfirmationMessageEnableMailboxDiscovery", "Ex0CF0A5", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x0600995D RID: 39261 RVA: 0x002672C0 File Offset: 0x002654C0
		public static LocalizedString VerboseFailedReadObjectFromDC(string id, string type, string dc)
		{
			return new LocalizedString("VerboseFailedReadObjectFromDC", "Ex15DB70", false, true, Strings.ResourceManager, new object[]
			{
				id,
				type,
				dc
			});
		}

		// Token: 0x1700318D RID: 12685
		// (get) Token: 0x0600995E RID: 39262 RVA: 0x002672F7 File Offset: 0x002654F7
		public static LocalizedString ConfigureMailTips
		{
			get
			{
				return new LocalizedString("ConfigureMailTips", "Ex334B6C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600995F RID: 39263 RVA: 0x00267318 File Offset: 0x00265518
		public static LocalizedString ErrorRemoveOlderVirtualDirectory(string identity, string version)
		{
			return new LocalizedString("ErrorRemoveOlderVirtualDirectory", "ExCD7360", false, true, Strings.ResourceManager, new object[]
			{
				identity,
				version
			});
		}

		// Token: 0x06009960 RID: 39264 RVA: 0x0026734C File Offset: 0x0026554C
		public static LocalizedString WarningCloseGroupMemberDepartForNoArbitrationMbx(string id)
		{
			return new LocalizedString("WarningCloseGroupMemberDepartForNoArbitrationMbx", "ExA2CAE2", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x06009961 RID: 39265 RVA: 0x0026737C File Offset: 0x0026557C
		public static LocalizedString SaveChangesFailedForTraining(string mailbox)
		{
			return new LocalizedString("SaveChangesFailedForTraining", "Ex631E6C", false, true, Strings.ResourceManager, new object[]
			{
				mailbox
			});
		}

		// Token: 0x1700318E RID: 12686
		// (get) Token: 0x06009962 RID: 39266 RVA: 0x002673AB File Offset: 0x002655AB
		public static LocalizedString TestMigrationServerConnectionTimeout
		{
			get
			{
				return new LocalizedString("TestMigrationServerConnectionTimeout", "ExAEB74E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009963 RID: 39267 RVA: 0x002673CC File Offset: 0x002655CC
		public static LocalizedString ConfirmationMessageSetDatabaseAvailabilityGroupNetwork(string network)
		{
			return new LocalizedString("ConfirmationMessageSetDatabaseAvailabilityGroupNetwork", "Ex394043", false, true, Strings.ResourceManager, new object[]
			{
				network
			});
		}

		// Token: 0x1700318F RID: 12687
		// (get) Token: 0x06009964 RID: 39268 RVA: 0x002673FB File Offset: 0x002655FB
		public static LocalizedString SetupProgressStartingTransportLogSearchService
		{
			get
			{
				return new LocalizedString("SetupProgressStartingTransportLogSearchService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003190 RID: 12688
		// (get) Token: 0x06009965 RID: 39269 RVA: 0x00267419 File Offset: 0x00265619
		public static LocalizedString ErrorPublicFolderHierarchyAlreadyProvisioned
		{
			get
			{
				return new LocalizedString("ErrorPublicFolderHierarchyAlreadyProvisioned", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009966 RID: 39270 RVA: 0x00267438 File Offset: 0x00265638
		public static LocalizedString ConfirmationMessageRemoveWorkloadManagementPolicy(string Name)
		{
			return new LocalizedString("ConfirmationMessageRemoveWorkloadManagementPolicy", "", false, false, Strings.ResourceManager, new object[]
			{
				Name
			});
		}

		// Token: 0x06009967 RID: 39271 RVA: 0x00267468 File Offset: 0x00265668
		public static LocalizedString ConfirmationMessageSetFederatedOrganizationIdentifier1(string Identity, string accountNamespace, string trust)
		{
			return new LocalizedString("ConfirmationMessageSetFederatedOrganizationIdentifier1", "Ex88B572", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				accountNamespace,
				trust
			});
		}

		// Token: 0x06009968 RID: 39272 RVA: 0x002674A0 File Offset: 0x002656A0
		public static LocalizedString MoveMailboxShouldMove(string displayname, string smtp, string database)
		{
			return new LocalizedString("MoveMailboxShouldMove", "Ex598E74", false, true, Strings.ResourceManager, new object[]
			{
				displayname,
				smtp,
				database
			});
		}

		// Token: 0x06009969 RID: 39273 RVA: 0x002674D8 File Offset: 0x002656D8
		public static LocalizedString ClassificationRuleCollectionSharingViolationSetOperationVerbose(string identity, string ruleIdsInUse, string referencingTransportRuleNames)
		{
			return new LocalizedString("ClassificationRuleCollectionSharingViolationSetOperationVerbose", "", false, false, Strings.ResourceManager, new object[]
			{
				identity,
				ruleIdsInUse,
				referencingTransportRuleNames
			});
		}

		// Token: 0x0600996A RID: 39274 RVA: 0x00267510 File Offset: 0x00265710
		public static LocalizedString VerboseCreateDirectory(string server, string dir)
		{
			return new LocalizedString("VerboseCreateDirectory", "Ex583137", false, true, Strings.ResourceManager, new object[]
			{
				server,
				dir
			});
		}

		// Token: 0x17003191 RID: 12689
		// (get) Token: 0x0600996B RID: 39275 RVA: 0x00267543 File Offset: 0x00265743
		public static LocalizedString ErrorInvalidOperationOnProvisionedServer
		{
			get
			{
				return new LocalizedString("ErrorInvalidOperationOnProvisionedServer", "Ex286E97", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003192 RID: 12690
		// (get) Token: 0x0600996C RID: 39276 RVA: 0x00267561 File Offset: 0x00265761
		public static LocalizedString CasHealthEasScenarioGetItemEstimate
		{
			get
			{
				return new LocalizedString("CasHealthEasScenarioGetItemEstimate", "Ex85CFF2", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600996D RID: 39277 RVA: 0x00267580 File Offset: 0x00265780
		public static LocalizedString ErrorCorruptedPartition(string partitionName)
		{
			return new LocalizedString("ErrorCorruptedPartition", "", false, false, Strings.ResourceManager, new object[]
			{
				partitionName
			});
		}

		// Token: 0x0600996E RID: 39278 RVA: 0x002675B0 File Offset: 0x002657B0
		public static LocalizedString IISGeneralCOMException(string errorMsg, int code)
		{
			return new LocalizedString("IISGeneralCOMException", "Ex4E40A1", false, true, Strings.ResourceManager, new object[]
			{
				errorMsg,
				code
			});
		}

		// Token: 0x0600996F RID: 39279 RVA: 0x002675E8 File Offset: 0x002657E8
		public static LocalizedString ConfirmationMessageDisableArchive(string Identity)
		{
			return new LocalizedString("ConfirmationMessageDisableArchive", "Ex9F97C1", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x06009970 RID: 39280 RVA: 0x00267618 File Offset: 0x00265818
		public static LocalizedString FormsAuthenticationIsEnabledPathNotFoundException(string metabasePath, int propertyID)
		{
			return new LocalizedString("FormsAuthenticationIsEnabledPathNotFoundException", "Ex704194", false, true, Strings.ResourceManager, new object[]
			{
				metabasePath,
				propertyID
			});
		}

		// Token: 0x06009971 RID: 39281 RVA: 0x00267650 File Offset: 0x00265850
		public static LocalizedString ConfirmationMessageNewOfflineAddressBook(string WebSiteName, string AddressLists)
		{
			return new LocalizedString("ConfirmationMessageNewOfflineAddressBook", "Ex369AA9", false, true, Strings.ResourceManager, new object[]
			{
				WebSiteName,
				AddressLists
			});
		}

		// Token: 0x17003193 RID: 12691
		// (get) Token: 0x06009972 RID: 39282 RVA: 0x00267683 File Offset: 0x00265883
		public static LocalizedString SetupProgressCreateOutOfTheBoxAdditionalMrmTags
		{
			get
			{
				return new LocalizedString("SetupProgressCreateOutOfTheBoxAdditionalMrmTags", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003194 RID: 12692
		// (get) Token: 0x06009973 RID: 39283 RVA: 0x002676A1 File Offset: 0x002658A1
		public static LocalizedString AddressRewriteExceptionListDisallowed
		{
			get
			{
				return new LocalizedString("AddressRewriteExceptionListDisallowed", "Ex7ACEB9", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009974 RID: 39284 RVA: 0x002676C0 File Offset: 0x002658C0
		public static LocalizedString ErrorMapiHttpAlreadyEnabled(string server)
		{
			return new LocalizedString("ErrorMapiHttpAlreadyEnabled", "", false, false, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		// Token: 0x06009975 RID: 39285 RVA: 0x002676F0 File Offset: 0x002658F0
		public static LocalizedString InvalidParameterForE12TargetDatabase(string param, string db)
		{
			return new LocalizedString("InvalidParameterForE12TargetDatabase", "ExD31709", false, true, Strings.ResourceManager, new object[]
			{
				param,
				db
			});
		}

		// Token: 0x17003195 RID: 12693
		// (get) Token: 0x06009976 RID: 39286 RVA: 0x00267723 File Offset: 0x00265923
		public static LocalizedString InstallIisWebServiceExtensionCommitting
		{
			get
			{
				return new LocalizedString("InstallIisWebServiceExtensionCommitting", "Ex0D266A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003196 RID: 12694
		// (get) Token: 0x06009977 RID: 39287 RVA: 0x00267741 File Offset: 0x00265941
		public static LocalizedString SetupProgressCreateGlobalContainers
		{
			get
			{
				return new LocalizedString("SetupProgressCreateGlobalContainers", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009978 RID: 39288 RVA: 0x00267760 File Offset: 0x00265960
		public static LocalizedString ErrorInvalidMandatoryParameterForPublicFolderTasks(string parameter, string operation)
		{
			return new LocalizedString("ErrorInvalidMandatoryParameterForPublicFolderTasks", "", false, false, Strings.ResourceManager, new object[]
			{
				parameter,
				operation
			});
		}

		// Token: 0x17003197 RID: 12695
		// (get) Token: 0x06009979 RID: 39289 RVA: 0x00267793 File Offset: 0x00265993
		public static LocalizedString ErrorSyncProtocolNotSpecified
		{
			get
			{
				return new LocalizedString("ErrorSyncProtocolNotSpecified", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003198 RID: 12696
		// (get) Token: 0x0600997A RID: 39290 RVA: 0x002677B1 File Offset: 0x002659B1
		public static LocalizedString ArchiveNamePrefix
		{
			get
			{
				return new LocalizedString("ArchiveNamePrefix", "ExC19E53", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003199 RID: 12697
		// (get) Token: 0x0600997B RID: 39291 RVA: 0x002677CF File Offset: 0x002659CF
		public static LocalizedString InvokePreMoveActionDescription
		{
			get
			{
				return new LocalizedString("InvokePreMoveActionDescription", "Ex3B99D9", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700319A RID: 12698
		// (get) Token: 0x0600997C RID: 39292 RVA: 0x002677ED File Offset: 0x002659ED
		public static LocalizedString SetupProgressProhibitSendQuota
		{
			get
			{
				return new LocalizedString("SetupProgressProhibitSendQuota", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600997D RID: 39293 RVA: 0x0026780C File Offset: 0x00265A0C
		public static LocalizedString LogMigrationRegistryKeyDefaultValue(string value)
		{
			return new LocalizedString("LogMigrationRegistryKeyDefaultValue", "Ex7579C5", false, true, Strings.ResourceManager, new object[]
			{
				value
			});
		}

		// Token: 0x0600997E RID: 39294 RVA: 0x0026783C File Offset: 0x00265A3C
		public static LocalizedString FailedToDeleteMailboxDatabase(string id, string error)
		{
			return new LocalizedString("FailedToDeleteMailboxDatabase", "ExEC8D88", false, true, Strings.ResourceManager, new object[]
			{
				id,
				error
			});
		}

		// Token: 0x1700319B RID: 12699
		// (get) Token: 0x0600997F RID: 39295 RVA: 0x0026786F File Offset: 0x00265A6F
		public static LocalizedString SetupComponentPerfCountersTransport
		{
			get
			{
				return new LocalizedString("SetupComponentPerfCountersTransport", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009980 RID: 39296 RVA: 0x00267890 File Offset: 0x00265A90
		public static LocalizedString ConfirmationMessageRemoveMailuserAndNotLiveId(string Identity, string liveId)
		{
			return new LocalizedString("ConfirmationMessageRemoveMailuserAndNotLiveId", "Ex10FB30", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				liveId
			});
		}

		// Token: 0x1700319C RID: 12700
		// (get) Token: 0x06009981 RID: 39297 RVA: 0x002678C3 File Offset: 0x00265AC3
		public static LocalizedString WatchDogServiceDisplayName
		{
			get
			{
				return new LocalizedString("WatchDogServiceDisplayName", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009982 RID: 39298 RVA: 0x002678E4 File Offset: 0x00265AE4
		public static LocalizedString InfoCreatedGroup(string group)
		{
			return new LocalizedString("InfoCreatedGroup", "Ex77687D", false, true, Strings.ResourceManager, new object[]
			{
				group
			});
		}

		// Token: 0x06009983 RID: 39299 RVA: 0x00267914 File Offset: 0x00265B14
		public static LocalizedString ErrorInvalidInternalUserId(string userId)
		{
			return new LocalizedString("ErrorInvalidInternalUserId", "", false, false, Strings.ResourceManager, new object[]
			{
				userId
			});
		}

		// Token: 0x06009984 RID: 39300 RVA: 0x00267944 File Offset: 0x00265B44
		public static LocalizedString ErrorWebSiteNotExists(string webSiteName, string serverName)
		{
			return new LocalizedString("ErrorWebSiteNotExists", "Ex79DCCE", false, true, Strings.ResourceManager, new object[]
			{
				webSiteName,
				serverName
			});
		}

		// Token: 0x06009985 RID: 39301 RVA: 0x00267978 File Offset: 0x00265B78
		public static LocalizedString CopyingFile(string filename)
		{
			return new LocalizedString("CopyingFile", "Ex9D5E99", false, true, Strings.ResourceManager, new object[]
			{
				filename
			});
		}

		// Token: 0x1700319D RID: 12701
		// (get) Token: 0x06009986 RID: 39302 RVA: 0x002679A7 File Offset: 0x00265BA7
		public static LocalizedString StoppingOnePointService
		{
			get
			{
				return new LocalizedString("StoppingOnePointService", "ExF0F0AD", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009987 RID: 39303 RVA: 0x002679C8 File Offset: 0x00265BC8
		public static LocalizedString AutoGroupDepartMessageSubject(string recipient, string group)
		{
			return new LocalizedString("AutoGroupDepartMessageSubject", "ExAF4222", false, true, Strings.ResourceManager, new object[]
			{
				recipient,
				group
			});
		}

		// Token: 0x1700319E RID: 12702
		// (get) Token: 0x06009988 RID: 39304 RVA: 0x002679FB File Offset: 0x00265BFB
		public static LocalizedString ProgressCheckingReplayState
		{
			get
			{
				return new LocalizedString("ProgressCheckingReplayState", "Ex35CB72", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700319F RID: 12703
		// (get) Token: 0x06009989 RID: 39305 RVA: 0x00267A19 File Offset: 0x00265C19
		public static LocalizedString CopyStatusDismounted
		{
			get
			{
				return new LocalizedString("CopyStatusDismounted", "Ex1F49A4", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600998A RID: 39306 RVA: 0x00267A38 File Offset: 0x00265C38
		public static LocalizedString ErrorInvalidOperationOnAddDBCopyForPublicFolder(string pfdb)
		{
			return new LocalizedString("ErrorInvalidOperationOnAddDBCopyForPublicFolder", "ExE8DEA1", false, true, Strings.ResourceManager, new object[]
			{
				pfdb
			});
		}

		// Token: 0x170031A0 RID: 12704
		// (get) Token: 0x0600998B RID: 39307 RVA: 0x00267A67 File Offset: 0x00265C67
		public static LocalizedString DebugStartIsDomainReservedCheck
		{
			get
			{
				return new LocalizedString("DebugStartIsDomainReservedCheck", "ExAEA575", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600998C RID: 39308 RVA: 0x00267A88 File Offset: 0x00265C88
		public static LocalizedString NewDagServerIsNotMailboxServerException(string serverName)
		{
			return new LocalizedString("NewDagServerIsNotMailboxServerException", "", false, false, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		// Token: 0x0600998D RID: 39309 RVA: 0x00267AB8 File Offset: 0x00265CB8
		public static LocalizedString InfoSetObjectVersion(int version)
		{
			return new LocalizedString("InfoSetObjectVersion", "Ex48FB4C", false, true, Strings.ResourceManager, new object[]
			{
				version
			});
		}

		// Token: 0x0600998E RID: 39310 RVA: 0x00267AEC File Offset: 0x00265CEC
		public static LocalizedString VerboseCannotReadObject(string id, string source, string error)
		{
			return new LocalizedString("VerboseCannotReadObject", "Ex780930", false, true, Strings.ResourceManager, new object[]
			{
				id,
				source,
				error
			});
		}

		// Token: 0x170031A1 RID: 12705
		// (get) Token: 0x0600998F RID: 39311 RVA: 0x00267B23 File Offset: 0x00265D23
		public static LocalizedString InvalidActionParameter
		{
			get
			{
				return new LocalizedString("InvalidActionParameter", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170031A2 RID: 12706
		// (get) Token: 0x06009990 RID: 39312 RVA: 0x00267B41 File Offset: 0x00265D41
		public static LocalizedString CasHealthClientAccessServerName
		{
			get
			{
				return new LocalizedString("CasHealthClientAccessServerName", "ExBF9943", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170031A3 RID: 12707
		// (get) Token: 0x06009991 RID: 39313 RVA: 0x00267B5F File Offset: 0x00265D5F
		public static LocalizedString ArchiveDatabaseNotExplicitlyStampedError
		{
			get
			{
				return new LocalizedString("ArchiveDatabaseNotExplicitlyStampedError", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170031A4 RID: 12708
		// (get) Token: 0x06009992 RID: 39314 RVA: 0x00267B7D File Offset: 0x00265D7D
		public static LocalizedString ExchangeWindowsPermissionsDescription
		{
			get
			{
				return new LocalizedString("ExchangeWindowsPermissionsDescription", "Ex05F94E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170031A5 RID: 12709
		// (get) Token: 0x06009993 RID: 39315 RVA: 0x00267B9B File Offset: 0x00265D9B
		public static LocalizedString CasHealthOwaPingScenarioName
		{
			get
			{
				return new LocalizedString("CasHealthOwaPingScenarioName", "ExE5C651", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009994 RID: 39316 RVA: 0x00267BBC File Offset: 0x00265DBC
		public static LocalizedString ErrorParameterValueNotAllowed(string paramName)
		{
			return new LocalizedString("ErrorParameterValueNotAllowed", "ExAAA743", false, true, Strings.ResourceManager, new object[]
			{
				paramName
			});
		}

		// Token: 0x170031A6 RID: 12710
		// (get) Token: 0x06009995 RID: 39317 RVA: 0x00267BEB File Offset: 0x00265DEB
		public static LocalizedString TargetMailboxRequired
		{
			get
			{
				return new LocalizedString("TargetMailboxRequired", "Ex552EE5", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009996 RID: 39318 RVA: 0x00267C0C File Offset: 0x00265E0C
		public static LocalizedString VerboseUnableToCreateAdminAuditFolder(string error)
		{
			return new LocalizedString("VerboseUnableToCreateAdminAuditFolder", "ExF571D4", false, true, Strings.ResourceManager, new object[]
			{
				error
			});
		}

		// Token: 0x170031A7 RID: 12711
		// (get) Token: 0x06009997 RID: 39319 RVA: 0x00267C3B File Offset: 0x00265E3B
		public static LocalizedString ConfirmationMessageSetTransportConfig
		{
			get
			{
				return new LocalizedString("ConfirmationMessageSetTransportConfig", "Ex4A1EDF", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009998 RID: 39320 RVA: 0x00267C5C File Offset: 0x00265E5C
		public static LocalizedString VerboseDoubleWriteADChangeOnDC(string id, string dc)
		{
			return new LocalizedString("VerboseDoubleWriteADChangeOnDC", "ExEA5D40", false, true, Strings.ResourceManager, new object[]
			{
				id,
				dc
			});
		}

		// Token: 0x170031A8 RID: 12712
		// (get) Token: 0x06009999 RID: 39321 RVA: 0x00267C8F File Offset: 0x00265E8F
		public static LocalizedString MigrationPartitionMailboxNotFound
		{
			get
			{
				return new LocalizedString("MigrationPartitionMailboxNotFound", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600999A RID: 39322 RVA: 0x00267CB0 File Offset: 0x00265EB0
		public static LocalizedString WarningSharedConfigurationAlreadyExists(string programid, string offerid)
		{
			return new LocalizedString("WarningSharedConfigurationAlreadyExists", "", false, false, Strings.ResourceManager, new object[]
			{
				programid,
				offerid
			});
		}

		// Token: 0x170031A9 RID: 12713
		// (get) Token: 0x0600999B RID: 39323 RVA: 0x00267CE3 File Offset: 0x00265EE3
		public static LocalizedString ClassificationRuleCollectionExportEncyrptedProhibited
		{
			get
			{
				return new LocalizedString("ClassificationRuleCollectionExportEncyrptedProhibited", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170031AA RID: 12714
		// (get) Token: 0x0600999C RID: 39324 RVA: 0x00267D01 File Offset: 0x00265F01
		public static LocalizedString UninstallGatewayRoleDescription
		{
			get
			{
				return new LocalizedString("UninstallGatewayRoleDescription", "Ex3078C7", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170031AB RID: 12715
		// (get) Token: 0x0600999D RID: 39325 RVA: 0x00267D1F File Offset: 0x00265F1F
		public static LocalizedString HighPriorityChecksFailed
		{
			get
			{
				return new LocalizedString("HighPriorityChecksFailed", "ExBA8014", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600999E RID: 39326 RVA: 0x00267D40 File Offset: 0x00265F40
		public static LocalizedString ServerComponentStateInvalidRequester(string requsterName, string allowedRequesters)
		{
			return new LocalizedString("ServerComponentStateInvalidRequester", "", false, false, Strings.ResourceManager, new object[]
			{
				requsterName,
				allowedRequesters
			});
		}

		// Token: 0x170031AC RID: 12716
		// (get) Token: 0x0600999F RID: 39327 RVA: 0x00267D73 File Offset: 0x00265F73
		public static LocalizedString CouldNotRestartExSearch
		{
			get
			{
				return new LocalizedString("CouldNotRestartExSearch", "Ex813C65", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060099A0 RID: 39328 RVA: 0x00267D94 File Offset: 0x00265F94
		public static LocalizedString ErrorParameterRequiredButNotProvisioned(string parameterName)
		{
			return new LocalizedString("ErrorParameterRequiredButNotProvisioned", "Ex482953", false, true, Strings.ResourceManager, new object[]
			{
				parameterName
			});
		}

		// Token: 0x170031AD RID: 12717
		// (get) Token: 0x060099A1 RID: 39329 RVA: 0x00267DC3 File Offset: 0x00265FC3
		public static LocalizedString AdminAuditLogSearchMissingCmdletsWhileParameterProvided
		{
			get
			{
				return new LocalizedString("AdminAuditLogSearchMissingCmdletsWhileParameterProvided", "Ex4C59A9", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060099A2 RID: 39330 RVA: 0x00267DE4 File Offset: 0x00265FE4
		public static LocalizedString ExportDestinationInvalid(string path)
		{
			return new LocalizedString("ExportDestinationInvalid", "ExB449AA", false, true, Strings.ResourceManager, new object[]
			{
				path
			});
		}

		// Token: 0x060099A3 RID: 39331 RVA: 0x00267E14 File Offset: 0x00266014
		public static LocalizedString RegistryAccessServicesKeyDoesNotExistException(string servicesRootKey)
		{
			return new LocalizedString("RegistryAccessServicesKeyDoesNotExistException", "Ex802DBA", false, true, Strings.ResourceManager, new object[]
			{
				servicesRootKey
			});
		}

		// Token: 0x060099A4 RID: 39332 RVA: 0x00267E44 File Offset: 0x00266044
		public static LocalizedString ConfirmationMessageEnableConfigCustomizations(string OrganizationalPath)
		{
			return new LocalizedString("ConfirmationMessageEnableConfigCustomizations", "", false, false, Strings.ResourceManager, new object[]
			{
				OrganizationalPath
			});
		}

		// Token: 0x060099A5 RID: 39333 RVA: 0x00267E74 File Offset: 0x00266074
		public static LocalizedString ConfirmationMessageEnableCallAnsweringRule(string identity)
		{
			return new LocalizedString("ConfirmationMessageEnableCallAnsweringRule", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x170031AE RID: 12718
		// (get) Token: 0x060099A6 RID: 39334 RVA: 0x00267EA3 File Offset: 0x002660A3
		public static LocalizedString RmsOnlineFailedToValidateKeys
		{
			get
			{
				return new LocalizedString("RmsOnlineFailedToValidateKeys", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170031AF RID: 12719
		// (get) Token: 0x060099A7 RID: 39335 RVA: 0x00267EC1 File Offset: 0x002660C1
		public static LocalizedString VerboseCheckingScopePassed
		{
			get
			{
				return new LocalizedString("VerboseCheckingScopePassed", "ExF49838", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060099A8 RID: 39336 RVA: 0x00267EE0 File Offset: 0x002660E0
		public static LocalizedString ConfirmationMessageRemoveMailboxIdentityAndLiveId(string Identity, string liveId)
		{
			return new LocalizedString("ConfirmationMessageRemoveMailboxIdentityAndLiveId", "Ex830028", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				liveId
			});
		}

		// Token: 0x170031B0 RID: 12720
		// (get) Token: 0x060099A9 RID: 39337 RVA: 0x00267F13 File Offset: 0x00266113
		public static LocalizedString NotAValidDistributionGroup
		{
			get
			{
				return new LocalizedString("NotAValidDistributionGroup", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170031B1 RID: 12721
		// (get) Token: 0x060099AA RID: 39338 RVA: 0x00267F31 File Offset: 0x00266131
		public static LocalizedString ConfirmEnforceRequireSslOnRoot
		{
			get
			{
				return new LocalizedString("ConfirmEnforceRequireSslOnRoot", "ExF3A941", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060099AB RID: 39339 RVA: 0x00267F50 File Offset: 0x00266150
		public static LocalizedString ErrorModifyRoleNeedHierarchicalParentRoleWithoutScopeRestriction(string roleId)
		{
			return new LocalizedString("ErrorModifyRoleNeedHierarchicalParentRoleWithoutScopeRestriction", "Ex53554D", false, true, Strings.ResourceManager, new object[]
			{
				roleId
			});
		}

		// Token: 0x170031B2 RID: 12722
		// (get) Token: 0x060099AC RID: 39340 RVA: 0x00267F7F File Offset: 0x0026617F
		public static LocalizedString ErrorMessageCopyForSendOnBehalfEnabledCanOnlySetOnSharedMailbox
		{
			get
			{
				return new LocalizedString("ErrorMessageCopyForSendOnBehalfEnabledCanOnlySetOnSharedMailbox", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060099AD RID: 39341 RVA: 0x00267FA0 File Offset: 0x002661A0
		public static LocalizedString PAMCouldNotBeDeterminedException(string dagName, string errorMsg)
		{
			return new LocalizedString("PAMCouldNotBeDeterminedException", "", false, false, Strings.ResourceManager, new object[]
			{
				dagName,
				errorMsg
			});
		}

		// Token: 0x170031B3 RID: 12723
		// (get) Token: 0x060099AE RID: 39342 RVA: 0x00267FD3 File Offset: 0x002661D3
		public static LocalizedString NoBindingsSet
		{
			get
			{
				return new LocalizedString("NoBindingsSet", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170031B4 RID: 12724
		// (get) Token: 0x060099AF RID: 39343 RVA: 0x00267FF1 File Offset: 0x002661F1
		public static LocalizedString ErrorAccountPartitionRequired
		{
			get
			{
				return new LocalizedString("ErrorAccountPartitionRequired", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060099B0 RID: 39344 RVA: 0x00268010 File Offset: 0x00266210
		public static LocalizedString TestSearchGetMapiStore(string ID)
		{
			return new LocalizedString("TestSearchGetMapiStore", "ExD0F720", false, true, Strings.ResourceManager, new object[]
			{
				ID
			});
		}

		// Token: 0x170031B5 RID: 12725
		// (get) Token: 0x060099B1 RID: 39345 RVA: 0x0026803F File Offset: 0x0026623F
		public static LocalizedString DebugEndInAcceptedDomainCheck
		{
			get
			{
				return new LocalizedString("DebugEndInAcceptedDomainCheck", "ExC5EE8D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060099B2 RID: 39346 RVA: 0x00268060 File Offset: 0x00266260
		public static LocalizedString FailedToStartClusSvc(string serverName, string state)
		{
			return new LocalizedString("FailedToStartClusSvc", "", false, false, Strings.ResourceManager, new object[]
			{
				serverName,
				state
			});
		}

		// Token: 0x170031B6 RID: 12726
		// (get) Token: 0x060099B3 RID: 39347 RVA: 0x00268093 File Offset: 0x00266293
		public static LocalizedString UninstallingTranscodingService
		{
			get
			{
				return new LocalizedString("UninstallingTranscodingService", "ExE91517", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170031B7 RID: 12727
		// (get) Token: 0x060099B4 RID: 39348 RVA: 0x002680B1 File Offset: 0x002662B1
		public static LocalizedString SetupProgressEnableWMIAsync
		{
			get
			{
				return new LocalizedString("SetupProgressEnableWMIAsync", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170031B8 RID: 12728
		// (get) Token: 0x060099B5 RID: 39349 RVA: 0x002680CF File Offset: 0x002662CF
		public static LocalizedString MtrtDeleteMessage
		{
			get
			{
				return new LocalizedString("MtrtDeleteMessage", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170031B9 RID: 12729
		// (get) Token: 0x060099B6 RID: 39350 RVA: 0x002680ED File Offset: 0x002662ED
		public static LocalizedString ClassificationRuleCollectionTimeoutFailure
		{
			get
			{
				return new LocalizedString("ClassificationRuleCollectionTimeoutFailure", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060099B7 RID: 39351 RVA: 0x0026810C File Offset: 0x0026630C
		public static LocalizedString DagFswUnableToUpdateWitnessShareException(string fswMachine, string share, Exception ex)
		{
			return new LocalizedString("DagFswUnableToUpdateWitnessShareException", "", false, false, Strings.ResourceManager, new object[]
			{
				fswMachine,
				share,
				ex
			});
		}

		// Token: 0x060099B8 RID: 39352 RVA: 0x00268144 File Offset: 0x00266344
		public static LocalizedString ConfirmationMessageRemoveAuthRedirect(string name)
		{
			return new LocalizedString("ConfirmationMessageRemoveAuthRedirect", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x060099B9 RID: 39353 RVA: 0x00268174 File Offset: 0x00266374
		public static LocalizedString ErrorDefaultWebSiteNotExist(string configFile)
		{
			return new LocalizedString("ErrorDefaultWebSiteNotExist", "Ex4827B7", false, true, Strings.ResourceManager, new object[]
			{
				configFile
			});
		}

		// Token: 0x060099BA RID: 39354 RVA: 0x002681A4 File Offset: 0x002663A4
		public static LocalizedString ConfirmationMessageNewOrganizationNoPath(string Name, SmtpDomain DomainName)
		{
			return new LocalizedString("ConfirmationMessageNewOrganizationNoPath", "Ex67FED5", false, true, Strings.ResourceManager, new object[]
			{
				Name,
				DomainName
			});
		}

		// Token: 0x170031BA RID: 12730
		// (get) Token: 0x060099BB RID: 39355 RVA: 0x002681D7 File Offset: 0x002663D7
		public static LocalizedString ErrorMessageCopyForSentAsEnabledCanOnlySetOnSharedMailbox
		{
			get
			{
				return new LocalizedString("ErrorMessageCopyForSentAsEnabledCanOnlySetOnSharedMailbox", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060099BC RID: 39356 RVA: 0x002681F8 File Offset: 0x002663F8
		public static LocalizedString FormsAuthenticationDeleteMarksIfUnusedUnknownCheckErrorException(string metabasePath)
		{
			return new LocalizedString("FormsAuthenticationDeleteMarksIfUnusedUnknownCheckErrorException", "Ex3AF600", false, true, Strings.ResourceManager, new object[]
			{
				metabasePath
			});
		}

		// Token: 0x060099BD RID: 39357 RVA: 0x00268228 File Offset: 0x00266428
		public static LocalizedString ErrorPasswordIncludesMemberName(string memberName)
		{
			return new LocalizedString("ErrorPasswordIncludesMemberName", "ExFDEEF0", false, true, Strings.ResourceManager, new object[]
			{
				memberName
			});
		}

		// Token: 0x060099BE RID: 39358 RVA: 0x00268258 File Offset: 0x00266458
		public static LocalizedString ErrorVirtualDirectoryADObjectAlreadyExists(string virtualDirectoryName, string ADPosition)
		{
			return new LocalizedString("ErrorVirtualDirectoryADObjectAlreadyExists", "", false, false, Strings.ResourceManager, new object[]
			{
				virtualDirectoryName,
				ADPosition
			});
		}

		// Token: 0x170031BB RID: 12731
		// (get) Token: 0x060099BF RID: 39359 RVA: 0x0026828B File Offset: 0x0026648B
		public static LocalizedString ErrorLinkedRoleGroupCannotHaveMembers
		{
			get
			{
				return new LocalizedString("ErrorLinkedRoleGroupCannotHaveMembers", "Ex91B9F4", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170031BC RID: 12732
		// (get) Token: 0x060099C0 RID: 39360 RVA: 0x002682A9 File Offset: 0x002664A9
		public static LocalizedString UnableToDetermineCreatingUser
		{
			get
			{
				return new LocalizedString("UnableToDetermineCreatingUser", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170031BD RID: 12733
		// (get) Token: 0x060099C1 RID: 39361 RVA: 0x002682C7 File Offset: 0x002664C7
		public static LocalizedString ProgressDeletingCatalog
		{
			get
			{
				return new LocalizedString("ProgressDeletingCatalog", "ExF45E56", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060099C2 RID: 39362 RVA: 0x002682E8 File Offset: 0x002664E8
		public static LocalizedString WarnCertificateWillNotBeUsed(string bestMatchThumbprint, string fqdn, string connectors)
		{
			return new LocalizedString("WarnCertificateWillNotBeUsed", "ExC5EBF9", false, true, Strings.ResourceManager, new object[]
			{
				bestMatchThumbprint,
				fqdn,
				connectors
			});
		}

		// Token: 0x060099C3 RID: 39363 RVA: 0x00268320 File Offset: 0x00266520
		public static LocalizedString ConfirmRemovalOfCorruptRequest(string indexEntry, string validationMessage)
		{
			return new LocalizedString("ConfirmRemovalOfCorruptRequest", "Ex4F69DF", false, true, Strings.ResourceManager, new object[]
			{
				indexEntry,
				validationMessage
			});
		}

		// Token: 0x170031BE RID: 12734
		// (get) Token: 0x060099C4 RID: 39364 RVA: 0x00268353 File Offset: 0x00266553
		public static LocalizedString ErrorGlobalThrottlingPolicyNotFound
		{
			get
			{
				return new LocalizedString("ErrorGlobalThrottlingPolicyNotFound", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170031BF RID: 12735
		// (get) Token: 0x060099C5 RID: 39365 RVA: 0x00268371 File Offset: 0x00266571
		public static LocalizedString IncompatibleTenantOrganizationForBulkProvisioning
		{
			get
			{
				return new LocalizedString("IncompatibleTenantOrganizationForBulkProvisioning", "Ex8F76D2", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060099C6 RID: 39366 RVA: 0x00268390 File Offset: 0x00266590
		public static LocalizedString ErrorLiveIdDomainTemporarilyUnavailable(string message)
		{
			return new LocalizedString("ErrorLiveIdDomainTemporarilyUnavailable", "Ex85EED4", false, true, Strings.ResourceManager, new object[]
			{
				message
			});
		}

		// Token: 0x060099C7 RID: 39367 RVA: 0x002683C0 File Offset: 0x002665C0
		public static LocalizedString MsiIsNotInstalled(string packageName)
		{
			return new LocalizedString("MsiIsNotInstalled", "Ex0C86DA", false, true, Strings.ResourceManager, new object[]
			{
				packageName
			});
		}

		// Token: 0x060099C8 RID: 39368 RVA: 0x002683F0 File Offset: 0x002665F0
		public static LocalizedString ConfirmationMessageRemoveDefaultELCFolder(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveDefaultELCFolder", "ExDC6068", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x170031C0 RID: 12736
		// (get) Token: 0x060099C9 RID: 39369 RVA: 0x0026841F File Offset: 0x0026661F
		public static LocalizedString RuleStateEnabled
		{
			get
			{
				return new LocalizedString("RuleStateEnabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060099CA RID: 39370 RVA: 0x00268440 File Offset: 0x00266640
		public static LocalizedString ConfirmationMessageDisableDistributionGroup(string Identity)
		{
			return new LocalizedString("ConfirmationMessageDisableDistributionGroup", "Ex3D6BFF", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x060099CB RID: 39371 RVA: 0x00268470 File Offset: 0x00266670
		public static LocalizedString ErrorTooManyMailboxesInSingleHold(int maxNumber)
		{
			return new LocalizedString("ErrorTooManyMailboxesInSingleHold", "", false, false, Strings.ResourceManager, new object[]
			{
				maxNumber
			});
		}

		// Token: 0x060099CC RID: 39372 RVA: 0x002684A4 File Offset: 0x002666A4
		public static LocalizedString FailedToFindTPDForRefresh(string name)
		{
			return new LocalizedString("FailedToFindTPDForRefresh", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x060099CD RID: 39373 RVA: 0x002684D4 File Offset: 0x002666D4
		public static LocalizedString ErrorUserIsNotMailBoxEnabled(string user)
		{
			return new LocalizedString("ErrorUserIsNotMailBoxEnabled", "Ex49326D", false, true, Strings.ResourceManager, new object[]
			{
				user
			});
		}

		// Token: 0x170031C1 RID: 12737
		// (get) Token: 0x060099CE RID: 39374 RVA: 0x00268503 File Offset: 0x00266703
		public static LocalizedString DisasterRecoveryMailboxRoleDescription
		{
			get
			{
				return new LocalizedString("DisasterRecoveryMailboxRoleDescription", "Ex792C33", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060099CF RID: 39375 RVA: 0x00268524 File Offset: 0x00266724
		public static LocalizedString ErrorMailboxInNonMailboxServer(string mailbox)
		{
			return new LocalizedString("ErrorMailboxInNonMailboxServer", "Ex268963", false, true, Strings.ResourceManager, new object[]
			{
				mailbox
			});
		}

		// Token: 0x060099D0 RID: 39376 RVA: 0x00268554 File Offset: 0x00266754
		public static LocalizedString ExceptionWhileReadingInputFile(string filename, string exMessage)
		{
			return new LocalizedString("ExceptionWhileReadingInputFile", "Ex647B44", false, true, Strings.ResourceManager, new object[]
			{
				filename,
				exMessage
			});
		}

		// Token: 0x060099D1 RID: 39377 RVA: 0x00268588 File Offset: 0x00266788
		public static LocalizedString ConfirmSharedConfiguration(string id)
		{
			return new LocalizedString("ConfirmSharedConfiguration", "ExE59BA5", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x060099D2 RID: 39378 RVA: 0x002685B8 File Offset: 0x002667B8
		public static LocalizedString VerboseFindClosestPublicFolderDatabaseFromServer(string id)
		{
			return new LocalizedString("VerboseFindClosestPublicFolderDatabaseFromServer", "Ex874D79", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x060099D3 RID: 39379 RVA: 0x002685E8 File Offset: 0x002667E8
		public static LocalizedString ConfirmationMessageNewFederationTrust(string Name, string partnerSTS, string Thumbprint)
		{
			return new LocalizedString("ConfirmationMessageNewFederationTrust", "ExE01154", false, true, Strings.ResourceManager, new object[]
			{
				Name,
				partnerSTS,
				Thumbprint
			});
		}

		// Token: 0x060099D4 RID: 39380 RVA: 0x00268620 File Offset: 0x00266820
		public static LocalizedString ConfirmationMessageNewReceiveConnector(string Name, string Bindings, string RemoteIPRanges)
		{
			return new LocalizedString("ConfirmationMessageNewReceiveConnector", "ExC7D70D", false, true, Strings.ResourceManager, new object[]
			{
				Name,
				Bindings,
				RemoteIPRanges
			});
		}

		// Token: 0x060099D5 RID: 39381 RVA: 0x00268658 File Offset: 0x00266858
		public static LocalizedString TestSearchMapiStoreError(string ID, string database)
		{
			return new LocalizedString("TestSearchMapiStoreError", "Ex72B43D", false, true, Strings.ResourceManager, new object[]
			{
				ID,
				database
			});
		}

		// Token: 0x060099D6 RID: 39382 RVA: 0x0026868C File Offset: 0x0026688C
		public static LocalizedString GetQueueDigestInvalidFilter(string filter)
		{
			return new LocalizedString("GetQueueDigestInvalidFilter", "", false, false, Strings.ResourceManager, new object[]
			{
				filter
			});
		}

		// Token: 0x060099D7 RID: 39383 RVA: 0x002686BC File Offset: 0x002668BC
		public static LocalizedString ExchangeSettingsInvalidSchema(string name)
		{
			return new LocalizedString("ExchangeSettingsInvalidSchema", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x060099D8 RID: 39384 RVA: 0x002686EC File Offset: 0x002668EC
		public static LocalizedString ClassificationRuleCollectionReservedFingerprintRulePackIdViolation(string rulePackId)
		{
			return new LocalizedString("ClassificationRuleCollectionReservedFingerprintRulePackIdViolation", "", false, false, Strings.ResourceManager, new object[]
			{
				rulePackId
			});
		}

		// Token: 0x060099D9 RID: 39385 RVA: 0x0026871C File Offset: 0x0026691C
		public static LocalizedString ProgressStartClussvc(string node)
		{
			return new LocalizedString("ProgressStartClussvc", "Ex250A85", false, true, Strings.ResourceManager, new object[]
			{
				node
			});
		}

		// Token: 0x170031C2 RID: 12738
		// (get) Token: 0x060099DA RID: 39386 RVA: 0x0026874B File Offset: 0x0026694B
		public static LocalizedString ManagedAvailabilityServersUSGDescription
		{
			get
			{
				return new LocalizedString("ManagedAvailabilityServersUSGDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170031C3 RID: 12739
		// (get) Token: 0x060099DB RID: 39387 RVA: 0x00268769 File Offset: 0x00266969
		public static LocalizedString ConfirmationMessageTestEdgeSynchronization
		{
			get
			{
				return new LocalizedString("ConfirmationMessageTestEdgeSynchronization", "Ex4F89D2", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060099DC RID: 39388 RVA: 0x00268788 File Offset: 0x00266988
		public static LocalizedString ImportMultiplePSTToOneMailbox(string displayName)
		{
			return new LocalizedString("ImportMultiplePSTToOneMailbox", "Ex1DC10E", false, true, Strings.ResourceManager, new object[]
			{
				displayName
			});
		}

		// Token: 0x170031C4 RID: 12740
		// (get) Token: 0x060099DD RID: 39389 RVA: 0x002687B7 File Offset: 0x002669B7
		public static LocalizedString ErrorBasicAndLiveIdBasicNotAllowed
		{
			get
			{
				return new LocalizedString("ErrorBasicAndLiveIdBasicNotAllowed", "Ex5701E7", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060099DE RID: 39390 RVA: 0x002687D8 File Offset: 0x002669D8
		public static LocalizedString OnPremisesOrganizationOutboundConnectorNotExists(OutboundConnectorIdParameter identity)
		{
			return new LocalizedString("OnPremisesOrganizationOutboundConnectorNotExists", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x060099DF RID: 39391 RVA: 0x00268808 File Offset: 0x00266A08
		public static LocalizedString AccessMismatchRemoteLocal(string remoteName, string remoteProperty, string localName, string localFlag)
		{
			return new LocalizedString("AccessMismatchRemoteLocal", "Ex6E452D", false, true, Strings.ResourceManager, new object[]
			{
				remoteName,
				remoteProperty,
				localName,
				localFlag
			});
		}

		// Token: 0x060099E0 RID: 39392 RVA: 0x00268844 File Offset: 0x00266A44
		public static LocalizedString WarningFixTheInvalidRecipientFilterMetadata(string id)
		{
			return new LocalizedString("WarningFixTheInvalidRecipientFilterMetadata", "ExAC5CDD", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x170031C5 RID: 12741
		// (get) Token: 0x060099E1 RID: 39393 RVA: 0x00268873 File Offset: 0x00266A73
		public static LocalizedString ErrorInvalidCharException
		{
			get
			{
				return new LocalizedString("ErrorInvalidCharException", "ExA046CB", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060099E2 RID: 39394 RVA: 0x00268894 File Offset: 0x00266A94
		public static LocalizedString MsiCouldNotRemoveProduct(Guid productCode, string message, int errorCode)
		{
			return new LocalizedString("MsiCouldNotRemoveProduct", "Ex52A0EE", false, true, Strings.ResourceManager, new object[]
			{
				productCode,
				message,
				errorCode
			});
		}

		// Token: 0x170031C6 RID: 12742
		// (get) Token: 0x060099E3 RID: 39395 RVA: 0x002688D5 File Offset: 0x00266AD5
		public static LocalizedString CalendarVDirNotFound
		{
			get
			{
				return new LocalizedString("CalendarVDirNotFound", "Ex4124F7", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170031C7 RID: 12743
		// (get) Token: 0x060099E4 RID: 39396 RVA: 0x002688F3 File Offset: 0x00266AF3
		public static LocalizedString ReplicationCheckFailuresLabel
		{
			get
			{
				return new LocalizedString("ReplicationCheckFailuresLabel", "Ex075474", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060099E5 RID: 39397 RVA: 0x00268914 File Offset: 0x00266B14
		public static LocalizedString ErrorServerNotCAS(string server)
		{
			return new LocalizedString("ErrorServerNotCAS", "", false, false, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		// Token: 0x060099E6 RID: 39398 RVA: 0x00268944 File Offset: 0x00266B44
		public static LocalizedString DataClassificationAmbiguousIdentity(string query, string collectionId1, string localizedName2, string uniqueId2, string collectionId2)
		{
			return new LocalizedString("DataClassificationAmbiguousIdentity", "", false, false, Strings.ResourceManager, new object[]
			{
				query,
				collectionId1,
				localizedName2,
				uniqueId2,
				collectionId2
			});
		}

		// Token: 0x170031C8 RID: 12744
		// (get) Token: 0x060099E7 RID: 39399 RVA: 0x00268984 File Offset: 0x00266B84
		public static LocalizedString CreateAltFswWillAutomaticallyCalculateLater
		{
			get
			{
				return new LocalizedString("CreateAltFswWillAutomaticallyCalculateLater", "ExC2029B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060099E8 RID: 39400 RVA: 0x002689A4 File Offset: 0x00266BA4
		public static LocalizedString WarningFswNotPrimaryOrAlternate(string identity)
		{
			return new LocalizedString("WarningFswNotPrimaryOrAlternate", "Ex038D1E", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x170031C9 RID: 12745
		// (get) Token: 0x060099E9 RID: 39401 RVA: 0x002689D3 File Offset: 0x00266BD3
		public static LocalizedString ProgressDeletingCopySystemFiles
		{
			get
			{
				return new LocalizedString("ProgressDeletingCopySystemFiles", "Ex7539DE", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060099EA RID: 39402 RVA: 0x002689F4 File Offset: 0x00266BF4
		public static LocalizedString WarningGeneratingMissingAlias(string idRecipient, string alias)
		{
			return new LocalizedString("WarningGeneratingMissingAlias", "Ex9231E5", false, true, Strings.ResourceManager, new object[]
			{
				idRecipient,
				alias
			});
		}

		// Token: 0x060099EB RID: 39403 RVA: 0x00268A28 File Offset: 0x00266C28
		public static LocalizedString InvalidIdentityTypeForRemoveCmdletException(string identity)
		{
			return new LocalizedString("InvalidIdentityTypeForRemoveCmdletException", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x060099EC RID: 39404 RVA: 0x00268A58 File Offset: 0x00266C58
		public static LocalizedString CasHealthAutoDiscoveryBadUri(string uriStr)
		{
			return new LocalizedString("CasHealthAutoDiscoveryBadUri", "Ex28C89E", false, true, Strings.ResourceManager, new object[]
			{
				uriStr
			});
		}

		// Token: 0x170031CA RID: 12746
		// (get) Token: 0x060099ED RID: 39405 RVA: 0x00268A87 File Offset: 0x00266C87
		public static LocalizedString UninstallCentralAdminServiceTask
		{
			get
			{
				return new LocalizedString("UninstallCentralAdminServiceTask", "Ex4ADD5D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060099EE RID: 39406 RVA: 0x00268AA8 File Offset: 0x00266CA8
		public static LocalizedString RuleNotFound(string rule)
		{
			return new LocalizedString("RuleNotFound", "Ex635A7E", false, true, Strings.ResourceManager, new object[]
			{
				rule
			});
		}

		// Token: 0x060099EF RID: 39407 RVA: 0x00268AD8 File Offset: 0x00266CD8
		public static LocalizedString ServerComponentStateNoLocalOnly(string component)
		{
			return new LocalizedString("ServerComponentStateNoLocalOnly", "", false, false, Strings.ResourceManager, new object[]
			{
				component
			});
		}

		// Token: 0x060099F0 RID: 39408 RVA: 0x00268B08 File Offset: 0x00266D08
		public static LocalizedString IPv6AddressesAreNotAllowedInGatewayIPAddressesId(string ip)
		{
			return new LocalizedString("IPv6AddressesAreNotAllowedInGatewayIPAddressesId", "ExD30213", false, true, Strings.ResourceManager, new object[]
			{
				ip
			});
		}

		// Token: 0x170031CB RID: 12747
		// (get) Token: 0x060099F1 RID: 39409 RVA: 0x00268B37 File Offset: 0x00266D37
		public static LocalizedString SetupComponentConfiguringDAV
		{
			get
			{
				return new LocalizedString("SetupComponentConfiguringDAV", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060099F2 RID: 39410 RVA: 0x00268B58 File Offset: 0x00266D58
		public static LocalizedString ServerVersionNotSupportedException(string cmdletName, int cmdletVersion, int serverVersion)
		{
			return new LocalizedString("ServerVersionNotSupportedException", "ExECD7E6", false, true, Strings.ResourceManager, new object[]
			{
				cmdletName,
				cmdletVersion,
				serverVersion
			});
		}

		// Token: 0x170031CC RID: 12748
		// (get) Token: 0x060099F3 RID: 39411 RVA: 0x00268B99 File Offset: 0x00266D99
		public static LocalizedString CouldNotFindFirstOrgPerimeterConfigObjectId
		{
			get
			{
				return new LocalizedString("CouldNotFindFirstOrgPerimeterConfigObjectId", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170031CD RID: 12749
		// (get) Token: 0x060099F4 RID: 39412 RVA: 0x00268BB7 File Offset: 0x00266DB7
		public static LocalizedString MapiSubmitSystemProbeInternetMessageId
		{
			get
			{
				return new LocalizedString("MapiSubmitSystemProbeInternetMessageId", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060099F5 RID: 39413 RVA: 0x00268BD8 File Offset: 0x00266DD8
		public static LocalizedString ErrorMailboxResidesInRDB(string mailboxId)
		{
			return new LocalizedString("ErrorMailboxResidesInRDB", "Ex7B65E6", false, true, Strings.ResourceManager, new object[]
			{
				mailboxId
			});
		}

		// Token: 0x060099F6 RID: 39414 RVA: 0x00268C08 File Offset: 0x00266E08
		public static LocalizedString ErrorInvalidRecipientPreviewFilter(string filter)
		{
			return new LocalizedString("ErrorInvalidRecipientPreviewFilter", "Ex46B7D3", false, true, Strings.ResourceManager, new object[]
			{
				filter
			});
		}

		// Token: 0x060099F7 RID: 39415 RVA: 0x00268C38 File Offset: 0x00266E38
		public static LocalizedString ErrorIsUniversalGroupAlready(string group)
		{
			return new LocalizedString("ErrorIsUniversalGroupAlready", "ExFC5660", false, true, Strings.ResourceManager, new object[]
			{
				group
			});
		}

		// Token: 0x060099F8 RID: 39416 RVA: 0x00268C68 File Offset: 0x00266E68
		public static LocalizedString ConfirmationMessageSetEcpVirtualDirectory(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetEcpVirtualDirectory", "Ex6DCF10", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x060099F9 RID: 39417 RVA: 0x00268C98 File Offset: 0x00266E98
		public static LocalizedString ErrorRootFolderInvalid(LocalizedString errorMessage)
		{
			return new LocalizedString("ErrorRootFolderInvalid", "ExD2CFAD", false, true, Strings.ResourceManager, new object[]
			{
				errorMessage
			});
		}

		// Token: 0x170031CE RID: 12750
		// (get) Token: 0x060099FA RID: 39418 RVA: 0x00268CCC File Offset: 0x00266ECC
		public static LocalizedString ErrorFailedToGetPublishingUri
		{
			get
			{
				return new LocalizedString("ErrorFailedToGetPublishingUri", "Ex503006", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170031CF RID: 12751
		// (get) Token: 0x060099FB RID: 39419 RVA: 0x00268CEA File Offset: 0x00266EEA
		public static LocalizedString RequiredStartDateParameter
		{
			get
			{
				return new LocalizedString("RequiredStartDateParameter", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170031D0 RID: 12752
		// (get) Token: 0x060099FC RID: 39420 RVA: 0x00268D08 File Offset: 0x00266F08
		public static LocalizedString SetupProgressRemotePowerShellAccessEnabled
		{
			get
			{
				return new LocalizedString("SetupProgressRemotePowerShellAccessEnabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170031D1 RID: 12753
		// (get) Token: 0x060099FD RID: 39421 RVA: 0x00268D26 File Offset: 0x00266F26
		public static LocalizedString SetupProgressOwaLightEnabled
		{
			get
			{
				return new LocalizedString("SetupProgressOwaLightEnabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x060099FE RID: 39422 RVA: 0x00268D44 File Offset: 0x00266F44
		public static LocalizedString WarningServerIsNotInCasRole(string name)
		{
			return new LocalizedString("WarningServerIsNotInCasRole", "ExEEED82", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x060099FF RID: 39423 RVA: 0x00268D74 File Offset: 0x00266F74
		public static LocalizedString WarnInvalidCertificateForProtocol(string thumbprint, string fqdn, string protocol)
		{
			return new LocalizedString("WarnInvalidCertificateForProtocol", "ExCBB11A", false, true, Strings.ResourceManager, new object[]
			{
				thumbprint,
				fqdn,
				protocol
			});
		}

		// Token: 0x06009A00 RID: 39424 RVA: 0x00268DAC File Offset: 0x00266FAC
		public static LocalizedString ConfirmationMessageSetAddressBookPolicy(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetAddressBookPolicy", "", false, false, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x06009A01 RID: 39425 RVA: 0x00268DDC File Offset: 0x00266FDC
		public static LocalizedString ErrorCannotBeExOWithoutDatacenter(string component)
		{
			return new LocalizedString("ErrorCannotBeExOWithoutDatacenter", "", false, false, Strings.ResourceManager, new object[]
			{
				component
			});
		}

		// Token: 0x06009A02 RID: 39426 RVA: 0x00268E0C File Offset: 0x0026700C
		public static LocalizedString ErrorInvalidPartnerId(int value)
		{
			return new LocalizedString("ErrorInvalidPartnerId", "", false, false, Strings.ResourceManager, new object[]
			{
				value
			});
		}

		// Token: 0x06009A03 RID: 39427 RVA: 0x00268E40 File Offset: 0x00267040
		public static LocalizedString InterceptorErrorInvalidConditionTypeValue(string conditionType, string value, string error)
		{
			return new LocalizedString("InterceptorErrorInvalidConditionTypeValue", "", false, false, Strings.ResourceManager, new object[]
			{
				conditionType,
				value,
				error
			});
		}

		// Token: 0x170031D2 RID: 12754
		// (get) Token: 0x06009A04 RID: 39428 RVA: 0x00268E77 File Offset: 0x00267077
		public static LocalizedString InvalidUnicodeCharacterUsage
		{
			get
			{
				return new LocalizedString("InvalidUnicodeCharacterUsage", "Ex37D036", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170031D3 RID: 12755
		// (get) Token: 0x06009A05 RID: 39429 RVA: 0x00268E95 File Offset: 0x00267095
		public static LocalizedString ErrorRemoteTargetDatabaseNotAllowedForRemotePull
		{
			get
			{
				return new LocalizedString("ErrorRemoteTargetDatabaseNotAllowedForRemotePull", "Ex4B2AB5", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009A06 RID: 39430 RVA: 0x00268EB4 File Offset: 0x002670B4
		public static LocalizedString ExceptionLogFileInvalid(string vfile)
		{
			return new LocalizedString("ExceptionLogFileInvalid", "Ex758DB7", false, true, Strings.ResourceManager, new object[]
			{
				vfile
			});
		}

		// Token: 0x170031D4 RID: 12756
		// (get) Token: 0x06009A07 RID: 39431 RVA: 0x00268EE3 File Offset: 0x002670E3
		public static LocalizedString CasHealthEasScenarioSyncZero
		{
			get
			{
				return new LocalizedString("CasHealthEasScenarioSyncZero", "ExA06048", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170031D5 RID: 12757
		// (get) Token: 0x06009A08 RID: 39432 RVA: 0x00268F01 File Offset: 0x00267101
		public static LocalizedString SetUMMailboxPolicyDuplicateSourceForestPolicyNames
		{
			get
			{
				return new LocalizedString("SetUMMailboxPolicyDuplicateSourceForestPolicyNames", "Ex3799E3", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170031D6 RID: 12758
		// (get) Token: 0x06009A09 RID: 39433 RVA: 0x00268F1F File Offset: 0x0026711F
		public static LocalizedString CatchAllRecipientTypeNotAllowed
		{
			get
			{
				return new LocalizedString("CatchAllRecipientTypeNotAllowed", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009A0A RID: 39434 RVA: 0x00268F40 File Offset: 0x00267140
		public static LocalizedString SmtpConnectivitySuccesses(string results)
		{
			return new LocalizedString("SmtpConnectivitySuccesses", "ExD336CA", false, true, Strings.ResourceManager, new object[]
			{
				results
			});
		}

		// Token: 0x170031D7 RID: 12759
		// (get) Token: 0x06009A0B RID: 39435 RVA: 0x00268F6F File Offset: 0x0026716F
		public static LocalizedString ErrorFailedToCheckMode
		{
			get
			{
				return new LocalizedString("ErrorFailedToCheckMode", "Ex8A9624", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009A0C RID: 39436 RVA: 0x00268F90 File Offset: 0x00267190
		public static LocalizedString ErrorUserNotInSecurityGroups(string id)
		{
			return new LocalizedString("ErrorUserNotInSecurityGroups", "ExFC77A9", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x170031D8 RID: 12760
		// (get) Token: 0x06009A0D RID: 39437 RVA: 0x00268FBF File Offset: 0x002671BF
		public static LocalizedString ErrorEnableRoomMailboxAccountCanBeUsedWithRoomsOnly
		{
			get
			{
				return new LocalizedString("ErrorEnableRoomMailboxAccountCanBeUsedWithRoomsOnly", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009A0E RID: 39438 RVA: 0x00268FE0 File Offset: 0x002671E0
		public static LocalizedString WarningCmdletIsDeprecated(string oldCmdlet, string newCmdlet)
		{
			return new LocalizedString("WarningCmdletIsDeprecated", "", false, false, Strings.ResourceManager, new object[]
			{
				oldCmdlet,
				newCmdlet
			});
		}

		// Token: 0x170031D9 RID: 12761
		// (get) Token: 0x06009A0F RID: 39439 RVA: 0x00269013 File Offset: 0x00267213
		public static LocalizedString ErrorTaskRunningLocationMailboxOnly
		{
			get
			{
				return new LocalizedString("ErrorTaskRunningLocationMailboxOnly", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009A10 RID: 39440 RVA: 0x00269034 File Offset: 0x00267234
		public static LocalizedString GenericRpcError(string server, string message)
		{
			return new LocalizedString("GenericRpcError", "Ex0A0751", false, true, Strings.ResourceManager, new object[]
			{
				server,
				message
			});
		}

		// Token: 0x170031DA RID: 12762
		// (get) Token: 0x06009A11 RID: 39441 RVA: 0x00269067 File Offset: 0x00267267
		public static LocalizedString OwaIdentityMustHaveValueException
		{
			get
			{
				return new LocalizedString("OwaIdentityMustHaveValueException", "ExCBCA61", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009A12 RID: 39442 RVA: 0x00269088 File Offset: 0x00267288
		public static LocalizedString UnexpectedRoleTypeException(string roleDN, RoleType invalid, RoleType expected)
		{
			return new LocalizedString("UnexpectedRoleTypeException", "ExE09138", false, true, Strings.ResourceManager, new object[]
			{
				roleDN,
				invalid,
				expected
			});
		}

		// Token: 0x170031DB RID: 12763
		// (get) Token: 0x06009A13 RID: 39443 RVA: 0x002690C9 File Offset: 0x002672C9
		public static LocalizedString DebugGettingNetIdFromMemeberName
		{
			get
			{
				return new LocalizedString("DebugGettingNetIdFromMemeberName", "ExCA2072", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170031DC RID: 12764
		// (get) Token: 0x06009A14 RID: 39444 RVA: 0x002690E7 File Offset: 0x002672E7
		public static LocalizedString ExchangeMigrationSidHistoryAuditingDSGDescription
		{
			get
			{
				return new LocalizedString("ExchangeMigrationSidHistoryAuditingDSGDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170031DD RID: 12765
		// (get) Token: 0x06009A15 RID: 39445 RVA: 0x00269105 File Offset: 0x00267305
		public static LocalizedString SmtpExternalServerSettings
		{
			get
			{
				return new LocalizedString("SmtpExternalServerSettings", "Ex22986E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170031DE RID: 12766
		// (get) Token: 0x06009A16 RID: 39446 RVA: 0x00269123 File Offset: 0x00267323
		public static LocalizedString CannotDisableAdfsEcpWithoutOwaFirst
		{
			get
			{
				return new LocalizedString("CannotDisableAdfsEcpWithoutOwaFirst", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170031DF RID: 12767
		// (get) Token: 0x06009A17 RID: 39447 RVA: 0x00269141 File Offset: 0x00267341
		public static LocalizedString SetupProgressStoppingIISAdminService
		{
			get
			{
				return new LocalizedString("SetupProgressStoppingIISAdminService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009A18 RID: 39448 RVA: 0x00269160 File Offset: 0x00267360
		public static LocalizedString DoNotMoveImmediately(string oab)
		{
			return new LocalizedString("DoNotMoveImmediately", "Ex6EB43E", false, true, Strings.ResourceManager, new object[]
			{
				oab
			});
		}

		// Token: 0x06009A19 RID: 39449 RVA: 0x00269190 File Offset: 0x00267390
		public static LocalizedString ErrorDistributionListDepartClosed(string id)
		{
			return new LocalizedString("ErrorDistributionListDepartClosed", "ExBB24B5", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x170031E0 RID: 12768
		// (get) Token: 0x06009A1A RID: 39450 RVA: 0x002691BF File Offset: 0x002673BF
		public static LocalizedString UnableToCommunicate
		{
			get
			{
				return new LocalizedString("UnableToCommunicate", "ExD5D911", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170031E1 RID: 12769
		// (get) Token: 0x06009A1B RID: 39451 RVA: 0x002691DD File Offset: 0x002673DD
		public static LocalizedString TenantConfigurationInfoIsNull
		{
			get
			{
				return new LocalizedString("TenantConfigurationInfoIsNull", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009A1C RID: 39452 RVA: 0x002691FC File Offset: 0x002673FC
		public static LocalizedString ConfirmationMessageEnableMailPublicFolder(string Identity)
		{
			return new LocalizedString("ConfirmationMessageEnableMailPublicFolder", "ExFCA70C", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x06009A1D RID: 39453 RVA: 0x0026922C File Offset: 0x0026742C
		public static LocalizedString OutlookProviderAlreadyExists(string Name)
		{
			return new LocalizedString("OutlookProviderAlreadyExists", "", false, false, Strings.ResourceManager, new object[]
			{
				Name
			});
		}

		// Token: 0x06009A1E RID: 39454 RVA: 0x0026925C File Offset: 0x0026745C
		public static LocalizedString InvalidMessageDataClassification(string dataClassification)
		{
			return new LocalizedString("InvalidMessageDataClassification", "", false, false, Strings.ResourceManager, new object[]
			{
				dataClassification
			});
		}

		// Token: 0x170031E2 RID: 12770
		// (get) Token: 0x06009A1F RID: 39455 RVA: 0x0026928B File Offset: 0x0026748B
		public static LocalizedString ComplianceAuditServiceDisplayName
		{
			get
			{
				return new LocalizedString("ComplianceAuditServiceDisplayName", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170031E3 RID: 12771
		// (get) Token: 0x06009A20 RID: 39456 RVA: 0x002692A9 File Offset: 0x002674A9
		public static LocalizedString UmLanguagePathLogFilePathNotSpecified
		{
			get
			{
				return new LocalizedString("UmLanguagePathLogFilePathNotSpecified", "Ex4CD8CD", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170031E4 RID: 12772
		// (get) Token: 0x06009A21 RID: 39457 RVA: 0x002692C7 File Offset: 0x002674C7
		public static LocalizedString StartAfterOrCompleteAfterCannotBeSetForOfflineMoves
		{
			get
			{
				return new LocalizedString("StartAfterOrCompleteAfterCannotBeSetForOfflineMoves", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009A22 RID: 39458 RVA: 0x002692E8 File Offset: 0x002674E8
		public static LocalizedString LogRunningCommand(string processName, string args)
		{
			return new LocalizedString("LogRunningCommand", "ExEFD9C7", false, true, Strings.ResourceManager, new object[]
			{
				processName,
				args
			});
		}

		// Token: 0x06009A23 RID: 39459 RVA: 0x0026931C File Offset: 0x0026751C
		public static LocalizedString DagTaskRevertingFsw(string fswName)
		{
			return new LocalizedString("DagTaskRevertingFsw", "", false, false, Strings.ResourceManager, new object[]
			{
				fswName
			});
		}

		// Token: 0x06009A24 RID: 39460 RVA: 0x0026934C File Offset: 0x0026754C
		public static LocalizedString CustomizedDsnLanguageNotAvailable(string status, string host)
		{
			return new LocalizedString("CustomizedDsnLanguageNotAvailable", "Ex5C0B97", false, true, Strings.ResourceManager, new object[]
			{
				status,
				host
			});
		}

		// Token: 0x06009A25 RID: 39461 RVA: 0x00269380 File Offset: 0x00267580
		public static LocalizedString ConfirmationMessageSetOutlookProvider(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetOutlookProvider", "ExA5ACE9", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x170031E5 RID: 12773
		// (get) Token: 0x06009A26 RID: 39462 RVA: 0x002693AF File Offset: 0x002675AF
		public static LocalizedString ReplicationCheckBlankMessage
		{
			get
			{
				return new LocalizedString("ReplicationCheckBlankMessage", "ExC6EFB9", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009A27 RID: 39463 RVA: 0x002693D0 File Offset: 0x002675D0
		public static LocalizedString NodeEvictedAlready(string nodeName, string dagName)
		{
			return new LocalizedString("NodeEvictedAlready", "Ex4C94FE", false, true, Strings.ResourceManager, new object[]
			{
				nodeName,
				dagName
			});
		}

		// Token: 0x170031E6 RID: 12774
		// (get) Token: 0x06009A28 RID: 39464 RVA: 0x00269403 File Offset: 0x00267603
		public static LocalizedString AdminAuditLogSearchFailed
		{
			get
			{
				return new LocalizedString("AdminAuditLogSearchFailed", "Ex14B396", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009A29 RID: 39465 RVA: 0x00269424 File Offset: 0x00267624
		public static LocalizedString CouldNotCreateMsoSyncService(string reason)
		{
			return new LocalizedString("CouldNotCreateMsoSyncService", "", false, false, Strings.ResourceManager, new object[]
			{
				reason
			});
		}

		// Token: 0x170031E7 RID: 12775
		// (get) Token: 0x06009A2A RID: 39466 RVA: 0x00269453 File Offset: 0x00267653
		public static LocalizedString MigrationCompleteAfterChangedToEarlierTime
		{
			get
			{
				return new LocalizedString("MigrationCompleteAfterChangedToEarlierTime", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170031E8 RID: 12776
		// (get) Token: 0x06009A2B RID: 39467 RVA: 0x00269471 File Offset: 0x00267671
		public static LocalizedString ErrorCannotMoveHalfMailboxBetweenTwoNonDatacenterForests
		{
			get
			{
				return new LocalizedString("ErrorCannotMoveHalfMailboxBetweenTwoNonDatacenterForests", "ExA3FD83", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009A2C RID: 39468 RVA: 0x00269490 File Offset: 0x00267690
		public static LocalizedString MapiTransactionFailedSummary(string transactionTarget, string errorMsg)
		{
			return new LocalizedString("MapiTransactionFailedSummary", "Ex02AF0E", false, true, Strings.ResourceManager, new object[]
			{
				transactionTarget,
				errorMsg
			});
		}

		// Token: 0x170031E9 RID: 12777
		// (get) Token: 0x06009A2D RID: 39469 RVA: 0x002694C3 File Offset: 0x002676C3
		public static LocalizedString StartingToUpdateMFLFiles
		{
			get
			{
				return new LocalizedString("StartingToUpdateMFLFiles", "Ex778289", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009A2E RID: 39470 RVA: 0x002694E4 File Offset: 0x002676E4
		public static LocalizedString LogMigrationOutlookVersion(string value)
		{
			return new LocalizedString("LogMigrationOutlookVersion", "Ex8B7FCB", false, true, Strings.ResourceManager, new object[]
			{
				value
			});
		}

		// Token: 0x170031EA RID: 12778
		// (get) Token: 0x06009A2F RID: 39471 RVA: 0x00269513 File Offset: 0x00267713
		public static LocalizedString CannotSetEdgeTransportServerOnAd
		{
			get
			{
				return new LocalizedString("CannotSetEdgeTransportServerOnAd", "ExB296E1", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170031EB RID: 12779
		// (get) Token: 0x06009A30 RID: 39472 RVA: 0x00269531 File Offset: 0x00267731
		public static LocalizedString ApplicationUrisMissingOnReturnedInformation
		{
			get
			{
				return new LocalizedString("ApplicationUrisMissingOnReturnedInformation", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170031EC RID: 12780
		// (get) Token: 0x06009A31 RID: 39473 RVA: 0x0026954F File Offset: 0x0026774F
		public static LocalizedString DNSRoutingEnabledMustNotBeSpecified
		{
			get
			{
				return new LocalizedString("DNSRoutingEnabledMustNotBeSpecified", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009A32 RID: 39474 RVA: 0x00269570 File Offset: 0x00267770
		public static LocalizedString SuspendSgcUseState(string server, string serverVersion, string rpcSupportVersion)
		{
			return new LocalizedString("SuspendSgcUseState", "Ex852720", false, true, Strings.ResourceManager, new object[]
			{
				server,
				serverVersion,
				rpcSupportVersion
			});
		}

		// Token: 0x06009A33 RID: 39475 RVA: 0x002695A8 File Offset: 0x002677A8
		public static LocalizedString ErrorDataClassificationIsInUse(string identity, string rules)
		{
			return new LocalizedString("ErrorDataClassificationIsInUse", "", false, false, Strings.ResourceManager, new object[]
			{
				identity,
				rules
			});
		}

		// Token: 0x06009A34 RID: 39476 RVA: 0x002695DC File Offset: 0x002677DC
		public static LocalizedString ErrorRecipientViewRootDuplicatedUnderScope(string ou, string scope)
		{
			return new LocalizedString("ErrorRecipientViewRootDuplicatedUnderScope", "ExC1A708", false, true, Strings.ResourceManager, new object[]
			{
				ou,
				scope
			});
		}

		// Token: 0x170031ED RID: 12781
		// (get) Token: 0x06009A35 RID: 39477 RVA: 0x0026960F File Offset: 0x0026780F
		public static LocalizedString CannotLocateFedOrgId
		{
			get
			{
				return new LocalizedString("CannotLocateFedOrgId", "Ex7EC091", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170031EE RID: 12782
		// (get) Token: 0x06009A36 RID: 39478 RVA: 0x0026962D File Offset: 0x0026782D
		public static LocalizedString ErrorIncompleteSettings
		{
			get
			{
				return new LocalizedString("ErrorIncompleteSettings", "ExD88879", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009A37 RID: 39479 RVA: 0x0026964C File Offset: 0x0026784C
		public static LocalizedString RpcUnavailable(string server)
		{
			return new LocalizedString("RpcUnavailable", "ExADECA4", false, true, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		// Token: 0x06009A38 RID: 39480 RVA: 0x0026967C File Offset: 0x0026787C
		public static LocalizedString ConfirmationMessageSetMigrationBatch(string batchName)
		{
			return new LocalizedString("ConfirmationMessageSetMigrationBatch", "", false, false, Strings.ResourceManager, new object[]
			{
				batchName
			});
		}

		// Token: 0x06009A39 RID: 39481 RVA: 0x002696AC File Offset: 0x002678AC
		public static LocalizedString FormsAuthenticationIsEnabledUnknownErrorException(string metabasePath, int propertyID)
		{
			return new LocalizedString("FormsAuthenticationIsEnabledUnknownErrorException", "Ex8290B3", false, true, Strings.ResourceManager, new object[]
			{
				metabasePath,
				propertyID
			});
		}

		// Token: 0x170031EF RID: 12783
		// (get) Token: 0x06009A3A RID: 39482 RVA: 0x002696E4 File Offset: 0x002678E4
		public static LocalizedString ContinueOnRemoveSearchResults
		{
			get
			{
				return new LocalizedString("ContinueOnRemoveSearchResults", "Ex43099B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170031F0 RID: 12784
		// (get) Token: 0x06009A3B RID: 39483 RVA: 0x00269702 File Offset: 0x00267902
		public static LocalizedString PopImapLoggingOn
		{
			get
			{
				return new LocalizedString("PopImapLoggingOn", "ExCF8AFA", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009A3C RID: 39484 RVA: 0x00269720 File Offset: 0x00267920
		public static LocalizedString ErrorLinkedSidParameterNotAllowed(string parameter)
		{
			return new LocalizedString("ErrorLinkedSidParameterNotAllowed", "Ex738D14", false, true, Strings.ResourceManager, new object[]
			{
				parameter
			});
		}

		// Token: 0x06009A3D RID: 39485 RVA: 0x00269750 File Offset: 0x00267950
		public static LocalizedString ErrorRemoveNotDisconnectedStoreMailbox(string identity)
		{
			return new LocalizedString("ErrorRemoveNotDisconnectedStoreMailbox", "Ex7359EC", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x170031F1 RID: 12785
		// (get) Token: 0x06009A3E RID: 39486 RVA: 0x0026977F File Offset: 0x0026797F
		public static LocalizedString PopInternalServerSettings
		{
			get
			{
				return new LocalizedString("PopInternalServerSettings", "Ex16396A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009A3F RID: 39487 RVA: 0x002697A0 File Offset: 0x002679A0
		public static LocalizedString TSNotAMailboxServer(string serverName)
		{
			return new LocalizedString("TSNotAMailboxServer", "Ex44CE20", false, true, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		// Token: 0x06009A40 RID: 39488 RVA: 0x002697D0 File Offset: 0x002679D0
		public static LocalizedString ErrorMultipleSCTsLinked(string oldTenant)
		{
			return new LocalizedString("ErrorMultipleSCTsLinked", "", false, false, Strings.ResourceManager, new object[]
			{
				oldTenant
			});
		}

		// Token: 0x06009A41 RID: 39489 RVA: 0x00269800 File Offset: 0x00267A00
		public static LocalizedString InvalidVersion(string version, string format)
		{
			return new LocalizedString("InvalidVersion", "", false, false, Strings.ResourceManager, new object[]
			{
				version,
				format
			});
		}

		// Token: 0x170031F2 RID: 12786
		// (get) Token: 0x06009A42 RID: 39490 RVA: 0x00269833 File Offset: 0x00267A33
		public static LocalizedString ConfirmationMessageSetEdgeSyncSendConnectorAddressSpaceOrSmartHosts
		{
			get
			{
				return new LocalizedString("ConfirmationMessageSetEdgeSyncSendConnectorAddressSpaceOrSmartHosts", "ExC2829C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009A43 RID: 39491 RVA: 0x00269854 File Offset: 0x00267A54
		public static LocalizedString CasHealthAutodiscoverIncorrectResult(string xPath, string xmlResponse)
		{
			return new LocalizedString("CasHealthAutodiscoverIncorrectResult", "ExF3507E", false, true, Strings.ResourceManager, new object[]
			{
				xPath,
				xmlResponse
			});
		}

		// Token: 0x06009A44 RID: 39492 RVA: 0x00269888 File Offset: 0x00267A88
		public static LocalizedString ErrorCannotRemoveMailboxSearchWithMailboxOnHold(string name)
		{
			return new LocalizedString("ErrorCannotRemoveMailboxSearchWithMailboxOnHold", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x06009A45 RID: 39493 RVA: 0x002698B8 File Offset: 0x00267AB8
		public static LocalizedString TransportServerCmdletDeprecated(string oldCmdlet, string newCmdlet)
		{
			return new LocalizedString("TransportServerCmdletDeprecated", "", false, false, Strings.ResourceManager, new object[]
			{
				oldCmdlet,
				newCmdlet
			});
		}

		// Token: 0x170031F3 RID: 12787
		// (get) Token: 0x06009A46 RID: 39494 RVA: 0x002698EB File Offset: 0x00267AEB
		public static LocalizedString ReplayLagPlayDownReasonLagDisabled
		{
			get
			{
				return new LocalizedString("ReplayLagPlayDownReasonLagDisabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009A47 RID: 39495 RVA: 0x0026990C File Offset: 0x00267B0C
		public static LocalizedString CasHealthWebAppNoVirtualDirectories(LocalizedString applicationShortName, string hostName)
		{
			return new LocalizedString("CasHealthWebAppNoVirtualDirectories", "ExB6123C", false, true, Strings.ResourceManager, new object[]
			{
				applicationShortName,
				hostName
			});
		}

		// Token: 0x170031F4 RID: 12788
		// (get) Token: 0x06009A48 RID: 39496 RVA: 0x00269944 File Offset: 0x00267B44
		public static LocalizedString InstallCentralAdminDatabaseRoleDescription
		{
			get
			{
				return new LocalizedString("InstallCentralAdminDatabaseRoleDescription", "Ex4BEFCF", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009A49 RID: 39497 RVA: 0x00269964 File Offset: 0x00267B64
		public static LocalizedString ErrorInvalidOperationOnDefaultGAL(string idGal)
		{
			return new LocalizedString("ErrorInvalidOperationOnDefaultGAL", "ExF0F85D", false, true, Strings.ResourceManager, new object[]
			{
				idGal
			});
		}

		// Token: 0x06009A4A RID: 39498 RVA: 0x00269994 File Offset: 0x00267B94
		public static LocalizedString FederationCertificateExpired(string propertyName)
		{
			return new LocalizedString("FederationCertificateExpired", "Ex72B335", false, true, Strings.ResourceManager, new object[]
			{
				propertyName
			});
		}

		// Token: 0x06009A4B RID: 39499 RVA: 0x002699C4 File Offset: 0x00267BC4
		public static LocalizedString InvalidIPv4AddressesAreNotAllowedInGatewayIPAddressesId(string ip)
		{
			return new LocalizedString("InvalidIPv4AddressesAreNotAllowedInGatewayIPAddressesId", "", false, false, Strings.ResourceManager, new object[]
			{
				ip
			});
		}

		// Token: 0x06009A4C RID: 39500 RVA: 0x002699F4 File Offset: 0x00267BF4
		public static LocalizedString ConfirmationMessageSetMailuserWithWindowsLiveID(string Identity, string liveID)
		{
			return new LocalizedString("ConfirmationMessageSetMailuserWithWindowsLiveID", "Ex22DBE0", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				liveID
			});
		}

		// Token: 0x06009A4D RID: 39501 RVA: 0x00269A28 File Offset: 0x00267C28
		public static LocalizedString ConfirmationMessageDisableMailContact(string Identity)
		{
			return new LocalizedString("ConfirmationMessageDisableMailContact", "ExD94567", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x170031F5 RID: 12789
		// (get) Token: 0x06009A4E RID: 39502 RVA: 0x00269A57 File Offset: 0x00267C57
		public static LocalizedString OwaUrlNotMatchEcpWarning
		{
			get
			{
				return new LocalizedString("OwaUrlNotMatchEcpWarning", "Ex3CA8E5", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009A4F RID: 39503 RVA: 0x00269A78 File Offset: 0x00267C78
		public static LocalizedString ExRBACSaveAddRoleEntry(string entryName, string roleId, string error)
		{
			return new LocalizedString("ExRBACSaveAddRoleEntry", "Ex5DE8F8", false, true, Strings.ResourceManager, new object[]
			{
				entryName,
				roleId,
				error
			});
		}

		// Token: 0x170031F6 RID: 12790
		// (get) Token: 0x06009A50 RID: 39504 RVA: 0x00269AAF File Offset: 0x00267CAF
		public static LocalizedString ErrorPFDistributionNotSpecified
		{
			get
			{
				return new LocalizedString("ErrorPFDistributionNotSpecified", "Ex7D66C0", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009A51 RID: 39505 RVA: 0x00269AD0 File Offset: 0x00267CD0
		public static LocalizedString TenantNotificationTestConfirmationPrompt(string organizationId)
		{
			return new LocalizedString("TenantNotificationTestConfirmationPrompt", "", false, false, Strings.ResourceManager, new object[]
			{
				organizationId
			});
		}

		// Token: 0x170031F7 RID: 12791
		// (get) Token: 0x06009A52 RID: 39506 RVA: 0x00269AFF File Offset: 0x00267CFF
		public static LocalizedString VerboseResetPasswordOnNextLogon
		{
			get
			{
				return new LocalizedString("VerboseResetPasswordOnNextLogon", "Ex6F82EE", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170031F8 RID: 12792
		// (get) Token: 0x06009A53 RID: 39507 RVA: 0x00269B1D File Offset: 0x00267D1D
		public static LocalizedString ErrorAppPoolIdCannotBeEmpty
		{
			get
			{
				return new LocalizedString("ErrorAppPoolIdCannotBeEmpty", "ExAEFE25", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170031F9 RID: 12793
		// (get) Token: 0x06009A54 RID: 39508 RVA: 0x00269B3B File Offset: 0x00267D3B
		public static LocalizedString InformationSkippedOab
		{
			get
			{
				return new LocalizedString("InformationSkippedOab", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009A55 RID: 39509 RVA: 0x00269B5C File Offset: 0x00267D5C
		public static LocalizedString AmMoveRpcRequestedSourceServer(string sourceServer, string targetServer)
		{
			return new LocalizedString("AmMoveRpcRequestedSourceServer", "Ex4149D6", false, true, Strings.ResourceManager, new object[]
			{
				sourceServer,
				targetServer
			});
		}

		// Token: 0x06009A56 RID: 39510 RVA: 0x00269B90 File Offset: 0x00267D90
		public static LocalizedString ErrorFailedToSetMemberPassword(string memberName, string message)
		{
			return new LocalizedString("ErrorFailedToSetMemberPassword", "ExC0F9C1", false, true, Strings.ResourceManager, new object[]
			{
				memberName,
				message
			});
		}

		// Token: 0x170031FA RID: 12794
		// (get) Token: 0x06009A57 RID: 39511 RVA: 0x00269BC3 File Offset: 0x00267DC3
		public static LocalizedString NoRMSServersFoundException
		{
			get
			{
				return new LocalizedString("NoRMSServersFoundException", "Ex88EC75", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009A58 RID: 39512 RVA: 0x00269BE4 File Offset: 0x00267DE4
		public static LocalizedString ConfirmationMessageRemoveCompletedRequest(string indexEntry)
		{
			return new LocalizedString("ConfirmationMessageRemoveCompletedRequest", "Ex882806", false, true, Strings.ResourceManager, new object[]
			{
				indexEntry
			});
		}

		// Token: 0x170031FB RID: 12795
		// (get) Token: 0x06009A59 RID: 39513 RVA: 0x00269C13 File Offset: 0x00267E13
		public static LocalizedString CasHealthOwaNoExternalUrl
		{
			get
			{
				return new LocalizedString("CasHealthOwaNoExternalUrl", "Ex1E6E3C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009A5A RID: 39514 RVA: 0x00269C34 File Offset: 0x00267E34
		public static LocalizedString RunCmdletOnUser(string proxyAddress)
		{
			return new LocalizedString("RunCmdletOnUser", "", false, false, Strings.ResourceManager, new object[]
			{
				proxyAddress
			});
		}

		// Token: 0x170031FC RID: 12796
		// (get) Token: 0x06009A5B RID: 39515 RVA: 0x00269C63 File Offset: 0x00267E63
		public static LocalizedString ReplayLagStatusLabelPercentage
		{
			get
			{
				return new LocalizedString("ReplayLagStatusLabelPercentage", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170031FD RID: 12797
		// (get) Token: 0x06009A5C RID: 39516 RVA: 0x00269C81 File Offset: 0x00267E81
		public static LocalizedString ErrorCannotUpdateCertificateWhenFederationNotProvisioned
		{
			get
			{
				return new LocalizedString("ErrorCannotUpdateCertificateWhenFederationNotProvisioned", "Ex0552C9", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170031FE RID: 12798
		// (get) Token: 0x06009A5D RID: 39517 RVA: 0x00269C9F File Offset: 0x00267E9F
		public static LocalizedString WarningMultiSiteSourceServers
		{
			get
			{
				return new LocalizedString("WarningMultiSiteSourceServers", "Ex7F3C89", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170031FF RID: 12799
		// (get) Token: 0x06009A5E RID: 39518 RVA: 0x00269CBD File Offset: 0x00267EBD
		public static LocalizedString ErrorTeamMailboxSharePointUrl
		{
			get
			{
				return new LocalizedString("ErrorTeamMailboxSharePointUrl", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009A5F RID: 39519 RVA: 0x00269CDC File Offset: 0x00267EDC
		public static LocalizedString NoSmtpAddressForRecipientId(string recipId)
		{
			return new LocalizedString("NoSmtpAddressForRecipientId", "ExB76DC7", false, true, Strings.ResourceManager, new object[]
			{
				recipId
			});
		}

		// Token: 0x06009A60 RID: 39520 RVA: 0x00269D0C File Offset: 0x00267F0C
		public static LocalizedString ErrorLastPublicFolderDatabaseWithPreE12(string dbName)
		{
			return new LocalizedString("ErrorLastPublicFolderDatabaseWithPreE12", "ExB594DF", false, true, Strings.ResourceManager, new object[]
			{
				dbName
			});
		}

		// Token: 0x17003200 RID: 12800
		// (get) Token: 0x06009A61 RID: 39521 RVA: 0x00269D3B File Offset: 0x00267F3B
		public static LocalizedString AuthenticationMethodWindows
		{
			get
			{
				return new LocalizedString("AuthenticationMethodWindows", "Ex8E6C18", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003201 RID: 12801
		// (get) Token: 0x06009A62 RID: 39522 RVA: 0x00269D59 File Offset: 0x00267F59
		public static LocalizedString MountStatusMounting
		{
			get
			{
				return new LocalizedString("MountStatusMounting", "Ex2DEE5B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009A63 RID: 39523 RVA: 0x00269D78 File Offset: 0x00267F78
		public static LocalizedString CouldNotRemoveCompletedMoveRequest(string identity)
		{
			return new LocalizedString("CouldNotRemoveCompletedMoveRequest", "Ex733642", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x17003202 RID: 12802
		// (get) Token: 0x06009A64 RID: 39524 RVA: 0x00269DA7 File Offset: 0x00267FA7
		public static LocalizedString SetupProgressInstallDefaultAcceptedDomain
		{
			get
			{
				return new LocalizedString("SetupProgressInstallDefaultAcceptedDomain", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003203 RID: 12803
		// (get) Token: 0x06009A65 RID: 39525 RVA: 0x00269DC5 File Offset: 0x00267FC5
		public static LocalizedString ComplianceServiceDescription
		{
			get
			{
				return new LocalizedString("ComplianceServiceDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009A66 RID: 39526 RVA: 0x00269DE4 File Offset: 0x00267FE4
		public static LocalizedString VerboseMailboxDelegateNotExits(string delegateUser, string principalUser)
		{
			return new LocalizedString("VerboseMailboxDelegateNotExits", "Ex072897", false, true, Strings.ResourceManager, new object[]
			{
				delegateUser,
				principalUser
			});
		}

		// Token: 0x06009A67 RID: 39527 RVA: 0x00269E18 File Offset: 0x00268018
		public static LocalizedString ConfirmationMessageRemoveTransportRule(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveTransportRule", "Ex486813", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x06009A68 RID: 39528 RVA: 0x00269E48 File Offset: 0x00268048
		public static LocalizedString ErrorCouldNotAddCrossDomainGroupMember(string member, string group, string rootdomserver, string localdomserver, string error)
		{
			return new LocalizedString("ErrorCouldNotAddCrossDomainGroupMember", "Ex459EA3", false, true, Strings.ResourceManager, new object[]
			{
				member,
				group,
				rootdomserver,
				localdomserver,
				error
			});
		}

		// Token: 0x06009A69 RID: 39529 RVA: 0x00269E88 File Offset: 0x00268088
		public static LocalizedString ErrorFailedToValidateCertificate(string thumbprint)
		{
			return new LocalizedString("ErrorFailedToValidateCertificate", "", false, false, Strings.ResourceManager, new object[]
			{
				thumbprint
			});
		}

		// Token: 0x06009A6A RID: 39530 RVA: 0x00269EB8 File Offset: 0x002680B8
		public static LocalizedString ErrorWAAGNotExists(string dom)
		{
			return new LocalizedString("ErrorWAAGNotExists", "Ex2F917F", false, true, Strings.ResourceManager, new object[]
			{
				dom
			});
		}

		// Token: 0x06009A6B RID: 39531 RVA: 0x00269EE8 File Offset: 0x002680E8
		public static LocalizedString UserFederatedDomainDoesNotMatchAccountNamespace(string fedDomain, string accountNamespace)
		{
			return new LocalizedString("UserFederatedDomainDoesNotMatchAccountNamespace", "", false, false, Strings.ResourceManager, new object[]
			{
				fedDomain,
				accountNamespace
			});
		}

		// Token: 0x06009A6C RID: 39532 RVA: 0x00269F1C File Offset: 0x0026811C
		public static LocalizedString ErrorInvalidOperationOnContainer(string idContainer)
		{
			return new LocalizedString("ErrorInvalidOperationOnContainer", "Ex3DCF08", false, true, Strings.ResourceManager, new object[]
			{
				idContainer
			});
		}

		// Token: 0x17003204 RID: 12804
		// (get) Token: 0x06009A6D RID: 39533 RVA: 0x00269F4B File Offset: 0x0026814B
		public static LocalizedString ContentIndexingExSearchNotFound
		{
			get
			{
				return new LocalizedString("ContentIndexingExSearchNotFound", "ExEB6CF6", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009A6E RID: 39534 RVA: 0x00269F6C File Offset: 0x0026816C
		public static LocalizedString CasHealthOwaAuthFailDetails(string expectedAuthMode, string receivedAuthModes)
		{
			return new LocalizedString("CasHealthOwaAuthFailDetails", "ExED9D0D", false, true, Strings.ResourceManager, new object[]
			{
				expectedAuthMode,
				receivedAuthModes
			});
		}

		// Token: 0x17003205 RID: 12805
		// (get) Token: 0x06009A6F RID: 39535 RVA: 0x00269F9F File Offset: 0x0026819F
		public static LocalizedString CasHealthSyncFolderItemsScenarioDescription
		{
			get
			{
				return new LocalizedString("CasHealthSyncFolderItemsScenarioDescription", "ExFC047B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009A70 RID: 39536 RVA: 0x00269FC0 File Offset: 0x002681C0
		public static LocalizedString DagTaskServerWrongOsVersionException(string serverName)
		{
			return new LocalizedString("DagTaskServerWrongOsVersionException", "", false, false, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		// Token: 0x17003206 RID: 12806
		// (get) Token: 0x06009A71 RID: 39537 RVA: 0x00269FEF File Offset: 0x002681EF
		public static LocalizedString ChangeServiceConfigFailure
		{
			get
			{
				return new LocalizedString("ChangeServiceConfigFailure", "Ex3A7D2F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009A72 RID: 39538 RVA: 0x0026A010 File Offset: 0x00268210
		public static LocalizedString ErrorHydrationDisabled(string organization)
		{
			return new LocalizedString("ErrorHydrationDisabled", "", false, false, Strings.ResourceManager, new object[]
			{
				organization
			});
		}

		// Token: 0x17003207 RID: 12807
		// (get) Token: 0x06009A73 RID: 39539 RVA: 0x0026A03F File Offset: 0x0026823F
		public static LocalizedString ErrorDisableMailuserWithJournalArchive
		{
			get
			{
				return new LocalizedString("ErrorDisableMailuserWithJournalArchive", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009A74 RID: 39540 RVA: 0x0026A060 File Offset: 0x00268260
		public static LocalizedString VerboseVerifyingRootObject(string root)
		{
			return new LocalizedString("VerboseVerifyingRootObject", "ExF1C7E2", false, true, Strings.ResourceManager, new object[]
			{
				root
			});
		}

		// Token: 0x17003208 RID: 12808
		// (get) Token: 0x06009A75 RID: 39541 RVA: 0x0026A08F File Offset: 0x0026828F
		public static LocalizedString ErrorTooManyCertificates
		{
			get
			{
				return new LocalizedString("ErrorTooManyCertificates", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009A76 RID: 39542 RVA: 0x0026A0B0 File Offset: 0x002682B0
		public static LocalizedString GetFederationInformationTokenIssuerDoesntMatchAny(string externalDomain, string externalUris, string localUris)
		{
			return new LocalizedString("GetFederationInformationTokenIssuerDoesntMatchAny", "Ex1D2677", false, true, Strings.ResourceManager, new object[]
			{
				externalDomain,
				externalUris,
				localUris
			});
		}

		// Token: 0x17003209 RID: 12809
		// (get) Token: 0x06009A77 RID: 39543 RVA: 0x0026A0E7 File Offset: 0x002682E7
		public static LocalizedString SetupProgressStoppingTransportSyncManagerService
		{
			get
			{
				return new LocalizedString("SetupProgressStoppingTransportSyncManagerService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700320A RID: 12810
		// (get) Token: 0x06009A78 RID: 39544 RVA: 0x0026A105 File Offset: 0x00268305
		public static LocalizedString ConfirmationMessageSetSenderFilterConfig
		{
			get
			{
				return new LocalizedString("ConfirmationMessageSetSenderFilterConfig", "ExB8B78D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700320B RID: 12811
		// (get) Token: 0x06009A79 RID: 39545 RVA: 0x0026A123 File Offset: 0x00268323
		public static LocalizedString SetupProcessCreateDefaultSharingPolicy
		{
			get
			{
				return new LocalizedString("SetupProcessCreateDefaultSharingPolicy", "Ex45A72E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009A7A RID: 39546 RVA: 0x0026A144 File Offset: 0x00268344
		public static LocalizedString CasHealthDataValidationError(string additionalInformation)
		{
			return new LocalizedString("CasHealthDataValidationError", "Ex461646", false, true, Strings.ResourceManager, new object[]
			{
				additionalInformation
			});
		}

		// Token: 0x1700320C RID: 12812
		// (get) Token: 0x06009A7B RID: 39547 RVA: 0x0026A173 File Offset: 0x00268373
		public static LocalizedString ActiveDirectorySearchViaADDriverAgainstSpecificDCScenario
		{
			get
			{
				return new LocalizedString("ActiveDirectorySearchViaADDriverAgainstSpecificDCScenario", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009A7C RID: 39548 RVA: 0x0026A194 File Offset: 0x00268394
		public static LocalizedString FailedToDeletePublicFolderProxy(string id, string error)
		{
			return new LocalizedString("FailedToDeletePublicFolderProxy", "", false, false, Strings.ResourceManager, new object[]
			{
				id,
				error
			});
		}

		// Token: 0x1700320D RID: 12813
		// (get) Token: 0x06009A7D RID: 39549 RVA: 0x0026A1C7 File Offset: 0x002683C7
		public static LocalizedString CasHealthResult
		{
			get
			{
				return new LocalizedString("CasHealthResult", "ExC3BD0A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009A7E RID: 39550 RVA: 0x0026A1E8 File Offset: 0x002683E8
		public static LocalizedString ReportArchiveUpdated(string domainController)
		{
			return new LocalizedString("ReportArchiveUpdated", "Ex7EBBBB", false, true, Strings.ResourceManager, new object[]
			{
				domainController
			});
		}

		// Token: 0x06009A7F RID: 39551 RVA: 0x0026A218 File Offset: 0x00268418
		public static LocalizedString DlpPolicyNotSupportedCmdlet(string cmdlet)
		{
			return new LocalizedString("DlpPolicyNotSupportedCmdlet", "", false, false, Strings.ResourceManager, new object[]
			{
				cmdlet
			});
		}

		// Token: 0x06009A80 RID: 39552 RVA: 0x0026A248 File Offset: 0x00268448
		public static LocalizedString ErrorSetPublicFolderMailRecipientGuidLongTermIdNotMatch(string identity)
		{
			return new LocalizedString("ErrorSetPublicFolderMailRecipientGuidLongTermIdNotMatch", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x06009A81 RID: 39553 RVA: 0x0026A278 File Offset: 0x00268478
		public static LocalizedString MtrtMessageSpamNonProvisionedDomain(string scl)
		{
			return new LocalizedString("MtrtMessageSpamNonProvisionedDomain", "", false, false, Strings.ResourceManager, new object[]
			{
				scl
			});
		}

		// Token: 0x06009A82 RID: 39554 RVA: 0x0026A2A8 File Offset: 0x002684A8
		public static LocalizedString DagTaskCnoNotOnline(string cnoName)
		{
			return new LocalizedString("DagTaskCnoNotOnline", "", false, false, Strings.ResourceManager, new object[]
			{
				cnoName
			});
		}

		// Token: 0x06009A83 RID: 39555 RVA: 0x0026A2D8 File Offset: 0x002684D8
		public static LocalizedString ErrorSetScopeAddPermission(string id, string assignmentId)
		{
			return new LocalizedString("ErrorSetScopeAddPermission", "ExDFACF4", false, true, Strings.ResourceManager, new object[]
			{
				id,
				assignmentId
			});
		}

		// Token: 0x1700320E RID: 12814
		// (get) Token: 0x06009A84 RID: 39556 RVA: 0x0026A30B File Offset: 0x0026850B
		public static LocalizedString DRMNotAllowedForConsumerDialPlan
		{
			get
			{
				return new LocalizedString("DRMNotAllowedForConsumerDialPlan", "ExC7F2A3", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009A85 RID: 39557 RVA: 0x0026A32C File Offset: 0x0026852C
		public static LocalizedString PrintPatchOrderInfo(string patchpath, int order, uint status)
		{
			return new LocalizedString("PrintPatchOrderInfo", "Ex706FAF", false, true, Strings.ResourceManager, new object[]
			{
				patchpath,
				order,
				status
			});
		}

		// Token: 0x06009A86 RID: 39558 RVA: 0x0026A370 File Offset: 0x00268570
		public static LocalizedString ConfirmationMessageSetSystemMessage(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetSystemMessage", "ExC6171A", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x06009A87 RID: 39559 RVA: 0x0026A3A0 File Offset: 0x002685A0
		public static LocalizedString ErrorThrottlingPolicyNotUnique(string idStringValue)
		{
			return new LocalizedString("ErrorThrottlingPolicyNotUnique", "Ex40749E", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		// Token: 0x06009A88 RID: 39560 RVA: 0x0026A3D0 File Offset: 0x002685D0
		public static LocalizedString DisableWindowsLiveIdSpecifiedWithoutLiveID(string mailbox)
		{
			return new LocalizedString("DisableWindowsLiveIdSpecifiedWithoutLiveID", "ExE3E05C", false, true, Strings.ResourceManager, new object[]
			{
				mailbox
			});
		}

		// Token: 0x06009A89 RID: 39561 RVA: 0x0026A400 File Offset: 0x00268600
		public static LocalizedString FailedDocumentsNoResultsServer(string server)
		{
			return new LocalizedString("FailedDocumentsNoResultsServer", "", false, false, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		// Token: 0x06009A8A RID: 39562 RVA: 0x0026A430 File Offset: 0x00268630
		public static LocalizedString ErrorMoreThanOneMailboxPlanWithSKUCapability(string skuCapability)
		{
			return new LocalizedString("ErrorMoreThanOneMailboxPlanWithSKUCapability", "Ex2633C2", false, true, Strings.ResourceManager, new object[]
			{
				skuCapability
			});
		}

		// Token: 0x06009A8B RID: 39563 RVA: 0x0026A460 File Offset: 0x00268660
		public static LocalizedString SupportedToolsDataMultipleToolEntries(string toolName)
		{
			return new LocalizedString("SupportedToolsDataMultipleToolEntries", "Ex2D68FD", false, true, Strings.ResourceManager, new object[]
			{
				toolName
			});
		}

		// Token: 0x1700320F RID: 12815
		// (get) Token: 0x06009A8C RID: 39564 RVA: 0x0026A48F File Offset: 0x0026868F
		public static LocalizedString CafePrereqCheck
		{
			get
			{
				return new LocalizedString("CafePrereqCheck", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003210 RID: 12816
		// (get) Token: 0x06009A8D RID: 39565 RVA: 0x0026A4AD File Offset: 0x002686AD
		public static LocalizedString DatabaseSeedStatusLabelPercentage
		{
			get
			{
				return new LocalizedString("DatabaseSeedStatusLabelPercentage", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009A8E RID: 39566 RVA: 0x0026A4CC File Offset: 0x002686CC
		public static LocalizedString ErrorIncrementalSyncIntervalRange(int minDays, int maxDays)
		{
			return new LocalizedString("ErrorIncrementalSyncIntervalRange", "", false, false, Strings.ResourceManager, new object[]
			{
				minDays,
				maxDays
			});
		}

		// Token: 0x06009A8F RID: 39567 RVA: 0x0026A50C File Offset: 0x0026870C
		public static LocalizedString TopologyServiceNoServersReturned(string partitionFqdn)
		{
			return new LocalizedString("TopologyServiceNoServersReturned", "", false, false, Strings.ResourceManager, new object[]
			{
				partitionFqdn
			});
		}

		// Token: 0x06009A90 RID: 39568 RVA: 0x0026A53C File Offset: 0x0026873C
		public static LocalizedString AutoTaggingDisabled(string mailbox)
		{
			return new LocalizedString("AutoTaggingDisabled", "ExECA0B3", false, true, Strings.ResourceManager, new object[]
			{
				mailbox
			});
		}

		// Token: 0x17003211 RID: 12817
		// (get) Token: 0x06009A91 RID: 39569 RVA: 0x0026A56B File Offset: 0x0026876B
		public static LocalizedString CasHealthCreateItemScenarioDescription
		{
			get
			{
				return new LocalizedString("CasHealthCreateItemScenarioDescription", "Ex31B6EF", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009A92 RID: 39570 RVA: 0x0026A58C File Offset: 0x0026878C
		public static LocalizedString ErrorElcPolicyNotFound(string name, string globalCatlog)
		{
			return new LocalizedString("ErrorElcPolicyNotFound", "Ex68D9DB", false, true, Strings.ResourceManager, new object[]
			{
				name,
				globalCatlog
			});
		}

		// Token: 0x06009A93 RID: 39571 RVA: 0x0026A5C0 File Offset: 0x002687C0
		public static LocalizedString ConfirmationMessageSetMailbox(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetMailbox", "ExE2B11E", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x06009A94 RID: 39572 RVA: 0x0026A5F0 File Offset: 0x002687F0
		public static LocalizedString MobileDeviceLogPathInvalid(string path)
		{
			return new LocalizedString("MobileDeviceLogPathInvalid", "ExA6420F", false, true, Strings.ResourceManager, new object[]
			{
				path
			});
		}

		// Token: 0x06009A95 RID: 39573 RVA: 0x0026A620 File Offset: 0x00268820
		public static LocalizedString CasHealthWebAppTestStepStarted(string stepName)
		{
			return new LocalizedString("CasHealthWebAppTestStepStarted", "", false, false, Strings.ResourceManager, new object[]
			{
				stepName
			});
		}

		// Token: 0x17003212 RID: 12818
		// (get) Token: 0x06009A96 RID: 39574 RVA: 0x0026A64F File Offset: 0x0026884F
		public static LocalizedString SetupProgressInstallingDefaultTransportAgents
		{
			get
			{
				return new LocalizedString("SetupProgressInstallingDefaultTransportAgents", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009A97 RID: 39575 RVA: 0x0026A670 File Offset: 0x00268870
		public static LocalizedString DagFswNotInitializedException(string ex)
		{
			return new LocalizedString("DagFswNotInitializedException", "", false, false, Strings.ResourceManager, new object[]
			{
				ex
			});
		}

		// Token: 0x17003213 RID: 12819
		// (get) Token: 0x06009A98 RID: 39576 RVA: 0x0026A69F File Offset: 0x0026889F
		public static LocalizedString ErrorExpansionServerMustBeTiOrBhServer
		{
			get
			{
				return new LocalizedString("ErrorExpansionServerMustBeTiOrBhServer", "ExF7C066", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009A99 RID: 39577 RVA: 0x0026A6C0 File Offset: 0x002688C0
		public static LocalizedString AmMoveRpcRequestedAnyServerSourceServer(string sourceServer)
		{
			return new LocalizedString("AmMoveRpcRequestedAnyServerSourceServer", "ExCACB6E", false, true, Strings.ResourceManager, new object[]
			{
				sourceServer
			});
		}

		// Token: 0x06009A9A RID: 39578 RVA: 0x0026A6F0 File Offset: 0x002688F0
		public static LocalizedString UsingProbeIdentity(string probeIdentity)
		{
			return new LocalizedString("UsingProbeIdentity", "", false, false, Strings.ResourceManager, new object[]
			{
				probeIdentity
			});
		}

		// Token: 0x17003214 RID: 12820
		// (get) Token: 0x06009A9B RID: 39579 RVA: 0x0026A71F File Offset: 0x0026891F
		public static LocalizedString ErrorRoomMailboxPasswordCanOnlyBeUsedWithEnableRoomMailboxAccount
		{
			get
			{
				return new LocalizedString("ErrorRoomMailboxPasswordCanOnlyBeUsedWithEnableRoomMailboxAccount", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009A9C RID: 39580 RVA: 0x0026A740 File Offset: 0x00268940
		public static LocalizedString ConfirmationMessageNewThrottlingPolicy(string Name, string scope)
		{
			return new LocalizedString("ConfirmationMessageNewThrottlingPolicy", "Ex1EAC5A", false, true, Strings.ResourceManager, new object[]
			{
				Name,
				scope
			});
		}

		// Token: 0x17003215 RID: 12821
		// (get) Token: 0x06009A9D RID: 39581 RVA: 0x0026A773 File Offset: 0x00268973
		public static LocalizedString MailboxParameterMissingException
		{
			get
			{
				return new LocalizedString("MailboxParameterMissingException", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003216 RID: 12822
		// (get) Token: 0x06009A9E RID: 39582 RVA: 0x0026A791 File Offset: 0x00268991
		public static LocalizedString PromptToOverwriteExistingRuleCollection
		{
			get
			{
				return new LocalizedString("PromptToOverwriteExistingRuleCollection", "Ex6D0A34", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009A9F RID: 39583 RVA: 0x0026A7B0 File Offset: 0x002689B0
		public static LocalizedString ConfirmationMessageSetFederationTrust5(string Identity, string appUri)
		{
			return new LocalizedString("ConfirmationMessageSetFederationTrust5", "Ex798255", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				appUri
			});
		}

		// Token: 0x06009AA0 RID: 39584 RVA: 0x0026A7E4 File Offset: 0x002689E4
		public static LocalizedString ClassificationRuleCollectionInvalidCompressedData(string name)
		{
			return new LocalizedString("ClassificationRuleCollectionInvalidCompressedData", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x17003217 RID: 12823
		// (get) Token: 0x06009AA1 RID: 39585 RVA: 0x0026A813 File Offset: 0x00268A13
		public static LocalizedString AuthenticationMethodLiveIdFba
		{
			get
			{
				return new LocalizedString("AuthenticationMethodLiveIdFba", "Ex0FD6C7", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009AA2 RID: 39586 RVA: 0x0026A834 File Offset: 0x00268A34
		public static LocalizedString OutlookProbeIdentityNotFound(string probeIdentity)
		{
			return new LocalizedString("OutlookProbeIdentityNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				probeIdentity
			});
		}

		// Token: 0x06009AA3 RID: 39587 RVA: 0x0026A864 File Offset: 0x00268A64
		public static LocalizedString ErrorDefaultLocaleClassificationDoesNotExist(string msgcl)
		{
			return new LocalizedString("ErrorDefaultLocaleClassificationDoesNotExist", "Ex7E3C50", false, true, Strings.ResourceManager, new object[]
			{
				msgcl
			});
		}

		// Token: 0x06009AA4 RID: 39588 RVA: 0x0026A894 File Offset: 0x00268A94
		public static LocalizedString ConfirmationMessageDisableOutlookProtectionRule(string identity)
		{
			return new LocalizedString("ConfirmationMessageDisableOutlookProtectionRule", "ExF40E4A", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x06009AA5 RID: 39589 RVA: 0x0026A8C4 File Offset: 0x00268AC4
		public static LocalizedString ErrorRemoveMailboxPlanWithAssociatedRecipents(string id)
		{
			return new LocalizedString("ErrorRemoveMailboxPlanWithAssociatedRecipents", "ExE61E1D", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x17003218 RID: 12824
		// (get) Token: 0x06009AA6 RID: 39590 RVA: 0x0026A8F3 File Offset: 0x00268AF3
		public static LocalizedString ErrorIncorrectDefaultTag
		{
			get
			{
				return new LocalizedString("ErrorIncorrectDefaultTag", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009AA7 RID: 39591 RVA: 0x0026A914 File Offset: 0x00268B14
		public static LocalizedString ConfirmationMessageSetFrontendTransportServer(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetFrontendTransportServer", "", false, false, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x06009AA8 RID: 39592 RVA: 0x0026A944 File Offset: 0x00268B44
		public static LocalizedString GetQueueDigestQuotaExceeded(string server)
		{
			return new LocalizedString("GetQueueDigestQuotaExceeded", "", false, false, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		// Token: 0x06009AA9 RID: 39593 RVA: 0x0026A974 File Offset: 0x00268B74
		public static LocalizedString NeedManuallyRemoveEOA(string message)
		{
			return new LocalizedString("NeedManuallyRemoveEOA", "", false, false, Strings.ResourceManager, new object[]
			{
				message
			});
		}

		// Token: 0x17003219 RID: 12825
		// (get) Token: 0x06009AAA RID: 39594 RVA: 0x0026A9A3 File Offset: 0x00268BA3
		public static LocalizedString ErrorEnableRoomMailboxAccountCannotBeUsedWithLinkedRoomMailbox
		{
			get
			{
				return new LocalizedString("ErrorEnableRoomMailboxAccountCannotBeUsedWithLinkedRoomMailbox", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009AAB RID: 39595 RVA: 0x0026A9C4 File Offset: 0x00268BC4
		public static LocalizedString ErrorParametersThatMustBeDefinedIfNeitherTemplateNorTemplateDataAreDefined(string parameterList)
		{
			return new LocalizedString("ErrorParametersThatMustBeDefinedIfNeitherTemplateNorTemplateDataAreDefined", "", false, false, Strings.ResourceManager, new object[]
			{
				parameterList
			});
		}

		// Token: 0x06009AAC RID: 39596 RVA: 0x0026A9F4 File Offset: 0x00268BF4
		public static LocalizedString MigrationStartAfterIncorrectState(string state)
		{
			return new LocalizedString("MigrationStartAfterIncorrectState", "", false, false, Strings.ResourceManager, new object[]
			{
				state
			});
		}

		// Token: 0x06009AAD RID: 39597 RVA: 0x0026AA24 File Offset: 0x00268C24
		public static LocalizedString RemoveComplianceSearchConfirmation(string identity)
		{
			return new LocalizedString("RemoveComplianceSearchConfirmation", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x1700321A RID: 12826
		// (get) Token: 0x06009AAE RID: 39598 RVA: 0x0026AA53 File Offset: 0x00268C53
		public static LocalizedString MSARPSServiceDisplayName
		{
			get
			{
				return new LocalizedString("MSARPSServiceDisplayName", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009AAF RID: 39599 RVA: 0x0026AA74 File Offset: 0x00268C74
		public static LocalizedString SeederEndDbSeedRpcBegin(string taskName, string targetMachine, string dbName)
		{
			return new LocalizedString("SeederEndDbSeedRpcBegin", "ExB3BD82", false, true, Strings.ResourceManager, new object[]
			{
				taskName,
				targetMachine,
				dbName
			});
		}

		// Token: 0x06009AB0 RID: 39600 RVA: 0x0026AAAC File Offset: 0x00268CAC
		public static LocalizedString LocalFederationConfigurationError(string errorCode, string errorSubcode)
		{
			return new LocalizedString("LocalFederationConfigurationError", "", false, false, Strings.ResourceManager, new object[]
			{
				errorCode,
				errorSubcode
			});
		}

		// Token: 0x06009AB1 RID: 39601 RVA: 0x0026AAE0 File Offset: 0x00268CE0
		public static LocalizedString ExternalScopeInvalidInDc(string scope, string stringInOrganization, string notInOrganization)
		{
			return new LocalizedString("ExternalScopeInvalidInDc", "", false, false, Strings.ResourceManager, new object[]
			{
				scope,
				stringInOrganization,
				notInOrganization
			});
		}

		// Token: 0x06009AB2 RID: 39602 RVA: 0x0026AB18 File Offset: 0x00268D18
		public static LocalizedString ErrorApproversNotSet(string recipient)
		{
			return new LocalizedString("ErrorApproversNotSet", "Ex89C991", false, true, Strings.ResourceManager, new object[]
			{
				recipient
			});
		}

		// Token: 0x06009AB3 RID: 39603 RVA: 0x0026AB48 File Offset: 0x00268D48
		public static LocalizedString TestProtocolConnectivity(string protocol)
		{
			return new LocalizedString("TestProtocolConnectivity", "Ex781BB0", false, true, Strings.ResourceManager, new object[]
			{
				protocol
			});
		}

		// Token: 0x06009AB4 RID: 39604 RVA: 0x0026AB78 File Offset: 0x00268D78
		public static LocalizedString FailedToStopClusSvc(string serverName, string state)
		{
			return new LocalizedString("FailedToStopClusSvc", "", false, false, Strings.ResourceManager, new object[]
			{
				serverName,
				state
			});
		}

		// Token: 0x1700321B RID: 12827
		// (get) Token: 0x06009AB5 RID: 39605 RVA: 0x0026ABAB File Offset: 0x00268DAB
		public static LocalizedString NotifySenderActionIsBeingOverridded
		{
			get
			{
				return new LocalizedString("NotifySenderActionIsBeingOverridded", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009AB6 RID: 39606 RVA: 0x0026ABCC File Offset: 0x00268DCC
		public static LocalizedString MesoContainerNotFoundException(string domain)
		{
			return new LocalizedString("MesoContainerNotFoundException", "ExB09228", false, true, Strings.ResourceManager, new object[]
			{
				domain
			});
		}

		// Token: 0x06009AB7 RID: 39607 RVA: 0x0026ABFC File Offset: 0x00268DFC
		public static LocalizedString VerbosePropertyProblem(string propProblem)
		{
			return new LocalizedString("VerbosePropertyProblem", "", false, false, Strings.ResourceManager, new object[]
			{
				propProblem
			});
		}

		// Token: 0x06009AB8 RID: 39608 RVA: 0x0026AC2C File Offset: 0x00268E2C
		public static LocalizedString VerboseValidateScopeAgainstExistingAssignments(string id)
		{
			return new LocalizedString("VerboseValidateScopeAgainstExistingAssignments", "Ex9BD28B", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x06009AB9 RID: 39609 RVA: 0x0026AC5C File Offset: 0x00268E5C
		public static LocalizedString ErrorServicePlanInconsistent2(string servicePlan, string details)
		{
			return new LocalizedString("ErrorServicePlanInconsistent2", "ExD102F9", false, true, Strings.ResourceManager, new object[]
			{
				servicePlan,
				details
			});
		}

		// Token: 0x06009ABA RID: 39610 RVA: 0x0026AC90 File Offset: 0x00268E90
		public static LocalizedString RemovedDeviceFilter(string name)
		{
			return new LocalizedString("RemovedDeviceFilter", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x06009ABB RID: 39611 RVA: 0x0026ACC0 File Offset: 0x00268EC0
		public static LocalizedString ErrorOrganizationalUnitNotFound(string idStringValue)
		{
			return new LocalizedString("ErrorOrganizationalUnitNotFound", "Ex5305F7", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		// Token: 0x06009ABC RID: 39612 RVA: 0x0026ACF0 File Offset: 0x00268EF0
		public static LocalizedString GetMsoDiagnosticsLastCommittedCookieBeingUsed(DateTime? timestamp)
		{
			return new LocalizedString("GetMsoDiagnosticsLastCommittedCookieBeingUsed", "", false, false, Strings.ResourceManager, new object[]
			{
				timestamp
			});
		}

		// Token: 0x1700321C RID: 12828
		// (get) Token: 0x06009ABD RID: 39613 RVA: 0x0026AD24 File Offset: 0x00268F24
		public static LocalizedString EitherSenderOrRmsOnlineParametersMustBeSpecified
		{
			get
			{
				return new LocalizedString("EitherSenderOrRmsOnlineParametersMustBeSpecified", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009ABE RID: 39614 RVA: 0x0026AD44 File Offset: 0x00268F44
		public static LocalizedString ExceptionServiceDoesNotExist(string serviceName)
		{
			return new LocalizedString("ExceptionServiceDoesNotExist", "ExCD4DCA", false, true, Strings.ResourceManager, new object[]
			{
				serviceName
			});
		}

		// Token: 0x06009ABF RID: 39615 RVA: 0x0026AD74 File Offset: 0x00268F74
		public static LocalizedString ErrorInvalidSortProperty(string propertyName)
		{
			return new LocalizedString("ErrorInvalidSortProperty", "Ex7BDD19", false, true, Strings.ResourceManager, new object[]
			{
				propertyName
			});
		}

		// Token: 0x06009AC0 RID: 39616 RVA: 0x0026ADA4 File Offset: 0x00268FA4
		public static LocalizedString ErrorDagNotUnique(string identity)
		{
			return new LocalizedString("ErrorDagNotUnique", "ExD709BC", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x1700321D RID: 12829
		// (get) Token: 0x06009AC1 RID: 39617 RVA: 0x0026ADD3 File Offset: 0x00268FD3
		public static LocalizedString StoppingMomService
		{
			get
			{
				return new LocalizedString("StoppingMomService", "Ex2809F2", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700321E RID: 12830
		// (get) Token: 0x06009AC2 RID: 39618 RVA: 0x0026ADF1 File Offset: 0x00268FF1
		public static LocalizedString HighPriorityChecksWarning
		{
			get
			{
				return new LocalizedString("HighPriorityChecksWarning", "Ex96BE44", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009AC3 RID: 39619 RVA: 0x0026AE10 File Offset: 0x00269010
		public static LocalizedString RecoveryMailboxDatabaseNotMonitored(string databaseId)
		{
			return new LocalizedString("RecoveryMailboxDatabaseNotMonitored", "Ex6AF901", false, true, Strings.ResourceManager, new object[]
			{
				databaseId
			});
		}

		// Token: 0x1700321F RID: 12831
		// (get) Token: 0x06009AC4 RID: 39620 RVA: 0x0026AE3F File Offset: 0x0026903F
		public static LocalizedString SetupProgressStartingInformationStoreService
		{
			get
			{
				return new LocalizedString("SetupProgressStartingInformationStoreService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003220 RID: 12832
		// (get) Token: 0x06009AC5 RID: 39621 RVA: 0x0026AE5D File Offset: 0x0026905D
		public static LocalizedString OldRmsOnlineImportAfterRmsOnlineForwardSync
		{
			get
			{
				return new LocalizedString("OldRmsOnlineImportAfterRmsOnlineForwardSync", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009AC6 RID: 39622 RVA: 0x0026AE7C File Offset: 0x0026907C
		public static LocalizedString ErrorConnectorNotTransportRuleScoped(string connectorName)
		{
			return new LocalizedString("ErrorConnectorNotTransportRuleScoped", "", false, false, Strings.ResourceManager, new object[]
			{
				connectorName
			});
		}

		// Token: 0x06009AC7 RID: 39623 RVA: 0x0026AEAC File Offset: 0x002690AC
		public static LocalizedString ComplianceSearchIsInProgress(string name)
		{
			return new LocalizedString("ComplianceSearchIsInProgress", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x06009AC8 RID: 39624 RVA: 0x0026AEDC File Offset: 0x002690DC
		public static LocalizedString ErrorRemoveNewerObject(string identity, string version)
		{
			return new LocalizedString("ErrorRemoveNewerObject", "Ex2EE88A", false, true, Strings.ResourceManager, new object[]
			{
				identity,
				version
			});
		}

		// Token: 0x17003221 RID: 12833
		// (get) Token: 0x06009AC9 RID: 39625 RVA: 0x0026AF0F File Offset: 0x0026910F
		public static LocalizedString InvalidReportEndDate
		{
			get
			{
				return new LocalizedString("InvalidReportEndDate", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009ACA RID: 39626 RVA: 0x0026AF30 File Offset: 0x00269130
		public static LocalizedString InterceptorErrorModifyingNewerVersion(string version)
		{
			return new LocalizedString("InterceptorErrorModifyingNewerVersion", "", false, false, Strings.ResourceManager, new object[]
			{
				version
			});
		}

		// Token: 0x17003222 RID: 12834
		// (get) Token: 0x06009ACB RID: 39627 RVA: 0x0026AF5F File Offset: 0x0026915F
		public static LocalizedString DisasterRecoveryMonitoringRoleDescription
		{
			get
			{
				return new LocalizedString("DisasterRecoveryMonitoringRoleDescription", "Ex292379", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009ACC RID: 39628 RVA: 0x0026AF80 File Offset: 0x00269180
		public static LocalizedString ErrorFailedToRetrieveMailboxDatabase(string mailboxDatabase)
		{
			return new LocalizedString("ErrorFailedToRetrieveMailboxDatabase", "Ex84928A", false, true, Strings.ResourceManager, new object[]
			{
				mailboxDatabase
			});
		}

		// Token: 0x06009ACD RID: 39629 RVA: 0x0026AFB0 File Offset: 0x002691B0
		public static LocalizedString WarningForStillSuspended(string db, string serverName)
		{
			return new LocalizedString("WarningForStillSuspended", "Ex6F36D6", false, true, Strings.ResourceManager, new object[]
			{
				db,
				serverName
			});
		}

		// Token: 0x17003223 RID: 12835
		// (get) Token: 0x06009ACE RID: 39630 RVA: 0x0026AFE3 File Offset: 0x002691E3
		public static LocalizedString AllWebServicesTransactionsSucceeded
		{
			get
			{
				return new LocalizedString("AllWebServicesTransactionsSucceeded", "Ex1905A5", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003224 RID: 12836
		// (get) Token: 0x06009ACF RID: 39631 RVA: 0x0026B001 File Offset: 0x00269201
		public static LocalizedString ArchiveConnectivityResultUndefined
		{
			get
			{
				return new LocalizedString("ArchiveConnectivityResultUndefined", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009AD0 RID: 39632 RVA: 0x0026B020 File Offset: 0x00269220
		public static LocalizedString ValueTooLargeException(string key, int value)
		{
			return new LocalizedString("ValueTooLargeException", "Ex4C3949", false, true, Strings.ResourceManager, new object[]
			{
				key,
				value
			});
		}

		// Token: 0x17003225 RID: 12837
		// (get) Token: 0x06009AD1 RID: 39633 RVA: 0x0026B058 File Offset: 0x00269258
		public static LocalizedString Error_MissingSenderEmail
		{
			get
			{
				return new LocalizedString("Error_MissingSenderEmail", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003226 RID: 12838
		// (get) Token: 0x06009AD2 RID: 39634 RVA: 0x0026B076 File Offset: 0x00269276
		public static LocalizedString EdgeServerNotSubscribed
		{
			get
			{
				return new LocalizedString("EdgeServerNotSubscribed", "Ex356F34", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003227 RID: 12839
		// (get) Token: 0x06009AD3 RID: 39635 RVA: 0x0026B094 File Offset: 0x00269294
		public static LocalizedString DelegateRoleTypeOrgAdmin
		{
			get
			{
				return new LocalizedString("DelegateRoleTypeOrgAdmin", "Ex70BCD7", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003228 RID: 12840
		// (get) Token: 0x06009AD4 RID: 39636 RVA: 0x0026B0B2 File Offset: 0x002692B2
		public static LocalizedString InfoCheckingOrganizationContext
		{
			get
			{
				return new LocalizedString("InfoCheckingOrganizationContext", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009AD5 RID: 39637 RVA: 0x0026B0D0 File Offset: 0x002692D0
		public static LocalizedString VerboseValidatingAlternateServiceAccountCredential(string qualifiedUserName, DateTime whenAdded)
		{
			return new LocalizedString("VerboseValidatingAlternateServiceAccountCredential", "ExD2675D", false, true, Strings.ResourceManager, new object[]
			{
				qualifiedUserName,
				whenAdded
			});
		}

		// Token: 0x06009AD6 RID: 39638 RVA: 0x0026B108 File Offset: 0x00269308
		public static LocalizedString CasHealthPowerShellServiceNotRunning(string vDir, string service)
		{
			return new LocalizedString("CasHealthPowerShellServiceNotRunning", "Ex2045C3", false, true, Strings.ResourceManager, new object[]
			{
				vDir,
				service
			});
		}

		// Token: 0x06009AD7 RID: 39639 RVA: 0x0026B13C File Offset: 0x0026933C
		public static LocalizedString VerboseFixingRecipient(string id)
		{
			return new LocalizedString("VerboseFixingRecipient", "Ex1E81D0", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x17003229 RID: 12841
		// (get) Token: 0x06009AD8 RID: 39640 RVA: 0x0026B16B File Offset: 0x0026936B
		public static LocalizedString DagMgmtServiceDescription
		{
			get
			{
				return new LocalizedString("DagMgmtServiceDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700322A RID: 12842
		// (get) Token: 0x06009AD9 RID: 39641 RVA: 0x0026B189 File Offset: 0x00269389
		public static LocalizedString WarningRedirectToRecipientsNotSet
		{
			get
			{
				return new LocalizedString("WarningRedirectToRecipientsNotSet", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700322B RID: 12843
		// (get) Token: 0x06009ADA RID: 39642 RVA: 0x0026B1A7 File Offset: 0x002693A7
		public static LocalizedString IndexEntryIsMissingData
		{
			get
			{
				return new LocalizedString("IndexEntryIsMissingData", "Ex927946", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700322C RID: 12844
		// (get) Token: 0x06009ADB RID: 39643 RVA: 0x0026B1C5 File Offset: 0x002693C5
		public static LocalizedString SetupProgressCreateApprovalApplicationsContainer
		{
			get
			{
				return new LocalizedString("SetupProgressCreateApprovalApplicationsContainer", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009ADC RID: 39644 RVA: 0x0026B1E4 File Offset: 0x002693E4
		public static LocalizedString SearchSourceTargetTheSame(string sourceDisplayName)
		{
			return new LocalizedString("SearchSourceTargetTheSame", "", false, false, Strings.ResourceManager, new object[]
			{
				sourceDisplayName
			});
		}

		// Token: 0x06009ADD RID: 39645 RVA: 0x0026B214 File Offset: 0x00269414
		public static LocalizedString ErrorInvalidModerator(string moderator)
		{
			return new LocalizedString("ErrorInvalidModerator", "Ex6633BB", false, true, Strings.ResourceManager, new object[]
			{
				moderator
			});
		}

		// Token: 0x06009ADE RID: 39646 RVA: 0x0026B244 File Offset: 0x00269444
		public static LocalizedString DiscoveryMailboxQuotaLimitExceeded(string quotaName, string limit)
		{
			return new LocalizedString("DiscoveryMailboxQuotaLimitExceeded", "", false, false, Strings.ResourceManager, new object[]
			{
				quotaName,
				limit
			});
		}

		// Token: 0x1700322D RID: 12845
		// (get) Token: 0x06009ADF RID: 39647 RVA: 0x0026B277 File Offset: 0x00269477
		public static LocalizedString PublicFolderMailboxNotFound
		{
			get
			{
				return new LocalizedString("PublicFolderMailboxNotFound", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700322E RID: 12846
		// (get) Token: 0x06009AE0 RID: 39648 RVA: 0x0026B295 File Offset: 0x00269495
		public static LocalizedString PopImapNoMessagesToDelete
		{
			get
			{
				return new LocalizedString("PopImapNoMessagesToDelete", "Ex46BCC2", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009AE1 RID: 39649 RVA: 0x0026B2B4 File Offset: 0x002694B4
		public static LocalizedString ConfirmationMessageSetManagementScope(string identity)
		{
			return new LocalizedString("ConfirmationMessageSetManagementScope", "ExE93148", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x06009AE2 RID: 39650 RVA: 0x0026B2E4 File Offset: 0x002694E4
		public static LocalizedString ConfirmationMessageSetUser(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetUser", "Ex8646BB", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x1700322F RID: 12847
		// (get) Token: 0x06009AE3 RID: 39651 RVA: 0x0026B313 File Offset: 0x00269513
		public static LocalizedString NoJournalingToPublicFolder
		{
			get
			{
				return new LocalizedString("NoJournalingToPublicFolder", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009AE4 RID: 39652 RVA: 0x0026B334 File Offset: 0x00269534
		public static LocalizedString SetComplianceSearchConfirmation(string identity)
		{
			return new LocalizedString("SetComplianceSearchConfirmation", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x17003230 RID: 12848
		// (get) Token: 0x06009AE5 RID: 39653 RVA: 0x0026B363 File Offset: 0x00269563
		public static LocalizedString ProgressStatusRemovingAddressListTree
		{
			get
			{
				return new LocalizedString("ProgressStatusRemovingAddressListTree", "Ex313DA6", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003231 RID: 12849
		// (get) Token: 0x06009AE6 RID: 39654 RVA: 0x0026B381 File Offset: 0x00269581
		public static LocalizedString ADAttributeCustomAttribute4
		{
			get
			{
				return new LocalizedString("ADAttributeCustomAttribute4", "ExA1FF1D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003232 RID: 12850
		// (get) Token: 0x06009AE7 RID: 39655 RVA: 0x0026B39F File Offset: 0x0026959F
		public static LocalizedString VerboseRestartDefaultWebSite
		{
			get
			{
				return new LocalizedString("VerboseRestartDefaultWebSite", "ExF076EA", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009AE8 RID: 39656 RVA: 0x0026B3C0 File Offset: 0x002695C0
		public static LocalizedString ServerListMustBeValid(string m)
		{
			return new LocalizedString("ServerListMustBeValid", "Ex74F1B5", false, true, Strings.ResourceManager, new object[]
			{
				m
			});
		}

		// Token: 0x17003233 RID: 12851
		// (get) Token: 0x06009AE9 RID: 39657 RVA: 0x0026B3EF File Offset: 0x002695EF
		public static LocalizedString ErrorInvalidParametersForOutlookAnywherePublicFolderMailboxMigration
		{
			get
			{
				return new LocalizedString("ErrorInvalidParametersForOutlookAnywherePublicFolderMailboxMigration", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003234 RID: 12852
		// (get) Token: 0x06009AEA RID: 39658 RVA: 0x0026B40D File Offset: 0x0026960D
		public static LocalizedString ErrorFailedToGetLicensingUri
		{
			get
			{
				return new LocalizedString("ErrorFailedToGetLicensingUri", "Ex9BBBEF", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003235 RID: 12853
		// (get) Token: 0x06009AEB RID: 39659 RVA: 0x0026B42B File Offset: 0x0026962B
		public static LocalizedString MicrosoftExchangeRecipientNotFoundOnGatewayServerRole
		{
			get
			{
				return new LocalizedString("MicrosoftExchangeRecipientNotFoundOnGatewayServerRole", "Ex654BCF", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003236 RID: 12854
		// (get) Token: 0x06009AEC RID: 39660 RVA: 0x0026B449 File Offset: 0x00269649
		public static LocalizedString SetupProgressContactCountQuota
		{
			get
			{
				return new LocalizedString("SetupProgressContactCountQuota", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009AED RID: 39661 RVA: 0x0026B468 File Offset: 0x00269668
		public static LocalizedString ErrorSetMailPublicFolderEntryIdNotExist(string entryId)
		{
			return new LocalizedString("ErrorSetMailPublicFolderEntryIdNotExist", "", false, false, Strings.ResourceManager, new object[]
			{
				entryId
			});
		}

		// Token: 0x06009AEE RID: 39662 RVA: 0x0026B498 File Offset: 0x00269698
		public static LocalizedString InvalidIdentityException(string smtpAddress)
		{
			return new LocalizedString("InvalidIdentityException", "ExB7CDD6", false, true, Strings.ResourceManager, new object[]
			{
				smtpAddress
			});
		}

		// Token: 0x06009AEF RID: 39663 RVA: 0x0026B4C8 File Offset: 0x002696C8
		public static LocalizedString ConfirmationMessageSetPublicFolderIdentity(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetPublicFolderIdentity", "Ex811855", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x06009AF0 RID: 39664 RVA: 0x0026B4F8 File Offset: 0x002696F8
		public static LocalizedString RecipientTypeNotValid(string user)
		{
			return new LocalizedString("RecipientTypeNotValid", "Ex92B0D4", false, true, Strings.ResourceManager, new object[]
			{
				user
			});
		}

		// Token: 0x06009AF1 RID: 39665 RVA: 0x0026B528 File Offset: 0x00269728
		public static LocalizedString WarningChangingUserSuppliedName(string givenIn, string newValue)
		{
			return new LocalizedString("WarningChangingUserSuppliedName", "Ex1A6023", false, true, Strings.ResourceManager, new object[]
			{
				givenIn,
				newValue
			});
		}

		// Token: 0x06009AF2 RID: 39666 RVA: 0x0026B55C File Offset: 0x0026975C
		public static LocalizedString ErrorMovingOabAlreadyThere(string oab, string server)
		{
			return new LocalizedString("ErrorMovingOabAlreadyThere", "ExD82A47", false, true, Strings.ResourceManager, new object[]
			{
				oab,
				server
			});
		}

		// Token: 0x06009AF3 RID: 39667 RVA: 0x0026B590 File Offset: 0x00269790
		public static LocalizedString ComplianceBindingInvalidRecipientType(string name)
		{
			return new LocalizedString("ComplianceBindingInvalidRecipientType", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x17003237 RID: 12855
		// (get) Token: 0x06009AF4 RID: 39668 RVA: 0x0026B5BF File Offset: 0x002697BF
		public static LocalizedString ErrorInstallationModeNotSupported
		{
			get
			{
				return new LocalizedString("ErrorInstallationModeNotSupported", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003238 RID: 12856
		// (get) Token: 0x06009AF5 RID: 39669 RVA: 0x0026B5DD File Offset: 0x002697DD
		public static LocalizedString NoSuchRequestInSpecifiedIndex
		{
			get
			{
				return new LocalizedString("NoSuchRequestInSpecifiedIndex", "Ex096706", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009AF6 RID: 39670 RVA: 0x0026B5FC File Offset: 0x002697FC
		public static LocalizedString VerboseDeprecatingRoleBecauseNoEntriesLeft(string id)
		{
			return new LocalizedString("VerboseDeprecatingRoleBecauseNoEntriesLeft", "Ex63D401", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x17003239 RID: 12857
		// (get) Token: 0x06009AF7 RID: 39671 RVA: 0x0026B62B File Offset: 0x0026982B
		public static LocalizedString MigrationAutoStopAlreadySet
		{
			get
			{
				return new LocalizedString("MigrationAutoStopAlreadySet", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700323A RID: 12858
		// (get) Token: 0x06009AF8 RID: 39672 RVA: 0x0026B649 File Offset: 0x00269849
		public static LocalizedString UseDagDefaultOnOffOff
		{
			get
			{
				return new LocalizedString("UseDagDefaultOnOffOff", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700323B RID: 12859
		// (get) Token: 0x06009AF9 RID: 39673 RVA: 0x0026B667 File Offset: 0x00269867
		public static LocalizedString ServerUnavailableException
		{
			get
			{
				return new LocalizedString("ServerUnavailableException", "Ex758F1C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009AFA RID: 39674 RVA: 0x0026B688 File Offset: 0x00269888
		public static LocalizedString ConfirmationMessageStartProvisioningRequest(string fileName)
		{
			return new LocalizedString("ConfirmationMessageStartProvisioningRequest", "Ex0F54D3", false, true, Strings.ResourceManager, new object[]
			{
				fileName
			});
		}

		// Token: 0x1700323C RID: 12860
		// (get) Token: 0x06009AFB RID: 39675 RVA: 0x0026B6B7 File Offset: 0x002698B7
		public static LocalizedString ClientAccessOwaComponentDescription
		{
			get
			{
				return new LocalizedString("ClientAccessOwaComponentDescription", "ExB1124F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700323D RID: 12861
		// (get) Token: 0x06009AFC RID: 39676 RVA: 0x0026B6D5 File Offset: 0x002698D5
		public static LocalizedString SetupProgressCreateUceContentFilterObject
		{
			get
			{
				return new LocalizedString("SetupProgressCreateUceContentFilterObject", "Ex40F772", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009AFD RID: 39677 RVA: 0x0026B6F4 File Offset: 0x002698F4
		public static LocalizedString VerboseRPCConnectionCreated(string server)
		{
			return new LocalizedString("VerboseRPCConnectionCreated", "", false, false, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		// Token: 0x06009AFE RID: 39678 RVA: 0x0026B724 File Offset: 0x00269924
		public static LocalizedString VerboseAllPropertiesAreRead(string property)
		{
			return new LocalizedString("VerboseAllPropertiesAreRead", "", false, false, Strings.ResourceManager, new object[]
			{
				property
			});
		}

		// Token: 0x1700323E RID: 12862
		// (get) Token: 0x06009AFF RID: 39679 RVA: 0x0026B753 File Offset: 0x00269953
		public static LocalizedString ConversationsMailboxDisabled
		{
			get
			{
				return new LocalizedString("ConversationsMailboxDisabled", "ExCB26A1", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009B00 RID: 39680 RVA: 0x0026B774 File Offset: 0x00269974
		public static LocalizedString LiveIdAuthenticationFailed(string userType, string error)
		{
			return new LocalizedString("LiveIdAuthenticationFailed", "", false, false, Strings.ResourceManager, new object[]
			{
				userType,
				error
			});
		}

		// Token: 0x06009B01 RID: 39681 RVA: 0x0026B7A8 File Offset: 0x002699A8
		public static LocalizedString NoDomainsDefinedOnOrgRelationship(string orgRelationship)
		{
			return new LocalizedString("NoDomainsDefinedOnOrgRelationship", "", false, false, Strings.ResourceManager, new object[]
			{
				orgRelationship
			});
		}

		// Token: 0x1700323F RID: 12863
		// (get) Token: 0x06009B02 RID: 39682 RVA: 0x0026B7D7 File Offset: 0x002699D7
		public static LocalizedString SetupComponentUpdateResourcePropertySchema
		{
			get
			{
				return new LocalizedString("SetupComponentUpdateResourcePropertySchema", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003240 RID: 12864
		// (get) Token: 0x06009B03 RID: 39683 RVA: 0x0026B7F5 File Offset: 0x002699F5
		public static LocalizedString TransitionStateUnknown
		{
			get
			{
				return new LocalizedString("TransitionStateUnknown", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009B04 RID: 39684 RVA: 0x0026B814 File Offset: 0x00269A14
		public static LocalizedString CasActiveSyncServiceProblemMessage(int impactedUserCount)
		{
			return new LocalizedString("CasActiveSyncServiceProblemMessage", "Ex6BA9BC", false, true, Strings.ResourceManager, new object[]
			{
				impactedUserCount
			});
		}

		// Token: 0x06009B05 RID: 39685 RVA: 0x0026B848 File Offset: 0x00269A48
		public static LocalizedString ErrorTooManyJournalRules(int max)
		{
			return new LocalizedString("ErrorTooManyJournalRules", "", false, false, Strings.ResourceManager, new object[]
			{
				max
			});
		}

		// Token: 0x06009B06 RID: 39686 RVA: 0x0026B87C File Offset: 0x00269A7C
		public static LocalizedString ErrorInvalidFilterForAddressBook(string id, string input, string expected)
		{
			return new LocalizedString("ErrorInvalidFilterForAddressBook", "Ex0EB6C0", false, true, Strings.ResourceManager, new object[]
			{
				id,
				input,
				expected
			});
		}

		// Token: 0x17003241 RID: 12865
		// (get) Token: 0x06009B07 RID: 39687 RVA: 0x0026B8B3 File Offset: 0x00269AB3
		public static LocalizedString FileDataShouldNotBeSet
		{
			get
			{
				return new LocalizedString("FileDataShouldNotBeSet", "Ex46020F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003242 RID: 12866
		// (get) Token: 0x06009B08 RID: 39688 RVA: 0x0026B8D1 File Offset: 0x00269AD1
		public static LocalizedString ParameterErrorForDefaultUsage
		{
			get
			{
				return new LocalizedString("ParameterErrorForDefaultUsage", "Ex9461E4", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003243 RID: 12867
		// (get) Token: 0x06009B09 RID: 39689 RVA: 0x0026B8EF File Offset: 0x00269AEF
		public static LocalizedString SetupProgressStartingDagMgmtService
		{
			get
			{
				return new LocalizedString("SetupProgressStartingDagMgmtService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003244 RID: 12868
		// (get) Token: 0x06009B0A RID: 39690 RVA: 0x0026B90D File Offset: 0x00269B0D
		public static LocalizedString FinishingFileCopy
		{
			get
			{
				return new LocalizedString("FinishingFileCopy", "ExF15C3C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003245 RID: 12869
		// (get) Token: 0x06009B0B RID: 39691 RVA: 0x0026B92B File Offset: 0x00269B2B
		public static LocalizedString MtrtReportSeverityLevelHigh
		{
			get
			{
				return new LocalizedString("MtrtReportSeverityLevelHigh", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003246 RID: 12870
		// (get) Token: 0x06009B0C RID: 39692 RVA: 0x0026B949 File Offset: 0x00269B49
		public static LocalizedString ErrorPatternCannotContainGroupOrAssertionWithMultiMatchWildcard
		{
			get
			{
				return new LocalizedString("ErrorPatternCannotContainGroupOrAssertionWithMultiMatchWildcard", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009B0D RID: 39693 RVA: 0x0026B968 File Offset: 0x00269B68
		public static LocalizedString ErrorLiveIdAlreadyExists(string windowsLiveId)
		{
			return new LocalizedString("ErrorLiveIdAlreadyExists", "Ex100A6B", false, true, Strings.ResourceManager, new object[]
			{
				windowsLiveId
			});
		}

		// Token: 0x06009B0E RID: 39694 RVA: 0x0026B998 File Offset: 0x00269B98
		public static LocalizedString WillSaveResourcePropertySchemaValue(string fileName)
		{
			return new LocalizedString("WillSaveResourcePropertySchemaValue", "ExC218C0", false, true, Strings.ResourceManager, new object[]
			{
				fileName
			});
		}

		// Token: 0x17003247 RID: 12871
		// (get) Token: 0x06009B0F RID: 39695 RVA: 0x0026B9C7 File Offset: 0x00269BC7
		public static LocalizedString EnableConversationsTask
		{
			get
			{
				return new LocalizedString("EnableConversationsTask", "Ex88EDD1", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003248 RID: 12872
		// (get) Token: 0x06009B10 RID: 39696 RVA: 0x0026B9E5 File Offset: 0x00269BE5
		public static LocalizedString NoDeviceFilters
		{
			get
			{
				return new LocalizedString("NoDeviceFilters", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009B11 RID: 39697 RVA: 0x0026BA04 File Offset: 0x00269C04
		public static LocalizedString SiteRedirectionTemplateVerbose(string redirectionTemplate)
		{
			return new LocalizedString("SiteRedirectionTemplateVerbose", "Ex48F68C", false, true, Strings.ResourceManager, new object[]
			{
				redirectionTemplate
			});
		}

		// Token: 0x17003249 RID: 12873
		// (get) Token: 0x06009B12 RID: 39698 RVA: 0x0026BA33 File Offset: 0x00269C33
		public static LocalizedString ConfirmationMessageSearchMessageTracking
		{
			get
			{
				return new LocalizedString("ConfirmationMessageSearchMessageTracking", "ExAB9360", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009B13 RID: 39699 RVA: 0x0026BA54 File Offset: 0x00269C54
		public static LocalizedString ErrorRemoteArchiveNoStats(string user)
		{
			return new LocalizedString("ErrorRemoteArchiveNoStats", "Ex791990", false, true, Strings.ResourceManager, new object[]
			{
				user
			});
		}

		// Token: 0x1700324A RID: 12874
		// (get) Token: 0x06009B14 RID: 39700 RVA: 0x0026BA83 File Offset: 0x00269C83
		public static LocalizedString ConfirmationMessageTestSystemHealth
		{
			get
			{
				return new LocalizedString("ConfirmationMessageTestSystemHealth", "Ex9B7370", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009B15 RID: 39701 RVA: 0x0026BAA4 File Offset: 0x00269CA4
		public static LocalizedString MtrtMessageMalware(string name, string file)
		{
			return new LocalizedString("MtrtMessageMalware", "", false, false, Strings.ResourceManager, new object[]
			{
				name,
				file
			});
		}

		// Token: 0x1700324B RID: 12875
		// (get) Token: 0x06009B16 RID: 39702 RVA: 0x0026BAD7 File Offset: 0x00269CD7
		public static LocalizedString CopyStatusFailed
		{
			get
			{
				return new LocalizedString("CopyStatusFailed", "ExDE9EB2", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009B17 RID: 39703 RVA: 0x0026BAF8 File Offset: 0x00269CF8
		public static LocalizedString VerboseSettingPreferredServer(string prop, string server)
		{
			return new LocalizedString("VerboseSettingPreferredServer", "ExCBDFD1", false, true, Strings.ResourceManager, new object[]
			{
				prop,
				server
			});
		}

		// Token: 0x06009B18 RID: 39704 RVA: 0x0026BB2C File Offset: 0x00269D2C
		public static LocalizedString ConfirmationMessageTestMAPIConnectivityDatabase(string Database)
		{
			return new LocalizedString("ConfirmationMessageTestMAPIConnectivityDatabase", "Ex9462CA", false, true, Strings.ResourceManager, new object[]
			{
				Database
			});
		}

		// Token: 0x06009B19 RID: 39705 RVA: 0x0026BB5C File Offset: 0x00269D5C
		public static LocalizedString ConfigurationSynchronized(string objectType, string serverList)
		{
			return new LocalizedString("ConfigurationSynchronized", "Ex1248F5", false, true, Strings.ResourceManager, new object[]
			{
				objectType,
				serverList
			});
		}

		// Token: 0x06009B1A RID: 39706 RVA: 0x0026BB90 File Offset: 0x00269D90
		public static LocalizedString BadwordsLengthTooLongId(string prefix, int maxLength)
		{
			return new LocalizedString("BadwordsLengthTooLongId", "Ex594C9B", false, true, Strings.ResourceManager, new object[]
			{
				prefix,
				maxLength
			});
		}

		// Token: 0x1700324C RID: 12876
		// (get) Token: 0x06009B1B RID: 39707 RVA: 0x0026BBC8 File Offset: 0x00269DC8
		public static LocalizedString DlpPolicyStateDisplayName
		{
			get
			{
				return new LocalizedString("DlpPolicyStateDisplayName", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009B1C RID: 39708 RVA: 0x0026BBE8 File Offset: 0x00269DE8
		public static LocalizedString CasHealthTestUserNotAccessible(string userName)
		{
			return new LocalizedString("CasHealthTestUserNotAccessible", "Ex55EFE3", false, true, Strings.ResourceManager, new object[]
			{
				userName
			});
		}

		// Token: 0x1700324D RID: 12877
		// (get) Token: 0x06009B1D RID: 39709 RVA: 0x0026BC17 File Offset: 0x00269E17
		public static LocalizedString MailboxSearchDisabled
		{
			get
			{
				return new LocalizedString("MailboxSearchDisabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009B1E RID: 39710 RVA: 0x0026BC38 File Offset: 0x00269E38
		public static LocalizedString IPv6AddressesAreNotAllowedInInternalServerIPAddressesId(string ip)
		{
			return new LocalizedString("IPv6AddressesAreNotAllowedInInternalServerIPAddressesId", "ExD6211F", false, true, Strings.ResourceManager, new object[]
			{
				ip
			});
		}

		// Token: 0x06009B1F RID: 39711 RVA: 0x0026BC68 File Offset: 0x00269E68
		public static LocalizedString DagTaskSleepAfterNodeRemoval(int secSleepAfterClusterFormation, string dagName, string serverName)
		{
			return new LocalizedString("DagTaskSleepAfterNodeRemoval", "", false, false, Strings.ResourceManager, new object[]
			{
				secSleepAfterClusterFormation,
				dagName,
				serverName
			});
		}

		// Token: 0x06009B20 RID: 39712 RVA: 0x0026BCA4 File Offset: 0x00269EA4
		public static LocalizedString TestTeamMailboxSharepointCallUnderOauthSuccess(string url)
		{
			return new LocalizedString("TestTeamMailboxSharepointCallUnderOauthSuccess", "", false, false, Strings.ResourceManager, new object[]
			{
				url
			});
		}

		// Token: 0x06009B21 RID: 39713 RVA: 0x0026BCD4 File Offset: 0x00269ED4
		public static LocalizedString ErrorRemoveNonLinkededUser(string idRecipient)
		{
			return new LocalizedString("ErrorRemoveNonLinkededUser", "Ex7F7A1B", false, true, Strings.ResourceManager, new object[]
			{
				idRecipient
			});
		}

		// Token: 0x06009B22 RID: 39714 RVA: 0x0026BD04 File Offset: 0x00269F04
		public static LocalizedString ConfirmationMessageDisableConversations(string Identity)
		{
			return new LocalizedString("ConfirmationMessageDisableConversations", "Ex6A666D", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x06009B23 RID: 39715 RVA: 0x0026BD34 File Offset: 0x00269F34
		public static LocalizedString ConfirmationMessageSetOrganizationRelationship(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetOrganizationRelationship", "ExDC3EFA", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x06009B24 RID: 39716 RVA: 0x0026BD64 File Offset: 0x00269F64
		public static LocalizedString ComponentSection(string componentName)
		{
			return new LocalizedString("ComponentSection", "Ex63E6D2", false, true, Strings.ResourceManager, new object[]
			{
				componentName
			});
		}

		// Token: 0x06009B25 RID: 39717 RVA: 0x0026BD94 File Offset: 0x00269F94
		public static LocalizedString ExceptionRunProcessExitIgnored(int errorCode)
		{
			return new LocalizedString("ExceptionRunProcessExitIgnored", "Ex40F0EB", false, true, Strings.ResourceManager, new object[]
			{
				errorCode
			});
		}

		// Token: 0x1700324E RID: 12878
		// (get) Token: 0x06009B26 RID: 39718 RVA: 0x0026BDC8 File Offset: 0x00269FC8
		public static LocalizedString ErrorManagedByMustBeSpecifiedWIthOrganization
		{
			get
			{
				return new LocalizedString("ErrorManagedByMustBeSpecifiedWIthOrganization", "ExC6EA09", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009B27 RID: 39719 RVA: 0x0026BDE8 File Offset: 0x00269FE8
		public static LocalizedString CasHealthIncorrectHttpResponseCode(string domain, string userName, string errorString)
		{
			return new LocalizedString("CasHealthIncorrectHttpResponseCode", "ExAF79C5", false, true, Strings.ResourceManager, new object[]
			{
				domain,
				userName,
				errorString
			});
		}

		// Token: 0x1700324F RID: 12879
		// (get) Token: 0x06009B28 RID: 39720 RVA: 0x0026BE1F File Offset: 0x0026A01F
		public static LocalizedString LiveIdAuthenticationResultSuccess
		{
			get
			{
				return new LocalizedString("LiveIdAuthenticationResultSuccess", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003250 RID: 12880
		// (get) Token: 0x06009B29 RID: 39721 RVA: 0x0026BE3D File Offset: 0x0026A03D
		public static LocalizedString FinishedComponentTasks
		{
			get
			{
				return new LocalizedString("FinishedComponentTasks", "Ex2E47A0", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003251 RID: 12881
		// (get) Token: 0x06009B2A RID: 39722 RVA: 0x0026BE5B File Offset: 0x0026A05B
		public static LocalizedString MountStatusDismounting
		{
			get
			{
				return new LocalizedString("MountStatusDismounting", "Ex2349EE", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009B2B RID: 39723 RVA: 0x0026BE7C File Offset: 0x0026A07C
		public static LocalizedString AuditLogSearchInvalidSearchType(string type)
		{
			return new LocalizedString("AuditLogSearchInvalidSearchType", "", false, false, Strings.ResourceManager, new object[]
			{
				type
			});
		}

		// Token: 0x17003252 RID: 12882
		// (get) Token: 0x06009B2C RID: 39724 RVA: 0x0026BEAB File Offset: 0x0026A0AB
		public static LocalizedString UninstallPop3BeServiceTask
		{
			get
			{
				return new LocalizedString("UninstallPop3BeServiceTask", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003253 RID: 12883
		// (get) Token: 0x06009B2D RID: 39725 RVA: 0x0026BEC9 File Offset: 0x0026A0C9
		public static LocalizedString DisasterRecoveryFrontendTransportRoleDescription
		{
			get
			{
				return new LocalizedString("DisasterRecoveryFrontendTransportRoleDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009B2E RID: 39726 RVA: 0x0026BEE8 File Offset: 0x0026A0E8
		public static LocalizedString messagePassiveCopyUnexpectedSuccessException(string database)
		{
			return new LocalizedString("messagePassiveCopyUnexpectedSuccessException", "", false, false, Strings.ResourceManager, new object[]
			{
				database
			});
		}

		// Token: 0x06009B2F RID: 39727 RVA: 0x0026BF18 File Offset: 0x0026A118
		public static LocalizedString RegistryAccessSecurityExceptionDelete(string key)
		{
			return new LocalizedString("RegistryAccessSecurityExceptionDelete", "ExA350A1", false, true, Strings.ResourceManager, new object[]
			{
				key
			});
		}

		// Token: 0x17003254 RID: 12884
		// (get) Token: 0x06009B30 RID: 39728 RVA: 0x0026BF47 File Offset: 0x0026A147
		public static LocalizedString TeamMailboxSharePointUrlMissing
		{
			get
			{
				return new LocalizedString("TeamMailboxSharePointUrlMissing", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003255 RID: 12885
		// (get) Token: 0x06009B31 RID: 39729 RVA: 0x0026BF65 File Offset: 0x0026A165
		public static LocalizedString ConfirmationMessageTestEdgeSyncEhf
		{
			get
			{
				return new LocalizedString("ConfirmationMessageTestEdgeSyncEhf", "Ex38A866", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009B32 RID: 39730 RVA: 0x0026BF84 File Offset: 0x0026A184
		public static LocalizedString ErrorAddressBookMailboxPolicyNotFound(string idStringValue)
		{
			return new LocalizedString("ErrorAddressBookMailboxPolicyNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		// Token: 0x06009B33 RID: 39731 RVA: 0x0026BFB4 File Offset: 0x0026A1B4
		public static LocalizedString MissingMandatoryFieldException(string fieldName)
		{
			return new LocalizedString("MissingMandatoryFieldException", "Ex7E3680", false, true, Strings.ResourceManager, new object[]
			{
				fieldName
			});
		}

		// Token: 0x06009B34 RID: 39732 RVA: 0x0026BFE4 File Offset: 0x0026A1E4
		public static LocalizedString WarningEnableEnabledRoleAssignment(string id)
		{
			return new LocalizedString("WarningEnableEnabledRoleAssignment", "Ex33572C", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x06009B35 RID: 39733 RVA: 0x0026C014 File Offset: 0x0026A214
		public static LocalizedString VerboseCheckDatabaseStatus(string id)
		{
			return new LocalizedString("VerboseCheckDatabaseStatus", "Ex85C00A", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x06009B36 RID: 39734 RVA: 0x0026C044 File Offset: 0x0026A244
		public static LocalizedString NoLogsFound(string user, string protocol)
		{
			return new LocalizedString("NoLogsFound", "ExBAB676", false, true, Strings.ResourceManager, new object[]
			{
				user,
				protocol
			});
		}

		// Token: 0x06009B37 RID: 39735 RVA: 0x0026C078 File Offset: 0x0026A278
		public static LocalizedString CutoverMigrationNotAllowed(string tenantName)
		{
			return new LocalizedString("CutoverMigrationNotAllowed", "Ex366BF6", false, true, Strings.ResourceManager, new object[]
			{
				tenantName
			});
		}

		// Token: 0x17003256 RID: 12886
		// (get) Token: 0x06009B38 RID: 39736 RVA: 0x0026C0A7 File Offset: 0x0026A2A7
		public static LocalizedString PhotoMustNotBeBlank
		{
			get
			{
				return new LocalizedString("PhotoMustNotBeBlank", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009B39 RID: 39737 RVA: 0x0026C0C8 File Offset: 0x0026A2C8
		public static LocalizedString SupervisionListEntryAdded(string entry, string recipientType, string tag)
		{
			return new LocalizedString("SupervisionListEntryAdded", "Ex5B784D", false, true, Strings.ResourceManager, new object[]
			{
				entry,
				recipientType,
				tag
			});
		}

		// Token: 0x17003257 RID: 12887
		// (get) Token: 0x06009B3A RID: 39738 RVA: 0x0026C0FF File Offset: 0x0026A2FF
		public static LocalizedString PopExternalServerSettings
		{
			get
			{
				return new LocalizedString("PopExternalServerSettings", "ExDA5AE3", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009B3B RID: 39739 RVA: 0x0026C120 File Offset: 0x0026A320
		public static LocalizedString ErrorMaxMembershipLimit(string memberName)
		{
			return new LocalizedString("ErrorMaxMembershipLimit", "ExA8CC8A", false, true, Strings.ResourceManager, new object[]
			{
				memberName
			});
		}

		// Token: 0x06009B3C RID: 39740 RVA: 0x0026C150 File Offset: 0x0026A350
		public static LocalizedString ToplogyserviceTopologyVersion(string partitionFqdn, int version)
		{
			return new LocalizedString("ToplogyserviceTopologyVersion", "", false, false, Strings.ResourceManager, new object[]
			{
				partitionFqdn,
				version
			});
		}

		// Token: 0x06009B3D RID: 39741 RVA: 0x0026C188 File Offset: 0x0026A388
		public static LocalizedString TSResolutionFailed(string server)
		{
			return new LocalizedString("TSResolutionFailed", "Ex662E29", false, true, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		// Token: 0x06009B3E RID: 39742 RVA: 0x0026C1B8 File Offset: 0x0026A3B8
		public static LocalizedString ConfirmationMessageNewMailboxWithRemoteArchive(string Name, string ArchiveDomain)
		{
			return new LocalizedString("ConfirmationMessageNewMailboxWithRemoteArchive", "ExFC1758", false, true, Strings.ResourceManager, new object[]
			{
				Name,
				ArchiveDomain
			});
		}

		// Token: 0x06009B3F RID: 39743 RVA: 0x0026C1EC File Offset: 0x0026A3EC
		public static LocalizedString DkmProvisioningException(string containerName, Exception e)
		{
			return new LocalizedString("DkmProvisioningException", "", false, false, Strings.ResourceManager, new object[]
			{
				containerName,
				e
			});
		}

		// Token: 0x06009B40 RID: 39744 RVA: 0x0026C220 File Offset: 0x0026A420
		public static LocalizedString MigrationSkipStepNotSupported(string step)
		{
			return new LocalizedString("MigrationSkipStepNotSupported", "", false, false, Strings.ResourceManager, new object[]
			{
				step
			});
		}

		// Token: 0x06009B41 RID: 39745 RVA: 0x0026C250 File Offset: 0x0026A450
		public static LocalizedString ConfirmationMessageNewRemoteDomain(string Name, string DomainName)
		{
			return new LocalizedString("ConfirmationMessageNewRemoteDomain", "Ex82837E", false, true, Strings.ResourceManager, new object[]
			{
				Name,
				DomainName
			});
		}

		// Token: 0x06009B42 RID: 39746 RVA: 0x0026C284 File Offset: 0x0026A484
		public static LocalizedString ConfirmationMessageNewIntraOrganizationConnector(string Name, string Domain)
		{
			return new LocalizedString("ConfirmationMessageNewIntraOrganizationConnector", "", false, false, Strings.ResourceManager, new object[]
			{
				Name,
				Domain
			});
		}

		// Token: 0x17003258 RID: 12888
		// (get) Token: 0x06009B43 RID: 39747 RVA: 0x0026C2B7 File Offset: 0x0026A4B7
		public static LocalizedString ConfirmationRemoveAllSupervisionListEntries
		{
			get
			{
				return new LocalizedString("ConfirmationRemoveAllSupervisionListEntries", "Ex0924FD", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009B44 RID: 39748 RVA: 0x0026C2D8 File Offset: 0x0026A4D8
		public static LocalizedString TestSearchGetCatalogStatusError(string mdb)
		{
			return new LocalizedString("TestSearchGetCatalogStatusError", "", false, false, Strings.ResourceManager, new object[]
			{
				mdb
			});
		}

		// Token: 0x17003259 RID: 12889
		// (get) Token: 0x06009B45 RID: 39749 RVA: 0x0026C307 File Offset: 0x0026A507
		public static LocalizedString InvalidReportingPeriod
		{
			get
			{
				return new LocalizedString("InvalidReportingPeriod", "ExAEF1C0", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009B46 RID: 39750 RVA: 0x0026C328 File Offset: 0x0026A528
		public static LocalizedString ErrorDatabaseHasLocalReplicas(string database)
		{
			return new LocalizedString("ErrorDatabaseHasLocalReplicas", "ExF128F0", false, true, Strings.ResourceManager, new object[]
			{
				database
			});
		}

		// Token: 0x06009B47 RID: 39751 RVA: 0x0026C358 File Offset: 0x0026A558
		public static LocalizedString ConfirmationMessageNewCountryList(string name)
		{
			return new LocalizedString("ConfirmationMessageNewCountryList", "Ex397880", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x1700325A RID: 12890
		// (get) Token: 0x06009B48 RID: 39752 RVA: 0x0026C387 File Offset: 0x0026A587
		public static LocalizedString FfoWebServicePermissionsComponentDescription
		{
			get
			{
				return new LocalizedString("FfoWebServicePermissionsComponentDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700325B RID: 12891
		// (get) Token: 0x06009B49 RID: 39753 RVA: 0x0026C3A5 File Offset: 0x0026A5A5
		public static LocalizedString RepairUrgencyNormal
		{
			get
			{
				return new LocalizedString("RepairUrgencyNormal", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009B4A RID: 39754 RVA: 0x0026C3C4 File Offset: 0x0026A5C4
		public static LocalizedString VerboseWillStartOrganizationUpgrade(string org, int oldVersion, int newVersion)
		{
			return new LocalizedString("VerboseWillStartOrganizationUpgrade", "ExA5F883", false, true, Strings.ResourceManager, new object[]
			{
				org,
				oldVersion,
				newVersion
			});
		}

		// Token: 0x1700325C RID: 12892
		// (get) Token: 0x06009B4B RID: 39755 RVA: 0x0026C405 File Offset: 0x0026A605
		public static LocalizedString ErrorDefaultMalwareConfigCannotBeDeleted
		{
			get
			{
				return new LocalizedString("ErrorDefaultMalwareConfigCannotBeDeleted", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009B4C RID: 39756 RVA: 0x0026C424 File Offset: 0x0026A624
		public static LocalizedString ErrorTeamMailboxRemoveWhenActive(string tm)
		{
			return new LocalizedString("ErrorTeamMailboxRemoveWhenActive", "", false, false, Strings.ResourceManager, new object[]
			{
				tm
			});
		}

		// Token: 0x06009B4D RID: 39757 RVA: 0x0026C454 File Offset: 0x0026A654
		public static LocalizedString ErrorGetServerNameFromMailbox(string mailbox)
		{
			return new LocalizedString("ErrorGetServerNameFromMailbox", "Ex93433E", false, true, Strings.ResourceManager, new object[]
			{
				mailbox
			});
		}

		// Token: 0x1700325D RID: 12893
		// (get) Token: 0x06009B4E RID: 39758 RVA: 0x0026C483 File Offset: 0x0026A683
		public static LocalizedString InvalidAggregateBy
		{
			get
			{
				return new LocalizedString("InvalidAggregateBy", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009B4F RID: 39759 RVA: 0x0026C4A4 File Offset: 0x0026A6A4
		public static LocalizedString ConfirmationMessageDismountDatabase(string Identity)
		{
			return new LocalizedString("ConfirmationMessageDismountDatabase", "Ex0FCCFC", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x1700325E RID: 12894
		// (get) Token: 0x06009B50 RID: 39760 RVA: 0x0026C4D3 File Offset: 0x0026A6D3
		public static LocalizedString SetupProgressCreateRBACRoleAssignmentsContainer
		{
			get
			{
				return new LocalizedString("SetupProgressCreateRBACRoleAssignmentsContainer", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700325F RID: 12895
		// (get) Token: 0x06009B51 RID: 39761 RVA: 0x0026C4F1 File Offset: 0x0026A6F1
		public static LocalizedString AutoProvisionFailedException
		{
			get
			{
				return new LocalizedString("AutoProvisionFailedException", "Ex36BD44", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003260 RID: 12896
		// (get) Token: 0x06009B52 RID: 39762 RVA: 0x0026C50F File Offset: 0x0026A70F
		public static LocalizedString NeedToSpecifyServerObject
		{
			get
			{
				return new LocalizedString("NeedToSpecifyServerObject", "Ex65B966", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009B53 RID: 39763 RVA: 0x0026C530 File Offset: 0x0026A730
		public static LocalizedString InformationSqlConnection(string connectionString)
		{
			return new LocalizedString("InformationSqlConnection", "", false, false, Strings.ResourceManager, new object[]
			{
				connectionString
			});
		}

		// Token: 0x17003261 RID: 12897
		// (get) Token: 0x06009B54 RID: 39764 RVA: 0x0026C55F File Offset: 0x0026A75F
		public static LocalizedString HybridMailflowNotYetSet
		{
			get
			{
				return new LocalizedString("HybridMailflowNotYetSet", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009B55 RID: 39765 RVA: 0x0026C580 File Offset: 0x0026A780
		public static LocalizedString ErrorMailboxFolderNotFound(string id)
		{
			return new LocalizedString("ErrorMailboxFolderNotFound", "Ex41304D", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x17003262 RID: 12898
		// (get) Token: 0x06009B56 RID: 39766 RVA: 0x0026C5AF File Offset: 0x0026A7AF
		public static LocalizedString DegubEndConnectingToDomainServices
		{
			get
			{
				return new LocalizedString("DegubEndConnectingToDomainServices", "Ex052BE6", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009B57 RID: 39767 RVA: 0x0026C5D0 File Offset: 0x0026A7D0
		public static LocalizedString ConfirmationMessageNewWorkloadManagementPolicy(string Name)
		{
			return new LocalizedString("ConfirmationMessageNewWorkloadManagementPolicy", "", false, false, Strings.ResourceManager, new object[]
			{
				Name
			});
		}

		// Token: 0x06009B58 RID: 39768 RVA: 0x0026C600 File Offset: 0x0026A800
		public static LocalizedString ConfirmationMessageNewActiveSyncMailboxDefaultPolicy(string Name)
		{
			return new LocalizedString("ConfirmationMessageNewActiveSyncMailboxDefaultPolicy", "", false, false, Strings.ResourceManager, new object[]
			{
				Name
			});
		}

		// Token: 0x17003263 RID: 12899
		// (get) Token: 0x06009B59 RID: 39769 RVA: 0x0026C62F File Offset: 0x0026A82F
		public static LocalizedString CallingGetOrganizationRelationshipSettings
		{
			get
			{
				return new LocalizedString("CallingGetOrganizationRelationshipSettings", "Ex34FF42", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009B5A RID: 39770 RVA: 0x0026C650 File Offset: 0x0026A850
		public static LocalizedString ParsingFederationMetadata(string metadataXml)
		{
			return new LocalizedString("ParsingFederationMetadata", "Ex872A4B", false, true, Strings.ResourceManager, new object[]
			{
				metadataXml
			});
		}

		// Token: 0x17003264 RID: 12900
		// (get) Token: 0x06009B5B RID: 39771 RVA: 0x0026C67F File Offset: 0x0026A87F
		public static LocalizedString DagTaskValidatingParameters
		{
			get
			{
				return new LocalizedString("DagTaskValidatingParameters", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003265 RID: 12901
		// (get) Token: 0x06009B5C RID: 39772 RVA: 0x0026C69D File Offset: 0x0026A89D
		public static LocalizedString NewRuleSyncAcrossDifferentVersionsNeeded
		{
			get
			{
				return new LocalizedString("NewRuleSyncAcrossDifferentVersionsNeeded", "Ex97F98D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003266 RID: 12902
		// (get) Token: 0x06009B5D RID: 39773 RVA: 0x0026C6BB File Offset: 0x0026A8BB
		public static LocalizedString PopImapDeleteOldMsgs
		{
			get
			{
				return new LocalizedString("PopImapDeleteOldMsgs", "Ex9876AB", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009B5E RID: 39774 RVA: 0x0026C6DC File Offset: 0x0026A8DC
		public static LocalizedString FormsAuthenticationDeleteMarksIfUnusedPathNotFoundException(string metabasePath)
		{
			return new LocalizedString("FormsAuthenticationDeleteMarksIfUnusedPathNotFoundException", "Ex9373A5", false, true, Strings.ResourceManager, new object[]
			{
				metabasePath
			});
		}

		// Token: 0x06009B5F RID: 39775 RVA: 0x0026C70C File Offset: 0x0026A90C
		public static LocalizedString ComAdminComponentInstallFailedException(string component)
		{
			return new LocalizedString("ComAdminComponentInstallFailedException", "ExB2F4B4", false, true, Strings.ResourceManager, new object[]
			{
				component
			});
		}

		// Token: 0x17003267 RID: 12903
		// (get) Token: 0x06009B60 RID: 39776 RVA: 0x0026C73B File Offset: 0x0026A93B
		public static LocalizedString ReloadingRequest
		{
			get
			{
				return new LocalizedString("ReloadingRequest", "ExBF44B4", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009B61 RID: 39777 RVA: 0x0026C75C File Offset: 0x0026A95C
		public static LocalizedString ExceptionCannotGetServiceHandle(string servicename, Exception e)
		{
			return new LocalizedString("ExceptionCannotGetServiceHandle", "Ex56D287", false, true, Strings.ResourceManager, new object[]
			{
				servicename,
				e
			});
		}

		// Token: 0x06009B62 RID: 39778 RVA: 0x0026C790 File Offset: 0x0026A990
		public static LocalizedString ErrorRuleXmlTooBig(int currentSize, long maxSize)
		{
			return new LocalizedString("ErrorRuleXmlTooBig", "Ex6421F5", false, true, Strings.ResourceManager, new object[]
			{
				currentSize,
				maxSize
			});
		}

		// Token: 0x17003268 RID: 12904
		// (get) Token: 0x06009B63 RID: 39779 RVA: 0x0026C7CD File Offset: 0x0026A9CD
		public static LocalizedString RepairUrgencyCritical
		{
			get
			{
				return new LocalizedString("RepairUrgencyCritical", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009B64 RID: 39780 RVA: 0x0026C7EC File Offset: 0x0026A9EC
		public static LocalizedString ConfirmationMessageRemoveMobileSyncVirtualDirectory(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveMobileSyncVirtualDirectory", "Ex9CB8D8", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x17003269 RID: 12905
		// (get) Token: 0x06009B65 RID: 39781 RVA: 0x0026C81B File Offset: 0x0026AA1B
		public static LocalizedString UnpackingFiles
		{
			get
			{
				return new LocalizedString("UnpackingFiles", "Ex6C222C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009B66 RID: 39782 RVA: 0x0026C83C File Offset: 0x0026AA3C
		public static LocalizedString CopyDirectoriesException(string fromFolder, string toFolder, string error)
		{
			return new LocalizedString("CopyDirectoriesException", "Ex368F33", false, true, Strings.ResourceManager, new object[]
			{
				fromFolder,
				toFolder,
				error
			});
		}

		// Token: 0x1700326A RID: 12906
		// (get) Token: 0x06009B67 RID: 39783 RVA: 0x0026C873 File Offset: 0x0026AA73
		public static LocalizedString CentralAdminServiceDisplayName
		{
			get
			{
				return new LocalizedString("CentralAdminServiceDisplayName", "Ex299D6E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009B68 RID: 39784 RVA: 0x0026C894 File Offset: 0x0026AA94
		public static LocalizedString ErrorOrganizationNotFound(object organizationId)
		{
			return new LocalizedString("ErrorOrganizationNotFound", "ExC15948", false, true, Strings.ResourceManager, new object[]
			{
				organizationId
			});
		}

		// Token: 0x06009B69 RID: 39785 RVA: 0x0026C8C4 File Offset: 0x0026AAC4
		public static LocalizedString ErrorSpecifiedPropertyOfRecoveryMailboxDatabaseCannotChange(string propertyName)
		{
			return new LocalizedString("ErrorSpecifiedPropertyOfRecoveryMailboxDatabaseCannotChange", "Ex0A4692", false, true, Strings.ResourceManager, new object[]
			{
				propertyName
			});
		}

		// Token: 0x06009B6A RID: 39786 RVA: 0x0026C8F4 File Offset: 0x0026AAF4
		public static LocalizedString CasHealthCouldNotLogUserDataCenter(string testDomain, string scriptName, string errorString)
		{
			return new LocalizedString("CasHealthCouldNotLogUserDataCenter", "ExFB8F7C", false, true, Strings.ResourceManager, new object[]
			{
				testDomain,
				scriptName,
				errorString
			});
		}

		// Token: 0x1700326B RID: 12907
		// (get) Token: 0x06009B6B RID: 39787 RVA: 0x0026C92B File Offset: 0x0026AB2B
		public static LocalizedString WarnRpcHttpNegotiateCoexistence
		{
			get
			{
				return new LocalizedString("WarnRpcHttpNegotiateCoexistence", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009B6C RID: 39788 RVA: 0x0026C94C File Offset: 0x0026AB4C
		public static LocalizedString ConfirmationMessageSetOabVirtualDirectory(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetOabVirtualDirectory", "Ex82932E", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x06009B6D RID: 39789 RVA: 0x0026C97C File Offset: 0x0026AB7C
		public static LocalizedString ErrorObjectNotUnique(string name)
		{
			return new LocalizedString("ErrorObjectNotUnique", "Ex0D1AA8", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x06009B6E RID: 39790 RVA: 0x0026C9AC File Offset: 0x0026ABAC
		public static LocalizedString ConfirmationMessageAddIPAllowListEntryIPRange(string IPRange)
		{
			return new LocalizedString("ConfirmationMessageAddIPAllowListEntryIPRange", "ExDD2F87", false, true, Strings.ResourceManager, new object[]
			{
				IPRange
			});
		}

		// Token: 0x06009B6F RID: 39791 RVA: 0x0026C9DC File Offset: 0x0026ABDC
		public static LocalizedString ConfirmationMessageNewJournalrule(string Name, string JournalEmailAddress)
		{
			return new LocalizedString("ConfirmationMessageNewJournalrule", "ExD4C80B", false, true, Strings.ResourceManager, new object[]
			{
				Name,
				JournalEmailAddress
			});
		}

		// Token: 0x06009B70 RID: 39792 RVA: 0x0026CA10 File Offset: 0x0026AC10
		public static LocalizedString DomainIgnoredBecauseUnableToDiscover(string domain, string reason)
		{
			return new LocalizedString("DomainIgnoredBecauseUnableToDiscover", "ExAEF2FD", false, true, Strings.ResourceManager, new object[]
			{
				domain,
				reason
			});
		}

		// Token: 0x1700326C RID: 12908
		// (get) Token: 0x06009B71 RID: 39793 RVA: 0x0026CA43 File Offset: 0x0026AC43
		public static LocalizedString SetupProgressCreatingAdamInstance
		{
			get
			{
				return new LocalizedString("SetupProgressCreatingAdamInstance", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009B72 RID: 39794 RVA: 0x0026CA64 File Offset: 0x0026AC64
		public static LocalizedString CertificateRequestMissingGenerateRequest(string server)
		{
			return new LocalizedString("CertificateRequestMissingGenerateRequest", "", false, false, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		// Token: 0x1700326D RID: 12909
		// (get) Token: 0x06009B73 RID: 39795 RVA: 0x0026CA93 File Offset: 0x0026AC93
		public static LocalizedString ActiveSyncMetabaseProxyInstallFailure
		{
			get
			{
				return new LocalizedString("ActiveSyncMetabaseProxyInstallFailure", "Ex943B9C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700326E RID: 12910
		// (get) Token: 0x06009B74 RID: 39796 RVA: 0x0026CAB1 File Offset: 0x0026ACB1
		public static LocalizedString InvalidMessageDataClassificationEmptyName
		{
			get
			{
				return new LocalizedString("InvalidMessageDataClassificationEmptyName", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700326F RID: 12911
		// (get) Token: 0x06009B75 RID: 39797 RVA: 0x0026CACF File Offset: 0x0026ACCF
		public static LocalizedString ErrorFileHasNoTextContent
		{
			get
			{
				return new LocalizedString("ErrorFileHasNoTextContent", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009B76 RID: 39798 RVA: 0x0026CAF0 File Offset: 0x0026ACF0
		public static LocalizedString ConfirmationMessageNewOutlookProvider(string Name)
		{
			return new LocalizedString("ConfirmationMessageNewOutlookProvider", "Ex54EF7B", false, true, Strings.ResourceManager, new object[]
			{
				Name
			});
		}

		// Token: 0x17003270 RID: 12912
		// (get) Token: 0x06009B77 RID: 39799 RVA: 0x0026CB1F File Offset: 0x0026AD1F
		public static LocalizedString ErrorTaskRunningLocationHubOnly
		{
			get
			{
				return new LocalizedString("ErrorTaskRunningLocationHubOnly", "ExFD2FCA", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009B78 RID: 39800 RVA: 0x0026CB40 File Offset: 0x0026AD40
		public static LocalizedString ScomMayNotBeInstalled(string exception)
		{
			return new LocalizedString("ScomMayNotBeInstalled", "Ex114DAE", false, true, Strings.ResourceManager, new object[]
			{
				exception
			});
		}

		// Token: 0x06009B79 RID: 39801 RVA: 0x0026CB70 File Offset: 0x0026AD70
		public static LocalizedString VerboseRemovingManagementWebServiceVDir(string identity)
		{
			return new LocalizedString("VerboseRemovingManagementWebServiceVDir", "ExE08FD7", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x17003271 RID: 12913
		// (get) Token: 0x06009B7A RID: 39802 RVA: 0x0026CB9F File Offset: 0x0026AD9F
		public static LocalizedString ErrorInboxRuleDoesNotExist
		{
			get
			{
				return new LocalizedString("ErrorInboxRuleDoesNotExist", "Ex25F810", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003272 RID: 12914
		// (get) Token: 0x06009B7B RID: 39803 RVA: 0x0026CBBD File Offset: 0x0026ADBD
		public static LocalizedString CasHealthEasScenarioGetFolder
		{
			get
			{
				return new LocalizedString("CasHealthEasScenarioGetFolder", "Ex845464", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003273 RID: 12915
		// (get) Token: 0x06009B7C RID: 39804 RVA: 0x0026CBDB File Offset: 0x0026ADDB
		public static LocalizedString InstallUnifiedMessagingRoleDescription
		{
			get
			{
				return new LocalizedString("InstallUnifiedMessagingRoleDescription", "Ex10F705", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009B7D RID: 39805 RVA: 0x0026CBFC File Offset: 0x0026ADFC
		public static LocalizedString ErrorExchangeConfigurationContainerNotFound(string idStringValue)
		{
			return new LocalizedString("ErrorExchangeConfigurationContainerNotFound", "Ex300CD0", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		// Token: 0x17003274 RID: 12916
		// (get) Token: 0x06009B7E RID: 39806 RVA: 0x0026CC2B File Offset: 0x0026AE2B
		public static LocalizedString DagTaskFormedCluster
		{
			get
			{
				return new LocalizedString("DagTaskFormedCluster", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009B7F RID: 39807 RVA: 0x0026CC4C File Offset: 0x0026AE4C
		public static LocalizedString AddingUniqueComponent(string component)
		{
			return new LocalizedString("AddingUniqueComponent", "Ex05BBD4", false, true, Strings.ResourceManager, new object[]
			{
				component
			});
		}

		// Token: 0x17003275 RID: 12917
		// (get) Token: 0x06009B80 RID: 39808 RVA: 0x0026CC7B File Offset: 0x0026AE7B
		public static LocalizedString IisTasksApplicationRootValidationProperty
		{
			get
			{
				return new LocalizedString("IisTasksApplicationRootValidationProperty", "Ex899AA7", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003276 RID: 12918
		// (get) Token: 0x06009B81 RID: 39809 RVA: 0x0026CC99 File Offset: 0x0026AE99
		public static LocalizedString WillIgnoreNoncriticalErrors
		{
			get
			{
				return new LocalizedString("WillIgnoreNoncriticalErrors", "Ex6B47E2", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003277 RID: 12919
		// (get) Token: 0x06009B82 RID: 39810 RVA: 0x0026CCB7 File Offset: 0x0026AEB7
		public static LocalizedString ErrorRemoteTargetDatabaseMustBeSpecifiedForRemotePush
		{
			get
			{
				return new LocalizedString("ErrorRemoteTargetDatabaseMustBeSpecifiedForRemotePush", "ExBBBD4C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009B83 RID: 39811 RVA: 0x0026CCD8 File Offset: 0x0026AED8
		public static LocalizedString ErrorInvalidMailboxStatisticsFilter(string filter)
		{
			return new LocalizedString("ErrorInvalidMailboxStatisticsFilter", "", false, false, Strings.ResourceManager, new object[]
			{
				filter
			});
		}

		// Token: 0x17003278 RID: 12920
		// (get) Token: 0x06009B84 RID: 39812 RVA: 0x0026CD07 File Offset: 0x0026AF07
		public static LocalizedString ReplayLagPlayDownReasonLogsInRequiredRange
		{
			get
			{
				return new LocalizedString("ReplayLagPlayDownReasonLogsInRequiredRange", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003279 RID: 12921
		// (get) Token: 0x06009B85 RID: 39813 RVA: 0x0026CD25 File Offset: 0x0026AF25
		public static LocalizedString InstallMessageTracingClientServiceTask
		{
			get
			{
				return new LocalizedString("InstallMessageTracingClientServiceTask", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700327A RID: 12922
		// (get) Token: 0x06009B86 RID: 39814 RVA: 0x0026CD43 File Offset: 0x0026AF43
		public static LocalizedString FriendlyNameTooLong
		{
			get
			{
				return new LocalizedString("FriendlyNameTooLong", "Ex36B0B5", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009B87 RID: 39815 RVA: 0x0026CD64 File Offset: 0x0026AF64
		public static LocalizedString ErrorBPARoleNotFound(string role)
		{
			return new LocalizedString("ErrorBPARoleNotFound", "Ex766AE5", false, true, Strings.ResourceManager, new object[]
			{
				role
			});
		}

		// Token: 0x06009B88 RID: 39816 RVA: 0x0026CD94 File Offset: 0x0026AF94
		public static LocalizedString ConfirmationMessageRemoveSharingPolicy(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveSharingPolicy", "Ex0B7A54", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x06009B89 RID: 39817 RVA: 0x0026CDC4 File Offset: 0x0026AFC4
		public static LocalizedString DagTaskServerDifferentExchangeVersion(string dagName, string existingServer, object existingVersion, string serverName, object serverVersion)
		{
			return new LocalizedString("DagTaskServerDifferentExchangeVersion", "", false, false, Strings.ResourceManager, new object[]
			{
				dagName,
				existingServer,
				existingVersion,
				serverName,
				serverVersion
			});
		}

		// Token: 0x06009B8A RID: 39818 RVA: 0x0026CE04 File Offset: 0x0026B004
		public static LocalizedString TSMinServerVersion(string serverVersion)
		{
			return new LocalizedString("TSMinServerVersion", "ExCF022D", false, true, Strings.ResourceManager, new object[]
			{
				serverVersion
			});
		}

		// Token: 0x1700327B RID: 12923
		// (get) Token: 0x06009B8B RID: 39819 RVA: 0x0026CE33 File Offset: 0x0026B033
		public static LocalizedString ErrorPatternCannotContainSequentialIdenticalMultiMatchPatterns
		{
			get
			{
				return new LocalizedString("ErrorPatternCannotContainSequentialIdenticalMultiMatchPatterns", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009B8C RID: 39820 RVA: 0x0026CE54 File Offset: 0x0026B054
		public static LocalizedString VerboseDeleteMDB(string id)
		{
			return new LocalizedString("VerboseDeleteMDB", "Ex5B84DB", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x1700327C RID: 12924
		// (get) Token: 0x06009B8D RID: 39821 RVA: 0x0026CE83 File Offset: 0x0026B083
		public static LocalizedString ErrorConflictCountryOrRegion
		{
			get
			{
				return new LocalizedString("ErrorConflictCountryOrRegion", "Ex5F036A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009B8E RID: 39822 RVA: 0x0026CEA4 File Offset: 0x0026B0A4
		public static LocalizedString TaskCanOnlyRunOnDac(string dag)
		{
			return new LocalizedString("TaskCanOnlyRunOnDac", "", false, false, Strings.ResourceManager, new object[]
			{
				dag
			});
		}

		// Token: 0x1700327D RID: 12925
		// (get) Token: 0x06009B8F RID: 39823 RVA: 0x0026CED3 File Offset: 0x0026B0D3
		public static LocalizedString InvalidSenderAddress
		{
			get
			{
				return new LocalizedString("InvalidSenderAddress", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700327E RID: 12926
		// (get) Token: 0x06009B90 RID: 39824 RVA: 0x0026CEF1 File Offset: 0x0026B0F1
		public static LocalizedString PhoneNumberAllowedOnlyOnE164ConsumerDialplan
		{
			get
			{
				return new LocalizedString("PhoneNumberAllowedOnlyOnE164ConsumerDialplan", "Ex06DD90", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700327F RID: 12927
		// (get) Token: 0x06009B91 RID: 39825 RVA: 0x0026CF0F File Offset: 0x0026B10F
		public static LocalizedString ProgressDeletingSystemFiles
		{
			get
			{
				return new LocalizedString("ProgressDeletingSystemFiles", "Ex6B0753", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009B92 RID: 39826 RVA: 0x0026CF30 File Offset: 0x0026B130
		public static LocalizedString IgnoringExpiredCertificate(string certificateThumbprint, string source)
		{
			return new LocalizedString("IgnoringExpiredCertificate", "Ex9056CF", false, true, Strings.ResourceManager, new object[]
			{
				certificateThumbprint,
				source
			});
		}

		// Token: 0x06009B93 RID: 39827 RVA: 0x0026CF64 File Offset: 0x0026B164
		public static LocalizedString ExchangeRecipientNotFound(string syncobject)
		{
			return new LocalizedString("ExchangeRecipientNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				syncobject
			});
		}

		// Token: 0x06009B94 RID: 39828 RVA: 0x0026CF94 File Offset: 0x0026B194
		public static LocalizedString TlsSenderCertificateNameMatchesServiceProviderCertificateId(string certificate)
		{
			return new LocalizedString("TlsSenderCertificateNameMatchesServiceProviderCertificateId", "", false, false, Strings.ResourceManager, new object[]
			{
				certificate
			});
		}

		// Token: 0x17003280 RID: 12928
		// (get) Token: 0x06009B95 RID: 39829 RVA: 0x0026CFC3 File Offset: 0x0026B1C3
		public static LocalizedString ErrorMissingManagedFolder
		{
			get
			{
				return new LocalizedString("ErrorMissingManagedFolder", "Ex9A977F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003281 RID: 12929
		// (get) Token: 0x06009B96 RID: 39830 RVA: 0x0026CFE1 File Offset: 0x0026B1E1
		public static LocalizedString ConfirmationMessageExportDlpPolicyCollection
		{
			get
			{
				return new LocalizedString("ConfirmationMessageExportDlpPolicyCollection", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009B97 RID: 39831 RVA: 0x0026D000 File Offset: 0x0026B200
		public static LocalizedString ConfirmationMessageRemoveRetentionPolicyTag(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveRetentionPolicyTag", "Ex06F295", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x17003282 RID: 12930
		// (get) Token: 0x06009B98 RID: 39832 RVA: 0x0026D02F File Offset: 0x0026B22F
		public static LocalizedString InvalidQueryParameters
		{
			get
			{
				return new LocalizedString("InvalidQueryParameters", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009B99 RID: 39833 RVA: 0x0026D050 File Offset: 0x0026B250
		public static LocalizedString ErrorPreferredServerUnavailable(string param, string fqdn, string message)
		{
			return new LocalizedString("ErrorPreferredServerUnavailable", "ExDEC863", false, true, Strings.ResourceManager, new object[]
			{
				param,
				fqdn,
				message
			});
		}

		// Token: 0x17003283 RID: 12931
		// (get) Token: 0x06009B9A RID: 39834 RVA: 0x0026D087 File Offset: 0x0026B287
		public static LocalizedString MtrtMessageExpandDetailMessage
		{
			get
			{
				return new LocalizedString("MtrtMessageExpandDetailMessage", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003284 RID: 12932
		// (get) Token: 0x06009B9B RID: 39835 RVA: 0x0026D0A5 File Offset: 0x0026B2A5
		public static LocalizedString InfoRmsOnlinePrerequisitesChecked
		{
			get
			{
				return new LocalizedString("InfoRmsOnlinePrerequisitesChecked", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003285 RID: 12933
		// (get) Token: 0x06009B9C RID: 39836 RVA: 0x0026D0C3 File Offset: 0x0026B2C3
		public static LocalizedString SetupProgressCreateDefaultMessageClassificationsContainer
		{
			get
			{
				return new LocalizedString("SetupProgressCreateDefaultMessageClassificationsContainer", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009B9D RID: 39837 RVA: 0x0026D0E4 File Offset: 0x0026B2E4
		public static LocalizedString ErrorTrustedPublishingDomainNotFound(string idStringValue)
		{
			return new LocalizedString("ErrorTrustedPublishingDomainNotFound", "ExC7908D", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		// Token: 0x17003286 RID: 12934
		// (get) Token: 0x06009B9E RID: 39838 RVA: 0x0026D113 File Offset: 0x0026B313
		public static LocalizedString InfoGetTemplate
		{
			get
			{
				return new LocalizedString("InfoGetTemplate", "Ex7D42C6", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003287 RID: 12935
		// (get) Token: 0x06009B9F RID: 39839 RVA: 0x0026D131 File Offset: 0x0026B331
		public static LocalizedString DlpPolicyModeDisplayName
		{
			get
			{
				return new LocalizedString("DlpPolicyModeDisplayName", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009BA0 RID: 39840 RVA: 0x0026D150 File Offset: 0x0026B350
		public static LocalizedString ResettingPolicyIsNotSupported(string paramName)
		{
			return new LocalizedString("ResettingPolicyIsNotSupported", "", false, false, Strings.ResourceManager, new object[]
			{
				paramName
			});
		}

		// Token: 0x06009BA1 RID: 39841 RVA: 0x0026D180 File Offset: 0x0026B380
		public static LocalizedString ErrorFailedToQueryActiveServerForDatabase(string database, string gsfdError)
		{
			return new LocalizedString("ErrorFailedToQueryActiveServerForDatabase", "", false, false, Strings.ResourceManager, new object[]
			{
				database,
				gsfdError
			});
		}

		// Token: 0x17003288 RID: 12936
		// (get) Token: 0x06009BA2 RID: 39842 RVA: 0x0026D1B3 File Offset: 0x0026B3B3
		public static LocalizedString WarningXHeaderValueNotSet
		{
			get
			{
				return new LocalizedString("WarningXHeaderValueNotSet", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009BA3 RID: 39843 RVA: 0x0026D1D4 File Offset: 0x0026B3D4
		public static LocalizedString WarningDistributionListDepartApprovalRequired(string requesterId, string groupId, string messageId)
		{
			return new LocalizedString("WarningDistributionListDepartApprovalRequired", "ExC7DC43", false, true, Strings.ResourceManager, new object[]
			{
				requesterId,
				groupId,
				messageId
			});
		}

		// Token: 0x06009BA4 RID: 39844 RVA: 0x0026D20C File Offset: 0x0026B40C
		public static LocalizedString ErrorFailedToConnectToServer(string serverName, string errorMessage)
		{
			return new LocalizedString("ErrorFailedToConnectToServer", "Ex151D22", false, true, Strings.ResourceManager, new object[]
			{
				serverName,
				errorMessage
			});
		}

		// Token: 0x06009BA5 RID: 39845 RVA: 0x0026D240 File Offset: 0x0026B440
		public static LocalizedString ConfirmationMessageSetExchangeSettings(string Name)
		{
			return new LocalizedString("ConfirmationMessageSetExchangeSettings", "", false, false, Strings.ResourceManager, new object[]
			{
				Name
			});
		}

		// Token: 0x06009BA6 RID: 39846 RVA: 0x0026D270 File Offset: 0x0026B470
		public static LocalizedString OwaInvalidIntegerFieldException(string fieldName, int value, int min, int max)
		{
			return new LocalizedString("OwaInvalidIntegerFieldException", "Ex549A60", false, true, Strings.ResourceManager, new object[]
			{
				fieldName,
				value,
				min,
				max
			});
		}

		// Token: 0x06009BA7 RID: 39847 RVA: 0x0026D2BC File Offset: 0x0026B4BC
		public static LocalizedString AgentNameTooLong(string name)
		{
			return new LocalizedString("AgentNameTooLong", "Ex4203F9", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x17003289 RID: 12937
		// (get) Token: 0x06009BA8 RID: 39848 RVA: 0x0026D2EB File Offset: 0x0026B4EB
		public static LocalizedString GetFederationInformationFailed
		{
			get
			{
				return new LocalizedString("GetFederationInformationFailed", "Ex15B18C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009BA9 RID: 39849 RVA: 0x0026D30C File Offset: 0x0026B50C
		public static LocalizedString ErrorMustWriteToRidMaster(string dc)
		{
			return new LocalizedString("ErrorMustWriteToRidMaster", "", false, false, Strings.ResourceManager, new object[]
			{
				dc
			});
		}

		// Token: 0x1700328A RID: 12938
		// (get) Token: 0x06009BAA RID: 39850 RVA: 0x0026D33B File Offset: 0x0026B53B
		public static LocalizedString UninstallAssistantsServiceTask
		{
			get
			{
				return new LocalizedString("UninstallAssistantsServiceTask", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009BAB RID: 39851 RVA: 0x0026D35C File Offset: 0x0026B55C
		public static LocalizedString RemovedDeviceFilterRule(string name)
		{
			return new LocalizedString("RemovedDeviceFilterRule", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x06009BAC RID: 39852 RVA: 0x0026D38C File Offset: 0x0026B58C
		public static LocalizedString ErrorStringContainsTrailingSpace(string idStringValue, string param)
		{
			return new LocalizedString("ErrorStringContainsTrailingSpace", "Ex437759", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue,
				param
			});
		}

		// Token: 0x1700328B RID: 12939
		// (get) Token: 0x06009BAD RID: 39853 RVA: 0x0026D3BF File Offset: 0x0026B5BF
		public static LocalizedString ProgressCopyingPST
		{
			get
			{
				return new LocalizedString("ProgressCopyingPST", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700328C RID: 12940
		// (get) Token: 0x06009BAE RID: 39854 RVA: 0x0026D3DD File Offset: 0x0026B5DD
		public static LocalizedString UninstallComplianceServiceTask
		{
			get
			{
				return new LocalizedString("UninstallComplianceServiceTask", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009BAF RID: 39855 RVA: 0x0026D3FC File Offset: 0x0026B5FC
		public static LocalizedString ReceiveConnectorRoleConflict(string receiveConnectorId)
		{
			return new LocalizedString("ReceiveConnectorRoleConflict", "", false, false, Strings.ResourceManager, new object[]
			{
				receiveConnectorId
			});
		}

		// Token: 0x06009BB0 RID: 39856 RVA: 0x0026D42C File Offset: 0x0026B62C
		public static LocalizedString VerboseServiceValidatorCredential(string userName, string password)
		{
			return new LocalizedString("VerboseServiceValidatorCredential", "", false, false, Strings.ResourceManager, new object[]
			{
				userName,
				password
			});
		}

		// Token: 0x1700328D RID: 12941
		// (get) Token: 0x06009BB1 RID: 39857 RVA: 0x0026D45F File Offset: 0x0026B65F
		public static LocalizedString ConfirmationMessageSetDataClassificationConfig
		{
			get
			{
				return new LocalizedString("ConfirmationMessageSetDataClassificationConfig", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700328E RID: 12942
		// (get) Token: 0x06009BB2 RID: 39858 RVA: 0x0026D47D File Offset: 0x0026B67D
		public static LocalizedString WarnBasicAuthInClear
		{
			get
			{
				return new LocalizedString("WarnBasicAuthInClear", "ExDAE69F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700328F RID: 12943
		// (get) Token: 0x06009BB3 RID: 39859 RVA: 0x0026D49B File Offset: 0x0026B69B
		public static LocalizedString DisableContentIndexTask
		{
			get
			{
				return new LocalizedString("DisableContentIndexTask", "Ex6C0B32", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009BB4 RID: 39860 RVA: 0x0026D4BC File Offset: 0x0026B6BC
		public static LocalizedString RuleCollectionNotFoundDuringExport(string name)
		{
			return new LocalizedString("RuleCollectionNotFoundDuringExport", "Ex445AB7", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x06009BB5 RID: 39861 RVA: 0x0026D4EC File Offset: 0x0026B6EC
		public static LocalizedString GetQueueDigestFailedToConnectTo(string serverList)
		{
			return new LocalizedString("GetQueueDigestFailedToConnectTo", "", false, false, Strings.ResourceManager, new object[]
			{
				serverList
			});
		}

		// Token: 0x06009BB6 RID: 39862 RVA: 0x0026D51C File Offset: 0x0026B71C
		public static LocalizedString MailFlowPartnerNotExists(MailFlowPartnerIdParameter name)
		{
			return new LocalizedString("MailFlowPartnerNotExists", "ExF042F5", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x06009BB7 RID: 39863 RVA: 0x0026D54C File Offset: 0x0026B74C
		public static LocalizedString MoveMailboxDatabaseOffline(string database)
		{
			return new LocalizedString("MoveMailboxDatabaseOffline", "ExE456BA", false, true, Strings.ResourceManager, new object[]
			{
				database
			});
		}

		// Token: 0x06009BB8 RID: 39864 RVA: 0x0026D57C File Offset: 0x0026B77C
		public static LocalizedString AlsEmailBodyEndDate(string date)
		{
			return new LocalizedString("AlsEmailBodyEndDate", "", false, false, Strings.ResourceManager, new object[]
			{
				date
			});
		}

		// Token: 0x17003290 RID: 12944
		// (get) Token: 0x06009BB9 RID: 39865 RVA: 0x0026D5AB File Offset: 0x0026B7AB
		public static LocalizedString GatewayRoleDisplayName
		{
			get
			{
				return new LocalizedString("GatewayRoleDisplayName", "ExE0FB02", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009BBA RID: 39866 RVA: 0x0026D5CC File Offset: 0x0026B7CC
		public static LocalizedString ConfirmationMessageTestArchiveConnectivityIdentity(string identity)
		{
			return new LocalizedString("ConfirmationMessageTestArchiveConnectivityIdentity", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x06009BBB RID: 39867 RVA: 0x0026D5FC File Offset: 0x0026B7FC
		public static LocalizedString ExtensionNotPST(string filename)
		{
			return new LocalizedString("ExtensionNotPST", "", false, false, Strings.ResourceManager, new object[]
			{
				filename
			});
		}

		// Token: 0x06009BBC RID: 39868 RVA: 0x0026D62C File Offset: 0x0026B82C
		public static LocalizedString CasHealthWebAppSendingRequest(Uri requestUri)
		{
			return new LocalizedString("CasHealthWebAppSendingRequest", "Ex9934FC", false, true, Strings.ResourceManager, new object[]
			{
				requestUri
			});
		}

		// Token: 0x17003291 RID: 12945
		// (get) Token: 0x06009BBD RID: 39869 RVA: 0x0026D65B File Offset: 0x0026B85B
		public static LocalizedString RemoveOrganizationFailRelocationInProgress
		{
			get
			{
				return new LocalizedString("RemoveOrganizationFailRelocationInProgress", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003292 RID: 12946
		// (get) Token: 0x06009BBE RID: 39870 RVA: 0x0026D679 File Offset: 0x0026B879
		public static LocalizedString CafeIisWebServiceExtensionsDescription
		{
			get
			{
				return new LocalizedString("CafeIisWebServiceExtensionsDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009BBF RID: 39871 RVA: 0x0026D698 File Offset: 0x0026B898
		public static LocalizedString ErrorMoveOabToNoMailboxServer(string server)
		{
			return new LocalizedString("ErrorMoveOabToNoMailboxServer", "Ex4091C1", false, true, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		// Token: 0x06009BC0 RID: 39872 RVA: 0x0026D6C8 File Offset: 0x0026B8C8
		public static LocalizedString MoveMailboxUnexpectedReportingError(string error)
		{
			return new LocalizedString("MoveMailboxUnexpectedReportingError", "ExF6DE72", false, true, Strings.ResourceManager, new object[]
			{
				error
			});
		}

		// Token: 0x17003293 RID: 12947
		// (get) Token: 0x06009BC1 RID: 39873 RVA: 0x0026D6F7 File Offset: 0x0026B8F7
		public static LocalizedString NoDefaultTestAccount
		{
			get
			{
				return new LocalizedString("NoDefaultTestAccount", "ExD059F0", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003294 RID: 12948
		// (get) Token: 0x06009BC2 RID: 39874 RVA: 0x0026D715 File Offset: 0x0026B915
		public static LocalizedString UsageTypeClient
		{
			get
			{
				return new LocalizedString("UsageTypeClient", "ExB393BA", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009BC3 RID: 39875 RVA: 0x0026D734 File Offset: 0x0026B934
		public static LocalizedString TransportServiceProblemMessage(int impactedUserCount)
		{
			return new LocalizedString("TransportServiceProblemMessage", "Ex8B89FC", false, true, Strings.ResourceManager, new object[]
			{
				impactedUserCount
			});
		}

		// Token: 0x06009BC4 RID: 39876 RVA: 0x0026D768 File Offset: 0x0026B968
		public static LocalizedString ErrorMobileMailboxPolicyNotFound(string idStringValue)
		{
			return new LocalizedString("ErrorMobileMailboxPolicyNotFound", "ExFE2646", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		// Token: 0x06009BC5 RID: 39877 RVA: 0x0026D798 File Offset: 0x0026B998
		public static LocalizedString ErrorSipUriInNonSipDialPlan(string phoneNumber)
		{
			return new LocalizedString("ErrorSipUriInNonSipDialPlan", "", false, false, Strings.ResourceManager, new object[]
			{
				phoneNumber
			});
		}

		// Token: 0x17003295 RID: 12949
		// (get) Token: 0x06009BC6 RID: 39878 RVA: 0x0026D7C7 File Offset: 0x0026B9C7
		public static LocalizedString SetupProgressRecreateCannedRBACRoleAssignments
		{
			get
			{
				return new LocalizedString("SetupProgressRecreateCannedRBACRoleAssignments", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009BC7 RID: 39879 RVA: 0x0026D7E8 File Offset: 0x0026B9E8
		public static LocalizedString RecipientTypeInvalidException(string mailboxId)
		{
			return new LocalizedString("RecipientTypeInvalidException", "", false, false, Strings.ResourceManager, new object[]
			{
				mailboxId
			});
		}

		// Token: 0x06009BC8 RID: 39880 RVA: 0x0026D818 File Offset: 0x0026BA18
		public static LocalizedString ErrorInvalidExtension(string extension)
		{
			return new LocalizedString("ErrorInvalidExtension", "", false, false, Strings.ResourceManager, new object[]
			{
				extension
			});
		}

		// Token: 0x17003296 RID: 12950
		// (get) Token: 0x06009BC9 RID: 39881 RVA: 0x0026D847 File Offset: 0x0026BA47
		public static LocalizedString SetupProgressStoppingRpcClientAccessService
		{
			get
			{
				return new LocalizedString("SetupProgressStoppingRpcClientAccessService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009BCA RID: 39882 RVA: 0x0026D868 File Offset: 0x0026BA68
		public static LocalizedString SetCurrentOrganizationConfirmation(string orgName)
		{
			return new LocalizedString("SetCurrentOrganizationConfirmation", "Ex019820", false, true, Strings.ResourceManager, new object[]
			{
				orgName
			});
		}

		// Token: 0x06009BCB RID: 39883 RVA: 0x0026D898 File Offset: 0x0026BA98
		public static LocalizedString ErrorUserOrphaned(string identity)
		{
			return new LocalizedString("ErrorUserOrphaned", "Ex388D0C", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x06009BCC RID: 39884 RVA: 0x0026D8C8 File Offset: 0x0026BAC8
		public static LocalizedString ErrorAcceptedDomainsWithSubdomains(string domain)
		{
			return new LocalizedString("ErrorAcceptedDomainsWithSubdomains", "ExF907D2", false, true, Strings.ResourceManager, new object[]
			{
				domain
			});
		}

		// Token: 0x06009BCD RID: 39885 RVA: 0x0026D8F8 File Offset: 0x0026BAF8
		public static LocalizedString ErrorAdminAuditLogConfig(string organization)
		{
			return new LocalizedString("ErrorAdminAuditLogConfig", "Ex460153", false, true, Strings.ResourceManager, new object[]
			{
				organization
			});
		}

		// Token: 0x17003297 RID: 12951
		// (get) Token: 0x06009BCE RID: 39886 RVA: 0x0026D927 File Offset: 0x0026BB27
		public static LocalizedString CasHealthScenario
		{
			get
			{
				return new LocalizedString("CasHealthScenario", "Ex026275", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009BCF RID: 39887 RVA: 0x0026D948 File Offset: 0x0026BB48
		public static LocalizedString ErrorOabVirtualDirectoryADObjectAlreadyExists(string vdir, string website, string serverName)
		{
			return new LocalizedString("ErrorOabVirtualDirectoryADObjectAlreadyExists", "Ex0BCF93", false, true, Strings.ResourceManager, new object[]
			{
				vdir,
				website,
				serverName
			});
		}

		// Token: 0x17003298 RID: 12952
		// (get) Token: 0x06009BD0 RID: 39888 RVA: 0x0026D97F File Offset: 0x0026BB7F
		public static LocalizedString InstallCafeRoleDescription
		{
			get
			{
				return new LocalizedString("InstallCafeRoleDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003299 RID: 12953
		// (get) Token: 0x06009BD1 RID: 39889 RVA: 0x0026D99D File Offset: 0x0026BB9D
		public static LocalizedString InstallMailboxRoleDescription
		{
			get
			{
				return new LocalizedString("InstallMailboxRoleDescription", "Ex9565AF", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700329A RID: 12954
		// (get) Token: 0x06009BD2 RID: 39890 RVA: 0x0026D9BB File Offset: 0x0026BBBB
		public static LocalizedString ErrorInvalidValueForPreventCompletion
		{
			get
			{
				return new LocalizedString("ErrorInvalidValueForPreventCompletion", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009BD3 RID: 39891 RVA: 0x0026D9DC File Offset: 0x0026BBDC
		public static LocalizedString ExceptionWebObjectNotFound(string name)
		{
			return new LocalizedString("ExceptionWebObjectNotFound", "Ex16603D", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x06009BD4 RID: 39892 RVA: 0x0026DA0C File Offset: 0x0026BC0C
		public static LocalizedString ErrorRemoveArbitrationMailbox(string id)
		{
			return new LocalizedString("ErrorRemoveArbitrationMailbox", "Ex9D532C", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x06009BD5 RID: 39893 RVA: 0x0026DA3C File Offset: 0x0026BC3C
		public static LocalizedString ProtocolTransactionsFailed(string protocol, string transactionsDetails)
		{
			return new LocalizedString("ProtocolTransactionsFailed", "ExFBB45C", false, true, Strings.ResourceManager, new object[]
			{
				protocol,
				transactionsDetails
			});
		}

		// Token: 0x06009BD6 RID: 39894 RVA: 0x0026DA70 File Offset: 0x0026BC70
		public static LocalizedString ConfirmationMessageDisableMailboxQuarantine(string mailbox)
		{
			return new LocalizedString("ConfirmationMessageDisableMailboxQuarantine", "", false, false, Strings.ResourceManager, new object[]
			{
				mailbox
			});
		}

		// Token: 0x06009BD7 RID: 39895 RVA: 0x0026DAA0 File Offset: 0x0026BCA0
		public static LocalizedString RegistryAccessCouldNotCreateKeyException(string key)
		{
			return new LocalizedString("RegistryAccessCouldNotCreateKeyException", "ExC1263E", false, true, Strings.ResourceManager, new object[]
			{
				key
			});
		}

		// Token: 0x06009BD8 RID: 39896 RVA: 0x0026DAD0 File Offset: 0x0026BCD0
		public static LocalizedString InstallFreeBusyFolderAlreadyExistsInDatabase(string database)
		{
			return new LocalizedString("InstallFreeBusyFolderAlreadyExistsInDatabase", "ExF4AF22", false, true, Strings.ResourceManager, new object[]
			{
				database
			});
		}

		// Token: 0x1700329B RID: 12955
		// (get) Token: 0x06009BD9 RID: 39897 RVA: 0x0026DAFF File Offset: 0x0026BCFF
		public static LocalizedString AboutToAddLocalEtsUSGToLocalAdminGroup
		{
			get
			{
				return new LocalizedString("AboutToAddLocalEtsUSGToLocalAdminGroup", "Ex3EE450", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700329C RID: 12956
		// (get) Token: 0x06009BDA RID: 39898 RVA: 0x0026DB1D File Offset: 0x0026BD1D
		public static LocalizedString NotificationsBrokerServiceDisplayName
		{
			get
			{
				return new LocalizedString("NotificationsBrokerServiceDisplayName", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009BDB RID: 39899 RVA: 0x0026DB3C File Offset: 0x0026BD3C
		public static LocalizedString ExServerSGroupLinkNotSetException(string guid)
		{
			return new LocalizedString("ExServerSGroupLinkNotSetException", "Ex076974", false, true, Strings.ResourceManager, new object[]
			{
				guid
			});
		}

		// Token: 0x06009BDC RID: 39900 RVA: 0x0026DB6C File Offset: 0x0026BD6C
		public static LocalizedString ErrorNoE12AttributeFound(string objectType)
		{
			return new LocalizedString("ErrorNoE12AttributeFound", "Ex45FA75", false, true, Strings.ResourceManager, new object[]
			{
				objectType
			});
		}

		// Token: 0x06009BDD RID: 39901 RVA: 0x0026DB9C File Offset: 0x0026BD9C
		public static LocalizedString MailboxSearchScopeException(string identity)
		{
			return new LocalizedString("MailboxSearchScopeException", "Ex996E1E", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x1700329D RID: 12957
		// (get) Token: 0x06009BDE RID: 39902 RVA: 0x0026DBCB File Offset: 0x0026BDCB
		public static LocalizedString MigrationReportIntervalParameterInvalid
		{
			get
			{
				return new LocalizedString("MigrationReportIntervalParameterInvalid", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009BDF RID: 39903 RVA: 0x0026DBEC File Offset: 0x0026BDEC
		public static LocalizedString ConfirmationMessageUpdateDatabaseCopyCancel(string dbCopy)
		{
			return new LocalizedString("ConfirmationMessageUpdateDatabaseCopyCancel", "", false, false, Strings.ResourceManager, new object[]
			{
				dbCopy
			});
		}

		// Token: 0x1700329E RID: 12958
		// (get) Token: 0x06009BE0 RID: 39904 RVA: 0x0026DC1B File Offset: 0x0026BE1B
		public static LocalizedString SetupComponentPostSetupFrontendTransport
		{
			get
			{
				return new LocalizedString("SetupComponentPostSetupFrontendTransport", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700329F RID: 12959
		// (get) Token: 0x06009BE1 RID: 39905 RVA: 0x0026DC39 File Offset: 0x0026BE39
		public static LocalizedString ErrorFilterParametersForCloneMode
		{
			get
			{
				return new LocalizedString("ErrorFilterParametersForCloneMode", "ExD61363", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009BE2 RID: 39906 RVA: 0x0026DC58 File Offset: 0x0026BE58
		public static LocalizedString FailedMailboxQuarantine(string mailbox, string failure)
		{
			return new LocalizedString("FailedMailboxQuarantine", "", false, false, Strings.ResourceManager, new object[]
			{
				mailbox,
				failure
			});
		}

		// Token: 0x170032A0 RID: 12960
		// (get) Token: 0x06009BE3 RID: 39907 RVA: 0x0026DC8B File Offset: 0x0026BE8B
		public static LocalizedString SetupProgressCreatingDefaultOAB
		{
			get
			{
				return new LocalizedString("SetupProgressCreatingDefaultOAB", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009BE4 RID: 39908 RVA: 0x0026DCAC File Offset: 0x0026BEAC
		public static LocalizedString ConfirmationMessageRemovePowerShellVirtualDirectory(string name, string server)
		{
			return new LocalizedString("ConfirmationMessageRemovePowerShellVirtualDirectory", "Ex9B3830", false, true, Strings.ResourceManager, new object[]
			{
				name,
				server
			});
		}

		// Token: 0x06009BE5 RID: 39909 RVA: 0x0026DCE0 File Offset: 0x0026BEE0
		public static LocalizedString NoneValidationDivergenceMustBeRetriable(string objectId)
		{
			return new LocalizedString("NoneValidationDivergenceMustBeRetriable", "", false, false, Strings.ResourceManager, new object[]
			{
				objectId
			});
		}

		// Token: 0x06009BE6 RID: 39910 RVA: 0x0026DD10 File Offset: 0x0026BF10
		public static LocalizedString ErrorCleanupRequestedNoRollback(string identity, string requested, string currentRequested)
		{
			return new LocalizedString("ErrorCleanupRequestedNoRollback", "", false, false, Strings.ResourceManager, new object[]
			{
				identity,
				requested,
				currentRequested
			});
		}

		// Token: 0x170032A1 RID: 12961
		// (get) Token: 0x06009BE7 RID: 39911 RVA: 0x0026DD47 File Offset: 0x0026BF47
		public static LocalizedString DebugEndSetDatabase
		{
			get
			{
				return new LocalizedString("DebugEndSetDatabase", "Ex620078", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170032A2 RID: 12962
		// (get) Token: 0x06009BE8 RID: 39912 RVA: 0x0026DD65 File Offset: 0x0026BF65
		public static LocalizedString Tentative
		{
			get
			{
				return new LocalizedString("Tentative", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170032A3 RID: 12963
		// (get) Token: 0x06009BE9 RID: 39913 RVA: 0x0026DD83 File Offset: 0x0026BF83
		public static LocalizedString RolePublishingEditor
		{
			get
			{
				return new LocalizedString("RolePublishingEditor", "Ex74EBAC", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170032A4 RID: 12964
		// (get) Token: 0x06009BEA RID: 39914 RVA: 0x0026DDA1 File Offset: 0x0026BFA1
		public static LocalizedString NewDagConfigurationPassedChecks
		{
			get
			{
				return new LocalizedString("NewDagConfigurationPassedChecks", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009BEB RID: 39915 RVA: 0x0026DDC0 File Offset: 0x0026BFC0
		public static LocalizedString ComplianceBindingNotFound(string name)
		{
			return new LocalizedString("ComplianceBindingNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x06009BEC RID: 39916 RVA: 0x0026DDF0 File Offset: 0x0026BFF0
		public static LocalizedString ErrorSupervisionTagNotValid(string tag)
		{
			return new LocalizedString("ErrorSupervisionTagNotValid", "ExD4A2AA", false, true, Strings.ResourceManager, new object[]
			{
				tag
			});
		}

		// Token: 0x170032A5 RID: 12965
		// (get) Token: 0x06009BED RID: 39917 RVA: 0x0026DE1F File Offset: 0x0026C01F
		public static LocalizedString AutodiscoverSvcGetRemoteEndpoint
		{
			get
			{
				return new LocalizedString("AutodiscoverSvcGetRemoteEndpoint", "Ex7AC14C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009BEE RID: 39918 RVA: 0x0026DE40 File Offset: 0x0026C040
		public static LocalizedString CreateMailboxSessionDetail(string user)
		{
			return new LocalizedString("CreateMailboxSessionDetail", "ExCD1EE3", false, true, Strings.ResourceManager, new object[]
			{
				user
			});
		}

		// Token: 0x06009BEF RID: 39919 RVA: 0x0026DE70 File Offset: 0x0026C070
		public static LocalizedString InvalidDlpPolicy(string dlpPolicy)
		{
			return new LocalizedString("InvalidDlpPolicy", "", false, false, Strings.ResourceManager, new object[]
			{
				dlpPolicy
			});
		}

		// Token: 0x06009BF0 RID: 39920 RVA: 0x0026DEA0 File Offset: 0x0026C0A0
		public static LocalizedString SharedConfigurationInfoNotPresent(string org)
		{
			return new LocalizedString("SharedConfigurationInfoNotPresent", "Ex83D2B0", false, true, Strings.ResourceManager, new object[]
			{
				org
			});
		}

		// Token: 0x170032A6 RID: 12966
		// (get) Token: 0x06009BF1 RID: 39921 RVA: 0x0026DECF File Offset: 0x0026C0CF
		public static LocalizedString SetupProgressCalendarSharingEnabled
		{
			get
			{
				return new LocalizedString("SetupProgressCalendarSharingEnabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009BF2 RID: 39922 RVA: 0x0026DEF0 File Offset: 0x0026C0F0
		public static LocalizedString ExchVirtualDirectoryCannotFindIdentity(string identity)
		{
			return new LocalizedString("ExchVirtualDirectoryCannotFindIdentity", "Ex465D07", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x06009BF3 RID: 39923 RVA: 0x0026DF20 File Offset: 0x0026C120
		public static LocalizedString WarningDisableDisabledRoleAssignment(string id)
		{
			return new LocalizedString("WarningDisableDisabledRoleAssignment", "ExF2DCA8", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x06009BF4 RID: 39924 RVA: 0x0026DF50 File Offset: 0x0026C150
		public static LocalizedString ResumeSgcRpcRequest(string db)
		{
			return new LocalizedString("ResumeSgcRpcRequest", "ExD1EF13", false, true, Strings.ResourceManager, new object[]
			{
				db
			});
		}

		// Token: 0x06009BF5 RID: 39925 RVA: 0x0026DF80 File Offset: 0x0026C180
		public static LocalizedString USGContainerNotFoundException(string ou, string domain)
		{
			return new LocalizedString("USGContainerNotFoundException", "Ex45A336", false, true, Strings.ResourceManager, new object[]
			{
				ou,
				domain
			});
		}

		// Token: 0x06009BF6 RID: 39926 RVA: 0x0026DFB4 File Offset: 0x0026C1B4
		public static LocalizedString WarningClientAccessArrayFqdnChanged(string newFqdn, string command)
		{
			return new LocalizedString("WarningClientAccessArrayFqdnChanged", "ExB70C20", false, true, Strings.ResourceManager, new object[]
			{
				newFqdn,
				command
			});
		}

		// Token: 0x06009BF7 RID: 39927 RVA: 0x0026DFE8 File Offset: 0x0026C1E8
		public static LocalizedString ErrorUnknownRole(string name)
		{
			return new LocalizedString("ErrorUnknownRole", "Ex09AE56", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x170032A7 RID: 12967
		// (get) Token: 0x06009BF8 RID: 39928 RVA: 0x0026E017 File Offset: 0x0026C217
		public static LocalizedString NoMonitoringErrorsInTestServiceHealthTask
		{
			get
			{
				return new LocalizedString("NoMonitoringErrorsInTestServiceHealthTask", "Ex214D0D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170032A8 RID: 12968
		// (get) Token: 0x06009BF9 RID: 39929 RVA: 0x0026E035 File Offset: 0x0026C235
		public static LocalizedString SetupComponentConfiguringMsFte
		{
			get
			{
				return new LocalizedString("SetupComponentConfiguringMsFte", "Ex952BF8", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009BFA RID: 39930 RVA: 0x0026E054 File Offset: 0x0026C254
		public static LocalizedString DagTaskUpdatingAdDagMembership(string serverName, string dagName)
		{
			return new LocalizedString("DagTaskUpdatingAdDagMembership", "", false, false, Strings.ResourceManager, new object[]
			{
				serverName,
				dagName
			});
		}

		// Token: 0x170032A9 RID: 12969
		// (get) Token: 0x06009BFB RID: 39931 RVA: 0x0026E087 File Offset: 0x0026C287
		public static LocalizedString ReservedString3
		{
			get
			{
				return new LocalizedString("ReservedString3", "Ex688F40", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170032AA RID: 12970
		// (get) Token: 0x06009BFC RID: 39932 RVA: 0x0026E0A5 File Offset: 0x0026C2A5
		public static LocalizedString ErrorBPARunFailed
		{
			get
			{
				return new LocalizedString("ErrorBPARunFailed", "Ex2BE0A0", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009BFD RID: 39933 RVA: 0x0026E0C4 File Offset: 0x0026C2C4
		public static LocalizedString ErrorInboundConnectorAlreadyExists(string name)
		{
			return new LocalizedString("ErrorInboundConnectorAlreadyExists", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x06009BFE RID: 39934 RVA: 0x0026E0F4 File Offset: 0x0026C2F4
		public static LocalizedString ErrorReadingServiceState(string machineName, string error)
		{
			return new LocalizedString("ErrorReadingServiceState", "Ex2C7AF0", false, true, Strings.ResourceManager, new object[]
			{
				machineName,
				error
			});
		}

		// Token: 0x06009BFF RID: 39935 RVA: 0x0026E128 File Offset: 0x0026C328
		public static LocalizedString AIMDBWatermarksAreTooLow(string serverName, string mailboxDatabaseName, string thresholdInMinutes, string lastEventCounterWithCreateTime, string watermarksWithCreateTime)
		{
			return new LocalizedString("AIMDBWatermarksAreTooLow", "", false, false, Strings.ResourceManager, new object[]
			{
				serverName,
				mailboxDatabaseName,
				thresholdInMinutes,
				lastEventCounterWithCreateTime,
				watermarksWithCreateTime
			});
		}

		// Token: 0x06009C00 RID: 39936 RVA: 0x0026E168 File Offset: 0x0026C368
		public static LocalizedString CreateVirtualDirectoryADObjectFailure(string serverName, string metabasePath)
		{
			return new LocalizedString("CreateVirtualDirectoryADObjectFailure", "ExD5372B", false, true, Strings.ResourceManager, new object[]
			{
				serverName,
				metabasePath
			});
		}

		// Token: 0x06009C01 RID: 39937 RVA: 0x0026E19C File Offset: 0x0026C39C
		public static LocalizedString ErrorTenantRelocationInProgress(string tenant)
		{
			return new LocalizedString("ErrorTenantRelocationInProgress", "", false, false, Strings.ResourceManager, new object[]
			{
				tenant
			});
		}

		// Token: 0x06009C02 RID: 39938 RVA: 0x0026E1CC File Offset: 0x0026C3CC
		public static LocalizedString ErrorPasswordBlank(string memberName)
		{
			return new LocalizedString("ErrorPasswordBlank", "ExCA090A", false, true, Strings.ResourceManager, new object[]
			{
				memberName
			});
		}

		// Token: 0x170032AB RID: 12971
		// (get) Token: 0x06009C03 RID: 39939 RVA: 0x0026E1FB File Offset: 0x0026C3FB
		public static LocalizedString UMCallAnsweringRuleDescriptionTakeActions
		{
			get
			{
				return new LocalizedString("UMCallAnsweringRuleDescriptionTakeActions", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009C04 RID: 39940 RVA: 0x0026E21C File Offset: 0x0026C41C
		public static LocalizedString NeedRemoveCopyLogFileManuallyAfterCopyDisabledRcr(string dbName, string logCopyLocation, string machine)
		{
			return new LocalizedString("NeedRemoveCopyLogFileManuallyAfterCopyDisabledRcr", "ExB2CA45", false, true, Strings.ResourceManager, new object[]
			{
				dbName,
				logCopyLocation,
				machine
			});
		}

		// Token: 0x170032AC RID: 12972
		// (get) Token: 0x06009C05 RID: 39941 RVA: 0x0026E253 File Offset: 0x0026C453
		public static LocalizedString SetupProgressCommonConfiguration
		{
			get
			{
				return new LocalizedString("SetupProgressCommonConfiguration", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170032AD RID: 12973
		// (get) Token: 0x06009C06 RID: 39942 RVA: 0x0026E271 File Offset: 0x0026C471
		public static LocalizedString DatacenterLiveIdPerfCountersComponentDescription
		{
			get
			{
				return new LocalizedString("DatacenterLiveIdPerfCountersComponentDescription", "Ex9B47C5", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170032AE RID: 12974
		// (get) Token: 0x06009C07 RID: 39943 RVA: 0x0026E28F File Offset: 0x0026C48F
		public static LocalizedString NewDagPassedChecks
		{
			get
			{
				return new LocalizedString("NewDagPassedChecks", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170032AF RID: 12975
		// (get) Token: 0x06009C08 RID: 39944 RVA: 0x0026E2AD File Offset: 0x0026C4AD
		public static LocalizedString InstallForwardSyncServiceTask
		{
			get
			{
				return new LocalizedString("InstallForwardSyncServiceTask", "ExF05C46", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170032B0 RID: 12976
		// (get) Token: 0x06009C09 RID: 39945 RVA: 0x0026E2CB File Offset: 0x0026C4CB
		public static LocalizedString SetupProgressStartingMailSubmissionService
		{
			get
			{
				return new LocalizedString("SetupProgressStartingMailSubmissionService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009C0A RID: 39946 RVA: 0x0026E2EC File Offset: 0x0026C4EC
		public static LocalizedString AtatchmentExtensionMatchesWordsParameterContainsWordsThatStartWithDot(string predicateName, string Words)
		{
			return new LocalizedString("AtatchmentExtensionMatchesWordsParameterContainsWordsThatStartWithDot", "", false, false, Strings.ResourceManager, new object[]
			{
				predicateName,
				Words
			});
		}

		// Token: 0x06009C0B RID: 39947 RVA: 0x0026E320 File Offset: 0x0026C520
		public static LocalizedString ConfirmationMessageDisableRemoteArchive(string Identity)
		{
			return new LocalizedString("ConfirmationMessageDisableRemoteArchive", "Ex99CBEE", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x06009C0C RID: 39948 RVA: 0x0026E350 File Offset: 0x0026C550
		public static LocalizedString ConfirmSearchMailboxTask(string task)
		{
			return new LocalizedString("ConfirmSearchMailboxTask", "ExCCB7AA", false, true, Strings.ResourceManager, new object[]
			{
				task
			});
		}

		// Token: 0x170032B1 RID: 12977
		// (get) Token: 0x06009C0D RID: 39949 RVA: 0x0026E37F File Offset: 0x0026C57F
		public static LocalizedString SendConnectorProxyEnabledOnEdge
		{
			get
			{
				return new LocalizedString("SendConnectorProxyEnabledOnEdge", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009C0E RID: 39950 RVA: 0x0026E3A0 File Offset: 0x0026C5A0
		public static LocalizedString CasHealthWebAppLiveIdResponseReceived(Uri responseUri, HttpStatusCode statusCode, string casServer)
		{
			return new LocalizedString("CasHealthWebAppLiveIdResponseReceived", "Ex8B4ADA", false, true, Strings.ResourceManager, new object[]
			{
				responseUri,
				statusCode,
				casServer
			});
		}

		// Token: 0x170032B2 RID: 12978
		// (get) Token: 0x06009C0F RID: 39951 RVA: 0x0026E3DC File Offset: 0x0026C5DC
		public static LocalizedString VerboseNoOabVDirOnLocalServer
		{
			get
			{
				return new LocalizedString("VerboseNoOabVDirOnLocalServer", "Ex85A8F5", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009C10 RID: 39952 RVA: 0x0026E3FC File Offset: 0x0026C5FC
		public static LocalizedString LogExsetdataReinstallingAtom(string atomID)
		{
			return new LocalizedString("LogExsetdataReinstallingAtom", "Ex2BCF20", false, true, Strings.ResourceManager, new object[]
			{
				atomID
			});
		}

		// Token: 0x170032B3 RID: 12979
		// (get) Token: 0x06009C11 RID: 39953 RVA: 0x0026E42B File Offset: 0x0026C62B
		public static LocalizedString NotificationsBrokerServiceDescription
		{
			get
			{
				return new LocalizedString("NotificationsBrokerServiceDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009C12 RID: 39954 RVA: 0x0026E44C File Offset: 0x0026C64C
		public static LocalizedString MemberAlreadyExistsException(string id, string group)
		{
			return new LocalizedString("MemberAlreadyExistsException", "Ex93E602", false, true, Strings.ResourceManager, new object[]
			{
				id,
				group
			});
		}

		// Token: 0x170032B4 RID: 12980
		// (get) Token: 0x06009C13 RID: 39955 RVA: 0x0026E47F File Offset: 0x0026C67F
		public static LocalizedString SetupProgressStoppingMailboxAssistantService
		{
			get
			{
				return new LocalizedString("SetupProgressStoppingMailboxAssistantService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170032B5 RID: 12981
		// (get) Token: 0x06009C14 RID: 39956 RVA: 0x0026E49D File Offset: 0x0026C69D
		public static LocalizedString InfoPreL
		{
			get
			{
				return new LocalizedString("InfoPreL", "Ex4FBF0C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009C15 RID: 39957 RVA: 0x0026E4BC File Offset: 0x0026C6BC
		public static LocalizedString ErrorAlsTooManyLogResults(int count)
		{
			return new LocalizedString("ErrorAlsTooManyLogResults", "", false, false, Strings.ResourceManager, new object[]
			{
				count
			});
		}

		// Token: 0x170032B6 RID: 12982
		// (get) Token: 0x06009C16 RID: 39958 RVA: 0x0026E4F0 File Offset: 0x0026C6F0
		public static LocalizedString ErrorMessageClassModified
		{
			get
			{
				return new LocalizedString("ErrorMessageClassModified", "Ex6D8150", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009C17 RID: 39959 RVA: 0x0026E510 File Offset: 0x0026C710
		public static LocalizedString SmtpConnectivityIncompleteEvent(string server, string untested, string successes)
		{
			return new LocalizedString("SmtpConnectivityIncompleteEvent", "Ex5127F5", false, true, Strings.ResourceManager, new object[]
			{
				server,
				untested,
				successes
			});
		}

		// Token: 0x170032B7 RID: 12983
		// (get) Token: 0x06009C18 RID: 39960 RVA: 0x0026E547 File Offset: 0x0026C747
		public static LocalizedString IgnoringSameNextCertificate
		{
			get
			{
				return new LocalizedString("IgnoringSameNextCertificate", "ExEA0B5F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009C19 RID: 39961 RVA: 0x0026E568 File Offset: 0x0026C768
		public static LocalizedString ProtocolLogSubject(string userName, string protocol)
		{
			return new LocalizedString("ProtocolLogSubject", "Ex7CD7F5", false, true, Strings.ResourceManager, new object[]
			{
				userName,
				protocol
			});
		}

		// Token: 0x06009C1A RID: 39962 RVA: 0x0026E59C File Offset: 0x0026C79C
		public static LocalizedString MtrtMessageRecieve(string serverHostName)
		{
			return new LocalizedString("MtrtMessageRecieve", "", false, false, Strings.ResourceManager, new object[]
			{
				serverHostName
			});
		}

		// Token: 0x170032B8 RID: 12984
		// (get) Token: 0x06009C1B RID: 39963 RVA: 0x0026E5CB File Offset: 0x0026C7CB
		public static LocalizedString ErrorGroupTypeInvalid
		{
			get
			{
				return new LocalizedString("ErrorGroupTypeInvalid", "ExA69203", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009C1C RID: 39964 RVA: 0x0026E5EC File Offset: 0x0026C7EC
		public static LocalizedString CannotBeBothValidationDivergenceAndTenantWideDivergence(string objectId)
		{
			return new LocalizedString("CannotBeBothValidationDivergenceAndTenantWideDivergence", "", false, false, Strings.ResourceManager, new object[]
			{
				objectId
			});
		}

		// Token: 0x170032B9 RID: 12985
		// (get) Token: 0x06009C1D RID: 39965 RVA: 0x0026E61B File Offset: 0x0026C81B
		public static LocalizedString HealthManagerServiceDisplayName
		{
			get
			{
				return new LocalizedString("HealthManagerServiceDisplayName", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009C1E RID: 39966 RVA: 0x0026E63C File Offset: 0x0026C83C
		public static LocalizedString ExchangeUpgradeBucketVersionsAreEqual(string source, string target)
		{
			return new LocalizedString("ExchangeUpgradeBucketVersionsAreEqual", "", false, false, Strings.ResourceManager, new object[]
			{
				source,
				target
			});
		}

		// Token: 0x06009C1F RID: 39967 RVA: 0x0026E670 File Offset: 0x0026C870
		public static LocalizedString ErrorArchiveUserVersionTooOld(string version)
		{
			return new LocalizedString("ErrorArchiveUserVersionTooOld", "Ex4691BF", false, true, Strings.ResourceManager, new object[]
			{
				version
			});
		}

		// Token: 0x06009C20 RID: 39968 RVA: 0x0026E6A0 File Offset: 0x0026C8A0
		public static LocalizedString RestoreNeedsWitnessServer(string dagName)
		{
			return new LocalizedString("RestoreNeedsWitnessServer", "", false, false, Strings.ResourceManager, new object[]
			{
				dagName
			});
		}

		// Token: 0x06009C21 RID: 39969 RVA: 0x0026E6D0 File Offset: 0x0026C8D0
		public static LocalizedString ErrorSiteNotUnique(object site)
		{
			return new LocalizedString("ErrorSiteNotUnique", "Ex15302B", false, true, Strings.ResourceManager, new object[]
			{
				site
			});
		}

		// Token: 0x170032BA RID: 12986
		// (get) Token: 0x06009C22 RID: 39970 RVA: 0x0026E6FF File Offset: 0x0026C8FF
		public static LocalizedString DiagnosticsServiceDisplayName
		{
			get
			{
				return new LocalizedString("DiagnosticsServiceDisplayName", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170032BB RID: 12987
		// (get) Token: 0x06009C23 RID: 39971 RVA: 0x0026E71D File Offset: 0x0026C91D
		public static LocalizedString FileDataMissing
		{
			get
			{
				return new LocalizedString("FileDataMissing", "ExBB232C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170032BC RID: 12988
		// (get) Token: 0x06009C24 RID: 39972 RVA: 0x0026E73B File Offset: 0x0026C93B
		public static LocalizedString InstallPop3BeServiceTask
		{
			get
			{
				return new LocalizedString("InstallPop3BeServiceTask", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170032BD RID: 12989
		// (get) Token: 0x06009C25 RID: 39973 RVA: 0x0026E759 File Offset: 0x0026C959
		public static LocalizedString ServiceHostDescription
		{
			get
			{
				return new LocalizedString("ServiceHostDescription", "Ex530DCC", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170032BE RID: 12990
		// (get) Token: 0x06009C26 RID: 39974 RVA: 0x0026E777 File Offset: 0x0026C977
		public static LocalizedString SetupProgressConfigureControlPointConfig
		{
			get
			{
				return new LocalizedString("SetupProgressConfigureControlPointConfig", "ExD527F5", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009C27 RID: 39975 RVA: 0x0026E798 File Offset: 0x0026C998
		public static LocalizedString ConfirmationMessageRemoveOrganization(string Name)
		{
			return new LocalizedString("ConfirmationMessageRemoveOrganization", "Ex4943FD", false, true, Strings.ResourceManager, new object[]
			{
				Name
			});
		}

		// Token: 0x06009C28 RID: 39976 RVA: 0x0026E7C8 File Offset: 0x0026C9C8
		public static LocalizedString CasHealthCalendarResponseError(string statusCode)
		{
			return new LocalizedString("CasHealthCalendarResponseError", "Ex709883", false, true, Strings.ResourceManager, new object[]
			{
				statusCode
			});
		}

		// Token: 0x170032BF RID: 12991
		// (get) Token: 0x06009C29 RID: 39977 RVA: 0x0026E7F7 File Offset: 0x0026C9F7
		public static LocalizedString ErrorModerationWithWrongGroupType
		{
			get
			{
				return new LocalizedString("ErrorModerationWithWrongGroupType", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009C2A RID: 39978 RVA: 0x0026E818 File Offset: 0x0026CA18
		public static LocalizedString ConfirmationMessageRemoveFailedMSOSyncObject(string objectId)
		{
			return new LocalizedString("ConfirmationMessageRemoveFailedMSOSyncObject", "", false, false, Strings.ResourceManager, new object[]
			{
				objectId
			});
		}

		// Token: 0x06009C2B RID: 39979 RVA: 0x0026E848 File Offset: 0x0026CA48
		public static LocalizedString CasHealthOwaTestPassed(string url)
		{
			return new LocalizedString("CasHealthOwaTestPassed", "ExD29E43", false, true, Strings.ResourceManager, new object[]
			{
				url
			});
		}

		// Token: 0x170032C0 RID: 12992
		// (get) Token: 0x06009C2C RID: 39980 RVA: 0x0026E877 File Offset: 0x0026CA77
		public static LocalizedString SiteMailboxMembershipSyncEventEnqueued
		{
			get
			{
				return new LocalizedString("SiteMailboxMembershipSyncEventEnqueued", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170032C1 RID: 12993
		// (get) Token: 0x06009C2D RID: 39981 RVA: 0x0026E895 File Offset: 0x0026CA95
		public static LocalizedString ErrorTeamMailboxSharePointServerVersionInCompatible
		{
			get
			{
				return new LocalizedString("ErrorTeamMailboxSharePointServerVersionInCompatible", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009C2E RID: 39982 RVA: 0x0026E8B4 File Offset: 0x0026CAB4
		public static LocalizedString ClassificationRuleCollectionIncorrectNumberOfDefaultInRuleResources(string resourceIdRefs)
		{
			return new LocalizedString("ClassificationRuleCollectionIncorrectNumberOfDefaultInRuleResources", "", false, false, Strings.ResourceManager, new object[]
			{
				resourceIdRefs
			});
		}

		// Token: 0x06009C2F RID: 39983 RVA: 0x0026E8E4 File Offset: 0x0026CAE4
		public static LocalizedString VerboseBuildAutoDiscoverUrl(string url)
		{
			return new LocalizedString("VerboseBuildAutoDiscoverUrl", "", false, false, Strings.ResourceManager, new object[]
			{
				url
			});
		}

		// Token: 0x170032C2 RID: 12994
		// (get) Token: 0x06009C30 RID: 39984 RVA: 0x0026E913 File Offset: 0x0026CB13
		public static LocalizedString AllowVoiceMailAnalysisWarning
		{
			get
			{
				return new LocalizedString("AllowVoiceMailAnalysisWarning", "Ex9B8D33", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009C31 RID: 39985 RVA: 0x0026E934 File Offset: 0x0026CB34
		public static LocalizedString ErrorCloudArchiveNeedsTargetIsArchiveSwitchForRestore(string identity)
		{
			return new LocalizedString("ErrorCloudArchiveNeedsTargetIsArchiveSwitchForRestore", "ExFC886B", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x170032C3 RID: 12995
		// (get) Token: 0x06009C32 RID: 39986 RVA: 0x0026E963 File Offset: 0x0026CB63
		public static LocalizedString SetupComponentPreSetupClientAccess
		{
			get
			{
				return new LocalizedString("SetupComponentPreSetupClientAccess", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009C33 RID: 39987 RVA: 0x0026E984 File Offset: 0x0026CB84
		public static LocalizedString ErrorInvalidArbitrationMailbox(string arbMbxIdentity)
		{
			return new LocalizedString("ErrorInvalidArbitrationMailbox", "ExF505C5", false, true, Strings.ResourceManager, new object[]
			{
				arbMbxIdentity
			});
		}

		// Token: 0x06009C34 RID: 39988 RVA: 0x0026E9B4 File Offset: 0x0026CBB4
		public static LocalizedString ErrorCannotMoveToTargetDatabaseAsConstraintsAreNotMet(string user, string databaseName, string constraint)
		{
			return new LocalizedString("ErrorCannotMoveToTargetDatabaseAsConstraintsAreNotMet", "", false, false, Strings.ResourceManager, new object[]
			{
				user,
				databaseName,
				constraint
			});
		}

		// Token: 0x170032C4 RID: 12996
		// (get) Token: 0x06009C35 RID: 39989 RVA: 0x0026E9EB File Offset: 0x0026CBEB
		public static LocalizedString SetupProgressUninstallingMsFteMSI
		{
			get
			{
				return new LocalizedString("SetupProgressUninstallingMsFteMSI", "Ex787C6E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170032C5 RID: 12997
		// (get) Token: 0x06009C36 RID: 39990 RVA: 0x0026EA09 File Offset: 0x0026CC09
		public static LocalizedString ErrorMovingOldExchangeUsersUnsupported
		{
			get
			{
				return new LocalizedString("ErrorMovingOldExchangeUsersUnsupported", "ExD95620", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009C37 RID: 39991 RVA: 0x0026EA28 File Offset: 0x0026CC28
		public static LocalizedString ErrorRecipientViewRootNotFound(string ou)
		{
			return new LocalizedString("ErrorRecipientViewRootNotFound", "ExA0D6F2", false, true, Strings.ResourceManager, new object[]
			{
				ou
			});
		}

		// Token: 0x06009C38 RID: 39992 RVA: 0x0026EA58 File Offset: 0x0026CC58
		public static LocalizedString AppcmdNotFoundInPath(string path)
		{
			return new LocalizedString("AppcmdNotFoundInPath", "", false, false, Strings.ResourceManager, new object[]
			{
				path
			});
		}

		// Token: 0x170032C6 RID: 12998
		// (get) Token: 0x06009C39 RID: 39993 RVA: 0x0026EA87 File Offset: 0x0026CC87
		public static LocalizedString RemoveADServerMetadataSucceeded
		{
			get
			{
				return new LocalizedString("RemoveADServerMetadataSucceeded", "ExCF87E7", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170032C7 RID: 12999
		// (get) Token: 0x06009C3A RID: 39994 RVA: 0x0026EAA5 File Offset: 0x0026CCA5
		public static LocalizedString QuarantineMessageTypeTransportRule
		{
			get
			{
				return new LocalizedString("QuarantineMessageTypeTransportRule", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009C3B RID: 39995 RVA: 0x0026EAC4 File Offset: 0x0026CCC4
		public static LocalizedString CrossPremiseProbeNdred(string source, string target, string info)
		{
			return new LocalizedString("CrossPremiseProbeNdred", "Ex5295CE", false, true, Strings.ResourceManager, new object[]
			{
				source,
				target,
				info
			});
		}

		// Token: 0x170032C8 RID: 13000
		// (get) Token: 0x06009C3C RID: 39996 RVA: 0x0026EAFB File Offset: 0x0026CCFB
		public static LocalizedString ErrorAssociatedUserMailboxExist
		{
			get
			{
				return new LocalizedString("ErrorAssociatedUserMailboxExist", "ExFB4E5D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170032C9 RID: 13001
		// (get) Token: 0x06009C3D RID: 39997 RVA: 0x0026EB19 File Offset: 0x0026CD19
		public static LocalizedString SetupProgressInstallInternetMessageFormat
		{
			get
			{
				return new LocalizedString("SetupProgressInstallInternetMessageFormat", "ExA8A4D1", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170032CA RID: 13002
		// (get) Token: 0x06009C3E RID: 39998 RVA: 0x0026EB37 File Offset: 0x0026CD37
		public static LocalizedString EditWillUpgradeSearchObject
		{
			get
			{
				return new LocalizedString("EditWillUpgradeSearchObject", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170032CB RID: 13003
		// (get) Token: 0x06009C3F RID: 39999 RVA: 0x0026EB55 File Offset: 0x0026CD55
		public static LocalizedString SetupComponentUnifiedMessagingGlobalConfig
		{
			get
			{
				return new LocalizedString("SetupComponentUnifiedMessagingGlobalConfig", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009C40 RID: 40000 RVA: 0x0026EB74 File Offset: 0x0026CD74
		public static LocalizedString OutputDirectoryNotExist(string directory)
		{
			return new LocalizedString("OutputDirectoryNotExist", "Ex6672A3", false, true, Strings.ResourceManager, new object[]
			{
				directory
			});
		}

		// Token: 0x170032CC RID: 13004
		// (get) Token: 0x06009C41 RID: 40001 RVA: 0x0026EBA3 File Offset: 0x0026CDA3
		public static LocalizedString NoHubInSubscribedSite
		{
			get
			{
				return new LocalizedString("NoHubInSubscribedSite", "Ex8E8767", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009C42 RID: 40002 RVA: 0x0026EBC4 File Offset: 0x0026CDC4
		public static LocalizedString TenantServiceInstanceNotSet(string syncobject)
		{
			return new LocalizedString("TenantServiceInstanceNotSet", "", false, false, Strings.ResourceManager, new object[]
			{
				syncobject
			});
		}

		// Token: 0x06009C43 RID: 40003 RVA: 0x0026EBF4 File Offset: 0x0026CDF4
		public static LocalizedString ConfirmationMessageNewMoveRequest(string Identity)
		{
			return new LocalizedString("ConfirmationMessageNewMoveRequest", "Ex11A451", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x170032CD RID: 13005
		// (get) Token: 0x06009C44 RID: 40004 RVA: 0x0026EC23 File Offset: 0x0026CE23
		public static LocalizedString ErrorFailedToLoadIRMConfig
		{
			get
			{
				return new LocalizedString("ErrorFailedToLoadIRMConfig", "Ex26C93D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009C45 RID: 40005 RVA: 0x0026EC44 File Offset: 0x0026CE44
		public static LocalizedString WarningNonZeroItemLimitMove(string badItemLimitParamName)
		{
			return new LocalizedString("WarningNonZeroItemLimitMove", "", false, false, Strings.ResourceManager, new object[]
			{
				badItemLimitParamName
			});
		}

		// Token: 0x06009C46 RID: 40006 RVA: 0x0026EC74 File Offset: 0x0026CE74
		public static LocalizedString VerboseSettingViewEntireForest(string value)
		{
			return new LocalizedString("VerboseSettingViewEntireForest", "ExD323AB", false, true, Strings.ResourceManager, new object[]
			{
				value
			});
		}

		// Token: 0x06009C47 RID: 40007 RVA: 0x0026ECA4 File Offset: 0x0026CEA4
		public static LocalizedString AddDatabaseCopyNewCopyMustBeInDagException(string serverName, string databaseName)
		{
			return new LocalizedString("AddDatabaseCopyNewCopyMustBeInDagException", "", false, false, Strings.ResourceManager, new object[]
			{
				serverName,
				databaseName
			});
		}

		// Token: 0x170032CE RID: 13006
		// (get) Token: 0x06009C48 RID: 40008 RVA: 0x0026ECD7 File Offset: 0x0026CED7
		public static LocalizedString ProgressCopyingCatalog
		{
			get
			{
				return new LocalizedString("ProgressCopyingCatalog", "Ex779548", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009C49 RID: 40009 RVA: 0x0026ECF8 File Offset: 0x0026CEF8
		public static LocalizedString ErrorBasicAndLiveIdBasicNotAllowedVDir(string metabasePath, string vDirBasicAuth, string vDirLiveIdAuth)
		{
			return new LocalizedString("ErrorBasicAndLiveIdBasicNotAllowedVDir", "ExC0131D", false, true, Strings.ResourceManager, new object[]
			{
				metabasePath,
				vDirBasicAuth,
				vDirLiveIdAuth
			});
		}

		// Token: 0x06009C4A RID: 40010 RVA: 0x0026ED30 File Offset: 0x0026CF30
		public static LocalizedString Error_InvalidLegacyRegionCode(string regionCode)
		{
			return new LocalizedString("Error_InvalidLegacyRegionCode", "", false, false, Strings.ResourceManager, new object[]
			{
				regionCode
			});
		}

		// Token: 0x170032CF RID: 13007
		// (get) Token: 0x06009C4B RID: 40011 RVA: 0x0026ED5F File Offset: 0x0026CF5F
		public static LocalizedString MailboxTransportSubmissionServiceDisplayName
		{
			get
			{
				return new LocalizedString("MailboxTransportSubmissionServiceDisplayName", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170032D0 RID: 13008
		// (get) Token: 0x06009C4C RID: 40012 RVA: 0x0026ED7D File Offset: 0x0026CF7D
		public static LocalizedString ImapInternalServerSettings
		{
			get
			{
				return new LocalizedString("ImapInternalServerSettings", "Ex35B0B6", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170032D1 RID: 13009
		// (get) Token: 0x06009C4D RID: 40013 RVA: 0x0026ED9B File Offset: 0x0026CF9B
		public static LocalizedString DatabaseSeedStatusLabelWrittenPerSec
		{
			get
			{
				return new LocalizedString("DatabaseSeedStatusLabelWrittenPerSec", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009C4E RID: 40014 RVA: 0x0026EDBC File Offset: 0x0026CFBC
		public static LocalizedString CasHealthOwaErrorPageExceptionMessage(string message)
		{
			return new LocalizedString("CasHealthOwaErrorPageExceptionMessage", "Ex097FF0", false, true, Strings.ResourceManager, new object[]
			{
				message
			});
		}

		// Token: 0x06009C4F RID: 40015 RVA: 0x0026EDEC File Offset: 0x0026CFEC
		public static LocalizedString ConfirmationMessageRemoveCallAnsweringRule(string identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveCallAnsweringRule", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x170032D2 RID: 13010
		// (get) Token: 0x06009C50 RID: 40016 RVA: 0x0026EE1B File Offset: 0x0026D01B
		public static LocalizedString NullUserError
		{
			get
			{
				return new LocalizedString("NullUserError", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170032D3 RID: 13011
		// (get) Token: 0x06009C51 RID: 40017 RVA: 0x0026EE39 File Offset: 0x0026D039
		public static LocalizedString ConfirmationMessageSetAutodiscoverVirtualDirectory
		{
			get
			{
				return new LocalizedString("ConfirmationMessageSetAutodiscoverVirtualDirectory", "ExD99F32", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170032D4 RID: 13012
		// (get) Token: 0x06009C52 RID: 40018 RVA: 0x0026EE57 File Offset: 0x0026D057
		public static LocalizedString ErrorAuthSameAsCurrent
		{
			get
			{
				return new LocalizedString("ErrorAuthSameAsCurrent", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170032D5 RID: 13013
		// (get) Token: 0x06009C53 RID: 40019 RVA: 0x0026EE75 File Offset: 0x0026D075
		public static LocalizedString VerboseHasWriteAccessToExchangeServers
		{
			get
			{
				return new LocalizedString("VerboseHasWriteAccessToExchangeServers", "ExAA41D9", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009C54 RID: 40020 RVA: 0x0026EE94 File Offset: 0x0026D094
		public static LocalizedString AIMDBLastEventPollingThreadHung(string serverName, string mailboxDatabaseName, double currentValue)
		{
			return new LocalizedString("AIMDBLastEventPollingThreadHung", "Ex5D456E", false, true, Strings.ResourceManager, new object[]
			{
				serverName,
				mailboxDatabaseName,
				currentValue
			});
		}

		// Token: 0x06009C55 RID: 40021 RVA: 0x0026EED0 File Offset: 0x0026D0D0
		public static LocalizedString ServiceHealthWmiFailure(string errorMsg)
		{
			return new LocalizedString("ServiceHealthWmiFailure", "Ex7D340D", false, true, Strings.ResourceManager, new object[]
			{
				errorMsg
			});
		}

		// Token: 0x170032D6 RID: 13014
		// (get) Token: 0x06009C56 RID: 40022 RVA: 0x0026EEFF File Offset: 0x0026D0FF
		public static LocalizedString ActiveSyncMetabaseIsapiInstallFailure
		{
			get
			{
				return new LocalizedString("ActiveSyncMetabaseIsapiInstallFailure", "ExA164A3", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009C57 RID: 40023 RVA: 0x0026EF20 File Offset: 0x0026D120
		public static LocalizedString ExchangeSettingsNotFoundForGroup(string groupName, string key)
		{
			return new LocalizedString("ExchangeSettingsNotFoundForGroup", "", false, false, Strings.ResourceManager, new object[]
			{
				groupName,
				key
			});
		}

		// Token: 0x06009C58 RID: 40024 RVA: 0x0026EF54 File Offset: 0x0026D154
		public static LocalizedString VerboseFoundAssigneeInConfigNC(string policy)
		{
			return new LocalizedString("VerboseFoundAssigneeInConfigNC", "ExD1B158", false, true, Strings.ResourceManager, new object[]
			{
				policy
			});
		}

		// Token: 0x170032D7 RID: 13015
		// (get) Token: 0x06009C59 RID: 40025 RVA: 0x0026EF83 File Offset: 0x0026D183
		public static LocalizedString InstallCentralAdminRoleDescription
		{
			get
			{
				return new LocalizedString("InstallCentralAdminRoleDescription", "ExA54782", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170032D8 RID: 13016
		// (get) Token: 0x06009C5A RID: 40026 RVA: 0x0026EFA1 File Offset: 0x0026D1A1
		public static LocalizedString ConfirmationMessageImportDlpPolicyTemplate
		{
			get
			{
				return new LocalizedString("ConfirmationMessageImportDlpPolicyTemplate", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170032D9 RID: 13017
		// (get) Token: 0x06009C5B RID: 40027 RVA: 0x0026EFBF File Offset: 0x0026D1BF
		public static LocalizedString ADAttributeIsWhiteSpaceOrContainsWhiteSpacePrefixOrSuffix
		{
			get
			{
				return new LocalizedString("ADAttributeIsWhiteSpaceOrContainsWhiteSpacePrefixOrSuffix", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009C5C RID: 40028 RVA: 0x0026EFE0 File Offset: 0x0026D1E0
		public static LocalizedString ErrorDuplicatePartnerApplication(string existingApp)
		{
			return new LocalizedString("ErrorDuplicatePartnerApplication", "", false, false, Strings.ResourceManager, new object[]
			{
				existingApp
			});
		}

		// Token: 0x06009C5D RID: 40029 RVA: 0x0026F010 File Offset: 0x0026D210
		public static LocalizedString ADDUMInvalidLanguagePack(string path)
		{
			return new LocalizedString("ADDUMInvalidLanguagePack", "Ex4C65F7", false, true, Strings.ResourceManager, new object[]
			{
				path
			});
		}

		// Token: 0x170032DA RID: 13018
		// (get) Token: 0x06009C5E RID: 40030 RVA: 0x0026F03F File Offset: 0x0026D23F
		public static LocalizedString SetupProgressImportingAdamSchema
		{
			get
			{
				return new LocalizedString("SetupProgressImportingAdamSchema", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170032DB RID: 13019
		// (get) Token: 0x06009C5F RID: 40031 RVA: 0x0026F05D File Offset: 0x0026D25D
		public static LocalizedString SupportedToolsCannotReadFile
		{
			get
			{
				return new LocalizedString("SupportedToolsCannotReadFile", "Ex311555", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170032DC RID: 13020
		// (get) Token: 0x06009C60 RID: 40032 RVA: 0x0026F07B File Offset: 0x0026D27B
		public static LocalizedString AuthModuleFilterMetabaseIsapiInstallFailure
		{
			get
			{
				return new LocalizedString("AuthModuleFilterMetabaseIsapiInstallFailure", "Ex81F1E7", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009C61 RID: 40033 RVA: 0x0026F09C File Offset: 0x0026D29C
		public static LocalizedString ErrorCannotRemoveUnorphanedMoveRequest(string identity)
		{
			return new LocalizedString("ErrorCannotRemoveUnorphanedMoveRequest", "Ex58344D", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x170032DD RID: 13021
		// (get) Token: 0x06009C62 RID: 40034 RVA: 0x0026F0CB File Offset: 0x0026D2CB
		public static LocalizedString HeaderValue
		{
			get
			{
				return new LocalizedString("HeaderValue", "Ex8EC88A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170032DE RID: 13022
		// (get) Token: 0x06009C63 RID: 40035 RVA: 0x0026F0E9 File Offset: 0x0026D2E9
		public static LocalizedString NonE14ServerError
		{
			get
			{
				return new LocalizedString("NonE14ServerError", "ExB0F5BB", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009C64 RID: 40036 RVA: 0x0026F108 File Offset: 0x0026D308
		public static LocalizedString SetArbitrationMailboxConfirmationMessage(string arbMbxIdentity)
		{
			return new LocalizedString("SetArbitrationMailboxConfirmationMessage", "ExDDEABA", false, true, Strings.ResourceManager, new object[]
			{
				arbMbxIdentity
			});
		}

		// Token: 0x170032DF RID: 13023
		// (get) Token: 0x06009C65 RID: 40037 RVA: 0x0026F137 File Offset: 0x0026D337
		public static LocalizedString ClientAccessServiceControlComponentDescription
		{
			get
			{
				return new LocalizedString("ClientAccessServiceControlComponentDescription", "Ex26A06A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009C66 RID: 40038 RVA: 0x0026F158 File Offset: 0x0026D358
		public static LocalizedString ConfirmationMessageStopDatabaseAvailabilityGroupServer(string Identity, string server)
		{
			return new LocalizedString("ConfirmationMessageStopDatabaseAvailabilityGroupServer", "Ex590362", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				server
			});
		}

		// Token: 0x06009C67 RID: 40039 RVA: 0x0026F18C File Offset: 0x0026D38C
		public static LocalizedString AssemblyFileNotExist(string assemblyPath)
		{
			return new LocalizedString("AssemblyFileNotExist", "Ex33E78D", false, true, Strings.ResourceManager, new object[]
			{
				assemblyPath
			});
		}

		// Token: 0x170032E0 RID: 13024
		// (get) Token: 0x06009C68 RID: 40040 RVA: 0x0026F1BB File Offset: 0x0026D3BB
		public static LocalizedString GatewayPrereqCheck
		{
			get
			{
				return new LocalizedString("GatewayPrereqCheck", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009C69 RID: 40041 RVA: 0x0026F1DC File Offset: 0x0026D3DC
		public static LocalizedString LanguagePackPerfCounterDeleteError(string file, string exceptionMessage)
		{
			return new LocalizedString("LanguagePackPerfCounterDeleteError", "", false, false, Strings.ResourceManager, new object[]
			{
				file,
				exceptionMessage
			});
		}

		// Token: 0x06009C6A RID: 40042 RVA: 0x0026F210 File Offset: 0x0026D410
		public static LocalizedString FailedBecauseofDefaultAdministrativeGroupNotFoundException(string error)
		{
			return new LocalizedString("FailedBecauseofDefaultAdministrativeGroupNotFoundException", "Ex9AA989", false, true, Strings.ResourceManager, new object[]
			{
				error
			});
		}

		// Token: 0x06009C6B RID: 40043 RVA: 0x0026F240 File Offset: 0x0026D440
		public static LocalizedString VerboseDeleteDBCopy(string id)
		{
			return new LocalizedString("VerboseDeleteDBCopy", "Ex7C3412", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x06009C6C RID: 40044 RVA: 0x0026F270 File Offset: 0x0026D470
		public static LocalizedString WebProxy(string address)
		{
			return new LocalizedString("WebProxy", "Ex997D17", false, true, Strings.ResourceManager, new object[]
			{
				address
			});
		}

		// Token: 0x06009C6D RID: 40045 RVA: 0x0026F2A0 File Offset: 0x0026D4A0
		public static LocalizedString ServerNamesMustBeValid(string list)
		{
			return new LocalizedString("ServerNamesMustBeValid", "Ex8E828A", false, true, Strings.ResourceManager, new object[]
			{
				list
			});
		}

		// Token: 0x170032E1 RID: 13025
		// (get) Token: 0x06009C6E RID: 40046 RVA: 0x0026F2CF File Offset: 0x0026D4CF
		public static LocalizedString CannotSetHubTransportServerOnAdam
		{
			get
			{
				return new LocalizedString("CannotSetHubTransportServerOnAdam", "ExAABB6D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009C6F RID: 40047 RVA: 0x0026F2F0 File Offset: 0x0026D4F0
		public static LocalizedString ErrorCannotMoveDiscoveryMailboxesCrossForest(string mailbox)
		{
			return new LocalizedString("ErrorCannotMoveDiscoveryMailboxesCrossForest", "Ex9C5282", false, true, Strings.ResourceManager, new object[]
			{
				mailbox
			});
		}

		// Token: 0x170032E2 RID: 13026
		// (get) Token: 0x06009C70 RID: 40048 RVA: 0x0026F31F File Offset: 0x0026D51F
		public static LocalizedString MigrationCompleteAfterIncorrectMigrationType
		{
			get
			{
				return new LocalizedString("MigrationCompleteAfterIncorrectMigrationType", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170032E3 RID: 13027
		// (get) Token: 0x06009C71 RID: 40049 RVA: 0x0026F33D File Offset: 0x0026D53D
		public static LocalizedString CasHealthOwaReturnedErrorPageForAuth
		{
			get
			{
				return new LocalizedString("CasHealthOwaReturnedErrorPageForAuth", "Ex86F6EA", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170032E4 RID: 13028
		// (get) Token: 0x06009C72 RID: 40050 RVA: 0x0026F35B File Offset: 0x0026D55B
		public static LocalizedString LocalDomainNotFoundException
		{
			get
			{
				return new LocalizedString("LocalDomainNotFoundException", "Ex615E01", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170032E5 RID: 13029
		// (get) Token: 0x06009C73 RID: 40051 RVA: 0x0026F379 File Offset: 0x0026D579
		public static LocalizedString Info_MessageItemHasBeenUpdated
		{
			get
			{
				return new LocalizedString("Info_MessageItemHasBeenUpdated", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170032E6 RID: 13030
		// (get) Token: 0x06009C74 RID: 40052 RVA: 0x0026F397 File Offset: 0x0026D597
		public static LocalizedString SetupProgressOwaEnabled
		{
			get
			{
				return new LocalizedString("SetupProgressOwaEnabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009C75 RID: 40053 RVA: 0x0026F3B8 File Offset: 0x0026D5B8
		public static LocalizedString ErrorNotE14Server(string server)
		{
			return new LocalizedString("ErrorNotE14Server", "ExDD2B26", false, true, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		// Token: 0x06009C76 RID: 40054 RVA: 0x0026F3E8 File Offset: 0x0026D5E8
		public static LocalizedString MobileDevicePolicyApplicationListTooLong(int listLimit, int memberLimit)
		{
			return new LocalizedString("MobileDevicePolicyApplicationListTooLong", "", false, false, Strings.ResourceManager, new object[]
			{
				listLimit,
				memberLimit
			});
		}

		// Token: 0x170032E7 RID: 13031
		// (get) Token: 0x06009C77 RID: 40055 RVA: 0x0026F425 File Offset: 0x0026D625
		public static LocalizedString ErrorManageDelegation1ProofDomainOwnership
		{
			get
			{
				return new LocalizedString("ErrorManageDelegation1ProofDomainOwnership", "Ex989EB8", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170032E8 RID: 13032
		// (get) Token: 0x06009C78 RID: 40056 RVA: 0x0026F443 File Offset: 0x0026D643
		public static LocalizedString ValidateSecretFailure
		{
			get
			{
				return new LocalizedString("ValidateSecretFailure", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009C79 RID: 40057 RVA: 0x0026F464 File Offset: 0x0026D664
		public static LocalizedString ErrorManagedByAlreadyExisted(string group, string id)
		{
			return new LocalizedString("ErrorManagedByAlreadyExisted", "Ex8A5030", false, true, Strings.ResourceManager, new object[]
			{
				group,
				id
			});
		}

		// Token: 0x170032E9 RID: 13033
		// (get) Token: 0x06009C7A RID: 40058 RVA: 0x0026F497 File Offset: 0x0026D697
		public static LocalizedString VerboseResetADServerSettingsSucceed
		{
			get
			{
				return new LocalizedString("VerboseResetADServerSettingsSucceed", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170032EA RID: 13034
		// (get) Token: 0x06009C7B RID: 40059 RVA: 0x0026F4B5 File Offset: 0x0026D6B5
		public static LocalizedString SetupProgressSkipToUAndParentalControlCheckEnabled
		{
			get
			{
				return new LocalizedString("SetupProgressSkipToUAndParentalControlCheckEnabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170032EB RID: 13035
		// (get) Token: 0x06009C7C RID: 40060 RVA: 0x0026F4D3 File Offset: 0x0026D6D3
		public static LocalizedString CountingFilesToCopy
		{
			get
			{
				return new LocalizedString("CountingFilesToCopy", "Ex323B63", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009C7D RID: 40061 RVA: 0x0026F4F4 File Offset: 0x0026D6F4
		public static LocalizedString SeederAlreadyCompletedPrompt(string dbName, string targetServer, string sourceServer)
		{
			return new LocalizedString("SeederAlreadyCompletedPrompt", "ExC8784E", false, true, Strings.ResourceManager, new object[]
			{
				dbName,
				targetServer,
				sourceServer
			});
		}

		// Token: 0x170032EC RID: 13036
		// (get) Token: 0x06009C7E RID: 40062 RVA: 0x0026F52B File Offset: 0x0026D72B
		public static LocalizedString AnonymousSharingEnabledWarning
		{
			get
			{
				return new LocalizedString("AnonymousSharingEnabledWarning", "Ex40DDF4", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009C7F RID: 40063 RVA: 0x0026F54C File Offset: 0x0026D74C
		public static LocalizedString InvalidCharacterInScriptFileName(string fileName, string character)
		{
			return new LocalizedString("InvalidCharacterInScriptFileName", "Ex85A707", false, true, Strings.ResourceManager, new object[]
			{
				fileName,
				character
			});
		}

		// Token: 0x06009C80 RID: 40064 RVA: 0x0026F580 File Offset: 0x0026D780
		public static LocalizedString ServerSchemaVersionRange(string server, int min, int max)
		{
			return new LocalizedString("ServerSchemaVersionRange", "", false, false, Strings.ResourceManager, new object[]
			{
				server,
				min,
				max
			});
		}

		// Token: 0x06009C81 RID: 40065 RVA: 0x0026F5C4 File Offset: 0x0026D7C4
		public static LocalizedString ErrorRemovedMailboxNotUnique(string removedMailbox)
		{
			return new LocalizedString("ErrorRemovedMailboxNotUnique", "Ex7268B5", false, true, Strings.ResourceManager, new object[]
			{
				removedMailbox
			});
		}

		// Token: 0x06009C82 RID: 40066 RVA: 0x0026F5F4 File Offset: 0x0026D7F4
		public static LocalizedString ErrorWillNotPerformOnInheritedAccessRight(string id)
		{
			return new LocalizedString("ErrorWillNotPerformOnInheritedAccessRight", "ExC14516", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x170032ED RID: 13037
		// (get) Token: 0x06009C83 RID: 40067 RVA: 0x0026F623 File Offset: 0x0026D823
		public static LocalizedString CalendarLogsNotFound
		{
			get
			{
				return new LocalizedString("CalendarLogsNotFound", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170032EE RID: 13038
		// (get) Token: 0x06009C84 RID: 40068 RVA: 0x0026F641 File Offset: 0x0026D841
		public static LocalizedString MSARPSServiceDescription
		{
			get
			{
				return new LocalizedString("MSARPSServiceDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009C85 RID: 40069 RVA: 0x0026F660 File Offset: 0x0026D860
		public static LocalizedString MailboxSearchIsInProgress(string name)
		{
			return new LocalizedString("MailboxSearchIsInProgress", "Ex9905A9", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x06009C86 RID: 40070 RVA: 0x0026F690 File Offset: 0x0026D890
		public static LocalizedString RemoveLiveFedUriReserveRequest(string domain)
		{
			return new LocalizedString("RemoveLiveFedUriReserveRequest", "Ex481665", false, true, Strings.ResourceManager, new object[]
			{
				domain
			});
		}

		// Token: 0x06009C87 RID: 40071 RVA: 0x0026F6C0 File Offset: 0x0026D8C0
		public static LocalizedString MsiCouldNotGetProdcutProperty(string property, string message, int errorCode)
		{
			return new LocalizedString("MsiCouldNotGetProdcutProperty", "ExE798C4", false, true, Strings.ResourceManager, new object[]
			{
				property,
				message,
				errorCode
			});
		}

		// Token: 0x06009C88 RID: 40072 RVA: 0x0026F6FC File Offset: 0x0026D8FC
		public static LocalizedString VerboseCreatingRoleAssignment(string id)
		{
			return new LocalizedString("VerboseCreatingRoleAssignment", "Ex88B76D", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x170032EF RID: 13039
		// (get) Token: 0x06009C89 RID: 40073 RVA: 0x0026F72B File Offset: 0x0026D92B
		public static LocalizedString OwaMetabaseIsapiInstallFailure
		{
			get
			{
				return new LocalizedString("OwaMetabaseIsapiInstallFailure", "Ex1F4F2A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009C8A RID: 40074 RVA: 0x0026F74C File Offset: 0x0026D94C
		public static LocalizedString ConfirmationMessageNewDatabaseAvailabilityGroupNetwork(string network)
		{
			return new LocalizedString("ConfirmationMessageNewDatabaseAvailabilityGroupNetwork", "ExAD5A91", false, true, Strings.ResourceManager, new object[]
			{
				network
			});
		}

		// Token: 0x06009C8B RID: 40075 RVA: 0x0026F77C File Offset: 0x0026D97C
		public static LocalizedString WarningInvalidParameterOrModifiedPropertyInAdminAuditLog(string log)
		{
			return new LocalizedString("WarningInvalidParameterOrModifiedPropertyInAdminAuditLog", "Ex05D589", false, true, Strings.ResourceManager, new object[]
			{
				log
			});
		}

		// Token: 0x170032F0 RID: 13040
		// (get) Token: 0x06009C8C RID: 40076 RVA: 0x0026F7AB File Offset: 0x0026D9AB
		public static LocalizedString MtrtMessageBadmail
		{
			get
			{
				return new LocalizedString("MtrtMessageBadmail", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170032F1 RID: 13041
		// (get) Token: 0x06009C8D RID: 40077 RVA: 0x0026F7C9 File Offset: 0x0026D9C9
		public static LocalizedString ProgressDeletingCopyLogFiles
		{
			get
			{
				return new LocalizedString("ProgressDeletingCopyLogFiles", "ExD25025", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170032F2 RID: 13042
		// (get) Token: 0x06009C8E RID: 40078 RVA: 0x0026F7E7 File Offset: 0x0026D9E7
		public static LocalizedString MessageTypePermissionControlled
		{
			get
			{
				return new LocalizedString("MessageTypePermissionControlled", "ExBC55AC", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009C8F RID: 40079 RVA: 0x0026F808 File Offset: 0x0026DA08
		public static LocalizedString ConfirmationMessageUploadUserPhoto(string Identity)
		{
			return new LocalizedString("ConfirmationMessageUploadUserPhoto", "", false, false, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x170032F3 RID: 13043
		// (get) Token: 0x06009C90 RID: 40080 RVA: 0x0026F837 File Offset: 0x0026DA37
		public static LocalizedString InstallTransportSyncManagerServiceTask
		{
			get
			{
				return new LocalizedString("InstallTransportSyncManagerServiceTask", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170032F4 RID: 13044
		// (get) Token: 0x06009C91 RID: 40081 RVA: 0x0026F855 File Offset: 0x0026DA55
		public static LocalizedString ErrorUnableToIdentifyTheUser
		{
			get
			{
				return new LocalizedString("ErrorUnableToIdentifyTheUser", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009C92 RID: 40082 RVA: 0x0026F874 File Offset: 0x0026DA74
		public static LocalizedString ConfirmationMessageRemovePublicFolderClientPermission(string Identity, string User, string AccessRights)
		{
			return new LocalizedString("ConfirmationMessageRemovePublicFolderClientPermission", "Ex7111B1", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				User,
				AccessRights
			});
		}

		// Token: 0x06009C93 RID: 40083 RVA: 0x0026F8AC File Offset: 0x0026DAAC
		public static LocalizedString SendConnectorUndefinedServerRg(string serverName)
		{
			return new LocalizedString("SendConnectorUndefinedServerRg", "Ex8B8D3A", false, true, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		// Token: 0x06009C94 RID: 40084 RVA: 0x0026F8DC File Offset: 0x0026DADC
		public static LocalizedString ExportMigrationBatchStartingRowIndexOutOfBoundException(int num)
		{
			return new LocalizedString("ExportMigrationBatchStartingRowIndexOutOfBoundException", "Ex1BD789", false, true, Strings.ResourceManager, new object[]
			{
				num
			});
		}

		// Token: 0x06009C95 RID: 40085 RVA: 0x0026F910 File Offset: 0x0026DB10
		public static LocalizedString FailedDocumentsResultsDatabase(string mdb, int total)
		{
			return new LocalizedString("FailedDocumentsResultsDatabase", "", false, false, Strings.ResourceManager, new object[]
			{
				mdb,
				total
			});
		}

		// Token: 0x06009C96 RID: 40086 RVA: 0x0026F948 File Offset: 0x0026DB48
		public static LocalizedString ConfirmationMessageNewSyncRequest(string name)
		{
			return new LocalizedString("ConfirmationMessageNewSyncRequest", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x170032F5 RID: 13045
		// (get) Token: 0x06009C97 RID: 40087 RVA: 0x0026F977 File Offset: 0x0026DB77
		public static LocalizedString CasHealthEasGetItemEstimate
		{
			get
			{
				return new LocalizedString("CasHealthEasGetItemEstimate", "Ex710B76", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009C98 RID: 40088 RVA: 0x0026F998 File Offset: 0x0026DB98
		public static LocalizedString messageDataCorruptionException(string dataSource, string violation)
		{
			return new LocalizedString("messageDataCorruptionException", "", false, false, Strings.ResourceManager, new object[]
			{
				dataSource,
				violation
			});
		}

		// Token: 0x170032F6 RID: 13046
		// (get) Token: 0x06009C99 RID: 40089 RVA: 0x0026F9CB File Offset: 0x0026DBCB
		public static LocalizedString ErrorFailedExtractTextForFingerprint
		{
			get
			{
				return new LocalizedString("ErrorFailedExtractTextForFingerprint", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009C9A RID: 40090 RVA: 0x0026F9EC File Offset: 0x0026DBEC
		public static LocalizedString OnPremisesOrganizationInboundConnectorNotUnique(InboundConnectorIdParameter identity)
		{
			return new LocalizedString("OnPremisesOrganizationInboundConnectorNotUnique", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x06009C9B RID: 40091 RVA: 0x0026FA1C File Offset: 0x0026DC1C
		public static LocalizedString IisTasksCouldNotFindSetupRegistryValue(string key, string value)
		{
			return new LocalizedString("IisTasksCouldNotFindSetupRegistryValue", "Ex819845", false, true, Strings.ResourceManager, new object[]
			{
				key,
				value
			});
		}

		// Token: 0x170032F7 RID: 13047
		// (get) Token: 0x06009C9C RID: 40092 RVA: 0x0026FA4F File Offset: 0x0026DC4F
		public static LocalizedString ComInteropDllNotFound
		{
			get
			{
				return new LocalizedString("ComInteropDllNotFound", "Ex35E614", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009C9D RID: 40093 RVA: 0x0026FA70 File Offset: 0x0026DC70
		public static LocalizedString ConfirmationMessageSetRMSTPD(string name)
		{
			return new LocalizedString("ConfirmationMessageSetRMSTPD", "Ex853D7C", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x170032F8 RID: 13048
		// (get) Token: 0x06009C9E RID: 40094 RVA: 0x0026FA9F File Offset: 0x0026DC9F
		public static LocalizedString SetupProgressCreateActiveSyncMailboxPolicyContainers
		{
			get
			{
				return new LocalizedString("SetupProgressCreateActiveSyncMailboxPolicyContainers", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009C9F RID: 40095 RVA: 0x0026FAC0 File Offset: 0x0026DCC0
		public static LocalizedString AlsEmailBodySubmitted(string date)
		{
			return new LocalizedString("AlsEmailBodySubmitted", "", false, false, Strings.ResourceManager, new object[]
			{
				date
			});
		}

		// Token: 0x06009CA0 RID: 40096 RVA: 0x0026FAF0 File Offset: 0x0026DCF0
		public static LocalizedString DagMemberNoDatabasesString(string serverName)
		{
			return new LocalizedString("DagMemberNoDatabasesString", "ExD77E87", false, true, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		// Token: 0x170032F9 RID: 13049
		// (get) Token: 0x06009CA1 RID: 40097 RVA: 0x0026FB1F File Offset: 0x0026DD1F
		public static LocalizedString Pattern
		{
			get
			{
				return new LocalizedString("Pattern", "Ex4DE185", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009CA2 RID: 40098 RVA: 0x0026FB40 File Offset: 0x0026DD40
		public static LocalizedString ErrorArchiveRecoveryArchiveNotFoundInStore(string user, Guid archiveGuid)
		{
			return new LocalizedString("ErrorArchiveRecoveryArchiveNotFoundInStore", "Ex7234EF", false, true, Strings.ResourceManager, new object[]
			{
				user,
				archiveGuid
			});
		}

		// Token: 0x06009CA3 RID: 40099 RVA: 0x0026FB78 File Offset: 0x0026DD78
		public static LocalizedString InterceptorErrorExpireTimePassed(string expireTime)
		{
			return new LocalizedString("InterceptorErrorExpireTimePassed", "", false, false, Strings.ResourceManager, new object[]
			{
				expireTime
			});
		}

		// Token: 0x06009CA4 RID: 40100 RVA: 0x0026FBA8 File Offset: 0x0026DDA8
		public static LocalizedString ErrorExchangeUpgradeBucketNotUnique(string idStringValue)
		{
			return new LocalizedString("ErrorExchangeUpgradeBucketNotUnique", "", false, false, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		// Token: 0x06009CA5 RID: 40101 RVA: 0x0026FBD8 File Offset: 0x0026DDD8
		public static LocalizedString ErrorTargetMailboxNotFound(string targetMailboxDN)
		{
			return new LocalizedString("ErrorTargetMailboxNotFound", "Ex80B4CB", false, true, Strings.ResourceManager, new object[]
			{
				targetMailboxDN
			});
		}

		// Token: 0x06009CA6 RID: 40102 RVA: 0x0026FC08 File Offset: 0x0026DE08
		public static LocalizedString ConfirmationMessageRecoveringSoftDeletedObject(string name)
		{
			return new LocalizedString("ConfirmationMessageRecoveringSoftDeletedObject", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x170032FA RID: 13050
		// (get) Token: 0x06009CA7 RID: 40103 RVA: 0x0026FC37 File Offset: 0x0026DE37
		public static LocalizedString ErrorRpcHttpMustSpecifyEitherIISAuthenticationMethodsOrDefaultAuthenticationMethod
		{
			get
			{
				return new LocalizedString("ErrorRpcHttpMustSpecifyEitherIISAuthenticationMethodsOrDefaultAuthenticationMethod", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009CA8 RID: 40104 RVA: 0x0026FC58 File Offset: 0x0026DE58
		public static LocalizedString FailedToReEnrollTPD(Exception e)
		{
			return new LocalizedString("FailedToReEnrollTPD", "", false, false, Strings.ResourceManager, new object[]
			{
				e
			});
		}

		// Token: 0x170032FB RID: 13051
		// (get) Token: 0x06009CA9 RID: 40105 RVA: 0x0026FC87 File Offset: 0x0026DE87
		public static LocalizedString SetupProgressCreateNewMailboxPlanObject
		{
			get
			{
				return new LocalizedString("SetupProgressCreateNewMailboxPlanObject", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170032FC RID: 13052
		// (get) Token: 0x06009CAA RID: 40106 RVA: 0x0026FCA5 File Offset: 0x0026DEA5
		public static LocalizedString ReplicationCheckResultWarning
		{
			get
			{
				return new LocalizedString("ReplicationCheckResultWarning", "ExD4A67F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009CAB RID: 40107 RVA: 0x0026FCC4 File Offset: 0x0026DEC4
		public static LocalizedString ErrorMailboxPlanNotFound(string idStringValue)
		{
			return new LocalizedString("ErrorMailboxPlanNotFound", "Ex18585C", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		// Token: 0x06009CAC RID: 40108 RVA: 0x0026FCF4 File Offset: 0x0026DEF4
		public static LocalizedString ServerDatabaseAndPartnerScopesAreOnlyAllowedInTopOrg(string orgId)
		{
			return new LocalizedString("ServerDatabaseAndPartnerScopesAreOnlyAllowedInTopOrg", "ExF6003B", false, true, Strings.ResourceManager, new object[]
			{
				orgId
			});
		}

		// Token: 0x170032FD RID: 13053
		// (get) Token: 0x06009CAD RID: 40109 RVA: 0x0026FD23 File Offset: 0x0026DF23
		public static LocalizedString SetupProgressCreateJournalingRuleCollection
		{
			get
			{
				return new LocalizedString("SetupProgressCreateJournalingRuleCollection", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009CAE RID: 40110 RVA: 0x0026FD44 File Offset: 0x0026DF44
		public static LocalizedString ErrorWMIException2(string computerName, string message)
		{
			return new LocalizedString("ErrorWMIException2", "ExC534DA", false, true, Strings.ResourceManager, new object[]
			{
				computerName,
				message
			});
		}

		// Token: 0x06009CAF RID: 40111 RVA: 0x0026FD78 File Offset: 0x0026DF78
		public static LocalizedString ConfirmationMessageNewAddressList(string Name)
		{
			return new LocalizedString("ConfirmationMessageNewAddressList", "ExFDB193", false, true, Strings.ResourceManager, new object[]
			{
				Name
			});
		}

		// Token: 0x06009CB0 RID: 40112 RVA: 0x0026FDA8 File Offset: 0x0026DFA8
		public static LocalizedString ExportNothingDeleteOnlyShouldExport(string srcDisplayname)
		{
			return new LocalizedString("ExportNothingDeleteOnlyShouldExport", "Ex8871F7", false, true, Strings.ResourceManager, new object[]
			{
				srcDisplayname
			});
		}

		// Token: 0x06009CB1 RID: 40113 RVA: 0x0026FDD8 File Offset: 0x0026DFD8
		public static LocalizedString ADInitializationException(string reason)
		{
			return new LocalizedString("ADInitializationException", "Ex5CC08D", false, true, Strings.ResourceManager, new object[]
			{
				reason
			});
		}

		// Token: 0x06009CB2 RID: 40114 RVA: 0x0026FE08 File Offset: 0x0026E008
		public static LocalizedString ErrorRecipientDoesNotHaveSpokenName(string name)
		{
			return new LocalizedString("ErrorRecipientDoesNotHaveSpokenName", "Ex1877B1", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x170032FE RID: 13054
		// (get) Token: 0x06009CB3 RID: 40115 RVA: 0x0026FE37 File Offset: 0x0026E037
		public static LocalizedString ContentIndexingServiceNotInstalled
		{
			get
			{
				return new LocalizedString("ContentIndexingServiceNotInstalled", "Ex63639E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170032FF RID: 13055
		// (get) Token: 0x06009CB4 RID: 40116 RVA: 0x0026FE55 File Offset: 0x0026E055
		public static LocalizedString ErrorMServeConfigurationIsBroken
		{
			get
			{
				return new LocalizedString("ErrorMServeConfigurationIsBroken", "Ex280144", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003300 RID: 13056
		// (get) Token: 0x06009CB5 RID: 40117 RVA: 0x0026FE73 File Offset: 0x0026E073
		public static LocalizedString ConfirmationMessageTestIntraOrganizationConnector
		{
			get
			{
				return new LocalizedString("ConfirmationMessageTestIntraOrganizationConnector", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009CB6 RID: 40118 RVA: 0x0026FE94 File Offset: 0x0026E094
		public static LocalizedString VerboseAddWSManConfigSection(string file)
		{
			return new LocalizedString("VerboseAddWSManConfigSection", "ExE1A886", false, true, Strings.ResourceManager, new object[]
			{
				file
			});
		}

		// Token: 0x17003301 RID: 13057
		// (get) Token: 0x06009CB7 RID: 40119 RVA: 0x0026FEC3 File Offset: 0x0026E0C3
		public static LocalizedString CasHealthOwaLoginWithNoCredentials
		{
			get
			{
				return new LocalizedString("CasHealthOwaLoginWithNoCredentials", "Ex247541", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009CB8 RID: 40120 RVA: 0x0026FEE4 File Offset: 0x0026E0E4
		public static LocalizedString WarningInvalidRuleCollectionADObject(string identity, string reason)
		{
			return new LocalizedString("WarningInvalidRuleCollectionADObject", "", false, false, Strings.ResourceManager, new object[]
			{
				identity,
				reason
			});
		}

		// Token: 0x17003302 RID: 13058
		// (get) Token: 0x06009CB9 RID: 40121 RVA: 0x0026FF17 File Offset: 0x0026E117
		public static LocalizedString MonitoringServiceDisplayName
		{
			get
			{
				return new LocalizedString("MonitoringServiceDisplayName", "ExBF6AAC", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009CBA RID: 40122 RVA: 0x0026FF38 File Offset: 0x0026E138
		public static LocalizedString PreviousQueryTime(string time)
		{
			return new LocalizedString("PreviousQueryTime", "Ex6055BF", false, true, Strings.ResourceManager, new object[]
			{
				time
			});
		}

		// Token: 0x06009CBB RID: 40123 RVA: 0x0026FF68 File Offset: 0x0026E168
		public static LocalizedString ComAdminUnableToCreateApplicationException(string applicationName)
		{
			return new LocalizedString("ComAdminUnableToCreateApplicationException", "ExEE9447", false, true, Strings.ResourceManager, new object[]
			{
				applicationName
			});
		}

		// Token: 0x06009CBC RID: 40124 RVA: 0x0026FF98 File Offset: 0x0026E198
		public static LocalizedString EdgeSubscriptionRequiresCAPICert(string thumbprint)
		{
			return new LocalizedString("EdgeSubscriptionRequiresCAPICert", "ExA584DD", false, true, Strings.ResourceManager, new object[]
			{
				thumbprint
			});
		}

		// Token: 0x06009CBD RID: 40125 RVA: 0x0026FFC8 File Offset: 0x0026E1C8
		public static LocalizedString ErrorDefaultPolicyCannotHaveRule(string policy)
		{
			return new LocalizedString("ErrorDefaultPolicyCannotHaveRule", "", false, false, Strings.ResourceManager, new object[]
			{
				policy
			});
		}

		// Token: 0x17003303 RID: 13059
		// (get) Token: 0x06009CBE RID: 40126 RVA: 0x0026FFF7 File Offset: 0x0026E1F7
		public static LocalizedString CannotSpecifyApplyMandatoryPropertiesParameterWithE15OrLaterOab
		{
			get
			{
				return new LocalizedString("CannotSpecifyApplyMandatoryPropertiesParameterWithE15OrLaterOab", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003304 RID: 13060
		// (get) Token: 0x06009CBF RID: 40127 RVA: 0x00270015 File Offset: 0x0026E215
		public static LocalizedString RegSvr32Failed
		{
			get
			{
				return new LocalizedString("RegSvr32Failed", "Ex2CA560", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003305 RID: 13061
		// (get) Token: 0x06009CC0 RID: 40128 RVA: 0x00270033 File Offset: 0x0026E233
		public static LocalizedString DeviceWipeSucceeded
		{
			get
			{
				return new LocalizedString("DeviceWipeSucceeded", "Ex40BEA1", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009CC1 RID: 40129 RVA: 0x00270054 File Offset: 0x0026E254
		public static LocalizedString VerboseTestUserIdentity(string user)
		{
			return new LocalizedString("VerboseTestUserIdentity", "", false, false, Strings.ResourceManager, new object[]
			{
				user
			});
		}

		// Token: 0x17003306 RID: 13062
		// (get) Token: 0x06009CC2 RID: 40130 RVA: 0x00270083 File Offset: 0x0026E283
		public static LocalizedString ErrorAtleastOneOfCSVInput
		{
			get
			{
				return new LocalizedString("ErrorAtleastOneOfCSVInput", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009CC3 RID: 40131 RVA: 0x002700A4 File Offset: 0x0026E2A4
		public static LocalizedString ScopeIsNotAllowedForRole(string unScopedRoleType)
		{
			return new LocalizedString("ScopeIsNotAllowedForRole", "ExBBC57F", false, true, Strings.ResourceManager, new object[]
			{
				unScopedRoleType
			});
		}

		// Token: 0x06009CC4 RID: 40132 RVA: 0x002700D4 File Offset: 0x0026E2D4
		public static LocalizedString ConfirmationMessageSetIPAllowListProvider(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetIPAllowListProvider", "Ex31DE4A", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x17003307 RID: 13063
		// (get) Token: 0x06009CC5 RID: 40133 RVA: 0x00270103 File Offset: 0x0026E303
		public static LocalizedString QuarantineMessageTypeSpam
		{
			get
			{
				return new LocalizedString("QuarantineMessageTypeSpam", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009CC6 RID: 40134 RVA: 0x00270124 File Offset: 0x0026E324
		public static LocalizedString ResumeSgcUseRpc(string serverVersion, string rpcSupportVersion)
		{
			return new LocalizedString("ResumeSgcUseRpc", "Ex740C42", false, true, Strings.ResourceManager, new object[]
			{
				serverVersion,
				rpcSupportVersion
			});
		}

		// Token: 0x17003308 RID: 13064
		// (get) Token: 0x06009CC7 RID: 40135 RVA: 0x00270157 File Offset: 0x0026E357
		public static LocalizedString SetupProgressStoppingMailSubmissionService
		{
			get
			{
				return new LocalizedString("SetupProgressStoppingMailSubmissionService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003309 RID: 13065
		// (get) Token: 0x06009CC8 RID: 40136 RVA: 0x00270175 File Offset: 0x0026E375
		public static LocalizedString ErrorInvalidOrganization
		{
			get
			{
				return new LocalizedString("ErrorInvalidOrganization", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009CC9 RID: 40137 RVA: 0x00270194 File Offset: 0x0026E394
		public static LocalizedString HostedSGContainerNotFoundException(string orgName)
		{
			return new LocalizedString("HostedSGContainerNotFoundException", "ExA63757", false, true, Strings.ResourceManager, new object[]
			{
				orgName
			});
		}

		// Token: 0x06009CCA RID: 40138 RVA: 0x002701C4 File Offset: 0x0026E3C4
		public static LocalizedString VerboseRestoreIISConfig(string cfgFile)
		{
			return new LocalizedString("VerboseRestoreIISConfig", "ExCE72AA", false, true, Strings.ResourceManager, new object[]
			{
				cfgFile
			});
		}

		// Token: 0x1700330A RID: 13066
		// (get) Token: 0x06009CCB RID: 40139 RVA: 0x002701F3 File Offset: 0x0026E3F3
		public static LocalizedString JournalingReportNdrToNotSet
		{
			get
			{
				return new LocalizedString("JournalingReportNdrToNotSet", "Ex045117", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009CCC RID: 40140 RVA: 0x00270214 File Offset: 0x0026E414
		public static LocalizedString ErrorTeamMailFailedUnlinkSharePointSite(string mbx, string sharePointUrl, string ex)
		{
			return new LocalizedString("ErrorTeamMailFailedUnlinkSharePointSite", "", false, false, Strings.ResourceManager, new object[]
			{
				mbx,
				sharePointUrl,
				ex
			});
		}

		// Token: 0x1700330B RID: 13067
		// (get) Token: 0x06009CCD RID: 40141 RVA: 0x0027024B File Offset: 0x0026E44B
		public static LocalizedString ProgressStatusInProgress
		{
			get
			{
				return new LocalizedString("ProgressStatusInProgress", "Ex893EC6", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700330C RID: 13068
		// (get) Token: 0x06009CCE RID: 40142 RVA: 0x00270269 File Offset: 0x0026E469
		public static LocalizedString NewSendConnectorIncorrectUsageParameters
		{
			get
			{
				return new LocalizedString("NewSendConnectorIncorrectUsageParameters", "Ex39CCED", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009CCF RID: 40143 RVA: 0x00270288 File Offset: 0x0026E488
		public static LocalizedString CasHealthWebAppSomeTransactionsFailed(LocalizedString applicationShortName, string detailedInformation)
		{
			return new LocalizedString("CasHealthWebAppSomeTransactionsFailed", "Ex8C8626", false, true, Strings.ResourceManager, new object[]
			{
				applicationShortName,
				detailedInformation
			});
		}

		// Token: 0x1700330D RID: 13069
		// (get) Token: 0x06009CD0 RID: 40144 RVA: 0x002702C0 File Offset: 0x0026E4C0
		public static LocalizedString ConfigurationContainerNotFoundException
		{
			get
			{
				return new LocalizedString("ConfigurationContainerNotFoundException", "ExA6CC2D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009CD1 RID: 40145 RVA: 0x002702E0 File Offset: 0x0026E4E0
		public static LocalizedString ErrorFailedToMountReplicatedDbWithMissingEdbFile(string databaseId)
		{
			return new LocalizedString("ErrorFailedToMountReplicatedDbWithMissingEdbFile", "Ex029EE7", false, true, Strings.ResourceManager, new object[]
			{
				databaseId
			});
		}

		// Token: 0x1700330E RID: 13070
		// (get) Token: 0x06009CD2 RID: 40146 RVA: 0x0027030F File Offset: 0x0026E50F
		public static LocalizedString SmtpInternalServerSettings
		{
			get
			{
				return new LocalizedString("SmtpInternalServerSettings", "Ex82F9FE", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009CD3 RID: 40147 RVA: 0x00270330 File Offset: 0x0026E530
		public static LocalizedString ConfirmationMessageUpdateServicePlan(string identity)
		{
			return new LocalizedString("ConfirmationMessageUpdateServicePlan", "Ex05288C", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x06009CD4 RID: 40148 RVA: 0x00270360 File Offset: 0x0026E560
		public static LocalizedString TowsDomainNotSsl(string url)
		{
			return new LocalizedString("TowsDomainNotSsl", "", false, false, Strings.ResourceManager, new object[]
			{
				url
			});
		}

		// Token: 0x06009CD5 RID: 40149 RVA: 0x00270390 File Offset: 0x0026E590
		public static LocalizedString ErrorConnectSystemMailbox(string identity, string database)
		{
			return new LocalizedString("ErrorConnectSystemMailbox", "Ex3C3ACA", false, true, Strings.ResourceManager, new object[]
			{
				identity,
				database
			});
		}

		// Token: 0x1700330F RID: 13071
		// (get) Token: 0x06009CD6 RID: 40150 RVA: 0x002703C3 File Offset: 0x0026E5C3
		public static LocalizedString MalboxFolderRightsCreateSubfolders
		{
			get
			{
				return new LocalizedString("MalboxFolderRightsCreateSubfolders", "Ex7A817D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009CD7 RID: 40151 RVA: 0x002703E4 File Offset: 0x0026E5E4
		public static LocalizedString VerboseNoAssociatedUserMailboxOnDatabaseCondition(string id)
		{
			return new LocalizedString("VerboseNoAssociatedUserMailboxOnDatabaseCondition", "Ex0ABA1B", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x17003310 RID: 13072
		// (get) Token: 0x06009CD8 RID: 40152 RVA: 0x00270413 File Offset: 0x0026E613
		public static LocalizedString ErrorFailedToManagedFoldersInMailbox
		{
			get
			{
				return new LocalizedString("ErrorFailedToManagedFoldersInMailbox", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009CD9 RID: 40153 RVA: 0x00270434 File Offset: 0x0026E634
		public static LocalizedString ErrorInvalidEndpointParameter(string parameterName, string type, LocalizedString reason)
		{
			return new LocalizedString("ErrorInvalidEndpointParameter", "", false, false, Strings.ResourceManager, new object[]
			{
				parameterName,
				type,
				reason
			});
		}

		// Token: 0x06009CDA RID: 40154 RVA: 0x00270470 File Offset: 0x0026E670
		public static LocalizedString FederationCertificateHasNoPrivateKey(string propertyName)
		{
			return new LocalizedString("FederationCertificateHasNoPrivateKey", "Ex0561D3", false, true, Strings.ResourceManager, new object[]
			{
				propertyName
			});
		}

		// Token: 0x06009CDB RID: 40155 RVA: 0x002704A0 File Offset: 0x0026E6A0
		public static LocalizedString InterceptorErrorCustomResponseCodeInvalid(string value)
		{
			return new LocalizedString("InterceptorErrorCustomResponseCodeInvalid", "", false, false, Strings.ResourceManager, new object[]
			{
				value
			});
		}

		// Token: 0x06009CDC RID: 40156 RVA: 0x002704D0 File Offset: 0x0026E6D0
		public static LocalizedString VerboseFixingVersion(string id)
		{
			return new LocalizedString("VerboseFixingVersion", "ExC4CD3C", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x06009CDD RID: 40157 RVA: 0x00270500 File Offset: 0x0026E700
		public static LocalizedString StopDagFailedException(string errorServers, string dagName)
		{
			return new LocalizedString("StopDagFailedException", "", false, false, Strings.ResourceManager, new object[]
			{
				errorServers,
				dagName
			});
		}

		// Token: 0x17003311 RID: 13073
		// (get) Token: 0x06009CDE RID: 40158 RVA: 0x00270533 File Offset: 0x0026E733
		public static LocalizedString OpenServiceFailed
		{
			get
			{
				return new LocalizedString("OpenServiceFailed", "ExC0F5AC", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009CDF RID: 40159 RVA: 0x00270554 File Offset: 0x0026E754
		public static LocalizedString CannotLocateServer(string errorMsg)
		{
			return new LocalizedString("CannotLocateServer", "Ex4E3F79", false, true, Strings.ResourceManager, new object[]
			{
				errorMsg
			});
		}

		// Token: 0x17003312 RID: 13074
		// (get) Token: 0x06009CE0 RID: 40160 RVA: 0x00270583 File Offset: 0x0026E783
		public static LocalizedString ErrorNameNotFQDN
		{
			get
			{
				return new LocalizedString("ErrorNameNotFQDN", "ExCD15BC", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003313 RID: 13075
		// (get) Token: 0x06009CE1 RID: 40161 RVA: 0x002705A1 File Offset: 0x0026E7A1
		public static LocalizedString SetupComponentMonitoringCorrelation
		{
			get
			{
				return new LocalizedString("SetupComponentMonitoringCorrelation", "Ex81CB81", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009CE2 RID: 40162 RVA: 0x002705C0 File Offset: 0x0026E7C0
		public static LocalizedString MailboxServerNotHostingMdbException(string mailboxServer)
		{
			return new LocalizedString("MailboxServerNotHostingMdbException", "Ex22E636", false, true, Strings.ResourceManager, new object[]
			{
				mailboxServer
			});
		}

		// Token: 0x17003314 RID: 13076
		// (get) Token: 0x06009CE3 RID: 40163 RVA: 0x002705EF File Offset: 0x0026E7EF
		public static LocalizedString SetupProgressCreateDatabaseFolders
		{
			get
			{
				return new LocalizedString("SetupProgressCreateDatabaseFolders", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009CE4 RID: 40164 RVA: 0x00270610 File Offset: 0x0026E810
		public static LocalizedString InternalErrorException(int number)
		{
			return new LocalizedString("InternalErrorException", "", false, false, Strings.ResourceManager, new object[]
			{
				number
			});
		}

		// Token: 0x06009CE5 RID: 40165 RVA: 0x00270644 File Offset: 0x0026E844
		public static LocalizedString WarningJobIsPoisoned(string identity, int poisonCount)
		{
			return new LocalizedString("WarningJobIsPoisoned", "", false, false, Strings.ResourceManager, new object[]
			{
				identity,
				poisonCount
			});
		}

		// Token: 0x06009CE6 RID: 40166 RVA: 0x0027067C File Offset: 0x0026E87C
		public static LocalizedString VerboseOABVdirFound(string DN)
		{
			return new LocalizedString("VerboseOABVdirFound", "Ex4F69ED", false, true, Strings.ResourceManager, new object[]
			{
				DN
			});
		}

		// Token: 0x17003315 RID: 13077
		// (get) Token: 0x06009CE7 RID: 40167 RVA: 0x002706AB File Offset: 0x0026E8AB
		public static LocalizedString CannotRunOnSubscribedEdge
		{
			get
			{
				return new LocalizedString("CannotRunOnSubscribedEdge", "ExB4AEEC", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003316 RID: 13078
		// (get) Token: 0x06009CE8 RID: 40168 RVA: 0x002706C9 File Offset: 0x0026E8C9
		public static LocalizedString NoOrganizationRelationshipInstancesWereReturnedByTheRemoteParty
		{
			get
			{
				return new LocalizedString("NoOrganizationRelationshipInstancesWereReturnedByTheRemoteParty", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009CE9 RID: 40169 RVA: 0x002706E8 File Offset: 0x0026E8E8
		public static LocalizedString TargetSharingEprNotSet(string remoteName)
		{
			return new LocalizedString("TargetSharingEprNotSet", "Ex30F2FE", false, true, Strings.ResourceManager, new object[]
			{
				remoteName
			});
		}

		// Token: 0x06009CEA RID: 40170 RVA: 0x00270718 File Offset: 0x0026E918
		public static LocalizedString MtrtMessageTransportRule(string ruleName, string id)
		{
			return new LocalizedString("MtrtMessageTransportRule", "", false, false, Strings.ResourceManager, new object[]
			{
				ruleName,
				id
			});
		}

		// Token: 0x17003317 RID: 13079
		// (get) Token: 0x06009CEB RID: 40171 RVA: 0x0027074B File Offset: 0x0026E94B
		public static LocalizedString StatusMessageUpdatePublicFolderMailboxCompleted
		{
			get
			{
				return new LocalizedString("StatusMessageUpdatePublicFolderMailboxCompleted", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009CEC RID: 40172 RVA: 0x0027076C File Offset: 0x0026E96C
		public static LocalizedString ConfirmationMessageRemoveMalwareFilterConfig(string identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveMalwareFilterConfig", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x06009CED RID: 40173 RVA: 0x0027079C File Offset: 0x0026E99C
		public static LocalizedString RemoveADServerMetadataServerNotFoundNative(string name)
		{
			return new LocalizedString("RemoveADServerMetadataServerNotFoundNative", "Ex313874", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x06009CEE RID: 40174 RVA: 0x002707CC File Offset: 0x0026E9CC
		public static LocalizedString RemovingPackageByProductCode(Guid productCode)
		{
			return new LocalizedString("RemovingPackageByProductCode", "ExDFFB24", false, true, Strings.ResourceManager, new object[]
			{
				productCode
			});
		}

		// Token: 0x17003318 RID: 13080
		// (get) Token: 0x06009CEF RID: 40175 RVA: 0x00270800 File Offset: 0x0026EA00
		public static LocalizedString DatabaseSeedStatusLabelReadPerSec
		{
			get
			{
				return new LocalizedString("DatabaseSeedStatusLabelReadPerSec", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009CF0 RID: 40176 RVA: 0x00270820 File Offset: 0x0026EA20
		public static LocalizedString TestRHUseCopyStatusRpc(string serverVersion, string rpcSupportVersion)
		{
			return new LocalizedString("TestRHUseCopyStatusRpc", "ExBE11A5", false, true, Strings.ResourceManager, new object[]
			{
				serverVersion,
				rpcSupportVersion
			});
		}

		// Token: 0x06009CF1 RID: 40177 RVA: 0x00270854 File Offset: 0x0026EA54
		public static LocalizedString DisableConversationsRunning(string user)
		{
			return new LocalizedString("DisableConversationsRunning", "ExFE2813", false, true, Strings.ResourceManager, new object[]
			{
				user
			});
		}

		// Token: 0x17003319 RID: 13081
		// (get) Token: 0x06009CF2 RID: 40178 RVA: 0x00270883 File Offset: 0x0026EA83
		public static LocalizedString ErrorInvalidDateRangeException
		{
			get
			{
				return new LocalizedString("ErrorInvalidDateRangeException", "Ex2A50E6", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009CF3 RID: 40179 RVA: 0x002708A4 File Offset: 0x0026EAA4
		public static LocalizedString DuplicateTPDKeyId(string keyIdType, string keyId)
		{
			return new LocalizedString("DuplicateTPDKeyId", "", false, false, Strings.ResourceManager, new object[]
			{
				keyIdType,
				keyId
			});
		}

		// Token: 0x1700331A RID: 13082
		// (get) Token: 0x06009CF4 RID: 40180 RVA: 0x002708D7 File Offset: 0x0026EAD7
		public static LocalizedString ErrorNoTrustConfigured
		{
			get
			{
				return new LocalizedString("ErrorNoTrustConfigured", "ExBE1659", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700331B RID: 13083
		// (get) Token: 0x06009CF5 RID: 40181 RVA: 0x002708F5 File Offset: 0x0026EAF5
		public static LocalizedString ErrorEnableRoleGroup
		{
			get
			{
				return new LocalizedString("ErrorEnableRoleGroup", "Ex7E99A2", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009CF6 RID: 40182 RVA: 0x00270914 File Offset: 0x0026EB14
		public static LocalizedString ConfirmationMessageNewEdgeSubscriptionWarnConfigObjectsWillBeDeleted(string expiry)
		{
			return new LocalizedString("ConfirmationMessageNewEdgeSubscriptionWarnConfigObjectsWillBeDeleted", "Ex837AC9", false, true, Strings.ResourceManager, new object[]
			{
				expiry
			});
		}

		// Token: 0x1700331C RID: 13084
		// (get) Token: 0x06009CF7 RID: 40183 RVA: 0x00270943 File Offset: 0x0026EB43
		public static LocalizedString MapiTransactionFailedAgainstServerPrefix
		{
			get
			{
				return new LocalizedString("MapiTransactionFailedAgainstServerPrefix", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700331D RID: 13085
		// (get) Token: 0x06009CF8 RID: 40184 RVA: 0x00270961 File Offset: 0x0026EB61
		public static LocalizedString SetupProgressCreateFederationTrusts
		{
			get
			{
				return new LocalizedString("SetupProgressCreateFederationTrusts", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700331E RID: 13086
		// (get) Token: 0x06009CF9 RID: 40185 RVA: 0x0027097F File Offset: 0x0026EB7F
		public static LocalizedString CasHealthOwaPingRequestSucceeded
		{
			get
			{
				return new LocalizedString("CasHealthOwaPingRequestSucceeded", "Ex3BE15D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009CFA RID: 40186 RVA: 0x002709A0 File Offset: 0x0026EBA0
		public static LocalizedString ConfirmationMessageNewInterceptorRule(string identity)
		{
			return new LocalizedString("ConfirmationMessageNewInterceptorRule", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x06009CFB RID: 40187 RVA: 0x002709D0 File Offset: 0x0026EBD0
		public static LocalizedString ErrorE14TenantRulesNeedUpdateBeforeMigratingToE15(string errorDetails)
		{
			return new LocalizedString("ErrorE14TenantRulesNeedUpdateBeforeMigratingToE15", "", false, false, Strings.ResourceManager, new object[]
			{
				errorDetails
			});
		}

		// Token: 0x1700331F RID: 13087
		// (get) Token: 0x06009CFC RID: 40188 RVA: 0x002709FF File Offset: 0x0026EBFF
		public static LocalizedString ConfirmationOnDisablingInternalLicensing
		{
			get
			{
				return new LocalizedString("ConfirmationOnDisablingInternalLicensing", "Ex6A3664", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003320 RID: 13088
		// (get) Token: 0x06009CFD RID: 40189 RVA: 0x00270A1D File Offset: 0x0026EC1D
		public static LocalizedString GetDagHealthInfoNoResultsWarning
		{
			get
			{
				return new LocalizedString("GetDagHealthInfoNoResultsWarning", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009CFE RID: 40190 RVA: 0x00270A3C File Offset: 0x0026EC3C
		public static LocalizedString ConfirmationMessageSetMailboxFolderPermission(string Identity, string User, string AccessRights)
		{
			return new LocalizedString("ConfirmationMessageSetMailboxFolderPermission", "Ex232294", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				User,
				AccessRights
			});
		}

		// Token: 0x17003321 RID: 13089
		// (get) Token: 0x06009CFF RID: 40191 RVA: 0x00270A73 File Offset: 0x0026EC73
		public static LocalizedString InvalidTransportRoleOnReceiveConnector
		{
			get
			{
				return new LocalizedString("InvalidTransportRoleOnReceiveConnector", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003322 RID: 13090
		// (get) Token: 0x06009D00 RID: 40192 RVA: 0x00270A91 File Offset: 0x0026EC91
		public static LocalizedString UninstallImap4ServiceTask
		{
			get
			{
				return new LocalizedString("UninstallImap4ServiceTask", "Ex95FBCC", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009D01 RID: 40193 RVA: 0x00270AB0 File Offset: 0x0026ECB0
		public static LocalizedString VerboseSetScopeValidateNewScopedAssignment(string id, string assignmentId)
		{
			return new LocalizedString("VerboseSetScopeValidateNewScopedAssignment", "ExCF4179", false, true, Strings.ResourceManager, new object[]
			{
				id,
				assignmentId
			});
		}

		// Token: 0x06009D02 RID: 40194 RVA: 0x00270AE4 File Offset: 0x0026ECE4
		public static LocalizedString ErrorDlpPolicyTemplateAlreadyInstalled(string identity)
		{
			return new LocalizedString("ErrorDlpPolicyTemplateAlreadyInstalled", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x17003323 RID: 13091
		// (get) Token: 0x06009D03 RID: 40195 RVA: 0x00270B13 File Offset: 0x0026ED13
		public static LocalizedString InstallNotificationsBrokerServiceTask
		{
			get
			{
				return new LocalizedString("InstallNotificationsBrokerServiceTask", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003324 RID: 13092
		// (get) Token: 0x06009D04 RID: 40196 RVA: 0x00270B31 File Offset: 0x0026ED31
		public static LocalizedString ErrorDlpPolicyCollectionCannotContainTransportRules
		{
			get
			{
				return new LocalizedString("ErrorDlpPolicyCollectionCannotContainTransportRules", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009D05 RID: 40197 RVA: 0x00270B50 File Offset: 0x0026ED50
		public static LocalizedString ConfirmationMessageUpdateEmailAddressPolicy(string Identity)
		{
			return new LocalizedString("ConfirmationMessageUpdateEmailAddressPolicy", "Ex48C969", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x17003325 RID: 13093
		// (get) Token: 0x06009D06 RID: 40198 RVA: 0x00270B7F File Offset: 0x0026ED7F
		public static LocalizedString DelegateRoleTypePublicFolderAdmin
		{
			get
			{
				return new LocalizedString("DelegateRoleTypePublicFolderAdmin", "ExE311C6", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003326 RID: 13094
		// (get) Token: 0x06009D07 RID: 40199 RVA: 0x00270B9D File Offset: 0x0026ED9D
		public static LocalizedString SetupProgressAutoForwardEnabled
		{
			get
			{
				return new LocalizedString("SetupProgressAutoForwardEnabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009D08 RID: 40200 RVA: 0x00270BBC File Offset: 0x0026EDBC
		public static LocalizedString ConfirmationMessageRemoveDatabaseAvailabilityGroupNetwork(string network)
		{
			return new LocalizedString("ConfirmationMessageRemoveDatabaseAvailabilityGroupNetwork", "Ex0D9F0F", false, true, Strings.ResourceManager, new object[]
			{
				network
			});
		}

		// Token: 0x06009D09 RID: 40201 RVA: 0x00270BEC File Offset: 0x0026EDEC
		public static LocalizedString MRSDiagnosticXmlParsingError(string error, string xml)
		{
			return new LocalizedString("MRSDiagnosticXmlParsingError", "", false, false, Strings.ResourceManager, new object[]
			{
				error,
				xml
			});
		}

		// Token: 0x06009D0A RID: 40202 RVA: 0x00270C20 File Offset: 0x0026EE20
		public static LocalizedString InvalidOrganizationGuid(string s)
		{
			return new LocalizedString("InvalidOrganizationGuid", "", false, false, Strings.ResourceManager, new object[]
			{
				s
			});
		}

		// Token: 0x06009D0B RID: 40203 RVA: 0x00270C50 File Offset: 0x0026EE50
		public static LocalizedString VerboseMailboxDelegateSkipNotADUser(string user)
		{
			return new LocalizedString("VerboseMailboxDelegateSkipNotADUser", "", false, false, Strings.ResourceManager, new object[]
			{
				user
			});
		}

		// Token: 0x17003327 RID: 13095
		// (get) Token: 0x06009D0C RID: 40204 RVA: 0x00270C7F File Offset: 0x0026EE7F
		public static LocalizedString ConfirmationMessageOverrideContentMailbox
		{
			get
			{
				return new LocalizedString("ConfirmationMessageOverrideContentMailbox", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003328 RID: 13096
		// (get) Token: 0x06009D0D RID: 40205 RVA: 0x00270C9D File Offset: 0x0026EE9D
		public static LocalizedString CreateOwaForEcpWarning
		{
			get
			{
				return new LocalizedString("CreateOwaForEcpWarning", "ExA5316E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003329 RID: 13097
		// (get) Token: 0x06009D0E RID: 40206 RVA: 0x00270CBB File Offset: 0x0026EEBB
		public static LocalizedString ContinueMountWithDataLoss
		{
			get
			{
				return new LocalizedString("ContinueMountWithDataLoss", "Ex3F5D9E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009D0F RID: 40207 RVA: 0x00270CDC File Offset: 0x0026EEDC
		public static LocalizedString ErrorRecipientNotUnique(object idValue)
		{
			return new LocalizedString("ErrorRecipientNotUnique", "Ex8155FB", false, true, Strings.ResourceManager, new object[]
			{
				idValue
			});
		}

		// Token: 0x06009D10 RID: 40208 RVA: 0x00270D0C File Offset: 0x0026EF0C
		public static LocalizedString InPlaceHoldScopeException(string identity)
		{
			return new LocalizedString("InPlaceHoldScopeException", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x06009D11 RID: 40209 RVA: 0x00270D3C File Offset: 0x0026EF3C
		public static LocalizedString ConfirmationMessageSetEdgeSyncEhfConnector(string id)
		{
			return new LocalizedString("ConfirmationMessageSetEdgeSyncEhfConnector", "Ex978E4F", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x1700332A RID: 13098
		// (get) Token: 0x06009D12 RID: 40210 RVA: 0x00270D6B File Offset: 0x0026EF6B
		public static LocalizedString SetupComponentConfigPermissionsBridgehead
		{
			get
			{
				return new LocalizedString("SetupComponentConfigPermissionsBridgehead", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700332B RID: 13099
		// (get) Token: 0x06009D13 RID: 40211 RVA: 0x00270D89 File Offset: 0x0026EF89
		public static LocalizedString MapiTransactionDiagnosticStoreServiceIsNotRunning
		{
			get
			{
				return new LocalizedString("MapiTransactionDiagnosticStoreServiceIsNotRunning", "Ex43D2D0", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009D14 RID: 40212 RVA: 0x00270DA8 File Offset: 0x0026EFA8
		public static LocalizedString ConfirmationMessageAddAdminAuditLog(string org)
		{
			return new LocalizedString("ConfirmationMessageAddAdminAuditLog", "Ex1B0283", false, true, Strings.ResourceManager, new object[]
			{
				org
			});
		}

		// Token: 0x06009D15 RID: 40213 RVA: 0x00270DD8 File Offset: 0x0026EFD8
		public static LocalizedString DurationShouldBeLessThan1Year(string duration)
		{
			return new LocalizedString("DurationShouldBeLessThan1Year", "", false, false, Strings.ResourceManager, new object[]
			{
				duration
			});
		}

		// Token: 0x06009D16 RID: 40214 RVA: 0x00270E08 File Offset: 0x0026F008
		public static LocalizedString WarningSetMailboxSingleItemRecoveryDelay(double minutes)
		{
			return new LocalizedString("WarningSetMailboxSingleItemRecoveryDelay", "Ex86A45D", false, true, Strings.ResourceManager, new object[]
			{
				minutes
			});
		}

		// Token: 0x1700332C RID: 13100
		// (get) Token: 0x06009D17 RID: 40215 RVA: 0x00270E3C File Offset: 0x0026F03C
		public static LocalizedString ErrorMoreThanOneDefaultMailTipTranslationSpecified
		{
			get
			{
				return new LocalizedString("ErrorMoreThanOneDefaultMailTipTranslationSpecified", "Ex5C0759", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700332D RID: 13101
		// (get) Token: 0x06009D18 RID: 40216 RVA: 0x00270E5A File Offset: 0x0026F05A
		public static LocalizedString CompleteOrganizationUpgradeDescription
		{
			get
			{
				return new LocalizedString("CompleteOrganizationUpgradeDescription", "Ex44A409", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009D19 RID: 40217 RVA: 0x00270E78 File Offset: 0x0026F078
		public static LocalizedString MailboxReplicationServiceNotScanningForJobs(TimeSpan lastScanAge)
		{
			return new LocalizedString("MailboxReplicationServiceNotScanningForJobs", "ExD7475D", false, true, Strings.ResourceManager, new object[]
			{
				lastScanAge
			});
		}

		// Token: 0x06009D1A RID: 40218 RVA: 0x00270EAC File Offset: 0x0026F0AC
		public static LocalizedString ErrorInvalidTenantGlsRecord(string identity, string glsResolvedForest, string sourceForest, string targetForest)
		{
			return new LocalizedString("ErrorInvalidTenantGlsRecord", "", false, false, Strings.ResourceManager, new object[]
			{
				identity,
				glsResolvedForest,
				sourceForest,
				targetForest
			});
		}

		// Token: 0x06009D1B RID: 40219 RVA: 0x00270EE8 File Offset: 0x0026F0E8
		public static LocalizedString ErrorRecipientInSentToConditionCannotBeDistributionGroup(string recipient)
		{
			return new LocalizedString("ErrorRecipientInSentToConditionCannotBeDistributionGroup", "", false, false, Strings.ResourceManager, new object[]
			{
				recipient
			});
		}

		// Token: 0x06009D1C RID: 40220 RVA: 0x00270F18 File Offset: 0x0026F118
		public static LocalizedString RestoreMailboxNotRecoveryDatabase(string databaseName)
		{
			return new LocalizedString("RestoreMailboxNotRecoveryDatabase", "ExC7D7BE", false, true, Strings.ResourceManager, new object[]
			{
				databaseName
			});
		}

		// Token: 0x06009D1D RID: 40221 RVA: 0x00270F48 File Offset: 0x0026F148
		public static LocalizedString SchemaImportProcessFailure(string exeFileName, string schemaFileName, int code, string errorFilePath)
		{
			return new LocalizedString("SchemaImportProcessFailure", "ExA2B06D", false, true, Strings.ResourceManager, new object[]
			{
				exeFileName,
				schemaFileName,
				code,
				errorFilePath
			});
		}

		// Token: 0x1700332E RID: 13102
		// (get) Token: 0x06009D1E RID: 40222 RVA: 0x00270F88 File Offset: 0x0026F188
		public static LocalizedString ErrorTenantOrgInUnexpectedState
		{
			get
			{
				return new LocalizedString("ErrorTenantOrgInUnexpectedState", "Ex2EAFD0", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009D1F RID: 40223 RVA: 0x00270FA8 File Offset: 0x0026F1A8
		public static LocalizedString GetFederationInformationShouldUseUnsecureRedirect(string url, string redirectUrl, string redirectHostname)
		{
			return new LocalizedString("GetFederationInformationShouldUseUnsecureRedirect", "ExCC29F5", false, true, Strings.ResourceManager, new object[]
			{
				url,
				redirectUrl,
				redirectHostname
			});
		}

		// Token: 0x06009D20 RID: 40224 RVA: 0x00270FE0 File Offset: 0x0026F1E0
		public static LocalizedString InvalidKeySize(int keySize)
		{
			return new LocalizedString("InvalidKeySize", "Ex2608ED", false, true, Strings.ResourceManager, new object[]
			{
				keySize
			});
		}

		// Token: 0x1700332F RID: 13103
		// (get) Token: 0x06009D21 RID: 40225 RVA: 0x00271014 File Offset: 0x0026F214
		public static LocalizedString ConversationsMailboxAlreadyEnabled
		{
			get
			{
				return new LocalizedString("ConversationsMailboxAlreadyEnabled", "Ex1B541E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009D22 RID: 40226 RVA: 0x00271034 File Offset: 0x0026F234
		public static LocalizedString VerboseDomainControllerIsNotGlobalCatelog(string dc, string error)
		{
			return new LocalizedString("VerboseDomainControllerIsNotGlobalCatelog", "ExBCF599", false, true, Strings.ResourceManager, new object[]
			{
				dc,
				error
			});
		}

		// Token: 0x17003330 RID: 13104
		// (get) Token: 0x06009D23 RID: 40227 RVA: 0x00271067 File Offset: 0x0026F267
		public static LocalizedString ImportE14TransportRuleCollectionInDCError
		{
			get
			{
				return new LocalizedString("ImportE14TransportRuleCollectionInDCError", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009D24 RID: 40228 RVA: 0x00271088 File Offset: 0x0026F288
		public static LocalizedString ConfirmationMessageRestoreDatabaseAvailabilityGroupADSite(string Identity, string ad)
		{
			return new LocalizedString("ConfirmationMessageRestoreDatabaseAvailabilityGroupADSite", "ExE8EA22", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				ad
			});
		}

		// Token: 0x06009D25 RID: 40229 RVA: 0x002710BC File Offset: 0x0026F2BC
		public static LocalizedString VerboseDefaultOABIsOlderThanVersionE12(string DN)
		{
			return new LocalizedString("VerboseDefaultOABIsOlderThanVersionE12", "Ex10F6F7", false, true, Strings.ResourceManager, new object[]
			{
				DN
			});
		}

		// Token: 0x06009D26 RID: 40230 RVA: 0x002710EC File Offset: 0x0026F2EC
		public static LocalizedString ErrorCannotDeleteGroupRoleAssignmentConstraint(string roleGroupName, string roleAssignment, string role)
		{
			return new LocalizedString("ErrorCannotDeleteGroupRoleAssignmentConstraint", "ExF1D7F9", false, true, Strings.ResourceManager, new object[]
			{
				roleGroupName,
				roleAssignment,
				role
			});
		}

		// Token: 0x17003331 RID: 13105
		// (get) Token: 0x06009D27 RID: 40231 RVA: 0x00271123 File Offset: 0x0026F323
		public static LocalizedString MessageTypeAutoForward
		{
			get
			{
				return new LocalizedString("MessageTypeAutoForward", "Ex847DA4", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009D28 RID: 40232 RVA: 0x00271144 File Offset: 0x0026F344
		public static LocalizedString ConfirmationMessageRemovePolicyTipConfig(string dentity)
		{
			return new LocalizedString("ConfirmationMessageRemovePolicyTipConfig", "", false, false, Strings.ResourceManager, new object[]
			{
				dentity
			});
		}

		// Token: 0x06009D29 RID: 40233 RVA: 0x00271174 File Offset: 0x0026F374
		public static LocalizedString VerboseCreatingChildVDir(string name, string parent)
		{
			return new LocalizedString("VerboseCreatingChildVDir", "Ex15495F", false, true, Strings.ResourceManager, new object[]
			{
				name,
				parent
			});
		}

		// Token: 0x06009D2A RID: 40234 RVA: 0x002711A8 File Offset: 0x0026F3A8
		public static LocalizedString ErrorObjectAlreadyExists(string objType, string id)
		{
			return new LocalizedString("ErrorObjectAlreadyExists", "ExE19F77", false, true, Strings.ResourceManager, new object[]
			{
				objType,
				id
			});
		}

		// Token: 0x06009D2B RID: 40235 RVA: 0x002711DC File Offset: 0x0026F3DC
		public static LocalizedString InvalidWKObjectTargetException(string guid, string container, string target, string groupType)
		{
			return new LocalizedString("InvalidWKObjectTargetException", "Ex9EA27D", false, true, Strings.ResourceManager, new object[]
			{
				guid,
				container,
				target,
				groupType
			});
		}

		// Token: 0x06009D2C RID: 40236 RVA: 0x00271218 File Offset: 0x0026F418
		public static LocalizedString RegistryKeyNotFound(string name, string path)
		{
			return new LocalizedString("RegistryKeyNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				name,
				path
			});
		}

		// Token: 0x06009D2D RID: 40237 RVA: 0x0027124C File Offset: 0x0026F44C
		public static LocalizedString GlobalLocatorServiceExceptionThrown(string e)
		{
			return new LocalizedString("GlobalLocatorServiceExceptionThrown", "", false, false, Strings.ResourceManager, new object[]
			{
				e
			});
		}

		// Token: 0x06009D2E RID: 40238 RVA: 0x0027127C File Offset: 0x0026F47C
		public static LocalizedString ErrorNoGlobalGatalogFound(string forest)
		{
			return new LocalizedString("ErrorNoGlobalGatalogFound", "Ex663E47", false, true, Strings.ResourceManager, new object[]
			{
				forest
			});
		}

		// Token: 0x06009D2F RID: 40239 RVA: 0x002712AC File Offset: 0x0026F4AC
		public static LocalizedString ClassificationRuleCollectionNonUniqueLangCodesInRuleDescription(string resourceIdRef, string nonUniqueLangCodes)
		{
			return new LocalizedString("ClassificationRuleCollectionNonUniqueLangCodesInRuleDescription", "", false, false, Strings.ResourceManager, new object[]
			{
				resourceIdRef,
				nonUniqueLangCodes
			});
		}

		// Token: 0x06009D30 RID: 40240 RVA: 0x002712E0 File Offset: 0x0026F4E0
		public static LocalizedString ErrorMaxParameterLengthExceeded(string parameterName, int maxValueLength)
		{
			return new LocalizedString("ErrorMaxParameterLengthExceeded", "ExC2B3D1", false, true, Strings.ResourceManager, new object[]
			{
				parameterName,
				maxValueLength
			});
		}

		// Token: 0x17003332 RID: 13106
		// (get) Token: 0x06009D31 RID: 40241 RVA: 0x00271318 File Offset: 0x0026F518
		public static LocalizedString CasHealthOwaHttpUnknownLogoffError
		{
			get
			{
				return new LocalizedString("CasHealthOwaHttpUnknownLogoffError", "ExD11123", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009D32 RID: 40242 RVA: 0x00271338 File Offset: 0x0026F538
		public static LocalizedString ConfirmationChangePartitionTrust(string partitionName, string originalTrust, string newTrust)
		{
			return new LocalizedString("ConfirmationChangePartitionTrust", "", false, false, Strings.ResourceManager, new object[]
			{
				partitionName,
				originalTrust,
				newTrust
			});
		}

		// Token: 0x17003333 RID: 13107
		// (get) Token: 0x06009D33 RID: 40243 RVA: 0x0027136F File Offset: 0x0026F56F
		public static LocalizedString CasHealthEasScenarioSyncFolderItems
		{
			get
			{
				return new LocalizedString("CasHealthEasScenarioSyncFolderItems", "Ex8D1A92", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003334 RID: 13108
		// (get) Token: 0x06009D34 RID: 40244 RVA: 0x0027138D File Offset: 0x0026F58D
		public static LocalizedString FrontEndTransportServiceDisplayName
		{
			get
			{
				return new LocalizedString("FrontEndTransportServiceDisplayName", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009D35 RID: 40245 RVA: 0x002713AC File Offset: 0x0026F5AC
		public static LocalizedString ErrorADTopologyServiceNotAvailable(string server, string errorMessage)
		{
			return new LocalizedString("ErrorADTopologyServiceNotAvailable", "Ex8E1845", false, true, Strings.ResourceManager, new object[]
			{
				server,
				errorMessage
			});
		}

		// Token: 0x06009D36 RID: 40246 RVA: 0x002713E0 File Offset: 0x0026F5E0
		public static LocalizedString DagFswServerNotAccessibleToDeleteFswException(string fswMachine, string share, Exception ex)
		{
			return new LocalizedString("DagFswServerNotAccessibleToDeleteFswException", "", false, false, Strings.ResourceManager, new object[]
			{
				fswMachine,
				share,
				ex
			});
		}

		// Token: 0x17003335 RID: 13109
		// (get) Token: 0x06009D37 RID: 40247 RVA: 0x00271417 File Offset: 0x0026F617
		public static LocalizedString ComponentTaskSection
		{
			get
			{
				return new LocalizedString("ComponentTaskSection", "Ex864CCF", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009D38 RID: 40248 RVA: 0x00271438 File Offset: 0x0026F638
		public static LocalizedString ErrorPermissionCheckFailure(string phoneNumber)
		{
			return new LocalizedString("ErrorPermissionCheckFailure", "", false, false, Strings.ResourceManager, new object[]
			{
				phoneNumber
			});
		}

		// Token: 0x06009D39 RID: 40249 RVA: 0x00271468 File Offset: 0x0026F668
		public static LocalizedString ErrorUnknownAccessRights(string input)
		{
			return new LocalizedString("ErrorUnknownAccessRights", "Ex473D84", false, true, Strings.ResourceManager, new object[]
			{
				input
			});
		}

		// Token: 0x06009D3A RID: 40250 RVA: 0x00271498 File Offset: 0x0026F698
		public static LocalizedString FolderNameInvalidPathChars(string folderName)
		{
			return new LocalizedString("FolderNameInvalidPathChars", "", false, false, Strings.ResourceManager, new object[]
			{
				folderName
			});
		}

		// Token: 0x06009D3B RID: 40251 RVA: 0x002714C8 File Offset: 0x0026F6C8
		public static LocalizedString InvalidAgentName(string name)
		{
			return new LocalizedString("InvalidAgentName", "Ex07AB61", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x06009D3C RID: 40252 RVA: 0x002714F8 File Offset: 0x0026F6F8
		public static LocalizedString ConfirmationMessageEnableMailboxQuarantine(string mailbox)
		{
			return new LocalizedString("ConfirmationMessageEnableMailboxQuarantine", "", false, false, Strings.ResourceManager, new object[]
			{
				mailbox
			});
		}

		// Token: 0x06009D3D RID: 40253 RVA: 0x00271528 File Offset: 0x0026F728
		public static LocalizedString ConfirmationMessageRemoveJournalrule(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveJournalrule", "ExF41353", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x17003336 RID: 13110
		// (get) Token: 0x06009D3E RID: 40254 RVA: 0x00271557 File Offset: 0x0026F757
		public static LocalizedString ErrorIdAndOUSetTogetherUnderIgnoreDefaultScope
		{
			get
			{
				return new LocalizedString("ErrorIdAndOUSetTogetherUnderIgnoreDefaultScope", "Ex613FFA", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003337 RID: 13111
		// (get) Token: 0x06009D3F RID: 40255 RVA: 0x00271575 File Offset: 0x0026F775
		public static LocalizedString ConfirmationMessageExportTransportRuleCollection
		{
			get
			{
				return new LocalizedString("ConfirmationMessageExportTransportRuleCollection", "ExD452E2", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003338 RID: 13112
		// (get) Token: 0x06009D40 RID: 40256 RVA: 0x00271593 File Offset: 0x0026F793
		public static LocalizedString ErrorRuleMissingPredicate
		{
			get
			{
				return new LocalizedString("ErrorRuleMissingPredicate", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003339 RID: 13113
		// (get) Token: 0x06009D41 RID: 40257 RVA: 0x002715B1 File Offset: 0x0026F7B1
		public static LocalizedString ErrorRemoteLegacyWithE15NotAllowed
		{
			get
			{
				return new LocalizedString("ErrorRemoteLegacyWithE15NotAllowed", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700333A RID: 13114
		// (get) Token: 0x06009D42 RID: 40258 RVA: 0x002715CF File Offset: 0x0026F7CF
		public static LocalizedString InstallMailboxTransportSubmissionServiceTask
		{
			get
			{
				return new LocalizedString("InstallMailboxTransportSubmissionServiceTask", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009D43 RID: 40259 RVA: 0x002715F0 File Offset: 0x0026F7F0
		public static LocalizedString TowsXForest(string emailAddress, string url)
		{
			return new LocalizedString("TowsXForest", "", false, false, Strings.ResourceManager, new object[]
			{
				emailAddress,
				url
			});
		}

		// Token: 0x1700333B RID: 13115
		// (get) Token: 0x06009D44 RID: 40260 RVA: 0x00271623 File Offset: 0x0026F823
		public static LocalizedString ErrorOrganizationParameterRequired
		{
			get
			{
				return new LocalizedString("ErrorOrganizationParameterRequired", "Ex48A959", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700333C RID: 13116
		// (get) Token: 0x06009D45 RID: 40261 RVA: 0x00271641 File Offset: 0x0026F841
		public static LocalizedString ErrorDateRangeInvalid
		{
			get
			{
				return new LocalizedString("ErrorDateRangeInvalid", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700333D RID: 13117
		// (get) Token: 0x06009D46 RID: 40262 RVA: 0x0027165F File Offset: 0x0026F85F
		public static LocalizedString ExchangeStreamingOpticsDescription
		{
			get
			{
				return new LocalizedString("ExchangeStreamingOpticsDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700333E RID: 13118
		// (get) Token: 0x06009D47 RID: 40263 RVA: 0x0027167D File Offset: 0x0026F87D
		public static LocalizedString ErrorDepartRestrictionInvalid
		{
			get
			{
				return new LocalizedString("ErrorDepartRestrictionInvalid", "Ex4B7DB8", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700333F RID: 13119
		// (get) Token: 0x06009D48 RID: 40264 RVA: 0x0027169B File Offset: 0x0026F89B
		public static LocalizedString LocalSiteNameIsEmpty
		{
			get
			{
				return new LocalizedString("LocalSiteNameIsEmpty", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009D49 RID: 40265 RVA: 0x002716BC File Offset: 0x0026F8BC
		public static LocalizedString OwaAttachmentFileTypeInvalidCharacterException(string fieldName, int arrayIndex, string invalidType, int invalidCharIndex, char invalidChar)
		{
			return new LocalizedString("OwaAttachmentFileTypeInvalidCharacterException", "Ex4B2B10", false, true, Strings.ResourceManager, new object[]
			{
				fieldName,
				arrayIndex,
				invalidType,
				invalidCharIndex,
				invalidChar
			});
		}

		// Token: 0x17003340 RID: 13120
		// (get) Token: 0x06009D4A RID: 40266 RVA: 0x0027170B File Offset: 0x0026F90B
		public static LocalizedString InvalidIncidentReportContent
		{
			get
			{
				return new LocalizedString("InvalidIncidentReportContent", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003341 RID: 13121
		// (get) Token: 0x06009D4B RID: 40267 RVA: 0x00271729 File Offset: 0x0026F929
		public static LocalizedString CasHealthHttpResponseHeaders
		{
			get
			{
				return new LocalizedString("CasHealthHttpResponseHeaders", "ExC8B2A2", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003342 RID: 13122
		// (get) Token: 0x06009D4C RID: 40268 RVA: 0x00271747 File Offset: 0x0026F947
		public static LocalizedString SetupProgressLicenseEnforcement
		{
			get
			{
				return new LocalizedString("SetupProgressLicenseEnforcement", "Ex435A2E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009D4D RID: 40269 RVA: 0x00271768 File Offset: 0x0026F968
		public static LocalizedString FailedToRetrieveFederationMetadata(string exception)
		{
			return new LocalizedString("FailedToRetrieveFederationMetadata", "Ex32DDC4", false, true, Strings.ResourceManager, new object[]
			{
				exception
			});
		}

		// Token: 0x17003343 RID: 13123
		// (get) Token: 0x06009D4E RID: 40270 RVA: 0x00271797 File Offset: 0x0026F997
		public static LocalizedString TenantNotificationNoNotificationRecipientsSpecified
		{
			get
			{
				return new LocalizedString("TenantNotificationNoNotificationRecipientsSpecified", "Ex45E50D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009D4F RID: 40271 RVA: 0x002717B8 File Offset: 0x0026F9B8
		public static LocalizedString ConfirmationMessageRemoveActiveSyncDeviceClass(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveActiveSyncDeviceClass", "Ex0C871F", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x17003344 RID: 13124
		// (get) Token: 0x06009D50 RID: 40272 RVA: 0x002717E7 File Offset: 0x0026F9E7
		public static LocalizedString TestSearchTask
		{
			get
			{
				return new LocalizedString("TestSearchTask", "ExEAB277", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009D51 RID: 40273 RVA: 0x00271808 File Offset: 0x0026FA08
		public static LocalizedString ConfirmationMessageRemoveADPermissionAccessRights(string Identity, string AccessRights, string User)
		{
			return new LocalizedString("ConfirmationMessageRemoveADPermissionAccessRights", "Ex7BA7BC", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				AccessRights,
				User
			});
		}

		// Token: 0x06009D52 RID: 40274 RVA: 0x00271840 File Offset: 0x0026FA40
		public static LocalizedString ErrorVdirNotExisted(string app, string configFile)
		{
			return new LocalizedString("ErrorVdirNotExisted", "ExB92BC9", false, true, Strings.ResourceManager, new object[]
			{
				app,
				configFile
			});
		}

		// Token: 0x06009D53 RID: 40275 RVA: 0x00271874 File Offset: 0x0026FA74
		public static LocalizedString ErrorUserOrSecurityGroupNotUnique(string id)
		{
			return new LocalizedString("ErrorUserOrSecurityGroupNotUnique", "ExC8C26B", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x06009D54 RID: 40276 RVA: 0x002718A4 File Offset: 0x0026FAA4
		public static LocalizedString MailboxNotJunkRuleCapable(string identity)
		{
			return new LocalizedString("MailboxNotJunkRuleCapable", "Ex7D0223", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x06009D55 RID: 40277 RVA: 0x002718D4 File Offset: 0x0026FAD4
		public static LocalizedString ServiceFailedToStop(string service)
		{
			return new LocalizedString("ServiceFailedToStop", "Ex99045C", false, true, Strings.ResourceManager, new object[]
			{
				service
			});
		}

		// Token: 0x17003345 RID: 13125
		// (get) Token: 0x06009D56 RID: 40278 RVA: 0x00271903 File Offset: 0x0026FB03
		public static LocalizedString SetupProgressUMFaxEnabled
		{
			get
			{
				return new LocalizedString("SetupProgressUMFaxEnabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009D57 RID: 40279 RVA: 0x00271924 File Offset: 0x0026FB24
		public static LocalizedString ErrorVerificationCodeUnmatch(string passcode)
		{
			return new LocalizedString("ErrorVerificationCodeUnmatch", "ExF89182", false, true, Strings.ResourceManager, new object[]
			{
				passcode
			});
		}

		// Token: 0x17003346 RID: 13126
		// (get) Token: 0x06009D58 RID: 40280 RVA: 0x00271953 File Offset: 0x0026FB53
		public static LocalizedString ErrorMultipleDefaultRetentionPolicy
		{
			get
			{
				return new LocalizedString("ErrorMultipleDefaultRetentionPolicy", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003347 RID: 13127
		// (get) Token: 0x06009D59 RID: 40281 RVA: 0x00271971 File Offset: 0x0026FB71
		public static LocalizedString SetupProgressCreateOutOfTheBoxReducedMrmTags
		{
			get
			{
				return new LocalizedString("SetupProgressCreateOutOfTheBoxReducedMrmTags", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009D5A RID: 40282 RVA: 0x00271990 File Offset: 0x0026FB90
		public static LocalizedString AgentLogNoLogsAtLocation(string location)
		{
			return new LocalizedString("AgentLogNoLogsAtLocation", "", false, false, Strings.ResourceManager, new object[]
			{
				location
			});
		}

		// Token: 0x17003348 RID: 13128
		// (get) Token: 0x06009D5B RID: 40283 RVA: 0x002719BF File Offset: 0x0026FBBF
		public static LocalizedString ComplianceSearchCreateTaskActivity
		{
			get
			{
				return new LocalizedString("ComplianceSearchCreateTaskActivity", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009D5C RID: 40284 RVA: 0x002719E0 File Offset: 0x0026FBE0
		public static LocalizedString CasHealthOwaGetLogonPageStart(string url)
		{
			return new LocalizedString("CasHealthOwaGetLogonPageStart", "Ex0D7D00", false, true, Strings.ResourceManager, new object[]
			{
				url
			});
		}

		// Token: 0x17003349 RID: 13129
		// (get) Token: 0x06009D5D RID: 40285 RVA: 0x00271A0F File Offset: 0x0026FC0F
		public static LocalizedString SupportedToolsCannotFindFile
		{
			get
			{
				return new LocalizedString("SupportedToolsCannotFindFile", "Ex787421", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009D5E RID: 40286 RVA: 0x00271A30 File Offset: 0x0026FC30
		public static LocalizedString DagTaskNodeNotFoundTryConfigOnlyException(string machineName, string clusterName)
		{
			return new LocalizedString("DagTaskNodeNotFoundTryConfigOnlyException", "", false, false, Strings.ResourceManager, new object[]
			{
				machineName,
				clusterName
			});
		}

		// Token: 0x1700334A RID: 13130
		// (get) Token: 0x06009D5F RID: 40287 RVA: 0x00271A63 File Offset: 0x0026FC63
		public static LocalizedString LegacyRegistryMarkersComponentDescription
		{
			get
			{
				return new LocalizedString("LegacyRegistryMarkersComponentDescription", "ExF4D72E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009D60 RID: 40288 RVA: 0x00271A84 File Offset: 0x0026FC84
		public static LocalizedString RunningAlwaysToRunComponent(string component)
		{
			return new LocalizedString("RunningAlwaysToRunComponent", "Ex1713D3", false, true, Strings.ResourceManager, new object[]
			{
				component
			});
		}

		// Token: 0x06009D61 RID: 40289 RVA: 0x00271AB4 File Offset: 0x0026FCB4
		public static LocalizedString NoPermissionToReadFile(string file)
		{
			return new LocalizedString("NoPermissionToReadFile", "ExC29EA7", false, true, Strings.ResourceManager, new object[]
			{
				file
			});
		}

		// Token: 0x1700334B RID: 13131
		// (get) Token: 0x06009D62 RID: 40290 RVA: 0x00271AE3 File Offset: 0x0026FCE3
		public static LocalizedString NoMailboxAssociationIdentityProvided
		{
			get
			{
				return new LocalizedString("NoMailboxAssociationIdentityProvided", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700334C RID: 13132
		// (get) Token: 0x06009D63 RID: 40291 RVA: 0x00271B01 File Offset: 0x0026FD01
		public static LocalizedString VerboseFixingEmailAddressPolicyFilterMetadata
		{
			get
			{
				return new LocalizedString("VerboseFixingEmailAddressPolicyFilterMetadata", "ExC2168A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700334D RID: 13133
		// (get) Token: 0x06009D64 RID: 40292 RVA: 0x00271B1F File Offset: 0x0026FD1F
		public static LocalizedString ADAttributeOtherPhoneNumber
		{
			get
			{
				return new LocalizedString("ADAttributeOtherPhoneNumber", "Ex9CB2A6", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009D65 RID: 40293 RVA: 0x00271B40 File Offset: 0x0026FD40
		public static LocalizedString ExchangeUpgradeBucketNotEnoughCapacity(string bucket, string bucketCapacity, string orgMailboxes)
		{
			return new LocalizedString("ExchangeUpgradeBucketNotEnoughCapacity", "", false, false, Strings.ResourceManager, new object[]
			{
				bucket,
				bucketCapacity,
				orgMailboxes
			});
		}

		// Token: 0x1700334E RID: 13134
		// (get) Token: 0x06009D66 RID: 40294 RVA: 0x00271B77 File Offset: 0x0026FD77
		public static LocalizedString AdvertiseClientSettingsWithoutExchangeUsersPermissionGroups
		{
			get
			{
				return new LocalizedString("AdvertiseClientSettingsWithoutExchangeUsersPermissionGroups", "Ex6CD14A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009D67 RID: 40295 RVA: 0x00271B98 File Offset: 0x0026FD98
		public static LocalizedString VerboseRemovingRoleAssignment(string id)
		{
			return new LocalizedString("VerboseRemovingRoleAssignment", "Ex1888CF", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x06009D68 RID: 40296 RVA: 0x00271BC8 File Offset: 0x0026FDC8
		public static LocalizedString ConfirmationMessageSetCountryList(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetCountryList", "Ex4354B0", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x1700334F RID: 13135
		// (get) Token: 0x06009D69 RID: 40297 RVA: 0x00271BF7 File Offset: 0x0026FDF7
		public static LocalizedString NoPrivateKeyInImportedTrustedPublishingDomain
		{
			get
			{
				return new LocalizedString("NoPrivateKeyInImportedTrustedPublishingDomain", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009D6A RID: 40298 RVA: 0x00271C18 File Offset: 0x0026FE18
		public static LocalizedString ErrorDisableArbitrationMailboxWithOABsAssigned(string mbxId)
		{
			return new LocalizedString("ErrorDisableArbitrationMailboxWithOABsAssigned", "", false, false, Strings.ResourceManager, new object[]
			{
				mbxId
			});
		}

		// Token: 0x06009D6B RID: 40299 RVA: 0x00271C48 File Offset: 0x0026FE48
		public static LocalizedString VerboseResetAdministrativeGroup(string id)
		{
			return new LocalizedString("VerboseResetAdministrativeGroup", "ExB92DC2", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x06009D6C RID: 40300 RVA: 0x00271C78 File Offset: 0x0026FE78
		public static LocalizedString ErrorMailboxDatabaseNotOnE14Sp1Server(string database)
		{
			return new LocalizedString("ErrorMailboxDatabaseNotOnE14Sp1Server", "Ex78D81F", false, true, Strings.ResourceManager, new object[]
			{
				database
			});
		}

		// Token: 0x06009D6D RID: 40301 RVA: 0x00271CA8 File Offset: 0x0026FEA8
		public static LocalizedString AllAlternateServiceAccountCredentialsAreInvalidOnCleanup(string fqdn)
		{
			return new LocalizedString("AllAlternateServiceAccountCredentialsAreInvalidOnCleanup", "Ex749937", false, true, Strings.ResourceManager, new object[]
			{
				fqdn
			});
		}

		// Token: 0x06009D6E RID: 40302 RVA: 0x00271CD8 File Offset: 0x0026FED8
		public static LocalizedString TestSearchRunning(string user)
		{
			return new LocalizedString("TestSearchRunning", "Ex24B8FF", false, true, Strings.ResourceManager, new object[]
			{
				user
			});
		}

		// Token: 0x06009D6F RID: 40303 RVA: 0x00271D08 File Offset: 0x0026FF08
		public static LocalizedString EnableConversationsProcessingConversations(string user)
		{
			return new LocalizedString("EnableConversationsProcessingConversations", "Ex6BBA57", false, true, Strings.ResourceManager, new object[]
			{
				user
			});
		}

		// Token: 0x06009D70 RID: 40304 RVA: 0x00271D38 File Offset: 0x0026FF38
		public static LocalizedString ErrorMailboxNotUnique(string identity)
		{
			return new LocalizedString("ErrorMailboxNotUnique", "Ex838C9A", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x06009D71 RID: 40305 RVA: 0x00271D68 File Offset: 0x0026FF68
		public static LocalizedString ErrorCannotUpdateLegacyMailbox(string mailbox)
		{
			return new LocalizedString("ErrorCannotUpdateLegacyMailbox", "Ex6FD99C", false, true, Strings.ResourceManager, new object[]
			{
				mailbox
			});
		}

		// Token: 0x06009D72 RID: 40306 RVA: 0x00271D98 File Offset: 0x0026FF98
		public static LocalizedString RegistryValueMissingOrInvalidException(string keyPath, string valueName)
		{
			return new LocalizedString("RegistryValueMissingOrInvalidException", "", false, false, Strings.ResourceManager, new object[]
			{
				keyPath,
				valueName
			});
		}

		// Token: 0x17003350 RID: 13136
		// (get) Token: 0x06009D73 RID: 40307 RVA: 0x00271DCB File Offset: 0x0026FFCB
		public static LocalizedString CasHealthCasServerNotFound
		{
			get
			{
				return new LocalizedString("CasHealthCasServerNotFound", "Ex870341", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003351 RID: 13137
		// (get) Token: 0x06009D74 RID: 40308 RVA: 0x00271DE9 File Offset: 0x0026FFE9
		public static LocalizedString CasHealthCalendarShortName
		{
			get
			{
				return new LocalizedString("CasHealthCalendarShortName", "ExEFA4CB", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009D75 RID: 40309 RVA: 0x00271E08 File Offset: 0x00270008
		public static LocalizedString FailedToDeSerializeImportedTrustedPublishingDomain(Exception ex)
		{
			return new LocalizedString("FailedToDeSerializeImportedTrustedPublishingDomain", "", false, false, Strings.ResourceManager, new object[]
			{
				ex
			});
		}

		// Token: 0x06009D76 RID: 40310 RVA: 0x00271E38 File Offset: 0x00270038
		public static LocalizedString TenantAlreadyHasMigrationDifferentProtocol(string tenantName, string protocolname)
		{
			return new LocalizedString("TenantAlreadyHasMigrationDifferentProtocol", "Ex84750B", false, true, Strings.ResourceManager, new object[]
			{
				tenantName,
				protocolname
			});
		}

		// Token: 0x17003352 RID: 13138
		// (get) Token: 0x06009D77 RID: 40311 RVA: 0x00271E6B File Offset: 0x0027006B
		public static LocalizedString ErrorCannotMovePublicFoldersWithNullEntryId
		{
			get
			{
				return new LocalizedString("ErrorCannotMovePublicFoldersWithNullEntryId", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003353 RID: 13139
		// (get) Token: 0x06009D78 RID: 40312 RVA: 0x00271E89 File Offset: 0x00270089
		public static LocalizedString ChangePasswordFailed
		{
			get
			{
				return new LocalizedString("ChangePasswordFailed", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009D79 RID: 40313 RVA: 0x00271EA8 File Offset: 0x002700A8
		public static LocalizedString ErrorMailuserWithMultipleJournalArchive(string journalAddress)
		{
			return new LocalizedString("ErrorMailuserWithMultipleJournalArchive", "", false, false, Strings.ResourceManager, new object[]
			{
				journalAddress
			});
		}

		// Token: 0x06009D7A RID: 40314 RVA: 0x00271ED8 File Offset: 0x002700D8
		public static LocalizedString ErrorUserOrContactNotFound(string id)
		{
			return new LocalizedString("ErrorUserOrContactNotFound", "ExA3CBA1", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x17003354 RID: 13140
		// (get) Token: 0x06009D7B RID: 40315 RVA: 0x00271F07 File Offset: 0x00270107
		public static LocalizedString CasHealthOwaCredentialFailure
		{
			get
			{
				return new LocalizedString("CasHealthOwaCredentialFailure", "Ex32D139", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009D7C RID: 40316 RVA: 0x00271F28 File Offset: 0x00270128
		public static LocalizedString ConfirmationMessageNewDatabaseAvailabilityGroupConfiguration(string Server)
		{
			return new LocalizedString("ConfirmationMessageNewDatabaseAvailabilityGroupConfiguration", "", false, false, Strings.ResourceManager, new object[]
			{
				Server
			});
		}

		// Token: 0x17003355 RID: 13141
		// (get) Token: 0x06009D7D RID: 40317 RVA: 0x00271F57 File Offset: 0x00270157
		public static LocalizedString ErrorNetIDWithoutBypassWLIDInSet
		{
			get
			{
				return new LocalizedString("ErrorNetIDWithoutBypassWLIDInSet", "ExC96311", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009D7E RID: 40318 RVA: 0x00271F78 File Offset: 0x00270178
		public static LocalizedString CheckReportingServerDatabaseParameters(string errorMsg)
		{
			return new LocalizedString("CheckReportingServerDatabaseParameters", "Ex0FC867", false, true, Strings.ResourceManager, new object[]
			{
				errorMsg
			});
		}

		// Token: 0x06009D7F RID: 40319 RVA: 0x00271FA8 File Offset: 0x002701A8
		public static LocalizedString ErrorNoAutoGroupApprovalApplicationInOrg(string org)
		{
			return new LocalizedString("ErrorNoAutoGroupApprovalApplicationInOrg", "Ex62D362", false, true, Strings.ResourceManager, new object[]
			{
				org
			});
		}

		// Token: 0x06009D80 RID: 40320 RVA: 0x00271FD8 File Offset: 0x002701D8
		public static LocalizedString WaitingForClusterServiceToStart(string serverName)
		{
			return new LocalizedString("WaitingForClusterServiceToStart", "Ex4C5136", false, true, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		// Token: 0x17003356 RID: 13142
		// (get) Token: 0x06009D81 RID: 40321 RVA: 0x00272007 File Offset: 0x00270207
		public static LocalizedString PhoneNumberAllowedOnlyOnE164ConsumerDialplanWithCountryCode
		{
			get
			{
				return new LocalizedString("PhoneNumberAllowedOnlyOnE164ConsumerDialplanWithCountryCode", "ExAA7B90", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003357 RID: 13143
		// (get) Token: 0x06009D82 RID: 40322 RVA: 0x00272025 File Offset: 0x00270225
		public static LocalizedString UninstallOldMailSubmissionServiceTask
		{
			get
			{
				return new LocalizedString("UninstallOldMailSubmissionServiceTask", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003358 RID: 13144
		// (get) Token: 0x06009D83 RID: 40323 RVA: 0x00272043 File Offset: 0x00270243
		public static LocalizedString DefaultAllContacts
		{
			get
			{
				return new LocalizedString("DefaultAllContacts", "ExF0DAE6", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009D84 RID: 40324 RVA: 0x00272064 File Offset: 0x00270264
		public static LocalizedString WarningApplyingTransitionWhileRelocationStatusNotReachedStateRequested(string identity, string requested, string status)
		{
			return new LocalizedString("WarningApplyingTransitionWhileRelocationStatusNotReachedStateRequested", "", false, false, Strings.ResourceManager, new object[]
			{
				identity,
				requested,
				status
			});
		}

		// Token: 0x06009D85 RID: 40325 RVA: 0x0027209C File Offset: 0x0027029C
		public static LocalizedString SeederCancelDbSeedRpcFailedException(string dbName, string targetMachine, string errMessage)
		{
			return new LocalizedString("SeederCancelDbSeedRpcFailedException", "", false, false, Strings.ResourceManager, new object[]
			{
				dbName,
				targetMachine,
				errMessage
			});
		}

		// Token: 0x17003359 RID: 13145
		// (get) Token: 0x06009D86 RID: 40326 RVA: 0x002720D3 File Offset: 0x002702D3
		public static LocalizedString UsingMonitoringMailboxAuthenticationCredentials
		{
			get
			{
				return new LocalizedString("UsingMonitoringMailboxAuthenticationCredentials", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009D87 RID: 40327 RVA: 0x002720F4 File Offset: 0x002702F4
		public static LocalizedString ConfirmationMessageSetManagementRoleEntry(string Name, string Role)
		{
			return new LocalizedString("ConfirmationMessageSetManagementRoleEntry", "Ex582010", false, true, Strings.ResourceManager, new object[]
			{
				Name,
				Role
			});
		}

		// Token: 0x06009D88 RID: 40328 RVA: 0x00272128 File Offset: 0x00270328
		public static LocalizedString MailboxIsDownlevel(string userDisplayName)
		{
			return new LocalizedString("MailboxIsDownlevel", "Ex872D51", false, true, Strings.ResourceManager, new object[]
			{
				userDisplayName
			});
		}

		// Token: 0x06009D89 RID: 40329 RVA: 0x00272158 File Offset: 0x00270358
		public static LocalizedString ConfirmationMessageNewGlobalAddressList(string Name)
		{
			return new LocalizedString("ConfirmationMessageNewGlobalAddressList", "ExEFDD42", false, true, Strings.ResourceManager, new object[]
			{
				Name
			});
		}

		// Token: 0x06009D8A RID: 40330 RVA: 0x00272188 File Offset: 0x00270388
		public static LocalizedString MoveFailedValidation(string validationMessage)
		{
			return new LocalizedString("MoveFailedValidation", "Ex17BE10", false, true, Strings.ResourceManager, new object[]
			{
				validationMessage
			});
		}

		// Token: 0x06009D8B RID: 40331 RVA: 0x002721B8 File Offset: 0x002703B8
		public static LocalizedString ErrorMoveActiveCopyNotFoundException(Guid db, string errorMsg)
		{
			return new LocalizedString("ErrorMoveActiveCopyNotFoundException", "", false, false, Strings.ResourceManager, new object[]
			{
				db,
				errorMsg
			});
		}

		// Token: 0x1700335A RID: 13146
		// (get) Token: 0x06009D8C RID: 40332 RVA: 0x002721F0 File Offset: 0x002703F0
		public static LocalizedString IntegratedVDirNotSupported
		{
			get
			{
				return new LocalizedString("IntegratedVDirNotSupported", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009D8D RID: 40333 RVA: 0x00272210 File Offset: 0x00270410
		public static LocalizedString ExpirationTimeTooSoon(DateTime time)
		{
			return new LocalizedString("ExpirationTimeTooSoon", "ExFAD392", false, true, Strings.ResourceManager, new object[]
			{
				time
			});
		}

		// Token: 0x1700335B RID: 13147
		// (get) Token: 0x06009D8E RID: 40334 RVA: 0x00272244 File Offset: 0x00270444
		public static LocalizedString SetupProgressCreateRBACPoliciesContainer
		{
			get
			{
				return new LocalizedString("SetupProgressCreateRBACPoliciesContainer", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009D8F RID: 40335 RVA: 0x00272264 File Offset: 0x00270464
		public static LocalizedString ConfirmationMessageNewRBACDefaultPolicy(string Name, string Roles)
		{
			return new LocalizedString("ConfirmationMessageNewRBACDefaultPolicy", "Ex363755", false, true, Strings.ResourceManager, new object[]
			{
				Name,
				Roles
			});
		}

		// Token: 0x06009D90 RID: 40336 RVA: 0x00272298 File Offset: 0x00270498
		public static LocalizedString RoleTaskCount(string role, int count)
		{
			return new LocalizedString("RoleTaskCount", "ExD02B10", false, true, Strings.ResourceManager, new object[]
			{
				role,
				count
			});
		}

		// Token: 0x1700335C RID: 13148
		// (get) Token: 0x06009D91 RID: 40337 RVA: 0x002722D0 File Offset: 0x002704D0
		public static LocalizedString ProtectedServiceHostDescription
		{
			get
			{
				return new LocalizedString("ProtectedServiceHostDescription", "Ex6186EF", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009D92 RID: 40338 RVA: 0x002722F0 File Offset: 0x002704F0
		public static LocalizedString ErrorCannotFindDCForDomain(string domainDN)
		{
			return new LocalizedString("ErrorCannotFindDCForDomain", "Ex1B1D6E", false, true, Strings.ResourceManager, new object[]
			{
				domainDN
			});
		}

		// Token: 0x06009D93 RID: 40339 RVA: 0x00272320 File Offset: 0x00270520
		public static LocalizedString VerboseCheckLogFileExistingInPath(string server, string path)
		{
			return new LocalizedString("VerboseCheckLogFileExistingInPath", "ExC6D662", false, true, Strings.ResourceManager, new object[]
			{
				server,
				path
			});
		}

		// Token: 0x06009D94 RID: 40340 RVA: 0x00272354 File Offset: 0x00270554
		public static LocalizedString AlsEmailBodyStartDate(string date)
		{
			return new LocalizedString("AlsEmailBodyStartDate", "", false, false, Strings.ResourceManager, new object[]
			{
				date
			});
		}

		// Token: 0x06009D95 RID: 40341 RVA: 0x00272384 File Offset: 0x00270584
		public static LocalizedString SearchCompletedCannotBeResumed(string name)
		{
			return new LocalizedString("SearchCompletedCannotBeResumed", "ExD9A7E3", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x06009D96 RID: 40342 RVA: 0x002723B4 File Offset: 0x002705B4
		public static LocalizedString ErrorNoRemoteGlobalCatalogSettingForLocalMove(string identity)
		{
			return new LocalizedString("ErrorNoRemoteGlobalCatalogSettingForLocalMove", "Ex3202D2", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x06009D97 RID: 40343 RVA: 0x002723E4 File Offset: 0x002705E4
		public static LocalizedString VerboseDefaultOABFound(string id)
		{
			return new LocalizedString("VerboseDefaultOABFound", "ExFD42E4", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x1700335D RID: 13149
		// (get) Token: 0x06009D98 RID: 40344 RVA: 0x00272413 File Offset: 0x00270613
		public static LocalizedString ErrorTemplateAndTemplateDataCannotBothBeDefined
		{
			get
			{
				return new LocalizedString("ErrorTemplateAndTemplateDataCannotBothBeDefined", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700335E RID: 13150
		// (get) Token: 0x06009D99 RID: 40345 RVA: 0x00272431 File Offset: 0x00270631
		public static LocalizedString SetupComponentMidFileCopyMonitoring
		{
			get
			{
				return new LocalizedString("SetupComponentMidFileCopyMonitoring", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009D9A RID: 40346 RVA: 0x00272450 File Offset: 0x00270650
		public static LocalizedString InfoPreLIndividual(RightsManagementFailureCode failureCode)
		{
			return new LocalizedString("InfoPreLIndividual", "Ex15CE6A", false, true, Strings.ResourceManager, new object[]
			{
				failureCode
			});
		}

		// Token: 0x1700335F RID: 13151
		// (get) Token: 0x06009D9B RID: 40347 RVA: 0x00272484 File Offset: 0x00270684
		public static LocalizedString SetupProgressStartingCredentialService
		{
			get
			{
				return new LocalizedString("SetupProgressStartingCredentialService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009D9C RID: 40348 RVA: 0x002724A4 File Offset: 0x002706A4
		public static LocalizedString OnPremisesOrganizationOrganizationRelationshipNotExists(OrganizationRelationshipIdParameter identity)
		{
			return new LocalizedString("OnPremisesOrganizationOrganizationRelationshipNotExists", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x06009D9D RID: 40349 RVA: 0x002724D4 File Offset: 0x002706D4
		public static LocalizedString InvalidIntegrityCheckJobIdentity(string identity)
		{
			return new LocalizedString("InvalidIntegrityCheckJobIdentity", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x17003360 RID: 13152
		// (get) Token: 0x06009D9E RID: 40350 RVA: 0x00272503 File Offset: 0x00270703
		public static LocalizedString CasHealthEasSyncOne
		{
			get
			{
				return new LocalizedString("CasHealthEasSyncOne", "ExB0EF01", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003361 RID: 13153
		// (get) Token: 0x06009D9F RID: 40351 RVA: 0x00272521 File Offset: 0x00270721
		public static LocalizedString MachinePingScenario
		{
			get
			{
				return new LocalizedString("MachinePingScenario", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009DA0 RID: 40352 RVA: 0x00272540 File Offset: 0x00270740
		public static LocalizedString ErrorAutomaticProvisioningFailedToFindDatabase(string parameterName)
		{
			return new LocalizedString("ErrorAutomaticProvisioningFailedToFindDatabase", "", false, false, Strings.ResourceManager, new object[]
			{
				parameterName
			});
		}

		// Token: 0x17003362 RID: 13154
		// (get) Token: 0x06009DA1 RID: 40353 RVA: 0x0027256F File Offset: 0x0027076F
		public static LocalizedString ProcessUtilizationManagerServiceDescription
		{
			get
			{
				return new LocalizedString("ProcessUtilizationManagerServiceDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009DA2 RID: 40354 RVA: 0x00272590 File Offset: 0x00270790
		public static LocalizedString ErrorPartitionNotEnabledForProvisioning(string partitionName)
		{
			return new LocalizedString("ErrorPartitionNotEnabledForProvisioning", "", false, false, Strings.ResourceManager, new object[]
			{
				partitionName
			});
		}

		// Token: 0x06009DA3 RID: 40355 RVA: 0x002725C0 File Offset: 0x002707C0
		public static LocalizedString RequiredDecryptionCertificate(string ski)
		{
			return new LocalizedString("RequiredDecryptionCertificate", "", false, false, Strings.ResourceManager, new object[]
			{
				ski
			});
		}

		// Token: 0x06009DA4 RID: 40356 RVA: 0x002725F0 File Offset: 0x002707F0
		public static LocalizedString ConfirmationMessageRemoveUser(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveUser", "ExA5E17C", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x17003363 RID: 13155
		// (get) Token: 0x06009DA5 RID: 40357 RVA: 0x0027261F File Offset: 0x0027081F
		public static LocalizedString TenantAlreadyHasMigrationPending
		{
			get
			{
				return new LocalizedString("TenantAlreadyHasMigrationPending", "Ex3EE219", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009DA6 RID: 40358 RVA: 0x00272640 File Offset: 0x00270840
		public static LocalizedString InvalidReportingStartDate(DateTime startDate)
		{
			return new LocalizedString("InvalidReportingStartDate", "ExA56D5B", false, true, Strings.ResourceManager, new object[]
			{
				startDate
			});
		}

		// Token: 0x06009DA7 RID: 40359 RVA: 0x00272674 File Offset: 0x00270874
		public static LocalizedString ErrorReHomeTargetDatabaseLocationNotFound(string database)
		{
			return new LocalizedString("ErrorReHomeTargetDatabaseLocationNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				database
			});
		}

		// Token: 0x17003364 RID: 13156
		// (get) Token: 0x06009DA8 RID: 40360 RVA: 0x002726A3 File Offset: 0x002708A3
		public static LocalizedString OwaMetabaseStopBinFilteringFailure
		{
			get
			{
				return new LocalizedString("OwaMetabaseStopBinFilteringFailure", "ExC31788", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009DA9 RID: 40361 RVA: 0x002726C4 File Offset: 0x002708C4
		public static LocalizedString GetQueueDigestSiteNotFound(AdSiteIdParameter adObjectId)
		{
			return new LocalizedString("GetQueueDigestSiteNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				adObjectId
			});
		}

		// Token: 0x06009DAA RID: 40362 RVA: 0x002726F4 File Offset: 0x002708F4
		public static LocalizedString ConfirmationMessageNewTopLevelManagementRole(string Name)
		{
			return new LocalizedString("ConfirmationMessageNewTopLevelManagementRole", "ExE613B3", false, true, Strings.ResourceManager, new object[]
			{
				Name
			});
		}

		// Token: 0x06009DAB RID: 40363 RVA: 0x00272724 File Offset: 0x00270924
		public static LocalizedString PopImapSearchForTestMsg(string subject)
		{
			return new LocalizedString("PopImapSearchForTestMsg", "Ex1B1BB5", false, true, Strings.ResourceManager, new object[]
			{
				subject
			});
		}

		// Token: 0x17003365 RID: 13157
		// (get) Token: 0x06009DAC RID: 40364 RVA: 0x00272753 File Offset: 0x00270953
		public static LocalizedString CasHealthEasScenarioPing
		{
			get
			{
				return new LocalizedString("CasHealthEasScenarioPing", "ExAC0B2B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009DAD RID: 40365 RVA: 0x00272774 File Offset: 0x00270974
		public static LocalizedString ErrorDlpPolicyNotFound(string identity)
		{
			return new LocalizedString("ErrorDlpPolicyNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x17003366 RID: 13158
		// (get) Token: 0x06009DAE RID: 40366 RVA: 0x002727A3 File Offset: 0x002709A3
		public static LocalizedString CreateEcpForOwaWarning
		{
			get
			{
				return new LocalizedString("CreateEcpForOwaWarning", "Ex8DD5BC", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009DAF RID: 40367 RVA: 0x002727C4 File Offset: 0x002709C4
		public static LocalizedString ConfirmationMessageDisableTransportRule(string Identity)
		{
			return new LocalizedString("ConfirmationMessageDisableTransportRule", "Ex0D50B7", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x06009DB0 RID: 40368 RVA: 0x002727F4 File Offset: 0x002709F4
		public static LocalizedString LookupExtendedRightFailedException(string right)
		{
			return new LocalizedString("LookupExtendedRightFailedException", "Ex7EF958", false, true, Strings.ResourceManager, new object[]
			{
				right
			});
		}

		// Token: 0x06009DB1 RID: 40369 RVA: 0x00272824 File Offset: 0x00270A24
		public static LocalizedString ErrorRecipientViewRootNotFoundUnderScope(string ou, string scope)
		{
			return new LocalizedString("ErrorRecipientViewRootNotFoundUnderScope", "Ex3A25E7", false, true, Strings.ResourceManager, new object[]
			{
				ou,
				scope
			});
		}

		// Token: 0x06009DB2 RID: 40370 RVA: 0x00272858 File Offset: 0x00270A58
		public static LocalizedString ErrorCannotChangeMailboxOutOfWriteScope(string mbx, string reason)
		{
			return new LocalizedString("ErrorCannotChangeMailboxOutOfWriteScope", "Ex90FC38", false, true, Strings.ResourceManager, new object[]
			{
				mbx,
				reason
			});
		}

		// Token: 0x06009DB3 RID: 40371 RVA: 0x0027288C File Offset: 0x00270A8C
		public static LocalizedString ConfirmationMessageRemoveDelegate(string Identity, string Group, string Role)
		{
			return new LocalizedString("ConfirmationMessageRemoveDelegate", "ExAEC004", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				Group,
				Role
			});
		}

		// Token: 0x06009DB4 RID: 40372 RVA: 0x002728C4 File Offset: 0x00270AC4
		public static LocalizedString ErrorMailboxServerNotUnique(string idStringValue)
		{
			return new LocalizedString("ErrorMailboxServerNotUnique", "Ex204A49", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		// Token: 0x06009DB5 RID: 40373 RVA: 0x002728F4 File Offset: 0x00270AF4
		public static LocalizedString LogMigrationAfterApplyRUS(string alias, string proxyAddresses)
		{
			return new LocalizedString("LogMigrationAfterApplyRUS", "Ex1EC934", false, true, Strings.ResourceManager, new object[]
			{
				alias,
				proxyAddresses
			});
		}

		// Token: 0x17003367 RID: 13159
		// (get) Token: 0x06009DB6 RID: 40374 RVA: 0x00272927 File Offset: 0x00270B27
		public static LocalizedString ConfirmationMessageTestEdgeSyncMserv
		{
			get
			{
				return new LocalizedString("ConfirmationMessageTestEdgeSyncMserv", "Ex3161CB", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009DB7 RID: 40375 RVA: 0x00272948 File Offset: 0x00270B48
		public static LocalizedString ErrorCannotCreateRoleAcrossOrganizations(string currentOrg, string parentRole, string parentOrg)
		{
			return new LocalizedString("ErrorCannotCreateRoleAcrossOrganizations", "Ex68CD6B", false, true, Strings.ResourceManager, new object[]
			{
				currentOrg,
				parentRole,
				parentOrg
			});
		}

		// Token: 0x06009DB8 RID: 40376 RVA: 0x00272980 File Offset: 0x00270B80
		public static LocalizedString ErrorAuthNewCertificateExpire(string thumbprint)
		{
			return new LocalizedString("ErrorAuthNewCertificateExpire", "", false, false, Strings.ResourceManager, new object[]
			{
				thumbprint
			});
		}

		// Token: 0x17003368 RID: 13160
		// (get) Token: 0x06009DB9 RID: 40377 RVA: 0x002729AF File Offset: 0x00270BAF
		public static LocalizedString ErrorCannotRemovePublicFolderMailboxWithFolders
		{
			get
			{
				return new LocalizedString("ErrorCannotRemovePublicFolderMailboxWithFolders", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003369 RID: 13161
		// (get) Token: 0x06009DBA RID: 40378 RVA: 0x002729CD File Offset: 0x00270BCD
		public static LocalizedString UMCallAnsweringRuleLeaveVoiceMessage
		{
			get
			{
				return new LocalizedString("UMCallAnsweringRuleLeaveVoiceMessage", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009DBB RID: 40379 RVA: 0x002729EC File Offset: 0x00270BEC
		public static LocalizedString ExchangeCertificateUpdatedForUM(string server)
		{
			return new LocalizedString("ExchangeCertificateUpdatedForUM", "Ex86FAD9", false, true, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		// Token: 0x1700336A RID: 13162
		// (get) Token: 0x06009DBC RID: 40380 RVA: 0x00272A1B File Offset: 0x00270C1B
		public static LocalizedString MicrosoftExchangeContainerNotFoundException
		{
			get
			{
				return new LocalizedString("MicrosoftExchangeContainerNotFoundException", "Ex0A8CF2", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009DBD RID: 40381 RVA: 0x00272A3C File Offset: 0x00270C3C
		public static LocalizedString UnableToRemoveUserPhotoException(string identity, string failure)
		{
			return new LocalizedString("UnableToRemoveUserPhotoException", "", false, false, Strings.ResourceManager, new object[]
			{
				identity,
				failure
			});
		}

		// Token: 0x1700336B RID: 13163
		// (get) Token: 0x06009DBE RID: 40382 RVA: 0x00272A6F File Offset: 0x00270C6F
		public static LocalizedString CannotFindSubscriptionSite
		{
			get
			{
				return new LocalizedString("CannotFindSubscriptionSite", "ExFA160E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009DBF RID: 40383 RVA: 0x00272A90 File Offset: 0x00270C90
		public static LocalizedString ErrorUnsupportedAssignmentMethod(string assignmentMethod)
		{
			return new LocalizedString("ErrorUnsupportedAssignmentMethod", "Ex334F21", false, true, Strings.ResourceManager, new object[]
			{
				assignmentMethod
			});
		}

		// Token: 0x06009DC0 RID: 40384 RVA: 0x00272AC0 File Offset: 0x00270CC0
		public static LocalizedString ErrorGroupMembersCannotContainItself(string id)
		{
			return new LocalizedString("ErrorGroupMembersCannotContainItself", "Ex6B2848", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x1700336C RID: 13164
		// (get) Token: 0x06009DC1 RID: 40385 RVA: 0x00272AEF File Offset: 0x00270CEF
		public static LocalizedString CasHealtRemotePowerShellOpenRunspaceSucceeded
		{
			get
			{
				return new LocalizedString("CasHealtRemotePowerShellOpenRunspaceSucceeded", "ExFB4330", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009DC2 RID: 40386 RVA: 0x00272B10 File Offset: 0x00270D10
		public static LocalizedString ErrorPasswordTooShort(string memberName)
		{
			return new LocalizedString("ErrorPasswordTooShort", "Ex8FDC23", false, true, Strings.ResourceManager, new object[]
			{
				memberName
			});
		}

		// Token: 0x1700336D RID: 13165
		// (get) Token: 0x06009DC3 RID: 40387 RVA: 0x00272B3F File Offset: 0x00270D3F
		public static LocalizedString CasHealthEasScenarioDeleteItem
		{
			get
			{
				return new LocalizedString("CasHealthEasScenarioDeleteItem", "ExA29736", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009DC4 RID: 40388 RVA: 0x00272B60 File Offset: 0x00270D60
		public static LocalizedString ErrorRequestIsProtected(string mailbox)
		{
			return new LocalizedString("ErrorRequestIsProtected", "ExA4FC0C", false, true, Strings.ResourceManager, new object[]
			{
				mailbox
			});
		}

		// Token: 0x06009DC5 RID: 40389 RVA: 0x00272B90 File Offset: 0x00270D90
		public static LocalizedString ConfirmationMessageSetFederationTrust1(string Identity, string Thumbprint, string metadataUrl)
		{
			return new LocalizedString("ConfirmationMessageSetFederationTrust1", "Ex96F52B", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				Thumbprint,
				metadataUrl
			});
		}

		// Token: 0x06009DC6 RID: 40390 RVA: 0x00272BC8 File Offset: 0x00270DC8
		public static LocalizedString UserFederatedDomainInMultipleRemoteOrgRelationship(string userFedDomain, string remoteOrgRel)
		{
			return new LocalizedString("UserFederatedDomainInMultipleRemoteOrgRelationship", "", false, false, Strings.ResourceManager, new object[]
			{
				userFedDomain,
				remoteOrgRel
			});
		}

		// Token: 0x06009DC7 RID: 40391 RVA: 0x00272BFC File Offset: 0x00270DFC
		public static LocalizedString ConfirmationMessageAddMailboxFolderPermission(string Identity, string User, string AccessRights)
		{
			return new LocalizedString("ConfirmationMessageAddMailboxFolderPermission", "ExB14F60", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				User,
				AccessRights
			});
		}

		// Token: 0x1700336E RID: 13166
		// (get) Token: 0x06009DC8 RID: 40392 RVA: 0x00272C33 File Offset: 0x00270E33
		public static LocalizedString ConfirmationMessageInstallSystemMessageClassification
		{
			get
			{
				return new LocalizedString("ConfirmationMessageInstallSystemMessageClassification", "ExDCF461", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009DC9 RID: 40393 RVA: 0x00272C54 File Offset: 0x00270E54
		public static LocalizedString InfoWroteObjectToDC(string server, string dn)
		{
			return new LocalizedString("InfoWroteObjectToDC", "Ex423EDF", false, true, Strings.ResourceManager, new object[]
			{
				server,
				dn
			});
		}

		// Token: 0x06009DCA RID: 40394 RVA: 0x00272C88 File Offset: 0x00270E88
		public static LocalizedString ErrorOwaMailboxPolicyNotFound(string idStringValue)
		{
			return new LocalizedString("ErrorOwaMailboxPolicyNotFound", "Ex881212", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		// Token: 0x1700336F RID: 13167
		// (get) Token: 0x06009DCB RID: 40395 RVA: 0x00272CB7 File Offset: 0x00270EB7
		public static LocalizedString CasHealthWebAppLiveIdStart
		{
			get
			{
				return new LocalizedString("CasHealthWebAppLiveIdStart", "ExE9305A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009DCC RID: 40396 RVA: 0x00272CD8 File Offset: 0x00270ED8
		public static LocalizedString NewFederationTrustSuccessAppId(string partnerSTS, string appId)
		{
			return new LocalizedString("NewFederationTrustSuccessAppId", "ExBCF35E", false, true, Strings.ResourceManager, new object[]
			{
				partnerSTS,
				appId
			});
		}

		// Token: 0x06009DCD RID: 40397 RVA: 0x00272D0C File Offset: 0x00270F0C
		public static LocalizedString ErrorCannotUpdateRecipientOfDomain(string domainFqdn, string errorMessage)
		{
			return new LocalizedString("ErrorCannotUpdateRecipientOfDomain", "Ex5E4B39", false, true, Strings.ResourceManager, new object[]
			{
				domainFqdn,
				errorMessage
			});
		}

		// Token: 0x17003370 RID: 13168
		// (get) Token: 0x06009DCE RID: 40398 RVA: 0x00272D3F File Offset: 0x00270F3F
		public static LocalizedString SetupProgressMailUserCountQuota
		{
			get
			{
				return new LocalizedString("SetupProgressMailUserCountQuota", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003371 RID: 13169
		// (get) Token: 0x06009DCF RID: 40399 RVA: 0x00272D5D File Offset: 0x00270F5D
		public static LocalizedString PhoneNumberIsNotE164
		{
			get
			{
				return new LocalizedString("PhoneNumberIsNotE164", "Ex2D8988", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003372 RID: 13170
		// (get) Token: 0x06009DD0 RID: 40400 RVA: 0x00272D7B File Offset: 0x00270F7B
		public static LocalizedString AssistantsServiceDisplayName
		{
			get
			{
				return new LocalizedString("AssistantsServiceDisplayName", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009DD1 RID: 40401 RVA: 0x00272D9C File Offset: 0x00270F9C
		public static LocalizedString MapiTransactionDiagnosticStoreStateCheckFailure(string errorMsg)
		{
			return new LocalizedString("MapiTransactionDiagnosticStoreStateCheckFailure", "ExF63898", false, true, Strings.ResourceManager, new object[]
			{
				errorMsg
			});
		}

		// Token: 0x06009DD2 RID: 40402 RVA: 0x00272DCC File Offset: 0x00270FCC
		public static LocalizedString ErrorDbCopyHostServerInvalid(string dbCopyName)
		{
			return new LocalizedString("ErrorDbCopyHostServerInvalid", "", false, false, Strings.ResourceManager, new object[]
			{
				dbCopyName
			});
		}

		// Token: 0x06009DD3 RID: 40403 RVA: 0x00272DFC File Offset: 0x00270FFC
		public static LocalizedString ErrorInvalidMoveRequest(string identity, string validationMessage)
		{
			return new LocalizedString("ErrorInvalidMoveRequest", "ExDFC442", false, true, Strings.ResourceManager, new object[]
			{
				identity,
				validationMessage
			});
		}

		// Token: 0x17003373 RID: 13171
		// (get) Token: 0x06009DD4 RID: 40404 RVA: 0x00272E2F File Offset: 0x0027102F
		public static LocalizedString ErrorRmsOnlineAuthenticationCertificateNotFound
		{
			get
			{
				return new LocalizedString("ErrorRmsOnlineAuthenticationCertificateNotFound", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009DD5 RID: 40405 RVA: 0x00272E50 File Offset: 0x00271050
		public static LocalizedString ConfirmationMessageRemoveMailContact(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveMailContact", "Ex1A0048", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x17003374 RID: 13172
		// (get) Token: 0x06009DD6 RID: 40406 RVA: 0x00272E7F File Offset: 0x0027107F
		public static LocalizedString WordIsWhiteSpace
		{
			get
			{
				return new LocalizedString("WordIsWhiteSpace", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009DD7 RID: 40407 RVA: 0x00272EA0 File Offset: 0x002710A0
		public static LocalizedString ConfirmationMessageStartMsoFullSync(string orgId, string syncType)
		{
			return new LocalizedString("ConfirmationMessageStartMsoFullSync", "ExC18733", false, true, Strings.ResourceManager, new object[]
			{
				orgId,
				syncType
			});
		}

		// Token: 0x17003375 RID: 13173
		// (get) Token: 0x06009DD8 RID: 40408 RVA: 0x00272ED3 File Offset: 0x002710D3
		public static LocalizedString ErrorCannotSetJournalingReportNdrTo
		{
			get
			{
				return new LocalizedString("ErrorCannotSetJournalingReportNdrTo", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009DD9 RID: 40409 RVA: 0x00272EF4 File Offset: 0x002710F4
		public static LocalizedString ExceptionParameterSourceForestGlobalCatalog(string sourceForestGCParameter, string gcParameter)
		{
			return new LocalizedString("ExceptionParameterSourceForestGlobalCatalog", "ExABE0CA", false, true, Strings.ResourceManager, new object[]
			{
				sourceForestGCParameter,
				gcParameter
			});
		}

		// Token: 0x06009DDA RID: 40410 RVA: 0x00272F28 File Offset: 0x00271128
		public static LocalizedString ConfirmationMessageSetExchangeAssistanceId(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetExchangeAssistanceId", "Ex09CC5C", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x06009DDB RID: 40411 RVA: 0x00272F58 File Offset: 0x00271158
		public static LocalizedString OverrideNotFound(string identity, string type, string propertyName)
		{
			return new LocalizedString("OverrideNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				identity,
				type,
				propertyName
			});
		}

		// Token: 0x06009DDC RID: 40412 RVA: 0x00272F90 File Offset: 0x00271190
		public static LocalizedString CreateUsgPermissionDeniedException(string dn)
		{
			return new LocalizedString("CreateUsgPermissionDeniedException", "ExD99086", false, true, Strings.ResourceManager, new object[]
			{
				dn
			});
		}

		// Token: 0x06009DDD RID: 40413 RVA: 0x00272FC0 File Offset: 0x002711C0
		public static LocalizedString VerboseSettingWriteShadowProperties(string value)
		{
			return new LocalizedString("VerboseSettingWriteShadowProperties", "Ex84F2A8", false, true, Strings.ResourceManager, new object[]
			{
				value
			});
		}

		// Token: 0x17003376 RID: 13174
		// (get) Token: 0x06009DDE RID: 40414 RVA: 0x00272FEF File Offset: 0x002711EF
		public static LocalizedString SetupProgressOwaDelegateAccessEnabled
		{
			get
			{
				return new LocalizedString("SetupProgressOwaDelegateAccessEnabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003377 RID: 13175
		// (get) Token: 0x06009DDF RID: 40415 RVA: 0x0027300D File Offset: 0x0027120D
		public static LocalizedString RMSServerIsNotConfigured
		{
			get
			{
				return new LocalizedString("RMSServerIsNotConfigured", "ExDB14FB", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003378 RID: 13176
		// (get) Token: 0x06009DE0 RID: 40416 RVA: 0x0027302B File Offset: 0x0027122B
		public static LocalizedString UMNotAvailableForUserInTargetForest
		{
			get
			{
				return new LocalizedString("UMNotAvailableForUserInTargetForest", "Ex2BF818", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003379 RID: 13177
		// (get) Token: 0x06009DE1 RID: 40417 RVA: 0x00273049 File Offset: 0x00271249
		public static LocalizedString SetServiceInstanceMapResultCodeUnspecifiedError
		{
			get
			{
				return new LocalizedString("SetServiceInstanceMapResultCodeUnspecifiedError", "ExAA06F9", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700337A RID: 13178
		// (get) Token: 0x06009DE2 RID: 40418 RVA: 0x00273067 File Offset: 0x00271267
		public static LocalizedString SetupComponentProvisioningFeatures
		{
			get
			{
				return new LocalizedString("SetupComponentProvisioningFeatures", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009DE3 RID: 40419 RVA: 0x00273088 File Offset: 0x00271288
		public static LocalizedString ConfirmationMessageUpdateFDS(string Identity)
		{
			return new LocalizedString("ConfirmationMessageUpdateFDS", "Ex051685", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x06009DE4 RID: 40420 RVA: 0x002730B8 File Offset: 0x002712B8
		public static LocalizedString ErrorIISPathInvalid(string iisPath)
		{
			return new LocalizedString("ErrorIISPathInvalid", "Ex7F124A", false, true, Strings.ResourceManager, new object[]
			{
				iisPath
			});
		}

		// Token: 0x1700337B RID: 13179
		// (get) Token: 0x06009DE5 RID: 40421 RVA: 0x002730E7 File Offset: 0x002712E7
		public static LocalizedString CasHealthOwaTrustAnyCertificate
		{
			get
			{
				return new LocalizedString("CasHealthOwaTrustAnyCertificate", "ExE5B624", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700337C RID: 13180
		// (get) Token: 0x06009DE6 RID: 40422 RVA: 0x00273105 File Offset: 0x00271305
		public static LocalizedString CasHealthEasScenarioOptions
		{
			get
			{
				return new LocalizedString("CasHealthEasScenarioOptions", "Ex1F3236", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009DE7 RID: 40423 RVA: 0x00273124 File Offset: 0x00271324
		public static LocalizedString CasHealthWebAppOrphanVirtualDirectory(LocalizedString applicationShortName, string name)
		{
			return new LocalizedString("CasHealthWebAppOrphanVirtualDirectory", "Ex45FAFC", false, true, Strings.ResourceManager, new object[]
			{
				applicationShortName,
				name
			});
		}

		// Token: 0x06009DE8 RID: 40424 RVA: 0x0027315C File Offset: 0x0027135C
		public static LocalizedString ErrorOriginalEdbFilePathMissed(string database)
		{
			return new LocalizedString("ErrorOriginalEdbFilePathMissed", "ExE0101C", false, true, Strings.ResourceManager, new object[]
			{
				database
			});
		}

		// Token: 0x06009DE9 RID: 40425 RVA: 0x0027318C File Offset: 0x0027138C
		public static LocalizedString ErrorCannotCleanupSecondaryDomain(string exception)
		{
			return new LocalizedString("ErrorCannotCleanupSecondaryDomain", "Ex6B756C", false, true, Strings.ResourceManager, new object[]
			{
				exception
			});
		}

		// Token: 0x06009DEA RID: 40426 RVA: 0x002731BC File Offset: 0x002713BC
		public static LocalizedString ErrorRemoveMailboxWithLitigationHold(string mbxId)
		{
			return new LocalizedString("ErrorRemoveMailboxWithLitigationHold", "", false, false, Strings.ResourceManager, new object[]
			{
				mbxId
			});
		}

		// Token: 0x1700337D RID: 13181
		// (get) Token: 0x06009DEB RID: 40427 RVA: 0x002731EB File Offset: 0x002713EB
		public static LocalizedString ErrorCannotDeleteGlobalThrottlingPolicy
		{
			get
			{
				return new LocalizedString("ErrorCannotDeleteGlobalThrottlingPolicy", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009DEC RID: 40428 RVA: 0x0027320C File Offset: 0x0027140C
		public static LocalizedString ErrorCannotSetToOldClientAccessArray(string arrayVersion, string minSupportedVersion)
		{
			return new LocalizedString("ErrorCannotSetToOldClientAccessArray", "", false, false, Strings.ResourceManager, new object[]
			{
				arrayVersion,
				minSupportedVersion
			});
		}

		// Token: 0x1700337E RID: 13182
		// (get) Token: 0x06009DED RID: 40429 RVA: 0x0027323F File Offset: 0x0027143F
		public static LocalizedString NewMailboxSearchActivity
		{
			get
			{
				return new LocalizedString("NewMailboxSearchActivity", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700337F RID: 13183
		// (get) Token: 0x06009DEE RID: 40430 RVA: 0x0027325D File Offset: 0x0027145D
		public static LocalizedString JournalingParameterErrorGccWithScope
		{
			get
			{
				return new LocalizedString("JournalingParameterErrorGccWithScope", "Ex7D11B4", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009DEF RID: 40431 RVA: 0x0027327C File Offset: 0x0027147C
		public static LocalizedString ErrorUnableToUpdateGroupMailbox(string error)
		{
			return new LocalizedString("ErrorUnableToUpdateGroupMailbox", "", false, false, Strings.ResourceManager, new object[]
			{
				error
			});
		}

		// Token: 0x06009DF0 RID: 40432 RVA: 0x002732AC File Offset: 0x002714AC
		public static LocalizedString ErrorNotActiveOrganization(string orgId)
		{
			return new LocalizedString("ErrorNotActiveOrganization", "", false, false, Strings.ResourceManager, new object[]
			{
				orgId
			});
		}

		// Token: 0x06009DF1 RID: 40433 RVA: 0x002732DC File Offset: 0x002714DC
		public static LocalizedString ExceptionOccured(string message)
		{
			return new LocalizedString("ExceptionOccured", "Ex9F0AB3", false, true, Strings.ResourceManager, new object[]
			{
				message
			});
		}

		// Token: 0x17003380 RID: 13184
		// (get) Token: 0x06009DF2 RID: 40434 RVA: 0x0027330B File Offset: 0x0027150B
		public static LocalizedString CasHealthOwaNoAuthChallenge
		{
			get
			{
				return new LocalizedString("CasHealthOwaNoAuthChallenge", "ExCBA41D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009DF3 RID: 40435 RVA: 0x0027332C File Offset: 0x0027152C
		public static LocalizedString ErrorAssigneeComputerNotFound(string id)
		{
			return new LocalizedString("ErrorAssigneeComputerNotFound", "Ex093D2C", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x06009DF4 RID: 40436 RVA: 0x0027335C File Offset: 0x0027155C
		public static LocalizedString ExportingMailbox(string identity, string sourceServer, string pstFilePath)
		{
			return new LocalizedString("ExportingMailbox", "Ex119C3E", false, true, Strings.ResourceManager, new object[]
			{
				identity,
				sourceServer,
				pstFilePath
			});
		}

		// Token: 0x17003381 RID: 13185
		// (get) Token: 0x06009DF5 RID: 40437 RVA: 0x00273393 File Offset: 0x00271593
		public static LocalizedString InstallMailboxReplicationServiceTask
		{
			get
			{
				return new LocalizedString("InstallMailboxReplicationServiceTask", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003382 RID: 13186
		// (get) Token: 0x06009DF6 RID: 40438 RVA: 0x002733B1 File Offset: 0x002715B1
		public static LocalizedString ExportAutoDiscoverSameForest
		{
			get
			{
				return new LocalizedString("ExportAutoDiscoverSameForest", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009DF7 RID: 40439 RVA: 0x002733D0 File Offset: 0x002715D0
		public static LocalizedString ConfirmationMessageAddRoleGroupMember(string Identity, string Member)
		{
			return new LocalizedString("ConfirmationMessageAddRoleGroupMember", "Ex4ADCAC", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				Member
			});
		}

		// Token: 0x06009DF8 RID: 40440 RVA: 0x00273404 File Offset: 0x00271604
		public static LocalizedString ErrorServicePlanDoesNotSupportPilot(string name, string plan, string programId)
		{
			return new LocalizedString("ErrorServicePlanDoesNotSupportPilot", "", false, false, Strings.ResourceManager, new object[]
			{
				name,
				plan,
				programId
			});
		}

		// Token: 0x17003383 RID: 13187
		// (get) Token: 0x06009DF9 RID: 40441 RVA: 0x0027343B File Offset: 0x0027163B
		public static LocalizedString JournalRuleCorrupt
		{
			get
			{
				return new LocalizedString("JournalRuleCorrupt", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003384 RID: 13188
		// (get) Token: 0x06009DFA RID: 40442 RVA: 0x00273459 File Offset: 0x00271659
		public static LocalizedString CopyStatusSuspended
		{
			get
			{
				return new LocalizedString("CopyStatusSuspended", "ExF547EE", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003385 RID: 13189
		// (get) Token: 0x06009DFB RID: 40443 RVA: 0x00273477 File Offset: 0x00271677
		public static LocalizedString BestEffortNotAllowedInServerModeException
		{
			get
			{
				return new LocalizedString("BestEffortNotAllowedInServerModeException", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009DFC RID: 40444 RVA: 0x00273498 File Offset: 0x00271698
		public static LocalizedString ConfirmationMessageRemoveHostedContentFilterRule(string identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveHostedContentFilterRule", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x17003386 RID: 13190
		// (get) Token: 0x06009DFD RID: 40445 RVA: 0x002734C7 File Offset: 0x002716C7
		public static LocalizedString RemoveProvisionedServerDescription
		{
			get
			{
				return new LocalizedString("RemoveProvisionedServerDescription", "Ex058EA6", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003387 RID: 13191
		// (get) Token: 0x06009DFE RID: 40446 RVA: 0x002734E5 File Offset: 0x002716E5
		public static LocalizedString ErrorAuthSetNewEffectDate
		{
			get
			{
				return new LocalizedString("ErrorAuthSetNewEffectDate", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003388 RID: 13192
		// (get) Token: 0x06009DFF RID: 40447 RVA: 0x00273503 File Offset: 0x00271703
		public static LocalizedString VerboseResolvingCustomRecipientWriteScope
		{
			get
			{
				return new LocalizedString("VerboseResolvingCustomRecipientWriteScope", "Ex0CDF18", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003389 RID: 13193
		// (get) Token: 0x06009E00 RID: 40448 RVA: 0x00273521 File Offset: 0x00271721
		public static LocalizedString UninstallTranscodingServiceEx
		{
			get
			{
				return new LocalizedString("UninstallTranscodingServiceEx", "Ex110532", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700338A RID: 13194
		// (get) Token: 0x06009E01 RID: 40449 RVA: 0x0027353F File Offset: 0x0027173F
		public static LocalizedString ConfirmationMessageRemoveReportingVirtualDirectory
		{
			get
			{
				return new LocalizedString("ConfirmationMessageRemoveReportingVirtualDirectory", "Ex60FA0A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009E02 RID: 40450 RVA: 0x00273560 File Offset: 0x00271760
		public static LocalizedString ArchiveDatabaseDifferentFromRawValueError(string archiveDb, string archiveDbRaw)
		{
			return new LocalizedString("ArchiveDatabaseDifferentFromRawValueError", "", false, false, Strings.ResourceManager, new object[]
			{
				archiveDb,
				archiveDbRaw
			});
		}

		// Token: 0x06009E03 RID: 40451 RVA: 0x00273594 File Offset: 0x00271794
		public static LocalizedString ExportMailboxDiagnosticLogsComponentNotFound(string componentName, string identity, string acceptableValues)
		{
			return new LocalizedString("ExportMailboxDiagnosticLogsComponentNotFound", "Ex4988CA", false, true, Strings.ResourceManager, new object[]
			{
				componentName,
				identity,
				acceptableValues
			});
		}

		// Token: 0x1700338B RID: 13195
		// (get) Token: 0x06009E04 RID: 40452 RVA: 0x002735CB File Offset: 0x002717CB
		public static LocalizedString MtrtMessageSpamAdditional
		{
			get
			{
				return new LocalizedString("MtrtMessageSpamAdditional", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700338C RID: 13196
		// (get) Token: 0x06009E05 RID: 40453 RVA: 0x002735E9 File Offset: 0x002717E9
		public static LocalizedString ErrorProvisioningReconciliationCookieNotSet
		{
			get
			{
				return new LocalizedString("ErrorProvisioningReconciliationCookieNotSet", "ExBDE244", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009E06 RID: 40454 RVA: 0x00273608 File Offset: 0x00271808
		public static LocalizedString TestMailflowSucceededNoDatabaseOnTargetServer(string target)
		{
			return new LocalizedString("TestMailflowSucceededNoDatabaseOnTargetServer", "Ex6C055D", false, true, Strings.ResourceManager, new object[]
			{
				target
			});
		}

		// Token: 0x1700338D RID: 13197
		// (get) Token: 0x06009E07 RID: 40455 RVA: 0x00273637 File Offset: 0x00271837
		public static LocalizedString ErrorCannotMigratePublicFolderIntoNonPublicFolderMailbox
		{
			get
			{
				return new LocalizedString("ErrorCannotMigratePublicFolderIntoNonPublicFolderMailbox", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009E08 RID: 40456 RVA: 0x00273658 File Offset: 0x00271858
		public static LocalizedString DirectoryMustBeEmpty(string directory)
		{
			return new LocalizedString("DirectoryMustBeEmpty", "ExD0C911", false, true, Strings.ResourceManager, new object[]
			{
				directory
			});
		}

		// Token: 0x1700338E RID: 13198
		// (get) Token: 0x06009E09 RID: 40457 RVA: 0x00273687 File Offset: 0x00271887
		public static LocalizedString GetCalendarDiagnosticLogNoCleanGoidErrorMessage
		{
			get
			{
				return new LocalizedString("GetCalendarDiagnosticLogNoCleanGoidErrorMessage", "ExA523F4", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700338F RID: 13199
		// (get) Token: 0x06009E0A RID: 40458 RVA: 0x002736A5 File Offset: 0x002718A5
		public static LocalizedString ADAttributeCustomAttribute8
		{
			get
			{
				return new LocalizedString("ADAttributeCustomAttribute8", "Ex34464C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003390 RID: 13200
		// (get) Token: 0x06009E0B RID: 40459 RVA: 0x002736C3 File Offset: 0x002718C3
		public static LocalizedString ErrorDomainControllerNotSpecifiedWithUsnForReconciliationSearch
		{
			get
			{
				return new LocalizedString("ErrorDomainControllerNotSpecifiedWithUsnForReconciliationSearch", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009E0C RID: 40460 RVA: 0x002736E4 File Offset: 0x002718E4
		public static LocalizedString MailboxDatabaseCasImap4CasPop3CasWebServicesServiceProblemMessage(int impactedUserCount)
		{
			return new LocalizedString("MailboxDatabaseCasImap4CasPop3CasWebServicesServiceProblemMessage", "Ex24C944", false, true, Strings.ResourceManager, new object[]
			{
				impactedUserCount
			});
		}

		// Token: 0x06009E0D RID: 40461 RVA: 0x00273718 File Offset: 0x00271918
		public static LocalizedString ConfirmationMessageNewSyncUser(string Name)
		{
			return new LocalizedString("ConfirmationMessageNewSyncUser", "Ex654801", false, true, Strings.ResourceManager, new object[]
			{
				Name
			});
		}

		// Token: 0x17003391 RID: 13201
		// (get) Token: 0x06009E0E RID: 40462 RVA: 0x00273747 File Offset: 0x00271947
		public static LocalizedString SetupComponentConfiguringMDB
		{
			get
			{
				return new LocalizedString("SetupComponentConfiguringMDB", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009E0F RID: 40463 RVA: 0x00273768 File Offset: 0x00271968
		public static LocalizedString SuspendSgcRpcRequest(string sg)
		{
			return new LocalizedString("SuspendSgcRpcRequest", "Ex85A887", false, true, Strings.ResourceManager, new object[]
			{
				sg
			});
		}

		// Token: 0x06009E10 RID: 40464 RVA: 0x00273798 File Offset: 0x00271998
		public static LocalizedString ConfirmationMessageRemoveRBACPolicy(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveRBACPolicy", "ExF3BD18", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x06009E11 RID: 40465 RVA: 0x002737C8 File Offset: 0x002719C8
		public static LocalizedString ErrorArrayRemovalMembership(string identity, int serverCount)
		{
			return new LocalizedString("ErrorArrayRemovalMembership", "", false, false, Strings.ResourceManager, new object[]
			{
				identity,
				serverCount
			});
		}

		// Token: 0x17003392 RID: 13202
		// (get) Token: 0x06009E12 RID: 40466 RVA: 0x00273800 File Offset: 0x00271A00
		public static LocalizedString ProgressStopUpdateAD
		{
			get
			{
				return new LocalizedString("ProgressStopUpdateAD", "Ex6FF99A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009E13 RID: 40467 RVA: 0x00273820 File Offset: 0x00271A20
		public static LocalizedString AceIsUnsupportedTypeException(string aceType)
		{
			return new LocalizedString("AceIsUnsupportedTypeException", "Ex152A29", false, true, Strings.ResourceManager, new object[]
			{
				aceType
			});
		}

		// Token: 0x17003393 RID: 13203
		// (get) Token: 0x06009E14 RID: 40468 RVA: 0x0027384F File Offset: 0x00271A4F
		public static LocalizedString Warning
		{
			get
			{
				return new LocalizedString("Warning", "Ex3E2494", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003394 RID: 13204
		// (get) Token: 0x06009E15 RID: 40469 RVA: 0x0027386D File Offset: 0x00271A6D
		public static LocalizedString ADAttributeManager
		{
			get
			{
				return new LocalizedString("ADAttributeManager", "Ex6E8364", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009E16 RID: 40470 RVA: 0x0027388C File Offset: 0x00271A8C
		public static LocalizedString InvalidDateParameterException(DateTime startDate, DateTime endDate)
		{
			return new LocalizedString("InvalidDateParameterException", "", false, false, Strings.ResourceManager, new object[]
			{
				startDate,
				endDate
			});
		}

		// Token: 0x06009E17 RID: 40471 RVA: 0x002738CC File Offset: 0x00271ACC
		public static LocalizedString ErrorSupervisionEntryNotPresent(string entry, string tag)
		{
			return new LocalizedString("ErrorSupervisionEntryNotPresent", "ExD9FD5F", false, true, Strings.ResourceManager, new object[]
			{
				entry,
				tag
			});
		}

		// Token: 0x06009E18 RID: 40472 RVA: 0x00273900 File Offset: 0x00271B00
		public static LocalizedString DomainNotReachableException(string dom, string taskName)
		{
			return new LocalizedString("DomainNotReachableException", "Ex02887D", false, true, Strings.ResourceManager, new object[]
			{
				dom,
				taskName
			});
		}

		// Token: 0x17003395 RID: 13205
		// (get) Token: 0x06009E19 RID: 40473 RVA: 0x00273933 File Offset: 0x00271B33
		public static LocalizedString PageCookieInterruptedException
		{
			get
			{
				return new LocalizedString("PageCookieInterruptedException", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009E1A RID: 40474 RVA: 0x00273954 File Offset: 0x00271B54
		public static LocalizedString ErrorNoArchiveForTeamMailbox(string user)
		{
			return new LocalizedString("ErrorNoArchiveForTeamMailbox", "", false, false, Strings.ResourceManager, new object[]
			{
				user
			});
		}

		// Token: 0x06009E1B RID: 40475 RVA: 0x00273984 File Offset: 0x00271B84
		public static LocalizedString UnSupportedUMLanguageException(string language)
		{
			return new LocalizedString("UnSupportedUMLanguageException", "", false, false, Strings.ResourceManager, new object[]
			{
				language
			});
		}

		// Token: 0x06009E1C RID: 40476 RVA: 0x002739B4 File Offset: 0x00271BB4
		public static LocalizedString ErrorUnableToReleaseDomain(string domain, string appId, string errdetails)
		{
			return new LocalizedString("ErrorUnableToReleaseDomain", "Ex74A241", false, true, Strings.ResourceManager, new object[]
			{
				domain,
				appId,
				errdetails
			});
		}

		// Token: 0x06009E1D RID: 40477 RVA: 0x002739EC File Offset: 0x00271BEC
		public static LocalizedString ErrorActivateOnServerMustbeSpecifiedIfSkipChecksRequested(string dbName, bool isSkipCEC, bool isSkipHealth, bool isSkipLag)
		{
			return new LocalizedString("ErrorActivateOnServerMustbeSpecifiedIfSkipChecksRequested", "ExA53135", false, true, Strings.ResourceManager, new object[]
			{
				dbName,
				isSkipCEC,
				isSkipHealth,
				isSkipLag
			});
		}

		// Token: 0x06009E1E RID: 40478 RVA: 0x00273A38 File Offset: 0x00271C38
		public static LocalizedString ConfirmationMessageRemoveOwaVirtualDirectory(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveOwaVirtualDirectory", "Ex8F49F9", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x06009E1F RID: 40479 RVA: 0x00273A68 File Offset: 0x00271C68
		public static LocalizedString WarningMailboxFolderPermissionUnchanged(string identity)
		{
			return new LocalizedString("WarningMailboxFolderPermissionUnchanged", "Ex008798", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x17003396 RID: 13206
		// (get) Token: 0x06009E20 RID: 40480 RVA: 0x00273A97 File Offset: 0x00271C97
		public static LocalizedString DatacenterClientAccessPerfCountersComponentDescription
		{
			get
			{
				return new LocalizedString("DatacenterClientAccessPerfCountersComponentDescription", "Ex7B085F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009E21 RID: 40481 RVA: 0x00273AB8 File Offset: 0x00271CB8
		public static LocalizedString SetPublicFolderMailboxRehomeDatabaseConfirmationMessage(string mbxIdentity)
		{
			return new LocalizedString("SetPublicFolderMailboxRehomeDatabaseConfirmationMessage", "", false, false, Strings.ResourceManager, new object[]
			{
				mbxIdentity
			});
		}

		// Token: 0x17003397 RID: 13207
		// (get) Token: 0x06009E22 RID: 40482 RVA: 0x00273AE7 File Offset: 0x00271CE7
		public static LocalizedString IndividualRecipient
		{
			get
			{
				return new LocalizedString("IndividualRecipient", "Ex5A8A85", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009E23 RID: 40483 RVA: 0x00273B08 File Offset: 0x00271D08
		public static LocalizedString AmbiguousOutlookProbeIdentity(string probeIdentity, string ambiguous1, string ambiguous2)
		{
			return new LocalizedString("AmbiguousOutlookProbeIdentity", "", false, false, Strings.ResourceManager, new object[]
			{
				probeIdentity,
				ambiguous1,
				ambiguous2
			});
		}

		// Token: 0x17003398 RID: 13208
		// (get) Token: 0x06009E24 RID: 40484 RVA: 0x00273B3F File Offset: 0x00271D3F
		public static LocalizedString MalboxFolderRightsCreateItems
		{
			get
			{
				return new LocalizedString("MalboxFolderRightsCreateItems", "ExBE007B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009E25 RID: 40485 RVA: 0x00273B60 File Offset: 0x00271D60
		public static LocalizedString ProtocolConnectivityScenario(string protocol)
		{
			return new LocalizedString("ProtocolConnectivityScenario", "ExED614D", false, true, Strings.ResourceManager, new object[]
			{
				protocol
			});
		}

		// Token: 0x17003399 RID: 13209
		// (get) Token: 0x06009E26 RID: 40486 RVA: 0x00273B8F File Offset: 0x00271D8F
		public static LocalizedString RuleStateDisabled
		{
			get
			{
				return new LocalizedString("RuleStateDisabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009E27 RID: 40487 RVA: 0x00273BB0 File Offset: 0x00271DB0
		public static LocalizedString RuleVersionIncompatible(string server, string rulename)
		{
			return new LocalizedString("RuleVersionIncompatible", "Ex5E78D1", false, true, Strings.ResourceManager, new object[]
			{
				server,
				rulename
			});
		}

		// Token: 0x1700339A RID: 13210
		// (get) Token: 0x06009E28 RID: 40488 RVA: 0x00273BE3 File Offset: 0x00271DE3
		public static LocalizedString MalboxFolderRightsReadItems
		{
			get
			{
				return new LocalizedString("MalboxFolderRightsReadItems", "ExFD8466", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700339B RID: 13211
		// (get) Token: 0x06009E29 RID: 40489 RVA: 0x00273C01 File Offset: 0x00271E01
		public static LocalizedString SetupProgressSyncAccountsMaxAccountsQuota
		{
			get
			{
				return new LocalizedString("SetupProgressSyncAccountsMaxAccountsQuota", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009E2A RID: 40490 RVA: 0x00273C20 File Offset: 0x00271E20
		public static LocalizedString GetQueueDigestFailedToRetrieveADTopology(string error)
		{
			return new LocalizedString("GetQueueDigestFailedToRetrieveADTopology", "", false, false, Strings.ResourceManager, new object[]
			{
				error
			});
		}

		// Token: 0x1700339C RID: 13212
		// (get) Token: 0x06009E2B RID: 40491 RVA: 0x00273C4F File Offset: 0x00271E4F
		public static LocalizedString DatabaseSeedStatusLabelWritten
		{
			get
			{
				return new LocalizedString("DatabaseSeedStatusLabelWritten", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700339D RID: 13213
		// (get) Token: 0x06009E2C RID: 40492 RVA: 0x00273C6D File Offset: 0x00271E6D
		public static LocalizedString ErrorSetPasswordForLogonDisabledAccount
		{
			get
			{
				return new LocalizedString("ErrorSetPasswordForLogonDisabledAccount", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700339E RID: 13214
		// (get) Token: 0x06009E2D RID: 40493 RVA: 0x00273C8B File Offset: 0x00271E8B
		public static LocalizedString MonitoringServiceCheckDesc
		{
			get
			{
				return new LocalizedString("MonitoringServiceCheckDesc", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700339F RID: 13215
		// (get) Token: 0x06009E2E RID: 40494 RVA: 0x00273CA9 File Offset: 0x00271EA9
		public static LocalizedString SiteParameterRequired
		{
			get
			{
				return new LocalizedString("SiteParameterRequired", "Ex6C61A8", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009E2F RID: 40495 RVA: 0x00273CC8 File Offset: 0x00271EC8
		public static LocalizedString ConfirmationMessageSetMservEntry(string id)
		{
			return new LocalizedString("ConfirmationMessageSetMservEntry", "", false, false, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x06009E30 RID: 40496 RVA: 0x00273CF8 File Offset: 0x00271EF8
		public static LocalizedString ExchangeTracingProviderInstallFailed(int errorHresult)
		{
			return new LocalizedString("ExchangeTracingProviderInstallFailed", "ExD6BA1A", false, true, Strings.ResourceManager, new object[]
			{
				errorHresult
			});
		}

		// Token: 0x06009E31 RID: 40497 RVA: 0x00273D2C File Offset: 0x00271F2C
		public static LocalizedString ExceptionLogEntryLineInvalidFile(int vline, string vfile)
		{
			return new LocalizedString("ExceptionLogEntryLineInvalidFile", "ExEE68EB", false, true, Strings.ResourceManager, new object[]
			{
				vline,
				vfile
			});
		}

		// Token: 0x06009E32 RID: 40498 RVA: 0x00273D64 File Offset: 0x00271F64
		public static LocalizedString GetDagHealthInfoRequestTimedOut(int timeoutSecs)
		{
			return new LocalizedString("GetDagHealthInfoRequestTimedOut", "", false, false, Strings.ResourceManager, new object[]
			{
				timeoutSecs
			});
		}

		// Token: 0x170033A0 RID: 13216
		// (get) Token: 0x06009E33 RID: 40499 RVA: 0x00273D98 File Offset: 0x00271F98
		public static LocalizedString IisTasksVirtualDirectoryValidationProperty
		{
			get
			{
				return new LocalizedString("IisTasksVirtualDirectoryValidationProperty", "ExE35E19", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009E34 RID: 40500 RVA: 0x00273DB8 File Offset: 0x00271FB8
		public static LocalizedString VerboseUsingAssignmentAsTemplate(string id)
		{
			return new LocalizedString("VerboseUsingAssignmentAsTemplate", "Ex6BF2DC", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x06009E35 RID: 40501 RVA: 0x00273DE8 File Offset: 0x00271FE8
		public static LocalizedString ErrorCreateRoomListSecurityGroup(string idRecipient)
		{
			return new LocalizedString("ErrorCreateRoomListSecurityGroup", "Ex03CD58", false, true, Strings.ResourceManager, new object[]
			{
				idRecipient
			});
		}

		// Token: 0x170033A1 RID: 13217
		// (get) Token: 0x06009E36 RID: 40502 RVA: 0x00273E17 File Offset: 0x00272017
		public static LocalizedString NullCurrentOrganizationIdException
		{
			get
			{
				return new LocalizedString("NullCurrentOrganizationIdException", "ExCAAE50", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009E37 RID: 40503 RVA: 0x00273E38 File Offset: 0x00272038
		public static LocalizedString ErrorCannotForceRusResetConfiguration(string dc, string message)
		{
			return new LocalizedString("ErrorCannotForceRusResetConfiguration", "Ex2C7986", false, true, Strings.ResourceManager, new object[]
			{
				dc,
				message
			});
		}

		// Token: 0x06009E38 RID: 40504 RVA: 0x00273E6C File Offset: 0x0027206C
		public static LocalizedString ErrorSpecifiedMailboxShouldBeAuditLogMailbox(string identity)
		{
			return new LocalizedString("ErrorSpecifiedMailboxShouldBeAuditLogMailbox", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x170033A2 RID: 13218
		// (get) Token: 0x06009E39 RID: 40505 RVA: 0x00273E9B File Offset: 0x0027209B
		public static LocalizedString ClassificationRuleCollectionIllegalScopedSetOobOperation
		{
			get
			{
				return new LocalizedString("ClassificationRuleCollectionIllegalScopedSetOobOperation", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009E3A RID: 40506 RVA: 0x00273EBC File Offset: 0x002720BC
		public static LocalizedString SendConnectorDuplicateTargetServerException(string server)
		{
			return new LocalizedString("SendConnectorDuplicateTargetServerException", "Ex4D243B", false, true, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		// Token: 0x06009E3B RID: 40507 RVA: 0x00273EEC File Offset: 0x002720EC
		public static LocalizedString ErrorFailedToRestoreDatabaseStatus(string databaseName, string errorMessage)
		{
			return new LocalizedString("ErrorFailedToRestoreDatabaseStatus", "ExB1FE1F", false, true, Strings.ResourceManager, new object[]
			{
				databaseName,
				errorMessage
			});
		}

		// Token: 0x06009E3C RID: 40508 RVA: 0x00273F20 File Offset: 0x00272120
		public static LocalizedString WarningTooManyDefaultGALs(int length)
		{
			return new LocalizedString("WarningTooManyDefaultGALs", "Ex50F302", false, true, Strings.ResourceManager, new object[]
			{
				length
			});
		}

		// Token: 0x170033A3 RID: 13219
		// (get) Token: 0x06009E3D RID: 40509 RVA: 0x00273F54 File Offset: 0x00272154
		public static LocalizedString InvalidSmtpAddress
		{
			get
			{
				return new LocalizedString("InvalidSmtpAddress", "Ex830FD1", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009E3E RID: 40510 RVA: 0x00273F74 File Offset: 0x00272174
		public static LocalizedString InvalidSubscription(string subscription)
		{
			return new LocalizedString("InvalidSubscription", "Ex6C04D6", false, true, Strings.ResourceManager, new object[]
			{
				subscription
			});
		}

		// Token: 0x06009E3F RID: 40511 RVA: 0x00273FA4 File Offset: 0x002721A4
		public static LocalizedString InvalidRuleSearchFilter(string filter, string errorMessage)
		{
			return new LocalizedString("InvalidRuleSearchFilter", "", false, false, Strings.ResourceManager, new object[]
			{
				filter,
				errorMessage
			});
		}

		// Token: 0x06009E40 RID: 40512 RVA: 0x00273FD8 File Offset: 0x002721D8
		public static LocalizedString ConfirmationMessageAddIPBlockListEntryIPAddress(string IPAddress)
		{
			return new LocalizedString("ConfirmationMessageAddIPBlockListEntryIPAddress", "Ex5DB00A", false, true, Strings.ResourceManager, new object[]
			{
				IPAddress
			});
		}

		// Token: 0x170033A4 RID: 13220
		// (get) Token: 0x06009E41 RID: 40513 RVA: 0x00274007 File Offset: 0x00272207
		public static LocalizedString TestOrganizationRelationshipError
		{
			get
			{
				return new LocalizedString("TestOrganizationRelationshipError", "ExA961E9", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009E42 RID: 40514 RVA: 0x00274028 File Offset: 0x00272228
		public static LocalizedString OutlookProtectionRuleRmsTemplateNotUnique(string name)
		{
			return new LocalizedString("OutlookProtectionRuleRmsTemplateNotUnique", "Ex29D6D0", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x06009E43 RID: 40515 RVA: 0x00274058 File Offset: 0x00272258
		public static LocalizedString ConfirmationMessageNewRetentionTag(string Name)
		{
			return new LocalizedString("ConfirmationMessageNewRetentionTag", "ExE6A4D7", false, true, Strings.ResourceManager, new object[]
			{
				Name
			});
		}

		// Token: 0x06009E44 RID: 40516 RVA: 0x00274088 File Offset: 0x00272288
		public static LocalizedString ConfirmationMessageDisableMailbox(string Identity)
		{
			return new LocalizedString("ConfirmationMessageDisableMailbox", "Ex256889", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x06009E45 RID: 40517 RVA: 0x002740B8 File Offset: 0x002722B8
		public static LocalizedString ConfirmationMessageRemoveMailboxIdentity(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveMailboxIdentity", "Ex13CF83", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x170033A5 RID: 13221
		// (get) Token: 0x06009E46 RID: 40518 RVA: 0x002740E7 File Offset: 0x002722E7
		public static LocalizedString SetupProgressStartingContentIndexingService
		{
			get
			{
				return new LocalizedString("SetupProgressStartingContentIndexingService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009E47 RID: 40519 RVA: 0x00274108 File Offset: 0x00272308
		public static LocalizedString ErrorUnsupportedRecipientScopeType(string id, string type)
		{
			return new LocalizedString("ErrorUnsupportedRecipientScopeType", "ExEE090B", false, true, Strings.ResourceManager, new object[]
			{
				id,
				type
			});
		}

		// Token: 0x170033A6 RID: 13222
		// (get) Token: 0x06009E48 RID: 40520 RVA: 0x0027413B File Offset: 0x0027233B
		public static LocalizedString CasHealthOwaLogonError
		{
			get
			{
				return new LocalizedString("CasHealthOwaLogonError", "ExD30AA1", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009E49 RID: 40521 RVA: 0x0027415C File Offset: 0x0027235C
		public static LocalizedString ConfirmRemoveIndexEntryMissingADData(string indexEntry)
		{
			return new LocalizedString("ConfirmRemoveIndexEntryMissingADData", "ExE8237B", false, true, Strings.ResourceManager, new object[]
			{
				indexEntry
			});
		}

		// Token: 0x06009E4A RID: 40522 RVA: 0x0027418C File Offset: 0x0027238C
		public static LocalizedString ErrorTeamMailboxChangeByNonMember(string tm)
		{
			return new LocalizedString("ErrorTeamMailboxChangeByNonMember", "", false, false, Strings.ResourceManager, new object[]
			{
				tm
			});
		}

		// Token: 0x06009E4B RID: 40523 RVA: 0x002741BC File Offset: 0x002723BC
		public static LocalizedString FailedToGetLogs(string user, string error)
		{
			return new LocalizedString("FailedToGetLogs", "ExED430D", false, true, Strings.ResourceManager, new object[]
			{
				user,
				error
			});
		}

		// Token: 0x06009E4C RID: 40524 RVA: 0x002741F0 File Offset: 0x002723F0
		public static LocalizedString WarningMultipleStreamForFingerprint(int streamCount, string streamName)
		{
			return new LocalizedString("WarningMultipleStreamForFingerprint", "", false, false, Strings.ResourceManager, new object[]
			{
				streamCount,
				streamName
			});
		}

		// Token: 0x170033A7 RID: 13223
		// (get) Token: 0x06009E4D RID: 40525 RVA: 0x00274228 File Offset: 0x00272428
		public static LocalizedString Error_KnowniPhoneIssues
		{
			get
			{
				return new LocalizedString("Error_KnowniPhoneIssues", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009E4E RID: 40526 RVA: 0x00274248 File Offset: 0x00272448
		public static LocalizedString WarningNoMonitoringTenant(string id)
		{
			return new LocalizedString("WarningNoMonitoringTenant", "", false, false, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x06009E4F RID: 40527 RVA: 0x00274278 File Offset: 0x00272478
		public static LocalizedString ConfirmationMessageSetAutoTagging(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetAutoTagging", "ExD639ED", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x06009E50 RID: 40528 RVA: 0x002742A8 File Offset: 0x002724A8
		public static LocalizedString ErrorTenantRetentionTagLimitReached(int limit)
		{
			return new LocalizedString("ErrorTenantRetentionTagLimitReached", "", false, false, Strings.ResourceManager, new object[]
			{
				limit
			});
		}

		// Token: 0x06009E51 RID: 40529 RVA: 0x002742DC File Offset: 0x002724DC
		public static LocalizedString ConfirmationMessageMailboxSpellingConfiguration(string Identity)
		{
			return new LocalizedString("ConfirmationMessageMailboxSpellingConfiguration", "ExA59DCF", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x170033A8 RID: 13224
		// (get) Token: 0x06009E52 RID: 40530 RVA: 0x0027430B File Offset: 0x0027250B
		public static LocalizedString OwaGzipCannotBeSetToLegacyVirtualDirectoryWhenMailboxRoleInstalled
		{
			get
			{
				return new LocalizedString("OwaGzipCannotBeSetToLegacyVirtualDirectoryWhenMailboxRoleInstalled", "Ex1CCCA4", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170033A9 RID: 13225
		// (get) Token: 0x06009E53 RID: 40531 RVA: 0x00274329 File Offset: 0x00272529
		public static LocalizedString ClientAccessExchangeCertificateComponentDescription
		{
			get
			{
				return new LocalizedString("ClientAccessExchangeCertificateComponentDescription", "ExCEFC64", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009E54 RID: 40532 RVA: 0x00274348 File Offset: 0x00272548
		public static LocalizedString ErrorScopeExclusive(string scope, string parameterName)
		{
			return new LocalizedString("ErrorScopeExclusive", "Ex0CEF56", false, true, Strings.ResourceManager, new object[]
			{
				scope,
				parameterName
			});
		}

		// Token: 0x06009E55 RID: 40533 RVA: 0x0027437C File Offset: 0x0027257C
		public static LocalizedString VerboseSetScopeValidateRemoveOriginalScopedAssignment(string id, string assignmentId)
		{
			return new LocalizedString("VerboseSetScopeValidateRemoveOriginalScopedAssignment", "Ex782594", false, true, Strings.ResourceManager, new object[]
			{
				id,
				assignmentId
			});
		}

		// Token: 0x06009E56 RID: 40534 RVA: 0x002743B0 File Offset: 0x002725B0
		public static LocalizedString VerboseRemoveWorkloadManagementPolicy(string Name)
		{
			return new LocalizedString("VerboseRemoveWorkloadManagementPolicy", "", false, false, Strings.ResourceManager, new object[]
			{
				Name
			});
		}

		// Token: 0x06009E57 RID: 40535 RVA: 0x002743E0 File Offset: 0x002725E0
		public static LocalizedString ErrorSimilarWorkloadPolicyExist(string wlmPolicy, string type)
		{
			return new LocalizedString("ErrorSimilarWorkloadPolicyExist", "", false, false, Strings.ResourceManager, new object[]
			{
				wlmPolicy,
				type
			});
		}

		// Token: 0x06009E58 RID: 40536 RVA: 0x00274414 File Offset: 0x00272614
		public static LocalizedString DagFswInsufficientPermissionsToDeleteFswException(string fswMachine, string share, Exception ex)
		{
			return new LocalizedString("DagFswInsufficientPermissionsToDeleteFswException", "", false, false, Strings.ResourceManager, new object[]
			{
				fswMachine,
				share,
				ex
			});
		}

		// Token: 0x06009E59 RID: 40537 RVA: 0x0027444C File Offset: 0x0027264C
		public static LocalizedString ConfirmationMessageSetRoleGroup(string Identity, string Roles, string ManagedBy)
		{
			return new LocalizedString("ConfirmationMessageSetRoleGroup", "Ex3EDCDC", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				Roles,
				ManagedBy
			});
		}

		// Token: 0x170033AA RID: 13226
		// (get) Token: 0x06009E5A RID: 40538 RVA: 0x00274483 File Offset: 0x00272683
		public static LocalizedString SenderAndRmsOnlineParametersCannotBeCombined
		{
			get
			{
				return new LocalizedString("SenderAndRmsOnlineParametersCannotBeCombined", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170033AB RID: 13227
		// (get) Token: 0x06009E5B RID: 40539 RVA: 0x002744A1 File Offset: 0x002726A1
		public static LocalizedString TopologyServiceDisplayName
		{
			get
			{
				return new LocalizedString("TopologyServiceDisplayName", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009E5C RID: 40540 RVA: 0x002744C0 File Offset: 0x002726C0
		public static LocalizedString ConfirmationTurnOffLitigationHold(string expireTime)
		{
			return new LocalizedString("ConfirmationTurnOffLitigationHold", "", false, false, Strings.ResourceManager, new object[]
			{
				expireTime
			});
		}

		// Token: 0x06009E5D RID: 40541 RVA: 0x002744F0 File Offset: 0x002726F0
		public static LocalizedString ConfirmationMessageSetHostedConnectionFilterRule(string identity)
		{
			return new LocalizedString("ConfirmationMessageSetHostedConnectionFilterRule", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x170033AC RID: 13228
		// (get) Token: 0x06009E5E RID: 40542 RVA: 0x0027451F File Offset: 0x0027271F
		public static LocalizedString ErrorChangeConfigurationNotSupported
		{
			get
			{
				return new LocalizedString("ErrorChangeConfigurationNotSupported", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170033AD RID: 13229
		// (get) Token: 0x06009E5F RID: 40543 RVA: 0x0027453D File Offset: 0x0027273D
		public static LocalizedString InterceptorErrorConditionHeaderValueMissing
		{
			get
			{
				return new LocalizedString("InterceptorErrorConditionHeaderValueMissing", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009E60 RID: 40544 RVA: 0x0027455C File Offset: 0x0027275C
		public static LocalizedString CasHealthEcpTestWebService(string uri)
		{
			return new LocalizedString("CasHealthEcpTestWebService", "Ex3E4AA9", false, true, Strings.ResourceManager, new object[]
			{
				uri
			});
		}

		// Token: 0x170033AE RID: 13230
		// (get) Token: 0x06009E61 RID: 40545 RVA: 0x0027458B File Offset: 0x0027278B
		public static LocalizedString VerboseCheckIISConfiguration
		{
			get
			{
				return new LocalizedString("VerboseCheckIISConfiguration", "Ex362CC3", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009E62 RID: 40546 RVA: 0x002745AC File Offset: 0x002727AC
		public static LocalizedString MigrationUserLimitExceeded(int count)
		{
			return new LocalizedString("MigrationUserLimitExceeded", "", false, false, Strings.ResourceManager, new object[]
			{
				count
			});
		}

		// Token: 0x170033AF RID: 13231
		// (get) Token: 0x06009E63 RID: 40547 RVA: 0x002745E0 File Offset: 0x002727E0
		public static LocalizedString SetupComponentADSchema
		{
			get
			{
				return new LocalizedString("SetupComponentADSchema", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009E64 RID: 40548 RVA: 0x00274600 File Offset: 0x00272800
		public static LocalizedString CasHealthOwaHttpGetNonOkayForPing(int code, string name)
		{
			return new LocalizedString("CasHealthOwaHttpGetNonOkayForPing", "Ex16F7CA", false, true, Strings.ResourceManager, new object[]
			{
				code,
				name
			});
		}

		// Token: 0x06009E65 RID: 40549 RVA: 0x00274638 File Offset: 0x00272838
		public static LocalizedString ConfirmationMessageDisableRpcHttp(string Identity)
		{
			return new LocalizedString("ConfirmationMessageDisableRpcHttp", "Ex7F2CC4", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x170033B0 RID: 13232
		// (get) Token: 0x06009E66 RID: 40550 RVA: 0x00274667 File Offset: 0x00272867
		public static LocalizedString InstallingIMAP4Service
		{
			get
			{
				return new LocalizedString("InstallingIMAP4Service", "Ex4690C7", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170033B1 RID: 13233
		// (get) Token: 0x06009E67 RID: 40551 RVA: 0x00274685 File Offset: 0x00272885
		public static LocalizedString MSExchangeMGMTDisplayName
		{
			get
			{
				return new LocalizedString("MSExchangeMGMTDisplayName", "Ex360B59", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009E68 RID: 40552 RVA: 0x002746A4 File Offset: 0x002728A4
		public static LocalizedString ErrorIncrementalMergesRequireSuspendWhenReadyToComplete(string name)
		{
			return new LocalizedString("ErrorIncrementalMergesRequireSuspendWhenReadyToComplete", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x170033B2 RID: 13234
		// (get) Token: 0x06009E69 RID: 40553 RVA: 0x002746D3 File Offset: 0x002728D3
		public static LocalizedString AdminAuditLogSearchNegativeResultSize
		{
			get
			{
				return new LocalizedString("AdminAuditLogSearchNegativeResultSize", "Ex0C094F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170033B3 RID: 13235
		// (get) Token: 0x06009E6A RID: 40554 RVA: 0x002746F1 File Offset: 0x002728F1
		public static LocalizedString ConfirmationMessageNewEdgeSyncEhfConnectorOnLocalSite
		{
			get
			{
				return new LocalizedString("ConfirmationMessageNewEdgeSyncEhfConnectorOnLocalSite", "Ex85B5CE", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009E6B RID: 40555 RVA: 0x00274710 File Offset: 0x00272910
		public static LocalizedString ErrorFailedToMoveDatabaseSystemFiles(string fromPath, string toPath)
		{
			return new LocalizedString("ErrorFailedToMoveDatabaseSystemFiles", "Ex14A3B8", false, true, Strings.ResourceManager, new object[]
			{
				fromPath,
				toPath
			});
		}

		// Token: 0x06009E6C RID: 40556 RVA: 0x00274744 File Offset: 0x00272944
		public static LocalizedString WritableServerNotFound(string WritableServer)
		{
			return new LocalizedString("WritableServerNotFound", "Ex3C377A", false, true, Strings.ResourceManager, new object[]
			{
				WritableServer
			});
		}

		// Token: 0x170033B4 RID: 13236
		// (get) Token: 0x06009E6D RID: 40557 RVA: 0x00274773 File Offset: 0x00272973
		public static LocalizedString SetupProgressMailTipsEnabled
		{
			get
			{
				return new LocalizedString("SetupProgressMailTipsEnabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009E6E RID: 40558 RVA: 0x00274794 File Offset: 0x00272994
		public static LocalizedString AddAccessRuleCryptographic(string thumbprint)
		{
			return new LocalizedString("AddAccessRuleCryptographic", "Ex86045F", false, true, Strings.ResourceManager, new object[]
			{
				thumbprint
			});
		}

		// Token: 0x06009E6F RID: 40559 RVA: 0x002747C4 File Offset: 0x002729C4
		public static LocalizedString ErrorCannotRetargetArchiveForPrimaryOnlyMoves(string identity)
		{
			return new LocalizedString("ErrorCannotRetargetArchiveForPrimaryOnlyMoves", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x170033B5 RID: 13237
		// (get) Token: 0x06009E70 RID: 40560 RVA: 0x002747F3 File Offset: 0x002729F3
		public static LocalizedString CopyStatusInitializing
		{
			get
			{
				return new LocalizedString("CopyStatusInitializing", "Ex580273", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009E71 RID: 40561 RVA: 0x00274814 File Offset: 0x00272A14
		public static LocalizedString ErrorCannotDeleteReplayState(string db, string server, string error)
		{
			return new LocalizedString("ErrorCannotDeleteReplayState", "Ex280C63", false, true, Strings.ResourceManager, new object[]
			{
				db,
				server,
				error
			});
		}

		// Token: 0x170033B6 RID: 13238
		// (get) Token: 0x06009E72 RID: 40562 RVA: 0x0027484B File Offset: 0x00272A4B
		public static LocalizedString ErrorCannotSetPowerShellMaxTenantRunspaces
		{
			get
			{
				return new LocalizedString("ErrorCannotSetPowerShellMaxTenantRunspaces", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009E73 RID: 40563 RVA: 0x0027486C File Offset: 0x00272A6C
		public static LocalizedString InvalidRecipientForModerationAction(string recipient)
		{
			return new LocalizedString("InvalidRecipientForModerationAction", "Ex446962", false, true, Strings.ResourceManager, new object[]
			{
				recipient
			});
		}

		// Token: 0x06009E74 RID: 40564 RVA: 0x0027489C File Offset: 0x00272A9C
		public static LocalizedString ErrorFolderFilterInvalid(LocalizedString errorMessage)
		{
			return new LocalizedString("ErrorFolderFilterInvalid", "ExE9E568", false, true, Strings.ResourceManager, new object[]
			{
				errorMessage
			});
		}

		// Token: 0x170033B7 RID: 13239
		// (get) Token: 0x06009E75 RID: 40565 RVA: 0x002748D0 File Offset: 0x00272AD0
		public static LocalizedString StartADTopologyService
		{
			get
			{
				return new LocalizedString("StartADTopologyService", "Ex2F4283", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009E76 RID: 40566 RVA: 0x002748F0 File Offset: 0x00272AF0
		public static LocalizedString TestSearchADError(string error)
		{
			return new LocalizedString("TestSearchADError", "ExD08158", false, true, Strings.ResourceManager, new object[]
			{
				error
			});
		}

		// Token: 0x170033B8 RID: 13240
		// (get) Token: 0x06009E77 RID: 40567 RVA: 0x0027491F File Offset: 0x00272B1F
		public static LocalizedString InvalidRuleSearchFilterMissingElements
		{
			get
			{
				return new LocalizedString("InvalidRuleSearchFilterMissingElements", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009E78 RID: 40568 RVA: 0x00274940 File Offset: 0x00272B40
		public static LocalizedString SeederServerLevelBeginCalled(string serverName)
		{
			return new LocalizedString("SeederServerLevelBeginCalled", "", false, false, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		// Token: 0x170033B9 RID: 13241
		// (get) Token: 0x06009E79 RID: 40569 RVA: 0x0027496F File Offset: 0x00272B6F
		public static LocalizedString SpecifiedOUNotFound
		{
			get
			{
				return new LocalizedString("SpecifiedOUNotFound", "Ex3263D5", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170033BA RID: 13242
		// (get) Token: 0x06009E7A RID: 40570 RVA: 0x0027498D File Offset: 0x00272B8D
		public static LocalizedString MtrtAddBlindCopyToRecipient
		{
			get
			{
				return new LocalizedString("MtrtAddBlindCopyToRecipient", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009E7B RID: 40571 RVA: 0x002749AC File Offset: 0x00272BAC
		public static LocalizedString ErrorEdbFilePathOccupiedByDirectory(string filePath, string serverName)
		{
			return new LocalizedString("ErrorEdbFilePathOccupiedByDirectory", "Ex93F0E7", false, true, Strings.ResourceManager, new object[]
			{
				filePath,
				serverName
			});
		}

		// Token: 0x170033BB RID: 13243
		// (get) Token: 0x06009E7C RID: 40572 RVA: 0x002749DF File Offset: 0x00272BDF
		public static LocalizedString NoSLCCertChainInImportedTrustedPublishingDomain
		{
			get
			{
				return new LocalizedString("NoSLCCertChainInImportedTrustedPublishingDomain", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009E7D RID: 40573 RVA: 0x00274A00 File Offset: 0x00272C00
		public static LocalizedString ErrorAcceptedDomainsInvalidType(string domain)
		{
			return new LocalizedString("ErrorAcceptedDomainsInvalidType", "Ex2339BD", false, true, Strings.ResourceManager, new object[]
			{
				domain
			});
		}

		// Token: 0x06009E7E RID: 40574 RVA: 0x00274A30 File Offset: 0x00272C30
		public static LocalizedString messageMailboxNotFoundException(MailboxIdParameter mailbox)
		{
			return new LocalizedString("messageMailboxNotFoundException", "", false, false, Strings.ResourceManager, new object[]
			{
				mailbox
			});
		}

		// Token: 0x06009E7F RID: 40575 RVA: 0x00274A60 File Offset: 0x00272C60
		public static LocalizedString EdgeAndHubSharingSameDirectTrustCertNotAllowed(string thumbprint)
		{
			return new LocalizedString("EdgeAndHubSharingSameDirectTrustCertNotAllowed", "Ex985BAE", false, true, Strings.ResourceManager, new object[]
			{
				thumbprint
			});
		}

		// Token: 0x06009E80 RID: 40576 RVA: 0x00274A90 File Offset: 0x00272C90
		public static LocalizedString FailedToReadDatabaseSchemaVersionInformationForServer(string serverName)
		{
			return new LocalizedString("FailedToReadDatabaseSchemaVersionInformationForServer", "", false, false, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		// Token: 0x170033BC RID: 13244
		// (get) Token: 0x06009E81 RID: 40577 RVA: 0x00274ABF File Offset: 0x00272CBF
		public static LocalizedString SetupProgressStopHealthManagerService
		{
			get
			{
				return new LocalizedString("SetupProgressStopHealthManagerService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170033BD RID: 13245
		// (get) Token: 0x06009E82 RID: 40578 RVA: 0x00274ADD File Offset: 0x00272CDD
		public static LocalizedString ErrorPowerShellCorrupted
		{
			get
			{
				return new LocalizedString("ErrorPowerShellCorrupted", "ExE9A02C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170033BE RID: 13246
		// (get) Token: 0x06009E83 RID: 40579 RVA: 0x00274AFB File Offset: 0x00272CFB
		public static LocalizedString ErrorTextMessageInsufficientPermission
		{
			get
			{
				return new LocalizedString("ErrorTextMessageInsufficientPermission", "Ex6712A2", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009E84 RID: 40580 RVA: 0x00274B1C File Offset: 0x00272D1C
		public static LocalizedString IncompleteParameterGroup(string parameter, string otherParameters)
		{
			return new LocalizedString("IncompleteParameterGroup", "Ex3C189C", false, true, Strings.ResourceManager, new object[]
			{
				parameter,
				otherParameters
			});
		}

		// Token: 0x06009E85 RID: 40581 RVA: 0x00274B50 File Offset: 0x00272D50
		public static LocalizedString ConfirmationMessageRemoveHostedConnectionFilterPolicy(string identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveHostedConnectionFilterPolicy", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x170033BF RID: 13247
		// (get) Token: 0x06009E86 RID: 40582 RVA: 0x00274B7F File Offset: 0x00272D7F
		public static LocalizedString DlpPolicyDescriptionDisplayName
		{
			get
			{
				return new LocalizedString("DlpPolicyDescriptionDisplayName", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009E87 RID: 40583 RVA: 0x00274BA0 File Offset: 0x00272DA0
		public static LocalizedString ErrorInvalidEapSetPriority(string priority)
		{
			return new LocalizedString("ErrorInvalidEapSetPriority", "ExEF5B55", false, true, Strings.ResourceManager, new object[]
			{
				priority
			});
		}

		// Token: 0x06009E88 RID: 40584 RVA: 0x00274BD0 File Offset: 0x00272DD0
		public static LocalizedString ConfirmationMessageDisableMalwareFilterRule(string identity)
		{
			return new LocalizedString("ConfirmationMessageDisableMalwareFilterRule", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x06009E89 RID: 40585 RVA: 0x00274C00 File Offset: 0x00272E00
		public static LocalizedString CookieVersionUnsupportedException(int version)
		{
			return new LocalizedString("CookieVersionUnsupportedException", "", false, false, Strings.ResourceManager, new object[]
			{
				version
			});
		}

		// Token: 0x170033C0 RID: 13248
		// (get) Token: 0x06009E8A RID: 40586 RVA: 0x00274C34 File Offset: 0x00272E34
		public static LocalizedString WarningInboxRuleOutlookBlobExists
		{
			get
			{
				return new LocalizedString("WarningInboxRuleOutlookBlobExists", "Ex2E5E15", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170033C1 RID: 13249
		// (get) Token: 0x06009E8B RID: 40587 RVA: 0x00274C52 File Offset: 0x00272E52
		public static LocalizedString RmsUrlsCannotBeSet
		{
			get
			{
				return new LocalizedString("RmsUrlsCannotBeSet", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009E8C RID: 40588 RVA: 0x00274C70 File Offset: 0x00272E70
		public static LocalizedString DagTaskClusteringShouldBeEnabledException(string serverName)
		{
			return new LocalizedString("DagTaskClusteringShouldBeEnabledException", "", false, false, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		// Token: 0x06009E8D RID: 40589 RVA: 0x00274CA0 File Offset: 0x00272EA0
		public static LocalizedString InfoGetUL(Uri uri)
		{
			return new LocalizedString("InfoGetUL", "Ex597DB8", false, true, Strings.ResourceManager, new object[]
			{
				uri
			});
		}

		// Token: 0x06009E8E RID: 40590 RVA: 0x00274CD0 File Offset: 0x00272ED0
		public static LocalizedString UMCallAnsweringRuleScheduleStatus(string scheduleStatus)
		{
			return new LocalizedString("UMCallAnsweringRuleScheduleStatus", "", false, false, Strings.ResourceManager, new object[]
			{
				scheduleStatus
			});
		}

		// Token: 0x06009E8F RID: 40591 RVA: 0x00274D00 File Offset: 0x00272F00
		public static LocalizedString ErrorNotSupportedFolderClass(string folderClass, string validFolderClasses)
		{
			return new LocalizedString("ErrorNotSupportedFolderClass", "ExDAE967", false, true, Strings.ResourceManager, new object[]
			{
				folderClass,
				validFolderClasses
			});
		}

		// Token: 0x06009E90 RID: 40592 RVA: 0x00274D34 File Offset: 0x00272F34
		public static LocalizedString MoreThanOneObjects(string theType)
		{
			return new LocalizedString("MoreThanOneObjects", "", false, false, Strings.ResourceManager, new object[]
			{
				theType
			});
		}

		// Token: 0x170033C2 RID: 13250
		// (get) Token: 0x06009E91 RID: 40593 RVA: 0x00274D63 File Offset: 0x00272F63
		public static LocalizedString DebugEndSaveDataObject
		{
			get
			{
				return new LocalizedString("DebugEndSaveDataObject", "Ex4BE65D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009E92 RID: 40594 RVA: 0x00274D84 File Offset: 0x00272F84
		public static LocalizedString ErrorTestMailboxPasswordNotFound(string identity, string scriptsPath, string datacenter)
		{
			return new LocalizedString("ErrorTestMailboxPasswordNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				identity,
				scriptsPath,
				datacenter
			});
		}

		// Token: 0x06009E93 RID: 40595 RVA: 0x00274DBC File Offset: 0x00272FBC
		public static LocalizedString IisUtilityWebObjectNotCreatedException(string parent, string name, string type)
		{
			return new LocalizedString("IisUtilityWebObjectNotCreatedException", "ExB96518", false, true, Strings.ResourceManager, new object[]
			{
				parent,
				name,
				type
			});
		}

		// Token: 0x170033C3 RID: 13251
		// (get) Token: 0x06009E94 RID: 40596 RVA: 0x00274DF3 File Offset: 0x00272FF3
		public static LocalizedString ConfirmationMessageStartEdgeSynchronization
		{
			get
			{
				return new LocalizedString("ConfirmationMessageStartEdgeSynchronization", "ExB0FFFF", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009E95 RID: 40597 RVA: 0x00274E14 File Offset: 0x00273014
		public static LocalizedString ClassificationRuleCollectionSharingViolationRemoveOperationVerbose(string identity, string ruleIdsInUse, string referencingTransportRuleNames)
		{
			return new LocalizedString("ClassificationRuleCollectionSharingViolationRemoveOperationVerbose", "", false, false, Strings.ResourceManager, new object[]
			{
				identity,
				ruleIdsInUse,
				referencingTransportRuleNames
			});
		}

		// Token: 0x06009E96 RID: 40598 RVA: 0x00274E4C File Offset: 0x0027304C
		public static LocalizedString ConstraintUpgrade(string database, DataMoveReplicationConstraintParameter old, DataMoveReplicationConstraintParameter suggested)
		{
			return new LocalizedString("ConstraintUpgrade", "Ex95D012", false, true, Strings.ResourceManager, new object[]
			{
				database,
				old,
				suggested
			});
		}

		// Token: 0x06009E97 RID: 40599 RVA: 0x00274E90 File Offset: 0x00273090
		public static LocalizedString ConfirmationMessageEnableRemoteMailbox(string Identity)
		{
			return new LocalizedString("ConfirmationMessageEnableRemoteMailbox", "Ex22EB96", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x170033C4 RID: 13252
		// (get) Token: 0x06009E98 RID: 40600 RVA: 0x00274EBF File Offset: 0x002730BF
		public static LocalizedString VerboseResolvingSecurityPrinciplals
		{
			get
			{
				return new LocalizedString("VerboseResolvingSecurityPrinciplals", "Ex75FBB7", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009E99 RID: 40601 RVA: 0x00274EE0 File Offset: 0x002730E0
		public static LocalizedString OwaFbaConfigurationPublicTimeoutMustBeLessThanOrEqualToPrivateTimeoutException(int publicTimeout, int privateTimeout)
		{
			return new LocalizedString("OwaFbaConfigurationPublicTimeoutMustBeLessThanOrEqualToPrivateTimeoutException", "Ex875681", false, true, Strings.ResourceManager, new object[]
			{
				publicTimeout,
				privateTimeout
			});
		}

		// Token: 0x06009E9A RID: 40602 RVA: 0x00274F20 File Offset: 0x00273120
		public static LocalizedString ErrorOrgsStillUsingThisTrust(string trust, string orgList)
		{
			return new LocalizedString("ErrorOrgsStillUsingThisTrust", "Ex1BDE5E", false, true, Strings.ResourceManager, new object[]
			{
				trust,
				orgList
			});
		}

		// Token: 0x06009E9B RID: 40603 RVA: 0x00274F54 File Offset: 0x00273154
		public static LocalizedString ErrorWinRMCmdNotFound(string file)
		{
			return new LocalizedString("ErrorWinRMCmdNotFound", "Ex3CA450", false, true, Strings.ResourceManager, new object[]
			{
				file
			});
		}

		// Token: 0x06009E9C RID: 40604 RVA: 0x00274F84 File Offset: 0x00273184
		public static LocalizedString WarningFswNotFound(string identity)
		{
			return new LocalizedString("WarningFswNotFound", "ExE00937", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x170033C5 RID: 13253
		// (get) Token: 0x06009E9D RID: 40605 RVA: 0x00274FB3 File Offset: 0x002731B3
		public static LocalizedString WarningLegacyExchangeServerForMailContact
		{
			get
			{
				return new LocalizedString("WarningLegacyExchangeServerForMailContact", "ExBD7CDA", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009E9E RID: 40606 RVA: 0x00274FD4 File Offset: 0x002731D4
		public static LocalizedString ErrorSecondaryPartitionNotEnabledForProvisioning(string partitionName)
		{
			return new LocalizedString("ErrorSecondaryPartitionNotEnabledForProvisioning", "", false, false, Strings.ResourceManager, new object[]
			{
				partitionName
			});
		}

		// Token: 0x06009E9F RID: 40607 RVA: 0x00275004 File Offset: 0x00273204
		public static LocalizedString ErrorLiveIdError(string message)
		{
			return new LocalizedString("ErrorLiveIdError", "Ex41B420", false, true, Strings.ResourceManager, new object[]
			{
				message
			});
		}

		// Token: 0x170033C6 RID: 13254
		// (get) Token: 0x06009EA0 RID: 40608 RVA: 0x00275033 File Offset: 0x00273233
		public static LocalizedString ErrorTemplatesMayNotContainRulesWithImmutableIds
		{
			get
			{
				return new LocalizedString("ErrorTemplatesMayNotContainRulesWithImmutableIds", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170033C7 RID: 13255
		// (get) Token: 0x06009EA1 RID: 40609 RVA: 0x00275051 File Offset: 0x00273251
		public static LocalizedString CertificateStatusRevoked
		{
			get
			{
				return new LocalizedString("CertificateStatusRevoked", "Ex2D0920", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009EA2 RID: 40610 RVA: 0x00275070 File Offset: 0x00273270
		public static LocalizedString ConversationsItemWithoutConversationId(string user, string itemid)
		{
			return new LocalizedString("ConversationsItemWithoutConversationId", "Ex3ABCDD", false, true, Strings.ResourceManager, new object[]
			{
				user,
				itemid
			});
		}

		// Token: 0x06009EA3 RID: 40611 RVA: 0x002750A4 File Offset: 0x002732A4
		public static LocalizedString ErrorSetTeamMailboxUserPermissions(string tm, string error)
		{
			return new LocalizedString("ErrorSetTeamMailboxUserPermissions", "", false, false, Strings.ResourceManager, new object[]
			{
				tm,
				error
			});
		}

		// Token: 0x06009EA4 RID: 40612 RVA: 0x002750D8 File Offset: 0x002732D8
		public static LocalizedString ErrorAuthSchemeExists(string authRedirect, string scheme)
		{
			return new LocalizedString("ErrorAuthSchemeExists", "", false, false, Strings.ResourceManager, new object[]
			{
				authRedirect,
				scheme
			});
		}

		// Token: 0x06009EA5 RID: 40613 RVA: 0x0027510C File Offset: 0x0027330C
		public static LocalizedString ProcessStandardOutput(string output)
		{
			return new LocalizedString("ProcessStandardOutput", "Ex17B05C", false, true, Strings.ResourceManager, new object[]
			{
				output
			});
		}

		// Token: 0x170033C8 RID: 13256
		// (get) Token: 0x06009EA6 RID: 40614 RVA: 0x0027513B File Offset: 0x0027333B
		public static LocalizedString CasHealthOwaPingError
		{
			get
			{
				return new LocalizedString("CasHealthOwaPingError", "Ex321681", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009EA7 RID: 40615 RVA: 0x0027515C File Offset: 0x0027335C
		public static LocalizedString ErrorCannotRetargetOutboundMoves(string identity)
		{
			return new LocalizedString("ErrorCannotRetargetOutboundMoves", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x170033C9 RID: 13257
		// (get) Token: 0x06009EA8 RID: 40616 RVA: 0x0027518B File Offset: 0x0027338B
		public static LocalizedString ReservedString5
		{
			get
			{
				return new LocalizedString("ReservedString5", "Ex0BFCB9", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009EA9 RID: 40617 RVA: 0x002751AC File Offset: 0x002733AC
		public static LocalizedString SmtpConnectivitySuccessEvent(string server, string successes)
		{
			return new LocalizedString("SmtpConnectivitySuccessEvent", "ExC2F86B", false, true, Strings.ResourceManager, new object[]
			{
				server,
				successes
			});
		}

		// Token: 0x170033CA RID: 13258
		// (get) Token: 0x06009EAA RID: 40618 RVA: 0x002751DF File Offset: 0x002733DF
		public static LocalizedString WarningDatabaseScopeCreationApplicableOnlyInSP
		{
			get
			{
				return new LocalizedString("WarningDatabaseScopeCreationApplicableOnlyInSP", "ExD7D94E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170033CB RID: 13259
		// (get) Token: 0x06009EAB RID: 40619 RVA: 0x002751FD File Offset: 0x002733FD
		public static LocalizedString ServiceNameEws
		{
			get
			{
				return new LocalizedString("ServiceNameEws", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009EAC RID: 40620 RVA: 0x0027521C File Offset: 0x0027341C
		public static LocalizedString DagTaskClusterNameIsNotDagNameException(string mailboxServer, string clusterName, string dagName)
		{
			return new LocalizedString("DagTaskClusterNameIsNotDagNameException", "", false, false, Strings.ResourceManager, new object[]
			{
				mailboxServer,
				clusterName,
				dagName
			});
		}

		// Token: 0x06009EAD RID: 40621 RVA: 0x00275254 File Offset: 0x00273454
		public static LocalizedString ConfirmationMessageNewRemoteAccountPolicy(string Name)
		{
			return new LocalizedString("ConfirmationMessageNewRemoteAccountPolicy", "ExF68145", false, true, Strings.ResourceManager, new object[]
			{
				Name
			});
		}

		// Token: 0x170033CC RID: 13260
		// (get) Token: 0x06009EAE RID: 40622 RVA: 0x00275283 File Offset: 0x00273483
		public static LocalizedString MailboxAssociationMailboxNotFound
		{
			get
			{
				return new LocalizedString("MailboxAssociationMailboxNotFound", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009EAF RID: 40623 RVA: 0x002752A4 File Offset: 0x002734A4
		public static LocalizedString AdminAuditLogsLocationNotFound(string organization)
		{
			return new LocalizedString("AdminAuditLogsLocationNotFound", "Ex10EBB7", false, true, Strings.ResourceManager, new object[]
			{
				organization
			});
		}

		// Token: 0x170033CD RID: 13261
		// (get) Token: 0x06009EB0 RID: 40624 RVA: 0x002752D3 File Offset: 0x002734D3
		public static LocalizedString SetupComponentMidFileCopyBridgehead
		{
			get
			{
				return new LocalizedString("SetupComponentMidFileCopyBridgehead", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170033CE RID: 13262
		// (get) Token: 0x06009EB1 RID: 40625 RVA: 0x002752F1 File Offset: 0x002734F1
		public static LocalizedString NodePausedCheckDesc
		{
			get
			{
				return new LocalizedString("NodePausedCheckDesc", "ExDBEC0E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170033CF RID: 13263
		// (get) Token: 0x06009EB2 RID: 40626 RVA: 0x0027530F File Offset: 0x0027350F
		public static LocalizedString AllLinkedGroupMembers
		{
			get
			{
				return new LocalizedString("AllLinkedGroupMembers", "ExB0BB71", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009EB3 RID: 40627 RVA: 0x00275330 File Offset: 0x00273530
		public static LocalizedString ErrorMailboxIsConnected(string userId, string mailboxId)
		{
			return new LocalizedString("ErrorMailboxIsConnected", "ExC386D7", false, true, Strings.ResourceManager, new object[]
			{
				userId,
				mailboxId
			});
		}

		// Token: 0x170033D0 RID: 13264
		// (get) Token: 0x06009EB4 RID: 40628 RVA: 0x00275363 File Offset: 0x00273563
		public static LocalizedString SharedCacheServiceDescription
		{
			get
			{
				return new LocalizedString("SharedCacheServiceDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009EB5 RID: 40629 RVA: 0x00275384 File Offset: 0x00273584
		public static LocalizedString ErrorDefaultDomainNotFound(AcceptedDomainIdParameter domain)
		{
			return new LocalizedString("ErrorDefaultDomainNotFound", "Ex121315", false, true, Strings.ResourceManager, new object[]
			{
				domain
			});
		}

		// Token: 0x170033D1 RID: 13265
		// (get) Token: 0x06009EB6 RID: 40630 RVA: 0x002753B3 File Offset: 0x002735B3
		public static LocalizedString InstallKeynoteConnectorServiceTask
		{
			get
			{
				return new LocalizedString("InstallKeynoteConnectorServiceTask", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170033D2 RID: 13266
		// (get) Token: 0x06009EB7 RID: 40631 RVA: 0x002753D1 File Offset: 0x002735D1
		public static LocalizedString InvalidIncidentReportOriginalMail
		{
			get
			{
				return new LocalizedString("InvalidIncidentReportOriginalMail", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009EB8 RID: 40632 RVA: 0x002753F0 File Offset: 0x002735F0
		public static LocalizedString VerboseReadADSecurityDescriptor(string id)
		{
			return new LocalizedString("VerboseReadADSecurityDescriptor", "Ex76BAA1", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x170033D3 RID: 13267
		// (get) Token: 0x06009EB9 RID: 40633 RVA: 0x0027541F File Offset: 0x0027361F
		public static LocalizedString ErrorConflictingMailboxes
		{
			get
			{
				return new LocalizedString("ErrorConflictingMailboxes", "Ex5EA958", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170033D4 RID: 13268
		// (get) Token: 0x06009EBA RID: 40634 RVA: 0x0027543D File Offset: 0x0027363D
		public static LocalizedString RemoveVirtualDirectoryCouldNotAccessWebServicesRootException
		{
			get
			{
				return new LocalizedString("RemoveVirtualDirectoryCouldNotAccessWebServicesRootException", "ExE5BD1A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009EBB RID: 40635 RVA: 0x0027545C File Offset: 0x0027365C
		public static LocalizedString InvalidIntegerFieldException(string fieldName, int value, int min, int max)
		{
			return new LocalizedString("InvalidIntegerFieldException", "Ex25E76A", false, true, Strings.ResourceManager, new object[]
			{
				fieldName,
				value,
				min,
				max
			});
		}

		// Token: 0x06009EBC RID: 40636 RVA: 0x002754A8 File Offset: 0x002736A8
		public static LocalizedString ConfirmationMessageSetSyncConfig(string organization)
		{
			return new LocalizedString("ConfirmationMessageSetSyncConfig", "Ex9237BA", false, true, Strings.ResourceManager, new object[]
			{
				organization
			});
		}

		// Token: 0x170033D5 RID: 13269
		// (get) Token: 0x06009EBD RID: 40637 RVA: 0x002754D7 File Offset: 0x002736D7
		public static LocalizedString ErrorInvalidAuthServerTypeValue
		{
			get
			{
				return new LocalizedString("ErrorInvalidAuthServerTypeValue", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170033D6 RID: 13270
		// (get) Token: 0x06009EBE RID: 40638 RVA: 0x002754F5 File Offset: 0x002736F5
		public static LocalizedString ErrorCorruptRuleAction
		{
			get
			{
				return new LocalizedString("ErrorCorruptRuleAction", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009EBF RID: 40639 RVA: 0x00275514 File Offset: 0x00273714
		public static LocalizedString ErrorEntryNotInRecipientOrg(string entry)
		{
			return new LocalizedString("ErrorEntryNotInRecipientOrg", "Ex2CDE11", false, true, Strings.ResourceManager, new object[]
			{
				entry
			});
		}

		// Token: 0x06009EC0 RID: 40640 RVA: 0x00275544 File Offset: 0x00273744
		public static LocalizedString MemberNotFoundException(string id, string group)
		{
			return new LocalizedString("MemberNotFoundException", "Ex149EE7", false, true, Strings.ResourceManager, new object[]
			{
				id,
				group
			});
		}

		// Token: 0x170033D7 RID: 13271
		// (get) Token: 0x06009EC1 RID: 40641 RVA: 0x00275577 File Offset: 0x00273777
		public static LocalizedString ErrorRunspaceServerSettingsNotFound
		{
			get
			{
				return new LocalizedString("ErrorRunspaceServerSettingsNotFound", "Ex167E53", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009EC2 RID: 40642 RVA: 0x00275598 File Offset: 0x00273798
		public static LocalizedString VerboseResetRecoveryDatabase(string idDatabase)
		{
			return new LocalizedString("VerboseResetRecoveryDatabase", "Ex10518B", false, true, Strings.ResourceManager, new object[]
			{
				idDatabase
			});
		}

		// Token: 0x06009EC3 RID: 40643 RVA: 0x002755C8 File Offset: 0x002737C8
		public static LocalizedString ErrorExchangeAdministratorsGroupNotFound(string groupType, string memberOperated)
		{
			return new LocalizedString("ErrorExchangeAdministratorsGroupNotFound", "Ex55A379", false, true, Strings.ResourceManager, new object[]
			{
				groupType,
				memberOperated
			});
		}

		// Token: 0x06009EC4 RID: 40644 RVA: 0x002755FC File Offset: 0x002737FC
		public static LocalizedString ConfirmationMessageConnectMailboxResource(string Identity, string ResourceType, string Database)
		{
			return new LocalizedString("ConfirmationMessageConnectMailboxResource", "Ex4647F1", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				ResourceType,
				Database
			});
		}

		// Token: 0x170033D8 RID: 13272
		// (get) Token: 0x06009EC5 RID: 40645 RVA: 0x00275633 File Offset: 0x00273833
		public static LocalizedString ClassificationRuleCollectionOffendingListSeparator
		{
			get
			{
				return new LocalizedString("ClassificationRuleCollectionOffendingListSeparator", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170033D9 RID: 13273
		// (get) Token: 0x06009EC6 RID: 40646 RVA: 0x00275651 File Offset: 0x00273851
		public static LocalizedString ScenarioEwsConvertId
		{
			get
			{
				return new LocalizedString("ScenarioEwsConvertId", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170033DA RID: 13274
		// (get) Token: 0x06009EC7 RID: 40647 RVA: 0x0027566F File Offset: 0x0027386F
		public static LocalizedString ProgressCopyingCopyLogFiles
		{
			get
			{
				return new LocalizedString("ProgressCopyingCopyLogFiles", "Ex9FD341", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170033DB RID: 13275
		// (get) Token: 0x06009EC8 RID: 40648 RVA: 0x0027568D File Offset: 0x0027388D
		public static LocalizedString DisasterRecoveryAdminToolsRoleDescription
		{
			get
			{
				return new LocalizedString("DisasterRecoveryAdminToolsRoleDescription", "Ex21DAF1", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170033DC RID: 13276
		// (get) Token: 0x06009EC9 RID: 40649 RVA: 0x002756AB File Offset: 0x002738AB
		public static LocalizedString ErrorEnabledPrimarySmtpAndEmailAddressTemplatesSpecified
		{
			get
			{
				return new LocalizedString("ErrorEnabledPrimarySmtpAndEmailAddressTemplatesSpecified", "Ex466DF1", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170033DD RID: 13277
		// (get) Token: 0x06009ECA RID: 40650 RVA: 0x002756C9 File Offset: 0x002738C9
		public static LocalizedString ErrorBPAMergeFileLoad
		{
			get
			{
				return new LocalizedString("ErrorBPAMergeFileLoad", "Ex82FA5B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009ECB RID: 40651 RVA: 0x002756E8 File Offset: 0x002738E8
		public static LocalizedString DomainIsParameterInvalid(string domainNames)
		{
			return new LocalizedString("DomainIsParameterInvalid", "", false, false, Strings.ResourceManager, new object[]
			{
				domainNames
			});
		}

		// Token: 0x06009ECC RID: 40652 RVA: 0x00275718 File Offset: 0x00273918
		public static LocalizedString InvalidUMProxyAddressException(string proxyAddress)
		{
			return new LocalizedString("InvalidUMProxyAddressException", "", false, false, Strings.ResourceManager, new object[]
			{
				proxyAddress
			});
		}

		// Token: 0x06009ECD RID: 40653 RVA: 0x00275748 File Offset: 0x00273948
		public static LocalizedString ConfirmationMessageSetOrganization(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetOrganization", "", false, false, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x170033DE RID: 13278
		// (get) Token: 0x06009ECE RID: 40654 RVA: 0x00275777 File Offset: 0x00273977
		public static LocalizedString IISNotInstalledException
		{
			get
			{
				return new LocalizedString("IISNotInstalledException", "Ex48FA6C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009ECF RID: 40655 RVA: 0x00275798 File Offset: 0x00273998
		public static LocalizedString ErrorTenantRetentionPolicyLimitReached(int limit)
		{
			return new LocalizedString("ErrorTenantRetentionPolicyLimitReached", "", false, false, Strings.ResourceManager, new object[]
			{
				limit
			});
		}

		// Token: 0x06009ED0 RID: 40656 RVA: 0x002757CC File Offset: 0x002739CC
		public static LocalizedString ConfirmationMessageRemoveMobileMailboxPolicy(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveMobileMailboxPolicy", "ExC95EC8", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x170033DF RID: 13279
		// (get) Token: 0x06009ED1 RID: 40657 RVA: 0x002757FB File Offset: 0x002739FB
		public static LocalizedString SetupComponentPreSetupAdminTools
		{
			get
			{
				return new LocalizedString("SetupComponentPreSetupAdminTools", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170033E0 RID: 13280
		// (get) Token: 0x06009ED2 RID: 40658 RVA: 0x00275819 File Offset: 0x00273A19
		public static LocalizedString ErrorCannotDetermineRequester
		{
			get
			{
				return new LocalizedString("ErrorCannotDetermineRequester", "ExF4A663", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009ED3 RID: 40659 RVA: 0x00275838 File Offset: 0x00273A38
		public static LocalizedString ErrorUserNotUnique(string idStringValue)
		{
			return new LocalizedString("ErrorUserNotUnique", "ExCD0F74", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		// Token: 0x170033E1 RID: 13281
		// (get) Token: 0x06009ED4 RID: 40660 RVA: 0x00275867 File Offset: 0x00273A67
		public static LocalizedString VerboseFixingEmailAddressPoliciesInNativeMode
		{
			get
			{
				return new LocalizedString("VerboseFixingEmailAddressPoliciesInNativeMode", "Ex63F1A7", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009ED5 RID: 40661 RVA: 0x00275888 File Offset: 0x00273A88
		public static LocalizedString ErrorEmptyManagementSiteLink(string domain)
		{
			return new LocalizedString("ErrorEmptyManagementSiteLink", "ExB51B7C", false, true, Strings.ResourceManager, new object[]
			{
				domain
			});
		}

		// Token: 0x170033E2 RID: 13282
		// (get) Token: 0x06009ED6 RID: 40662 RVA: 0x002758B7 File Offset: 0x00273AB7
		public static LocalizedString DebugEndUpnUniquenessCheck
		{
			get
			{
				return new LocalizedString("DebugEndUpnUniquenessCheck", "ExB368EA", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009ED7 RID: 40663 RVA: 0x002758D8 File Offset: 0x00273AD8
		public static LocalizedString InvalidArgumentForServerRoleException(string property, string role)
		{
			return new LocalizedString("InvalidArgumentForServerRoleException", "", false, false, Strings.ResourceManager, new object[]
			{
				property,
				role
			});
		}

		// Token: 0x06009ED8 RID: 40664 RVA: 0x0027590C File Offset: 0x00273B0C
		public static LocalizedString ConfirmationMessageEnableJournalrule(string Identity)
		{
			return new LocalizedString("ConfirmationMessageEnableJournalrule", "Ex543530", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x06009ED9 RID: 40665 RVA: 0x0027593C File Offset: 0x00273B3C
		public static LocalizedString ConfirmationMessageRemoveRoleGroup(string Identity, string Roles, string ManagedBy, string RoleAssignments)
		{
			return new LocalizedString("ConfirmationMessageRemoveRoleGroup", "Ex84AD52", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				Roles,
				ManagedBy,
				RoleAssignments
			});
		}

		// Token: 0x06009EDA RID: 40666 RVA: 0x00275978 File Offset: 0x00273B78
		public static LocalizedString ConfirmationMessageSetThrottlingPolicyAssociationToNull(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetThrottlingPolicyAssociationToNull", "Ex1DE741", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x06009EDB RID: 40667 RVA: 0x002759A8 File Offset: 0x00273BA8
		public static LocalizedString WarningMonitoringTenantNotActive(string id, string status)
		{
			return new LocalizedString("WarningMonitoringTenantNotActive", "", false, false, Strings.ResourceManager, new object[]
			{
				id,
				status
			});
		}

		// Token: 0x06009EDC RID: 40668 RVA: 0x002759DC File Offset: 0x00273BDC
		public static LocalizedString SmtpConnectivityEndPointResult(string endpoint, string result)
		{
			return new LocalizedString("SmtpConnectivityEndPointResult", "ExA19338", false, true, Strings.ResourceManager, new object[]
			{
				endpoint,
				result
			});
		}

		// Token: 0x170033E3 RID: 13283
		// (get) Token: 0x06009EDD RID: 40669 RVA: 0x00275A0F File Offset: 0x00273C0F
		public static LocalizedString InfoPLCreated
		{
			get
			{
				return new LocalizedString("InfoPLCreated", "ExFB438C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009EDE RID: 40670 RVA: 0x00275A30 File Offset: 0x00273C30
		public static LocalizedString ClassificationRuleCollectionNumberExceedLimit(int limit)
		{
			return new LocalizedString("ClassificationRuleCollectionNumberExceedLimit", "", false, false, Strings.ResourceManager, new object[]
			{
				limit
			});
		}

		// Token: 0x06009EDF RID: 40671 RVA: 0x00275A64 File Offset: 0x00273C64
		public static LocalizedString ExRBACSaveRemoveRoleEntry(string entryName, string roleId, string error)
		{
			return new LocalizedString("ExRBACSaveRemoveRoleEntry", "Ex542029", false, true, Strings.ResourceManager, new object[]
			{
				entryName,
				roleId,
				error
			});
		}

		// Token: 0x06009EE0 RID: 40672 RVA: 0x00275A9C File Offset: 0x00273C9C
		public static LocalizedString UMCallAnsweringRuleFindMeWithoutContext(int key, string firstNumber)
		{
			return new LocalizedString("UMCallAnsweringRuleFindMeWithoutContext", "", false, false, Strings.ResourceManager, new object[]
			{
				key,
				firstNumber
			});
		}

		// Token: 0x06009EE1 RID: 40673 RVA: 0x00275AD4 File Offset: 0x00273CD4
		public static LocalizedString VerboseFailedRemoveGalDNInExchangeContainer(string idGlobalAddressList)
		{
			return new LocalizedString("VerboseFailedRemoveGalDNInExchangeContainer", "Ex9D1511", false, true, Strings.ResourceManager, new object[]
			{
				idGlobalAddressList
			});
		}

		// Token: 0x170033E4 RID: 13284
		// (get) Token: 0x06009EE2 RID: 40674 RVA: 0x00275B03 File Offset: 0x00273D03
		public static LocalizedString SetupProgressRemoveServerObject
		{
			get
			{
				return new LocalizedString("SetupProgressRemoveServerObject", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009EE3 RID: 40675 RVA: 0x00275B24 File Offset: 0x00273D24
		public static LocalizedString ClassificationRuleCollectionNonUniqueLangCodesInRuleName(string resourceIdRef, string nonUniqueLangCodes)
		{
			return new LocalizedString("ClassificationRuleCollectionNonUniqueLangCodesInRuleName", "", false, false, Strings.ResourceManager, new object[]
			{
				resourceIdRef,
				nonUniqueLangCodes
			});
		}

		// Token: 0x170033E5 RID: 13285
		// (get) Token: 0x06009EE4 RID: 40676 RVA: 0x00275B57 File Offset: 0x00273D57
		public static LocalizedString UnknownFailureFromCiRpcServer
		{
			get
			{
				return new LocalizedString("UnknownFailureFromCiRpcServer", "Ex37DC27", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009EE5 RID: 40677 RVA: 0x00275B78 File Offset: 0x00273D78
		public static LocalizedString ConfirmationMessageRestoreDatabaseAvailabilityGroup(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRestoreDatabaseAvailabilityGroup", "Ex3C7AF1", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x170033E6 RID: 13286
		// (get) Token: 0x06009EE6 RID: 40678 RVA: 0x00275BA7 File Offset: 0x00273DA7
		public static LocalizedString WarningActionWillOnlyBeAppliedIfMessageIsNotRejected
		{
			get
			{
				return new LocalizedString("WarningActionWillOnlyBeAppliedIfMessageIsNotRejected", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170033E7 RID: 13287
		// (get) Token: 0x06009EE7 RID: 40679 RVA: 0x00275BC5 File Offset: 0x00273DC5
		public static LocalizedString CookieNotUpdated
		{
			get
			{
				return new LocalizedString("CookieNotUpdated", "Ex692A1E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170033E8 RID: 13288
		// (get) Token: 0x06009EE8 RID: 40680 RVA: 0x00275BE3 File Offset: 0x00273DE3
		public static LocalizedString ProcessingAceActivity
		{
			get
			{
				return new LocalizedString("ProcessingAceActivity", "Ex2093F7", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170033E9 RID: 13289
		// (get) Token: 0x06009EE9 RID: 40681 RVA: 0x00275C01 File Offset: 0x00273E01
		public static LocalizedString CasHealthOwaFbaAuthTypeExpected
		{
			get
			{
				return new LocalizedString("CasHealthOwaFbaAuthTypeExpected", "Ex548296", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009EEA RID: 40682 RVA: 0x00275C20 File Offset: 0x00273E20
		public static LocalizedString RemoveOwaVirtualDirectoryCannotDisambiguateException(string applicationRoot, string webSite, string virtualDirectory, string results)
		{
			return new LocalizedString("RemoveOwaVirtualDirectoryCannotDisambiguateException", "ExFC35F7", false, true, Strings.ResourceManager, new object[]
			{
				applicationRoot,
				webSite,
				virtualDirectory,
				results
			});
		}

		// Token: 0x06009EEB RID: 40683 RVA: 0x00275C5C File Offset: 0x00273E5C
		public static LocalizedString ConfirmationMessageClearMobileDevice(string Identity)
		{
			return new LocalizedString("ConfirmationMessageClearMobileDevice", "ExEFA933", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x06009EEC RID: 40684 RVA: 0x00275C8C File Offset: 0x00273E8C
		public static LocalizedString ErrorScopeOutOfRoleScope(string id, string orgName)
		{
			return new LocalizedString("ErrorScopeOutOfRoleScope", "Ex516B29", false, true, Strings.ResourceManager, new object[]
			{
				id,
				orgName
			});
		}

		// Token: 0x06009EED RID: 40685 RVA: 0x00275CC0 File Offset: 0x00273EC0
		public static LocalizedString CannotEditLegacySearchObjectWithoutUpgrade(string searchName)
		{
			return new LocalizedString("CannotEditLegacySearchObjectWithoutUpgrade", "", false, false, Strings.ResourceManager, new object[]
			{
				searchName
			});
		}

		// Token: 0x06009EEE RID: 40686 RVA: 0x00275CF0 File Offset: 0x00273EF0
		public static LocalizedString WarningNewAdminAuditLogSearchOnPreR5(string org)
		{
			return new LocalizedString("WarningNewAdminAuditLogSearchOnPreR5", "Ex4FF611", false, true, Strings.ResourceManager, new object[]
			{
				org
			});
		}

		// Token: 0x06009EEF RID: 40687 RVA: 0x00275D20 File Offset: 0x00273F20
		public static LocalizedString ConfirmationMessageRemoveHostedContentFilterConfig(string identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveHostedContentFilterConfig", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x170033EA RID: 13290
		// (get) Token: 0x06009EF0 RID: 40688 RVA: 0x00275D4F File Offset: 0x00273F4F
		public static LocalizedString ConfirmationMessageSendMapiSubmitSystemProbe
		{
			get
			{
				return new LocalizedString("ConfirmationMessageSendMapiSubmitSystemProbe", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009EF1 RID: 40689 RVA: 0x00275D70 File Offset: 0x00273F70
		public static LocalizedString ErrorNullParameter(string parameter)
		{
			return new LocalizedString("ErrorNullParameter", "Ex8AE501", false, true, Strings.ResourceManager, new object[]
			{
				parameter
			});
		}

		// Token: 0x170033EB RID: 13291
		// (get) Token: 0x06009EF2 RID: 40690 RVA: 0x00275D9F File Offset: 0x00273F9F
		public static LocalizedString ConfirmationMessageStartELCAssistant
		{
			get
			{
				return new LocalizedString("ConfirmationMessageStartELCAssistant", "Ex3E1F51", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009EF3 RID: 40691 RVA: 0x00275DC0 File Offset: 0x00273FC0
		public static LocalizedString AlsSubjectAdmin(string name, string requester)
		{
			return new LocalizedString("AlsSubjectAdmin", "", false, false, Strings.ResourceManager, new object[]
			{
				name,
				requester
			});
		}

		// Token: 0x06009EF4 RID: 40692 RVA: 0x00275DF4 File Offset: 0x00273FF4
		public static LocalizedString ConfirmationMessageNewEmailAddressPolicyAllTemplatesWithPrecannedFilter(string Name, string IncludedRecipients, string EnabledEmailAddressTemplates)
		{
			return new LocalizedString("ConfirmationMessageNewEmailAddressPolicyAllTemplatesWithPrecannedFilter", "Ex448B6B", false, true, Strings.ResourceManager, new object[]
			{
				Name,
				IncludedRecipients,
				EnabledEmailAddressTemplates
			});
		}

		// Token: 0x170033EC RID: 13292
		// (get) Token: 0x06009EF5 RID: 40693 RVA: 0x00275E2B File Offset: 0x0027402B
		public static LocalizedString MobileDeviceLogNoLogsExist
		{
			get
			{
				return new LocalizedString("MobileDeviceLogNoLogsExist", "ExB27C15", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009EF6 RID: 40694 RVA: 0x00275E4C File Offset: 0x0027404C
		public static LocalizedString ErrorFailedToCreateExchangeOabFolder(string serverName, string errormsg)
		{
			return new LocalizedString("ErrorFailedToCreateExchangeOabFolder", "Ex856764", false, true, Strings.ResourceManager, new object[]
			{
				serverName,
				errormsg
			});
		}

		// Token: 0x06009EF7 RID: 40695 RVA: 0x00275E80 File Offset: 0x00274080
		public static LocalizedString ErrorEmailTextBig(int size)
		{
			return new LocalizedString("ErrorEmailTextBig", "", false, false, Strings.ResourceManager, new object[]
			{
				size
			});
		}

		// Token: 0x06009EF8 RID: 40696 RVA: 0x00275EB4 File Offset: 0x002740B4
		public static LocalizedString ExceptionLogEntryLineInvalid(int vline)
		{
			return new LocalizedString("ExceptionLogEntryLineInvalid", "ExA00C86", false, true, Strings.ResourceManager, new object[]
			{
				vline
			});
		}

		// Token: 0x06009EF9 RID: 40697 RVA: 0x00275EE8 File Offset: 0x002740E8
		public static LocalizedString ConfirmationMessageSetFederatedDomain(string domain, string org)
		{
			return new LocalizedString("ConfirmationMessageSetFederatedDomain", "ExAC1EA3", false, true, Strings.ResourceManager, new object[]
			{
				domain,
				org
			});
		}

		// Token: 0x170033ED RID: 13293
		// (get) Token: 0x06009EFA RID: 40698 RVA: 0x00275F1B File Offset: 0x0027411B
		public static LocalizedString ErrorRpcHttpMustSpecifyInternalClientAuthenticationMethodOrDefaultAuthenticationMethod
		{
			get
			{
				return new LocalizedString("ErrorRpcHttpMustSpecifyInternalClientAuthenticationMethodOrDefaultAuthenticationMethod", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170033EE RID: 13294
		// (get) Token: 0x06009EFB RID: 40699 RVA: 0x00275F39 File Offset: 0x00274139
		public static LocalizedString MtrtEventExpand
		{
			get
			{
				return new LocalizedString("MtrtEventExpand", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170033EF RID: 13295
		// (get) Token: 0x06009EFC RID: 40700 RVA: 0x00275F57 File Offset: 0x00274157
		public static LocalizedString EmptyTargetMailbox
		{
			get
			{
				return new LocalizedString("EmptyTargetMailbox", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170033F0 RID: 13296
		// (get) Token: 0x06009EFD RID: 40701 RVA: 0x00275F75 File Offset: 0x00274175
		public static LocalizedString ErrorDistributionGroupNameTooLong
		{
			get
			{
				return new LocalizedString("ErrorDistributionGroupNameTooLong", "ExB62014", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170033F1 RID: 13297
		// (get) Token: 0x06009EFE RID: 40702 RVA: 0x00275F93 File Offset: 0x00274193
		public static LocalizedString SetupProgressCreateOutOfTheBoxDefaultMRMTags
		{
			get
			{
				return new LocalizedString("SetupProgressCreateOutOfTheBoxDefaultMRMTags", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170033F2 RID: 13298
		// (get) Token: 0x06009EFF RID: 40703 RVA: 0x00275FB1 File Offset: 0x002741B1
		public static LocalizedString ErrorTargetMailboxDatabaseVersionUnsupported
		{
			get
			{
				return new LocalizedString("ErrorTargetMailboxDatabaseVersionUnsupported", "ExB5BC6C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170033F3 RID: 13299
		// (get) Token: 0x06009F00 RID: 40704 RVA: 0x00275FCF File Offset: 0x002741CF
		public static LocalizedString SetupComponentConfigurationFrontendTransport
		{
			get
			{
				return new LocalizedString("SetupComponentConfigurationFrontendTransport", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009F01 RID: 40705 RVA: 0x00275FF0 File Offset: 0x002741F0
		public static LocalizedString WarningShouldWriteToRidMaster(string dc1, string dc2)
		{
			return new LocalizedString("WarningShouldWriteToRidMaster", "", false, false, Strings.ResourceManager, new object[]
			{
				dc1,
				dc2
			});
		}

		// Token: 0x170033F4 RID: 13300
		// (get) Token: 0x06009F02 RID: 40706 RVA: 0x00276023 File Offset: 0x00274223
		public static LocalizedString RepairUrgencyHigh
		{
			get
			{
				return new LocalizedString("RepairUrgencyHigh", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170033F5 RID: 13301
		// (get) Token: 0x06009F03 RID: 40707 RVA: 0x00276041 File Offset: 0x00274241
		public static LocalizedString SetupProgressUpdatingResourcePropertySchema
		{
			get
			{
				return new LocalizedString("SetupProgressUpdatingResourcePropertySchema", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009F04 RID: 40708 RVA: 0x00276060 File Offset: 0x00274260
		public static LocalizedString ConflictingAcceptedDomain(string domain)
		{
			return new LocalizedString("ConflictingAcceptedDomain", "Ex563F47", false, true, Strings.ResourceManager, new object[]
			{
				domain
			});
		}

		// Token: 0x170033F6 RID: 13302
		// (get) Token: 0x06009F05 RID: 40709 RVA: 0x0027608F File Offset: 0x0027428F
		public static LocalizedString DefaultAllDistributionLists
		{
			get
			{
				return new LocalizedString("DefaultAllDistributionLists", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170033F7 RID: 13303
		// (get) Token: 0x06009F06 RID: 40710 RVA: 0x002760AD File Offset: 0x002742AD
		public static LocalizedString SetupProgressCreateGlobalAutoDiscoverContainer
		{
			get
			{
				return new LocalizedString("SetupProgressCreateGlobalAutoDiscoverContainer", "ExAA0671", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009F07 RID: 40711 RVA: 0x002760CC File Offset: 0x002742CC
		public static LocalizedString InterceptorConfirmEntireForestRule(string rule)
		{
			return new LocalizedString("InterceptorConfirmEntireForestRule", "", false, false, Strings.ResourceManager, new object[]
			{
				rule
			});
		}

		// Token: 0x06009F08 RID: 40712 RVA: 0x002760FC File Offset: 0x002742FC
		public static LocalizedString GenericError(string message)
		{
			return new LocalizedString("GenericError", "Ex2A35D7", false, true, Strings.ResourceManager, new object[]
			{
				message
			});
		}

		// Token: 0x170033F8 RID: 13304
		// (get) Token: 0x06009F09 RID: 40713 RVA: 0x0027612B File Offset: 0x0027432B
		public static LocalizedString MigrationCompleteAfterScheduledBatchesOnly
		{
			get
			{
				return new LocalizedString("MigrationCompleteAfterScheduledBatchesOnly", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170033F9 RID: 13305
		// (get) Token: 0x06009F0A RID: 40714 RVA: 0x00276149 File Offset: 0x00274349
		public static LocalizedString UMMailboxPolicySetAllowFaxError
		{
			get
			{
				return new LocalizedString("UMMailboxPolicySetAllowFaxError", "Ex9E4802", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170033FA RID: 13306
		// (get) Token: 0x06009F0B RID: 40715 RVA: 0x00276167 File Offset: 0x00274367
		public static LocalizedString AttachmentFilterNoExceptionConnector
		{
			get
			{
				return new LocalizedString("AttachmentFilterNoExceptionConnector", "Ex40FFE6", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009F0C RID: 40716 RVA: 0x00276188 File Offset: 0x00274388
		public static LocalizedString ConfirmationMessageRemoveMailboxDatabaseCopy(string Identity, string server)
		{
			return new LocalizedString("ConfirmationMessageRemoveMailboxDatabaseCopy", "Ex387EEC", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				server
			});
		}

		// Token: 0x06009F0D RID: 40717 RVA: 0x002761BC File Offset: 0x002743BC
		public static LocalizedString TaskNotSupportedOnVersionException(string cmdletName, int serverVersion)
		{
			return new LocalizedString("TaskNotSupportedOnVersionException", "Ex2B2CA0", false, true, Strings.ResourceManager, new object[]
			{
				cmdletName,
				serverVersion
			});
		}

		// Token: 0x06009F0E RID: 40718 RVA: 0x002761F4 File Offset: 0x002743F4
		public static LocalizedString ConfirmationMessageNewSystemMessageDsn(string Code, string Text, string Internal, string Language)
		{
			return new LocalizedString("ConfirmationMessageNewSystemMessageDsn", "ExDDA8B5", false, true, Strings.ResourceManager, new object[]
			{
				Code,
				Text,
				Internal,
				Language
			});
		}

		// Token: 0x06009F0F RID: 40719 RVA: 0x00276230 File Offset: 0x00274430
		public static LocalizedString EnableConversationsRunning(string user)
		{
			return new LocalizedString("EnableConversationsRunning", "Ex206E52", false, true, Strings.ResourceManager, new object[]
			{
				user
			});
		}

		// Token: 0x170033FB RID: 13307
		// (get) Token: 0x06009F10 RID: 40720 RVA: 0x0027625F File Offset: 0x0027445F
		public static LocalizedString ChangePasswordLockedOut
		{
			get
			{
				return new LocalizedString("ChangePasswordLockedOut", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009F11 RID: 40721 RVA: 0x00276280 File Offset: 0x00274480
		public static LocalizedString InfoIsNotMemberOfGroup(string obj, string group)
		{
			return new LocalizedString("InfoIsNotMemberOfGroup", "Ex1BECD9", false, true, Strings.ResourceManager, new object[]
			{
				obj,
				group
			});
		}

		// Token: 0x06009F12 RID: 40722 RVA: 0x002762B4 File Offset: 0x002744B4
		public static LocalizedString ErrorNoCASServersInSite(string site)
		{
			return new LocalizedString("ErrorNoCASServersInSite", "ExD54D34", false, true, Strings.ResourceManager, new object[]
			{
				site
			});
		}

		// Token: 0x170033FC RID: 13308
		// (get) Token: 0x06009F13 RID: 40723 RVA: 0x002762E3 File Offset: 0x002744E3
		public static LocalizedString SetupProgressCreateWLMContainer
		{
			get
			{
				return new LocalizedString("SetupProgressCreateWLMContainer", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009F14 RID: 40724 RVA: 0x00276304 File Offset: 0x00274504
		public static LocalizedString ExceptionWhileWritingOutputFile(string filename, string exMessage)
		{
			return new LocalizedString("ExceptionWhileWritingOutputFile", "Ex4B84D0", false, true, Strings.ResourceManager, new object[]
			{
				filename,
				exMessage
			});
		}

		// Token: 0x170033FD RID: 13309
		// (get) Token: 0x06009F15 RID: 40725 RVA: 0x00276337 File Offset: 0x00274537
		public static LocalizedString GlobalLocatorServiceResultFailure
		{
			get
			{
				return new LocalizedString("GlobalLocatorServiceResultFailure", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170033FE RID: 13310
		// (get) Token: 0x06009F16 RID: 40726 RVA: 0x00276355 File Offset: 0x00274555
		public static LocalizedString CannotRunForeignConnectorTaskOnEdge
		{
			get
			{
				return new LocalizedString("CannotRunForeignConnectorTaskOnEdge", "Ex54A5B8", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009F17 RID: 40727 RVA: 0x00276374 File Offset: 0x00274574
		public static LocalizedString StandaloneMailboxString(string serverName)
		{
			return new LocalizedString("StandaloneMailboxString", "ExA3DDC9", false, true, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		// Token: 0x170033FF RID: 13311
		// (get) Token: 0x06009F18 RID: 40728 RVA: 0x002763A3 File Offset: 0x002745A3
		public static LocalizedString CasHealthOwaAuthMethodHeader
		{
			get
			{
				return new LocalizedString("CasHealthOwaAuthMethodHeader", "Ex092C46", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009F19 RID: 40729 RVA: 0x002763C4 File Offset: 0x002745C4
		public static LocalizedString ErrorDuringTaskExecution(int count)
		{
			return new LocalizedString("ErrorDuringTaskExecution", "ExE024CB", false, true, Strings.ResourceManager, new object[]
			{
				count
			});
		}

		// Token: 0x17003400 RID: 13312
		// (get) Token: 0x06009F1A RID: 40730 RVA: 0x002763F8 File Offset: 0x002745F8
		public static LocalizedString TestSearchCheckServer
		{
			get
			{
				return new LocalizedString("TestSearchCheckServer", "Ex405F77", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003401 RID: 13313
		// (get) Token: 0x06009F1B RID: 40731 RVA: 0x00276416 File Offset: 0x00274616
		public static LocalizedString SetupProgressUpdateTenantMailboxes
		{
			get
			{
				return new LocalizedString("SetupProgressUpdateTenantMailboxes", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003402 RID: 13314
		// (get) Token: 0x06009F1C RID: 40732 RVA: 0x00276434 File Offset: 0x00274634
		public static LocalizedString ErrorTrustAlreadyDefined
		{
			get
			{
				return new LocalizedString("ErrorTrustAlreadyDefined", "ExE80BC4", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003403 RID: 13315
		// (get) Token: 0x06009F1D RID: 40733 RVA: 0x00276452 File Offset: 0x00274652
		public static LocalizedString ConfirmationMessageSetOrganizationConfig
		{
			get
			{
				return new LocalizedString("ConfirmationMessageSetOrganizationConfig", "Ex9259C5", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009F1E RID: 40734 RVA: 0x00276470 File Offset: 0x00274670
		public static LocalizedString ErrorOnlyOneProvisioningPolicyAllowed(string id)
		{
			return new LocalizedString("ErrorOnlyOneProvisioningPolicyAllowed", "ExEE82CB", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x17003404 RID: 13316
		// (get) Token: 0x06009F1F RID: 40735 RVA: 0x0027649F File Offset: 0x0027469F
		public static LocalizedString RequiredIdentityInformationNotSet
		{
			get
			{
				return new LocalizedString("RequiredIdentityInformationNotSet", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009F20 RID: 40736 RVA: 0x002764C0 File Offset: 0x002746C0
		public static LocalizedString ErrorSetGroupRoleAssignment(string user, string role, string plan)
		{
			return new LocalizedString("ErrorSetGroupRoleAssignment", "ExC19EB3", false, true, Strings.ResourceManager, new object[]
			{
				user,
				role,
				plan
			});
		}

		// Token: 0x06009F21 RID: 40737 RVA: 0x002764F8 File Offset: 0x002746F8
		public static LocalizedString ConfirmationMessageEnableLiveId(string SiteId, string SiteName, string TargetInstance)
		{
			return new LocalizedString("ConfirmationMessageEnableLiveId", "Ex46DBA4", false, true, Strings.ResourceManager, new object[]
			{
				SiteId,
				SiteName,
				TargetInstance
			});
		}

		// Token: 0x06009F22 RID: 40738 RVA: 0x00276530 File Offset: 0x00274730
		public static LocalizedString ErrorPublicFolderReferralServerHasNoPublicFolderDatabase(string server)
		{
			return new LocalizedString("ErrorPublicFolderReferralServerHasNoPublicFolderDatabase", "Ex09DD9D", false, true, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		// Token: 0x17003405 RID: 13317
		// (get) Token: 0x06009F23 RID: 40739 RVA: 0x0027655F File Offset: 0x0027475F
		public static LocalizedString ErrorSetOWAMailboxPolicyToE12User
		{
			get
			{
				return new LocalizedString("ErrorSetOWAMailboxPolicyToE12User", "Ex56922E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009F24 RID: 40740 RVA: 0x00276580 File Offset: 0x00274780
		public static LocalizedString ErrorConflictingRestrictionParameters(string param1, string param2)
		{
			return new LocalizedString("ErrorConflictingRestrictionParameters", "Ex7422D2", false, true, Strings.ResourceManager, new object[]
			{
				param1,
				param2
			});
		}

		// Token: 0x06009F25 RID: 40741 RVA: 0x002765B4 File Offset: 0x002747B4
		public static LocalizedString VerboseRemovingRoleAssignmentPolicy(string id)
		{
			return new LocalizedString("VerboseRemovingRoleAssignmentPolicy", "Ex2AF217", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x06009F26 RID: 40742 RVA: 0x002765E4 File Offset: 0x002747E4
		public static LocalizedString ErrorIndividualRecipientNeeded(string badId)
		{
			return new LocalizedString("ErrorIndividualRecipientNeeded", "ExD919C6", false, true, Strings.ResourceManager, new object[]
			{
				badId
			});
		}

		// Token: 0x06009F27 RID: 40743 RVA: 0x00276614 File Offset: 0x00274814
		public static LocalizedString ErrorWrongRoleAssignmentUserType(string id, string recipientTypeDetails)
		{
			return new LocalizedString("ErrorWrongRoleAssignmentUserType", "Ex9F07C7", false, true, Strings.ResourceManager, new object[]
			{
				id,
				recipientTypeDetails
			});
		}

		// Token: 0x06009F28 RID: 40744 RVA: 0x00276648 File Offset: 0x00274848
		public static LocalizedString MsiCouldNotRemoveProductDetailed(Guid productCode, string message, int errorCode, string msiError)
		{
			return new LocalizedString("MsiCouldNotRemoveProductDetailed", "Ex14D022", false, true, Strings.ResourceManager, new object[]
			{
				productCode,
				message,
				errorCode,
				msiError
			});
		}

		// Token: 0x06009F29 RID: 40745 RVA: 0x00276690 File Offset: 0x00274890
		public static LocalizedString TenantScopedInboundConnectorRequiredForCMCConnector(string name)
		{
			return new LocalizedString("TenantScopedInboundConnectorRequiredForCMCConnector", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x06009F2A RID: 40746 RVA: 0x002766C0 File Offset: 0x002748C0
		public static LocalizedString CorruptRuleCollection(string reason)
		{
			return new LocalizedString("CorruptRuleCollection", "Ex3084E9", false, true, Strings.ResourceManager, new object[]
			{
				reason
			});
		}

		// Token: 0x06009F2B RID: 40747 RVA: 0x002766F0 File Offset: 0x002748F0
		public static LocalizedString RequestAlreadySuspended(string name)
		{
			return new LocalizedString("RequestAlreadySuspended", "Ex6AB058", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x06009F2C RID: 40748 RVA: 0x00276720 File Offset: 0x00274920
		public static LocalizedString ErrorTargetPartitionHasTenantWithSameId(string oldTenant, string newPartition, string duplicateTenant, string guid)
		{
			return new LocalizedString("ErrorTargetPartitionHasTenantWithSameId", "", false, false, Strings.ResourceManager, new object[]
			{
				oldTenant,
				newPartition,
				duplicateTenant,
				guid
			});
		}

		// Token: 0x06009F2D RID: 40749 RVA: 0x0027675C File Offset: 0x0027495C
		public static LocalizedString ConfirmationMessageMailboxCalendarFolder(string Identity)
		{
			return new LocalizedString("ConfirmationMessageMailboxCalendarFolder", "Ex39502F", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x17003406 RID: 13318
		// (get) Token: 0x06009F2E RID: 40750 RVA: 0x0027678B File Offset: 0x0027498B
		public static LocalizedString SetupProgressRemovingPublicFolderDatabase
		{
			get
			{
				return new LocalizedString("SetupProgressRemovingPublicFolderDatabase", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003407 RID: 13319
		// (get) Token: 0x06009F2F RID: 40751 RVA: 0x002767A9 File Offset: 0x002749A9
		public static LocalizedString ProgressCopyingLogFiles
		{
			get
			{
				return new LocalizedString("ProgressCopyingLogFiles", "ExAF0FAC", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009F30 RID: 40752 RVA: 0x002767C8 File Offset: 0x002749C8
		public static LocalizedString InvalidAdSite(string adSite)
		{
			return new LocalizedString("InvalidAdSite", "", false, false, Strings.ResourceManager, new object[]
			{
				adSite
			});
		}

		// Token: 0x06009F31 RID: 40753 RVA: 0x002767F8 File Offset: 0x002749F8
		public static LocalizedString ErrorTenantRelocationNotAllowed(string tenant, string forest)
		{
			return new LocalizedString("ErrorTenantRelocationNotAllowed", "", false, false, Strings.ResourceManager, new object[]
			{
				tenant,
				forest
			});
		}

		// Token: 0x06009F32 RID: 40754 RVA: 0x0027682C File Offset: 0x00274A2C
		public static LocalizedString CasHealthShortErrorMsgFromException(string exceptionType, string exceptionMessage)
		{
			return new LocalizedString("CasHealthShortErrorMsgFromException", "ExB0CF08", false, true, Strings.ResourceManager, new object[]
			{
				exceptionType,
				exceptionMessage
			});
		}

		// Token: 0x06009F33 RID: 40755 RVA: 0x00276860 File Offset: 0x00274A60
		public static LocalizedString ConfirmationMessageSetMailContact(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetMailContact", "Ex643124", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x17003408 RID: 13320
		// (get) Token: 0x06009F34 RID: 40756 RVA: 0x0027688F File Offset: 0x00274A8F
		public static LocalizedString SetupComponentProvisionServer
		{
			get
			{
				return new LocalizedString("SetupComponentProvisionServer", "ExCC58F7", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009F35 RID: 40757 RVA: 0x002768B0 File Offset: 0x00274AB0
		public static LocalizedString ConfirmRetentionPolicyAllowed(string identity)
		{
			return new LocalizedString("ConfirmRetentionPolicyAllowed", "ExF072D7", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x06009F36 RID: 40758 RVA: 0x002768E0 File Offset: 0x00274AE0
		public static LocalizedString FailedToDeleteTempEdbFile(string path)
		{
			return new LocalizedString("FailedToDeleteTempEdbFile", "ExF55A05", false, true, Strings.ResourceManager, new object[]
			{
				path
			});
		}

		// Token: 0x17003409 RID: 13321
		// (get) Token: 0x06009F37 RID: 40759 RVA: 0x0027690F File Offset: 0x00274B0F
		public static LocalizedString NeedEitherAssemblyPathOrValidName
		{
			get
			{
				return new LocalizedString("NeedEitherAssemblyPathOrValidName", "Ex5158E4", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009F38 RID: 40760 RVA: 0x00276930 File Offset: 0x00274B30
		public static LocalizedString UnableToAddCertificateToRootStore(string thumbprint, string serverName)
		{
			return new LocalizedString("UnableToAddCertificateToRootStore", "Ex2416ED", false, true, Strings.ResourceManager, new object[]
			{
				thumbprint,
				serverName
			});
		}

		// Token: 0x1700340A RID: 13322
		// (get) Token: 0x06009F39 RID: 40761 RVA: 0x00276963 File Offset: 0x00274B63
		public static LocalizedString ErrorFindCertificateOnServerObject
		{
			get
			{
				return new LocalizedString("ErrorFindCertificateOnServerObject", "Ex5CA8C9", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009F3A RID: 40762 RVA: 0x00276984 File Offset: 0x00274B84
		public static LocalizedString ExceptionExsetdataGetMessageError(uint scErr, uint sc)
		{
			return new LocalizedString("ExceptionExsetdataGetMessageError", "ExC4293A", false, true, Strings.ResourceManager, new object[]
			{
				scErr,
				sc
			});
		}

		// Token: 0x06009F3B RID: 40763 RVA: 0x002769C4 File Offset: 0x00274BC4
		public static LocalizedString WarningOabSiteFolderCheckNotRun(string server)
		{
			return new LocalizedString("WarningOabSiteFolderCheckNotRun", "Ex415D88", false, true, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		// Token: 0x1700340B RID: 13323
		// (get) Token: 0x06009F3C RID: 40764 RVA: 0x002769F3 File Offset: 0x00274BF3
		public static LocalizedString ErrorProvisioningReconciliationConfigNotFound
		{
			get
			{
				return new LocalizedString("ErrorProvisioningReconciliationConfigNotFound", "ExA830C9", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009F3D RID: 40765 RVA: 0x00276A14 File Offset: 0x00274C14
		public static LocalizedString ConfirmationMessageAddDistributionGroupMember(string Identity, string Member)
		{
			return new LocalizedString("ConfirmationMessageAddDistributionGroupMember", "ExCE2C27", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				Member
			});
		}

		// Token: 0x1700340C RID: 13324
		// (get) Token: 0x06009F3E RID: 40766 RVA: 0x00276A47 File Offset: 0x00274C47
		public static LocalizedString SetupProgressStopEdgeTransportService
		{
			get
			{
				return new LocalizedString("SetupProgressStopEdgeTransportService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009F3F RID: 40767 RVA: 0x00276A68 File Offset: 0x00274C68
		public static LocalizedString ErrorResourceRoomOrEquipmentOnly(string room, string equipment, string fullString, string partialType)
		{
			return new LocalizedString("ErrorResourceRoomOrEquipmentOnly", "Ex3EDA8E", false, true, Strings.ResourceManager, new object[]
			{
				room,
				equipment,
				fullString,
				partialType
			});
		}

		// Token: 0x06009F40 RID: 40768 RVA: 0x00276AA4 File Offset: 0x00274CA4
		public static LocalizedString OnlineIsIntegQueryJobException(string database, string failure)
		{
			return new LocalizedString("OnlineIsIntegQueryJobException", "", false, false, Strings.ResourceManager, new object[]
			{
				database,
				failure
			});
		}

		// Token: 0x1700340D RID: 13325
		// (get) Token: 0x06009F41 RID: 40769 RVA: 0x00276AD7 File Offset: 0x00274CD7
		public static LocalizedString DebugStartInAcceptedDomainCheck
		{
			get
			{
				return new LocalizedString("DebugStartInAcceptedDomainCheck", "Ex1D2BD8", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700340E RID: 13326
		// (get) Token: 0x06009F42 RID: 40770 RVA: 0x00276AF5 File Offset: 0x00274CF5
		public static LocalizedString UninstallMailSubmissionServiceTask
		{
			get
			{
				return new LocalizedString("UninstallMailSubmissionServiceTask", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700340F RID: 13327
		// (get) Token: 0x06009F43 RID: 40771 RVA: 0x00276B13 File Offset: 0x00274D13
		public static LocalizedString InstallClientAccessIisWebServiceExtensions
		{
			get
			{
				return new LocalizedString("InstallClientAccessIisWebServiceExtensions", "ExD40A2D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003410 RID: 13328
		// (get) Token: 0x06009F44 RID: 40772 RVA: 0x00276B31 File Offset: 0x00274D31
		public static LocalizedString CouldNotLocateAnyTeamMailbox
		{
			get
			{
				return new LocalizedString("CouldNotLocateAnyTeamMailbox", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003411 RID: 13329
		// (get) Token: 0x06009F45 RID: 40773 RVA: 0x00276B4F File Offset: 0x00274D4F
		public static LocalizedString CertificateStatusUnknown
		{
			get
			{
				return new LocalizedString("CertificateStatusUnknown", "ExE6C9BE", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009F46 RID: 40774 RVA: 0x00276B70 File Offset: 0x00274D70
		public static LocalizedString ConfirmationMessageSetRequest(string identity)
		{
			return new LocalizedString("ConfirmationMessageSetRequest", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x17003412 RID: 13330
		// (get) Token: 0x06009F47 RID: 40775 RVA: 0x00276B9F File Offset: 0x00274D9F
		public static LocalizedString VariablesSection
		{
			get
			{
				return new LocalizedString("VariablesSection", "Ex804FE7", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003413 RID: 13331
		// (get) Token: 0x06009F48 RID: 40776 RVA: 0x00276BBD File Offset: 0x00274DBD
		public static LocalizedString InfoCheckingRmsOnlineAuthenticationCertificate
		{
			get
			{
				return new LocalizedString("InfoCheckingRmsOnlineAuthenticationCertificate", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009F49 RID: 40777 RVA: 0x00276BDC File Offset: 0x00274DDC
		public static LocalizedString WarningParametersIgnored(string parameters)
		{
			return new LocalizedString("WarningParametersIgnored", "Ex3122CD", false, true, Strings.ResourceManager, new object[]
			{
				parameters
			});
		}

		// Token: 0x06009F4A RID: 40778 RVA: 0x00276C0C File Offset: 0x00274E0C
		public static LocalizedString RemovingIndexEntry(string indexEntry)
		{
			return new LocalizedString("RemovingIndexEntry", "ExEB634A", false, true, Strings.ResourceManager, new object[]
			{
				indexEntry
			});
		}

		// Token: 0x06009F4B RID: 40779 RVA: 0x00276C3C File Offset: 0x00274E3C
		public static LocalizedString ProtocolSettingsFullDetails(string server, string port, string encryption)
		{
			return new LocalizedString("ProtocolSettingsFullDetails", "ExB395D4", false, true, Strings.ResourceManager, new object[]
			{
				server,
				port,
				encryption
			});
		}

		// Token: 0x06009F4C RID: 40780 RVA: 0x00276C74 File Offset: 0x00274E74
		public static LocalizedString WarningCannotUpgradeRole(string roleId, string error)
		{
			return new LocalizedString("WarningCannotUpgradeRole", "ExC6F388", false, true, Strings.ResourceManager, new object[]
			{
				roleId,
				error
			});
		}

		// Token: 0x06009F4D RID: 40781 RVA: 0x00276CA8 File Offset: 0x00274EA8
		public static LocalizedString CasConnectivityTaskTimeout(uint seconds)
		{
			return new LocalizedString("CasConnectivityTaskTimeout", "ExE6C6E6", false, true, Strings.ResourceManager, new object[]
			{
				seconds
			});
		}

		// Token: 0x17003414 RID: 13332
		// (get) Token: 0x06009F4E RID: 40782 RVA: 0x00276CDC File Offset: 0x00274EDC
		public static LocalizedString MtrtNotifySender
		{
			get
			{
				return new LocalizedString("MtrtNotifySender", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003415 RID: 13333
		// (get) Token: 0x06009F4F RID: 40783 RVA: 0x00276CFA File Offset: 0x00274EFA
		public static LocalizedString TransportSettingsNotFound
		{
			get
			{
				return new LocalizedString("TransportSettingsNotFound", "ExF525DD", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009F50 RID: 40784 RVA: 0x00276D18 File Offset: 0x00274F18
		public static LocalizedString ErrorInvalidAddOperationOnDBCopyForCircularLoggingEnabledDB(string pfdb)
		{
			return new LocalizedString("ErrorInvalidAddOperationOnDBCopyForCircularLoggingEnabledDB", "Ex25C110", false, true, Strings.ResourceManager, new object[]
			{
				pfdb
			});
		}

		// Token: 0x06009F51 RID: 40785 RVA: 0x00276D48 File Offset: 0x00274F48
		public static LocalizedString ConfirmationMessageNewMailboxRestoreRequest(string name)
		{
			return new LocalizedString("ConfirmationMessageNewMailboxRestoreRequest", "Ex7BE180", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x06009F52 RID: 40786 RVA: 0x00276D78 File Offset: 0x00274F78
		public static LocalizedString ErrorInvalidOperationOnMoveMasterForPublicFolder(string pfdb)
		{
			return new LocalizedString("ErrorInvalidOperationOnMoveMasterForPublicFolder", "Ex772F0B", false, true, Strings.ResourceManager, new object[]
			{
				pfdb
			});
		}

		// Token: 0x06009F53 RID: 40787 RVA: 0x00276DA8 File Offset: 0x00274FA8
		public static LocalizedString WarningLinkingWLMPolicyToLocalServerFailed(string policyName, string serverName, string error)
		{
			return new LocalizedString("WarningLinkingWLMPolicyToLocalServerFailed", "", false, false, Strings.ResourceManager, new object[]
			{
				policyName,
				serverName,
				error
			});
		}

		// Token: 0x06009F54 RID: 40788 RVA: 0x00276DE0 File Offset: 0x00274FE0
		public static LocalizedString ErrorCannotStartPilotFOrOrgBeingUpgraded(string orgId)
		{
			return new LocalizedString("ErrorCannotStartPilotFOrOrgBeingUpgraded", "", false, false, Strings.ResourceManager, new object[]
			{
				orgId
			});
		}

		// Token: 0x06009F55 RID: 40789 RVA: 0x00276E10 File Offset: 0x00275010
		public static LocalizedString SearchingForCertificateBySubject(string trimmedIssuedTo)
		{
			return new LocalizedString("SearchingForCertificateBySubject", "Ex4EDA5B", false, true, Strings.ResourceManager, new object[]
			{
				trimmedIssuedTo
			});
		}

		// Token: 0x06009F56 RID: 40790 RVA: 0x00276E40 File Offset: 0x00275040
		public static LocalizedString ConfirmationMessageRestoreDetailsTemplate(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRestoreDetailsTemplate", "Ex19DDB5", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x17003416 RID: 13334
		// (get) Token: 0x06009F57 RID: 40791 RVA: 0x00276E6F File Offset: 0x0027506F
		public static LocalizedString SetupProgressCreateRBACRoleAssignments
		{
			get
			{
				return new LocalizedString("SetupProgressCreateRBACRoleAssignments", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003417 RID: 13335
		// (get) Token: 0x06009F58 RID: 40792 RVA: 0x00276E8D File Offset: 0x0027508D
		public static LocalizedString GetContentIndexTask
		{
			get
			{
				return new LocalizedString("GetContentIndexTask", "ExDF5851", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009F59 RID: 40793 RVA: 0x00276EAC File Offset: 0x002750AC
		public static LocalizedString ErrorCannotUpdateInvalidRecipient(string idRecipient)
		{
			return new LocalizedString("ErrorCannotUpdateInvalidRecipient", "Ex1FBEEA", false, true, Strings.ResourceManager, new object[]
			{
				idRecipient
			});
		}

		// Token: 0x06009F5A RID: 40794 RVA: 0x00276EDC File Offset: 0x002750DC
		public static LocalizedString VerificationOfRemoteOrganizationRelationshipFailed(string remoteName)
		{
			return new LocalizedString("VerificationOfRemoteOrganizationRelationshipFailed", "Ex00DDA5", false, true, Strings.ResourceManager, new object[]
			{
				remoteName
			});
		}

		// Token: 0x17003418 RID: 13336
		// (get) Token: 0x06009F5B RID: 40795 RVA: 0x00276F0B File Offset: 0x0027510B
		public static LocalizedString BackSyncFailedToConvertSyncObjectToDirectoryObject
		{
			get
			{
				return new LocalizedString("BackSyncFailedToConvertSyncObjectToDirectoryObject", "Ex9C7F3A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003419 RID: 13337
		// (get) Token: 0x06009F5C RID: 40796 RVA: 0x00276F29 File Offset: 0x00275129
		public static LocalizedString ADAttributePagerNumber
		{
			get
			{
				return new LocalizedString("ADAttributePagerNumber", "ExBFACC6", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700341A RID: 13338
		// (get) Token: 0x06009F5D RID: 40797 RVA: 0x00276F47 File Offset: 0x00275147
		public static LocalizedString SetupProgressEnableSelfManagement
		{
			get
			{
				return new LocalizedString("SetupProgressEnableSelfManagement", "Ex022DFD", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700341B RID: 13339
		// (get) Token: 0x06009F5E RID: 40798 RVA: 0x00276F65 File Offset: 0x00275165
		public static LocalizedString ADAttributePhoneNumber
		{
			get
			{
				return new LocalizedString("ADAttributePhoneNumber", "ExADCEA2", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700341C RID: 13340
		// (get) Token: 0x06009F5F RID: 40799 RVA: 0x00276F83 File Offset: 0x00275183
		public static LocalizedString TenantNotificationVerboseNotSendingEmailDailyCap
		{
			get
			{
				return new LocalizedString("TenantNotificationVerboseNotSendingEmailDailyCap", "Ex6B0473", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009F60 RID: 40800 RVA: 0x00276FA4 File Offset: 0x002751A4
		public static LocalizedString CasHealthTestUserInDataCenterNotAccessible(string testDomain)
		{
			return new LocalizedString("CasHealthTestUserInDataCenterNotAccessible", "Ex56E898", false, true, Strings.ResourceManager, new object[]
			{
				testDomain
			});
		}

		// Token: 0x1700341D RID: 13341
		// (get) Token: 0x06009F61 RID: 40801 RVA: 0x00276FD3 File Offset: 0x002751D3
		public static LocalizedString DagNetworkAllDisabledWarning
		{
			get
			{
				return new LocalizedString("DagNetworkAllDisabledWarning", "Ex65CB44", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700341E RID: 13342
		// (get) Token: 0x06009F62 RID: 40802 RVA: 0x00276FF1 File Offset: 0x002751F1
		public static LocalizedString ContentIndexServiceDescription
		{
			get
			{
				return new LocalizedString("ContentIndexServiceDescription", "ExE02F2E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009F63 RID: 40803 RVA: 0x00277010 File Offset: 0x00275210
		public static LocalizedString ConfirmationMessageSetMessageClassification(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetMessageClassification", "Ex88F31E", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x06009F64 RID: 40804 RVA: 0x00277040 File Offset: 0x00275240
		public static LocalizedString ErrorFileNotFound(string filename)
		{
			return new LocalizedString("ErrorFileNotFound", "Ex1B08F3", false, true, Strings.ResourceManager, new object[]
			{
				filename
			});
		}

		// Token: 0x1700341F RID: 13343
		// (get) Token: 0x06009F65 RID: 40805 RVA: 0x0027706F File Offset: 0x0027526F
		public static LocalizedString SetupProgressGALSyncEnabled
		{
			get
			{
				return new LocalizedString("SetupProgressGALSyncEnabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009F66 RID: 40806 RVA: 0x00277090 File Offset: 0x00275290
		public static LocalizedString ErrorRemoveMailboxIsJournalReportNdrTo(string mbxId)
		{
			return new LocalizedString("ErrorRemoveMailboxIsJournalReportNdrTo", "", false, false, Strings.ResourceManager, new object[]
			{
				mbxId
			});
		}

		// Token: 0x17003420 RID: 13344
		// (get) Token: 0x06009F67 RID: 40807 RVA: 0x002770BF File Offset: 0x002752BF
		public static LocalizedString ErrorNameNotSet
		{
			get
			{
				return new LocalizedString("ErrorNameNotSet", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009F68 RID: 40808 RVA: 0x002770E0 File Offset: 0x002752E0
		public static LocalizedString ErrorInvalidFilterForLowestEap(string idEap, string input)
		{
			return new LocalizedString("ErrorInvalidFilterForLowestEap", "Ex1347D0", false, true, Strings.ResourceManager, new object[]
			{
				idEap,
				input
			});
		}

		// Token: 0x06009F69 RID: 40809 RVA: 0x00277114 File Offset: 0x00275314
		public static LocalizedString IPListProviderNameExists(string name)
		{
			return new LocalizedString("IPListProviderNameExists", "Ex0534B1", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x17003421 RID: 13345
		// (get) Token: 0x06009F6A RID: 40810 RVA: 0x00277143 File Offset: 0x00275343
		public static LocalizedString StartingMomService
		{
			get
			{
				return new LocalizedString("StartingMomService", "Ex1B5FAF", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009F6B RID: 40811 RVA: 0x00277164 File Offset: 0x00275364
		public static LocalizedString ErrorRoleEntryNotExistOnParent(string roleId, string entryName)
		{
			return new LocalizedString("ErrorRoleEntryNotExistOnParent", "Ex3225F4", false, true, Strings.ResourceManager, new object[]
			{
				roleId,
				entryName
			});
		}

		// Token: 0x06009F6C RID: 40812 RVA: 0x00277198 File Offset: 0x00275398
		public static LocalizedString ConfirmationMessageStopMailboxSearch(string name)
		{
			return new LocalizedString("ConfirmationMessageStopMailboxSearch", "Ex75BE8B", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x06009F6D RID: 40813 RVA: 0x002771C8 File Offset: 0x002753C8
		public static LocalizedString WarningSearchAdminAuditLogOnPreR5(string org)
		{
			return new LocalizedString("WarningSearchAdminAuditLogOnPreR5", "Ex897DCB", false, true, Strings.ResourceManager, new object[]
			{
				org
			});
		}

		// Token: 0x06009F6E RID: 40814 RVA: 0x002771F8 File Offset: 0x002753F8
		public static LocalizedString WarningRetentionTagIdChange(string tagName)
		{
			return new LocalizedString("WarningRetentionTagIdChange", "Ex4B930B", false, true, Strings.ResourceManager, new object[]
			{
				tagName
			});
		}

		// Token: 0x17003422 RID: 13346
		// (get) Token: 0x06009F6F RID: 40815 RVA: 0x00277227 File Offset: 0x00275427
		public static LocalizedString SetupProgressRecipientMailSubmissionRateQuota
		{
			get
			{
				return new LocalizedString("SetupProgressRecipientMailSubmissionRateQuota", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009F70 RID: 40816 RVA: 0x00277248 File Offset: 0x00275448
		public static LocalizedString TestSearchCreateMessage(string MDB, string ID)
		{
			return new LocalizedString("TestSearchCreateMessage", "ExA29C84", false, true, Strings.ResourceManager, new object[]
			{
				MDB,
				ID
			});
		}

		// Token: 0x06009F71 RID: 40817 RVA: 0x0027727C File Offset: 0x0027547C
		public static LocalizedString SgcFailedToSuspendRpc(string sg, string error)
		{
			return new LocalizedString("SgcFailedToSuspendRpc", "ExBA045F", false, true, Strings.ResourceManager, new object[]
			{
				sg,
				error
			});
		}

		// Token: 0x06009F72 RID: 40818 RVA: 0x002772B0 File Offset: 0x002754B0
		public static LocalizedString ErrorSupervisionEntryAlreadyPresent(string entry, string tag)
		{
			return new LocalizedString("ErrorSupervisionEntryAlreadyPresent", "Ex00320F", false, true, Strings.ResourceManager, new object[]
			{
				entry,
				tag
			});
		}

		// Token: 0x06009F73 RID: 40819 RVA: 0x002772E4 File Offset: 0x002754E4
		public static LocalizedString WrongNumberOfTokens(string line, string file, string expectedNumber)
		{
			return new LocalizedString("WrongNumberOfTokens", "ExACE486", false, true, Strings.ResourceManager, new object[]
			{
				line,
				file,
				expectedNumber
			});
		}

		// Token: 0x17003423 RID: 13347
		// (get) Token: 0x06009F74 RID: 40820 RVA: 0x0027731B File Offset: 0x0027551B
		public static LocalizedString MalboxFolderRightsEditOwnedItems
		{
			get
			{
				return new LocalizedString("MalboxFolderRightsEditOwnedItems", "Ex07BE7E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009F75 RID: 40821 RVA: 0x0027733C File Offset: 0x0027553C
		public static LocalizedString TTNameWithNonTTServiceplan(string suffix)
		{
			return new LocalizedString("TTNameWithNonTTServiceplan", "", false, false, Strings.ResourceManager, new object[]
			{
				suffix
			});
		}

		// Token: 0x06009F76 RID: 40822 RVA: 0x0027736C File Offset: 0x0027556C
		public static LocalizedString WritableDatabaseNotUnique(string WritableDatabase)
		{
			return new LocalizedString("WritableDatabaseNotUnique", "ExB0E406", false, true, Strings.ResourceManager, new object[]
			{
				WritableDatabase
			});
		}

		// Token: 0x17003424 RID: 13348
		// (get) Token: 0x06009F77 RID: 40823 RVA: 0x0027739B File Offset: 0x0027559B
		public static LocalizedString SetupPerimeterSafelistingUIMode
		{
			get
			{
				return new LocalizedString("SetupPerimeterSafelistingUIMode", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009F78 RID: 40824 RVA: 0x002773BC File Offset: 0x002755BC
		public static LocalizedString ErrorInvalidFilterForDefaultGlobalAddressList(string id, string input, string expected)
		{
			return new LocalizedString("ErrorInvalidFilterForDefaultGlobalAddressList", "Ex73BAE0", false, true, Strings.ResourceManager, new object[]
			{
				id,
				input,
				expected
			});
		}

		// Token: 0x06009F79 RID: 40825 RVA: 0x002773F4 File Offset: 0x002755F4
		public static LocalizedString ConfirmationMessageSetOfflineAddressBook(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetOfflineAddressBook", "Ex777D9D", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x06009F7A RID: 40826 RVA: 0x00277424 File Offset: 0x00275624
		public static LocalizedString ErrorNoMailboxPlanWithSKUCapability(string skuCapability)
		{
			return new LocalizedString("ErrorNoMailboxPlanWithSKUCapability", "ExD9E818", false, true, Strings.ResourceManager, new object[]
			{
				skuCapability
			});
		}

		// Token: 0x06009F7B RID: 40827 RVA: 0x00277454 File Offset: 0x00275654
		public static LocalizedString MobileDeviceLogPath(string path)
		{
			return new LocalizedString("MobileDeviceLogPath", "Ex5BD9F1", false, true, Strings.ResourceManager, new object[]
			{
				path
			});
		}

		// Token: 0x17003425 RID: 13349
		// (get) Token: 0x06009F7C RID: 40828 RVA: 0x00277483 File Offset: 0x00275683
		public static LocalizedString VerboseSearchingAssigneeInConfigNC
		{
			get
			{
				return new LocalizedString("VerboseSearchingAssigneeInConfigNC", "ExCB758B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009F7D RID: 40829 RVA: 0x002774A4 File Offset: 0x002756A4
		public static LocalizedString PerfCounterDefinition(string counterName, PerformanceCounterType counterType)
		{
			return new LocalizedString("PerfCounterDefinition", "ExA2F7D1", false, true, Strings.ResourceManager, new object[]
			{
				counterName,
				counterType
			});
		}

		// Token: 0x06009F7E RID: 40830 RVA: 0x002774DC File Offset: 0x002756DC
		public static LocalizedString CasHealthWebServicesException(string message, string stack)
		{
			return new LocalizedString("CasHealthWebServicesException", "ExD2E63F", false, true, Strings.ResourceManager, new object[]
			{
				message,
				stack
			});
		}

		// Token: 0x17003426 RID: 13350
		// (get) Token: 0x06009F7F RID: 40831 RVA: 0x0027750F File Offset: 0x0027570F
		public static LocalizedString AllForeignAccounts
		{
			get
			{
				return new LocalizedString("AllForeignAccounts", "Ex5CA2D8", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009F80 RID: 40832 RVA: 0x00277530 File Offset: 0x00275730
		public static LocalizedString OnPremisesOrganizationOrganizationRelationshipNotUnique(OrganizationRelationshipIdParameter identity)
		{
			return new LocalizedString("OnPremisesOrganizationOrganizationRelationshipNotUnique", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x06009F81 RID: 40833 RVA: 0x00277560 File Offset: 0x00275760
		public static LocalizedString CasHealthCouldNotLogUserDataCenterNoDetailedInfo(string testDomain, string scriptName)
		{
			return new LocalizedString("CasHealthCouldNotLogUserDataCenterNoDetailedInfo", "Ex34AB60", false, true, Strings.ResourceManager, new object[]
			{
				testDomain,
				scriptName
			});
		}

		// Token: 0x06009F82 RID: 40834 RVA: 0x00277594 File Offset: 0x00275794
		public static LocalizedString ConfirmationMessageStopMigrationBatch(string batchName)
		{
			return new LocalizedString("ConfirmationMessageStopMigrationBatch", "Ex43FADD", false, true, Strings.ResourceManager, new object[]
			{
				batchName
			});
		}

		// Token: 0x06009F83 RID: 40835 RVA: 0x002775C4 File Offset: 0x002757C4
		public static LocalizedString OriginalUriVerbose(string originalUri)
		{
			return new LocalizedString("OriginalUriVerbose", "ExBC1C1F", false, true, Strings.ResourceManager, new object[]
			{
				originalUri
			});
		}

		// Token: 0x17003427 RID: 13351
		// (get) Token: 0x06009F84 RID: 40836 RVA: 0x002775F3 File Offset: 0x002757F3
		public static LocalizedString CasHealthEasSyncZeroScenarioDescription
		{
			get
			{
				return new LocalizedString("CasHealthEasSyncZeroScenarioDescription", "Ex159F45", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009F85 RID: 40837 RVA: 0x00277614 File Offset: 0x00275814
		public static LocalizedString PromptFileNotFoundException(string p1, string p2)
		{
			return new LocalizedString("PromptFileNotFoundException", "ExB1429D", false, true, Strings.ResourceManager, new object[]
			{
				p1,
				p2
			});
		}

		// Token: 0x06009F86 RID: 40838 RVA: 0x00277648 File Offset: 0x00275848
		public static LocalizedString ExceptionTargetMailboxNotFound(string id, string search)
		{
			return new LocalizedString("ExceptionTargetMailboxNotFound", "ExE9F9B1", false, true, Strings.ResourceManager, new object[]
			{
				id,
				search
			});
		}

		// Token: 0x17003428 RID: 13352
		// (get) Token: 0x06009F87 RID: 40839 RVA: 0x0027767B File Offset: 0x0027587B
		public static LocalizedString SetupProgressMaxSendTransportQuota
		{
			get
			{
				return new LocalizedString("SetupProgressMaxSendTransportQuota", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009F88 RID: 40840 RVA: 0x0027769C File Offset: 0x0027589C
		public static LocalizedString IdentityWasNotInValidFormat(string rawIdentity)
		{
			return new LocalizedString("IdentityWasNotInValidFormat", "ExCAA9C7", false, true, Strings.ResourceManager, new object[]
			{
				rawIdentity
			});
		}

		// Token: 0x17003429 RID: 13353
		// (get) Token: 0x06009F89 RID: 40841 RVA: 0x002776CB File Offset: 0x002758CB
		public static LocalizedString FfoWebServicePreConfigComponentDescription
		{
			get
			{
				return new LocalizedString("FfoWebServicePreConfigComponentDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700342A RID: 13354
		// (get) Token: 0x06009F8A RID: 40842 RVA: 0x002776E9 File Offset: 0x002758E9
		public static LocalizedString DisasterRecoveryUnifiedMessagingRoleDescription
		{
			get
			{
				return new LocalizedString("DisasterRecoveryUnifiedMessagingRoleDescription", "ExA20CB6", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009F8B RID: 40843 RVA: 0x00277708 File Offset: 0x00275908
		public static LocalizedString CannotStartRunningSearch(string name)
		{
			return new LocalizedString("CannotStartRunningSearch", "ExC33C41", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x1700342B RID: 13355
		// (get) Token: 0x06009F8C RID: 40844 RVA: 0x00277737 File Offset: 0x00275937
		public static LocalizedString SetupProgressActiveSyncEnabled
		{
			get
			{
				return new LocalizedString("SetupProgressActiveSyncEnabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009F8D RID: 40845 RVA: 0x00277758 File Offset: 0x00275958
		public static LocalizedString ErrorManagedMemberNotExists(string memberName)
		{
			return new LocalizedString("ErrorManagedMemberNotExists", "ExBA0CE1", false, true, Strings.ResourceManager, new object[]
			{
				memberName
			});
		}

		// Token: 0x1700342C RID: 13356
		// (get) Token: 0x06009F8E RID: 40846 RVA: 0x00277787 File Offset: 0x00275987
		public static LocalizedString ErrorInvalidAuditOwnerOperationType
		{
			get
			{
				return new LocalizedString("ErrorInvalidAuditOwnerOperationType", "Ex2FFD46", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700342D RID: 13357
		// (get) Token: 0x06009F8F RID: 40847 RVA: 0x002777A5 File Offset: 0x002759A5
		public static LocalizedString ActiveDirectoryConnectivityTransactionsAllSucceeded
		{
			get
			{
				return new LocalizedString("ActiveDirectoryConnectivityTransactionsAllSucceeded", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700342E RID: 13358
		// (get) Token: 0x06009F90 RID: 40848 RVA: 0x002777C3 File Offset: 0x002759C3
		public static LocalizedString DefaultPublicFolders
		{
			get
			{
				return new LocalizedString("DefaultPublicFolders", "Ex9E6405", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700342F RID: 13359
		// (get) Token: 0x06009F91 RID: 40849 RVA: 0x002777E1 File Offset: 0x002759E1
		public static LocalizedString SetupProgressCreateAutoGroupRetentionPolicyTag
		{
			get
			{
				return new LocalizedString("SetupProgressCreateAutoGroupRetentionPolicyTag", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009F92 RID: 40850 RVA: 0x00277800 File Offset: 0x00275A00
		public static LocalizedString MonitoringItemAlreadyHasGlobalOverride(string workitem, string overrideName, string workitemType)
		{
			return new LocalizedString("MonitoringItemAlreadyHasGlobalOverride", "", false, false, Strings.ResourceManager, new object[]
			{
				workitem,
				overrideName,
				workitemType
			});
		}

		// Token: 0x06009F93 RID: 40851 RVA: 0x00277838 File Offset: 0x00275A38
		public static LocalizedString ErrorReadingUpdatedUserFromAD(string saveDC, string readDC)
		{
			return new LocalizedString("ErrorReadingUpdatedUserFromAD", "Ex65AF71", false, true, Strings.ResourceManager, new object[]
			{
				saveDC,
				readDC
			});
		}

		// Token: 0x06009F94 RID: 40852 RVA: 0x0027786C File Offset: 0x00275A6C
		public static LocalizedString CasHealthTestUserOnIncorrectServer(string domain, string userName, string foundOn, string shouldBeOn)
		{
			return new LocalizedString("CasHealthTestUserOnIncorrectServer", "Ex1EE517", false, true, Strings.ResourceManager, new object[]
			{
				domain,
				userName,
				foundOn,
				shouldBeOn
			});
		}

		// Token: 0x06009F95 RID: 40853 RVA: 0x002778A8 File Offset: 0x00275AA8
		public static LocalizedString CrossPremiseServerNotSelected(string server)
		{
			return new LocalizedString("CrossPremiseServerNotSelected", "Ex249E8D", false, true, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		// Token: 0x06009F96 RID: 40854 RVA: 0x002778D8 File Offset: 0x00275AD8
		public static LocalizedString ErrorRemovedMailboxCannotBeUsedWithDatabaseParameter(string databaseValue)
		{
			return new LocalizedString("ErrorRemovedMailboxCannotBeUsedWithDatabaseParameter", "ExE9A40D", false, true, Strings.ResourceManager, new object[]
			{
				databaseValue
			});
		}

		// Token: 0x06009F97 RID: 40855 RVA: 0x00277908 File Offset: 0x00275B08
		public static LocalizedString ConfirmationMessageNewDynamicDistributionGroupCustomFilter(string Name, string RecipientFilter, string OrganizationalUnit)
		{
			return new LocalizedString("ConfirmationMessageNewDynamicDistributionGroupCustomFilter", "Ex60DD60", false, true, Strings.ResourceManager, new object[]
			{
				Name,
				RecipientFilter,
				OrganizationalUnit
			});
		}

		// Token: 0x06009F98 RID: 40856 RVA: 0x00277940 File Offset: 0x00275B40
		public static LocalizedString ServiceNotInstalled(string servicename)
		{
			return new LocalizedString("ServiceNotInstalled", "Ex1F216A", false, true, Strings.ResourceManager, new object[]
			{
				servicename
			});
		}

		// Token: 0x06009F99 RID: 40857 RVA: 0x00277970 File Offset: 0x00275B70
		public static LocalizedString MultipleDefaultPoliciesExist(string organization)
		{
			return new LocalizedString("MultipleDefaultPoliciesExist", "Ex9C597B", false, true, Strings.ResourceManager, new object[]
			{
				organization
			});
		}

		// Token: 0x17003430 RID: 13360
		// (get) Token: 0x06009F9A RID: 40858 RVA: 0x0027799F File Offset: 0x00275B9F
		public static LocalizedString MoveStatusUnknown
		{
			get
			{
				return new LocalizedString("MoveStatusUnknown", "ExCD8796", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009F9B RID: 40859 RVA: 0x002779C0 File Offset: 0x00275BC0
		public static LocalizedString ConfirmationMessageNewPublicFolderMailboxMigrationRequest(string name)
		{
			return new LocalizedString("ConfirmationMessageNewPublicFolderMailboxMigrationRequest", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x06009F9C RID: 40860 RVA: 0x002779F0 File Offset: 0x00275BF0
		public static LocalizedString TestSearchCIIsDisabled(string mdb)
		{
			return new LocalizedString("TestSearchCIIsDisabled", "Ex60D11D", false, true, Strings.ResourceManager, new object[]
			{
				mdb
			});
		}

		// Token: 0x17003431 RID: 13361
		// (get) Token: 0x06009F9D RID: 40861 RVA: 0x00277A1F File Offset: 0x00275C1F
		public static LocalizedString CasHealthOwaLongName
		{
			get
			{
				return new LocalizedString("CasHealthOwaLongName", "Ex598ABE", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009F9E RID: 40862 RVA: 0x00277A40 File Offset: 0x00275C40
		public static LocalizedString SafeRecipientsNotUpdated(int safeRecipients, int safeRecipientDomains, string identity)
		{
			return new LocalizedString("SafeRecipientsNotUpdated", "Ex507BB2", false, true, Strings.ResourceManager, new object[]
			{
				safeRecipients,
				safeRecipientDomains,
				identity
			});
		}

		// Token: 0x17003432 RID: 13362
		// (get) Token: 0x06009F9F RID: 40863 RVA: 0x00277A81 File Offset: 0x00275C81
		public static LocalizedString CasHealthEcpShortName
		{
			get
			{
				return new LocalizedString("CasHealthEcpShortName", "ExE0D78B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009FA0 RID: 40864 RVA: 0x00277AA0 File Offset: 0x00275CA0
		public static LocalizedString InstructResetCredentials(string detailedInformation)
		{
			return new LocalizedString("InstructResetCredentials", "Ex2C9EC5", false, true, Strings.ResourceManager, new object[]
			{
				detailedInformation
			});
		}

		// Token: 0x17003433 RID: 13363
		// (get) Token: 0x06009FA1 RID: 40865 RVA: 0x00277ACF File Offset: 0x00275CCF
		public static LocalizedString CopyStatusMounting
		{
			get
			{
				return new LocalizedString("CopyStatusMounting", "ExA6FB97", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009FA2 RID: 40866 RVA: 0x00277AF0 File Offset: 0x00275CF0
		public static LocalizedString ErrorExchangeConfigurationContainerNotUnique(string idStringValue)
		{
			return new LocalizedString("ErrorExchangeConfigurationContainerNotUnique", "ExAC9CB9", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		// Token: 0x06009FA3 RID: 40867 RVA: 0x00277B20 File Offset: 0x00275D20
		public static LocalizedString VerboseArchiveNotExistInStore(string identity)
		{
			return new LocalizedString("VerboseArchiveNotExistInStore", "Ex034C5D", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x17003434 RID: 13364
		// (get) Token: 0x06009FA4 RID: 40868 RVA: 0x00277B4F File Offset: 0x00275D4F
		public static LocalizedString CopyOperation
		{
			get
			{
				return new LocalizedString("CopyOperation", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009FA5 RID: 40869 RVA: 0x00277B70 File Offset: 0x00275D70
		public static LocalizedString ErrorAmbiguousElcFolderId(string folderid)
		{
			return new LocalizedString("ErrorAmbiguousElcFolderId", "Ex196C57", false, true, Strings.ResourceManager, new object[]
			{
				folderid
			});
		}

		// Token: 0x06009FA6 RID: 40870 RVA: 0x00277BA0 File Offset: 0x00275DA0
		public static LocalizedString SendConnectorWrongSourceServerRole(string serverName)
		{
			return new LocalizedString("SendConnectorWrongSourceServerRole", "Ex64D0EC", false, true, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		// Token: 0x17003435 RID: 13365
		// (get) Token: 0x06009FA7 RID: 40871 RVA: 0x00277BCF File Offset: 0x00275DCF
		public static LocalizedString FfoWebServiceProvisionComponentDescription
		{
			get
			{
				return new LocalizedString("FfoWebServiceProvisionComponentDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003436 RID: 13366
		// (get) Token: 0x06009FA8 RID: 40872 RVA: 0x00277BED File Offset: 0x00275DED
		public static LocalizedString ErrorConflictResourceCustom
		{
			get
			{
				return new LocalizedString("ErrorConflictResourceCustom", "ExAFEBB3", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009FA9 RID: 40873 RVA: 0x00277C0C File Offset: 0x00275E0C
		public static LocalizedString ClassificationRuleCollectionFingerprintsExceedLimit(int actualCount, int limit)
		{
			return new LocalizedString("ClassificationRuleCollectionFingerprintsExceedLimit", "", false, false, Strings.ResourceManager, new object[]
			{
				actualCount,
				limit
			});
		}

		// Token: 0x17003437 RID: 13367
		// (get) Token: 0x06009FAA RID: 40874 RVA: 0x00277C49 File Offset: 0x00275E49
		public static LocalizedString InstallAssistantsServiceTask
		{
			get
			{
				return new LocalizedString("InstallAssistantsServiceTask", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009FAB RID: 40875 RVA: 0x00277C68 File Offset: 0x00275E68
		public static LocalizedString ErrorInvalidAddOperationDatabaseIsNotMounted(string pfdb)
		{
			return new LocalizedString("ErrorInvalidAddOperationDatabaseIsNotMounted", "ExAFA103", false, true, Strings.ResourceManager, new object[]
			{
				pfdb
			});
		}

		// Token: 0x17003438 RID: 13368
		// (get) Token: 0x06009FAC RID: 40876 RVA: 0x00277C97 File Offset: 0x00275E97
		public static LocalizedString SetupProgressCreateOWAMailboxPolicyContainers
		{
			get
			{
				return new LocalizedString("SetupProgressCreateOWAMailboxPolicyContainers", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009FAD RID: 40877 RVA: 0x00277CB8 File Offset: 0x00275EB8
		public static LocalizedString ConfirmationMessageRemoveTeamMailboxProvisioningPolicy(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveTeamMailboxProvisioningPolicy", "", false, false, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x06009FAE RID: 40878 RVA: 0x00277CE8 File Offset: 0x00275EE8
		public static LocalizedString RequestingFederationMetadataFromEndPoint(string metadataEpr)
		{
			return new LocalizedString("RequestingFederationMetadataFromEndPoint", "Ex332BEB", false, true, Strings.ResourceManager, new object[]
			{
				metadataEpr
			});
		}

		// Token: 0x06009FAF RID: 40879 RVA: 0x00277D18 File Offset: 0x00275F18
		public static LocalizedString VerboseDeleteFile(string server, string targetFilePath)
		{
			return new LocalizedString("VerboseDeleteFile", "Ex6E834B", false, true, Strings.ResourceManager, new object[]
			{
				server,
				targetFilePath
			});
		}

		// Token: 0x06009FB0 RID: 40880 RVA: 0x00277D4C File Offset: 0x00275F4C
		public static LocalizedString MRSProxyPingSkipped(string mrsServer)
		{
			return new LocalizedString("MRSProxyPingSkipped", "", false, false, Strings.ResourceManager, new object[]
			{
				mrsServer
			});
		}

		// Token: 0x06009FB1 RID: 40881 RVA: 0x00277D7C File Offset: 0x00275F7C
		public static LocalizedString StampExistingResponsePassThroughOnVirtualDirectoryFailure(string serverName, string metabasePath, int exitCode, string errors)
		{
			return new LocalizedString("StampExistingResponsePassThroughOnVirtualDirectoryFailure", "Ex420735", false, true, Strings.ResourceManager, new object[]
			{
				serverName,
				metabasePath,
				exitCode,
				errors
			});
		}

		// Token: 0x17003439 RID: 13369
		// (get) Token: 0x06009FB2 RID: 40882 RVA: 0x00277DBC File Offset: 0x00275FBC
		public static LocalizedString KeynoteConnectorServiceDisplayName
		{
			get
			{
				return new LocalizedString("KeynoteConnectorServiceDisplayName", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009FB3 RID: 40883 RVA: 0x00277DDC File Offset: 0x00275FDC
		public static LocalizedString ConfirmationMessageNewPublicFolder(string parent, string Name)
		{
			return new LocalizedString("ConfirmationMessageNewPublicFolder", "ExD4E28C", false, true, Strings.ResourceManager, new object[]
			{
				parent,
				Name
			});
		}

		// Token: 0x06009FB4 RID: 40884 RVA: 0x00277E10 File Offset: 0x00276010
		public static LocalizedString ConfirmationMessageImportRecipientDataProperty(string recipient)
		{
			return new LocalizedString("ConfirmationMessageImportRecipientDataProperty", "Ex451FCE", false, true, Strings.ResourceManager, new object[]
			{
				recipient
			});
		}

		// Token: 0x1700343A RID: 13370
		// (get) Token: 0x06009FB5 RID: 40885 RVA: 0x00277E3F File Offset: 0x0027603F
		public static LocalizedString ADAttributeCustomAttribute5
		{
			get
			{
				return new LocalizedString("ADAttributeCustomAttribute5", "ExC654E7", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700343B RID: 13371
		// (get) Token: 0x06009FB6 RID: 40886 RVA: 0x00277E5D File Offset: 0x0027605D
		public static LocalizedString ADAttributeCustomAttribute1
		{
			get
			{
				return new LocalizedString("ADAttributeCustomAttribute1", "ExF9BF19", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700343C RID: 13372
		// (get) Token: 0x06009FB7 RID: 40887 RVA: 0x00277E7B File Offset: 0x0027607B
		public static LocalizedString ErrorFilterParametersIntraOrg
		{
			get
			{
				return new LocalizedString("ErrorFilterParametersIntraOrg", "Ex978DF5", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009FB8 RID: 40888 RVA: 0x00277E9C File Offset: 0x0027609C
		public static LocalizedString ErrorPreE12TargetConfigurationOnly(string database)
		{
			return new LocalizedString("ErrorPreE12TargetConfigurationOnly", "Ex9ABE35", false, true, Strings.ResourceManager, new object[]
			{
				database
			});
		}

		// Token: 0x06009FB9 RID: 40889 RVA: 0x00277ECC File Offset: 0x002760CC
		public static LocalizedString ConfirmationMessageAddRecipientPermission(string Identity, string User, string AccessRights)
		{
			return new LocalizedString("ConfirmationMessageAddRecipientPermission", "ExAB0943", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				User,
				AccessRights
			});
		}

		// Token: 0x1700343D RID: 13373
		// (get) Token: 0x06009FBA RID: 40890 RVA: 0x00277F03 File Offset: 0x00276103
		public static LocalizedString CasHealthWebAppLiveIdEnd
		{
			get
			{
				return new LocalizedString("CasHealthWebAppLiveIdEnd", "Ex3AC8A9", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700343E RID: 13374
		// (get) Token: 0x06009FBB RID: 40891 RVA: 0x00277F21 File Offset: 0x00276121
		public static LocalizedString WebServiceRoleEntryNotSupportParametersAndSnapin
		{
			get
			{
				return new LocalizedString("WebServiceRoleEntryNotSupportParametersAndSnapin", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700343F RID: 13375
		// (get) Token: 0x06009FBC RID: 40892 RVA: 0x00277F3F File Offset: 0x0027613F
		public static LocalizedString MtrtEventFail
		{
			get
			{
				return new LocalizedString("MtrtEventFail", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009FBD RID: 40893 RVA: 0x00277F60 File Offset: 0x00276160
		public static LocalizedString RegistryAccessSecurityExceptionWrite(string key)
		{
			return new LocalizedString("RegistryAccessSecurityExceptionWrite", "ExF51160", false, true, Strings.ResourceManager, new object[]
			{
				key
			});
		}

		// Token: 0x06009FBE RID: 40894 RVA: 0x00277F90 File Offset: 0x00276190
		public static LocalizedString CasHealthWebAppRequestException(Uri requestUri, WebExceptionStatus status, string serverName, string exceptionMessage)
		{
			return new LocalizedString("CasHealthWebAppRequestException", "ExEFE426", false, true, Strings.ResourceManager, new object[]
			{
				requestUri,
				status,
				serverName,
				exceptionMessage
			});
		}

		// Token: 0x17003440 RID: 13376
		// (get) Token: 0x06009FBF RID: 40895 RVA: 0x00277FD0 File Offset: 0x002761D0
		public static LocalizedString WarningMessageSizeRestrictionOutOfSync
		{
			get
			{
				return new LocalizedString("WarningMessageSizeRestrictionOutOfSync", "Ex673B08", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009FC0 RID: 40896 RVA: 0x00277FF0 File Offset: 0x002761F0
		public static LocalizedString MoveMailboxShouldMoveE14ToLowerVersion(string displayname, string smtp, string database)
		{
			return new LocalizedString("MoveMailboxShouldMoveE14ToLowerVersion", "ExD4DF67", false, true, Strings.ResourceManager, new object[]
			{
				displayname,
				smtp,
				database
			});
		}

		// Token: 0x17003441 RID: 13377
		// (get) Token: 0x06009FC1 RID: 40897 RVA: 0x00278027 File Offset: 0x00276227
		public static LocalizedString MigrationCSVNotAllowed
		{
			get
			{
				return new LocalizedString("MigrationCSVNotAllowed", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003442 RID: 13378
		// (get) Token: 0x06009FC2 RID: 40898 RVA: 0x00278045 File Offset: 0x00276245
		public static LocalizedString NeedIisRestartForChangingECPFeatureWarning
		{
			get
			{
				return new LocalizedString("NeedIisRestartForChangingECPFeatureWarning", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009FC3 RID: 40899 RVA: 0x00278064 File Offset: 0x00276264
		public static LocalizedString TlsSenderCertificateNameMatchesFfoFDSmtpCertificateId(string certificate)
		{
			return new LocalizedString("TlsSenderCertificateNameMatchesFfoFDSmtpCertificateId", "", false, false, Strings.ResourceManager, new object[]
			{
				certificate
			});
		}

		// Token: 0x17003443 RID: 13379
		// (get) Token: 0x06009FC4 RID: 40900 RVA: 0x00278093 File Offset: 0x00276293
		public static LocalizedString ClassificationRuleCollectionUnexpectedContents
		{
			get
			{
				return new LocalizedString("ClassificationRuleCollectionUnexpectedContents", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009FC5 RID: 40901 RVA: 0x002780B4 File Offset: 0x002762B4
		public static LocalizedString PerfCounterFileInUse(string counterName, int retries, int retryPeriod)
		{
			return new LocalizedString("PerfCounterFileInUse", "Ex5D35E6", false, true, Strings.ResourceManager, new object[]
			{
				counterName,
				retries,
				retryPeriod
			});
		}

		// Token: 0x06009FC6 RID: 40902 RVA: 0x002780F8 File Offset: 0x002762F8
		public static LocalizedString ErrorFailToDeleteDueToSubFolders(string identity)
		{
			return new LocalizedString("ErrorFailToDeleteDueToSubFolders", "Ex37D10F", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x17003444 RID: 13380
		// (get) Token: 0x06009FC7 RID: 40903 RVA: 0x00278127 File Offset: 0x00276327
		public static LocalizedString BPADownloadingUpdates
		{
			get
			{
				return new LocalizedString("BPADownloadingUpdates", "Ex39C59A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003445 RID: 13381
		// (get) Token: 0x06009FC8 RID: 40904 RVA: 0x00278145 File Offset: 0x00276345
		public static LocalizedString FoundMultipleObjectById
		{
			get
			{
				return new LocalizedString("FoundMultipleObjectById", "Ex206B90", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009FC9 RID: 40905 RVA: 0x00278164 File Offset: 0x00276364
		public static LocalizedString ErrorPrimaryTargetIsNotAnMEU(string user)
		{
			return new LocalizedString("ErrorPrimaryTargetIsNotAnMEU", "Ex1A22FB", false, true, Strings.ResourceManager, new object[]
			{
				user
			});
		}

		// Token: 0x06009FCA RID: 40906 RVA: 0x00278194 File Offset: 0x00276394
		public static LocalizedString EtrHasRmsAction(string ruleName)
		{
			return new LocalizedString("EtrHasRmsAction", "", false, false, Strings.ResourceManager, new object[]
			{
				ruleName
			});
		}

		// Token: 0x06009FCB RID: 40907 RVA: 0x002781C4 File Offset: 0x002763C4
		public static LocalizedString ErrorSubmitCommandInvalid(string command, int cmd)
		{
			return new LocalizedString("ErrorSubmitCommandInvalid", "ExDD53C3", false, true, Strings.ResourceManager, new object[]
			{
				command,
				cmd
			});
		}

		// Token: 0x17003446 RID: 13382
		// (get) Token: 0x06009FCC RID: 40908 RVA: 0x002781FC File Offset: 0x002763FC
		public static LocalizedString CasHealthSpecifyMailboxForResetCredentials
		{
			get
			{
				return new LocalizedString("CasHealthSpecifyMailboxForResetCredentials", "Ex11665A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003447 RID: 13383
		// (get) Token: 0x06009FCD RID: 40909 RVA: 0x0027821A File Offset: 0x0027641A
		public static LocalizedString SetupComponentPostSetupCafe
		{
			get
			{
				return new LocalizedString("SetupComponentPostSetupCafe", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009FCE RID: 40910 RVA: 0x00278238 File Offset: 0x00276438
		public static LocalizedString ConfirmationMessageNewRoleGroup(string Name, string Roles, string ManagedBy, string RecipientWriteScope, string ConfigWriteScope)
		{
			return new LocalizedString("ConfirmationMessageNewRoleGroup", "Ex2CEA40", false, true, Strings.ResourceManager, new object[]
			{
				Name,
				Roles,
				ManagedBy,
				RecipientWriteScope,
				ConfigWriteScope
			});
		}

		// Token: 0x06009FCF RID: 40911 RVA: 0x00278278 File Offset: 0x00276478
		public static LocalizedString DagTaskRemovingNodeToCluster(string serverName)
		{
			return new LocalizedString("DagTaskRemovingNodeToCluster", "", false, false, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		// Token: 0x06009FD0 RID: 40912 RVA: 0x002782A8 File Offset: 0x002764A8
		public static LocalizedString WarningEdbFileLocationNotExists(string path)
		{
			return new LocalizedString("WarningEdbFileLocationNotExists", "Ex4B8C71", false, true, Strings.ResourceManager, new object[]
			{
				path
			});
		}

		// Token: 0x17003448 RID: 13384
		// (get) Token: 0x06009FD1 RID: 40913 RVA: 0x002782D7 File Offset: 0x002764D7
		public static LocalizedString ConfirmationMessageSetIPAllowListProvidersConfig
		{
			get
			{
				return new LocalizedString("ConfirmationMessageSetIPAllowListProvidersConfig", "ExF479B1", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009FD2 RID: 40914 RVA: 0x002782F8 File Offset: 0x002764F8
		public static LocalizedString RequestNotSuspended(string name)
		{
			return new LocalizedString("RequestNotSuspended", "ExDC9423", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x17003449 RID: 13385
		// (get) Token: 0x06009FD3 RID: 40915 RVA: 0x00278327 File Offset: 0x00276527
		public static LocalizedString SetupComponentConfiguringRpcClientAccessService
		{
			get
			{
				return new LocalizedString("SetupComponentConfiguringRpcClientAccessService", "Ex81E298", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700344A RID: 13386
		// (get) Token: 0x06009FD4 RID: 40916 RVA: 0x00278345 File Offset: 0x00276545
		public static LocalizedString ErrorAddGroupMemberCrossTenant
		{
			get
			{
				return new LocalizedString("ErrorAddGroupMemberCrossTenant", "ExEB32A2", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700344B RID: 13387
		// (get) Token: 0x06009FD5 RID: 40917 RVA: 0x00278363 File Offset: 0x00276563
		public static LocalizedString ErrorBPAOutputConflict
		{
			get
			{
				return new LocalizedString("ErrorBPAOutputConflict", "Ex119F74", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700344C RID: 13388
		// (get) Token: 0x06009FD6 RID: 40918 RVA: 0x00278381 File Offset: 0x00276581
		public static LocalizedString ErrorRemoteMailboxImportNeedRemoteProxy
		{
			get
			{
				return new LocalizedString("ErrorRemoteMailboxImportNeedRemoteProxy", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009FD7 RID: 40919 RVA: 0x002783A0 File Offset: 0x002765A0
		public static LocalizedString InvalidForeignForestGroupException(string name, string domain)
		{
			return new LocalizedString("InvalidForeignForestGroupException", "ExC99DE5", false, true, Strings.ResourceManager, new object[]
			{
				name,
				domain
			});
		}

		// Token: 0x06009FD8 RID: 40920 RVA: 0x002783D4 File Offset: 0x002765D4
		public static LocalizedString VerboseServiceValidatorResponseTrace(string name, string message)
		{
			return new LocalizedString("VerboseServiceValidatorResponseTrace", "", false, false, Strings.ResourceManager, new object[]
			{
				name,
				message
			});
		}

		// Token: 0x06009FD9 RID: 40921 RVA: 0x00278408 File Offset: 0x00276608
		public static LocalizedString ElcUserConfigurationException(string reason)
		{
			return new LocalizedString("ElcUserConfigurationException", "", false, false, Strings.ResourceManager, new object[]
			{
				reason
			});
		}

		// Token: 0x1700344D RID: 13389
		// (get) Token: 0x06009FDA RID: 40922 RVA: 0x00278437 File Offset: 0x00276637
		public static LocalizedString ServicesComponentDescription
		{
			get
			{
				return new LocalizedString("ServicesComponentDescription", "Ex7CFDEE", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009FDB RID: 40923 RVA: 0x00278458 File Offset: 0x00276658
		public static LocalizedString ErrorTenantNotInActiveOrgState(string identity)
		{
			return new LocalizedString("ErrorTenantNotInActiveOrgState", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x06009FDC RID: 40924 RVA: 0x00278488 File Offset: 0x00276688
		public static LocalizedString MoveMailboxConfigurationOnlyShouldMove(string displayname, string smtp, string database)
		{
			return new LocalizedString("MoveMailboxConfigurationOnlyShouldMove", "Ex95FBD7", false, true, Strings.ResourceManager, new object[]
			{
				displayname,
				smtp,
				database
			});
		}

		// Token: 0x1700344E RID: 13390
		// (get) Token: 0x06009FDD RID: 40925 RVA: 0x002784BF File Offset: 0x002766BF
		public static LocalizedString StartingOnePointService
		{
			get
			{
				return new LocalizedString("StartingOnePointService", "ExC66849", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009FDE RID: 40926 RVA: 0x002784E0 File Offset: 0x002766E0
		public static LocalizedString ConfirmationMessageEnableMailboxLinkedAndResource(string Identity, string LinkedMasterAccount, string LinkedDomainController, string ResourceType)
		{
			return new LocalizedString("ConfirmationMessageEnableMailboxLinkedAndResource", "", false, false, Strings.ResourceManager, new object[]
			{
				Identity,
				LinkedMasterAccount,
				LinkedDomainController,
				ResourceType
			});
		}

		// Token: 0x1700344F RID: 13391
		// (get) Token: 0x06009FDF RID: 40927 RVA: 0x0027851B File Offset: 0x0027671B
		public static LocalizedString ErrorCannotResumeIfNotSuspended
		{
			get
			{
				return new LocalizedString("ErrorCannotResumeIfNotSuspended", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009FE0 RID: 40928 RVA: 0x0027853C File Offset: 0x0027673C
		public static LocalizedString ErrorFailedToGetDatabaseStatus(string databaseId)
		{
			return new LocalizedString("ErrorFailedToGetDatabaseStatus", "Ex51A19F", false, true, Strings.ResourceManager, new object[]
			{
				databaseId
			});
		}

		// Token: 0x17003450 RID: 13392
		// (get) Token: 0x06009FE1 RID: 40929 RVA: 0x0027856B File Offset: 0x0027676B
		public static LocalizedString SetupProgressRemovingMailboxDatabase
		{
			get
			{
				return new LocalizedString("SetupProgressRemovingMailboxDatabase", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009FE2 RID: 40930 RVA: 0x0027858C File Offset: 0x0027678C
		public static LocalizedString ErrorCannotModifyCompletedRequest(string identity)
		{
			return new LocalizedString("ErrorCannotModifyCompletedRequest", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x06009FE3 RID: 40931 RVA: 0x002785BC File Offset: 0x002767BC
		public static LocalizedString ErrorMobileMailboxPolicyNotUnique(string idStringValue)
		{
			return new LocalizedString("ErrorMobileMailboxPolicyNotUnique", "ExF1B98E", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		// Token: 0x06009FE4 RID: 40932 RVA: 0x002785EC File Offset: 0x002767EC
		public static LocalizedString VerboseCheckDirectoryExistenceCondition(string server, string path)
		{
			return new LocalizedString("VerboseCheckDirectoryExistenceCondition", "Ex7FD64E", false, true, Strings.ResourceManager, new object[]
			{
				server,
				path
			});
		}

		// Token: 0x06009FE5 RID: 40933 RVA: 0x00278620 File Offset: 0x00276820
		public static LocalizedString ErrorBadEmailAddressTemplate(string eapId, string templates)
		{
			return new LocalizedString("ErrorBadEmailAddressTemplate", "Ex0CCCEC", false, true, Strings.ResourceManager, new object[]
			{
				eapId,
				templates
			});
		}

		// Token: 0x06009FE6 RID: 40934 RVA: 0x00278654 File Offset: 0x00276854
		public static LocalizedString MismatchedUser(string user, string organizationOfUser, string organizationRelationship, string organizationOfOrgRelationship)
		{
			return new LocalizedString("MismatchedUser", "", false, false, Strings.ResourceManager, new object[]
			{
				user,
				organizationOfUser,
				organizationRelationship,
				organizationOfOrgRelationship
			});
		}

		// Token: 0x17003451 RID: 13393
		// (get) Token: 0x06009FE7 RID: 40935 RVA: 0x0027868F File Offset: 0x0027688F
		public static LocalizedString MobileDeviceLogNotRetrieved
		{
			get
			{
				return new LocalizedString("MobileDeviceLogNotRetrieved", "Ex693FCC", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009FE8 RID: 40936 RVA: 0x002786B0 File Offset: 0x002768B0
		public static LocalizedString AuditLogSearchNonUniqueArbitrationMailbox(string organization)
		{
			return new LocalizedString("AuditLogSearchNonUniqueArbitrationMailbox", "", false, false, Strings.ResourceManager, new object[]
			{
				organization
			});
		}

		// Token: 0x06009FE9 RID: 40937 RVA: 0x002786E0 File Offset: 0x002768E0
		public static LocalizedString RemoveLiveFedDomainReserveRequest(string domain)
		{
			return new LocalizedString("RemoveLiveFedDomainReserveRequest", "ExDB0CE7", false, true, Strings.ResourceManager, new object[]
			{
				domain
			});
		}

		// Token: 0x17003452 RID: 13394
		// (get) Token: 0x06009FEA RID: 40938 RVA: 0x0027870F File Offset: 0x0027690F
		public static LocalizedString DeletionAndUnsearchableNotPermitted
		{
			get
			{
				return new LocalizedString("DeletionAndUnsearchableNotPermitted", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009FEB RID: 40939 RVA: 0x00278730 File Offset: 0x00276930
		public static LocalizedString ConfirmationMessageNewRoutingGroupConnector(string name, string sourceRgName, string targetRgName, int cost)
		{
			return new LocalizedString("ConfirmationMessageNewRoutingGroupConnector", "ExBB205B", false, true, Strings.ResourceManager, new object[]
			{
				name,
				sourceRgName,
				targetRgName,
				cost
			});
		}

		// Token: 0x17003453 RID: 13395
		// (get) Token: 0x06009FEC RID: 40940 RVA: 0x00278770 File Offset: 0x00276970
		public static LocalizedString InboxRuleDescriptionOr
		{
			get
			{
				return new LocalizedString("InboxRuleDescriptionOr", "Ex82B1C5", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009FED RID: 40941 RVA: 0x00278790 File Offset: 0x00276990
		public static LocalizedString ErrorSiteNotFound(object site)
		{
			return new LocalizedString("ErrorSiteNotFound", "ExD7564F", false, true, Strings.ResourceManager, new object[]
			{
				site
			});
		}

		// Token: 0x06009FEE RID: 40942 RVA: 0x002787C0 File Offset: 0x002769C0
		public static LocalizedString ErrorUniversalGroupCannotHaveLocalGroup(string universalGroup, string localGroup)
		{
			return new LocalizedString("ErrorUniversalGroupCannotHaveLocalGroup", "Ex6F2C0D", false, true, Strings.ResourceManager, new object[]
			{
				universalGroup,
				localGroup
			});
		}

		// Token: 0x17003454 RID: 13396
		// (get) Token: 0x06009FEF RID: 40943 RVA: 0x002787F3 File Offset: 0x002769F3
		public static LocalizedString MonitoringCorrelationServiceDisplayName
		{
			get
			{
				return new LocalizedString("MonitoringCorrelationServiceDisplayName", "Ex9B924E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009FF0 RID: 40944 RVA: 0x00278814 File Offset: 0x00276A14
		public static LocalizedString ErrorExternalEmailAddressNotSmtpAddress(string address)
		{
			return new LocalizedString("ErrorExternalEmailAddressNotSmtpAddress", "Ex2A4EEB", false, true, Strings.ResourceManager, new object[]
			{
				address
			});
		}

		// Token: 0x06009FF1 RID: 40945 RVA: 0x00278844 File Offset: 0x00276A44
		public static LocalizedString ErrorTeamMailboxTooManyOwnersAndMembers(int num, int limit)
		{
			return new LocalizedString("ErrorTeamMailboxTooManyOwnersAndMembers", "", false, false, Strings.ResourceManager, new object[]
			{
				num,
				limit
			});
		}

		// Token: 0x17003455 RID: 13397
		// (get) Token: 0x06009FF2 RID: 40946 RVA: 0x00278881 File Offset: 0x00276A81
		public static LocalizedString ProgressEmailAddressPolicyPreparingPriority
		{
			get
			{
				return new LocalizedString("ProgressEmailAddressPolicyPreparingPriority", "Ex11D9DA", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009FF3 RID: 40947 RVA: 0x002788A0 File Offset: 0x00276AA0
		public static LocalizedString DataClassificationFingerprintsDescriptionMissing(string name)
		{
			return new LocalizedString("DataClassificationFingerprintsDescriptionMissing", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x06009FF4 RID: 40948 RVA: 0x002788D0 File Offset: 0x00276AD0
		public static LocalizedString ErrorPSTFileIsDirectory(string path)
		{
			return new LocalizedString("ErrorPSTFileIsDirectory", "ExB6A9D6", false, true, Strings.ResourceManager, new object[]
			{
				path
			});
		}

		// Token: 0x17003456 RID: 13398
		// (get) Token: 0x06009FF5 RID: 40949 RVA: 0x002788FF File Offset: 0x00276AFF
		public static LocalizedString MtrtApplyHtmlDisclaimer
		{
			get
			{
				return new LocalizedString("MtrtApplyHtmlDisclaimer", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009FF6 RID: 40950 RVA: 0x00278920 File Offset: 0x00276B20
		public static LocalizedString ConfirmManagedFolderMailboxPolicyAllowed(string identity)
		{
			return new LocalizedString("ConfirmManagedFolderMailboxPolicyAllowed", "Ex3882E0", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x17003457 RID: 13399
		// (get) Token: 0x06009FF7 RID: 40951 RVA: 0x0027894F File Offset: 0x00276B4F
		public static LocalizedString UnableToConnect
		{
			get
			{
				return new LocalizedString("UnableToConnect", "ExE8079B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009FF8 RID: 40952 RVA: 0x00278970 File Offset: 0x00276B70
		public static LocalizedString MailFlowPartnerNotUnique(MailFlowPartnerIdParameter name)
		{
			return new LocalizedString("MailFlowPartnerNotUnique", "Ex2D75A2", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x06009FF9 RID: 40953 RVA: 0x002789A0 File Offset: 0x00276BA0
		public static LocalizedString FailedToForceCleanupNode(string nodeName, string dagName, string error)
		{
			return new LocalizedString("FailedToForceCleanupNode", "", false, false, Strings.ResourceManager, new object[]
			{
				nodeName,
				dagName,
				error
			});
		}

		// Token: 0x06009FFA RID: 40954 RVA: 0x002789D8 File Offset: 0x00276BD8
		public static LocalizedString ClassificationRuleCollectionCustomTermsCountExceedLimit(int numberOfCustomTermsLimit, string offendingRuleIds)
		{
			return new LocalizedString("ClassificationRuleCollectionCustomTermsCountExceedLimit", "", false, false, Strings.ResourceManager, new object[]
			{
				numberOfCustomTermsLimit,
				offendingRuleIds
			});
		}

		// Token: 0x17003458 RID: 13400
		// (get) Token: 0x06009FFB RID: 40955 RVA: 0x00278A10 File Offset: 0x00276C10
		public static LocalizedString UninstallExchangeOrganizationDescription
		{
			get
			{
				return new LocalizedString("UninstallExchangeOrganizationDescription", "Ex384391", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x06009FFC RID: 40956 RVA: 0x00278A30 File Offset: 0x00276C30
		public static LocalizedString ErrorInvalidServerLegacyDistinguishName(string mailbox)
		{
			return new LocalizedString("ErrorInvalidServerLegacyDistinguishName", "Ex5EE5ED", false, true, Strings.ResourceManager, new object[]
			{
				mailbox
			});
		}

		// Token: 0x06009FFD RID: 40957 RVA: 0x00278A60 File Offset: 0x00276C60
		public static LocalizedString ConfirmationMessageRemoveReceiveConnector(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveReceiveConnector", "ExDABCE9", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x06009FFE RID: 40958 RVA: 0x00278A90 File Offset: 0x00276C90
		public static LocalizedString GetFederationInformationTokenIssuerDoesntMatch(string local, string remote)
		{
			return new LocalizedString("GetFederationInformationTokenIssuerDoesntMatch", "Ex24A4A8", false, true, Strings.ResourceManager, new object[]
			{
				local,
				remote
			});
		}

		// Token: 0x06009FFF RID: 40959 RVA: 0x00278AC4 File Offset: 0x00276CC4
		public static LocalizedString InterceptorWarningArchivedItemsLifeTime(string identity, string path, int days)
		{
			return new LocalizedString("InterceptorWarningArchivedItemsLifeTime", "", false, false, Strings.ResourceManager, new object[]
			{
				identity,
				path,
				days
			});
		}

		// Token: 0x17003459 RID: 13401
		// (get) Token: 0x0600A000 RID: 40960 RVA: 0x00278B00 File Offset: 0x00276D00
		public static LocalizedString CasHealthScenarioDescription
		{
			get
			{
				return new LocalizedString("CasHealthScenarioDescription", "Ex445A71", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700345A RID: 13402
		// (get) Token: 0x0600A001 RID: 40961 RVA: 0x00278B1E File Offset: 0x00276D1E
		public static LocalizedString DualWriteSaveWarningMessage
		{
			get
			{
				return new LocalizedString("DualWriteSaveWarningMessage", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A002 RID: 40962 RVA: 0x00278B3C File Offset: 0x00276D3C
		public static LocalizedString ConfirmationMessageRemoveAcceptedDomain(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveAcceptedDomain", "Ex30D480", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x0600A003 RID: 40963 RVA: 0x00278B6C File Offset: 0x00276D6C
		public static LocalizedString ParameterNotAllowedWithTopLevelRole(string paramName, string roleType)
		{
			return new LocalizedString("ParameterNotAllowedWithTopLevelRole", "ExC4ADFE", false, true, Strings.ResourceManager, new object[]
			{
				paramName,
				roleType
			});
		}

		// Token: 0x0600A004 RID: 40964 RVA: 0x00278BA0 File Offset: 0x00276DA0
		public static LocalizedString CasHealthWebAppLiveIdSendingRequest(Uri requestUri)
		{
			return new LocalizedString("CasHealthWebAppLiveIdSendingRequest", "Ex15B74B", false, true, Strings.ResourceManager, new object[]
			{
				requestUri
			});
		}

		// Token: 0x0600A005 RID: 40965 RVA: 0x00278BD0 File Offset: 0x00276DD0
		public static LocalizedString VerboseFixingObjectsUnderRootIdFilter(string root, string filter)
		{
			return new LocalizedString("VerboseFixingObjectsUnderRootIdFilter", "Ex60DEF7", false, true, Strings.ResourceManager, new object[]
			{
				root,
				filter
			});
		}

		// Token: 0x1700345B RID: 13403
		// (get) Token: 0x0600A006 RID: 40966 RVA: 0x00278C03 File Offset: 0x00276E03
		public static LocalizedString ErrorCannotChangeName
		{
			get
			{
				return new LocalizedString("ErrorCannotChangeName", "Ex44DF57", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A007 RID: 40967 RVA: 0x00278C24 File Offset: 0x00276E24
		public static LocalizedString IisUtilityCannotDisambiguateWebSiteException(string webSiteName, string path1, string path2)
		{
			return new LocalizedString("IisUtilityCannotDisambiguateWebSiteException", "ExA47AF0", false, true, Strings.ResourceManager, new object[]
			{
				webSiteName,
				path1,
				path2
			});
		}

		// Token: 0x0600A008 RID: 40968 RVA: 0x00278C5C File Offset: 0x00276E5C
		public static LocalizedString GetMsoDiagnosticsProgressBatch(int i, int total)
		{
			return new LocalizedString("GetMsoDiagnosticsProgressBatch", "", false, false, Strings.ResourceManager, new object[]
			{
				i,
				total
			});
		}

		// Token: 0x0600A009 RID: 40969 RVA: 0x00278C9C File Offset: 0x00276E9C
		public static LocalizedString ErrorTooManyTransportRules(int max)
		{
			return new LocalizedString("ErrorTooManyTransportRules", "ExDEADB0", false, true, Strings.ResourceManager, new object[]
			{
				max
			});
		}

		// Token: 0x0600A00A RID: 40970 RVA: 0x00278CD0 File Offset: 0x00276ED0
		public static LocalizedString ConfirmationMessageEnableMailboxResource(string Identity, string ResourceType)
		{
			return new LocalizedString("ConfirmationMessageEnableMailboxResource", "Ex84D1A6", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				ResourceType
			});
		}

		// Token: 0x1700345C RID: 13404
		// (get) Token: 0x0600A00B RID: 40971 RVA: 0x00278D03 File Offset: 0x00276F03
		public static LocalizedString SetupComponentPostSetupAdminTools
		{
			get
			{
				return new LocalizedString("SetupComponentPostSetupAdminTools", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A00C RID: 40972 RVA: 0x00278D24 File Offset: 0x00276F24
		public static LocalizedString ErrorRelocationStateRequestedIsTooLow(string tenant, string requestedState, string currentState)
		{
			return new LocalizedString("ErrorRelocationStateRequestedIsTooLow", "", false, false, Strings.ResourceManager, new object[]
			{
				tenant,
				requestedState,
				currentState
			});
		}

		// Token: 0x1700345D RID: 13405
		// (get) Token: 0x0600A00D RID: 40973 RVA: 0x00278D5B File Offset: 0x00276F5B
		public static LocalizedString MtrtAddToRecipient
		{
			get
			{
				return new LocalizedString("MtrtAddToRecipient", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700345E RID: 13406
		// (get) Token: 0x0600A00E RID: 40974 RVA: 0x00278D79 File Offset: 0x00276F79
		public static LocalizedString NeedToSpecifyADSiteObject
		{
			get
			{
				return new LocalizedString("NeedToSpecifyADSiteObject", "Ex0E9780", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A00F RID: 40975 RVA: 0x00278D98 File Offset: 0x00276F98
		public static LocalizedString ExchangeSettingsDefaultScopeNotFound(string groupName)
		{
			return new LocalizedString("ExchangeSettingsDefaultScopeNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				groupName
			});
		}

		// Token: 0x1700345F RID: 13407
		// (get) Token: 0x0600A010 RID: 40976 RVA: 0x00278DC7 File Offset: 0x00276FC7
		public static LocalizedString ErrorConfigurationOnly
		{
			get
			{
				return new LocalizedString("ErrorConfigurationOnly", "Ex1EA18C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A011 RID: 40977 RVA: 0x00278DE8 File Offset: 0x00276FE8
		public static LocalizedString ErrorWindowsLiveIdRequired(string user)
		{
			return new LocalizedString("ErrorWindowsLiveIdRequired", "ExB663E9", false, true, Strings.ResourceManager, new object[]
			{
				user
			});
		}

		// Token: 0x0600A012 RID: 40978 RVA: 0x00278E18 File Offset: 0x00277018
		public static LocalizedString MesoVersionInvalidException(string description)
		{
			return new LocalizedString("MesoVersionInvalidException", "ExE8D191", false, true, Strings.ResourceManager, new object[]
			{
				description
			});
		}

		// Token: 0x17003460 RID: 13408
		// (get) Token: 0x0600A013 RID: 40979 RVA: 0x00278E47 File Offset: 0x00277047
		public static LocalizedString DatacenterSetupComponentPerfCountersBridgehead
		{
			get
			{
				return new LocalizedString("DatacenterSetupComponentPerfCountersBridgehead", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003461 RID: 13409
		// (get) Token: 0x0600A014 RID: 40980 RVA: 0x00278E65 File Offset: 0x00277065
		public static LocalizedString FBAServiceDisplayName
		{
			get
			{
				return new LocalizedString("FBAServiceDisplayName", "Ex171E06", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A015 RID: 40981 RVA: 0x00278E84 File Offset: 0x00277084
		public static LocalizedString ErrorAutoDiscoverValidatorRequiresRedirection(string emailAddress)
		{
			return new LocalizedString("ErrorAutoDiscoverValidatorRequiresRedirection", "", false, false, Strings.ResourceManager, new object[]
			{
				emailAddress
			});
		}

		// Token: 0x0600A016 RID: 40982 RVA: 0x00278EB4 File Offset: 0x002770B4
		public static LocalizedString ExecutingScriptNonFatal(string script)
		{
			return new LocalizedString("ExecutingScriptNonFatal", "Ex218064", false, true, Strings.ResourceManager, new object[]
			{
				script
			});
		}

		// Token: 0x17003462 RID: 13410
		// (get) Token: 0x0600A017 RID: 40983 RVA: 0x00278EE3 File Offset: 0x002770E3
		public static LocalizedString TransitionInfoLabelLastSuccessTransition
		{
			get
			{
				return new LocalizedString("TransitionInfoLabelLastSuccessTransition", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003463 RID: 13411
		// (get) Token: 0x0600A018 RID: 40984 RVA: 0x00278F01 File Offset: 0x00277101
		public static LocalizedString ErrorPrimarySmtpAndWindowsAddressDifferent
		{
			get
			{
				return new LocalizedString("ErrorPrimarySmtpAndWindowsAddressDifferent", "Ex7A3A81", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003464 RID: 13412
		// (get) Token: 0x0600A019 RID: 40985 RVA: 0x00278F1F File Offset: 0x0027711F
		public static LocalizedString ErrorWriteOpOnDehydratedTenant
		{
			get
			{
				return new LocalizedString("ErrorWriteOpOnDehydratedTenant", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A01A RID: 40986 RVA: 0x00278F40 File Offset: 0x00277140
		public static LocalizedString PSTExportComplete(string filePath, string computerName)
		{
			return new LocalizedString("PSTExportComplete", "ExEA9F2A", false, true, Strings.ResourceManager, new object[]
			{
				filePath,
				computerName
			});
		}

		// Token: 0x17003465 RID: 13413
		// (get) Token: 0x0600A01B RID: 40987 RVA: 0x00278F73 File Offset: 0x00277173
		public static LocalizedString ErrorRmsOnlineAuthenticationCertificateNotYetValid
		{
			get
			{
				return new LocalizedString("ErrorRmsOnlineAuthenticationCertificateNotYetValid", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003466 RID: 13414
		// (get) Token: 0x0600A01C RID: 40988 RVA: 0x00278F91 File Offset: 0x00277191
		public static LocalizedString UninstallWatchDogServiceTask
		{
			get
			{
				return new LocalizedString("UninstallWatchDogServiceTask", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A01D RID: 40989 RVA: 0x00278FB0 File Offset: 0x002771B0
		public static LocalizedString ErrorNameMustBeUniquePerMailbox(string name, string mbx)
		{
			return new LocalizedString("ErrorNameMustBeUniquePerMailbox", "ExF5BBE1", false, true, Strings.ResourceManager, new object[]
			{
				name,
				mbx
			});
		}

		// Token: 0x0600A01E RID: 40990 RVA: 0x00278FE4 File Offset: 0x002771E4
		public static LocalizedString WritableServerNotUnique(string WritableServer)
		{
			return new LocalizedString("WritableServerNotUnique", "ExD6CE61", false, true, Strings.ResourceManager, new object[]
			{
				WritableServer
			});
		}

		// Token: 0x0600A01F RID: 40991 RVA: 0x00279014 File Offset: 0x00277214
		public static LocalizedString ErrorCannotFindFingerprintDataClassification(string identity)
		{
			return new LocalizedString("ErrorCannotFindFingerprintDataClassification", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x0600A020 RID: 40992 RVA: 0x00279044 File Offset: 0x00277244
		public static LocalizedString WarningCannotGetGlsTenantFromOrgId(string orgid, string errMsg)
		{
			return new LocalizedString("WarningCannotGetGlsTenantFromOrgId", "", false, false, Strings.ResourceManager, new object[]
			{
				orgid,
				errMsg
			});
		}

		// Token: 0x0600A021 RID: 40993 RVA: 0x00279078 File Offset: 0x00277278
		public static LocalizedString ServerConfigurationException(string serverName, string errorMessage)
		{
			return new LocalizedString("ServerConfigurationException", "", false, false, Strings.ResourceManager, new object[]
			{
				serverName,
				errorMessage
			});
		}

		// Token: 0x17003467 RID: 13415
		// (get) Token: 0x0600A022 RID: 40994 RVA: 0x002790AB File Offset: 0x002772AB
		public static LocalizedString ErrorSpecifyAutoMappingOnNonFullAccess
		{
			get
			{
				return new LocalizedString("ErrorSpecifyAutoMappingOnNonFullAccess", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A023 RID: 40995 RVA: 0x002790CC File Offset: 0x002772CC
		public static LocalizedString UMCallAnsweringRuleFindMeWithoutContextWithSecondNumber(int key, string firstNumber, string secondNumber)
		{
			return new LocalizedString("UMCallAnsweringRuleFindMeWithoutContextWithSecondNumber", "", false, false, Strings.ResourceManager, new object[]
			{
				key,
				firstNumber,
				secondNumber
			});
		}

		// Token: 0x0600A024 RID: 40996 RVA: 0x00279108 File Offset: 0x00277308
		public static LocalizedString TestSearchCreateTestFolderError(string ID, string database)
		{
			return new LocalizedString("TestSearchCreateTestFolderError", "Ex03E160", false, true, Strings.ResourceManager, new object[]
			{
				ID,
				database
			});
		}

		// Token: 0x0600A025 RID: 40997 RVA: 0x0027913C File Offset: 0x0027733C
		public static LocalizedString ConfirmationMessageRemoveMoveRequest(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveMoveRequest", "ExD32DBB", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x0600A026 RID: 40998 RVA: 0x0027916C File Offset: 0x0027736C
		public static LocalizedString ErrorInvalidBatchParameter(string parameterName, string type, string direction)
		{
			return new LocalizedString("ErrorInvalidBatchParameter", "", false, false, Strings.ResourceManager, new object[]
			{
				parameterName,
				type,
				direction
			});
		}

		// Token: 0x0600A027 RID: 40999 RVA: 0x002791A4 File Offset: 0x002773A4
		public static LocalizedString ConfirmationMessageRemoveMailboxPermanentAndLiveId(string Identity, string liveId)
		{
			return new LocalizedString("ConfirmationMessageRemoveMailboxPermanentAndLiveId", "Ex44E694", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				liveId
			});
		}

		// Token: 0x17003468 RID: 13416
		// (get) Token: 0x0600A028 RID: 41000 RVA: 0x002791D7 File Offset: 0x002773D7
		public static LocalizedString ClientAccessPrereqCheck
		{
			get
			{
				return new LocalizedString("ClientAccessPrereqCheck", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A029 RID: 41001 RVA: 0x002791F8 File Offset: 0x002773F8
		public static LocalizedString ConfirmationMessageExportMigrationReport(string tenantName)
		{
			return new LocalizedString("ConfirmationMessageExportMigrationReport", "ExA7BDDA", false, true, Strings.ResourceManager, new object[]
			{
				tenantName
			});
		}

		// Token: 0x0600A02A RID: 41002 RVA: 0x00279228 File Offset: 0x00277428
		public static LocalizedString ConfirmationMessageStopDatabaseAvailabilityGroupADSite(string Identity, string ad)
		{
			return new LocalizedString("ConfirmationMessageStopDatabaseAvailabilityGroupADSite", "Ex444B3B", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				ad
			});
		}

		// Token: 0x0600A02B RID: 41003 RVA: 0x0027925C File Offset: 0x0027745C
		public static LocalizedString ConfirmationMessageAuthNewDateTooShort(int hours)
		{
			return new LocalizedString("ConfirmationMessageAuthNewDateTooShort", "", false, false, Strings.ResourceManager, new object[]
			{
				hours
			});
		}

		// Token: 0x0600A02C RID: 41004 RVA: 0x00279290 File Offset: 0x00277490
		public static LocalizedString ErrorPathNotUniqueAmongExistingDbCopies(string location, string field)
		{
			return new LocalizedString("ErrorPathNotUniqueAmongExistingDbCopies", "Ex2AD616", false, true, Strings.ResourceManager, new object[]
			{
				location,
				field
			});
		}

		// Token: 0x0600A02D RID: 41005 RVA: 0x002792C4 File Offset: 0x002774C4
		public static LocalizedString ErrorSharingPolicyNotFound(string policyDN)
		{
			return new LocalizedString("ErrorSharingPolicyNotFound", "Ex499702", false, true, Strings.ResourceManager, new object[]
			{
				policyDN
			});
		}

		// Token: 0x0600A02E RID: 41006 RVA: 0x002792F4 File Offset: 0x002774F4
		public static LocalizedString RmsSharedIdentityBeingLinkedToComputer(string userDn, string userOriginatingServer, string computerDn, string computerOriginatingServer)
		{
			return new LocalizedString("RmsSharedIdentityBeingLinkedToComputer", "Ex87325B", false, true, Strings.ResourceManager, new object[]
			{
				userDn,
				userOriginatingServer,
				computerDn,
				computerOriginatingServer
			});
		}

		// Token: 0x17003469 RID: 13417
		// (get) Token: 0x0600A02F RID: 41007 RVA: 0x0027932F File Offset: 0x0027752F
		public static LocalizedString ConfirmationMessageAuthSettingOutage
		{
			get
			{
				return new LocalizedString("ConfirmationMessageAuthSettingOutage", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A030 RID: 41008 RVA: 0x00279350 File Offset: 0x00277550
		public static LocalizedString ConfirmationMessageAddMailboxPermissionOwner(string Identity, string Owner)
		{
			return new LocalizedString("ConfirmationMessageAddMailboxPermissionOwner", "Ex82C109", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				Owner
			});
		}

		// Token: 0x0600A031 RID: 41009 RVA: 0x00279384 File Offset: 0x00277584
		public static LocalizedString ErrorNoAuditLogForArchive(string user)
		{
			return new LocalizedString("ErrorNoAuditLogForArchive", "", false, false, Strings.ResourceManager, new object[]
			{
				user
			});
		}

		// Token: 0x1700346A RID: 13418
		// (get) Token: 0x0600A032 RID: 41010 RVA: 0x002793B3 File Offset: 0x002775B3
		public static LocalizedString WarningModerationWithWrongGroupType
		{
			get
			{
				return new LocalizedString("WarningModerationWithWrongGroupType", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A033 RID: 41011 RVA: 0x002793D4 File Offset: 0x002775D4
		public static LocalizedString ConfirmationMessageRemoveManagementRoleEntry(string Name, string Role)
		{
			return new LocalizedString("ConfirmationMessageRemoveManagementRoleEntry", "Ex0AB3C3", false, true, Strings.ResourceManager, new object[]
			{
				Name,
				Role
			});
		}

		// Token: 0x0600A034 RID: 41012 RVA: 0x00279408 File Offset: 0x00277608
		public static LocalizedString SupportedToolsDataInvalidToolVersionRange(string toolName)
		{
			return new LocalizedString("SupportedToolsDataInvalidToolVersionRange", "Ex4BABBB", false, true, Strings.ResourceManager, new object[]
			{
				toolName
			});
		}

		// Token: 0x0600A035 RID: 41013 RVA: 0x00279438 File Offset: 0x00277638
		public static LocalizedString ErrorWebsiteAmbiguousInIIS(string webSiteName, string serverName)
		{
			return new LocalizedString("ErrorWebsiteAmbiguousInIIS", "Ex258F75", false, true, Strings.ResourceManager, new object[]
			{
				webSiteName,
				serverName
			});
		}

		// Token: 0x1700346B RID: 13419
		// (get) Token: 0x0600A036 RID: 41014 RVA: 0x0027946B File Offset: 0x0027766B
		public static LocalizedString CasHealthOwaMailboxServerHeader
		{
			get
			{
				return new LocalizedString("CasHealthOwaMailboxServerHeader", "Ex2B7F6B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A037 RID: 41015 RVA: 0x0027948C File Offset: 0x0027768C
		public static LocalizedString ErrorCannotSeparatePrimaryFromArchiveBecauseServerIsDownlevel(string serverName, string serverVersion)
		{
			return new LocalizedString("ErrorCannotSeparatePrimaryFromArchiveBecauseServerIsDownlevel", "ExA9E13E", false, true, Strings.ResourceManager, new object[]
			{
				serverName,
				serverVersion
			});
		}

		// Token: 0x0600A038 RID: 41016 RVA: 0x002794C0 File Offset: 0x002776C0
		public static LocalizedString ConfirmationMessageSetEdgeSyncMservConnector(string id)
		{
			return new LocalizedString("ConfirmationMessageSetEdgeSyncMservConnector", "ExB16800", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x0600A039 RID: 41017 RVA: 0x002794F0 File Offset: 0x002776F0
		public static LocalizedString NewPolicyMustBeInTheSameDialPlanAsOldPolicy(string s)
		{
			return new LocalizedString("NewPolicyMustBeInTheSameDialPlanAsOldPolicy", "ExD09923", false, true, Strings.ResourceManager, new object[]
			{
				s
			});
		}

		// Token: 0x1700346C RID: 13420
		// (get) Token: 0x0600A03A RID: 41018 RVA: 0x0027951F File Offset: 0x0027771F
		public static LocalizedString DebugEndEnablingUM
		{
			get
			{
				return new LocalizedString("DebugEndEnablingUM", "Ex8E6E56", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A03B RID: 41019 RVA: 0x00279540 File Offset: 0x00277740
		public static LocalizedString VerboseEdbFileLocationUniqueUnderDAGCondition(string path)
		{
			return new LocalizedString("VerboseEdbFileLocationUniqueUnderDAGCondition", "ExF45E9A", false, true, Strings.ResourceManager, new object[]
			{
				path
			});
		}

		// Token: 0x0600A03C RID: 41020 RVA: 0x00279570 File Offset: 0x00277770
		public static LocalizedString ConfirmGenerateExchangeCertificateRequest(string friendlyName, string subjectName, string domainNames, AllowedServices services, int keySize)
		{
			return new LocalizedString("ConfirmGenerateExchangeCertificateRequest", "ExE0070D", false, true, Strings.ResourceManager, new object[]
			{
				friendlyName,
				subjectName,
				domainNames,
				services,
				keySize
			});
		}

		// Token: 0x0600A03D RID: 41021 RVA: 0x002795BC File Offset: 0x002777BC
		public static LocalizedString ProgressJoinNode(string node)
		{
			return new LocalizedString("ProgressJoinNode", "Ex134620", false, true, Strings.ResourceManager, new object[]
			{
				node
			});
		}

		// Token: 0x0600A03E RID: 41022 RVA: 0x002795EC File Offset: 0x002777EC
		public static LocalizedString FormsAuthenticationMarkPathUnknownSetError(string metabasePath, int propertyID, int hresult)
		{
			return new LocalizedString("FormsAuthenticationMarkPathUnknownSetError", "ExB3AC34", false, true, Strings.ResourceManager, new object[]
			{
				metabasePath,
				propertyID,
				hresult
			});
		}

		// Token: 0x1700346D RID: 13421
		// (get) Token: 0x0600A03F RID: 41023 RVA: 0x0027962D File Offset: 0x0027782D
		public static LocalizedString FederatedOrganizationIdNotSet
		{
			get
			{
				return new LocalizedString("FederatedOrganizationIdNotSet", "Ex35EA9E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A040 RID: 41024 RVA: 0x0027964C File Offset: 0x0027784C
		public static LocalizedString VerboseCheckFileExistenceCondition(string server, string path)
		{
			return new LocalizedString("VerboseCheckFileExistenceCondition", "Ex3B623A", false, true, Strings.ResourceManager, new object[]
			{
				server,
				path
			});
		}

		// Token: 0x0600A041 RID: 41025 RVA: 0x00279680 File Offset: 0x00277880
		public static LocalizedString MigrationNotEnabledForTenant(string tenantName)
		{
			return new LocalizedString("MigrationNotEnabledForTenant", "Ex456681", false, true, Strings.ResourceManager, new object[]
			{
				tenantName
			});
		}

		// Token: 0x1700346E RID: 13422
		// (get) Token: 0x0600A042 RID: 41026 RVA: 0x002796AF File Offset: 0x002778AF
		public static LocalizedString SetupProgressCreateDSNCustomizationContainer
		{
			get
			{
				return new LocalizedString("SetupProgressCreateDSNCustomizationContainer", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A043 RID: 41027 RVA: 0x002796D0 File Offset: 0x002778D0
		public static LocalizedString ErrorReHomeOriginalDatabaseLocationNotFound(string database)
		{
			return new LocalizedString("ErrorReHomeOriginalDatabaseLocationNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				database
			});
		}

		// Token: 0x0600A044 RID: 41028 RVA: 0x00279700 File Offset: 0x00277900
		public static LocalizedString WarningCannedRoleGroupCreateWithoutManager(string roleGroup, string userNotFound)
		{
			return new LocalizedString("WarningCannedRoleGroupCreateWithoutManager", "Ex621EB8", false, true, Strings.ResourceManager, new object[]
			{
				roleGroup,
				userNotFound
			});
		}

		// Token: 0x0600A045 RID: 41029 RVA: 0x00279734 File Offset: 0x00277934
		public static LocalizedString ErrorUnknownRequestIndex(string indexId)
		{
			return new LocalizedString("ErrorUnknownRequestIndex", "Ex31F6BA", false, true, Strings.ResourceManager, new object[]
			{
				indexId
			});
		}

		// Token: 0x0600A046 RID: 41030 RVA: 0x00279764 File Offset: 0x00277964
		public static LocalizedString WebServicesTestEventDetail(string cmdletName, string scenario, string result, string latency)
		{
			return new LocalizedString("WebServicesTestEventDetail", "", false, false, Strings.ResourceManager, new object[]
			{
				cmdletName,
				scenario,
				result,
				latency
			});
		}

		// Token: 0x1700346F RID: 13423
		// (get) Token: 0x0600A047 RID: 41031 RVA: 0x0027979F File Offset: 0x0027799F
		public static LocalizedString SetupProgressStoppingMailboxReplicationService
		{
			get
			{
				return new LocalizedString("SetupProgressStoppingMailboxReplicationService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003470 RID: 13424
		// (get) Token: 0x0600A048 RID: 41032 RVA: 0x002797BD File Offset: 0x002779BD
		public static LocalizedString MalboxFolderRightsFolderContact
		{
			get
			{
				return new LocalizedString("MalboxFolderRightsFolderContact", "ExE6C695", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A049 RID: 41033 RVA: 0x002797DC File Offset: 0x002779DC
		public static LocalizedString RmsTemplateNotFound(string name)
		{
			return new LocalizedString("RmsTemplateNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x0600A04A RID: 41034 RVA: 0x0027980C File Offset: 0x00277A0C
		public static LocalizedString VerboseSyncTaskDomainControllerMismatch(Guid orgDc, Guid newDc)
		{
			return new LocalizedString("VerboseSyncTaskDomainControllerMismatch", "Ex5804A0", false, true, Strings.ResourceManager, new object[]
			{
				orgDc,
				newDc
			});
		}

		// Token: 0x0600A04B RID: 41035 RVA: 0x0027984C File Offset: 0x00277A4C
		public static LocalizedString ErrorParsingCSV(int rowIndex, string columnName, string message)
		{
			return new LocalizedString("ErrorParsingCSV", "", false, false, Strings.ResourceManager, new object[]
			{
				rowIndex,
				columnName,
				message
			});
		}

		// Token: 0x17003471 RID: 13425
		// (get) Token: 0x0600A04C RID: 41036 RVA: 0x00279888 File Offset: 0x00277A88
		public static LocalizedString MapiSubmitSystemProbeNoMessageFound
		{
			get
			{
				return new LocalizedString("MapiSubmitSystemProbeNoMessageFound", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A04D RID: 41037 RVA: 0x002798A8 File Offset: 0x00277AA8
		public static LocalizedString ErrorStartWinrm(string error)
		{
			return new LocalizedString("ErrorStartWinrm", "Ex2265D8", false, true, Strings.ResourceManager, new object[]
			{
				error
			});
		}

		// Token: 0x0600A04E RID: 41038 RVA: 0x002798D8 File Offset: 0x00277AD8
		public static LocalizedString ErrorOabVirtualDirectoryAlreadyExistsWithRecovery(string vdir, string website, string serverName)
		{
			return new LocalizedString("ErrorOabVirtualDirectoryAlreadyExistsWithRecovery", "Ex5EB3B4", false, true, Strings.ResourceManager, new object[]
			{
				vdir,
				website,
				serverName
			});
		}

		// Token: 0x17003472 RID: 13426
		// (get) Token: 0x0600A04F RID: 41039 RVA: 0x0027990F File Offset: 0x00277B0F
		public static LocalizedString WarningNonemptyManagedFolderNotDeleted
		{
			get
			{
				return new LocalizedString("WarningNonemptyManagedFolderNotDeleted", "ExB09045", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A050 RID: 41040 RVA: 0x00279930 File Offset: 0x00277B30
		public static LocalizedString CasHealthWebAppTransactionWarnings(LocalizedString applicationShortName, string detailedInformation)
		{
			return new LocalizedString("CasHealthWebAppTransactionWarnings", "ExB7179B", false, true, Strings.ResourceManager, new object[]
			{
				applicationShortName,
				detailedInformation
			});
		}

		// Token: 0x17003473 RID: 13427
		// (get) Token: 0x0600A051 RID: 41041 RVA: 0x00279968 File Offset: 0x00277B68
		public static LocalizedString SetupProgressCreateMailboxManagedFolders
		{
			get
			{
				return new LocalizedString("SetupProgressCreateMailboxManagedFolders", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003474 RID: 13428
		// (get) Token: 0x0600A052 RID: 41042 RVA: 0x00279986 File Offset: 0x00277B86
		public static LocalizedString InvalidTimeRange
		{
			get
			{
				return new LocalizedString("InvalidTimeRange", "Ex576FE0", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A053 RID: 41043 RVA: 0x002799A4 File Offset: 0x00277BA4
		public static LocalizedString CreatedJunkEmailRule(string mailboxIdentity)
		{
			return new LocalizedString("CreatedJunkEmailRule", "Ex6210DF", false, true, Strings.ResourceManager, new object[]
			{
				mailboxIdentity
			});
		}

		// Token: 0x0600A054 RID: 41044 RVA: 0x002799D4 File Offset: 0x00277BD4
		public static LocalizedString ConfirmationMessageInstallDlpPolicy(string Identity)
		{
			return new LocalizedString("ConfirmationMessageInstallDlpPolicy", "", false, false, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x0600A055 RID: 41045 RVA: 0x00279A04 File Offset: 0x00277C04
		public static LocalizedString ErrorCanNotRemoveMailboxToWellKnownHostedMailboxSG(string mailbox, string sgName, string org, string error)
		{
			return new LocalizedString("ErrorCanNotRemoveMailboxToWellKnownHostedMailboxSG", "Ex8DD044", false, true, Strings.ResourceManager, new object[]
			{
				mailbox,
				sgName,
				org,
				error
			});
		}

		// Token: 0x17003475 RID: 13429
		// (get) Token: 0x0600A056 RID: 41046 RVA: 0x00279A3F File Offset: 0x00277C3F
		public static LocalizedString SetupProgressCreateClientAccessContainer
		{
			get
			{
				return new LocalizedString("SetupProgressCreateClientAccessContainer", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A057 RID: 41047 RVA: 0x00279A60 File Offset: 0x00277C60
		public static LocalizedString SuccessAddServerMonitoringOverride(string identity, string serverName)
		{
			return new LocalizedString("SuccessAddServerMonitoringOverride", "", false, false, Strings.ResourceManager, new object[]
			{
				identity,
				serverName
			});
		}

		// Token: 0x17003476 RID: 13430
		// (get) Token: 0x0600A058 RID: 41048 RVA: 0x00279A93 File Offset: 0x00277C93
		public static LocalizedString SetupPrereqAnalysisCompleted
		{
			get
			{
				return new LocalizedString("SetupPrereqAnalysisCompleted", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A059 RID: 41049 RVA: 0x00279AB4 File Offset: 0x00277CB4
		public static LocalizedString VerboseRemovedRoleAssignment(string id)
		{
			return new LocalizedString("VerboseRemovedRoleAssignment", "ExE46532", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x0600A05A RID: 41050 RVA: 0x00279AE4 File Offset: 0x00277CE4
		public static LocalizedString VerboseMdbLinkedToPfdb(string mdb, string pfdb)
		{
			return new LocalizedString("VerboseMdbLinkedToPfdb", "Ex91322F", false, true, Strings.ResourceManager, new object[]
			{
				mdb,
				pfdb
			});
		}

		// Token: 0x0600A05B RID: 41051 RVA: 0x00279B18 File Offset: 0x00277D18
		public static LocalizedString ConfirmationMessageNewMailboxUser(string Name, string UserPrincipalName, string OrganizationalUnit)
		{
			return new LocalizedString("ConfirmationMessageNewMailboxUser", "Ex583C5B", false, true, Strings.ResourceManager, new object[]
			{
				Name,
				UserPrincipalName,
				OrganizationalUnit
			});
		}

		// Token: 0x0600A05C RID: 41052 RVA: 0x00279B50 File Offset: 0x00277D50
		public static LocalizedString MoveMailboxNotOnDomainController(string userDN, string domainController)
		{
			return new LocalizedString("MoveMailboxNotOnDomainController", "Ex077C9B", false, true, Strings.ResourceManager, new object[]
			{
				userDN,
				domainController
			});
		}

		// Token: 0x0600A05D RID: 41053 RVA: 0x00279B84 File Offset: 0x00277D84
		public static LocalizedString ErrorInvalidFederationMetadata(string message)
		{
			return new LocalizedString("ErrorInvalidFederationMetadata", "Ex80EF1C", false, true, Strings.ResourceManager, new object[]
			{
				message
			});
		}

		// Token: 0x0600A05E RID: 41054 RVA: 0x00279BB4 File Offset: 0x00277DB4
		public static LocalizedString CasHealthAirSyncHeaderNotFound(string header, string url)
		{
			return new LocalizedString("CasHealthAirSyncHeaderNotFound", "Ex6FC618", false, true, Strings.ResourceManager, new object[]
			{
				header,
				url
			});
		}

		// Token: 0x17003477 RID: 13431
		// (get) Token: 0x0600A05F RID: 41055 RVA: 0x00279BE7 File Offset: 0x00277DE7
		public static LocalizedString RequiredEndDateParameter
		{
			get
			{
				return new LocalizedString("RequiredEndDateParameter", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A060 RID: 41056 RVA: 0x00279C08 File Offset: 0x00277E08
		public static LocalizedString ErrorCasArrayNotFound(string idStringValue)
		{
			return new LocalizedString("ErrorCasArrayNotFound", "ExC17E95", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		// Token: 0x17003478 RID: 13432
		// (get) Token: 0x0600A061 RID: 41057 RVA: 0x00279C37 File Offset: 0x00277E37
		public static LocalizedString RpcClientAccessServiceDisplayName
		{
			get
			{
				return new LocalizedString("RpcClientAccessServiceDisplayName", "ExD44745", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A062 RID: 41058 RVA: 0x00279C58 File Offset: 0x00277E58
		public static LocalizedString SendConnectorCreatingOppositeConnector(string sourceRgName, string targetRgName)
		{
			return new LocalizedString("SendConnectorCreatingOppositeConnector", "Ex1B7166", false, true, Strings.ResourceManager, new object[]
			{
				sourceRgName,
				targetRgName
			});
		}

		// Token: 0x0600A063 RID: 41059 RVA: 0x00279C8C File Offset: 0x00277E8C
		public static LocalizedString LogonUserIsNotAValidADRecipient(string user)
		{
			return new LocalizedString("LogonUserIsNotAValidADRecipient", "Ex70C620", false, true, Strings.ResourceManager, new object[]
			{
				user
			});
		}

		// Token: 0x0600A064 RID: 41060 RVA: 0x00279CBC File Offset: 0x00277EBC
		public static LocalizedString ErrorPatternIsTooExpensive(string regex)
		{
			return new LocalizedString("ErrorPatternIsTooExpensive", "", false, false, Strings.ResourceManager, new object[]
			{
				regex
			});
		}

		// Token: 0x0600A065 RID: 41061 RVA: 0x00279CEC File Offset: 0x00277EEC
		public static LocalizedString ErrorMailboxLacksDatabase(string identity)
		{
			return new LocalizedString("ErrorMailboxLacksDatabase", "Ex374D1E", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x0600A066 RID: 41062 RVA: 0x00279D1C File Offset: 0x00277F1C
		public static LocalizedString ConfirmDisableLastSharedConfiguration(string server)
		{
			return new LocalizedString("ConfirmDisableLastSharedConfiguration", "Ex9035F2", false, true, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		// Token: 0x17003479 RID: 13433
		// (get) Token: 0x0600A067 RID: 41063 RVA: 0x00279D4B File Offset: 0x00277F4B
		public static LocalizedString WarningNoCookiesRemovedForRollback
		{
			get
			{
				return new LocalizedString("WarningNoCookiesRemovedForRollback", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A068 RID: 41064 RVA: 0x00279D6C File Offset: 0x00277F6C
		public static LocalizedString ErrorCannotOpenLegacyMailbox(string mbx)
		{
			return new LocalizedString("ErrorCannotOpenLegacyMailbox", "Ex1FEA4C", false, true, Strings.ResourceManager, new object[]
			{
				mbx
			});
		}

		// Token: 0x0600A069 RID: 41065 RVA: 0x00279D9C File Offset: 0x00277F9C
		public static LocalizedString InfoImportingTpdFromRmsOnlineCheckedWithTemplates(string templateNames)
		{
			return new LocalizedString("InfoImportingTpdFromRmsOnlineCheckedWithTemplates", "", false, false, Strings.ResourceManager, new object[]
			{
				templateNames
			});
		}

		// Token: 0x1700347A RID: 13434
		// (get) Token: 0x0600A06A RID: 41066 RVA: 0x00279DCB File Offset: 0x00277FCB
		public static LocalizedString SetupMultiEngineAVEnabled
		{
			get
			{
				return new LocalizedString("SetupMultiEngineAVEnabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A06B RID: 41067 RVA: 0x00279DEC File Offset: 0x00277FEC
		public static LocalizedString ErrorInvalidCharacterInVirtualDirectoryName(string vdirName)
		{
			return new LocalizedString("ErrorInvalidCharacterInVirtualDirectoryName", "Ex2FA009", false, true, Strings.ResourceManager, new object[]
			{
				vdirName
			});
		}

		// Token: 0x1700347B RID: 13435
		// (get) Token: 0x0600A06C RID: 41068 RVA: 0x00279E1B File Offset: 0x0027801B
		public static LocalizedString UninstallNotificationsBrokerServiceTask
		{
			get
			{
				return new LocalizedString("UninstallNotificationsBrokerServiceTask", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A06D RID: 41069 RVA: 0x00279E3C File Offset: 0x0027803C
		public static LocalizedString ConfirmationMessageNewMailboxAuditLog(string Name, string Database, string AuditLog, string UserPrincipalName, string OrganizationalUnit)
		{
			return new LocalizedString("ConfirmationMessageNewMailboxAuditLog", "", false, false, Strings.ResourceManager, new object[]
			{
				Name,
				Database,
				AuditLog,
				UserPrincipalName,
				OrganizationalUnit
			});
		}

		// Token: 0x0600A06E RID: 41070 RVA: 0x00279E7C File Offset: 0x0027807C
		public static LocalizedString InvalidMsoSyncServiceResponse(string reason)
		{
			return new LocalizedString("InvalidMsoSyncServiceResponse", "", false, false, Strings.ResourceManager, new object[]
			{
				reason
			});
		}

		// Token: 0x1700347C RID: 13436
		// (get) Token: 0x0600A06F RID: 41071 RVA: 0x00279EAB File Offset: 0x002780AB
		public static LocalizedString ADAttributeFirstName
		{
			get
			{
				return new LocalizedString("ADAttributeFirstName", "Ex05CDB2", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A070 RID: 41072 RVA: 0x00279ECC File Offset: 0x002780CC
		public static LocalizedString ErrorNonActiveOrganizationFound(string name)
		{
			return new LocalizedString("ErrorNonActiveOrganizationFound", "Ex3F026B", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x0600A071 RID: 41073 RVA: 0x00279EFC File Offset: 0x002780FC
		public static LocalizedString InstallFreeBusyFolderCreatedFolder(string folder)
		{
			return new LocalizedString("InstallFreeBusyFolderCreatedFolder", "Ex4B15C4", false, true, Strings.ResourceManager, new object[]
			{
				folder
			});
		}

		// Token: 0x1700347D RID: 13437
		// (get) Token: 0x0600A072 RID: 41074 RVA: 0x00279F2B File Offset: 0x0027812B
		public static LocalizedString DebugStartRetrievingAuditConfig
		{
			get
			{
				return new LocalizedString("DebugStartRetrievingAuditConfig", "Ex6753ED", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A073 RID: 41075 RVA: 0x00279F4C File Offset: 0x0027814C
		public static LocalizedString ErrorServicePlanDoesntAllowSharedConfiguration(string programid, string offerid)
		{
			return new LocalizedString("ErrorServicePlanDoesntAllowSharedConfiguration", "ExFFD499", false, true, Strings.ResourceManager, new object[]
			{
				programid,
				offerid
			});
		}

		// Token: 0x0600A074 RID: 41076 RVA: 0x00279F80 File Offset: 0x00278180
		public static LocalizedString ErrorObjectNotManagableFromCurrentConsole(string id, string objectVersion)
		{
			return new LocalizedString("ErrorObjectNotManagableFromCurrentConsole", "ExBA63C5", false, true, Strings.ResourceManager, new object[]
			{
				id,
				objectVersion
			});
		}

		// Token: 0x0600A075 RID: 41077 RVA: 0x00279FB4 File Offset: 0x002781B4
		public static LocalizedString ErrorSystemFileNotFound(string file)
		{
			return new LocalizedString("ErrorSystemFileNotFound", "Ex402D43", false, true, Strings.ResourceManager, new object[]
			{
				file
			});
		}

		// Token: 0x1700347E RID: 13438
		// (get) Token: 0x0600A076 RID: 41078 RVA: 0x00279FE3 File Offset: 0x002781E3
		public static LocalizedString EwsNotSupportedException
		{
			get
			{
				return new LocalizedString("EwsNotSupportedException", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A077 RID: 41079 RVA: 0x0027A004 File Offset: 0x00278204
		public static LocalizedString ConfirmationMessageRemoveMalwareFilterRule(string identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveMalwareFilterRule", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x0600A078 RID: 41080 RVA: 0x0027A034 File Offset: 0x00278234
		public static LocalizedString WarningChangeTemplateState(string identity)
		{
			return new LocalizedString("WarningChangeTemplateState", "Ex89E196", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x0600A079 RID: 41081 RVA: 0x0027A064 File Offset: 0x00278264
		public static LocalizedString VerboseApplyingAuthenticationSettingForVDir(string identity)
		{
			return new LocalizedString("VerboseApplyingAuthenticationSettingForVDir", "Ex5B9588", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x0600A07A RID: 41082 RVA: 0x0027A094 File Offset: 0x00278294
		public static LocalizedString ErrorUserOrContactNotUnique(string id)
		{
			return new LocalizedString("ErrorUserOrContactNotUnique", "Ex606C72", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x1700347F RID: 13439
		// (get) Token: 0x0600A07B RID: 41083 RVA: 0x0027A0C3 File Offset: 0x002782C3
		public static LocalizedString IncludeAutoDiscoverOnlyApplicableToCAS
		{
			get
			{
				return new LocalizedString("IncludeAutoDiscoverOnlyApplicableToCAS", "Ex7103E9", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A07C RID: 41084 RVA: 0x0027A0E4 File Offset: 0x002782E4
		public static LocalizedString ConfirmationMessageRemoveMobileDevice(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveMobileDevice", "ExE201D3", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x0600A07D RID: 41085 RVA: 0x0027A114 File Offset: 0x00278314
		public static LocalizedString ErrorDCNotAvailable(string hostName)
		{
			return new LocalizedString("ErrorDCNotAvailable", "Ex88AB8C", false, true, Strings.ResourceManager, new object[]
			{
				hostName
			});
		}

		// Token: 0x17003480 RID: 13440
		// (get) Token: 0x0600A07E RID: 41086 RVA: 0x0027A143 File Offset: 0x00278343
		public static LocalizedString ReplicationCheckResultUndefined
		{
			get
			{
				return new LocalizedString("ReplicationCheckResultUndefined", "Ex159B35", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003481 RID: 13441
		// (get) Token: 0x0600A07F RID: 41087 RVA: 0x0027A161 File Offset: 0x00278361
		public static LocalizedString CasHealthOwaLogoffError
		{
			get
			{
				return new LocalizedString("CasHealthOwaLogoffError", "Ex69BEE9", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A080 RID: 41088 RVA: 0x0027A180 File Offset: 0x00278380
		public static LocalizedString ErrorGetSiteMailboxDiagnostics(string name, string error)
		{
			return new LocalizedString("ErrorGetSiteMailboxDiagnostics", "", false, false, Strings.ResourceManager, new object[]
			{
				name,
				error
			});
		}

		// Token: 0x17003482 RID: 13442
		// (get) Token: 0x0600A081 RID: 41089 RVA: 0x0027A1B3 File Offset: 0x002783B3
		public static LocalizedString DagTaskDone
		{
			get
			{
				return new LocalizedString("DagTaskDone", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003483 RID: 13443
		// (get) Token: 0x0600A082 RID: 41090 RVA: 0x0027A1D1 File Offset: 0x002783D1
		public static LocalizedString MustProvideNonEmptyStringForIdentity
		{
			get
			{
				return new LocalizedString("MustProvideNonEmptyStringForIdentity", "Ex8C4AD5", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003484 RID: 13444
		// (get) Token: 0x0600A083 RID: 41091 RVA: 0x0027A1EF File Offset: 0x002783EF
		public static LocalizedString WarningDeleteTemplate
		{
			get
			{
				return new LocalizedString("WarningDeleteTemplate", "Ex9C1C82", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A084 RID: 41092 RVA: 0x0027A210 File Offset: 0x00278410
		public static LocalizedString ConfirmationMessageCompleteOrganizationUpgrade(string OrganizationalPath)
		{
			return new LocalizedString("ConfirmationMessageCompleteOrganizationUpgrade", "Ex809893", false, true, Strings.ResourceManager, new object[]
			{
				OrganizationalPath
			});
		}

		// Token: 0x0600A085 RID: 41093 RVA: 0x0027A240 File Offset: 0x00278440
		public static LocalizedString ConfirmationMessageNewMailContact(string Name, string ExternalEmailAddress, string OrganizationalUnit)
		{
			return new LocalizedString("ConfirmationMessageNewMailContact", "Ex56F958", false, true, Strings.ResourceManager, new object[]
			{
				Name,
				ExternalEmailAddress,
				OrganizationalUnit
			});
		}

		// Token: 0x0600A086 RID: 41094 RVA: 0x0027A278 File Offset: 0x00278478
		public static LocalizedString ConfirmationMessageEnableRpcHttpExternalAndInternal(string WebSiteName, string Server, string ExternalHostname, string ExternalClientAuthenticationMethod, string InternalHostname, string InternalClientAuthenticationMethod, string IISAuthenticationMethods)
		{
			return new LocalizedString("ConfirmationMessageEnableRpcHttpExternalAndInternal", "", false, false, Strings.ResourceManager, new object[]
			{
				WebSiteName,
				Server,
				ExternalHostname,
				ExternalClientAuthenticationMethod,
				InternalHostname,
				InternalClientAuthenticationMethod,
				IISAuthenticationMethods
			});
		}

		// Token: 0x0600A087 RID: 41095 RVA: 0x0027A2C4 File Offset: 0x002784C4
		public static LocalizedString InvalidMobileDeviceIdentity(string identity)
		{
			return new LocalizedString("InvalidMobileDeviceIdentity", "ExC78B0E", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x0600A088 RID: 41096 RVA: 0x0027A2F4 File Offset: 0x002784F4
		public static LocalizedString ProgressStatusReadingManagementRoleTree(int count)
		{
			return new LocalizedString("ProgressStatusReadingManagementRoleTree", "Ex82FCB6", false, true, Strings.ResourceManager, new object[]
			{
				count
			});
		}

		// Token: 0x17003485 RID: 13445
		// (get) Token: 0x0600A089 RID: 41097 RVA: 0x0027A328 File Offset: 0x00278528
		public static LocalizedString SetupProgressStoppingWMIService
		{
			get
			{
				return new LocalizedString("SetupProgressStoppingWMIService", "Ex18AE53", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A08A RID: 41098 RVA: 0x0027A348 File Offset: 0x00278548
		public static LocalizedString ErrorCannotMoveArbitrationMailboxesCrossForest(string mailbox)
		{
			return new LocalizedString("ErrorCannotMoveArbitrationMailboxesCrossForest", "ExB84B70", false, true, Strings.ResourceManager, new object[]
			{
				mailbox
			});
		}

		// Token: 0x17003486 RID: 13446
		// (get) Token: 0x0600A08B RID: 41099 RVA: 0x0027A377 File Offset: 0x00278577
		public static LocalizedString ConfirmationMessageStopELCAssistant
		{
			get
			{
				return new LocalizedString("ConfirmationMessageStopELCAssistant", "Ex5DC720", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003487 RID: 13447
		// (get) Token: 0x0600A08C RID: 41100 RVA: 0x0027A395 File Offset: 0x00278595
		public static LocalizedString MalboxFolderRightsDeleteOwnedItems
		{
			get
			{
				return new LocalizedString("MalboxFolderRightsDeleteOwnedItems", "Ex4AB282", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003488 RID: 13448
		// (get) Token: 0x0600A08D RID: 41101 RVA: 0x0027A3B3 File Offset: 0x002785B3
		public static LocalizedString ErrorAuthNewCertificateNeeded
		{
			get
			{
				return new LocalizedString("ErrorAuthNewCertificateNeeded", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003489 RID: 13449
		// (get) Token: 0x0600A08E RID: 41102 RVA: 0x0027A3D1 File Offset: 0x002785D1
		public static LocalizedString ContentIndexingServiceStillInstalled
		{
			get
			{
				return new LocalizedString("ContentIndexingServiceStillInstalled", "ExC947D6", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A08F RID: 41103 RVA: 0x0027A3F0 File Offset: 0x002785F0
		public static LocalizedString ErrorNoAvailablePublicFolderDatabaseInDatacenter(string orgName)
		{
			return new LocalizedString("ErrorNoAvailablePublicFolderDatabaseInDatacenter", "Ex77AC87", false, true, Strings.ResourceManager, new object[]
			{
				orgName
			});
		}

		// Token: 0x1700348A RID: 13450
		// (get) Token: 0x0600A090 RID: 41104 RVA: 0x0027A41F File Offset: 0x0027861F
		public static LocalizedString CasHealthOwaConnectionRefused
		{
			get
			{
				return new LocalizedString("CasHealthOwaConnectionRefused", "ExA504E0", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A091 RID: 41105 RVA: 0x0027A440 File Offset: 0x00278640
		public static LocalizedString FailedDocumentsNoResultsDatabase(string mdb)
		{
			return new LocalizedString("FailedDocumentsNoResultsDatabase", "", false, false, Strings.ResourceManager, new object[]
			{
				mdb
			});
		}

		// Token: 0x1700348B RID: 13451
		// (get) Token: 0x0600A092 RID: 41106 RVA: 0x0027A46F File Offset: 0x0027866F
		public static LocalizedString NoMatchingUMMailboxPolicyInTargetForest
		{
			get
			{
				return new LocalizedString("NoMatchingUMMailboxPolicyInTargetForest", "ExDDCF41", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A093 RID: 41107 RVA: 0x0027A490 File Offset: 0x00278690
		public static LocalizedString SuccessRemoveServerMonitoringOverride(string identity, string serverName)
		{
			return new LocalizedString("SuccessRemoveServerMonitoringOverride", "", false, false, Strings.ResourceManager, new object[]
			{
				identity,
				serverName
			});
		}

		// Token: 0x0600A094 RID: 41108 RVA: 0x0027A4C4 File Offset: 0x002786C4
		public static LocalizedString ProgressActivityRemovingWorkloadManagementPolicyTree(string id)
		{
			return new LocalizedString("ProgressActivityRemovingWorkloadManagementPolicyTree", "", false, false, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x1700348C RID: 13452
		// (get) Token: 0x0600A095 RID: 41109 RVA: 0x0027A4F3 File Offset: 0x002786F3
		public static LocalizedString ContentIndexingPHStubNotFound
		{
			get
			{
				return new LocalizedString("ContentIndexingPHStubNotFound", "ExA4DCB7", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700348D RID: 13453
		// (get) Token: 0x0600A096 RID: 41110 RVA: 0x0027A511 File Offset: 0x00278711
		public static LocalizedString ConfirmationMessageTestMailflow
		{
			get
			{
				return new LocalizedString("ConfirmationMessageTestMailflow", "Ex396F30", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700348E RID: 13454
		// (get) Token: 0x0600A097 RID: 41111 RVA: 0x0027A52F File Offset: 0x0027872F
		public static LocalizedString ADAttributeOtherFaxNumber
		{
			get
			{
				return new LocalizedString("ADAttributeOtherFaxNumber", "ExC8FFBC", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A098 RID: 41112 RVA: 0x0027A550 File Offset: 0x00278750
		public static LocalizedString ErrorArchiveLegacyDNDoesNotMatchUser(string archiveLegDN, string userLegDN)
		{
			return new LocalizedString("ErrorArchiveLegacyDNDoesNotMatchUser", "Ex31046D", false, true, Strings.ResourceManager, new object[]
			{
				archiveLegDN,
				userLegDN
			});
		}

		// Token: 0x0600A099 RID: 41113 RVA: 0x0027A584 File Offset: 0x00278784
		public static LocalizedString ErrorCannotRetrieveCASServer(string serverId)
		{
			return new LocalizedString("ErrorCannotRetrieveCASServer", "", false, false, Strings.ResourceManager, new object[]
			{
				serverId
			});
		}

		// Token: 0x0600A09A RID: 41114 RVA: 0x0027A5B4 File Offset: 0x002787B4
		public static LocalizedString CasHealthCouldNotLogUserForAutodiscover(string domain, string userName, string additionalInfo)
		{
			return new LocalizedString("CasHealthCouldNotLogUserForAutodiscover", "ExDCAB29", false, true, Strings.ResourceManager, new object[]
			{
				domain,
				userName,
				additionalInfo
			});
		}

		// Token: 0x0600A09B RID: 41115 RVA: 0x0027A5EC File Offset: 0x002787EC
		public static LocalizedString AcceptedDomainIsReferencedByAddressTemplate(SmtpDomainWithSubdomains domain, SmtpProxyAddressTemplate template)
		{
			return new LocalizedString("AcceptedDomainIsReferencedByAddressTemplate", "Ex3264BB", false, true, Strings.ResourceManager, new object[]
			{
				domain,
				template
			});
		}

		// Token: 0x0600A09C RID: 41116 RVA: 0x0027A620 File Offset: 0x00278820
		public static LocalizedString ErrorManagedFolderMailboxPolicyNotFound(string idStringValue)
		{
			return new LocalizedString("ErrorManagedFolderMailboxPolicyNotFound", "Ex796730", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		// Token: 0x0600A09D RID: 41117 RVA: 0x0027A650 File Offset: 0x00278850
		public static LocalizedString AddAccessRuleUnauthorizedAccess(string thumbprint)
		{
			return new LocalizedString("AddAccessRuleUnauthorizedAccess", "Ex3E62FB", false, true, Strings.ResourceManager, new object[]
			{
				thumbprint
			});
		}

		// Token: 0x1700348F RID: 13455
		// (get) Token: 0x0600A09E RID: 41118 RVA: 0x0027A67F File Offset: 0x0027887F
		public static LocalizedString ErrorChildObjectTypeParameter
		{
			get
			{
				return new LocalizedString("ErrorChildObjectTypeParameter", "Ex3E728C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A09F RID: 41119 RVA: 0x0027A6A0 File Offset: 0x002788A0
		public static LocalizedString SiteMailboxPolicySet(string policy)
		{
			return new LocalizedString("SiteMailboxPolicySet", "", false, false, Strings.ResourceManager, new object[]
			{
				policy
			});
		}

		// Token: 0x0600A0A0 RID: 41120 RVA: 0x0027A6D0 File Offset: 0x002788D0
		public static LocalizedString DataClassificationFingerprintsMissing(string name)
		{
			return new LocalizedString("DataClassificationFingerprintsMissing", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x0600A0A1 RID: 41121 RVA: 0x0027A700 File Offset: 0x00278900
		public static LocalizedString CorruptionTypeParameterIncompatible(string paramName)
		{
			return new LocalizedString("CorruptionTypeParameterIncompatible", "", false, false, Strings.ResourceManager, new object[]
			{
				paramName
			});
		}

		// Token: 0x0600A0A2 RID: 41122 RVA: 0x0027A730 File Offset: 0x00278930
		public static LocalizedString ConfirmationMessageTestIPBlockListProvider(string Identity, string IPAddress)
		{
			return new LocalizedString("ConfirmationMessageTestIPBlockListProvider", "Ex3F6B92", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				IPAddress
			});
		}

		// Token: 0x0600A0A3 RID: 41123 RVA: 0x0027A764 File Offset: 0x00278964
		public static LocalizedString ClassificationRuleCollectionOobRulePackIdViolation(string rulePackId, string reservedPrefix)
		{
			return new LocalizedString("ClassificationRuleCollectionOobRulePackIdViolation", "", false, false, Strings.ResourceManager, new object[]
			{
				rulePackId,
				reservedPrefix
			});
		}

		// Token: 0x17003490 RID: 13456
		// (get) Token: 0x0600A0A4 RID: 41124 RVA: 0x0027A797 File Offset: 0x00278997
		public static LocalizedString SetupProgressCreateDag
		{
			get
			{
				return new LocalizedString("SetupProgressCreateDag", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A0A5 RID: 41125 RVA: 0x0027A7B8 File Offset: 0x002789B8
		public static LocalizedString ErrorCertificateNotFound(string certThumbprint)
		{
			return new LocalizedString("ErrorCertificateNotFound", "ExFF0307", false, true, Strings.ResourceManager, new object[]
			{
				certThumbprint
			});
		}

		// Token: 0x0600A0A6 RID: 41126 RVA: 0x0027A7E8 File Offset: 0x002789E8
		public static LocalizedString WarningScheduledTimeIsUnchanged(string scheduleParameter)
		{
			return new LocalizedString("WarningScheduledTimeIsUnchanged", "", false, false, Strings.ResourceManager, new object[]
			{
				scheduleParameter
			});
		}

		// Token: 0x0600A0A7 RID: 41127 RVA: 0x0027A818 File Offset: 0x00278A18
		public static LocalizedString DagTaskCouldNotFindMatchingNetwork(string ipAddress, string machineName)
		{
			return new LocalizedString("DagTaskCouldNotFindMatchingNetwork", "", false, false, Strings.ResourceManager, new object[]
			{
				ipAddress,
				machineName
			});
		}

		// Token: 0x17003491 RID: 13457
		// (get) Token: 0x0600A0A8 RID: 41128 RVA: 0x0027A84B File Offset: 0x00278A4B
		public static LocalizedString ReplayLagStatusLabelActual
		{
			get
			{
				return new LocalizedString("ReplayLagStatusLabelActual", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A0A9 RID: 41129 RVA: 0x0027A86C File Offset: 0x00278A6C
		public static LocalizedString TemplateTypeNotValid(string type)
		{
			return new LocalizedString("TemplateTypeNotValid", "", false, false, Strings.ResourceManager, new object[]
			{
				type
			});
		}

		// Token: 0x17003492 RID: 13458
		// (get) Token: 0x0600A0AA RID: 41130 RVA: 0x0027A89B File Offset: 0x00278A9B
		public static LocalizedString MtrtPrependSubject
		{
			get
			{
				return new LocalizedString("MtrtPrependSubject", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A0AB RID: 41131 RVA: 0x0027A8BC File Offset: 0x00278ABC
		public static LocalizedString InfoChangingGroupType(string group, string groupType)
		{
			return new LocalizedString("InfoChangingGroupType", "Ex17356A", false, true, Strings.ResourceManager, new object[]
			{
				group,
				groupType
			});
		}

		// Token: 0x17003493 RID: 13459
		// (get) Token: 0x0600A0AC RID: 41132 RVA: 0x0027A8EF File Offset: 0x00278AEF
		public static LocalizedString CannotRemoveUMCRCertificate
		{
			get
			{
				return new LocalizedString("CannotRemoveUMCRCertificate", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A0AD RID: 41133 RVA: 0x0027A910 File Offset: 0x00278B10
		public static LocalizedString VerboseMountDatabaseStillOnlined(string id)
		{
			return new LocalizedString("VerboseMountDatabaseStillOnlined", "ExBBC4C2", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x17003494 RID: 13460
		// (get) Token: 0x0600A0AE RID: 41134 RVA: 0x0027A93F File Offset: 0x00278B3F
		public static LocalizedString Error_MessageClassFilter
		{
			get
			{
				return new LocalizedString("Error_MessageClassFilter", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A0AF RID: 41135 RVA: 0x0027A960 File Offset: 0x00278B60
		public static LocalizedString ConfirmationMessageNewCallAnsweringRule(string name)
		{
			return new LocalizedString("ConfirmationMessageNewCallAnsweringRule", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x0600A0B0 RID: 41136 RVA: 0x0027A990 File Offset: 0x00278B90
		public static LocalizedString ConfirmationAddSupervisionListEntry(string entry, string tag)
		{
			return new LocalizedString("ConfirmationAddSupervisionListEntry", "Ex1BDB0B", false, true, Strings.ResourceManager, new object[]
			{
				entry,
				tag
			});
		}

		// Token: 0x0600A0B1 RID: 41137 RVA: 0x0027A9C4 File Offset: 0x00278BC4
		public static LocalizedString DomainNameIsNotValidForCertificate(string domain)
		{
			return new LocalizedString("DomainNameIsNotValidForCertificate", "Ex3D2BFD", false, true, Strings.ResourceManager, new object[]
			{
				domain
			});
		}

		// Token: 0x0600A0B2 RID: 41138 RVA: 0x0027A9F4 File Offset: 0x00278BF4
		public static LocalizedString ConfirmationMessageDisableServiceEmailChannel(string Identity)
		{
			return new LocalizedString("ConfirmationMessageDisableServiceEmailChannel", "ExB31D61", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x17003495 RID: 13461
		// (get) Token: 0x0600A0B3 RID: 41139 RVA: 0x0027AA23 File Offset: 0x00278C23
		public static LocalizedString MetabaseGetPropertiesFailure
		{
			get
			{
				return new LocalizedString("MetabaseGetPropertiesFailure", "Ex4E7A23", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A0B4 RID: 41140 RVA: 0x0027AA44 File Offset: 0x00278C44
		public static LocalizedString CasHealthLogon(string Domain, string UserName)
		{
			return new LocalizedString("CasHealthLogon", "Ex0466A8", false, true, Strings.ResourceManager, new object[]
			{
				Domain,
				UserName
			});
		}

		// Token: 0x0600A0B5 RID: 41141 RVA: 0x0027AA78 File Offset: 0x00278C78
		public static LocalizedString ExRbacRoleGroupInMultiTenantException(Guid guid, string groupName)
		{
			return new LocalizedString("ExRbacRoleGroupInMultiTenantException", "Ex2A1B05", false, true, Strings.ResourceManager, new object[]
			{
				guid,
				groupName
			});
		}

		// Token: 0x0600A0B6 RID: 41142 RVA: 0x0027AAB0 File Offset: 0x00278CB0
		public static LocalizedString ErrorNonExistentDirectoryUser(string user)
		{
			return new LocalizedString("ErrorNonExistentDirectoryUser", "", false, false, Strings.ResourceManager, new object[]
			{
				user
			});
		}

		// Token: 0x17003496 RID: 13462
		// (get) Token: 0x0600A0B7 RID: 41143 RVA: 0x0027AADF File Offset: 0x00278CDF
		public static LocalizedString FolderMoveRequestCheckComplete
		{
			get
			{
				return new LocalizedString("FolderMoveRequestCheckComplete", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003497 RID: 13463
		// (get) Token: 0x0600A0B8 RID: 41144 RVA: 0x0027AAFD File Offset: 0x00278CFD
		public static LocalizedString ConfirmationMessageNewEdgeSyncServiceConfigOnLocalSite
		{
			get
			{
				return new LocalizedString("ConfirmationMessageNewEdgeSyncServiceConfigOnLocalSite", "Ex491855", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003498 RID: 13464
		// (get) Token: 0x0600A0B9 RID: 41145 RVA: 0x0027AB1B File Offset: 0x00278D1B
		public static LocalizedString InstallMonitoringCorrelationServiceTask
		{
			get
			{
				return new LocalizedString("InstallMonitoringCorrelationServiceTask", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A0BA RID: 41146 RVA: 0x0027AB3C File Offset: 0x00278D3C
		public static LocalizedString ErrorDuplicateNonActiveOrganizationExists(string name)
		{
			return new LocalizedString("ErrorDuplicateNonActiveOrganizationExists", "ExE5B94B", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x0600A0BB RID: 41147 RVA: 0x0027AB6C File Offset: 0x00278D6C
		public static LocalizedString TowsException(string url, string message)
		{
			return new LocalizedString("TowsException", "", false, false, Strings.ResourceManager, new object[]
			{
				url,
				message
			});
		}

		// Token: 0x0600A0BC RID: 41148 RVA: 0x0027ABA0 File Offset: 0x00278DA0
		public static LocalizedString ExportDestinationIsReadonly(string name)
		{
			return new LocalizedString("ExportDestinationIsReadonly", "ExBFF0C4", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x0600A0BD RID: 41149 RVA: 0x0027ABD0 File Offset: 0x00278DD0
		public static LocalizedString TcpListenerRequestFailed(string machineName, string error)
		{
			return new LocalizedString("TcpListenerRequestFailed", "ExB35B57", false, true, Strings.ResourceManager, new object[]
			{
				machineName,
				error
			});
		}

		// Token: 0x0600A0BE RID: 41150 RVA: 0x0027AC04 File Offset: 0x00278E04
		public static LocalizedString ErrorSetGroupMailboxUserPermissions(Guid groupMailbox, string error)
		{
			return new LocalizedString("ErrorSetGroupMailboxUserPermissions", "", false, false, Strings.ResourceManager, new object[]
			{
				groupMailbox,
				error
			});
		}

		// Token: 0x0600A0BF RID: 41151 RVA: 0x0027AC3C File Offset: 0x00278E3C
		public static LocalizedString ConfirmationMessageSuspendOfflineMoveRequest(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSuspendOfflineMoveRequest", "Ex6F96C0", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x0600A0C0 RID: 41152 RVA: 0x0027AC6C File Offset: 0x00278E6C
		public static LocalizedString FailedBecauseofADDataValidationException(string error)
		{
			return new LocalizedString("FailedBecauseofADDataValidationException", "Ex04C0D6", false, true, Strings.ResourceManager, new object[]
			{
				error
			});
		}

		// Token: 0x0600A0C1 RID: 41153 RVA: 0x0027AC9C File Offset: 0x00278E9C
		public static LocalizedString ErrorDisableMailboxWithLitigationHold(string mbxId)
		{
			return new LocalizedString("ErrorDisableMailboxWithLitigationHold", "", false, false, Strings.ResourceManager, new object[]
			{
				mbxId
			});
		}

		// Token: 0x0600A0C2 RID: 41154 RVA: 0x0027ACCC File Offset: 0x00278ECC
		public static LocalizedString TestSearchGetNonIpmSubTreeFolder(string MDB, string ID)
		{
			return new LocalizedString("TestSearchGetNonIpmSubTreeFolder", "Ex13DFD8", false, true, Strings.ResourceManager, new object[]
			{
				MDB,
				ID
			});
		}

		// Token: 0x0600A0C3 RID: 41155 RVA: 0x0027AD00 File Offset: 0x00278F00
		public static LocalizedString FolderNotExistsOnRemoteServer(string path, string serverName)
		{
			return new LocalizedString("FolderNotExistsOnRemoteServer", "ExACD40A", false, true, Strings.ResourceManager, new object[]
			{
				path,
				serverName
			});
		}

		// Token: 0x17003499 RID: 13465
		// (get) Token: 0x0600A0C4 RID: 41156 RVA: 0x0027AD33 File Offset: 0x00278F33
		public static LocalizedString ConfirmationMessageUpdateSyncStatistics
		{
			get
			{
				return new LocalizedString("ConfirmationMessageUpdateSyncStatistics", "ExAF1681", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700349A RID: 13466
		// (get) Token: 0x0600A0C5 RID: 41157 RVA: 0x0027AD51 File Offset: 0x00278F51
		public static LocalizedString ClientAccessRoleDisplayName
		{
			get
			{
				return new LocalizedString("ClientAccessRoleDisplayName", "ExDD1A1C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A0C6 RID: 41158 RVA: 0x0027AD70 File Offset: 0x00278F70
		public static LocalizedString ConfirmationMessageNewAccountPartition(string Name)
		{
			return new LocalizedString("ConfirmationMessageNewAccountPartition", "", false, false, Strings.ResourceManager, new object[]
			{
				Name
			});
		}

		// Token: 0x1700349B RID: 13467
		// (get) Token: 0x0600A0C7 RID: 41159 RVA: 0x0027AD9F File Offset: 0x00278F9F
		public static LocalizedString ConfirmationMessageNewMicrosoftExchangeRecipient
		{
			get
			{
				return new LocalizedString("ConfirmationMessageNewMicrosoftExchangeRecipient", "Ex832602", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A0C8 RID: 41160 RVA: 0x0027ADC0 File Offset: 0x00278FC0
		public static LocalizedString VerboseNoAssociatedMoveRequestOnDatabaseCondition(string id)
		{
			return new LocalizedString("VerboseNoAssociatedMoveRequestOnDatabaseCondition", "Ex593253", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x0600A0C9 RID: 41161 RVA: 0x0027ADF0 File Offset: 0x00278FF0
		public static LocalizedString ConfirmationMessageMailboxRegionalConfiguration(string Identity)
		{
			return new LocalizedString("ConfirmationMessageMailboxRegionalConfiguration", "ExEA13C4", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x1700349C RID: 13468
		// (get) Token: 0x0600A0CA RID: 41162 RVA: 0x0027AE1F File Offset: 0x0027901F
		public static LocalizedString GzipCannotBeSetToError
		{
			get
			{
				return new LocalizedString("GzipCannotBeSetToError", "ExD90270", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700349D RID: 13469
		// (get) Token: 0x0600A0CB RID: 41163 RVA: 0x0027AE3D File Offset: 0x0027903D
		public static LocalizedString ThrottlingServiceDescription
		{
			get
			{
				return new LocalizedString("ThrottlingServiceDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A0CC RID: 41164 RVA: 0x0027AE5C File Offset: 0x0027905C
		public static LocalizedString InfoSuccess(LocalizedString message)
		{
			return new LocalizedString("InfoSuccess", "Ex73849D", false, true, Strings.ResourceManager, new object[]
			{
				message
			});
		}

		// Token: 0x0600A0CD RID: 41165 RVA: 0x0027AE90 File Offset: 0x00279090
		public static LocalizedString FailedToGetCopyEdbFileStatus(string server, string edbFilePath)
		{
			return new LocalizedString("FailedToGetCopyEdbFileStatus", "Ex43544F", false, true, Strings.ResourceManager, new object[]
			{
				server,
				edbFilePath
			});
		}

		// Token: 0x0600A0CE RID: 41166 RVA: 0x0027AEC4 File Offset: 0x002790C4
		public static LocalizedString InvalidMobileDeviceIdType(string type)
		{
			return new LocalizedString("InvalidMobileDeviceIdType", "ExC95718", false, true, Strings.ResourceManager, new object[]
			{
				type
			});
		}

		// Token: 0x1700349E RID: 13470
		// (get) Token: 0x0600A0CF RID: 41167 RVA: 0x0027AEF3 File Offset: 0x002790F3
		public static LocalizedString FileLocationNotChanged
		{
			get
			{
				return new LocalizedString("FileLocationNotChanged", "Ex584244", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A0D0 RID: 41168 RVA: 0x0027AF14 File Offset: 0x00279114
		public static LocalizedString ConfirmationMessageNewHostedConnectionFilterPolicy(string name)
		{
			return new LocalizedString("ConfirmationMessageNewHostedConnectionFilterPolicy", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x1700349F RID: 13471
		// (get) Token: 0x0600A0D1 RID: 41169 RVA: 0x0027AF43 File Offset: 0x00279143
		public static LocalizedString ConversationsNoConversationsFound
		{
			get
			{
				return new LocalizedString("ConversationsNoConversationsFound", "ExB59169", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A0D2 RID: 41170 RVA: 0x0027AF64 File Offset: 0x00279164
		public static LocalizedString DlpPolicyMultipleCommandsNotSupported(string command)
		{
			return new LocalizedString("DlpPolicyMultipleCommandsNotSupported", "", false, false, Strings.ResourceManager, new object[]
			{
				command
			});
		}

		// Token: 0x0600A0D3 RID: 41171 RVA: 0x0027AF94 File Offset: 0x00279194
		public static LocalizedString VerboseFoundAssigneeInDomainNC(string policy)
		{
			return new LocalizedString("VerboseFoundAssigneeInDomainNC", "Ex3566A1", false, true, Strings.ResourceManager, new object[]
			{
				policy
			});
		}

		// Token: 0x0600A0D4 RID: 41172 RVA: 0x0027AFC4 File Offset: 0x002791C4
		public static LocalizedString TooManyEmbeddedExpressions(int maxExpressionCount)
		{
			return new LocalizedString("TooManyEmbeddedExpressions", "", false, false, Strings.ResourceManager, new object[]
			{
				maxExpressionCount
			});
		}

		// Token: 0x170034A0 RID: 13472
		// (get) Token: 0x0600A0D5 RID: 41173 RVA: 0x0027AFF8 File Offset: 0x002791F8
		public static LocalizedString ErrorCannotTurnOnBothAndAndRemove
		{
			get
			{
				return new LocalizedString("ErrorCannotTurnOnBothAndAndRemove", "Ex775E98", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170034A1 RID: 13473
		// (get) Token: 0x0600A0D6 RID: 41174 RVA: 0x0027B016 File Offset: 0x00279216
		public static LocalizedString InfoGetRacAndClc
		{
			get
			{
				return new LocalizedString("InfoGetRacAndClc", "Ex105AB3", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170034A2 RID: 13474
		// (get) Token: 0x0600A0D7 RID: 41175 RVA: 0x0027B034 File Offset: 0x00279234
		public static LocalizedString SetupProgressStoppingHygieneUpdateService
		{
			get
			{
				return new LocalizedString("SetupProgressStoppingHygieneUpdateService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170034A3 RID: 13475
		// (get) Token: 0x0600A0D8 RID: 41176 RVA: 0x0027B052 File Offset: 0x00279252
		public static LocalizedString TransportSyncManagerServiceDescription
		{
			get
			{
				return new LocalizedString("TransportSyncManagerServiceDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A0D9 RID: 41177 RVA: 0x0027B070 File Offset: 0x00279270
		public static LocalizedString ErrorDuplicateAuthServer(string authServer)
		{
			return new LocalizedString("ErrorDuplicateAuthServer", "", false, false, Strings.ResourceManager, new object[]
			{
				authServer
			});
		}

		// Token: 0x170034A4 RID: 13476
		// (get) Token: 0x0600A0DA RID: 41178 RVA: 0x0027B09F File Offset: 0x0027929F
		public static LocalizedString RejectMessageActionIsBeingOverridded
		{
			get
			{
				return new LocalizedString("RejectMessageActionIsBeingOverridded", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A0DB RID: 41179 RVA: 0x0027B0C0 File Offset: 0x002792C0
		public static LocalizedString TestSearchCatalogErrorMessage(string error)
		{
			return new LocalizedString("TestSearchCatalogErrorMessage", "", false, false, Strings.ResourceManager, new object[]
			{
				error
			});
		}

		// Token: 0x0600A0DC RID: 41180 RVA: 0x0027B0F0 File Offset: 0x002792F0
		public static LocalizedString VerboseInSiteOABVdirFound(string DN)
		{
			return new LocalizedString("VerboseInSiteOABVdirFound", "Ex4AC225", false, true, Strings.ResourceManager, new object[]
			{
				DN
			});
		}

		// Token: 0x0600A0DD RID: 41181 RVA: 0x0027B120 File Offset: 0x00279320
		public static LocalizedString ErrorMailboxRelocationJoinTargetNotContainerOwner(string mailbox)
		{
			return new LocalizedString("ErrorMailboxRelocationJoinTargetNotContainerOwner", "", false, false, Strings.ResourceManager, new object[]
			{
				mailbox
			});
		}

		// Token: 0x170034A5 RID: 13477
		// (get) Token: 0x0600A0DE RID: 41182 RVA: 0x0027B14F File Offset: 0x0027934F
		public static LocalizedString SetServiceInstanceMapResultCodePartitionUnavailable
		{
			get
			{
				return new LocalizedString("SetServiceInstanceMapResultCodePartitionUnavailable", "ExA99DA9", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170034A6 RID: 13478
		// (get) Token: 0x0600A0DF RID: 41183 RVA: 0x0027B16D File Offset: 0x0027936D
		public static LocalizedString SetupProgressStoppingContentIndexingService
		{
			get
			{
				return new LocalizedString("SetupProgressStoppingContentIndexingService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170034A7 RID: 13479
		// (get) Token: 0x0600A0E0 RID: 41184 RVA: 0x0027B18B File Offset: 0x0027938B
		public static LocalizedString PhoneNumberInvalidCountryCode
		{
			get
			{
				return new LocalizedString("PhoneNumberInvalidCountryCode", "ExD39E9C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A0E1 RID: 41185 RVA: 0x0027B1AC File Offset: 0x002793AC
		public static LocalizedString NoSystemProbeEventFound(Guid guid)
		{
			return new LocalizedString("NoSystemProbeEventFound", "", false, false, Strings.ResourceManager, new object[]
			{
				guid
			});
		}

		// Token: 0x0600A0E2 RID: 41186 RVA: 0x0027B1E0 File Offset: 0x002793E0
		public static LocalizedString ConfirmationMessageSetPublicFolderLocalReplicaAgeLimit(string Identity, string Server, string LocalReplicaAgeLimit)
		{
			return new LocalizedString("ConfirmationMessageSetPublicFolderLocalReplicaAgeLimit", "Ex077F81", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				Server,
				LocalReplicaAgeLimit
			});
		}

		// Token: 0x170034A8 RID: 13480
		// (get) Token: 0x0600A0E3 RID: 41187 RVA: 0x0027B217 File Offset: 0x00279417
		public static LocalizedString IrmLicensingIsDisabled
		{
			get
			{
				return new LocalizedString("IrmLicensingIsDisabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170034A9 RID: 13481
		// (get) Token: 0x0600A0E4 RID: 41188 RVA: 0x0027B235 File Offset: 0x00279435
		public static LocalizedString ErrorDisableMailboxWithJournalArchiveWithDirSync
		{
			get
			{
				return new LocalizedString("ErrorDisableMailboxWithJournalArchiveWithDirSync", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A0E5 RID: 41189 RVA: 0x0027B254 File Offset: 0x00279454
		public static LocalizedString SomeEssentialServicesForTheRoleNotRunning(string roleName, string servicesNotRunning)
		{
			return new LocalizedString("SomeEssentialServicesForTheRoleNotRunning", "Ex74EAE3", false, true, Strings.ResourceManager, new object[]
			{
				roleName,
				servicesNotRunning
			});
		}

		// Token: 0x170034AA RID: 13482
		// (get) Token: 0x0600A0E6 RID: 41190 RVA: 0x0027B287 File Offset: 0x00279487
		public static LocalizedString FederationTrustHasAllStsCertificates
		{
			get
			{
				return new LocalizedString("FederationTrustHasAllStsCertificates", "Ex83E238", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170034AB RID: 13483
		// (get) Token: 0x0600A0E7 RID: 41191 RVA: 0x0027B2A5 File Offset: 0x002794A5
		public static LocalizedString SetupComponentPreSetupGateway
		{
			get
			{
				return new LocalizedString("SetupComponentPreSetupGateway", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A0E8 RID: 41192 RVA: 0x0027B2C4 File Offset: 0x002794C4
		public static LocalizedString ConfirmationMessageSetUMMailbox(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetUMMailbox", "Ex508528", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x170034AC RID: 13484
		// (get) Token: 0x0600A0E9 RID: 41193 RVA: 0x0027B2F3 File Offset: 0x002794F3
		public static LocalizedString ErrorMailTipSetTranslationsWithoutDefault
		{
			get
			{
				return new LocalizedString("ErrorMailTipSetTranslationsWithoutDefault", "ExBE67EC", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170034AD RID: 13485
		// (get) Token: 0x0600A0EA RID: 41194 RVA: 0x0027B311 File Offset: 0x00279511
		public static LocalizedString InstallThrottlingServiceTask
		{
			get
			{
				return new LocalizedString("InstallThrottlingServiceTask", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170034AE RID: 13486
		// (get) Token: 0x0600A0EB RID: 41195 RVA: 0x0027B32F File Offset: 0x0027952F
		public static LocalizedString SetupComponentConfiguringMailbox
		{
			get
			{
				return new LocalizedString("SetupComponentConfiguringMailbox", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A0EC RID: 41196 RVA: 0x0027B350 File Offset: 0x00279550
		public static LocalizedString ConfirmationMessageNewELCContentSettings(string Name, string FolderName, string MessageClass)
		{
			return new LocalizedString("ConfirmationMessageNewELCContentSettings", "ExC731DC", false, true, Strings.ResourceManager, new object[]
			{
				Name,
				FolderName,
				MessageClass
			});
		}

		// Token: 0x0600A0ED RID: 41197 RVA: 0x0027B388 File Offset: 0x00279588
		public static LocalizedString ErrorCasArrayAlreadyExistsInSite(string site)
		{
			return new LocalizedString("ErrorCasArrayAlreadyExistsInSite", "Ex27FE96", false, true, Strings.ResourceManager, new object[]
			{
				site
			});
		}

		// Token: 0x170034AF RID: 13487
		// (get) Token: 0x0600A0EE RID: 41198 RVA: 0x0027B3B7 File Offset: 0x002795B7
		public static LocalizedString ArchiveConnectivityResultArchiveNotActive
		{
			get
			{
				return new LocalizedString("ArchiveConnectivityResultArchiveNotActive", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A0EF RID: 41199 RVA: 0x0027B3D8 File Offset: 0x002795D8
		public static LocalizedString ErrorCannotUpdateInvalidMailbox(string mailbox, string error)
		{
			return new LocalizedString("ErrorCannotUpdateInvalidMailbox", "ExF3974E", false, true, Strings.ResourceManager, new object[]
			{
				mailbox,
				error
			});
		}

		// Token: 0x0600A0F0 RID: 41200 RVA: 0x0027B40C File Offset: 0x0027960C
		public static LocalizedString ConfirmationMessageNewEdgeSyncMservConnectorWithSiteSpecified(string id)
		{
			return new LocalizedString("ConfirmationMessageNewEdgeSyncMservConnectorWithSiteSpecified", "ExF2EA06", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x0600A0F1 RID: 41201 RVA: 0x0027B43C File Offset: 0x0027963C
		public static LocalizedString ErrorCannotScopeEsnPolicy(string policy)
		{
			return new LocalizedString("ErrorCannotScopeEsnPolicy", "", false, false, Strings.ResourceManager, new object[]
			{
				policy
			});
		}

		// Token: 0x0600A0F2 RID: 41202 RVA: 0x0027B46C File Offset: 0x0027966C
		public static LocalizedString ConfirmationMessageSetActiveSyncDeviceAccessRule(string identity)
		{
			return new LocalizedString("ConfirmationMessageSetActiveSyncDeviceAccessRule", "Ex5AE837", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x0600A0F3 RID: 41203 RVA: 0x0027B49C File Offset: 0x0027969C
		public static LocalizedString ErrorSuspendWhenReadyToCompleteCannotBeUsedDuringCompletion(string name)
		{
			return new LocalizedString("ErrorSuspendWhenReadyToCompleteCannotBeUsedDuringCompletion", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x170034B0 RID: 13488
		// (get) Token: 0x0600A0F4 RID: 41204 RVA: 0x0027B4CB File Offset: 0x002796CB
		public static LocalizedString ReplicationCheckResultFailed
		{
			get
			{
				return new LocalizedString("ReplicationCheckResultFailed", "Ex31FE72", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170034B1 RID: 13489
		// (get) Token: 0x0600A0F5 RID: 41205 RVA: 0x0027B4E9 File Offset: 0x002796E9
		public static LocalizedString SuspendWRTCPreventCompletionCannotBeSetOnNewRequests
		{
			get
			{
				return new LocalizedString("SuspendWRTCPreventCompletionCannotBeSetOnNewRequests", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170034B2 RID: 13490
		// (get) Token: 0x0600A0F6 RID: 41206 RVA: 0x0027B507 File Offset: 0x00279707
		public static LocalizedString ErrorMultipleJournalArchiveAddress
		{
			get
			{
				return new LocalizedString("ErrorMultipleJournalArchiveAddress", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170034B3 RID: 13491
		// (get) Token: 0x0600A0F7 RID: 41207 RVA: 0x0027B525 File Offset: 0x00279725
		public static LocalizedString ConfirmationMessageTestFederationTrust
		{
			get
			{
				return new LocalizedString("ConfirmationMessageTestFederationTrust", "Ex053404", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170034B4 RID: 13492
		// (get) Token: 0x0600A0F8 RID: 41208 RVA: 0x0027B543 File Offset: 0x00279743
		public static LocalizedString DelegateRoleTypeViewOnlyAdmin
		{
			get
			{
				return new LocalizedString("DelegateRoleTypeViewOnlyAdmin", "ExB6A18C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A0F9 RID: 41209 RVA: 0x0027B564 File Offset: 0x00279764
		public static LocalizedString ServerToContactMustBeInSameDagException(string serverToContact, string expectedDag, string actualDag)
		{
			return new LocalizedString("ServerToContactMustBeInSameDagException", "", false, false, Strings.ResourceManager, new object[]
			{
				serverToContact,
				expectedDag,
				actualDag
			});
		}

		// Token: 0x0600A0FA RID: 41210 RVA: 0x0027B59C File Offset: 0x0027979C
		public static LocalizedString CouldNotFindLocalAdministratorGroup(string server, string user)
		{
			return new LocalizedString("CouldNotFindLocalAdministratorGroup", "ExF741C2", false, true, Strings.ResourceManager, new object[]
			{
				server,
				user
			});
		}

		// Token: 0x0600A0FB RID: 41211 RVA: 0x0027B5D0 File Offset: 0x002797D0
		public static LocalizedString ConfirmationMessageRemoveAddressListRecursively(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveAddressListRecursively", "ExF7B71E", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x170034B5 RID: 13493
		// (get) Token: 0x0600A0FC RID: 41212 RVA: 0x0027B5FF File Offset: 0x002797FF
		public static LocalizedString ServiceNameOab
		{
			get
			{
				return new LocalizedString("ServiceNameOab", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170034B6 RID: 13494
		// (get) Token: 0x0600A0FD RID: 41213 RVA: 0x0027B61D File Offset: 0x0027981D
		public static LocalizedString ScenarioOfflineAddressBook
		{
			get
			{
				return new LocalizedString("ScenarioOfflineAddressBook", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A0FE RID: 41214 RVA: 0x0027B63C File Offset: 0x0027983C
		public static LocalizedString EADCInsufficientRights(string cmdlet)
		{
			return new LocalizedString("EADCInsufficientRights", "", false, false, Strings.ResourceManager, new object[]
			{
				cmdlet
			});
		}

		// Token: 0x0600A0FF RID: 41215 RVA: 0x0027B66C File Offset: 0x0027986C
		public static LocalizedString ErrorNonMatchingLegacyDNs(string sourceMailboxLegDN, string targetMailbox, string parameterName)
		{
			return new LocalizedString("ErrorNonMatchingLegacyDNs", "Ex57056A", false, true, Strings.ResourceManager, new object[]
			{
				sourceMailboxLegDN,
				targetMailbox,
				parameterName
			});
		}

		// Token: 0x0600A100 RID: 41216 RVA: 0x0027B6A4 File Offset: 0x002798A4
		public static LocalizedString FailedBecauseofADTransientException(string error)
		{
			return new LocalizedString("FailedBecauseofADTransientException", "Ex32599A", false, true, Strings.ResourceManager, new object[]
			{
				error
			});
		}

		// Token: 0x0600A101 RID: 41217 RVA: 0x0027B6D4 File Offset: 0x002798D4
		public static LocalizedString ErrorExceededTextScanLimit(int textScanLimits)
		{
			return new LocalizedString("ErrorExceededTextScanLimit", "", false, false, Strings.ResourceManager, new object[]
			{
				textScanLimits
			});
		}

		// Token: 0x0600A102 RID: 41218 RVA: 0x0027B708 File Offset: 0x00279908
		public static LocalizedString CreateVirtualDirectoryMetabaseFailure(string serverName, string metabasePath)
		{
			return new LocalizedString("CreateVirtualDirectoryMetabaseFailure", "Ex87800F", false, true, Strings.ResourceManager, new object[]
			{
				serverName,
				metabasePath
			});
		}

		// Token: 0x0600A103 RID: 41219 RVA: 0x0027B73C File Offset: 0x0027993C
		public static LocalizedString ErrorCertificateNotYetValid(string thumbprint)
		{
			return new LocalizedString("ErrorCertificateNotYetValid", "", false, false, Strings.ResourceManager, new object[]
			{
				thumbprint
			});
		}

		// Token: 0x0600A104 RID: 41220 RVA: 0x0027B76C File Offset: 0x0027996C
		public static LocalizedString NewFederationTrustSuccess(string appId, string appUri)
		{
			return new LocalizedString("NewFederationTrustSuccess", "Ex554429", false, true, Strings.ResourceManager, new object[]
			{
				appId,
				appUri
			});
		}

		// Token: 0x0600A105 RID: 41221 RVA: 0x0027B7A0 File Offset: 0x002799A0
		public static LocalizedString ErrorInvalidRequest(string identity, string validationMessage)
		{
			return new LocalizedString("ErrorInvalidRequest", "Ex46B31F", false, true, Strings.ResourceManager, new object[]
			{
				identity,
				validationMessage
			});
		}

		// Token: 0x0600A106 RID: 41222 RVA: 0x0027B7D4 File Offset: 0x002799D4
		public static LocalizedString AboutToExportCertificateToFile(string Thumbprint, string fileName)
		{
			return new LocalizedString("AboutToExportCertificateToFile", "ExE53687", false, true, Strings.ResourceManager, new object[]
			{
				Thumbprint,
				fileName
			});
		}

		// Token: 0x170034B7 RID: 13495
		// (get) Token: 0x0600A107 RID: 41223 RVA: 0x0027B807 File Offset: 0x00279A07
		public static LocalizedString TestSearchStatus
		{
			get
			{
				return new LocalizedString("TestSearchStatus", "ExDF5C5B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A108 RID: 41224 RVA: 0x0027B828 File Offset: 0x00279A28
		public static LocalizedString IisTasksValidationInvalidVirtualDirectoryCharException(string virtualDirectory, char badChar, int charIndex, char[] invalidChars)
		{
			return new LocalizedString("IisTasksValidationInvalidVirtualDirectoryCharException", "Ex24435B", false, true, Strings.ResourceManager, new object[]
			{
				virtualDirectory,
				badChar,
				charIndex,
				invalidChars
			});
		}

		// Token: 0x170034B8 RID: 13496
		// (get) Token: 0x0600A109 RID: 41225 RVA: 0x0027B86D File Offset: 0x00279A6D
		public static LocalizedString SetupProgressApplicationImpersonationEnabled
		{
			get
			{
				return new LocalizedString("SetupProgressApplicationImpersonationEnabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A10A RID: 41226 RVA: 0x0027B88C File Offset: 0x00279A8C
		public static LocalizedString VerboseCreatingManagementWebServiceVDir(string identity)
		{
			return new LocalizedString("VerboseCreatingManagementWebServiceVDir", "ExFE7321", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x170034B9 RID: 13497
		// (get) Token: 0x0600A10B RID: 41227 RVA: 0x0027B8BB File Offset: 0x00279ABB
		public static LocalizedString SetupProgressStartingIISAdminService
		{
			get
			{
				return new LocalizedString("SetupProgressStartingIISAdminService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170034BA RID: 13498
		// (get) Token: 0x0600A10C RID: 41228 RVA: 0x0027B8D9 File Offset: 0x00279AD9
		public static LocalizedString SetupComponentMidFileCopyFrontendTransport
		{
			get
			{
				return new LocalizedString("SetupComponentMidFileCopyFrontendTransport", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A10D RID: 41229 RVA: 0x0027B8F8 File Offset: 0x00279AF8
		public static LocalizedString DagTaskErrorServerWrongVersion(string serverName)
		{
			return new LocalizedString("DagTaskErrorServerWrongVersion", "", false, false, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		// Token: 0x170034BB RID: 13499
		// (get) Token: 0x0600A10E RID: 41230 RVA: 0x0027B927 File Offset: 0x00279B27
		public static LocalizedString ErrorRoomMailboxPasswordCannotBeSetIfEnableRoomMailboxAccountIsFalse
		{
			get
			{
				return new LocalizedString("ErrorRoomMailboxPasswordCannotBeSetIfEnableRoomMailboxAccountIsFalse", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170034BC RID: 13500
		// (get) Token: 0x0600A10F RID: 41231 RVA: 0x0027B945 File Offset: 0x00279B45
		public static LocalizedString CannotSwitchLinkedInAccount
		{
			get
			{
				return new LocalizedString("CannotSwitchLinkedInAccount", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170034BD RID: 13501
		// (get) Token: 0x0600A110 RID: 41232 RVA: 0x0027B963 File Offset: 0x00279B63
		public static LocalizedString InfoRmsVersionChecked
		{
			get
			{
				return new LocalizedString("InfoRmsVersionChecked", "Ex112D4D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A111 RID: 41233 RVA: 0x0027B984 File Offset: 0x00279B84
		public static LocalizedString TestSearchDeleteFolders(string MDB, string ID, int numFolders)
		{
			return new LocalizedString("TestSearchDeleteFolders", "Ex659CAE", false, true, Strings.ResourceManager, new object[]
			{
				MDB,
				ID,
				numFolders
			});
		}

		// Token: 0x0600A112 RID: 41234 RVA: 0x0027B9C0 File Offset: 0x00279BC0
		public static LocalizedString ErrorPSTFolderPathNotExist(string path)
		{
			return new LocalizedString("ErrorPSTFolderPathNotExist", "ExCFF6B0", false, true, Strings.ResourceManager, new object[]
			{
				path
			});
		}

		// Token: 0x0600A113 RID: 41235 RVA: 0x0027B9F0 File Offset: 0x00279BF0
		public static LocalizedString CasHealthOwaUnsecureAccess(string authMethod)
		{
			return new LocalizedString("CasHealthOwaUnsecureAccess", "ExF29039", false, true, Strings.ResourceManager, new object[]
			{
				authMethod
			});
		}

		// Token: 0x0600A114 RID: 41236 RVA: 0x0027BA20 File Offset: 0x00279C20
		public static LocalizedString FailedToRunServerMonitoringOverride(string server, string failure)
		{
			return new LocalizedString("FailedToRunServerMonitoringOverride", "", false, false, Strings.ResourceManager, new object[]
			{
				server,
				failure
			});
		}

		// Token: 0x170034BE RID: 13502
		// (get) Token: 0x0600A115 RID: 41237 RVA: 0x0027BA53 File Offset: 0x00279C53
		public static LocalizedString LogOnlyOperation
		{
			get
			{
				return new LocalizedString("LogOnlyOperation", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A116 RID: 41238 RVA: 0x0027BA74 File Offset: 0x00279C74
		public static LocalizedString CannotChangeServiceInstanceNameError(string serviceInstanceId)
		{
			return new LocalizedString("CannotChangeServiceInstanceNameError", "", false, false, Strings.ResourceManager, new object[]
			{
				serviceInstanceId
			});
		}

		// Token: 0x0600A117 RID: 41239 RVA: 0x0027BAA4 File Offset: 0x00279CA4
		public static LocalizedString HttpWebRequestFailure(string s)
		{
			return new LocalizedString("HttpWebRequestFailure", "", false, false, Strings.ResourceManager, new object[]
			{
				s
			});
		}

		// Token: 0x0600A118 RID: 41240 RVA: 0x0027BAD4 File Offset: 0x00279CD4
		public static LocalizedString DagTaskNoServersAreStartedException(string dagName)
		{
			return new LocalizedString("DagTaskNoServersAreStartedException", "", false, false, Strings.ResourceManager, new object[]
			{
				dagName
			});
		}

		// Token: 0x0600A119 RID: 41241 RVA: 0x0027BB04 File Offset: 0x00279D04
		public static LocalizedString MtrtMessageFailureReason(string recipientStatus)
		{
			return new LocalizedString("MtrtMessageFailureReason", "", false, false, Strings.ResourceManager, new object[]
			{
				recipientStatus
			});
		}

		// Token: 0x0600A11A RID: 41242 RVA: 0x0027BB34 File Offset: 0x00279D34
		public static LocalizedString ErrorPublicFolderStatisticsNotFound(string folder, string server)
		{
			return new LocalizedString("ErrorPublicFolderStatisticsNotFound", "Ex580B38", false, true, Strings.ResourceManager, new object[]
			{
				folder,
				server
			});
		}

		// Token: 0x0600A11B RID: 41243 RVA: 0x0027BB68 File Offset: 0x00279D68
		public static LocalizedString UnifiedMessagingMailboxPolicyHasProtectUnauthenticatedVoiceMailSetTo(string policyName, DRMProtectionOptions drmProtectionOption)
		{
			return new LocalizedString("UnifiedMessagingMailboxPolicyHasProtectUnauthenticatedVoiceMailSetTo", "", false, false, Strings.ResourceManager, new object[]
			{
				policyName,
				drmProtectionOption
			});
		}

		// Token: 0x0600A11C RID: 41244 RVA: 0x0027BBA0 File Offset: 0x00279DA0
		public static LocalizedString ErrorFailedToReadRecipientForUpdate(string idRecipient, string errorMessage)
		{
			return new LocalizedString("ErrorFailedToReadRecipientForUpdate", "ExA079ED", false, true, Strings.ResourceManager, new object[]
			{
				idRecipient,
				errorMessage
			});
		}

		// Token: 0x170034BF RID: 13503
		// (get) Token: 0x0600A11D RID: 41245 RVA: 0x0027BBD3 File Offset: 0x00279DD3
		public static LocalizedString CasHealthOwaAuthFailExternal
		{
			get
			{
				return new LocalizedString("CasHealthOwaAuthFailExternal", "ExB88F36", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A11E RID: 41246 RVA: 0x0027BBF4 File Offset: 0x00279DF4
		public static LocalizedString ErrorRecipientViewRootDuplicated(string ou)
		{
			return new LocalizedString("ErrorRecipientViewRootDuplicated", "ExCE7EBA", false, true, Strings.ResourceManager, new object[]
			{
				ou
			});
		}

		// Token: 0x0600A11F RID: 41247 RVA: 0x0027BC24 File Offset: 0x00279E24
		public static LocalizedString ErrorTooManyModerators(int maxNum)
		{
			return new LocalizedString("ErrorTooManyModerators", "ExE185E2", false, true, Strings.ResourceManager, new object[]
			{
				maxNum
			});
		}

		// Token: 0x170034C0 RID: 13504
		// (get) Token: 0x0600A120 RID: 41248 RVA: 0x0027BC58 File Offset: 0x00279E58
		public static LocalizedString CertificateStatusDateInvalid
		{
			get
			{
				return new LocalizedString("CertificateStatusDateInvalid", "Ex0CC2A2", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A121 RID: 41249 RVA: 0x0027BC78 File Offset: 0x00279E78
		public static LocalizedString ConfirmationMessageSetAcceptedDomain(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetAcceptedDomain", "ExAB1976", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x0600A122 RID: 41250 RVA: 0x0027BCA8 File Offset: 0x00279EA8
		public static LocalizedString InfoAttributeAceNotPresent(string dn, string attr)
		{
			return new LocalizedString("InfoAttributeAceNotPresent", "Ex5D90C7", false, true, Strings.ResourceManager, new object[]
			{
				dn,
				attr
			});
		}

		// Token: 0x170034C1 RID: 13505
		// (get) Token: 0x0600A123 RID: 41251 RVA: 0x0027BCDB File Offset: 0x00279EDB
		public static LocalizedString MustBeUnpacked
		{
			get
			{
				return new LocalizedString("MustBeUnpacked", "Ex578C15", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A124 RID: 41252 RVA: 0x0027BCFC File Offset: 0x00279EFC
		public static LocalizedString NoDeviceFilterRuleByName(string name)
		{
			return new LocalizedString("NoDeviceFilterRuleByName", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x0600A125 RID: 41253 RVA: 0x0027BD2C File Offset: 0x00279F2C
		public static LocalizedString VerboseApprovalRequestSubmitted(string group, string messageId)
		{
			return new LocalizedString("VerboseApprovalRequestSubmitted", "", false, false, Strings.ResourceManager, new object[]
			{
				group,
				messageId
			});
		}

		// Token: 0x0600A126 RID: 41254 RVA: 0x0027BD60 File Offset: 0x00279F60
		public static LocalizedString LogMigrationRegistryKeyNotExist(string keyPath)
		{
			return new LocalizedString("LogMigrationRegistryKeyNotExist", "Ex00379F", false, true, Strings.ResourceManager, new object[]
			{
				keyPath
			});
		}

		// Token: 0x0600A127 RID: 41255 RVA: 0x0027BD90 File Offset: 0x00279F90
		public static LocalizedString ConfirmationMessageRemovePublicFolder(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemovePublicFolder", "Ex1257C0", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x170034C2 RID: 13506
		// (get) Token: 0x0600A128 RID: 41256 RVA: 0x0027BDBF File Offset: 0x00279FBF
		public static LocalizedString ClientAccessEcpComponentDescription
		{
			get
			{
				return new LocalizedString("ClientAccessEcpComponentDescription", "Ex60817E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A129 RID: 41257 RVA: 0x0027BDE0 File Offset: 0x00279FE0
		public static LocalizedString VerbosePublicFolderAdminsUsgCreationRollingbackFailed(string exception)
		{
			return new LocalizedString("VerbosePublicFolderAdminsUsgCreationRollingbackFailed", "Ex2385B6", false, true, Strings.ResourceManager, new object[]
			{
				exception
			});
		}

		// Token: 0x170034C3 RID: 13507
		// (get) Token: 0x0600A12A RID: 41258 RVA: 0x0027BE0F File Offset: 0x0027A00F
		public static LocalizedString PublishingNotEnabled
		{
			get
			{
				return new LocalizedString("PublishingNotEnabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A12B RID: 41259 RVA: 0x0027BE30 File Offset: 0x0027A030
		public static LocalizedString SearchWorkerError(string mailbox, string message)
		{
			return new LocalizedString("SearchWorkerError", "", false, false, Strings.ResourceManager, new object[]
			{
				mailbox,
				message
			});
		}

		// Token: 0x170034C4 RID: 13508
		// (get) Token: 0x0600A12C RID: 41260 RVA: 0x0027BE63 File Offset: 0x0027A063
		public static LocalizedString EmptyTaskListException
		{
			get
			{
				return new LocalizedString("EmptyTaskListException", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170034C5 RID: 13509
		// (get) Token: 0x0600A12D RID: 41261 RVA: 0x0027BE81 File Offset: 0x0027A081
		public static LocalizedString WarningReplicationLatency
		{
			get
			{
				return new LocalizedString("WarningReplicationLatency", "Ex1BA91F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170034C6 RID: 13510
		// (get) Token: 0x0600A12E RID: 41262 RVA: 0x0027BE9F File Offset: 0x0027A09F
		public static LocalizedString NoWebServicesExternalUrlFoundException
		{
			get
			{
				return new LocalizedString("NoWebServicesExternalUrlFoundException", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170034C7 RID: 13511
		// (get) Token: 0x0600A12F RID: 41263 RVA: 0x0027BEBD File Offset: 0x0027A0BD
		public static LocalizedString MigrationPartitionMailboxAmbiguous
		{
			get
			{
				return new LocalizedString("MigrationPartitionMailboxAmbiguous", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170034C8 RID: 13512
		// (get) Token: 0x0600A130 RID: 41264 RVA: 0x0027BEDB File Offset: 0x0027A0DB
		public static LocalizedString SetupComponentMidFileCopyGateway
		{
			get
			{
				return new LocalizedString("SetupComponentMidFileCopyGateway", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A131 RID: 41265 RVA: 0x0027BEFC File Offset: 0x0027A0FC
		public static LocalizedString InvalidLegacyExchangeDnParameterValue(string parameterName)
		{
			return new LocalizedString("InvalidLegacyExchangeDnParameterValue", "", false, false, Strings.ResourceManager, new object[]
			{
				parameterName
			});
		}

		// Token: 0x0600A132 RID: 41266 RVA: 0x0027BF2C File Offset: 0x0027A12C
		public static LocalizedString ErrorInvalidRoleRenaming(string actualName, string newName)
		{
			return new LocalizedString("ErrorInvalidRoleRenaming", "Ex7F23E8", false, true, Strings.ResourceManager, new object[]
			{
				actualName,
				newName
			});
		}

		// Token: 0x0600A133 RID: 41267 RVA: 0x0027BF60 File Offset: 0x0027A160
		public static LocalizedString BadEncodingParameterException(string value)
		{
			return new LocalizedString("BadEncodingParameterException", "ExF42090", false, true, Strings.ResourceManager, new object[]
			{
				value
			});
		}

		// Token: 0x170034C9 RID: 13513
		// (get) Token: 0x0600A134 RID: 41268 RVA: 0x0027BF8F File Offset: 0x0027A18F
		public static LocalizedString SetupProgressListOpenFiles
		{
			get
			{
				return new LocalizedString("SetupProgressListOpenFiles", "ExE10DC4", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A135 RID: 41269 RVA: 0x0027BFB0 File Offset: 0x0027A1B0
		public static LocalizedString GetOwaAdminTaskInvalidExpressionComponentCharacterException(string value, char badChar)
		{
			return new LocalizedString("GetOwaAdminTaskInvalidExpressionComponentCharacterException", "Ex127BF4", false, true, Strings.ResourceManager, new object[]
			{
				value,
				badChar
			});
		}

		// Token: 0x170034CA RID: 13514
		// (get) Token: 0x0600A136 RID: 41270 RVA: 0x0027BFE8 File Offset: 0x0027A1E8
		public static LocalizedString SupportedToolsContainsInconsistentData
		{
			get
			{
				return new LocalizedString("SupportedToolsContainsInconsistentData", "ExE13FFF", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170034CB RID: 13515
		// (get) Token: 0x0600A137 RID: 41271 RVA: 0x0027C006 File Offset: 0x0027A206
		public static LocalizedString CasHealthOwaGetLogonPageSucceeded
		{
			get
			{
				return new LocalizedString("CasHealthOwaGetLogonPageSucceeded", "Ex003E0F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A138 RID: 41272 RVA: 0x0027C024 File Offset: 0x0027A224
		public static LocalizedString ClassificationRuleCollectionRegexPerformanceValidationFailure(string name, string problem)
		{
			return new LocalizedString("ClassificationRuleCollectionRegexPerformanceValidationFailure", "", false, false, Strings.ResourceManager, new object[]
			{
				name,
				problem
			});
		}

		// Token: 0x0600A139 RID: 41273 RVA: 0x0027C058 File Offset: 0x0027A258
		public static LocalizedString ConfirmationMessageAddIPAllowListProvider(string Name, string LookupDomain)
		{
			return new LocalizedString("ConfirmationMessageAddIPAllowListProvider", "ExE1A875", false, true, Strings.ResourceManager, new object[]
			{
				Name,
				LookupDomain
			});
		}

		// Token: 0x0600A13A RID: 41274 RVA: 0x0027C08C File Offset: 0x0027A28C
		public static LocalizedString ConfirmationMessageSetMailboxDatabaseCopy(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetMailboxDatabaseCopy", "ExA4B4DA", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x0600A13B RID: 41275 RVA: 0x0027C0BC File Offset: 0x0027A2BC
		public static LocalizedString DagTaskErrorTooManyServers(string dagName, int max)
		{
			return new LocalizedString("DagTaskErrorTooManyServers", "", false, false, Strings.ResourceManager, new object[]
			{
				dagName,
				max
			});
		}

		// Token: 0x170034CC RID: 13516
		// (get) Token: 0x0600A13C RID: 41276 RVA: 0x0027C0F4 File Offset: 0x0027A2F4
		public static LocalizedString SupportedToolsUnableToGetToolData
		{
			get
			{
				return new LocalizedString("SupportedToolsUnableToGetToolData", "ExFE12C2", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A13D RID: 41277 RVA: 0x0027C114 File Offset: 0x0027A314
		public static LocalizedString TotalFolderCount(string folderPath)
		{
			return new LocalizedString("TotalFolderCount", "", false, false, Strings.ResourceManager, new object[]
			{
				folderPath
			});
		}

		// Token: 0x170034CD RID: 13517
		// (get) Token: 0x0600A13E RID: 41278 RVA: 0x0027C143 File Offset: 0x0027A343
		public static LocalizedString ProgressStatusFailed
		{
			get
			{
				return new LocalizedString("ProgressStatusFailed", "Ex808E10", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A13F RID: 41279 RVA: 0x0027C164 File Offset: 0x0027A364
		public static LocalizedString ErrorOrgStillUsingThisMailFlowPartner(string trust, string org)
		{
			return new LocalizedString("ErrorOrgStillUsingThisMailFlowPartner", "Ex61731B", false, true, Strings.ResourceManager, new object[]
			{
				trust,
				org
			});
		}

		// Token: 0x0600A140 RID: 41280 RVA: 0x0027C198 File Offset: 0x0027A398
		public static LocalizedString PopImapErrorIOTimeout(int seconds)
		{
			return new LocalizedString("PopImapErrorIOTimeout", "ExEDE17A", false, true, Strings.ResourceManager, new object[]
			{
				seconds
			});
		}

		// Token: 0x0600A141 RID: 41281 RVA: 0x0027C1CC File Offset: 0x0027A3CC
		public static LocalizedString ErrorCredentialNotSupportedForEndpointType(string endpointType)
		{
			return new LocalizedString("ErrorCredentialNotSupportedForEndpointType", "", false, false, Strings.ResourceManager, new object[]
			{
				endpointType
			});
		}

		// Token: 0x170034CE RID: 13518
		// (get) Token: 0x0600A142 RID: 41282 RVA: 0x0027C1FB File Offset: 0x0027A3FB
		public static LocalizedString AvailabilityAddressSpaceInvalidTargetAutodiscoverEpr
		{
			get
			{
				return new LocalizedString("AvailabilityAddressSpaceInvalidTargetAutodiscoverEpr", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170034CF RID: 13519
		// (get) Token: 0x0600A143 RID: 41283 RVA: 0x0027C219 File Offset: 0x0027A419
		public static LocalizedString ErrorStartAfterEarlierThanCompleteAfter
		{
			get
			{
				return new LocalizedString("ErrorStartAfterEarlierThanCompleteAfter", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A144 RID: 41284 RVA: 0x0027C238 File Offset: 0x0027A438
		public static LocalizedString LogLocationError(string registryPath, string registryValue)
		{
			return new LocalizedString("LogLocationError", "Ex43E9AA", false, true, Strings.ResourceManager, new object[]
			{
				registryPath,
				registryValue
			});
		}

		// Token: 0x0600A145 RID: 41285 RVA: 0x0027C26C File Offset: 0x0027A46C
		public static LocalizedString ClassificationRuleCollectionInvalidLangCodesInRuleDescription(string resourceIdRef, string invalidLangCodes)
		{
			return new LocalizedString("ClassificationRuleCollectionInvalidLangCodesInRuleDescription", "", false, false, Strings.ResourceManager, new object[]
			{
				resourceIdRef,
				invalidLangCodes
			});
		}

		// Token: 0x0600A146 RID: 41286 RVA: 0x0027C2A0 File Offset: 0x0027A4A0
		public static LocalizedString TenantNotificationBody(string organizationName, string timeStamp, string eventMessage, string helpUrl)
		{
			return new LocalizedString("TenantNotificationBody", "Ex6D7FF9", false, true, Strings.ResourceManager, new object[]
			{
				organizationName,
				timeStamp,
				eventMessage,
				helpUrl
			});
		}

		// Token: 0x170034D0 RID: 13520
		// (get) Token: 0x0600A147 RID: 41287 RVA: 0x0027C2DB File Offset: 0x0027A4DB
		public static LocalizedString ProvisioningRequestCannotBeCanceled
		{
			get
			{
				return new LocalizedString("ProvisioningRequestCannotBeCanceled", "Ex7BBCC4", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170034D1 RID: 13521
		// (get) Token: 0x0600A148 RID: 41288 RVA: 0x0027C2F9 File Offset: 0x0027A4F9
		public static LocalizedString ErrorModifyE14DatabaseNotAllowed
		{
			get
			{
				return new LocalizedString("ErrorModifyE14DatabaseNotAllowed", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170034D2 RID: 13522
		// (get) Token: 0x0600A149 RID: 41289 RVA: 0x0027C317 File Offset: 0x0027A517
		public static LocalizedString CasHealthOwaGetAuthEmptyPage
		{
			get
			{
				return new LocalizedString("CasHealthOwaGetAuthEmptyPage", "Ex7758EB", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A14A RID: 41290 RVA: 0x0027C338 File Offset: 0x0027A538
		public static LocalizedString ErrorMailboxDatabaseNotOnCurrentCmdletVersion(string database, string serverVersion, string cmdletVersion)
		{
			return new LocalizedString("ErrorMailboxDatabaseNotOnCurrentCmdletVersion", "", false, false, Strings.ResourceManager, new object[]
			{
				database,
				serverVersion,
				cmdletVersion
			});
		}

		// Token: 0x0600A14B RID: 41291 RVA: 0x0027C370 File Offset: 0x0027A570
		public static LocalizedString DagTaskServerIPAddressSameAsStaticIPAddress(string serverName, string conflict, string dag)
		{
			return new LocalizedString("DagTaskServerIPAddressSameAsStaticIPAddress", "", false, false, Strings.ResourceManager, new object[]
			{
				serverName,
				conflict,
				dag
			});
		}

		// Token: 0x0600A14C RID: 41292 RVA: 0x0027C3A8 File Offset: 0x0027A5A8
		public static LocalizedString DagTaskCheckingClusterNodesForDagMembership(string clusterName)
		{
			return new LocalizedString("DagTaskCheckingClusterNodesForDagMembership", "", false, false, Strings.ResourceManager, new object[]
			{
				clusterName
			});
		}

		// Token: 0x0600A14D RID: 41293 RVA: 0x0027C3D8 File Offset: 0x0027A5D8
		public static LocalizedString ErrorInvalidRemoveOperationOnDBCopyForCircularLoggingEnabledDB(string pfdb)
		{
			return new LocalizedString("ErrorInvalidRemoveOperationOnDBCopyForCircularLoggingEnabledDB", "Ex35C75F", false, true, Strings.ResourceManager, new object[]
			{
				pfdb
			});
		}

		// Token: 0x0600A14E RID: 41294 RVA: 0x0027C408 File Offset: 0x0027A608
		public static LocalizedString CompletedWithWarningMoveHistoryEntry(string completionTimestamp, string dbName, string mailboxSize, string moveDuration, string warning)
		{
			return new LocalizedString("CompletedWithWarningMoveHistoryEntry", "ExA6E095", false, true, Strings.ResourceManager, new object[]
			{
				completionTimestamp,
				dbName,
				mailboxSize,
				moveDuration,
				warning
			});
		}

		// Token: 0x0600A14F RID: 41295 RVA: 0x0027C448 File Offset: 0x0027A648
		public static LocalizedString ConfirmationMessageAddADPermissionOwner(string Identity, string Owner)
		{
			return new LocalizedString("ConfirmationMessageAddADPermissionOwner", "ExA740C5", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				Owner
			});
		}

		// Token: 0x170034D3 RID: 13523
		// (get) Token: 0x0600A150 RID: 41296 RVA: 0x0027C47B File Offset: 0x0027A67B
		public static LocalizedString FDServiceDescription
		{
			get
			{
				return new LocalizedString("FDServiceDescription", "Ex2E1119", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170034D4 RID: 13524
		// (get) Token: 0x0600A151 RID: 41297 RVA: 0x0027C499 File Offset: 0x0027A699
		public static LocalizedString InvalidDeliveryStatus
		{
			get
			{
				return new LocalizedString("InvalidDeliveryStatus", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A152 RID: 41298 RVA: 0x0027C4B8 File Offset: 0x0027A6B8
		public static LocalizedString InvalidIdentityTypeForClearCmdletException(string identity)
		{
			return new LocalizedString("InvalidIdentityTypeForClearCmdletException", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x0600A153 RID: 41299 RVA: 0x0027C4E8 File Offset: 0x0027A6E8
		public static LocalizedString ConfirmationMessageRemovePswsVirtualDirectory(string name, string server)
		{
			return new LocalizedString("ConfirmationMessageRemovePswsVirtualDirectory", "", false, false, Strings.ResourceManager, new object[]
			{
				name,
				server
			});
		}

		// Token: 0x0600A154 RID: 41300 RVA: 0x0027C51C File Offset: 0x0027A71C
		public static LocalizedString ActiveSyncPolicyApplicationListTooLong(int listLimit, int memberLimit)
		{
			return new LocalizedString("ActiveSyncPolicyApplicationListTooLong", "", false, false, Strings.ResourceManager, new object[]
			{
				listLimit,
				memberLimit
			});
		}

		// Token: 0x0600A155 RID: 41301 RVA: 0x0027C55C File Offset: 0x0027A75C
		public static LocalizedString ErrorCannotRetargetToDifferentVersionArchiveServerThanOriginal(string newServerVersion, string oldServerVersion)
		{
			return new LocalizedString("ErrorCannotRetargetToDifferentVersionArchiveServerThanOriginal", "", false, false, Strings.ResourceManager, new object[]
			{
				newServerVersion,
				oldServerVersion
			});
		}

		// Token: 0x170034D5 RID: 13525
		// (get) Token: 0x0600A156 RID: 41302 RVA: 0x0027C58F File Offset: 0x0027A78F
		public static LocalizedString ErrorCannotSetLegacyArchiveJournalingEnabled
		{
			get
			{
				return new LocalizedString("ErrorCannotSetLegacyArchiveJournalingEnabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A157 RID: 41303 RVA: 0x0027C5B0 File Offset: 0x0027A7B0
		public static LocalizedString CannotLoadScript(string fileName, string exception)
		{
			return new LocalizedString("CannotLoadScript", "Ex86BE94", false, true, Strings.ResourceManager, new object[]
			{
				fileName,
				exception
			});
		}

		// Token: 0x170034D6 RID: 13526
		// (get) Token: 0x0600A158 RID: 41304 RVA: 0x0027C5E3 File Offset: 0x0027A7E3
		public static LocalizedString WarningJournalArchiveMailboxHasNoMailUser
		{
			get
			{
				return new LocalizedString("WarningJournalArchiveMailboxHasNoMailUser", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A159 RID: 41305 RVA: 0x0027C604 File Offset: 0x0027A804
		public static LocalizedString TestSearchMailboxNotArchived(string mailbox)
		{
			return new LocalizedString("TestSearchMailboxNotArchived", "Ex704A79", false, true, Strings.ResourceManager, new object[]
			{
				mailbox
			});
		}

		// Token: 0x0600A15A RID: 41306 RVA: 0x0027C634 File Offset: 0x0027A834
		public static LocalizedString CurrentRoles(string roles)
		{
			return new LocalizedString("CurrentRoles", "ExFE4B3A", false, true, Strings.ResourceManager, new object[]
			{
				roles
			});
		}

		// Token: 0x170034D7 RID: 13527
		// (get) Token: 0x0600A15B RID: 41307 RVA: 0x0027C663 File Offset: 0x0027A863
		public static LocalizedString CasHealthConfirmTestActiveSyncUsingAutodiscovery
		{
			get
			{
				return new LocalizedString("CasHealthConfirmTestActiveSyncUsingAutodiscovery", "Ex026420", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A15C RID: 41308 RVA: 0x0027C684 File Offset: 0x0027A884
		public static LocalizedString DisableMailboxQuarantineWarningMessage(string mailbox)
		{
			return new LocalizedString("DisableMailboxQuarantineWarningMessage", "", false, false, Strings.ResourceManager, new object[]
			{
				mailbox
			});
		}

		// Token: 0x0600A15D RID: 41309 RVA: 0x0027C6B4 File Offset: 0x0027A8B4
		public static LocalizedString CasHealthOwaAuthTypesSupported3(string method1, string method2, string method3)
		{
			return new LocalizedString("CasHealthOwaAuthTypesSupported3", "Ex6DD5A5", false, true, Strings.ResourceManager, new object[]
			{
				method1,
				method2,
				method3
			});
		}

		// Token: 0x0600A15E RID: 41310 RVA: 0x0027C6EC File Offset: 0x0027A8EC
		public static LocalizedString ExtractingLang(string lang)
		{
			return new LocalizedString("ExtractingLang", "ExA365D3", false, true, Strings.ResourceManager, new object[]
			{
				lang
			});
		}

		// Token: 0x170034D8 RID: 13528
		// (get) Token: 0x0600A15F RID: 41311 RVA: 0x0027C71B File Offset: 0x0027A91B
		public static LocalizedString InfoCheckingRmsOnlinePrerequisites
		{
			get
			{
				return new LocalizedString("InfoCheckingRmsOnlinePrerequisites", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170034D9 RID: 13529
		// (get) Token: 0x0600A160 RID: 41312 RVA: 0x0027C739 File Offset: 0x0027A939
		public static LocalizedString ErrorChangePasswordRequiresOldPasswordNewPassword
		{
			get
			{
				return new LocalizedString("ErrorChangePasswordRequiresOldPasswordNewPassword", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A161 RID: 41313 RVA: 0x0027C758 File Offset: 0x0027A958
		public static LocalizedString InterceptorErrorInvalidEventConditionPair(string evt, string condition, string validConditions)
		{
			return new LocalizedString("InterceptorErrorInvalidEventConditionPair", "", false, false, Strings.ResourceManager, new object[]
			{
				evt,
				condition,
				validConditions
			});
		}

		// Token: 0x170034DA RID: 13530
		// (get) Token: 0x0600A162 RID: 41314 RVA: 0x0027C78F File Offset: 0x0027A98F
		public static LocalizedString SetupProgressDisableWMIAsync
		{
			get
			{
				return new LocalizedString("SetupProgressDisableWMIAsync", "Ex9F1113", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A163 RID: 41315 RVA: 0x0027C7B0 File Offset: 0x0027A9B0
		public static LocalizedString ConstraintFallback(DataMoveReplicationConstraintParameter desired, DataMoveReplicationConstraintParameter suggested, string database)
		{
			return new LocalizedString("ConstraintFallback", "Ex825CA4", false, true, Strings.ResourceManager, new object[]
			{
				desired,
				suggested,
				database
			});
		}

		// Token: 0x0600A164 RID: 41316 RVA: 0x0027C7F4 File Offset: 0x0027A9F4
		public static LocalizedString RpsFileCreated(string sourceFilename, string targetFilename)
		{
			return new LocalizedString("RpsFileCreated", "", false, false, Strings.ResourceManager, new object[]
			{
				sourceFilename,
				targetFilename
			});
		}

		// Token: 0x0600A165 RID: 41317 RVA: 0x0027C828 File Offset: 0x0027AA28
		public static LocalizedString ConfirmationMessageSetReceiveConnector(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetReceiveConnector", "Ex24A021", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x170034DB RID: 13531
		// (get) Token: 0x0600A166 RID: 41318 RVA: 0x0027C857 File Offset: 0x0027AA57
		public static LocalizedString CannotRemoveInternalTransportCertificate
		{
			get
			{
				return new LocalizedString("CannotRemoveInternalTransportCertificate", "Ex6F8153", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A167 RID: 41319 RVA: 0x0027C878 File Offset: 0x0027AA78
		public static LocalizedString ErrorArbitrationMailboxDatabase(string server)
		{
			return new LocalizedString("ErrorArbitrationMailboxDatabase", "Ex7D8853", false, true, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		// Token: 0x0600A168 RID: 41320 RVA: 0x0027C8A8 File Offset: 0x0027AAA8
		public static LocalizedString VerboseMountDatabaseForcely(string id)
		{
			return new LocalizedString("VerboseMountDatabaseForcely", "Ex8D0C54", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x0600A169 RID: 41321 RVA: 0x0027C8D8 File Offset: 0x0027AAD8
		public static LocalizedString VerboseRemoveWSManConfigSection(string file)
		{
			return new LocalizedString("VerboseRemoveWSManConfigSection", "ExC2FBE2", false, true, Strings.ResourceManager, new object[]
			{
				file
			});
		}

		// Token: 0x0600A16A RID: 41322 RVA: 0x0027C908 File Offset: 0x0027AB08
		public static LocalizedString CasHealthWebAppAuthenticationVerificationError(LocalizedString applicationLongName)
		{
			return new LocalizedString("CasHealthWebAppAuthenticationVerificationError", "ExD7DE05", false, true, Strings.ResourceManager, new object[]
			{
				applicationLongName
			});
		}

		// Token: 0x170034DC RID: 13532
		// (get) Token: 0x0600A16B RID: 41323 RVA: 0x0027C93C File Offset: 0x0027AB3C
		public static LocalizedString ErrorFailedToGetPreL
		{
			get
			{
				return new LocalizedString("ErrorFailedToGetPreL", "ExFAF1BC", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170034DD RID: 13533
		// (get) Token: 0x0600A16C RID: 41324 RVA: 0x0027C95A File Offset: 0x0027AB5A
		public static LocalizedString ErrorPartnerApplicationUseAuthServerCannotSetUrl
		{
			get
			{
				return new LocalizedString("ErrorPartnerApplicationUseAuthServerCannotSetUrl", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170034DE RID: 13534
		// (get) Token: 0x0600A16D RID: 41325 RVA: 0x0027C978 File Offset: 0x0027AB78
		public static LocalizedString CopyAndDeleteOperation
		{
			get
			{
				return new LocalizedString("CopyAndDeleteOperation", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170034DF RID: 13535
		// (get) Token: 0x0600A16E RID: 41326 RVA: 0x0027C996 File Offset: 0x0027AB96
		public static LocalizedString CompleteMigrationBatchNotSupported
		{
			get
			{
				return new LocalizedString("CompleteMigrationBatchNotSupported", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170034E0 RID: 13536
		// (get) Token: 0x0600A16F RID: 41327 RVA: 0x0027C9B4 File Offset: 0x0027ABB4
		public static LocalizedString StartPreSetupDescription
		{
			get
			{
				return new LocalizedString("StartPreSetupDescription", "Ex84820C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A170 RID: 41328 RVA: 0x0027C9D4 File Offset: 0x0027ABD4
		public static LocalizedString InsufficientEmailsForAutoTagging(int requiredTrainingCount)
		{
			return new LocalizedString("InsufficientEmailsForAutoTagging", "ExAAD72D", false, true, Strings.ResourceManager, new object[]
			{
				requiredTrainingCount
			});
		}

		// Token: 0x170034E1 RID: 13537
		// (get) Token: 0x0600A171 RID: 41329 RVA: 0x0027CA08 File Offset: 0x0027AC08
		public static LocalizedString MtrtEventTransportRule
		{
			get
			{
				return new LocalizedString("MtrtEventTransportRule", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170034E2 RID: 13538
		// (get) Token: 0x0600A172 RID: 41330 RVA: 0x0027CA26 File Offset: 0x0027AC26
		public static LocalizedString PopGettingMessageIDs
		{
			get
			{
				return new LocalizedString("PopGettingMessageIDs", "Ex6CFD11", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170034E3 RID: 13539
		// (get) Token: 0x0600A173 RID: 41331 RVA: 0x0027CA44 File Offset: 0x0027AC44
		public static LocalizedString SetupProgressCreateTransportRuleCollection
		{
			get
			{
				return new LocalizedString("SetupProgressCreateTransportRuleCollection", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A174 RID: 41332 RVA: 0x0027CA64 File Offset: 0x0027AC64
		public static LocalizedString ErrorChangeWindowsLiveID(string recipinet)
		{
			return new LocalizedString("ErrorChangeWindowsLiveID", "Ex47708A", false, true, Strings.ResourceManager, new object[]
			{
				recipinet
			});
		}

		// Token: 0x170034E4 RID: 13540
		// (get) Token: 0x0600A175 RID: 41333 RVA: 0x0027CA93 File Offset: 0x0027AC93
		public static LocalizedString AgentLogInvalidTimeRange
		{
			get
			{
				return new LocalizedString("AgentLogInvalidTimeRange", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A176 RID: 41334 RVA: 0x0027CAB4 File Offset: 0x0027ACB4
		public static LocalizedString DlpPolicyMissingLocaleAttribute(string elementName, string elementValue)
		{
			return new LocalizedString("DlpPolicyMissingLocaleAttribute", "", false, false, Strings.ResourceManager, new object[]
			{
				elementName,
				elementValue
			});
		}

		// Token: 0x0600A177 RID: 41335 RVA: 0x0027CAE8 File Offset: 0x0027ACE8
		public static LocalizedString DagTaskComputerAccountExistsAndIsEnabledException(string cnoName)
		{
			return new LocalizedString("DagTaskComputerAccountExistsAndIsEnabledException", "", false, false, Strings.ResourceManager, new object[]
			{
				cnoName
			});
		}

		// Token: 0x0600A178 RID: 41336 RVA: 0x0027CB18 File Offset: 0x0027AD18
		public static LocalizedString VerboseNoAssociatedUserMailboxOrMoveRequestOnDatabaseCondition(string id)
		{
			return new LocalizedString("VerboseNoAssociatedUserMailboxOrMoveRequestOnDatabaseCondition", "", false, false, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x170034E5 RID: 13541
		// (get) Token: 0x0600A179 RID: 41337 RVA: 0x0027CB47 File Offset: 0x0027AD47
		public static LocalizedString ErrorAgentPriorityCannotBeChanged
		{
			get
			{
				return new LocalizedString("ErrorAgentPriorityCannotBeChanged", "Ex0C3021", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A17A RID: 41338 RVA: 0x0027CB68 File Offset: 0x0027AD68
		public static LocalizedString MsiProductCode(Guid productCode)
		{
			return new LocalizedString("MsiProductCode", "ExB406A8", false, true, Strings.ResourceManager, new object[]
			{
				productCode
			});
		}

		// Token: 0x170034E6 RID: 13542
		// (get) Token: 0x0600A17B RID: 41339 RVA: 0x0027CB9C File Offset: 0x0027AD9C
		public static LocalizedString CasHealthCalendarScenarioTestView
		{
			get
			{
				return new LocalizedString("CasHealthCalendarScenarioTestView", "ExEC911A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A17C RID: 41340 RVA: 0x0027CBBC File Offset: 0x0027ADBC
		public static LocalizedString ErrorOrganizationalUnitNotUnique(string idStringValue)
		{
			return new LocalizedString("ErrorOrganizationalUnitNotUnique", "Ex7FDA52", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		// Token: 0x0600A17D RID: 41341 RVA: 0x0027CBEC File Offset: 0x0027ADEC
		public static LocalizedString ProgressMoveDatabasePath(string idDatabase)
		{
			return new LocalizedString("ProgressMoveDatabasePath", "ExD3A53A", false, true, Strings.ResourceManager, new object[]
			{
				idDatabase
			});
		}

		// Token: 0x0600A17E RID: 41342 RVA: 0x0027CC1C File Offset: 0x0027AE1C
		public static LocalizedString InvalidPKConfigFormat(string file)
		{
			return new LocalizedString("InvalidPKConfigFormat", "Ex0BCE29", false, true, Strings.ResourceManager, new object[]
			{
				file
			});
		}

		// Token: 0x170034E7 RID: 13543
		// (get) Token: 0x0600A17F RID: 41343 RVA: 0x0027CC4B File Offset: 0x0027AE4B
		public static LocalizedString SetupComponentPostSetupMailbox
		{
			get
			{
				return new LocalizedString("SetupComponentPostSetupMailbox", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170034E8 RID: 13544
		// (get) Token: 0x0600A180 RID: 41344 RVA: 0x0027CC69 File Offset: 0x0027AE69
		public static LocalizedString CopyStatusDismounting
		{
			get
			{
				return new LocalizedString("CopyStatusDismounting", "Ex6469DB", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170034E9 RID: 13545
		// (get) Token: 0x0600A181 RID: 41345 RVA: 0x0027CC87 File Offset: 0x0027AE87
		public static LocalizedString ProgressActivityUpdateRecipient
		{
			get
			{
				return new LocalizedString("ProgressActivityUpdateRecipient", "Ex6564DF", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A182 RID: 41346 RVA: 0x0027CCA8 File Offset: 0x0027AEA8
		public static LocalizedString BadFastMessageRetrievalParameterException(string value)
		{
			return new LocalizedString("BadFastMessageRetrievalParameterException", "Ex20C210", false, true, Strings.ResourceManager, new object[]
			{
				value
			});
		}

		// Token: 0x170034EA RID: 13546
		// (get) Token: 0x0600A183 RID: 41347 RVA: 0x0027CCD7 File Offset: 0x0027AED7
		public static LocalizedString ParameterErrorForInternalUsage
		{
			get
			{
				return new LocalizedString("ParameterErrorForInternalUsage", "ExB62EA4", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A184 RID: 41348 RVA: 0x0027CCF8 File Offset: 0x0027AEF8
		public static LocalizedString ErrorTeamMailboxUserTypeUnqualified(string users)
		{
			return new LocalizedString("ErrorTeamMailboxUserTypeUnqualified", "", false, false, Strings.ResourceManager, new object[]
			{
				users
			});
		}

		// Token: 0x170034EB RID: 13547
		// (get) Token: 0x0600A185 RID: 41349 RVA: 0x0027CD27 File Offset: 0x0027AF27
		public static LocalizedString ErrorCannotEnableJournalArchive
		{
			get
			{
				return new LocalizedString("ErrorCannotEnableJournalArchive", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A186 RID: 41350 RVA: 0x0027CD48 File Offset: 0x0027AF48
		public static LocalizedString ConfirmationDisablingPartitionFromProvisioning(string partitionName)
		{
			return new LocalizedString("ConfirmationDisablingPartitionFromProvisioning", "", false, false, Strings.ResourceManager, new object[]
			{
				partitionName
			});
		}

		// Token: 0x0600A187 RID: 41351 RVA: 0x0027CD78 File Offset: 0x0027AF78
		public static LocalizedString ConfirmationMessageRemoveRemoteAccountPolicy(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveRemoteAccountPolicy", "Ex60377F", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x0600A188 RID: 41352 RVA: 0x0027CDA8 File Offset: 0x0027AFA8
		public static LocalizedString InterceptorErrorConditionInvalidRegex(string value, ArgumentException error)
		{
			return new LocalizedString("InterceptorErrorConditionInvalidRegex", "", false, false, Strings.ResourceManager, new object[]
			{
				value,
				error
			});
		}

		// Token: 0x0600A189 RID: 41353 RVA: 0x0027CDDC File Offset: 0x0027AFDC
		public static LocalizedString SiteIdMustBePositive(uint siteId)
		{
			return new LocalizedString("SiteIdMustBePositive", "Ex721033", false, true, Strings.ResourceManager, new object[]
			{
				siteId
			});
		}

		// Token: 0x0600A18A RID: 41354 RVA: 0x0027CE10 File Offset: 0x0027B010
		public static LocalizedString SuspendSgcOnHostServer(string sg, string server)
		{
			return new LocalizedString("SuspendSgcOnHostServer", "Ex73E16F", false, true, Strings.ResourceManager, new object[]
			{
				sg,
				server
			});
		}

		// Token: 0x0600A18B RID: 41355 RVA: 0x0027CE44 File Offset: 0x0027B044
		public static LocalizedString RequestQueueIdentified(string databaseName)
		{
			return new LocalizedString("RequestQueueIdentified", "", false, false, Strings.ResourceManager, new object[]
			{
				databaseName
			});
		}

		// Token: 0x0600A18C RID: 41356 RVA: 0x0027CE74 File Offset: 0x0027B074
		public static LocalizedString ConfirmationMessageRemoveHostedConnectionFilterRule(string identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveHostedConnectionFilterRule", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x0600A18D RID: 41357 RVA: 0x0027CEA4 File Offset: 0x0027B0A4
		public static LocalizedString ErrorSourceArchiveMailboxDoesNotExist(string user)
		{
			return new LocalizedString("ErrorSourceArchiveMailboxDoesNotExist", "ExAEA7B7", false, true, Strings.ResourceManager, new object[]
			{
				user
			});
		}

		// Token: 0x170034EC RID: 13548
		// (get) Token: 0x0600A18E RID: 41358 RVA: 0x0027CED3 File Offset: 0x0027B0D3
		public static LocalizedString ErrorBPAMergeFileNotFound
		{
			get
			{
				return new LocalizedString("ErrorBPAMergeFileNotFound", "Ex3138A9", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A18F RID: 41359 RVA: 0x0027CEF4 File Offset: 0x0027B0F4
		public static LocalizedString CopyingOABFiles(string oab, string server)
		{
			return new LocalizedString("CopyingOABFiles", "ExDAA5E3", false, true, Strings.ResourceManager, new object[]
			{
				oab,
				server
			});
		}

		// Token: 0x0600A190 RID: 41360 RVA: 0x0027CF28 File Offset: 0x0027B128
		public static LocalizedString ErrorMailPublicFolderNotFoundInDirectory(string identity)
		{
			return new LocalizedString("ErrorMailPublicFolderNotFoundInDirectory", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x0600A191 RID: 41361 RVA: 0x0027CF58 File Offset: 0x0027B158
		public static LocalizedString AgentLogInvalidSmtpResponse(int line, string filename)
		{
			return new LocalizedString("AgentLogInvalidSmtpResponse", "", false, false, Strings.ResourceManager, new object[]
			{
				line,
				filename
			});
		}

		// Token: 0x170034ED RID: 13549
		// (get) Token: 0x0600A192 RID: 41362 RVA: 0x0027CF90 File Offset: 0x0027B190
		public static LocalizedString SclValue
		{
			get
			{
				return new LocalizedString("SclValue", "ExC1AB6A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A193 RID: 41363 RVA: 0x0027CFB0 File Offset: 0x0027B1B0
		public static LocalizedString TestSearchGetServerFromActiveManager(string MDB)
		{
			return new LocalizedString("TestSearchGetServerFromActiveManager", "Ex02B6D0", false, true, Strings.ResourceManager, new object[]
			{
				MDB
			});
		}

		// Token: 0x0600A194 RID: 41364 RVA: 0x0027CFE0 File Offset: 0x0027B1E0
		public static LocalizedString InfoError(LocalizedString message)
		{
			return new LocalizedString("InfoError", "Ex17782D", false, true, Strings.ResourceManager, new object[]
			{
				message
			});
		}

		// Token: 0x0600A195 RID: 41365 RVA: 0x0027D014 File Offset: 0x0027B214
		public static LocalizedString FormsAuthenticationMarkPathCannotMarkSecureAttributeException(string metabasePath, int propertyID)
		{
			return new LocalizedString("FormsAuthenticationMarkPathCannotMarkSecureAttributeException", "ExE4BBA5", false, true, Strings.ResourceManager, new object[]
			{
				metabasePath,
				propertyID
			});
		}

		// Token: 0x0600A196 RID: 41366 RVA: 0x0027D04C File Offset: 0x0027B24C
		public static LocalizedString ServerMustBeInDagException(string serverName)
		{
			return new LocalizedString("ServerMustBeInDagException", "", false, false, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		// Token: 0x0600A197 RID: 41367 RVA: 0x0027D07C File Offset: 0x0027B27C
		public static LocalizedString MailboxFolderStatisticsException(string mailbox, string failure)
		{
			return new LocalizedString("MailboxFolderStatisticsException", "Ex3F6FA7", false, true, Strings.ResourceManager, new object[]
			{
				mailbox,
				failure
			});
		}

		// Token: 0x170034EE RID: 13550
		// (get) Token: 0x0600A198 RID: 41368 RVA: 0x0027D0AF File Offset: 0x0027B2AF
		public static LocalizedString PerfCounterDefinitionFileNameDescription
		{
			get
			{
				return new LocalizedString("PerfCounterDefinitionFileNameDescription", "Ex46EB93", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A199 RID: 41369 RVA: 0x0027D0D0 File Offset: 0x0027B2D0
		public static LocalizedString ErrorUnmanagedMemberExists(string memberName)
		{
			return new LocalizedString("ErrorUnmanagedMemberExists", "ExC33124", false, true, Strings.ResourceManager, new object[]
			{
				memberName
			});
		}

		// Token: 0x0600A19A RID: 41370 RVA: 0x0027D100 File Offset: 0x0027B300
		public static LocalizedString ErrorUnmanagedMemberNotExists(string memberName)
		{
			return new LocalizedString("ErrorUnmanagedMemberNotExists", "ExC9E083", false, true, Strings.ResourceManager, new object[]
			{
				memberName
			});
		}

		// Token: 0x170034EF RID: 13551
		// (get) Token: 0x0600A19B RID: 41371 RVA: 0x0027D12F File Offset: 0x0027B32F
		public static LocalizedString HubParameterNotValidOnEdgeRole
		{
			get
			{
				return new LocalizedString("HubParameterNotValidOnEdgeRole", "Ex462A97", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A19C RID: 41372 RVA: 0x0027D150 File Offset: 0x0027B350
		public static LocalizedString ErrorUnsupportedBlockLanguage(string code)
		{
			return new LocalizedString("ErrorUnsupportedBlockLanguage", "", false, false, Strings.ResourceManager, new object[]
			{
				code
			});
		}

		// Token: 0x170034F0 RID: 13552
		// (get) Token: 0x0600A19D RID: 41373 RVA: 0x0027D17F File Offset: 0x0027B37F
		public static LocalizedString NewDagClusteringInstalledLaterRunningChecksLaterVerbose
		{
			get
			{
				return new LocalizedString("NewDagClusteringInstalledLaterRunningChecksLaterVerbose", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A19E RID: 41374 RVA: 0x0027D1A0 File Offset: 0x0027B3A0
		public static LocalizedString ConfirmationMessageRemoveMailboxPermanentAndNotLiveId(string Identity, string LiveId)
		{
			return new LocalizedString("ConfirmationMessageRemoveMailboxPermanentAndNotLiveId", "ExC7E272", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				LiveId
			});
		}

		// Token: 0x0600A19F RID: 41375 RVA: 0x0027D1D4 File Offset: 0x0027B3D4
		public static LocalizedString TenantNotificationSubject(string eventCategory, int eventId)
		{
			return new LocalizedString("TenantNotificationSubject", "Ex8425FE", false, true, Strings.ResourceManager, new object[]
			{
				eventCategory,
				eventId
			});
		}

		// Token: 0x0600A1A0 RID: 41376 RVA: 0x0027D20C File Offset: 0x0027B40C
		public static LocalizedString ErrorLiveIdDomainNameInvalid(string message)
		{
			return new LocalizedString("ErrorLiveIdDomainNameInvalid", "ExDF1C2D", false, true, Strings.ResourceManager, new object[]
			{
				message
			});
		}

		// Token: 0x0600A1A1 RID: 41377 RVA: 0x0027D23C File Offset: 0x0027B43C
		public static LocalizedString VerboseSettingPreferredServerForDomain(string dom, string server)
		{
			return new LocalizedString("VerboseSettingPreferredServerForDomain", "ExED71AC", false, true, Strings.ResourceManager, new object[]
			{
				dom,
				server
			});
		}

		// Token: 0x170034F1 RID: 13553
		// (get) Token: 0x0600A1A2 RID: 41378 RVA: 0x0027D26F File Offset: 0x0027B46F
		public static LocalizedString CannotRemoveDefaultRmsTpdWithoutSettingAnotherDefault
		{
			get
			{
				return new LocalizedString("CannotRemoveDefaultRmsTpdWithoutSettingAnotherDefault", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A1A3 RID: 41379 RVA: 0x0027D290 File Offset: 0x0027B490
		public static LocalizedString ErrorRequestAlreadyCanceled(string identity)
		{
			return new LocalizedString("ErrorRequestAlreadyCanceled", "ExAB2602", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x0600A1A4 RID: 41380 RVA: 0x0027D2C0 File Offset: 0x0027B4C0
		public static LocalizedString FormsAuthenticationMarkPathAccessDeniedException(string metabasePath, int propertyID)
		{
			return new LocalizedString("FormsAuthenticationMarkPathAccessDeniedException", "Ex7B4757", false, true, Strings.ResourceManager, new object[]
			{
				metabasePath,
				propertyID
			});
		}

		// Token: 0x170034F2 RID: 13554
		// (get) Token: 0x0600A1A5 RID: 41381 RVA: 0x0027D2F8 File Offset: 0x0027B4F8
		public static LocalizedString MailboxExchangeCertificateComponentDescription
		{
			get
			{
				return new LocalizedString("MailboxExchangeCertificateComponentDescription", "Ex0C9461", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A1A6 RID: 41382 RVA: 0x0027D318 File Offset: 0x0027B518
		public static LocalizedString ErrorUMInvalidAddressFormat(string s)
		{
			return new LocalizedString("ErrorUMInvalidAddressFormat", "Ex70A9AC", false, true, Strings.ResourceManager, new object[]
			{
				s
			});
		}

		// Token: 0x0600A1A7 RID: 41383 RVA: 0x0027D348 File Offset: 0x0027B548
		public static LocalizedString ErrorParameterInvalidForManagedTenant(string organization)
		{
			return new LocalizedString("ErrorParameterInvalidForManagedTenant", "Ex11D41D", false, true, Strings.ResourceManager, new object[]
			{
				organization
			});
		}

		// Token: 0x0600A1A8 RID: 41384 RVA: 0x0027D378 File Offset: 0x0027B578
		public static LocalizedString DagTaskProblemChangingQuorumExceptionBadNetPath(string clusterName, string fsw, Exception ex)
		{
			return new LocalizedString("DagTaskProblemChangingQuorumExceptionBadNetPath", "", false, false, Strings.ResourceManager, new object[]
			{
				clusterName,
				fsw,
				ex
			});
		}

		// Token: 0x170034F3 RID: 13555
		// (get) Token: 0x0600A1A9 RID: 41385 RVA: 0x0027D3AF File Offset: 0x0027B5AF
		public static LocalizedString ADAttributeCustomAttribute12
		{
			get
			{
				return new LocalizedString("ADAttributeCustomAttribute12", "Ex73D073", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170034F4 RID: 13556
		// (get) Token: 0x0600A1AA RID: 41386 RVA: 0x0027D3CD File Offset: 0x0027B5CD
		public static LocalizedString ProgressValidatingFileLocations
		{
			get
			{
				return new LocalizedString("ProgressValidatingFileLocations", "Ex3CCF44", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A1AB RID: 41387 RVA: 0x0027D3EC File Offset: 0x0027B5EC
		public static LocalizedString VerbosePropertiesRead(string properties)
		{
			return new LocalizedString("VerbosePropertiesRead", "", false, false, Strings.ResourceManager, new object[]
			{
				properties
			});
		}

		// Token: 0x0600A1AC RID: 41388 RVA: 0x0027D41C File Offset: 0x0027B61C
		public static LocalizedString CannotRemoveMailUserCatchAllRecipient(string domain)
		{
			return new LocalizedString("CannotRemoveMailUserCatchAllRecipient", "", false, false, Strings.ResourceManager, new object[]
			{
				domain
			});
		}

		// Token: 0x170034F5 RID: 13557
		// (get) Token: 0x0600A1AD RID: 41389 RVA: 0x0027D44B File Offset: 0x0027B64B
		public static LocalizedString ErrorInboxRuleTooBig
		{
			get
			{
				return new LocalizedString("ErrorInboxRuleTooBig", "Ex5079F1", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A1AE RID: 41390 RVA: 0x0027D46C File Offset: 0x0027B66C
		public static LocalizedString TSNoProblemsDetected(string serverName)
		{
			return new LocalizedString("TSNoProblemsDetected", "Ex3642F9", false, true, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		// Token: 0x0600A1AF RID: 41391 RVA: 0x0027D49C File Offset: 0x0027B69C
		public static LocalizedString ConfirmationMessageUpdateDatabaseCopyBegin(string dbCopy)
		{
			return new LocalizedString("ConfirmationMessageUpdateDatabaseCopyBegin", "", false, false, Strings.ResourceManager, new object[]
			{
				dbCopy
			});
		}

		// Token: 0x0600A1B0 RID: 41392 RVA: 0x0027D4CC File Offset: 0x0027B6CC
		public static LocalizedString ErrorUserHasAlternateMailboxes(string mailbox)
		{
			return new LocalizedString("ErrorUserHasAlternateMailboxes", "ExD2FF1E", false, true, Strings.ResourceManager, new object[]
			{
				mailbox
			});
		}

		// Token: 0x0600A1B1 RID: 41393 RVA: 0x0027D4FC File Offset: 0x0027B6FC
		public static LocalizedString UnexpectedError(string exceptionMessage)
		{
			return new LocalizedString("UnexpectedError", "", false, false, Strings.ResourceManager, new object[]
			{
				exceptionMessage
			});
		}

		// Token: 0x0600A1B2 RID: 41394 RVA: 0x0027D52C File Offset: 0x0027B72C
		public static LocalizedString ErrorServicePlanInconsistent(string fileName, string programId, string offerId, string details)
		{
			return new LocalizedString("ErrorServicePlanInconsistent", "Ex08CD17", false, true, Strings.ResourceManager, new object[]
			{
				fileName,
				programId,
				offerId,
				details
			});
		}

		// Token: 0x170034F6 RID: 13558
		// (get) Token: 0x0600A1B3 RID: 41395 RVA: 0x0027D567 File Offset: 0x0027B767
		public static LocalizedString OutlookProtectionRuleRmsTemplateNotSet
		{
			get
			{
				return new LocalizedString("OutlookProtectionRuleRmsTemplateNotSet", "Ex404112", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170034F7 RID: 13559
		// (get) Token: 0x0600A1B4 RID: 41396 RVA: 0x0027D585 File Offset: 0x0027B785
		public static LocalizedString LocalSiteColon
		{
			get
			{
				return new LocalizedString("LocalSiteColon", "ExADEF76", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A1B5 RID: 41397 RVA: 0x0027D5A4 File Offset: 0x0027B7A4
		public static LocalizedString InvalidDuration(string minDuration, string maxDuration)
		{
			return new LocalizedString("InvalidDuration", "", false, false, Strings.ResourceManager, new object[]
			{
				minDuration,
				maxDuration
			});
		}

		// Token: 0x0600A1B6 RID: 41398 RVA: 0x0027D5D8 File Offset: 0x0027B7D8
		public static LocalizedString OwaAdOrphanFound(string id)
		{
			return new LocalizedString("OwaAdOrphanFound", "Ex19CFCC", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x0600A1B7 RID: 41399 RVA: 0x0027D608 File Offset: 0x0027B808
		public static LocalizedString ErrorDirectoryNotExist(string path)
		{
			return new LocalizedString("ErrorDirectoryNotExist", "Ex3B1A3F", false, true, Strings.ResourceManager, new object[]
			{
				path
			});
		}

		// Token: 0x0600A1B8 RID: 41400 RVA: 0x0027D638 File Offset: 0x0027B838
		public static LocalizedString FailedToSetRequestedDatabaseSchemaVersion(string database)
		{
			return new LocalizedString("FailedToSetRequestedDatabaseSchemaVersion", "", false, false, Strings.ResourceManager, new object[]
			{
				database
			});
		}

		// Token: 0x0600A1B9 RID: 41401 RVA: 0x0027D668 File Offset: 0x0027B868
		public static LocalizedString ConfirmationMessageNewDynamicDistributionGroupPrecannedFilter(string Name, string IncludedRecipients, string OrganizationalUnit)
		{
			return new LocalizedString("ConfirmationMessageNewDynamicDistributionGroupPrecannedFilter", "ExBDA516", false, true, Strings.ResourceManager, new object[]
			{
				Name,
				IncludedRecipients,
				OrganizationalUnit
			});
		}

		// Token: 0x170034F8 RID: 13560
		// (get) Token: 0x0600A1BA RID: 41402 RVA: 0x0027D69F File Offset: 0x0027B89F
		public static LocalizedString DirectoryPathDoesntExist
		{
			get
			{
				return new LocalizedString("DirectoryPathDoesntExist", "Ex7EA173", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170034F9 RID: 13561
		// (get) Token: 0x0600A1BB RID: 41403 RVA: 0x0027D6BD File Offset: 0x0027B8BD
		public static LocalizedString MtrtQuarantine
		{
			get
			{
				return new LocalizedString("MtrtQuarantine", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A1BC RID: 41404 RVA: 0x0027D6DC File Offset: 0x0027B8DC
		public static LocalizedString AlsSubjectMailboxFailure(string name)
		{
			return new LocalizedString("AlsSubjectMailboxFailure", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x0600A1BD RID: 41405 RVA: 0x0027D70C File Offset: 0x0027B90C
		public static LocalizedString FailedToValidateSLCCertChain(WellKnownErrorCode eCode)
		{
			return new LocalizedString("FailedToValidateSLCCertChain", "", false, false, Strings.ResourceManager, new object[]
			{
				eCode
			});
		}

		// Token: 0x0600A1BE RID: 41406 RVA: 0x0027D740 File Offset: 0x0027B940
		public static LocalizedString CouldNotUpgradeSpecificContentSetting(string setting)
		{
			return new LocalizedString("CouldNotUpgradeSpecificContentSetting", "Ex31F8AE", false, true, Strings.ResourceManager, new object[]
			{
				setting
			});
		}

		// Token: 0x170034FA RID: 13562
		// (get) Token: 0x0600A1BF RID: 41407 RVA: 0x0027D76F File Offset: 0x0027B96F
		public static LocalizedString SetupProgressOwaGlobalAddressListEnabled
		{
			get
			{
				return new LocalizedString("SetupProgressOwaGlobalAddressListEnabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A1C0 RID: 41408 RVA: 0x0027D790 File Offset: 0x0027B990
		public static LocalizedString GetMsoDiagnosticsProgressIteration(int i, int total)
		{
			return new LocalizedString("GetMsoDiagnosticsProgressIteration", "", false, false, Strings.ResourceManager, new object[]
			{
				i,
				total
			});
		}

		// Token: 0x170034FB RID: 13563
		// (get) Token: 0x0600A1C1 RID: 41409 RVA: 0x0027D7CD File Offset: 0x0027B9CD
		public static LocalizedString SameOwaVersionDoNotCopyLPFiles
		{
			get
			{
				return new LocalizedString("SameOwaVersionDoNotCopyLPFiles", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170034FC RID: 13564
		// (get) Token: 0x0600A1C2 RID: 41410 RVA: 0x0027D7EB File Offset: 0x0027B9EB
		public static LocalizedString ErrorDefaultMalwareFilterPolicyCannotBeDeleted
		{
			get
			{
				return new LocalizedString("ErrorDefaultMalwareFilterPolicyCannotBeDeleted", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A1C3 RID: 41411 RVA: 0x0027D80C File Offset: 0x0027BA0C
		public static LocalizedString TestRHRpcQueryAllDone(int count)
		{
			return new LocalizedString("TestRHRpcQueryAllDone", "Ex6A2FD8", false, true, Strings.ResourceManager, new object[]
			{
				count
			});
		}

		// Token: 0x170034FD RID: 13565
		// (get) Token: 0x0600A1C4 RID: 41412 RVA: 0x0027D840 File Offset: 0x0027BA40
		public static LocalizedString MigrationStartAfterScheduledBatchesOnly
		{
			get
			{
				return new LocalizedString("MigrationStartAfterScheduledBatchesOnly", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A1C5 RID: 41413 RVA: 0x0027D860 File Offset: 0x0027BA60
		public static LocalizedString ConfirmationMessageRemoveMailboxPermissionAccessRights(string Identity, string AccessRights, string User)
		{
			return new LocalizedString("ConfirmationMessageRemoveMailboxPermissionAccessRights", "Ex8227F8", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				AccessRights,
				User
			});
		}

		// Token: 0x170034FE RID: 13566
		// (get) Token: 0x0600A1C6 RID: 41414 RVA: 0x0027D897 File Offset: 0x0027BA97
		public static LocalizedString InvalidDlpPolicyConfiguration
		{
			get
			{
				return new LocalizedString("InvalidDlpPolicyConfiguration", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170034FF RID: 13567
		// (get) Token: 0x0600A1C7 RID: 41415 RVA: 0x0027D8B5 File Offset: 0x0027BAB5
		public static LocalizedString ConfirmationMessageSetAvailabilityConfig
		{
			get
			{
				return new LocalizedString("ConfirmationMessageSetAvailabilityConfig", "ExA13062", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A1C8 RID: 41416 RVA: 0x0027D8D4 File Offset: 0x0027BAD4
		public static LocalizedString VerboseSyncTaskCookieCurrentWatermarksMissingCurrentDC(Guid orgDc, Guid newDc)
		{
			return new LocalizedString("VerboseSyncTaskCookieCurrentWatermarksMissingCurrentDC", "Ex174DD5", false, true, Strings.ResourceManager, new object[]
			{
				orgDc,
				newDc
			});
		}

		// Token: 0x0600A1C9 RID: 41417 RVA: 0x0027D914 File Offset: 0x0027BB14
		public static LocalizedString ResetAutoBlockedDevicesException(string recipient)
		{
			return new LocalizedString("ResetAutoBlockedDevicesException", "", false, false, Strings.ResourceManager, new object[]
			{
				recipient
			});
		}

		// Token: 0x17003500 RID: 13568
		// (get) Token: 0x0600A1CA RID: 41418 RVA: 0x0027D943 File Offset: 0x0027BB43
		public static LocalizedString BPAScanInProgress
		{
			get
			{
				return new LocalizedString("BPAScanInProgress", "ExC343DF", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003501 RID: 13569
		// (get) Token: 0x0600A1CB RID: 41419 RVA: 0x0027D961 File Offset: 0x0027BB61
		public static LocalizedString ExportWithPrivateKeyRequiresPassword
		{
			get
			{
				return new LocalizedString("ExportWithPrivateKeyRequiresPassword", "ExC391B0", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A1CC RID: 41420 RVA: 0x0027D980 File Offset: 0x0027BB80
		public static LocalizedString ErrorReadMailboxSecurityDescriptor(string identity)
		{
			return new LocalizedString("ErrorReadMailboxSecurityDescriptor", "Ex52FC30", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x0600A1CD RID: 41421 RVA: 0x0027D9B0 File Offset: 0x0027BBB0
		public static LocalizedString TopologyServiceOperation(string operationType)
		{
			return new LocalizedString("TopologyServiceOperation", "", false, false, Strings.ResourceManager, new object[]
			{
				operationType
			});
		}

		// Token: 0x17003502 RID: 13570
		// (get) Token: 0x0600A1CE RID: 41422 RVA: 0x0027D9DF File Offset: 0x0027BBDF
		public static LocalizedString CasHealthScenarioResetCredentials
		{
			get
			{
				return new LocalizedString("CasHealthScenarioResetCredentials", "Ex00DCDE", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A1CF RID: 41423 RVA: 0x0027DA00 File Offset: 0x0027BC00
		public static LocalizedString ProtocolTransactionShortErrorMsgFromExceptionWithInnerException(string exceptionType, string exceptionMessage, string innerExceptionType, string innerExceptionMessage)
		{
			return new LocalizedString("ProtocolTransactionShortErrorMsgFromExceptionWithInnerException", "Ex3FA93E", false, true, Strings.ResourceManager, new object[]
			{
				exceptionType,
				exceptionMessage,
				innerExceptionType,
				innerExceptionMessage
			});
		}

		// Token: 0x0600A1D0 RID: 41424 RVA: 0x0027DA3C File Offset: 0x0027BC3C
		public static LocalizedString ConfirmationMessageOutlookProtectionRuleWithEmptyCondition(string identity)
		{
			return new LocalizedString("ConfirmationMessageOutlookProtectionRuleWithEmptyCondition", "ExE81D2D", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x17003503 RID: 13571
		// (get) Token: 0x0600A1D1 RID: 41425 RVA: 0x0027DA6B File Offset: 0x0027BC6B
		public static LocalizedString KeynoteConnectorServiceDescription
		{
			get
			{
				return new LocalizedString("KeynoteConnectorServiceDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003504 RID: 13572
		// (get) Token: 0x0600A1D2 RID: 41426 RVA: 0x0027DA89 File Offset: 0x0027BC89
		public static LocalizedString ConfirmationMessageSetSearchDocumentFormat
		{
			get
			{
				return new LocalizedString("ConfirmationMessageSetSearchDocumentFormat", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A1D3 RID: 41427 RVA: 0x0027DAA8 File Offset: 0x0027BCA8
		public static LocalizedString VerboseSettingWriteOriginatingChangeTimestamp(string value)
		{
			return new LocalizedString("VerboseSettingWriteOriginatingChangeTimestamp", "ExC081B8", false, true, Strings.ResourceManager, new object[]
			{
				value
			});
		}

		// Token: 0x0600A1D4 RID: 41428 RVA: 0x0027DAD8 File Offset: 0x0027BCD8
		public static LocalizedString ErrorCannotDetermineIisVersion(string serverName)
		{
			return new LocalizedString("ErrorCannotDetermineIisVersion", "Ex03C6CF", false, true, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		// Token: 0x0600A1D5 RID: 41429 RVA: 0x0027DB08 File Offset: 0x0027BD08
		public static LocalizedString ConfirmationMessageDisableMailUser(string Identity)
		{
			return new LocalizedString("ConfirmationMessageDisableMailUser", "Ex75935F", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x0600A1D6 RID: 41430 RVA: 0x0027DB38 File Offset: 0x0027BD38
		public static LocalizedString UpdatingLegDnForDatabaseCopy(string dbcopyName)
		{
			return new LocalizedString("UpdatingLegDnForDatabaseCopy", "Ex0F0E68", false, true, Strings.ResourceManager, new object[]
			{
				dbcopyName
			});
		}

		// Token: 0x17003505 RID: 13573
		// (get) Token: 0x0600A1D7 RID: 41431 RVA: 0x0027DB67 File Offset: 0x0027BD67
		public static LocalizedString ErrorInvalidSizeRangeException
		{
			get
			{
				return new LocalizedString("ErrorInvalidSizeRangeException", "ExD13FD8", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A1D8 RID: 41432 RVA: 0x0027DB88 File Offset: 0x0027BD88
		public static LocalizedString DatabaseCopyDisconnectedCheck(string configType, string sgName, string checkingState, string serverName)
		{
			return new LocalizedString("DatabaseCopyDisconnectedCheck", "ExF88BD7", false, true, Strings.ResourceManager, new object[]
			{
				configType,
				sgName,
				checkingState,
				serverName
			});
		}

		// Token: 0x0600A1D9 RID: 41433 RVA: 0x0027DBC4 File Offset: 0x0027BDC4
		public static LocalizedString MigrationUserNotFound(string userName)
		{
			return new LocalizedString("MigrationUserNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				userName
			});
		}

		// Token: 0x17003506 RID: 13574
		// (get) Token: 0x0600A1DA RID: 41434 RVA: 0x0027DBF3 File Offset: 0x0027BDF3
		public static LocalizedString ErrorNoDatabaseInfor
		{
			get
			{
				return new LocalizedString("ErrorNoDatabaseInfor", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003507 RID: 13575
		// (get) Token: 0x0600A1DB RID: 41435 RVA: 0x0027DC11 File Offset: 0x0027BE11
		public static LocalizedString DebugStartEnablingUM
		{
			get
			{
				return new LocalizedString("DebugStartEnablingUM", "Ex3284E3", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A1DC RID: 41436 RVA: 0x0027DC30 File Offset: 0x0027BE30
		public static LocalizedString TestSearchFailed(string mailbox, string mdb, string activeServer)
		{
			return new LocalizedString("TestSearchFailed", "Ex456BE3", false, true, Strings.ResourceManager, new object[]
			{
				mailbox,
				mdb,
				activeServer
			});
		}

		// Token: 0x17003508 RID: 13576
		// (get) Token: 0x0600A1DD RID: 41437 RVA: 0x0027DC67 File Offset: 0x0027BE67
		public static LocalizedString ErrorSettingCertOnTenant
		{
			get
			{
				return new LocalizedString("ErrorSettingCertOnTenant", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A1DE RID: 41438 RVA: 0x0027DC88 File Offset: 0x0027BE88
		public static LocalizedString IgnoringException(string message)
		{
			return new LocalizedString("IgnoringException", "Ex3092DF", false, true, Strings.ResourceManager, new object[]
			{
				message
			});
		}

		// Token: 0x17003509 RID: 13577
		// (get) Token: 0x0600A1DF RID: 41439 RVA: 0x0027DCB7 File Offset: 0x0027BEB7
		public static LocalizedString ErrorFailedToGetTemplateTenant
		{
			get
			{
				return new LocalizedString("ErrorFailedToGetTemplateTenant", "Ex1319A6", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A1E0 RID: 41440 RVA: 0x0027DCD8 File Offset: 0x0027BED8
		public static LocalizedString ConfirmRemoveExchangeCertificate(string thumbprint)
		{
			return new LocalizedString("ConfirmRemoveExchangeCertificate", "Ex0ADF40", false, true, Strings.ResourceManager, new object[]
			{
				thumbprint
			});
		}

		// Token: 0x1700350A RID: 13578
		// (get) Token: 0x0600A1E1 RID: 41441 RVA: 0x0027DD07 File Offset: 0x0027BF07
		public static LocalizedString CannotRunOnNonHubTransport
		{
			get
			{
				return new LocalizedString("CannotRunOnNonHubTransport", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A1E2 RID: 41442 RVA: 0x0027DD28 File Offset: 0x0027BF28
		public static LocalizedString VerboseCannedAddressListAlreadyExists(string name)
		{
			return new LocalizedString("VerboseCannedAddressListAlreadyExists", "ExA9257D", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x1700350B RID: 13579
		// (get) Token: 0x0600A1E3 RID: 41443 RVA: 0x0027DD57 File Offset: 0x0027BF57
		public static LocalizedString ErrorRmsOnlineAuthenticationCertificateExpired
		{
			get
			{
				return new LocalizedString("ErrorRmsOnlineAuthenticationCertificateExpired", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700350C RID: 13580
		// (get) Token: 0x0600A1E4 RID: 41444 RVA: 0x0027DD75 File Offset: 0x0027BF75
		public static LocalizedString ErrorFailedToGetULDueToInvalidSuperUserConfiguration
		{
			get
			{
				return new LocalizedString("ErrorFailedToGetULDueToInvalidSuperUserConfiguration", "ExCEF983", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A1E5 RID: 41445 RVA: 0x0027DD94 File Offset: 0x0027BF94
		public static LocalizedString DagTaskErrorEncounteredMoreDetailsInLog(string logFile, string serverName)
		{
			return new LocalizedString("DagTaskErrorEncounteredMoreDetailsInLog", "", false, false, Strings.ResourceManager, new object[]
			{
				logFile,
				serverName
			});
		}

		// Token: 0x1700350D RID: 13581
		// (get) Token: 0x0600A1E6 RID: 41446 RVA: 0x0027DDC7 File Offset: 0x0027BFC7
		public static LocalizedString RemoveOrganizationDescription
		{
			get
			{
				return new LocalizedString("RemoveOrganizationDescription", "Ex637E96", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700350E RID: 13582
		// (get) Token: 0x0600A1E7 RID: 41447 RVA: 0x0027DDE5 File Offset: 0x0027BFE5
		public static LocalizedString CasHealthTestNewUserScriptName
		{
			get
			{
				return new LocalizedString("CasHealthTestNewUserScriptName", "ExD48032", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A1E8 RID: 41448 RVA: 0x0027DE04 File Offset: 0x0027C004
		public static LocalizedString ExceptionRunProcessFailedRetry(int errorCode, uint retryCount)
		{
			return new LocalizedString("ExceptionRunProcessFailedRetry", "", false, false, Strings.ResourceManager, new object[]
			{
				errorCode,
				retryCount
			});
		}

		// Token: 0x0600A1E9 RID: 41449 RVA: 0x0027DE44 File Offset: 0x0027C044
		public static LocalizedString ErrorUnableToFindFqdnForHostADErrorException(string computerName, string ex)
		{
			return new LocalizedString("ErrorUnableToFindFqdnForHostADErrorException", "", false, false, Strings.ResourceManager, new object[]
			{
				computerName,
				ex
			});
		}

		// Token: 0x0600A1EA RID: 41450 RVA: 0x0027DE78 File Offset: 0x0027C078
		public static LocalizedString WarningSearchUserNotFound(string idStringValue)
		{
			return new LocalizedString("WarningSearchUserNotFound", "ExF696B0", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		// Token: 0x0600A1EB RID: 41451 RVA: 0x0027DEA8 File Offset: 0x0027C0A8
		public static LocalizedString ErrorAllRoomListNotUnique(string idStringValue)
		{
			return new LocalizedString("ErrorAllRoomListNotUnique", "", false, false, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		// Token: 0x0600A1EC RID: 41452 RVA: 0x0027DED8 File Offset: 0x0027C0D8
		public static LocalizedString NewProductInstallation(string packagePath, string propertyValues)
		{
			return new LocalizedString("NewProductInstallation", "ExD8DDC3", false, true, Strings.ResourceManager, new object[]
			{
				packagePath,
				propertyValues
			});
		}

		// Token: 0x0600A1ED RID: 41453 RVA: 0x0027DF0C File Offset: 0x0027C10C
		public static LocalizedString ConfirmationMessageNewInboundConnector(string Identity)
		{
			return new LocalizedString("ConfirmationMessageNewInboundConnector", "", false, false, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x1700350F RID: 13583
		// (get) Token: 0x0600A1EE RID: 41454 RVA: 0x0027DF3B File Offset: 0x0027C13B
		public static LocalizedString InstallGatewayRoleDescription
		{
			get
			{
				return new LocalizedString("InstallGatewayRoleDescription", "ExC4272A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003510 RID: 13584
		// (get) Token: 0x0600A1EF RID: 41455 RVA: 0x0027DF59 File Offset: 0x0027C159
		public static LocalizedString InvalidClientCertificateSubjectName
		{
			get
			{
				return new LocalizedString("InvalidClientCertificateSubjectName", "Ex38242D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003511 RID: 13585
		// (get) Token: 0x0600A1F0 RID: 41456 RVA: 0x0027DF77 File Offset: 0x0027C177
		public static LocalizedString SetupComponentPostSetupClientAccess
		{
			get
			{
				return new LocalizedString("SetupComponentPostSetupClientAccess", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003512 RID: 13586
		// (get) Token: 0x0600A1F1 RID: 41457 RVA: 0x0027DF95 File Offset: 0x0027C195
		public static LocalizedString ErrorCannotUpdatePublicFolderHierarchyInformation
		{
			get
			{
				return new LocalizedString("ErrorCannotUpdatePublicFolderHierarchyInformation", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A1F2 RID: 41458 RVA: 0x0027DFB4 File Offset: 0x0027C1B4
		public static LocalizedString OutlookConnectivityErrorUserNotFound(string identity)
		{
			return new LocalizedString("OutlookConnectivityErrorUserNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x0600A1F3 RID: 41459 RVA: 0x0027DFE4 File Offset: 0x0027C1E4
		public static LocalizedString ErrorGroupNotFoundOnDomainController(string id, string dc)
		{
			return new LocalizedString("ErrorGroupNotFoundOnDomainController", "Ex4B3DC3", false, true, Strings.ResourceManager, new object[]
			{
				id,
				dc
			});
		}

		// Token: 0x0600A1F4 RID: 41460 RVA: 0x0027E018 File Offset: 0x0027C218
		public static LocalizedString ConfirmationDumpProvisioningCache(string server, string application)
		{
			return new LocalizedString("ConfirmationDumpProvisioningCache", "", false, false, Strings.ResourceManager, new object[]
			{
				server,
				application
			});
		}

		// Token: 0x0600A1F5 RID: 41461 RVA: 0x0027E04C File Offset: 0x0027C24C
		public static LocalizedString ConversationsFailedToProcessMailbox(string error)
		{
			return new LocalizedString("ConversationsFailedToProcessMailbox", "Ex616E7A", false, true, Strings.ResourceManager, new object[]
			{
				error
			});
		}

		// Token: 0x0600A1F6 RID: 41462 RVA: 0x0027E07C File Offset: 0x0027C27C
		public static LocalizedString WarningArbitrationRetentionPolicyNotAvailable(string policyName)
		{
			return new LocalizedString("WarningArbitrationRetentionPolicyNotAvailable", "Ex7AA7FD", false, true, Strings.ResourceManager, new object[]
			{
				policyName
			});
		}

		// Token: 0x17003513 RID: 13587
		// (get) Token: 0x0600A1F7 RID: 41463 RVA: 0x0027E0AB File Offset: 0x0027C2AB
		public static LocalizedString messageAutodiscoverServiceUnavailableException
		{
			get
			{
				return new LocalizedString("messageAutodiscoverServiceUnavailableException", "ExBC439D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A1F8 RID: 41464 RVA: 0x0027E0CC File Offset: 0x0027C2CC
		public static LocalizedString ExchangeSettingsCannotChangeScopeOnScopeFilteredGroup(string groupName)
		{
			return new LocalizedString("ExchangeSettingsCannotChangeScopeOnScopeFilteredGroup", "", false, false, Strings.ResourceManager, new object[]
			{
				groupName
			});
		}

		// Token: 0x17003514 RID: 13588
		// (get) Token: 0x0600A1F9 RID: 41465 RVA: 0x0027E0FB File Offset: 0x0027C2FB
		public static LocalizedString InfoIRMConfigLoaded
		{
			get
			{
				return new LocalizedString("InfoIRMConfigLoaded", "ExDE5265", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A1FA RID: 41466 RVA: 0x0027E11C File Offset: 0x0027C31C
		public static LocalizedString CertificateInformation(string issuer, DateTime notBefore, DateTime notAfter, string subject)
		{
			return new LocalizedString("CertificateInformation", "", false, false, Strings.ResourceManager, new object[]
			{
				issuer,
				notBefore,
				notAfter,
				subject
			});
		}

		// Token: 0x0600A1FB RID: 41467 RVA: 0x0027E164 File Offset: 0x0027C364
		public static LocalizedString ConfirmationMessageSetMailboxAuditLogAgeLimitSmaller(string Identity, string newAgeLimit)
		{
			return new LocalizedString("ConfirmationMessageSetMailboxAuditLogAgeLimitSmaller", "ExBB9D09", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				newAgeLimit
			});
		}

		// Token: 0x17003515 RID: 13589
		// (get) Token: 0x0600A1FC RID: 41468 RVA: 0x0027E197 File Offset: 0x0027C397
		public static LocalizedString CasHealthOwaGotLanguageSelectionPage
		{
			get
			{
				return new LocalizedString("CasHealthOwaGotLanguageSelectionPage", "Ex561CDF", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A1FD RID: 41469 RVA: 0x0027E1B8 File Offset: 0x0027C3B8
		public static LocalizedString CannotFindRPSInstallLocation(string RPSInstallLocation)
		{
			return new LocalizedString("CannotFindRPSInstallLocation", "Ex754C83", false, true, Strings.ResourceManager, new object[]
			{
				RPSInstallLocation
			});
		}

		// Token: 0x0600A1FE RID: 41470 RVA: 0x0027E1E8 File Offset: 0x0027C3E8
		public static LocalizedString ErrorParameterValueRequired(string missingParamName)
		{
			return new LocalizedString("ErrorParameterValueRequired", "Ex218504", false, true, Strings.ResourceManager, new object[]
			{
				missingParamName
			});
		}

		// Token: 0x17003516 RID: 13590
		// (get) Token: 0x0600A1FF RID: 41471 RVA: 0x0027E217 File Offset: 0x0027C417
		public static LocalizedString WarningMustInvokeUpdateOABToStartScheduledGeneration
		{
			get
			{
				return new LocalizedString("WarningMustInvokeUpdateOABToStartScheduledGeneration", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A200 RID: 41472 RVA: 0x0027E238 File Offset: 0x0027C438
		public static LocalizedString ProgressStatusReadingAddressListTree(int count)
		{
			return new LocalizedString("ProgressStatusReadingAddressListTree", "ExBBA096", false, true, Strings.ResourceManager, new object[]
			{
				count
			});
		}

		// Token: 0x17003517 RID: 13591
		// (get) Token: 0x0600A201 RID: 41473 RVA: 0x0027E26C File Offset: 0x0027C46C
		public static LocalizedString HaltingExecution
		{
			get
			{
				return new LocalizedString("HaltingExecution", "Ex10590F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A202 RID: 41474 RVA: 0x0027E28C File Offset: 0x0027C48C
		public static LocalizedString ConfirmationMessageSetRemoteDomain(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetRemoteDomain", "ExD17155", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x17003518 RID: 13592
		// (get) Token: 0x0600A203 RID: 41475 RVA: 0x0027E2BB File Offset: 0x0027C4BB
		public static LocalizedString CasHealthPowerShellLongName
		{
			get
			{
				return new LocalizedString("CasHealthPowerShellLongName", "ExBE80AA", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A204 RID: 41476 RVA: 0x0027E2DC File Offset: 0x0027C4DC
		public static LocalizedString VerboseStartToSubmitApprovalRequest(string group, string approvers)
		{
			return new LocalizedString("VerboseStartToSubmitApprovalRequest", "", false, false, Strings.ResourceManager, new object[]
			{
				group,
				approvers
			});
		}

		// Token: 0x0600A205 RID: 41477 RVA: 0x0027E310 File Offset: 0x0027C510
		public static LocalizedString ErrorELCFolderIsDestination(string folderName, string destinationFolderName, string destinationContentSetting)
		{
			return new LocalizedString("ErrorELCFolderIsDestination", "Ex1E4AFB", false, true, Strings.ResourceManager, new object[]
			{
				folderName,
				destinationFolderName,
				destinationContentSetting
			});
		}

		// Token: 0x17003519 RID: 13593
		// (get) Token: 0x0600A206 RID: 41478 RVA: 0x0027E347 File Offset: 0x0027C547
		public static LocalizedString AppIdElementIsEmpty
		{
			get
			{
				return new LocalizedString("AppIdElementIsEmpty", "ExBBFA89", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A207 RID: 41479 RVA: 0x0027E368 File Offset: 0x0027C568
		public static LocalizedString VerboseTryingToParseOPathFilter(string filter)
		{
			return new LocalizedString("VerboseTryingToParseOPathFilter", "ExC22777", false, true, Strings.ResourceManager, new object[]
			{
				filter
			});
		}

		// Token: 0x0600A208 RID: 41480 RVA: 0x0027E398 File Offset: 0x0027C598
		public static LocalizedString CasHealthCalendarWebRequestException(string message)
		{
			return new LocalizedString("CasHealthCalendarWebRequestException", "Ex5328C9", false, true, Strings.ResourceManager, new object[]
			{
				message
			});
		}

		// Token: 0x0600A209 RID: 41481 RVA: 0x0027E3C8 File Offset: 0x0027C5C8
		public static LocalizedString ConfirmOrphanUserMissingADData(string identity)
		{
			return new LocalizedString("ConfirmOrphanUserMissingADData", "ExAF487A", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x0600A20A RID: 41482 RVA: 0x0027E3F8 File Offset: 0x0027C5F8
		public static LocalizedString ErrorInvalidResponseXml(string xml)
		{
			return new LocalizedString("ErrorInvalidResponseXml", "", false, false, Strings.ResourceManager, new object[]
			{
				xml
			});
		}

		// Token: 0x0600A20B RID: 41483 RVA: 0x0027E428 File Offset: 0x0027C628
		public static LocalizedString ConfirmationMessageNewMergeRequest(string name)
		{
			return new LocalizedString("ConfirmationMessageNewMergeRequest", "Ex43EDE9", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x0600A20C RID: 41484 RVA: 0x0027E458 File Offset: 0x0027C658
		public static LocalizedString DagNicDown(string nodeName, string nicAddress, string nicState)
		{
			return new LocalizedString("DagNicDown", "Ex8770BB", false, true, Strings.ResourceManager, new object[]
			{
				nodeName,
				nicAddress,
				nicState
			});
		}

		// Token: 0x0600A20D RID: 41485 RVA: 0x0027E490 File Offset: 0x0027C690
		public static LocalizedString CannotOpenRegistryKey(string name)
		{
			return new LocalizedString("CannotOpenRegistryKey", "Ex48D947", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x0600A20E RID: 41486 RVA: 0x0027E4C0 File Offset: 0x0027C6C0
		public static LocalizedString WarningNewAdminAuditLogSearchOnPreE15(string org)
		{
			return new LocalizedString("WarningNewAdminAuditLogSearchOnPreE15", "", false, false, Strings.ResourceManager, new object[]
			{
				org
			});
		}

		// Token: 0x0600A20F RID: 41487 RVA: 0x0027E4F0 File Offset: 0x0027C6F0
		public static LocalizedString ConfirmationMessageAddAvailabilityAddressSpace(string ForestName, string AccessMethod)
		{
			return new LocalizedString("ConfirmationMessageAddAvailabilityAddressSpace", "Ex1AFFD7", false, true, Strings.ResourceManager, new object[]
			{
				ForestName,
				AccessMethod
			});
		}

		// Token: 0x0600A210 RID: 41488 RVA: 0x0027E524 File Offset: 0x0027C724
		public static LocalizedString ConfirmationMessageSetManagedFolderMailboxPolicy(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetManagedFolderMailboxPolicy", "ExBC0EDF", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x1700351A RID: 13594
		// (get) Token: 0x0600A211 RID: 41489 RVA: 0x0027E553 File Offset: 0x0027C753
		public static LocalizedString InPlaceHoldNotAllowedForAllSourceMailboxes
		{
			get
			{
				return new LocalizedString("InPlaceHoldNotAllowedForAllSourceMailboxes", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A212 RID: 41490 RVA: 0x0027E574 File Offset: 0x0027C774
		public static LocalizedString ErrorOabGenFailedE14(string oabId, string server, string errormsg)
		{
			return new LocalizedString("ErrorOabGenFailedE14", "", false, false, Strings.ResourceManager, new object[]
			{
				oabId,
				server,
				errormsg
			});
		}

		// Token: 0x1700351B RID: 13595
		// (get) Token: 0x0600A213 RID: 41491 RVA: 0x0027E5AB File Offset: 0x0027C7AB
		public static LocalizedString NoMdbWasMovedWhileRunning
		{
			get
			{
				return new LocalizedString("NoMdbWasMovedWhileRunning", "Ex05B24B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A214 RID: 41492 RVA: 0x0027E5CC File Offset: 0x0027C7CC
		public static LocalizedString ErrorAdUserNotFound(string userPrincipalName, string errorMessage)
		{
			return new LocalizedString("ErrorAdUserNotFound", "Ex61FDBD", false, true, Strings.ResourceManager, new object[]
			{
				userPrincipalName,
				errorMessage
			});
		}

		// Token: 0x0600A215 RID: 41493 RVA: 0x0027E600 File Offset: 0x0027C800
		public static LocalizedString FailedToResetAdministrativeGroupLinkedToPfdb(string administrativeGroup, string pfdb, string error)
		{
			return new LocalizedString("FailedToResetAdministrativeGroupLinkedToPfdb", "ExEE1C9B", false, true, Strings.ResourceManager, new object[]
			{
				administrativeGroup,
				pfdb,
				error
			});
		}

		// Token: 0x1700351C RID: 13596
		// (get) Token: 0x0600A216 RID: 41494 RVA: 0x0027E637 File Offset: 0x0027C837
		public static LocalizedString MtrtDeleteAttachment
		{
			get
			{
				return new LocalizedString("MtrtDeleteAttachment", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A217 RID: 41495 RVA: 0x0027E658 File Offset: 0x0027C858
		public static LocalizedString ConfirmationMessageSetFederationTrust4(string Identity, string metadataUrl)
		{
			return new LocalizedString("ConfirmationMessageSetFederationTrust4", "Ex607F6D", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				metadataUrl
			});
		}

		// Token: 0x0600A218 RID: 41496 RVA: 0x0027E68C File Offset: 0x0027C88C
		public static LocalizedString TestSearchRecoveryMdb(string mdb)
		{
			return new LocalizedString("TestSearchRecoveryMdb", "Ex249AFC", false, true, Strings.ResourceManager, new object[]
			{
				mdb
			});
		}

		// Token: 0x0600A219 RID: 41497 RVA: 0x0027E6BC File Offset: 0x0027C8BC
		public static LocalizedString MailboxSearchObjectExist(string name)
		{
			return new LocalizedString("MailboxSearchObjectExist", "ExFBB642", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x0600A21A RID: 41498 RVA: 0x0027E6EC File Offset: 0x0027C8EC
		public static LocalizedString VerboseCreateMember(string memberName)
		{
			return new LocalizedString("VerboseCreateMember", "Ex0B2722", false, true, Strings.ResourceManager, new object[]
			{
				memberName
			});
		}

		// Token: 0x0600A21B RID: 41499 RVA: 0x0027E71C File Offset: 0x0027C91C
		public static LocalizedString DagTaskCouldNotDisableAccountName(string dagName, Exception ex)
		{
			return new LocalizedString("DagTaskCouldNotDisableAccountName", "", false, false, Strings.ResourceManager, new object[]
			{
				dagName,
				ex
			});
		}

		// Token: 0x1700351D RID: 13597
		// (get) Token: 0x0600A21C RID: 41500 RVA: 0x0027E74F File Offset: 0x0027C94F
		public static LocalizedString IncomingUserNameEmpty
		{
			get
			{
				return new LocalizedString("IncomingUserNameEmpty", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A21D RID: 41501 RVA: 0x0027E770 File Offset: 0x0027C970
		public static LocalizedString ConfirmationMessageNewDatabaseAvailabilityGroup(string Server)
		{
			return new LocalizedString("ConfirmationMessageNewDatabaseAvailabilityGroup", "Ex0ACCAC", false, true, Strings.ResourceManager, new object[]
			{
				Server
			});
		}

		// Token: 0x1700351E RID: 13598
		// (get) Token: 0x0600A21E RID: 41502 RVA: 0x0027E79F File Offset: 0x0027C99F
		public static LocalizedString AddressRewriteSessionNull
		{
			get
			{
				return new LocalizedString("AddressRewriteSessionNull", "Ex4E1285", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A21F RID: 41503 RVA: 0x0027E7C0 File Offset: 0x0027C9C0
		public static LocalizedString ErrorNameValueStringTooLong(string param, int maxLen, int actualLen)
		{
			return new LocalizedString("ErrorNameValueStringTooLong", "Ex4BC346", false, true, Strings.ResourceManager, new object[]
			{
				param,
				maxLen,
				actualLen
			});
		}

		// Token: 0x0600A220 RID: 41504 RVA: 0x0027E804 File Offset: 0x0027CA04
		public static LocalizedString ErrorApplicationNotExist(string name, string configFile)
		{
			return new LocalizedString("ErrorApplicationNotExist", "Ex76E4F9", false, true, Strings.ResourceManager, new object[]
			{
				name,
				configFile
			});
		}

		// Token: 0x0600A221 RID: 41505 RVA: 0x0027E838 File Offset: 0x0027CA38
		public static LocalizedString AgentLogInvalidLocation(string location)
		{
			return new LocalizedString("AgentLogInvalidLocation", "", false, false, Strings.ResourceManager, new object[]
			{
				location
			});
		}

		// Token: 0x1700351F RID: 13599
		// (get) Token: 0x0600A222 RID: 41506 RVA: 0x0027E867 File Offset: 0x0027CA67
		public static LocalizedString ErrorAccessRightsEmpty
		{
			get
			{
				return new LocalizedString("ErrorAccessRightsEmpty", "Ex4AE991", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A223 RID: 41507 RVA: 0x0027E888 File Offset: 0x0027CA88
		public static LocalizedString ErrorAddCertificateOnEdge(string message)
		{
			return new LocalizedString("ErrorAddCertificateOnEdge", "Ex14CBB4", false, true, Strings.ResourceManager, new object[]
			{
				message
			});
		}

		// Token: 0x0600A224 RID: 41508 RVA: 0x0027E8B8 File Offset: 0x0027CAB8
		public static LocalizedString ErrorMountPreventedByRecordedErr(string databaseId, string serverName, string errorMessage)
		{
			return new LocalizedString("ErrorMountPreventedByRecordedErr", "Ex2BA92D", false, true, Strings.ResourceManager, new object[]
			{
				databaseId,
				serverName,
				errorMessage
			});
		}

		// Token: 0x0600A225 RID: 41509 RVA: 0x0027E8F0 File Offset: 0x0027CAF0
		public static LocalizedString ErrorCheckHasLocalReplicas(string databaseId, string serverFQDN)
		{
			return new LocalizedString("ErrorCheckHasLocalReplicas", "Ex78064B", false, true, Strings.ResourceManager, new object[]
			{
				databaseId,
				serverFQDN
			});
		}

		// Token: 0x0600A226 RID: 41510 RVA: 0x0027E924 File Offset: 0x0027CB24
		public static LocalizedString SomeActiveSyncTransactionsFailed(string detailedInformation)
		{
			return new LocalizedString("SomeActiveSyncTransactionsFailed", "Ex07244D", false, true, Strings.ResourceManager, new object[]
			{
				detailedInformation
			});
		}

		// Token: 0x0600A227 RID: 41511 RVA: 0x0027E954 File Offset: 0x0027CB54
		public static LocalizedString CheckDatabaseStatus(string database)
		{
			return new LocalizedString("CheckDatabaseStatus", "Ex13E2CD", false, true, Strings.ResourceManager, new object[]
			{
				database
			});
		}

		// Token: 0x17003520 RID: 13600
		// (get) Token: 0x0600A228 RID: 41512 RVA: 0x0027E983 File Offset: 0x0027CB83
		public static LocalizedString SetupComponentMailboxGlobalConfig
		{
			get
			{
				return new LocalizedString("SetupComponentMailboxGlobalConfig", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003521 RID: 13601
		// (get) Token: 0x0600A229 RID: 41513 RVA: 0x0027E9A1 File Offset: 0x0027CBA1
		public static LocalizedString MtrtEventDeliver
		{
			get
			{
				return new LocalizedString("MtrtEventDeliver", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A22A RID: 41514 RVA: 0x0027E9C0 File Offset: 0x0027CBC0
		public static LocalizedString SystemContainerNotFoundException(string domain, Guid guid)
		{
			return new LocalizedString("SystemContainerNotFoundException", "Ex41A017", false, true, Strings.ResourceManager, new object[]
			{
				domain,
				guid
			});
		}

		// Token: 0x17003522 RID: 13602
		// (get) Token: 0x0600A22B RID: 41515 RVA: 0x0027E9F8 File Offset: 0x0027CBF8
		public static LocalizedString EcpUrlNotMatchOwaWarning
		{
			get
			{
				return new LocalizedString("EcpUrlNotMatchOwaWarning", "ExAEAC6D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A22C RID: 41516 RVA: 0x0027EA18 File Offset: 0x0027CC18
		public static LocalizedString E2k3InteropGroupNotFoundException(Guid guid)
		{
			return new LocalizedString("E2k3InteropGroupNotFoundException", "Ex32F637", false, true, Strings.ResourceManager, new object[]
			{
				guid
			});
		}

		// Token: 0x0600A22D RID: 41517 RVA: 0x0027EA4C File Offset: 0x0027CC4C
		public static LocalizedString DlpPolicyFieldLengthsExceedsLimit(string elementName, int maxAllowedLength)
		{
			return new LocalizedString("DlpPolicyFieldLengthsExceedsLimit", "", false, false, Strings.ResourceManager, new object[]
			{
				elementName,
				maxAllowedLength
			});
		}

		// Token: 0x17003523 RID: 13603
		// (get) Token: 0x0600A22E RID: 41518 RVA: 0x0027EA84 File Offset: 0x0027CC84
		public static LocalizedString CasHealthEasPing
		{
			get
			{
				return new LocalizedString("CasHealthEasPing", "Ex3EE605", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A22F RID: 41519 RVA: 0x0027EAA4 File Offset: 0x0027CCA4
		public static LocalizedString ConfirmationMessageNewMailboxDatabaseNonRecovery(string Name)
		{
			return new LocalizedString("ConfirmationMessageNewMailboxDatabaseNonRecovery", "Ex5A10DA", false, true, Strings.ResourceManager, new object[]
			{
				Name
			});
		}

		// Token: 0x0600A230 RID: 41520 RVA: 0x0027EAD4 File Offset: 0x0027CCD4
		public static LocalizedString ErrorVirtualDirectoryAlreadyExists(string virtualDirectoryName, string webSiteName, string serverName)
		{
			return new LocalizedString("ErrorVirtualDirectoryAlreadyExists", "Ex708236", false, true, Strings.ResourceManager, new object[]
			{
				virtualDirectoryName,
				webSiteName,
				serverName
			});
		}

		// Token: 0x17003524 RID: 13604
		// (get) Token: 0x0600A231 RID: 41521 RVA: 0x0027EB0B File Offset: 0x0027CD0B
		public static LocalizedString ErrorCompleteOrgUpgradeCannotRunForSharedConfigurationOrgs
		{
			get
			{
				return new LocalizedString("ErrorCompleteOrgUpgradeCannotRunForSharedConfigurationOrgs", "Ex221D27", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A232 RID: 41522 RVA: 0x0027EB2C File Offset: 0x0027CD2C
		public static LocalizedString ConfirmationMessageSetELCContentSettings(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetELCContentSettings", "Ex51A75D", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x17003525 RID: 13605
		// (get) Token: 0x0600A233 RID: 41523 RVA: 0x0027EB5B File Offset: 0x0027CD5B
		public static LocalizedString WSManIISHostingConfigurationComponentDescription
		{
			get
			{
				return new LocalizedString("WSManIISHostingConfigurationComponentDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003526 RID: 13606
		// (get) Token: 0x0600A234 RID: 41524 RVA: 0x0027EB79 File Offset: 0x0027CD79
		public static LocalizedString DiagnosticsHeader
		{
			get
			{
				return new LocalizedString("DiagnosticsHeader", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A235 RID: 41525 RVA: 0x0027EB98 File Offset: 0x0027CD98
		public static LocalizedString CannotConvertAqsToKql(string error)
		{
			return new LocalizedString("CannotConvertAqsToKql", "", false, false, Strings.ResourceManager, new object[]
			{
				error
			});
		}

		// Token: 0x17003527 RID: 13607
		// (get) Token: 0x0600A236 RID: 41526 RVA: 0x0027EBC7 File Offset: 0x0027CDC7
		public static LocalizedString UnknownMigrationUserStatusSummaryValue
		{
			get
			{
				return new LocalizedString("UnknownMigrationUserStatusSummaryValue", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003528 RID: 13608
		// (get) Token: 0x0600A237 RID: 41527 RVA: 0x0027EBE5 File Offset: 0x0027CDE5
		public static LocalizedString OwaMetabaseIsapiUninstallFailure
		{
			get
			{
				return new LocalizedString("OwaMetabaseIsapiUninstallFailure", "Ex21C720", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003529 RID: 13609
		// (get) Token: 0x0600A238 RID: 41528 RVA: 0x0027EC03 File Offset: 0x0027CE03
		public static LocalizedString MoreThanOneTeamMailboxes
		{
			get
			{
				return new LocalizedString("MoreThanOneTeamMailboxes", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A239 RID: 41529 RVA: 0x0027EC24 File Offset: 0x0027CE24
		public static LocalizedString MoveMailboxErrorFromCom(string displayname, string smtp, string summary, int statusCode)
		{
			return new LocalizedString("MoveMailboxErrorFromCom", "ExAABAEA", false, true, Strings.ResourceManager, new object[]
			{
				displayname,
				smtp,
				summary,
				statusCode
			});
		}

		// Token: 0x0600A23A RID: 41530 RVA: 0x0027EC64 File Offset: 0x0027CE64
		public static LocalizedString GetFederationInformationTrustedHostnames(string hostnames)
		{
			return new LocalizedString("GetFederationInformationTrustedHostnames", "Ex5904C1", false, true, Strings.ResourceManager, new object[]
			{
				hostnames
			});
		}

		// Token: 0x1700352A RID: 13610
		// (get) Token: 0x0600A23B RID: 41531 RVA: 0x0027EC93 File Offset: 0x0027CE93
		public static LocalizedString CasHealthOwaIsaFbaFormdirParseFailed
		{
			get
			{
				return new LocalizedString("CasHealthOwaIsaFbaFormdirParseFailed", "Ex84179C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700352B RID: 13611
		// (get) Token: 0x0600A23C RID: 41532 RVA: 0x0027ECB1 File Offset: 0x0027CEB1
		public static LocalizedString EventLogText
		{
			get
			{
				return new LocalizedString("EventLogText", "ExDF796C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A23D RID: 41533 RVA: 0x0027ECD0 File Offset: 0x0027CED0
		public static LocalizedString RegistryAccessSecurityExceptionReadValue(string key, string value)
		{
			return new LocalizedString("RegistryAccessSecurityExceptionReadValue", "Ex35B44B", false, true, Strings.ResourceManager, new object[]
			{
				key,
				value
			});
		}

		// Token: 0x0600A23E RID: 41534 RVA: 0x0027ED04 File Offset: 0x0027CF04
		public static LocalizedString AddDagServerMailboxServerIsInDifferentClusterException(string mailboxServer, string thisClusterName, string otherClusterName)
		{
			return new LocalizedString("AddDagServerMailboxServerIsInDifferentClusterException", "", false, false, Strings.ResourceManager, new object[]
			{
				mailboxServer,
				thisClusterName,
				otherClusterName
			});
		}

		// Token: 0x1700352C RID: 13612
		// (get) Token: 0x0600A23F RID: 41535 RVA: 0x0027ED3B File Offset: 0x0027CF3B
		public static LocalizedString ManageDelegation2ProvisioningInDNS
		{
			get
			{
				return new LocalizedString("ManageDelegation2ProvisioningInDNS", "ExBF7F56", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A240 RID: 41536 RVA: 0x0027ED5C File Offset: 0x0027CF5C
		public static LocalizedString ConfirmationMessageNewAuthRedirect(string name)
		{
			return new LocalizedString("ConfirmationMessageNewAuthRedirect", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x0600A241 RID: 41537 RVA: 0x0027ED8C File Offset: 0x0027CF8C
		public static LocalizedString WarningDedicatedMailboxPlanDataNotFound(string customAttributeName)
		{
			return new LocalizedString("WarningDedicatedMailboxPlanDataNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				customAttributeName
			});
		}

		// Token: 0x0600A242 RID: 41538 RVA: 0x0027EDBC File Offset: 0x0027CFBC
		public static LocalizedString IsapiFilterNotRemovedException(string parent, string name)
		{
			return new LocalizedString("IsapiFilterNotRemovedException", "Ex4972C6", false, true, Strings.ResourceManager, new object[]
			{
				parent,
				name
			});
		}

		// Token: 0x1700352D RID: 13613
		// (get) Token: 0x0600A243 RID: 41539 RVA: 0x0027EDEF File Offset: 0x0027CFEF
		public static LocalizedString SetupPrereqAnalysis
		{
			get
			{
				return new LocalizedString("SetupPrereqAnalysis", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700352E RID: 13614
		// (get) Token: 0x0600A244 RID: 41540 RVA: 0x0027EE0D File Offset: 0x0027D00D
		public static LocalizedString UninstallContentIndexingServiceTask
		{
			get
			{
				return new LocalizedString("UninstallContentIndexingServiceTask", "Ex0C622E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A245 RID: 41541 RVA: 0x0027EE2C File Offset: 0x0027D02C
		public static LocalizedString CannotAssignCertificateToUMCR(string thumbprint)
		{
			return new LocalizedString("CannotAssignCertificateToUMCR", "", false, false, Strings.ResourceManager, new object[]
			{
				thumbprint
			});
		}

		// Token: 0x1700352F RID: 13615
		// (get) Token: 0x0600A246 RID: 41542 RVA: 0x0027EE5B File Offset: 0x0027D05B
		public static LocalizedString SetupProgressSyncAccountsPollingInterval
		{
			get
			{
				return new LocalizedString("SetupProgressSyncAccountsPollingInterval", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A247 RID: 41543 RVA: 0x0027EE7C File Offset: 0x0027D07C
		public static LocalizedString SenderIPAddressOverlapsServiceProviderIPAddressesId(string ipRange)
		{
			return new LocalizedString("SenderIPAddressOverlapsServiceProviderIPAddressesId", "", false, false, Strings.ResourceManager, new object[]
			{
				ipRange
			});
		}

		// Token: 0x17003530 RID: 13616
		// (get) Token: 0x0600A248 RID: 41544 RVA: 0x0027EEAB File Offset: 0x0027D0AB
		public static LocalizedString ExternalJournalRuleScope
		{
			get
			{
				return new LocalizedString("ExternalJournalRuleScope", "Ex256922", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003531 RID: 13617
		// (get) Token: 0x0600A249 RID: 41545 RVA: 0x0027EEC9 File Offset: 0x0027D0C9
		public static LocalizedString TestMigrationServerAvailabilityPasswordException
		{
			get
			{
				return new LocalizedString("TestMigrationServerAvailabilityPasswordException", "ExAD3F5D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003532 RID: 13618
		// (get) Token: 0x0600A24A RID: 41546 RVA: 0x0027EEE7 File Offset: 0x0027D0E7
		public static LocalizedString CasHealthEasOptionsScenarioDescription
		{
			get
			{
				return new LocalizedString("CasHealthEasOptionsScenarioDescription", "Ex027B9A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A24B RID: 41547 RVA: 0x0027EF08 File Offset: 0x0027D108
		public static LocalizedString VoiceMessageOriginatorAlreadyExists(string contact)
		{
			return new LocalizedString("VoiceMessageOriginatorAlreadyExists", "Ex327B25", false, true, Strings.ResourceManager, new object[]
			{
				contact
			});
		}

		// Token: 0x0600A24C RID: 41548 RVA: 0x0027EF38 File Offset: 0x0027D138
		public static LocalizedString ConfirmationMessageRemoveMailFlowPartnerConfigWithName(string name)
		{
			return new LocalizedString("ConfirmationMessageRemoveMailFlowPartnerConfigWithName", "Ex2BEBD2", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x17003533 RID: 13619
		// (get) Token: 0x0600A24D RID: 41549 RVA: 0x0027EF67 File Offset: 0x0027D167
		public static LocalizedString ProgressStatusRemovingWorkloadManagementPolicyTree
		{
			get
			{
				return new LocalizedString("ProgressStatusRemovingWorkloadManagementPolicyTree", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003534 RID: 13620
		// (get) Token: 0x0600A24E RID: 41550 RVA: 0x0027EF85 File Offset: 0x0027D185
		public static LocalizedString ConfirmationMessageInitializeExchangeLegacyPermissions
		{
			get
			{
				return new LocalizedString("ConfirmationMessageInitializeExchangeLegacyPermissions", "ExE7B8B2", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003535 RID: 13621
		// (get) Token: 0x0600A24F RID: 41551 RVA: 0x0027EFA3 File Offset: 0x0027D1A3
		public static LocalizedString CopyStatusSeeding
		{
			get
			{
				return new LocalizedString("CopyStatusSeeding", "Ex347D27", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003536 RID: 13622
		// (get) Token: 0x0600A250 RID: 41552 RVA: 0x0027EFC1 File Offset: 0x0027D1C1
		public static LocalizedString ConfirmationMessageTestOrganizationRelationship
		{
			get
			{
				return new LocalizedString("ConfirmationMessageTestOrganizationRelationship", "ExB659BA", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A251 RID: 41553 RVA: 0x0027EFE0 File Offset: 0x0027D1E0
		public static LocalizedString ErrorInvalidEndpointType(string endpointId, string type)
		{
			return new LocalizedString("ErrorInvalidEndpointType", "", false, false, Strings.ResourceManager, new object[]
			{
				endpointId,
				type
			});
		}

		// Token: 0x0600A252 RID: 41554 RVA: 0x0027F014 File Offset: 0x0027D214
		public static LocalizedString UceContentFilterAlreadyExists(string dn)
		{
			return new LocalizedString("UceContentFilterAlreadyExists", "Ex8A64DC", false, true, Strings.ResourceManager, new object[]
			{
				dn
			});
		}

		// Token: 0x17003537 RID: 13623
		// (get) Token: 0x0600A253 RID: 41555 RVA: 0x0027F043 File Offset: 0x0027D243
		public static LocalizedString UninstallOldAssistantsServiceTask
		{
			get
			{
				return new LocalizedString("UninstallOldAssistantsServiceTask", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A254 RID: 41556 RVA: 0x0027F064 File Offset: 0x0027D264
		public static LocalizedString ErrorInheritedObjectTypeNotUnique(string idStringValue)
		{
			return new LocalizedString("ErrorInheritedObjectTypeNotUnique", "Ex142F0C", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		// Token: 0x0600A255 RID: 41557 RVA: 0x0027F094 File Offset: 0x0027D294
		public static LocalizedString LaunchSubTask(string task)
		{
			return new LocalizedString("LaunchSubTask", "Ex1623EE", false, true, Strings.ResourceManager, new object[]
			{
				task
			});
		}

		// Token: 0x17003538 RID: 13624
		// (get) Token: 0x0600A256 RID: 41558 RVA: 0x0027F0C3 File Offset: 0x0027D2C3
		public static LocalizedString ReservedString4
		{
			get
			{
				return new LocalizedString("ReservedString4", "ExA1B0AC", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A257 RID: 41559 RVA: 0x0027F0E4 File Offset: 0x0027D2E4
		public static LocalizedString AdminGroupNotFoundException(string adminGroup)
		{
			return new LocalizedString("AdminGroupNotFoundException", "ExBE8507", false, true, Strings.ResourceManager, new object[]
			{
				adminGroup
			});
		}

		// Token: 0x17003539 RID: 13625
		// (get) Token: 0x0600A258 RID: 41560 RVA: 0x0027F113 File Offset: 0x0027D313
		public static LocalizedString DeviceWipePending
		{
			get
			{
				return new LocalizedString("DeviceWipePending", "Ex4A1308", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A259 RID: 41561 RVA: 0x0027F134 File Offset: 0x0027D334
		public static LocalizedString ConfirmationMessageSetOutboundConnector(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetOutboundConnector", "", false, false, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x0600A25A RID: 41562 RVA: 0x0027F164 File Offset: 0x0027D364
		public static LocalizedString SearchMaxResultCountWarning(int maxResultRows)
		{
			return new LocalizedString("SearchMaxResultCountWarning", "", false, false, Strings.ResourceManager, new object[]
			{
				maxResultRows
			});
		}

		// Token: 0x0600A25B RID: 41563 RVA: 0x0027F198 File Offset: 0x0027D398
		public static LocalizedString RpcHttpAvailability(string server)
		{
			return new LocalizedString("RpcHttpAvailability", "ExA1D158", false, true, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		// Token: 0x0600A25C RID: 41564 RVA: 0x0027F1C8 File Offset: 0x0027D3C8
		public static LocalizedString LogSourceServerRusUnavaliable(string server, string details)
		{
			return new LocalizedString("LogSourceServerRusUnavaliable", "ExC7A3D1", false, true, Strings.ResourceManager, new object[]
			{
				server,
				details
			});
		}

		// Token: 0x1700353A RID: 13626
		// (get) Token: 0x0600A25D RID: 41565 RVA: 0x0027F1FB File Offset: 0x0027D3FB
		public static LocalizedString InfoEnterpriseMode
		{
			get
			{
				return new LocalizedString("InfoEnterpriseMode", "Ex01993F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700353B RID: 13627
		// (get) Token: 0x0600A25E RID: 41566 RVA: 0x0027F219 File Offset: 0x0027D419
		public static LocalizedString ServiceNameAutoDiscover
		{
			get
			{
				return new LocalizedString("ServiceNameAutoDiscover", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700353C RID: 13628
		// (get) Token: 0x0600A25F RID: 41567 RVA: 0x0027F237 File Offset: 0x0027D437
		public static LocalizedString RemoveRemoteAccountSyncCache
		{
			get
			{
				return new LocalizedString("RemoveRemoteAccountSyncCache", "Ex4D47F3", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A260 RID: 41568 RVA: 0x0027F258 File Offset: 0x0027D458
		public static LocalizedString ErrorLiveDomainReservationError(string message)
		{
			return new LocalizedString("ErrorLiveDomainReservationError", "Ex545171", false, true, Strings.ResourceManager, new object[]
			{
				message
			});
		}

		// Token: 0x0600A261 RID: 41569 RVA: 0x0027F288 File Offset: 0x0027D488
		public static LocalizedString OabFilesLeft(string oab, string location)
		{
			return new LocalizedString("OabFilesLeft", "Ex20B594", false, true, Strings.ResourceManager, new object[]
			{
				oab,
				location
			});
		}

		// Token: 0x1700353D RID: 13629
		// (get) Token: 0x0600A262 RID: 41570 RVA: 0x0027F2BB File Offset: 0x0027D4BB
		public static LocalizedString DualWriteDeleteWarningMessage
		{
			get
			{
				return new LocalizedString("DualWriteDeleteWarningMessage", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700353E RID: 13630
		// (get) Token: 0x0600A263 RID: 41571 RVA: 0x0027F2D9 File Offset: 0x0027D4D9
		public static LocalizedString ConfirmSetProvisioningReconciliationConfig
		{
			get
			{
				return new LocalizedString("ConfirmSetProvisioningReconciliationConfig", "ExBB5EE8", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A264 RID: 41572 RVA: 0x0027F2F8 File Offset: 0x0027D4F8
		public static LocalizedString ErrorMoveAddressListToChildOrSelf(string id, string idTarget)
		{
			return new LocalizedString("ErrorMoveAddressListToChildOrSelf", "Ex1FF5A8", false, true, Strings.ResourceManager, new object[]
			{
				id,
				idTarget
			});
		}

		// Token: 0x0600A265 RID: 41573 RVA: 0x0027F32C File Offset: 0x0027D52C
		public static LocalizedString BPAConfigurationErrorFound(string error)
		{
			return new LocalizedString("BPAConfigurationErrorFound", "Ex28883C", false, true, Strings.ResourceManager, new object[]
			{
				error
			});
		}

		// Token: 0x0600A266 RID: 41574 RVA: 0x0027F35C File Offset: 0x0027D55C
		public static LocalizedString MacroNameNotSpecified(string attribute)
		{
			return new LocalizedString("MacroNameNotSpecified", "Ex85A665", false, true, Strings.ResourceManager, new object[]
			{
				attribute
			});
		}

		// Token: 0x1700353F RID: 13631
		// (get) Token: 0x0600A267 RID: 41575 RVA: 0x0027F38B File Offset: 0x0027D58B
		public static LocalizedString UninstallThrottlingServiceTask
		{
			get
			{
				return new LocalizedString("UninstallThrottlingServiceTask", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A268 RID: 41576 RVA: 0x0027F3AC File Offset: 0x0027D5AC
		public static LocalizedString MRSCorruptDataInDiagnostics(string element, string value)
		{
			return new LocalizedString("MRSCorruptDataInDiagnostics", "", false, false, Strings.ResourceManager, new object[]
			{
				element,
				value
			});
		}

		// Token: 0x17003540 RID: 13632
		// (get) Token: 0x0600A269 RID: 41577 RVA: 0x0027F3DF File Offset: 0x0027D5DF
		public static LocalizedString SetupProgressPublicFoldersEnabled
		{
			get
			{
				return new LocalizedString("SetupProgressPublicFoldersEnabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003541 RID: 13633
		// (get) Token: 0x0600A26A RID: 41578 RVA: 0x0027F3FD File Offset: 0x0027D5FD
		public static LocalizedString NotificationEmailsParameterMissing
		{
			get
			{
				return new LocalizedString("NotificationEmailsParameterMissing", "Ex4EA731", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A26B RID: 41579 RVA: 0x0027F41C File Offset: 0x0027D61C
		public static LocalizedString ClassificationRuleCollectionNonUniqueRuleIdViolation(string offendingRuleIds)
		{
			return new LocalizedString("ClassificationRuleCollectionNonUniqueRuleIdViolation", "", false, false, Strings.ResourceManager, new object[]
			{
				offendingRuleIds
			});
		}

		// Token: 0x17003542 RID: 13634
		// (get) Token: 0x0600A26C RID: 41580 RVA: 0x0027F44B File Offset: 0x0027D64B
		public static LocalizedString CasHealthWebAppNoCasArgumentError
		{
			get
			{
				return new LocalizedString("CasHealthWebAppNoCasArgumentError", "Ex3E2DA3", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A26D RID: 41581 RVA: 0x0027F46C File Offset: 0x0027D66C
		public static LocalizedString ConfirmationMessageNewAdminAuditLogSearch(string org)
		{
			return new LocalizedString("ConfirmationMessageNewAdminAuditLogSearch", "Ex7034EA", false, true, Strings.ResourceManager, new object[]
			{
				org
			});
		}

		// Token: 0x0600A26E RID: 41582 RVA: 0x0027F49C File Offset: 0x0027D69C
		public static LocalizedString ErrorOOBUpgradeInProgress(string fromservicePlan, string toserviceplan)
		{
			return new LocalizedString("ErrorOOBUpgradeInProgress", "Ex941ECA", false, true, Strings.ResourceManager, new object[]
			{
				fromservicePlan,
				toserviceplan
			});
		}

		// Token: 0x17003543 RID: 13635
		// (get) Token: 0x0600A26F RID: 41583 RVA: 0x0027F4CF File Offset: 0x0027D6CF
		public static LocalizedString SetupProgressCreateExchangeMimeTypes
		{
			get
			{
				return new LocalizedString("SetupProgressCreateExchangeMimeTypes", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A270 RID: 41584 RVA: 0x0027F4F0 File Offset: 0x0027D6F0
		public static LocalizedString ShouldContinueMoreMailboxesThanMaxSearch(int mailboxCount, uint maxNumber)
		{
			return new LocalizedString("ShouldContinueMoreMailboxesThanMaxSearch", "", false, false, Strings.ResourceManager, new object[]
			{
				mailboxCount,
				maxNumber
			});
		}

		// Token: 0x0600A271 RID: 41585 RVA: 0x0027F530 File Offset: 0x0027D730
		public static LocalizedString ErrorCannotDisableRemotePowershelForLastDelegatingOrgAdmin(string id)
		{
			return new LocalizedString("ErrorCannotDisableRemotePowershelForLastDelegatingOrgAdmin", "ExC2E600", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x0600A272 RID: 41586 RVA: 0x0027F560 File Offset: 0x0027D760
		public static LocalizedString ImplicitPartitionIdSupplied(string partitionId)
		{
			return new LocalizedString("ImplicitPartitionIdSupplied", "", false, false, Strings.ResourceManager, new object[]
			{
				partitionId
			});
		}

		// Token: 0x0600A273 RID: 41587 RVA: 0x0027F590 File Offset: 0x0027D790
		public static LocalizedString AddResubmitRequestConfirmation(string startTime, string endTime, string destination)
		{
			return new LocalizedString("AddResubmitRequestConfirmation", "", false, false, Strings.ResourceManager, new object[]
			{
				startTime,
				endTime,
				destination
			});
		}

		// Token: 0x17003544 RID: 13636
		// (get) Token: 0x0600A274 RID: 41588 RVA: 0x0027F5C7 File Offset: 0x0027D7C7
		public static LocalizedString ShouldContinueToExpandGroupsForHold
		{
			get
			{
				return new LocalizedString("ShouldContinueToExpandGroupsForHold", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A275 RID: 41589 RVA: 0x0027F5E8 File Offset: 0x0027D7E8
		public static LocalizedString RemoveADServerMetadataUsingDC(string dc)
		{
			return new LocalizedString("RemoveADServerMetadataUsingDC", "Ex8F8DD0", false, true, Strings.ResourceManager, new object[]
			{
				dc
			});
		}

		// Token: 0x0600A276 RID: 41590 RVA: 0x0027F618 File Offset: 0x0027D818
		public static LocalizedString ConfirmationMessageSetEventLogLevel(string Identity, string Level)
		{
			return new LocalizedString("ConfirmationMessageSetEventLogLevel", "Ex804E13", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				Level
			});
		}

		// Token: 0x0600A277 RID: 41591 RVA: 0x0027F64C File Offset: 0x0027D84C
		public static LocalizedString WarningDeprovisioningCoexistenceDomain(string domain)
		{
			return new LocalizedString("WarningDeprovisioningCoexistenceDomain", "", false, false, Strings.ResourceManager, new object[]
			{
				domain
			});
		}

		// Token: 0x17003545 RID: 13637
		// (get) Token: 0x0600A278 RID: 41592 RVA: 0x0027F67B File Offset: 0x0027D87B
		public static LocalizedString HybridMailflowGetFfoDCPublicIPAddressesFailed
		{
			get
			{
				return new LocalizedString("HybridMailflowGetFfoDCPublicIPAddressesFailed", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A279 RID: 41593 RVA: 0x0027F69C File Offset: 0x0027D89C
		public static LocalizedString ConfirmationMessageNewEdgeSubscriptionWarnEdgeFQDNMustbeResolvable(string site, string edgeFQDN, string port)
		{
			return new LocalizedString("ConfirmationMessageNewEdgeSubscriptionWarnEdgeFQDNMustbeResolvable", "", false, false, Strings.ResourceManager, new object[]
			{
				site,
				edgeFQDN,
				port
			});
		}

		// Token: 0x0600A27A RID: 41594 RVA: 0x0027F6D4 File Offset: 0x0027D8D4
		public static LocalizedString ConfirmationMessageRemoveEcpVirtualDirectory(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveEcpVirtualDirectory", "Ex7546A1", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x0600A27B RID: 41595 RVA: 0x0027F704 File Offset: 0x0027D904
		public static LocalizedString ConfirmationMessageDisableHostedContentFilterRule(string identity)
		{
			return new LocalizedString("ConfirmationMessageDisableHostedContentFilterRule", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x0600A27C RID: 41596 RVA: 0x0027F734 File Offset: 0x0027D934
		public static LocalizedString ConfirmationMessageSwitchMobileMailboxDefaultPolicy(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSwitchMobileMailboxDefaultPolicy", "ExF89B9B", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x0600A27D RID: 41597 RVA: 0x0027F764 File Offset: 0x0027D964
		public static LocalizedString ErrorSharingPolicyNotUnique(string idStringValue)
		{
			return new LocalizedString("ErrorSharingPolicyNotUnique", "Ex77C41D", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		// Token: 0x0600A27E RID: 41598 RVA: 0x0027F794 File Offset: 0x0027D994
		public static LocalizedString ErrorNotAuthorizedForParameter(string parameterName)
		{
			return new LocalizedString("ErrorNotAuthorizedForParameter", "", false, false, Strings.ResourceManager, new object[]
			{
				parameterName
			});
		}

		// Token: 0x0600A27F RID: 41599 RVA: 0x0027F7C4 File Offset: 0x0027D9C4
		public static LocalizedString ConfirmationMessageNewCmdletExtensionAgent(string assembly, string classFactory)
		{
			return new LocalizedString("ConfirmationMessageNewCmdletExtensionAgent", "Ex1CC33A", false, true, Strings.ResourceManager, new object[]
			{
				assembly,
				classFactory
			});
		}

		// Token: 0x0600A280 RID: 41600 RVA: 0x0027F7F8 File Offset: 0x0027D9F8
		public static LocalizedString ConfirmationMessageSetAutoAcceptMailboxSettings(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetAutoAcceptMailboxSettings", "Ex449F08", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x0600A281 RID: 41601 RVA: 0x0027F828 File Offset: 0x0027DA28
		public static LocalizedString ConfirmationMessageEnableAddressListPaging(string org)
		{
			return new LocalizedString("ConfirmationMessageEnableAddressListPaging", "Ex79739C", false, true, Strings.ResourceManager, new object[]
			{
				org
			});
		}

		// Token: 0x0600A282 RID: 41602 RVA: 0x0027F858 File Offset: 0x0027DA58
		public static LocalizedString ExecutingScript(string script)
		{
			return new LocalizedString("ExecutingScript", "ExA63131", false, true, Strings.ResourceManager, new object[]
			{
				script
			});
		}

		// Token: 0x17003546 RID: 13638
		// (get) Token: 0x0600A283 RID: 41603 RVA: 0x0027F887 File Offset: 0x0027DA87
		public static LocalizedString MigrationAutoStopForInProgressOnly
		{
			get
			{
				return new LocalizedString("MigrationAutoStopForInProgressOnly", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A284 RID: 41604 RVA: 0x0027F8A8 File Offset: 0x0027DAA8
		public static LocalizedString ConfirmationMessageRemoveMailUser(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveMailUser", "ExCDA1FB", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x17003547 RID: 13639
		// (get) Token: 0x0600A285 RID: 41605 RVA: 0x0027F8D7 File Offset: 0x0027DAD7
		public static LocalizedString ErrorLogFolderPathNotAvailable
		{
			get
			{
				return new LocalizedString("ErrorLogFolderPathNotAvailable", "Ex2C512D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A286 RID: 41606 RVA: 0x0027F8F8 File Offset: 0x0027DAF8
		public static LocalizedString DagTaskClusteringShouldBeDisabledException(string serverName)
		{
			return new LocalizedString("DagTaskClusteringShouldBeDisabledException", "", false, false, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		// Token: 0x0600A287 RID: 41607 RVA: 0x0027F928 File Offset: 0x0027DB28
		public static LocalizedString ComponentEmpty(string component)
		{
			return new LocalizedString("ComponentEmpty", "Ex23081B", false, true, Strings.ResourceManager, new object[]
			{
				component
			});
		}

		// Token: 0x0600A288 RID: 41608 RVA: 0x0027F958 File Offset: 0x0027DB58
		public static LocalizedString ErrorInvalidConfigScopeOnNonHosterRoleAssignment(string id)
		{
			return new LocalizedString("ErrorInvalidConfigScopeOnNonHosterRoleAssignment", "Ex9BDEDD", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x0600A289 RID: 41609 RVA: 0x0027F988 File Offset: 0x0027DB88
		public static LocalizedString VerboseDeletePFTree(string id)
		{
			return new LocalizedString("VerboseDeletePFTree", "Ex64FCF0", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x17003548 RID: 13640
		// (get) Token: 0x0600A28A RID: 41610 RVA: 0x0027F9B7 File Offset: 0x0027DBB7
		public static LocalizedString ErrorPublicFolderReferralHasWrittenToServer
		{
			get
			{
				return new LocalizedString("ErrorPublicFolderReferralHasWrittenToServer", "Ex18239B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003549 RID: 13641
		// (get) Token: 0x0600A28B RID: 41611 RVA: 0x0027F9D5 File Offset: 0x0027DBD5
		public static LocalizedString SetupProgressInstallingFreeBusyFolder
		{
			get
			{
				return new LocalizedString("SetupProgressInstallingFreeBusyFolder", "Ex0D22FB", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A28C RID: 41612 RVA: 0x0027F9F4 File Offset: 0x0027DBF4
		public static LocalizedString ConfirmationMessageNewMigrationEndpoint(string endpointName)
		{
			return new LocalizedString("ConfirmationMessageNewMigrationEndpoint", "", false, false, Strings.ResourceManager, new object[]
			{
				endpointName
			});
		}

		// Token: 0x0600A28D RID: 41613 RVA: 0x0027FA24 File Offset: 0x0027DC24
		public static LocalizedString WarningMarkNewTemplatesAsDistributedForCreatingProtectionRules(string tpdName)
		{
			return new LocalizedString("WarningMarkNewTemplatesAsDistributedForCreatingProtectionRules", "Ex83CBEC", false, true, Strings.ResourceManager, new object[]
			{
				tpdName
			});
		}

		// Token: 0x1700354A RID: 13642
		// (get) Token: 0x0600A28E RID: 41614 RVA: 0x0027FA53 File Offset: 0x0027DC53
		public static LocalizedString MigrationStartAfterAndAutoStartExclusive
		{
			get
			{
				return new LocalizedString("MigrationStartAfterAndAutoStartExclusive", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A28F RID: 41615 RVA: 0x0027FA74 File Offset: 0x0027DC74
		public static LocalizedString ConfirmationMessageSetPswsVirtualDirectory(string name, string server)
		{
			return new LocalizedString("ConfirmationMessageSetPswsVirtualDirectory", "", false, false, Strings.ResourceManager, new object[]
			{
				name,
				server
			});
		}

		// Token: 0x0600A290 RID: 41616 RVA: 0x0027FAA8 File Offset: 0x0027DCA8
		public static LocalizedString ErrorLogDirectoryNotExist(string directory)
		{
			return new LocalizedString("ErrorLogDirectoryNotExist", "Ex28331F", false, true, Strings.ResourceManager, new object[]
			{
				directory
			});
		}

		// Token: 0x1700354B RID: 13643
		// (get) Token: 0x0600A291 RID: 41617 RVA: 0x0027FAD7 File Offset: 0x0027DCD7
		public static LocalizedString UninstallFfoWebServiceRoleDescription
		{
			get
			{
				return new LocalizedString("UninstallFfoWebServiceRoleDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700354C RID: 13644
		// (get) Token: 0x0600A292 RID: 41618 RVA: 0x0027FAF5 File Offset: 0x0027DCF5
		public static LocalizedString LanguagePackDescription
		{
			get
			{
				return new LocalizedString("LanguagePackDescription", "Ex56AB4F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A293 RID: 41619 RVA: 0x0027FB14 File Offset: 0x0027DD14
		public static LocalizedString WarningTemplateNotModified(string identity)
		{
			return new LocalizedString("WarningTemplateNotModified", "ExAEAC51", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x0600A294 RID: 41620 RVA: 0x0027FB44 File Offset: 0x0027DD44
		public static LocalizedString ConfirmationMessageSetFederationTrust2(string Identity, string Thumbprint)
		{
			return new LocalizedString("ConfirmationMessageSetFederationTrust2", "Ex0E373B", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				Thumbprint
			});
		}

		// Token: 0x1700354D RID: 13645
		// (get) Token: 0x0600A295 RID: 41621 RVA: 0x0027FB77 File Offset: 0x0027DD77
		public static LocalizedString InfoImportingTpdFromRmsOnlineCheckedNoTemplates
		{
			get
			{
				return new LocalizedString("InfoImportingTpdFromRmsOnlineCheckedNoTemplates", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A296 RID: 41622 RVA: 0x0027FB98 File Offset: 0x0027DD98
		public static LocalizedString VerboseSettingPassword(string id)
		{
			return new LocalizedString("VerboseSettingPassword", "ExB591A5", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x1700354E RID: 13646
		// (get) Token: 0x0600A297 RID: 41623 RVA: 0x0027FBC7 File Offset: 0x0027DDC7
		public static LocalizedString ConfirmationExportMailboxDiagnosticLogs
		{
			get
			{
				return new LocalizedString("ConfirmationExportMailboxDiagnosticLogs", "ExC31E43", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700354F RID: 13647
		// (get) Token: 0x0600A298 RID: 41624 RVA: 0x0027FBE5 File Offset: 0x0027DDE5
		public static LocalizedString ErrorModifyE12ServerNotAllowed
		{
			get
			{
				return new LocalizedString("ErrorModifyE12ServerNotAllowed", "Ex5F1D5D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003550 RID: 13648
		// (get) Token: 0x0600A299 RID: 41625 RVA: 0x0027FC03 File Offset: 0x0027DE03
		public static LocalizedString ErrorRemoveMailboxWithJournalArchive
		{
			get
			{
				return new LocalizedString("ErrorRemoveMailboxWithJournalArchive", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A29A RID: 41626 RVA: 0x0027FC24 File Offset: 0x0027DE24
		public static LocalizedString CasHealthOwaAuthTypesSupported1(string method1)
		{
			return new LocalizedString("CasHealthOwaAuthTypesSupported1", "Ex91B5C7", false, true, Strings.ResourceManager, new object[]
			{
				method1
			});
		}

		// Token: 0x17003551 RID: 13649
		// (get) Token: 0x0600A29B RID: 41627 RVA: 0x0027FC53 File Offset: 0x0027DE53
		public static LocalizedString InvalidProductKey
		{
			get
			{
				return new LocalizedString("InvalidProductKey", "Ex8567C0", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A29C RID: 41628 RVA: 0x0027FC74 File Offset: 0x0027DE74
		public static LocalizedString CompletedMoveHistoryEntry(string completionTimestamp, string dbName, string mailboxSize, string moveDuration)
		{
			return new LocalizedString("CompletedMoveHistoryEntry", "ExD5EFF9", false, true, Strings.ResourceManager, new object[]
			{
				completionTimestamp,
				dbName,
				mailboxSize,
				moveDuration
			});
		}

		// Token: 0x17003552 RID: 13650
		// (get) Token: 0x0600A29D RID: 41629 RVA: 0x0027FCAF File Offset: 0x0027DEAF
		public static LocalizedString CannotLocateCurrentCertificate
		{
			get
			{
				return new LocalizedString("CannotLocateCurrentCertificate", "Ex3554B1", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A29E RID: 41630 RVA: 0x0027FCD0 File Offset: 0x0027DED0
		public static LocalizedString DagNetworkHasNoNicForNode(string logicalNetName, string nodeName)
		{
			return new LocalizedString("DagNetworkHasNoNicForNode", "", false, false, Strings.ResourceManager, new object[]
			{
				logicalNetName,
				nodeName
			});
		}

		// Token: 0x17003553 RID: 13651
		// (get) Token: 0x0600A29F RID: 41631 RVA: 0x0027FD03 File Offset: 0x0027DF03
		public static LocalizedString MtrtRouteMessageUsingConnector
		{
			get
			{
				return new LocalizedString("MtrtRouteMessageUsingConnector", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003554 RID: 13652
		// (get) Token: 0x0600A2A0 RID: 41632 RVA: 0x0027FD21 File Offset: 0x0027DF21
		public static LocalizedString SetupProgressInstallingContentIndexingMSI
		{
			get
			{
				return new LocalizedString("SetupProgressInstallingContentIndexingMSI", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A2A1 RID: 41633 RVA: 0x0027FD40 File Offset: 0x0027DF40
		public static LocalizedString MigrationBatchIsCorrupt(string jobName)
		{
			return new LocalizedString("MigrationBatchIsCorrupt", "", false, false, Strings.ResourceManager, new object[]
			{
				jobName
			});
		}

		// Token: 0x17003555 RID: 13653
		// (get) Token: 0x0600A2A2 RID: 41634 RVA: 0x0027FD6F File Offset: 0x0027DF6F
		public static LocalizedString ErrorSettingRealmOnFirstOrg
		{
			get
			{
				return new LocalizedString("ErrorSettingRealmOnFirstOrg", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A2A3 RID: 41635 RVA: 0x0027FD90 File Offset: 0x0027DF90
		public static LocalizedString ConfirmationProcessInputLog(string filename)
		{
			return new LocalizedString("ConfirmationProcessInputLog", "ExEDD738", false, true, Strings.ResourceManager, new object[]
			{
				filename
			});
		}

		// Token: 0x0600A2A4 RID: 41636 RVA: 0x0027FDC0 File Offset: 0x0027DFC0
		public static LocalizedString MailboxAssistantsServiceCouldNotBeStarted(string serverName, string errorMessage)
		{
			return new LocalizedString("MailboxAssistantsServiceCouldNotBeStarted", "ExD8D14F", false, true, Strings.ResourceManager, new object[]
			{
				serverName,
				errorMessage
			});
		}

		// Token: 0x0600A2A5 RID: 41637 RVA: 0x0027FDF4 File Offset: 0x0027DFF4
		public static LocalizedString ConfirmationMessageSetExchangeRpcClientAccessServer(string server)
		{
			return new LocalizedString("ConfirmationMessageSetExchangeRpcClientAccessServer", "Ex626DD1", false, true, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		// Token: 0x17003556 RID: 13654
		// (get) Token: 0x0600A2A6 RID: 41638 RVA: 0x0027FE23 File Offset: 0x0027E023
		public static LocalizedString FirstRoleAssignmentPolicyMustBeDefault
		{
			get
			{
				return new LocalizedString("FirstRoleAssignmentPolicyMustBeDefault", "ExCFAB8D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A2A7 RID: 41639 RVA: 0x0027FE44 File Offset: 0x0027E044
		public static LocalizedString VerboseDefaultOABWebDistributionEnabled(string DN)
		{
			return new LocalizedString("VerboseDefaultOABWebDistributionEnabled", "Ex1C41D5", false, true, Strings.ResourceManager, new object[]
			{
				DN
			});
		}

		// Token: 0x17003557 RID: 13655
		// (get) Token: 0x0600A2A8 RID: 41640 RVA: 0x0027FE73 File Offset: 0x0027E073
		public static LocalizedString SetupProgressStoppingW3SVCService
		{
			get
			{
				return new LocalizedString("SetupProgressStoppingW3SVCService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003558 RID: 13656
		// (get) Token: 0x0600A2A9 RID: 41641 RVA: 0x0027FE91 File Offset: 0x0027E091
		public static LocalizedString DistributionGroup
		{
			get
			{
				return new LocalizedString("DistributionGroup", "ExB1E4B5", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A2AA RID: 41642 RVA: 0x0027FEB0 File Offset: 0x0027E0B0
		public static LocalizedString SmtpAddressMissingForAutocopy(string userName)
		{
			return new LocalizedString("SmtpAddressMissingForAutocopy", "Ex577128", false, true, Strings.ResourceManager, new object[]
			{
				userName
			});
		}

		// Token: 0x0600A2AB RID: 41643 RVA: 0x0027FEE0 File Offset: 0x0027E0E0
		public static LocalizedString AmMoveRpcCompletedSourceServer(string sourceServer, string targetServer)
		{
			return new LocalizedString("AmMoveRpcCompletedSourceServer", "ExA94BD8", false, true, Strings.ResourceManager, new object[]
			{
				sourceServer,
				targetServer
			});
		}

		// Token: 0x17003559 RID: 13657
		// (get) Token: 0x0600A2AC RID: 41644 RVA: 0x0027FF13 File Offset: 0x0027E113
		public static LocalizedString CannotEditManuallyModifiedRule
		{
			get
			{
				return new LocalizedString("CannotEditManuallyModifiedRule", "Ex98B092", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A2AD RID: 41645 RVA: 0x0027FF34 File Offset: 0x0027E134
		public static LocalizedString EnabledEhfConnectorAlreadyExists(string enabledConnectorDN)
		{
			return new LocalizedString("EnabledEhfConnectorAlreadyExists", "", false, false, Strings.ResourceManager, new object[]
			{
				enabledConnectorDN
			});
		}

		// Token: 0x0600A2AE RID: 41646 RVA: 0x0027FF64 File Offset: 0x0027E164
		public static LocalizedString InfoCouldNotFindMAPITLHInAdminGroup(string ag)
		{
			return new LocalizedString("InfoCouldNotFindMAPITLHInAdminGroup", "ExD78F0A", false, true, Strings.ResourceManager, new object[]
			{
				ag
			});
		}

		// Token: 0x0600A2AF RID: 41647 RVA: 0x0027FF94 File Offset: 0x0027E194
		public static LocalizedString ExchangeUpgradeBucketSourceIncludedInTarget(string source, string target)
		{
			return new LocalizedString("ExchangeUpgradeBucketSourceIncludedInTarget", "", false, false, Strings.ResourceManager, new object[]
			{
				source,
				target
			});
		}

		// Token: 0x0600A2B0 RID: 41648 RVA: 0x0027FFC8 File Offset: 0x0027E1C8
		public static LocalizedString ErrorPublicFolderNotFound(string idStringValue)
		{
			return new LocalizedString("ErrorPublicFolderNotFound", "Ex573FB5", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		// Token: 0x0600A2B1 RID: 41649 RVA: 0x0027FFF8 File Offset: 0x0027E1F8
		public static LocalizedString ConfirmationMessageClearTextMessagingAccount(string Identity)
		{
			return new LocalizedString("ConfirmationMessageClearTextMessagingAccount", "ExF57D8F", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x1700355A RID: 13658
		// (get) Token: 0x0600A2B2 RID: 41650 RVA: 0x00280027 File Offset: 0x0027E227
		public static LocalizedString MalboxFolderRightsDeleteAllItems
		{
			get
			{
				return new LocalizedString("MalboxFolderRightsDeleteAllItems", "Ex375566", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700355B RID: 13659
		// (get) Token: 0x0600A2B3 RID: 41651 RVA: 0x00280045 File Offset: 0x0027E245
		public static LocalizedString ProtocolSettings
		{
			get
			{
				return new LocalizedString("ProtocolSettings", "Ex9AAB37", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700355C RID: 13660
		// (get) Token: 0x0600A2B4 RID: 41652 RVA: 0x00280063 File Offset: 0x0027E263
		public static LocalizedString TestOrganizationRelationshipWarning
		{
			get
			{
				return new LocalizedString("TestOrganizationRelationshipWarning", "Ex31DD6C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A2B5 RID: 41653 RVA: 0x00280084 File Offset: 0x0027E284
		public static LocalizedString ErrorCannotRemoveAssociatedThrottlingPolicy(string policyName)
		{
			return new LocalizedString("ErrorCannotRemoveAssociatedThrottlingPolicy", "ExAA682A", false, true, Strings.ResourceManager, new object[]
			{
				policyName
			});
		}

		// Token: 0x1700355D RID: 13661
		// (get) Token: 0x0600A2B6 RID: 41654 RVA: 0x002800B3 File Offset: 0x0027E2B3
		public static LocalizedString WarningReportNotAvailable
		{
			get
			{
				return new LocalizedString("WarningReportNotAvailable", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700355E RID: 13662
		// (get) Token: 0x0600A2B7 RID: 41655 RVA: 0x002800D1 File Offset: 0x0027E2D1
		public static LocalizedString ExceptionHeader
		{
			get
			{
				return new LocalizedString("ExceptionHeader", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700355F RID: 13663
		// (get) Token: 0x0600A2B8 RID: 41656 RVA: 0x002800EF File Offset: 0x0027E2EF
		public static LocalizedString SetupProgressSyncAccountsTimeBeforeInactive
		{
			get
			{
				return new LocalizedString("SetupProgressSyncAccountsTimeBeforeInactive", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003560 RID: 13664
		// (get) Token: 0x0600A2B9 RID: 41657 RVA: 0x0028010D File Offset: 0x0027E30D
		public static LocalizedString TestSearchTaskBaseError
		{
			get
			{
				return new LocalizedString("TestSearchTaskBaseError", "Ex7AAB49", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A2BA RID: 41658 RVA: 0x0028012C File Offset: 0x0027E32C
		public static LocalizedString ConfirmationMessageNewMalwareFilterPolicy(string name)
		{
			return new LocalizedString("ConfirmationMessageNewMalwareFilterPolicy", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x0600A2BB RID: 41659 RVA: 0x0028015C File Offset: 0x0027E35C
		public static LocalizedString OrganizationDataValidationException(string validationError)
		{
			return new LocalizedString("OrganizationDataValidationException", "ExB1F02C", false, true, Strings.ResourceManager, new object[]
			{
				validationError
			});
		}

		// Token: 0x17003561 RID: 13665
		// (get) Token: 0x0600A2BC RID: 41660 RVA: 0x0028018B File Offset: 0x0027E38B
		public static LocalizedString NoNameArgument
		{
			get
			{
				return new LocalizedString("NoNameArgument", "Ex6FE5D3", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A2BD RID: 41661 RVA: 0x002801AC File Offset: 0x0027E3AC
		public static LocalizedString ExchangeSettingsBadFormatOfConfigPair(string pair)
		{
			return new LocalizedString("ExchangeSettingsBadFormatOfConfigPair", "", false, false, Strings.ResourceManager, new object[]
			{
				pair
			});
		}

		// Token: 0x0600A2BE RID: 41662 RVA: 0x002801DC File Offset: 0x0027E3DC
		public static LocalizedString ErrorHttpsBindingNotExist(string configFile)
		{
			return new LocalizedString("ErrorHttpsBindingNotExist", "Ex2A3961", false, true, Strings.ResourceManager, new object[]
			{
				configFile
			});
		}

		// Token: 0x17003562 RID: 13666
		// (get) Token: 0x0600A2BF RID: 41663 RVA: 0x0028020B File Offset: 0x0027E40B
		public static LocalizedString CannotLocateFederationInfo
		{
			get
			{
				return new LocalizedString("CannotLocateFederationInfo", "ExC22B99", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003563 RID: 13667
		// (get) Token: 0x0600A2C0 RID: 41664 RVA: 0x00280229 File Offset: 0x0027E429
		public static LocalizedString GetFederationInformationProgress
		{
			get
			{
				return new LocalizedString("GetFederationInformationProgress", "Ex9FFFE7", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003564 RID: 13668
		// (get) Token: 0x0600A2C1 RID: 41665 RVA: 0x00280247 File Offset: 0x0027E447
		public static LocalizedString SetupProgressInstallingMsFteMSI
		{
			get
			{
				return new LocalizedString("SetupProgressInstallingMsFteMSI", "Ex1C73E6", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A2C2 RID: 41666 RVA: 0x00280268 File Offset: 0x0027E468
		public static LocalizedString ExceptionPerfCounterLodctrFailed(int errorCode)
		{
			return new LocalizedString("ExceptionPerfCounterLodctrFailed", "Ex1F286C", false, true, Strings.ResourceManager, new object[]
			{
				errorCode
			});
		}

		// Token: 0x0600A2C3 RID: 41667 RVA: 0x0028029C File Offset: 0x0027E49C
		public static LocalizedString ConfirmationMessageSetAccountPartition(string Name)
		{
			return new LocalizedString("ConfirmationMessageSetAccountPartition", "", false, false, Strings.ResourceManager, new object[]
			{
				Name
			});
		}

		// Token: 0x0600A2C4 RID: 41668 RVA: 0x002802CC File Offset: 0x0027E4CC
		public static LocalizedString ConfirmSearchMailboxDeleteContent(string task)
		{
			return new LocalizedString("ConfirmSearchMailboxDeleteContent", "ExD18FEF", false, true, Strings.ResourceManager, new object[]
			{
				task
			});
		}

		// Token: 0x0600A2C5 RID: 41669 RVA: 0x002802FC File Offset: 0x0027E4FC
		public static LocalizedString ErrorRollbackGlsExpected(string identity)
		{
			return new LocalizedString("ErrorRollbackGlsExpected", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x0600A2C6 RID: 41670 RVA: 0x0028032C File Offset: 0x0027E52C
		public static LocalizedString WarningSetMailboxLitigationOwnerSMTP(string owner)
		{
			return new LocalizedString("WarningSetMailboxLitigationOwnerSMTP", "", false, false, Strings.ResourceManager, new object[]
			{
				owner
			});
		}

		// Token: 0x0600A2C7 RID: 41671 RVA: 0x0028035C File Offset: 0x0027E55C
		public static LocalizedString ActiveDirectoryConnectivityTestFailed(string operation, string error, string exception)
		{
			return new LocalizedString("ActiveDirectoryConnectivityTestFailed", "", false, false, Strings.ResourceManager, new object[]
			{
				operation,
				error,
				exception
			});
		}

		// Token: 0x0600A2C8 RID: 41672 RVA: 0x00280394 File Offset: 0x0027E594
		public static LocalizedString ConfirmationMessageSetMailboxWithWindowsLiveID(string Identity, string liveID)
		{
			return new LocalizedString("ConfirmationMessageSetMailboxWithWindowsLiveID", "ExDFAC9A", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				liveID
			});
		}

		// Token: 0x0600A2C9 RID: 41673 RVA: 0x002803C8 File Offset: 0x0027E5C8
		public static LocalizedString ErrorSharedConfigurationNotFound(string programid, string offerid, string version)
		{
			return new LocalizedString("ErrorSharedConfigurationNotFound", "Ex42D193", false, true, Strings.ResourceManager, new object[]
			{
				programid,
				offerid,
				version
			});
		}

		// Token: 0x17003565 RID: 13669
		// (get) Token: 0x0600A2CA RID: 41674 RVA: 0x002803FF File Offset: 0x0027E5FF
		public static LocalizedString ErrorCannotSpecifyAccountNamespaceWithoutTrust
		{
			get
			{
				return new LocalizedString("ErrorCannotSpecifyAccountNamespaceWithoutTrust", "ExA52966", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A2CB RID: 41675 RVA: 0x00280420 File Offset: 0x0027E620
		public static LocalizedString ProgressEvictNode(string node)
		{
			return new LocalizedString("ProgressEvictNode", "Ex42D070", false, true, Strings.ResourceManager, new object[]
			{
				node
			});
		}

		// Token: 0x0600A2CC RID: 41676 RVA: 0x00280450 File Offset: 0x0027E650
		public static LocalizedString DatabaseCopyInitializingCheck(string configType, string sgName, string checkingState, string serverName)
		{
			return new LocalizedString("DatabaseCopyInitializingCheck", "ExF9F57E", false, true, Strings.ResourceManager, new object[]
			{
				configType,
				sgName,
				checkingState,
				serverName
			});
		}

		// Token: 0x17003566 RID: 13670
		// (get) Token: 0x0600A2CD RID: 41677 RVA: 0x0028048B File Offset: 0x0027E68B
		public static LocalizedString ExchangeInteropUSGDescription
		{
			get
			{
				return new LocalizedString("ExchangeInteropUSGDescription", "Ex4960C1", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A2CE RID: 41678 RVA: 0x002804AC File Offset: 0x0027E6AC
		public static LocalizedString RmsSharedIdentityUserNotFound(string userCn)
		{
			return new LocalizedString("RmsSharedIdentityUserNotFound", "ExF543CA", false, true, Strings.ResourceManager, new object[]
			{
				userCn
			});
		}

		// Token: 0x0600A2CF RID: 41679 RVA: 0x002804DC File Offset: 0x0027E6DC
		public static LocalizedString InterceptorErrorConditionConjunctionNotSupported(string operand)
		{
			return new LocalizedString("InterceptorErrorConditionConjunctionNotSupported", "", false, false, Strings.ResourceManager, new object[]
			{
				operand
			});
		}

		// Token: 0x0600A2D0 RID: 41680 RVA: 0x0028050C File Offset: 0x0027E70C
		public static LocalizedString MtrtMessageDLPRule(string ruleName, string id, string policyName, string dlpid)
		{
			return new LocalizedString("MtrtMessageDLPRule", "", false, false, Strings.ResourceManager, new object[]
			{
				ruleName,
				id,
				policyName,
				dlpid
			});
		}

		// Token: 0x17003567 RID: 13671
		// (get) Token: 0x0600A2D1 RID: 41681 RVA: 0x00280547 File Offset: 0x0027E747
		public static LocalizedString ADAttributeCustomAttribute9
		{
			get
			{
				return new LocalizedString("ADAttributeCustomAttribute9", "Ex576906", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A2D2 RID: 41682 RVA: 0x00280568 File Offset: 0x0027E768
		public static LocalizedString ConfirmationMessageSendTextMessagingVerificationCode(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSendTextMessagingVerificationCode", "ExD34003", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x0600A2D3 RID: 41683 RVA: 0x00280598 File Offset: 0x0027E798
		public static LocalizedString ErrorNoAuditLogForNonUserMailbox(string user)
		{
			return new LocalizedString("ErrorNoAuditLogForNonUserMailbox", "", false, false, Strings.ResourceManager, new object[]
			{
				user
			});
		}

		// Token: 0x17003568 RID: 13672
		// (get) Token: 0x0600A2D4 RID: 41684 RVA: 0x002805C7 File Offset: 0x0027E7C7
		public static LocalizedString PromptToRemoveLogEventAction
		{
			get
			{
				return new LocalizedString("PromptToRemoveLogEventAction", "Ex3A2990", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A2D5 RID: 41685 RVA: 0x002805E8 File Offset: 0x0027E7E8
		public static LocalizedString ErrorRequiredMigrationFeatureNotEnabled(MigrationFeature feature)
		{
			return new LocalizedString("ErrorRequiredMigrationFeatureNotEnabled", "", false, false, Strings.ResourceManager, new object[]
			{
				feature
			});
		}

		// Token: 0x0600A2D6 RID: 41686 RVA: 0x0028061C File Offset: 0x0027E81C
		public static LocalizedString FoundDefaultSharingPolicy(string name, string organization)
		{
			return new LocalizedString("FoundDefaultSharingPolicy", "Ex105B97", false, true, Strings.ResourceManager, new object[]
			{
				name,
				organization
			});
		}

		// Token: 0x17003569 RID: 13673
		// (get) Token: 0x0600A2D7 RID: 41687 RVA: 0x0028064F File Offset: 0x0027E84F
		public static LocalizedString ConfirmationMessageNewMailFlowPartnerConfig
		{
			get
			{
				return new LocalizedString("ConfirmationMessageNewMailFlowPartnerConfig", "Ex37D535", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A2D8 RID: 41688 RVA: 0x00280670 File Offset: 0x0027E870
		public static LocalizedString SendConnectorWrongSourceServerRg(string serverName)
		{
			return new LocalizedString("SendConnectorWrongSourceServerRg", "Ex99DE11", false, true, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		// Token: 0x0600A2D9 RID: 41689 RVA: 0x002806A0 File Offset: 0x0027E8A0
		public static LocalizedString ErrorDatabaseNotUnique(string idStringValue)
		{
			return new LocalizedString("ErrorDatabaseNotUnique", "ExFB6365", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		// Token: 0x1700356A RID: 13674
		// (get) Token: 0x0600A2DA RID: 41690 RVA: 0x002806CF File Offset: 0x0027E8CF
		public static LocalizedString ErrorAlsFailedToProcessRequest
		{
			get
			{
				return new LocalizedString("ErrorAlsFailedToProcessRequest", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700356B RID: 13675
		// (get) Token: 0x0600A2DB RID: 41691 RVA: 0x002806ED File Offset: 0x0027E8ED
		public static LocalizedString ExchangeStreamingOpticsDisplayName
		{
			get
			{
				return new LocalizedString("ExchangeStreamingOpticsDisplayName", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A2DC RID: 41692 RVA: 0x0028070C File Offset: 0x0027E90C
		public static LocalizedString ConfirmationMessageRemoveAddressrewriteentry(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveAddressrewriteentry", "Ex24AABB", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x1700356C RID: 13676
		// (get) Token: 0x0600A2DD RID: 41693 RVA: 0x0028073B File Offset: 0x0027E93B
		public static LocalizedString RemoveContentIndexTask
		{
			get
			{
				return new LocalizedString("RemoveContentIndexTask", "ExED254D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700356D RID: 13677
		// (get) Token: 0x0600A2DE RID: 41694 RVA: 0x00280759 File Offset: 0x0027E959
		public static LocalizedString ErrorMapiVirtualDirectoryMustSpecifyEitherInternalOrExternalUrl
		{
			get
			{
				return new LocalizedString("ErrorMapiVirtualDirectoryMustSpecifyEitherInternalOrExternalUrl", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A2DF RID: 41695 RVA: 0x00280778 File Offset: 0x0027E978
		public static LocalizedString StartingToRunChecks(string serverName)
		{
			return new LocalizedString("StartingToRunChecks", "Ex33C489", false, true, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		// Token: 0x1700356E RID: 13678
		// (get) Token: 0x0600A2E0 RID: 41696 RVA: 0x002807A7 File Offset: 0x0027E9A7
		public static LocalizedString SetupComponentMidFileCopyClientAccess
		{
			get
			{
				return new LocalizedString("SetupComponentMidFileCopyClientAccess", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A2E1 RID: 41697 RVA: 0x002807C8 File Offset: 0x0027E9C8
		public static LocalizedString ErrorEdbFileLocationNotUniqueUnderSameDAG(string filePath)
		{
			return new LocalizedString("ErrorEdbFileLocationNotUniqueUnderSameDAG", "ExD51FC7", false, true, Strings.ResourceManager, new object[]
			{
				filePath
			});
		}

		// Token: 0x1700356F RID: 13679
		// (get) Token: 0x0600A2E2 RID: 41698 RVA: 0x002807F7 File Offset: 0x0027E9F7
		public static LocalizedString UmLanguagePackPackagePathNotSpecified
		{
			get
			{
				return new LocalizedString("UmLanguagePackPackagePathNotSpecified", "ExBDA969", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A2E3 RID: 41699 RVA: 0x00280818 File Offset: 0x0027EA18
		public static LocalizedString UnknownEntityLinkedToTenantInReportingDB(string tenantName, string managedEntitiyFullName)
		{
			return new LocalizedString("UnknownEntityLinkedToTenantInReportingDB", "Ex245D60", false, true, Strings.ResourceManager, new object[]
			{
				tenantName,
				managedEntitiyFullName
			});
		}

		// Token: 0x0600A2E4 RID: 41700 RVA: 0x0028084C File Offset: 0x0027EA4C
		public static LocalizedString ErrorAutoDiscoverEndpointNotFound(string domain)
		{
			return new LocalizedString("ErrorAutoDiscoverEndpointNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				domain
			});
		}

		// Token: 0x0600A2E5 RID: 41701 RVA: 0x0028087C File Offset: 0x0027EA7C
		public static LocalizedString ErrorOuOutOfOrganization(string ou)
		{
			return new LocalizedString("ErrorOuOutOfOrganization", "Ex87C44E", false, true, Strings.ResourceManager, new object[]
			{
				ou
			});
		}

		// Token: 0x0600A2E6 RID: 41702 RVA: 0x002808AC File Offset: 0x0027EAAC
		public static LocalizedString ConfirmationMessageSetHostedEncryptionVirtualDirectory(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetHostedEncryptionVirtualDirectory", "", false, false, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x0600A2E7 RID: 41703 RVA: 0x002808DC File Offset: 0x0027EADC
		public static LocalizedString ErrorLogFileCannotOpen(string file)
		{
			return new LocalizedString("ErrorLogFileCannotOpen", "ExEE440E", false, true, Strings.ResourceManager, new object[]
			{
				file
			});
		}

		// Token: 0x0600A2E8 RID: 41704 RVA: 0x0028090C File Offset: 0x0027EB0C
		public static LocalizedString ErrorCouldNotFindMoveRequest(string identity)
		{
			return new LocalizedString("ErrorCouldNotFindMoveRequest", "Ex1CC5F9", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x17003570 RID: 13680
		// (get) Token: 0x0600A2E9 RID: 41705 RVA: 0x0028093B File Offset: 0x0027EB3B
		public static LocalizedString SetupProgressStartingAddressBookService
		{
			get
			{
				return new LocalizedString("SetupProgressStartingAddressBookService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003571 RID: 13681
		// (get) Token: 0x0600A2EA RID: 41706 RVA: 0x00280959 File Offset: 0x0027EB59
		public static LocalizedString InstallComplianceAuditServiceTask
		{
			get
			{
				return new LocalizedString("InstallComplianceAuditServiceTask", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A2EB RID: 41707 RVA: 0x00280978 File Offset: 0x0027EB78
		public static LocalizedString InstallFreeBusyFolderUnableToCheckDatabase(string database)
		{
			return new LocalizedString("InstallFreeBusyFolderUnableToCheckDatabase", "ExBC2406", false, true, Strings.ResourceManager, new object[]
			{
				database
			});
		}

		// Token: 0x0600A2EC RID: 41708 RVA: 0x002809A8 File Offset: 0x0027EBA8
		public static LocalizedString SimilarScopeFound(string name)
		{
			return new LocalizedString("SimilarScopeFound", "Ex619010", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x0600A2ED RID: 41709 RVA: 0x002809D8 File Offset: 0x0027EBD8
		public static LocalizedString HeaderNameNotAllowed(string headerName)
		{
			return new LocalizedString("HeaderNameNotAllowed", "Ex2D5BD3", false, true, Strings.ResourceManager, new object[]
			{
				headerName
			});
		}

		// Token: 0x0600A2EE RID: 41710 RVA: 0x00280A08 File Offset: 0x0027EC08
		public static LocalizedString ConfirmationMessageNewAcceptedDomain(string Name, string DomainName)
		{
			return new LocalizedString("ConfirmationMessageNewAcceptedDomain", "ExAAC6F8", false, true, Strings.ResourceManager, new object[]
			{
				Name,
				DomainName
			});
		}

		// Token: 0x17003572 RID: 13682
		// (get) Token: 0x0600A2EF RID: 41711 RVA: 0x00280A3B File Offset: 0x0027EC3B
		public static LocalizedString InternalTransportCertificateUpdatedOnEdge
		{
			get
			{
				return new LocalizedString("InternalTransportCertificateUpdatedOnEdge", "Ex27671D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003573 RID: 13683
		// (get) Token: 0x0600A2F0 RID: 41712 RVA: 0x00280A59 File Offset: 0x0027EC59
		public static LocalizedString ErrorCleanUpAndRemoveAlternateServiceAccountsAreMutuallyExclusive
		{
			get
			{
				return new LocalizedString("ErrorCleanUpAndRemoveAlternateServiceAccountsAreMutuallyExclusive", "ExD5041A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003574 RID: 13684
		// (get) Token: 0x0600A2F1 RID: 41713 RVA: 0x00280A77 File Offset: 0x0027EC77
		public static LocalizedString ErrorSetGroupMailboxAddMembersPrivate
		{
			get
			{
				return new LocalizedString("ErrorSetGroupMailboxAddMembersPrivate", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003575 RID: 13685
		// (get) Token: 0x0600A2F2 RID: 41714 RVA: 0x00280A95 File Offset: 0x0027EC95
		public static LocalizedString MailboxReplicationServiceNotInstalled
		{
			get
			{
				return new LocalizedString("MailboxReplicationServiceNotInstalled", "Ex67F0D0", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A2F3 RID: 41715 RVA: 0x00280AB4 File Offset: 0x0027ECB4
		public static LocalizedString TooManyServicesContainers(string forest)
		{
			return new LocalizedString("TooManyServicesContainers", "", false, false, Strings.ResourceManager, new object[]
			{
				forest
			});
		}

		// Token: 0x17003576 RID: 13686
		// (get) Token: 0x0600A2F4 RID: 41716 RVA: 0x00280AE3 File Offset: 0x0027ECE3
		public static LocalizedString ConfirmationMessageNewReportingVirtualDirectory
		{
			get
			{
				return new LocalizedString("ConfirmationMessageNewReportingVirtualDirectory", "ExAAF37E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003577 RID: 13687
		// (get) Token: 0x0600A2F5 RID: 41717 RVA: 0x00280B01 File Offset: 0x0027ED01
		public static LocalizedString WarningReplayLagTimeMustBeLessThanSafetyNetHoldTime
		{
			get
			{
				return new LocalizedString("WarningReplayLagTimeMustBeLessThanSafetyNetHoldTime", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003578 RID: 13688
		// (get) Token: 0x0600A2F6 RID: 41718 RVA: 0x00280B1F File Offset: 0x0027ED1F
		public static LocalizedString TowsMissingAutoDiscoverElement
		{
			get
			{
				return new LocalizedString("TowsMissingAutoDiscoverElement", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A2F7 RID: 41719 RVA: 0x00280B40 File Offset: 0x0027ED40
		public static LocalizedString AuditLogSearchStartDateIsLaterThanEndDate(string startDate, string endDate)
		{
			return new LocalizedString("AuditLogSearchStartDateIsLaterThanEndDate", "", false, false, Strings.ResourceManager, new object[]
			{
				startDate,
				endDate
			});
		}

		// Token: 0x17003579 RID: 13689
		// (get) Token: 0x0600A2F8 RID: 41720 RVA: 0x00280B73 File Offset: 0x0027ED73
		public static LocalizedString SetupProgressHideAdminAccessWarning
		{
			get
			{
				return new LocalizedString("SetupProgressHideAdminAccessWarning", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A2F9 RID: 41721 RVA: 0x00280B94 File Offset: 0x0027ED94
		public static LocalizedString ErrorUserNotFoundInPermissionEntry(string userId)
		{
			return new LocalizedString("ErrorUserNotFoundInPermissionEntry", "", false, false, Strings.ResourceManager, new object[]
			{
				userId
			});
		}

		// Token: 0x0600A2FA RID: 41722 RVA: 0x00280BC4 File Offset: 0x0027EDC4
		public static LocalizedString ConfirmationMessageSetMigrationConfig(string tenant)
		{
			return new LocalizedString("ConfirmationMessageSetMigrationConfig", "", false, false, Strings.ResourceManager, new object[]
			{
				tenant
			});
		}

		// Token: 0x0600A2FB RID: 41723 RVA: 0x00280BF4 File Offset: 0x0027EDF4
		public static LocalizedString ExchangeCertificateUpdatedForUMCR(string server)
		{
			return new LocalizedString("ExchangeCertificateUpdatedForUMCR", "", false, false, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		// Token: 0x1700357A RID: 13690
		// (get) Token: 0x0600A2FC RID: 41724 RVA: 0x00280C23 File Offset: 0x0027EE23
		public static LocalizedString SetupProgressStartEdgeTransportService
		{
			get
			{
				return new LocalizedString("SetupProgressStartEdgeTransportService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700357B RID: 13691
		// (get) Token: 0x0600A2FD RID: 41725 RVA: 0x00280C41 File Offset: 0x0027EE41
		public static LocalizedString WipePendingNote
		{
			get
			{
				return new LocalizedString("WipePendingNote", "Ex4B1DEA", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700357C RID: 13692
		// (get) Token: 0x0600A2FE RID: 41726 RVA: 0x00280C5F File Offset: 0x0027EE5F
		public static LocalizedString ComplianceAuditServiceNotInstalled
		{
			get
			{
				return new LocalizedString("ComplianceAuditServiceNotInstalled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700357D RID: 13693
		// (get) Token: 0x0600A2FF RID: 41727 RVA: 0x00280C7D File Offset: 0x0027EE7D
		public static LocalizedString MissingDataClassificationsName
		{
			get
			{
				return new LocalizedString("MissingDataClassificationsName", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A300 RID: 41728 RVA: 0x00280C9C File Offset: 0x0027EE9C
		public static LocalizedString ConfirmationMessageMoveAddressList(string Identity, string Target)
		{
			return new LocalizedString("ConfirmationMessageMoveAddressList", "Ex44890F", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				Target
			});
		}

		// Token: 0x0600A301 RID: 41729 RVA: 0x00280CD0 File Offset: 0x0027EED0
		public static LocalizedString MoveNotSuspended(string identity)
		{
			return new LocalizedString("MoveNotSuspended", "Ex717378", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x0600A302 RID: 41730 RVA: 0x00280D00 File Offset: 0x0027EF00
		public static LocalizedString ConfirmationMessageNewExchangeUpgradeBucket(string Name)
		{
			return new LocalizedString("ConfirmationMessageNewExchangeUpgradeBucket", "", false, false, Strings.ResourceManager, new object[]
			{
				Name
			});
		}

		// Token: 0x0600A303 RID: 41731 RVA: 0x00280D30 File Offset: 0x0027EF30
		public static LocalizedString ConfirmationMessageRemoveExchangeRpcClientAccess(string server)
		{
			return new LocalizedString("ConfirmationMessageRemoveExchangeRpcClientAccess", "Ex4A2C7D", false, true, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		// Token: 0x0600A304 RID: 41732 RVA: 0x00280D60 File Offset: 0x0027EF60
		public static LocalizedString ErrorUnknown(string memberName)
		{
			return new LocalizedString("ErrorUnknown", "Ex48D7EB", false, true, Strings.ResourceManager, new object[]
			{
				memberName
			});
		}

		// Token: 0x1700357E RID: 13694
		// (get) Token: 0x0600A305 RID: 41733 RVA: 0x00280D8F File Offset: 0x0027EF8F
		public static LocalizedString UninstallMailboxTransportSubmissionServiceTask
		{
			get
			{
				return new LocalizedString("UninstallMailboxTransportSubmissionServiceTask", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700357F RID: 13695
		// (get) Token: 0x0600A306 RID: 41734 RVA: 0x00280DAD File Offset: 0x0027EFAD
		public static LocalizedString OpenSCMFailed
		{
			get
			{
				return new LocalizedString("OpenSCMFailed", "ExF54DCA", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A307 RID: 41735 RVA: 0x00280DCC File Offset: 0x0027EFCC
		public static LocalizedString FoundAppId(string appId)
		{
			return new LocalizedString("FoundAppId", "Ex861DC5", false, true, Strings.ResourceManager, new object[]
			{
				appId
			});
		}

		// Token: 0x17003580 RID: 13696
		// (get) Token: 0x0600A308 RID: 41736 RVA: 0x00280DFB File Offset: 0x0027EFFB
		public static LocalizedString SetupProgressStoppingServices
		{
			get
			{
				return new LocalizedString("SetupProgressStoppingServices", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A309 RID: 41737 RVA: 0x00280E1C File Offset: 0x0027F01C
		public static LocalizedString ConfirmationMessageSetHostedOutboundSpamFilterPolicy(string identity)
		{
			return new LocalizedString("ConfirmationMessageSetHostedOutboundSpamFilterPolicy", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x0600A30A RID: 41738 RVA: 0x00280E4C File Offset: 0x0027F04C
		public static LocalizedString FailedToDeleteSystemMailbox(string id, string error)
		{
			return new LocalizedString("FailedToDeleteSystemMailbox", "Ex898CF0", false, true, Strings.ResourceManager, new object[]
			{
				id,
				error
			});
		}

		// Token: 0x17003581 RID: 13697
		// (get) Token: 0x0600A30B RID: 41739 RVA: 0x00280E7F File Offset: 0x0027F07F
		public static LocalizedString StartAfterOrCompleteAfterCannotBeSetWhenJobCompleting
		{
			get
			{
				return new LocalizedString("StartAfterOrCompleteAfterCannotBeSetWhenJobCompleting", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A30C RID: 41740 RVA: 0x00280EA0 File Offset: 0x0027F0A0
		public static LocalizedString DagTaskStoreMustBeRunningOnMachineException(string machineName)
		{
			return new LocalizedString("DagTaskStoreMustBeRunningOnMachineException", "", false, false, Strings.ResourceManager, new object[]
			{
				machineName
			});
		}

		// Token: 0x17003582 RID: 13698
		// (get) Token: 0x0600A30D RID: 41741 RVA: 0x00280ECF File Offset: 0x0027F0CF
		public static LocalizedString DatabaseChecksWarning
		{
			get
			{
				return new LocalizedString("DatabaseChecksWarning", "Ex930F9B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003583 RID: 13699
		// (get) Token: 0x0600A30E RID: 41742 RVA: 0x00280EED File Offset: 0x0027F0ED
		public static LocalizedString SetupProgressSyncAccountsSyncNowEnabled
		{
			get
			{
				return new LocalizedString("SetupProgressSyncAccountsSyncNowEnabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003584 RID: 13700
		// (get) Token: 0x0600A30F RID: 41743 RVA: 0x00280F0B File Offset: 0x0027F10B
		public static LocalizedString CannotResetDefaultOAB
		{
			get
			{
				return new LocalizedString("CannotResetDefaultOAB", "Ex67BCA7", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A310 RID: 41744 RVA: 0x00280F2C File Offset: 0x0027F12C
		public static LocalizedString ErrorInvalidAsyncNotificationProcessType(string processType)
		{
			return new LocalizedString("ErrorInvalidAsyncNotificationProcessType", "", false, false, Strings.ResourceManager, new object[]
			{
				processType
			});
		}

		// Token: 0x17003585 RID: 13701
		// (get) Token: 0x0600A311 RID: 41745 RVA: 0x00280F5B File Offset: 0x0027F15B
		public static LocalizedString FfoPrimingServiceDescription
		{
			get
			{
				return new LocalizedString("FfoPrimingServiceDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A312 RID: 41746 RVA: 0x00280F7C File Offset: 0x0027F17C
		public static LocalizedString messageAutodiscoverTaskException(string field, string autodiscoverData)
		{
			return new LocalizedString("messageAutodiscoverTaskException", "", false, false, Strings.ResourceManager, new object[]
			{
				field,
				autodiscoverData
			});
		}

		// Token: 0x0600A313 RID: 41747 RVA: 0x00280FB0 File Offset: 0x0027F1B0
		public static LocalizedString ComAdminOtherOwnerException(string component)
		{
			return new LocalizedString("ComAdminOtherOwnerException", "Ex25C85B", false, true, Strings.ResourceManager, new object[]
			{
				component
			});
		}

		// Token: 0x0600A314 RID: 41748 RVA: 0x00280FE0 File Offset: 0x0027F1E0
		public static LocalizedString TargetSharingEprDoesNotMatchAnyExternalURI(string remoteTargetSharingEpr)
		{
			return new LocalizedString("TargetSharingEprDoesNotMatchAnyExternalURI", "ExD122CB", false, true, Strings.ResourceManager, new object[]
			{
				remoteTargetSharingEpr
			});
		}

		// Token: 0x17003586 RID: 13702
		// (get) Token: 0x0600A315 RID: 41749 RVA: 0x0028100F File Offset: 0x0027F20F
		public static LocalizedString RoleLimitedDetails
		{
			get
			{
				return new LocalizedString("RoleLimitedDetails", "ExB8D3C8", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003587 RID: 13703
		// (get) Token: 0x0600A316 RID: 41750 RVA: 0x0028102D File Offset: 0x0027F22D
		public static LocalizedString ExceptionVirtualServerNotExists
		{
			get
			{
				return new LocalizedString("ExceptionVirtualServerNotExists", "Ex40B488", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A317 RID: 41751 RVA: 0x0028104C File Offset: 0x0027F24C
		public static LocalizedString ErrorCannotRetargetToDifferentVersionServerThanOriginal(string newServerVersion, string oldServerVersion)
		{
			return new LocalizedString("ErrorCannotRetargetToDifferentVersionServerThanOriginal", "", false, false, Strings.ResourceManager, new object[]
			{
				newServerVersion,
				oldServerVersion
			});
		}

		// Token: 0x0600A318 RID: 41752 RVA: 0x00281080 File Offset: 0x0027F280
		public static LocalizedString AutodiscoverUsingUrl(string uri)
		{
			return new LocalizedString("AutodiscoverUsingUrl", "Ex4C978D", false, true, Strings.ResourceManager, new object[]
			{
				uri
			});
		}

		// Token: 0x0600A319 RID: 41753 RVA: 0x002810B0 File Offset: 0x0027F2B0
		public static LocalizedString ConfirmationMessageUpdateRoleGroupMember(string Identity, string Members)
		{
			return new LocalizedString("ConfirmationMessageUpdateRoleGroupMember", "ExDB5EE5", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				Members
			});
		}

		// Token: 0x17003588 RID: 13704
		// (get) Token: 0x0600A31A RID: 41754 RVA: 0x002810E3 File Offset: 0x0027F2E3
		public static LocalizedString ProgressActivityCreateAppId
		{
			get
			{
				return new LocalizedString("ProgressActivityCreateAppId", "Ex07AC85", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A31B RID: 41755 RVA: 0x00281104 File Offset: 0x0027F304
		public static LocalizedString ExchangePartnerDoesntOwnDomain(string smtpDomain)
		{
			return new LocalizedString("ExchangePartnerDoesntOwnDomain", "Ex18B630", false, true, Strings.ResourceManager, new object[]
			{
				smtpDomain
			});
		}

		// Token: 0x0600A31C RID: 41756 RVA: 0x00281134 File Offset: 0x0027F334
		public static LocalizedString MapiTransactionResultCaseNotHandled(MapiTransactionResultEnum result)
		{
			return new LocalizedString("MapiTransactionResultCaseNotHandled", "ExA38177", false, true, Strings.ResourceManager, new object[]
			{
				result
			});
		}

		// Token: 0x0600A31D RID: 41757 RVA: 0x00281168 File Offset: 0x0027F368
		public static LocalizedString ErrorMultiReferenceParameter(string parameters, string values)
		{
			return new LocalizedString("ErrorMultiReferenceParameter", "Ex24E7C5", false, true, Strings.ResourceManager, new object[]
			{
				parameters,
				values
			});
		}

		// Token: 0x17003589 RID: 13705
		// (get) Token: 0x0600A31E RID: 41758 RVA: 0x0028119B File Offset: 0x0027F39B
		public static LocalizedString OwaMetabaseSetPropertiesFailure
		{
			get
			{
				return new LocalizedString("OwaMetabaseSetPropertiesFailure", "Ex6063D9", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A31F RID: 41759 RVA: 0x002811BC File Offset: 0x0027F3BC
		public static LocalizedString ErrorSourceFileNotFound(string serverName, string fileName)
		{
			return new LocalizedString("ErrorSourceFileNotFound", "ExFEA531", false, true, Strings.ResourceManager, new object[]
			{
				serverName,
				fileName
			});
		}

		// Token: 0x1700358A RID: 13706
		// (get) Token: 0x0600A320 RID: 41760 RVA: 0x002811EF File Offset: 0x0027F3EF
		public static LocalizedString MultipleOrganizationRelationshipInstancesReturnedByTheRemoteParty
		{
			get
			{
				return new LocalizedString("MultipleOrganizationRelationshipInstancesReturnedByTheRemoteParty", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700358B RID: 13707
		// (get) Token: 0x0600A321 RID: 41761 RVA: 0x0028120D File Offset: 0x0027F40D
		public static LocalizedString TokenRequestFailed
		{
			get
			{
				return new LocalizedString("TokenRequestFailed", "ExFB65C6", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700358C RID: 13708
		// (get) Token: 0x0600A322 RID: 41762 RVA: 0x0028122B File Offset: 0x0027F42B
		public static LocalizedString OneOrMoreTasksFailed
		{
			get
			{
				return new LocalizedString("OneOrMoreTasksFailed", "Ex3B5982", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A323 RID: 41763 RVA: 0x0028124C File Offset: 0x0027F44C
		public static LocalizedString ConfirmationMessageStartDatabaseAvailabilityGroupServer(string Identity, string server)
		{
			return new LocalizedString("ConfirmationMessageStartDatabaseAvailabilityGroupServer", "ExE438DD", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				server
			});
		}

		// Token: 0x0600A324 RID: 41764 RVA: 0x00281280 File Offset: 0x0027F480
		public static LocalizedString ConfirmationMessageAuthEffectiveDateNotReached(string thumbprint)
		{
			return new LocalizedString("ConfirmationMessageAuthEffectiveDateNotReached", "", false, false, Strings.ResourceManager, new object[]
			{
				thumbprint
			});
		}

		// Token: 0x0600A325 RID: 41765 RVA: 0x002812B0 File Offset: 0x0027F4B0
		public static LocalizedString SkipReadEmptyTemplateGuid(string template)
		{
			return new LocalizedString("SkipReadEmptyTemplateGuid", "Ex56A875", false, true, Strings.ResourceManager, new object[]
			{
				template
			});
		}

		// Token: 0x1700358D RID: 13709
		// (get) Token: 0x0600A326 RID: 41766 RVA: 0x002812DF File Offset: 0x0027F4DF
		public static LocalizedString E4eLicensingIsDisabledSetRule
		{
			get
			{
				return new LocalizedString("E4eLicensingIsDisabledSetRule", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A327 RID: 41767 RVA: 0x00281300 File Offset: 0x0027F500
		public static LocalizedString CrossValidationAlgorithmError(string mailbox)
		{
			return new LocalizedString("CrossValidationAlgorithmError", "Ex73EF09", false, true, Strings.ResourceManager, new object[]
			{
				mailbox
			});
		}

		// Token: 0x0600A328 RID: 41768 RVA: 0x00281330 File Offset: 0x0027F530
		public static LocalizedString DirectoryDoesNotExist(string directory)
		{
			return new LocalizedString("DirectoryDoesNotExist", "ExA676EC", false, true, Strings.ResourceManager, new object[]
			{
				directory
			});
		}

		// Token: 0x0600A329 RID: 41769 RVA: 0x00281360 File Offset: 0x0027F560
		public static LocalizedString ConfirmationMessageNewLinkedUser(string Name)
		{
			return new LocalizedString("ConfirmationMessageNewLinkedUser", "Ex28CACB", false, true, Strings.ResourceManager, new object[]
			{
				Name
			});
		}

		// Token: 0x0600A32A RID: 41770 RVA: 0x00281390 File Offset: 0x0027F590
		public static LocalizedString DagTaskServerMailboxServerAlsoServesAsFswNodeException(string mailboxServer)
		{
			return new LocalizedString("DagTaskServerMailboxServerAlsoServesAsFswNodeException", "", false, false, Strings.ResourceManager, new object[]
			{
				mailboxServer
			});
		}

		// Token: 0x0600A32B RID: 41771 RVA: 0x002813C0 File Offset: 0x0027F5C0
		public static LocalizedString ErrorCouldNotFindIndexEntriesForRequest(string name)
		{
			return new LocalizedString("ErrorCouldNotFindIndexEntriesForRequest", "ExB985EF", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x0600A32C RID: 41772 RVA: 0x002813F0 File Offset: 0x0027F5F0
		public static LocalizedString RestoreNeedsAlternateWitnessServer(string dagName)
		{
			return new LocalizedString("RestoreNeedsAlternateWitnessServer", "", false, false, Strings.ResourceManager, new object[]
			{
				dagName
			});
		}

		// Token: 0x0600A32D RID: 41773 RVA: 0x00281420 File Offset: 0x0027F620
		public static LocalizedString ValueIsEmptyException(string key)
		{
			return new LocalizedString("ValueIsEmptyException", "ExD19867", false, true, Strings.ResourceManager, new object[]
			{
				key
			});
		}

		// Token: 0x0600A32E RID: 41774 RVA: 0x00281450 File Offset: 0x0027F650
		public static LocalizedString ErrorCheckingTPRListener(string machineName, string error)
		{
			return new LocalizedString("ErrorCheckingTPRListener", "ExC0E172", false, true, Strings.ResourceManager, new object[]
			{
				machineName,
				error
			});
		}

		// Token: 0x1700358E RID: 13710
		// (get) Token: 0x0600A32F RID: 41775 RVA: 0x00281483 File Offset: 0x0027F683
		public static LocalizedString ConfirmationDisableJournalArchiving
		{
			get
			{
				return new LocalizedString("ConfirmationDisableJournalArchiving", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A330 RID: 41776 RVA: 0x002814A4 File Offset: 0x0027F6A4
		public static LocalizedString messageMissingParameterException(string parameter)
		{
			return new LocalizedString("messageMissingParameterException", "", false, false, Strings.ResourceManager, new object[]
			{
				parameter
			});
		}

		// Token: 0x0600A331 RID: 41777 RVA: 0x002814D4 File Offset: 0x0027F6D4
		public static LocalizedString ErrorTooManyDatabaseCopies(string database, int expectedCount)
		{
			return new LocalizedString("ErrorTooManyDatabaseCopies", "Ex2310A0", false, true, Strings.ResourceManager, new object[]
			{
				database,
				expectedCount
			});
		}

		// Token: 0x1700358F RID: 13711
		// (get) Token: 0x0600A332 RID: 41778 RVA: 0x0028150C File Offset: 0x0027F70C
		public static LocalizedString SetupComponentPostSetupMonitoringCorrelation
		{
			get
			{
				return new LocalizedString("SetupComponentPostSetupMonitoringCorrelation", "ExCAEDDB", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003590 RID: 13712
		// (get) Token: 0x0600A333 RID: 41779 RVA: 0x0028152A File Offset: 0x0027F72A
		public static LocalizedString MailboxReplicationServiceDisplayName
		{
			get
			{
				return new LocalizedString("MailboxReplicationServiceDisplayName", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A334 RID: 41780 RVA: 0x00281548 File Offset: 0x0027F748
		public static LocalizedString ConfirmationMessageNewFederationTrustWithMetadata(string Name, string partnerSTS, string Thumbprint, string metadataUrl)
		{
			return new LocalizedString("ConfirmationMessageNewFederationTrustWithMetadata", "ExFBDBD5", false, true, Strings.ResourceManager, new object[]
			{
				Name,
				partnerSTS,
				Thumbprint,
				metadataUrl
			});
		}

		// Token: 0x0600A335 RID: 41781 RVA: 0x00281584 File Offset: 0x0027F784
		public static LocalizedString OwaPropertySetableOnlyOnOwaVirtualDirectory(string propertyName)
		{
			return new LocalizedString("OwaPropertySetableOnlyOnOwaVirtualDirectory", "ExADEAE3", false, true, Strings.ResourceManager, new object[]
			{
				propertyName
			});
		}

		// Token: 0x0600A336 RID: 41782 RVA: 0x002815B4 File Offset: 0x0027F7B4
		public static LocalizedString WillNotRemoveFromLocalAdministratorGroup(string server, string user)
		{
			return new LocalizedString("WillNotRemoveFromLocalAdministratorGroup", "ExA76C20", false, true, Strings.ResourceManager, new object[]
			{
				server,
				user
			});
		}

		// Token: 0x17003591 RID: 13713
		// (get) Token: 0x0600A337 RID: 41783 RVA: 0x002815E7 File Offset: 0x0027F7E7
		public static LocalizedString ConfirmationMessageTestMigrationServerAvailability
		{
			get
			{
				return new LocalizedString("ConfirmationMessageTestMigrationServerAvailability", "Ex7CB495", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A338 RID: 41784 RVA: 0x00281608 File Offset: 0x0027F808
		public static LocalizedString ServerSiteInformationAlreadySet(string siteName)
		{
			return new LocalizedString("ServerSiteInformationAlreadySet", "", false, false, Strings.ResourceManager, new object[]
			{
				siteName
			});
		}

		// Token: 0x17003592 RID: 13714
		// (get) Token: 0x0600A339 RID: 41785 RVA: 0x00281637 File Offset: 0x0027F837
		public static LocalizedString InvalidAvailabilityAccessMethod
		{
			get
			{
				return new LocalizedString("InvalidAvailabilityAccessMethod", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A33A RID: 41786 RVA: 0x00281658 File Offset: 0x0027F858
		public static LocalizedString ConfirmationMessageUpdateAddressList(string Identity)
		{
			return new LocalizedString("ConfirmationMessageUpdateAddressList", "Ex38C202", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x0600A33B RID: 41787 RVA: 0x00281688 File Offset: 0x0027F888
		public static LocalizedString CannotManipulateAlternateServiceAccountsRemotely(string currentFqdn, string targetFqdn)
		{
			return new LocalizedString("CannotManipulateAlternateServiceAccountsRemotely", "Ex4A3632", false, true, Strings.ResourceManager, new object[]
			{
				currentFqdn,
				targetFqdn
			});
		}

		// Token: 0x0600A33C RID: 41788 RVA: 0x002816BC File Offset: 0x0027F8BC
		public static LocalizedString ErrorPSTFileNameIncorrect(string path)
		{
			return new LocalizedString("ErrorPSTFileNameIncorrect", "Ex11DAC9", false, true, Strings.ResourceManager, new object[]
			{
				path
			});
		}

		// Token: 0x17003593 RID: 13715
		// (get) Token: 0x0600A33D RID: 41789 RVA: 0x002816EB File Offset: 0x0027F8EB
		public static LocalizedString MigrationPleaseUseStartForReenablingIncremental
		{
			get
			{
				return new LocalizedString("MigrationPleaseUseStartForReenablingIncremental", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003594 RID: 13716
		// (get) Token: 0x0600A33E RID: 41790 RVA: 0x00281709 File Offset: 0x0027F909
		public static LocalizedString ErrorMailTipRemoveDefaultAndTranslationsExist
		{
			get
			{
				return new LocalizedString("ErrorMailTipRemoveDefaultAndTranslationsExist", "Ex8E8937", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x17003595 RID: 13717
		// (get) Token: 0x0600A33F RID: 41791 RVA: 0x00281727 File Offset: 0x0027F927
		public static LocalizedString TestSearchOperationAborted
		{
			get
			{
				return new LocalizedString("TestSearchOperationAborted", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A340 RID: 41792 RVA: 0x00281748 File Offset: 0x0027F948
		public static LocalizedString ConfirmationMessageNewRpcClientAccess(string Name)
		{
			return new LocalizedString("ConfirmationMessageNewRpcClientAccess", "ExDDEBC4", false, true, Strings.ResourceManager, new object[]
			{
				Name
			});
		}

		// Token: 0x17003596 RID: 13718
		// (get) Token: 0x0600A341 RID: 41793 RVA: 0x00281777 File Offset: 0x0027F977
		public static LocalizedString ComplianceServiceDisplayName
		{
			get
			{
				return new LocalizedString("ComplianceServiceDisplayName", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A342 RID: 41794 RVA: 0x00281798 File Offset: 0x0027F998
		public static LocalizedString VerboseSyncTaskPopulateCookie(int version, Guid dc, int lowWmsC, long lowWM, int highWmsC, long highWM, string pageCookie)
		{
			return new LocalizedString("VerboseSyncTaskPopulateCookie", "Ex1324DA", false, true, Strings.ResourceManager, new object[]
			{
				version,
				dc,
				lowWmsC,
				lowWM,
				highWmsC,
				highWM,
				pageCookie
			});
		}

		// Token: 0x0600A343 RID: 41795 RVA: 0x00281800 File Offset: 0x0027FA00
		public static LocalizedString ErrorRecipientNotFound(object idValue)
		{
			return new LocalizedString("ErrorRecipientNotFound", "Ex94914C", false, true, Strings.ResourceManager, new object[]
			{
				idValue
			});
		}

		// Token: 0x0600A344 RID: 41796 RVA: 0x00281830 File Offset: 0x0027FA30
		public static LocalizedString ErrorReadingAMRole(string machineName, string error)
		{
			return new LocalizedString("ErrorReadingAMRole", "Ex0AA439", false, true, Strings.ResourceManager, new object[]
			{
				machineName,
				error
			});
		}

		// Token: 0x0600A345 RID: 41797 RVA: 0x00281864 File Offset: 0x0027FA64
		public static LocalizedString ErrorDuplicateCertificateSubject(string subject)
		{
			return new LocalizedString("ErrorDuplicateCertificateSubject", "ExEAA8B9", false, true, Strings.ResourceManager, new object[]
			{
				subject
			});
		}

		// Token: 0x17003597 RID: 13719
		// (get) Token: 0x0600A346 RID: 41798 RVA: 0x00281893 File Offset: 0x0027FA93
		public static LocalizedString ErrorDefaultRoleAssignmentPolicyNotUnique
		{
			get
			{
				return new LocalizedString("ErrorDefaultRoleAssignmentPolicyNotUnique", "ExB94B0B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A347 RID: 41799 RVA: 0x002818B4 File Offset: 0x0027FAB4
		public static LocalizedString WarningInvalidRoleAssignmentNotCloned(string id, string deprecatedRole)
		{
			return new LocalizedString("WarningInvalidRoleAssignmentNotCloned", "Ex028515", false, true, Strings.ResourceManager, new object[]
			{
				id,
				deprecatedRole
			});
		}

		// Token: 0x17003598 RID: 13720
		// (get) Token: 0x0600A348 RID: 41800 RVA: 0x002818E7 File Offset: 0x0027FAE7
		public static LocalizedString SetupProgressWsbPlugin
		{
			get
			{
				return new LocalizedString("SetupProgressWsbPlugin", "Ex7F0B56", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A349 RID: 41801 RVA: 0x00281908 File Offset: 0x0027FB08
		public static LocalizedString ConfirmationMessageRemoveRecipientPermission(string Identity, string User, string AccessRights)
		{
			return new LocalizedString("ConfirmationMessageRemoveRecipientPermission", "Ex191C71", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				User,
				AccessRights
			});
		}

		// Token: 0x0600A34A RID: 41802 RVA: 0x00281940 File Offset: 0x0027FB40
		public static LocalizedString MapiTransactionErrorMsgTimeout(double timeoutInSeconds)
		{
			return new LocalizedString("MapiTransactionErrorMsgTimeout", "Ex08B92C", false, true, Strings.ResourceManager, new object[]
			{
				timeoutInSeconds
			});
		}

		// Token: 0x0600A34B RID: 41803 RVA: 0x00281974 File Offset: 0x0027FB74
		public static LocalizedString ConfirmationMessageNewFolderMoveRequest(string name)
		{
			return new LocalizedString("ConfirmationMessageNewFolderMoveRequest", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x0600A34C RID: 41804 RVA: 0x002819A4 File Offset: 0x0027FBA4
		public static LocalizedString InfoProcessAddMember(string server)
		{
			return new LocalizedString("InfoProcessAddMember", "ExB4F0D8", false, true, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		// Token: 0x17003599 RID: 13721
		// (get) Token: 0x0600A34D RID: 41805 RVA: 0x002819D3 File Offset: 0x0027FBD3
		public static LocalizedString UsageTypeCustom
		{
			get
			{
				return new LocalizedString("UsageTypeCustom", "Ex41BE81", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A34E RID: 41806 RVA: 0x002819F4 File Offset: 0x0027FBF4
		public static LocalizedString ErrorInvalidNetId(string memberName)
		{
			return new LocalizedString("ErrorInvalidNetId", "Ex32664B", false, true, Strings.ResourceManager, new object[]
			{
				memberName
			});
		}

		// Token: 0x1700359A RID: 13722
		// (get) Token: 0x0600A34F RID: 41807 RVA: 0x00281A23 File Offset: 0x0027FC23
		public static LocalizedString InvalidDomain
		{
			get
			{
				return new LocalizedString("InvalidDomain", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x1700359B RID: 13723
		// (get) Token: 0x0600A350 RID: 41808 RVA: 0x00281A41 File Offset: 0x0027FC41
		public static LocalizedString ConfirmationMessageSetTransportProcessingConfig
		{
			get
			{
				return new LocalizedString("ConfirmationMessageSetTransportProcessingConfig", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A351 RID: 41809 RVA: 0x00281A60 File Offset: 0x0027FC60
		public static LocalizedString ErrorRoleEntryExistOnChildren(string roleId, string entryName)
		{
			return new LocalizedString("ErrorRoleEntryExistOnChildren", "Ex3720B0", false, true, Strings.ResourceManager, new object[]
			{
				roleId,
				entryName
			});
		}

		// Token: 0x0600A352 RID: 41810 RVA: 0x00281A94 File Offset: 0x0027FC94
		public static LocalizedString ErrorDlpInconsistentStateAndEnabledParameters(string stateParameterName, string enabledParameterName)
		{
			return new LocalizedString("ErrorDlpInconsistentStateAndEnabledParameters", "", false, false, Strings.ResourceManager, new object[]
			{
				stateParameterName,
				enabledParameterName
			});
		}

		// Token: 0x0600A353 RID: 41811 RVA: 0x00281AC8 File Offset: 0x0027FCC8
		public static LocalizedString ErrorMailboxDatabaseNotUnique(string identity)
		{
			return new LocalizedString("ErrorMailboxDatabaseNotUnique", "Ex2AD423", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x0600A354 RID: 41812 RVA: 0x00281AF8 File Offset: 0x0027FCF8
		public static LocalizedString RecipientTenantNotFound(string syncobject)
		{
			return new LocalizedString("RecipientTenantNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				syncobject
			});
		}

		// Token: 0x1700359C RID: 13724
		// (get) Token: 0x0600A355 RID: 41813 RVA: 0x00281B27 File Offset: 0x0027FD27
		public static LocalizedString MsiProgressStatus
		{
			get
			{
				return new LocalizedString("MsiProgressStatus", "Ex1A67DC", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A356 RID: 41814 RVA: 0x00281B48 File Offset: 0x0027FD48
		public static LocalizedString ErrorNetIDValuesDoNotMatch(string netId1, string netId2)
		{
			return new LocalizedString("ErrorNetIDValuesDoNotMatch", "Ex2D7C7A", false, true, Strings.ResourceManager, new object[]
			{
				netId1,
				netId2
			});
		}

		// Token: 0x0600A357 RID: 41815 RVA: 0x00281B7C File Offset: 0x0027FD7C
		public static LocalizedString IisTasksValidationInvalidUnicodeException(string propertyName, string value, char badChar, int unicodeValue, int charIndex)
		{
			return new LocalizedString("IisTasksValidationInvalidUnicodeException", "Ex54BE7B", false, true, Strings.ResourceManager, new object[]
			{
				propertyName,
				value,
				badChar,
				unicodeValue,
				charIndex
			});
		}

		// Token: 0x0600A358 RID: 41816 RVA: 0x00281BCC File Offset: 0x0027FDCC
		public static LocalizedString InterceptorErrorCustomResponseCodeMustMatchRejectAction(int value, string action, int high)
		{
			return new LocalizedString("InterceptorErrorCustomResponseCodeMustMatchRejectAction", "", false, false, Strings.ResourceManager, new object[]
			{
				value,
				action,
				high
			});
		}

		// Token: 0x0600A359 RID: 41817 RVA: 0x00281C10 File Offset: 0x0027FE10
		public static LocalizedString ConfirmationMessageAddPublicFolderClientPermission(string Identity, string User, string AccessRights)
		{
			return new LocalizedString("ConfirmationMessageAddPublicFolderClientPermission", "ExF1FD19", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				User,
				AccessRights
			});
		}

		// Token: 0x1700359D RID: 13725
		// (get) Token: 0x0600A35A RID: 41818 RVA: 0x00281C47 File Offset: 0x0027FE47
		public static LocalizedString VerboseClearAllPreferredDC
		{
			get
			{
				return new LocalizedString("VerboseClearAllPreferredDC", "Ex77C6C1", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A35B RID: 41819 RVA: 0x00281C68 File Offset: 0x0027FE68
		public static LocalizedString SelectedConnectionType(string type)
		{
			return new LocalizedString("SelectedConnectionType", "Ex5CEAA8", false, true, Strings.ResourceManager, new object[]
			{
				type
			});
		}

		// Token: 0x0600A35C RID: 41820 RVA: 0x00281C98 File Offset: 0x0027FE98
		public static LocalizedString FormsAuthenticationDeleteMarksIfUnusedUnknownErrorException(string metabasePath, int propertyID)
		{
			return new LocalizedString("FormsAuthenticationDeleteMarksIfUnusedUnknownErrorException", "ExE89297", false, true, Strings.ResourceManager, new object[]
			{
				metabasePath,
				propertyID
			});
		}

		// Token: 0x1700359E RID: 13726
		// (get) Token: 0x0600A35D RID: 41821 RVA: 0x00281CD0 File Offset: 0x0027FED0
		public static LocalizedString CannotMoveE15OrLaterOab
		{
			get
			{
				return new LocalizedString("CannotMoveE15OrLaterOab", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A35E RID: 41822 RVA: 0x00281CF0 File Offset: 0x0027FEF0
		public static LocalizedString RpcNotRegistered(string server)
		{
			return new LocalizedString("RpcNotRegistered", "Ex8D5D8A", false, true, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		// Token: 0x0600A35F RID: 41823 RVA: 0x00281D20 File Offset: 0x0027FF20
		public static LocalizedString ExportDestinationAccessDenied(string name)
		{
			return new LocalizedString("ExportDestinationAccessDenied", "Ex60A182", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x0600A360 RID: 41824 RVA: 0x00281D50 File Offset: 0x0027FF50
		public static LocalizedString ErrorCannotFindComputerObjectByServerFqdnNeedManualAdd(string fqdn)
		{
			return new LocalizedString("ErrorCannotFindComputerObjectByServerFqdnNeedManualAdd", "Ex64127A", false, true, Strings.ResourceManager, new object[]
			{
				fqdn
			});
		}

		// Token: 0x0600A361 RID: 41825 RVA: 0x00281D80 File Offset: 0x0027FF80
		public static LocalizedString RequestCertificateFileInvalid(string message)
		{
			return new LocalizedString("RequestCertificateFileInvalid", "", false, false, Strings.ResourceManager, new object[]
			{
				message
			});
		}

		// Token: 0x0600A362 RID: 41826 RVA: 0x00281DB0 File Offset: 0x0027FFB0
		public static LocalizedString ConfirmationMessageRemoveSendConnector(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveSendConnector", "Ex2715E9", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x0600A363 RID: 41827 RVA: 0x00281DE0 File Offset: 0x0027FFE0
		public static LocalizedString ErrorRusServiceUnavaliable(string server, string details)
		{
			return new LocalizedString("ErrorRusServiceUnavaliable", "ExDD6292", false, true, Strings.ResourceManager, new object[]
			{
				server,
				details
			});
		}

		// Token: 0x0600A364 RID: 41828 RVA: 0x00281E14 File Offset: 0x00280014
		public static LocalizedString ErrorEdbFilePathMissed(string database)
		{
			return new LocalizedString("ErrorEdbFilePathMissed", "Ex37BD57", false, true, Strings.ResourceManager, new object[]
			{
				database
			});
		}

		// Token: 0x0600A365 RID: 41829 RVA: 0x00281E44 File Offset: 0x00280044
		public static LocalizedString ErrorMailboxAuditLogSearchStartDateIsLaterThanEndDate(string startDate, string endDate)
		{
			return new LocalizedString("ErrorMailboxAuditLogSearchStartDateIsLaterThanEndDate", "ExB2607D", false, true, Strings.ResourceManager, new object[]
			{
				startDate,
				endDate
			});
		}

		// Token: 0x0600A366 RID: 41830 RVA: 0x00281E78 File Offset: 0x00280078
		public static LocalizedString MapiTransactionServerWithoutMdbs(string targetServer)
		{
			return new LocalizedString("MapiTransactionServerWithoutMdbs", "ExC952BE", false, true, Strings.ResourceManager, new object[]
			{
				targetServer
			});
		}

		// Token: 0x1700359F RID: 13727
		// (get) Token: 0x0600A367 RID: 41831 RVA: 0x00281EA7 File Offset: 0x002800A7
		public static LocalizedString DebugEndIsDomainReservedCheck
		{
			get
			{
				return new LocalizedString("DebugEndIsDomainReservedCheck", "ExEE6559", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A368 RID: 41832 RVA: 0x00281EC8 File Offset: 0x002800C8
		public static LocalizedString InfoCreatePasswordSettings(string dn)
		{
			return new LocalizedString("InfoCreatePasswordSettings", "Ex74D967", false, true, Strings.ResourceManager, new object[]
			{
				dn
			});
		}

		// Token: 0x170035A0 RID: 13728
		// (get) Token: 0x0600A369 RID: 41833 RVA: 0x00281EF7 File Offset: 0x002800F7
		public static LocalizedString IisTasksNameValidationProperty
		{
			get
			{
				return new LocalizedString("IisTasksNameValidationProperty", "ExF13215", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170035A1 RID: 13729
		// (get) Token: 0x0600A36A RID: 41834 RVA: 0x00281F15 File Offset: 0x00280115
		public static LocalizedString FDS_OAD_PerfCountersComponentDescription
		{
			get
			{
				return new LocalizedString("FDS_OAD_PerfCountersComponentDescription", "Ex785F91", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170035A2 RID: 13730
		// (get) Token: 0x0600A36B RID: 41835 RVA: 0x00281F33 File Offset: 0x00280133
		public static LocalizedString ServerObjectIsNullWarning
		{
			get
			{
				return new LocalizedString("ServerObjectIsNullWarning", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A36C RID: 41836 RVA: 0x00281F54 File Offset: 0x00280154
		public static LocalizedString TryingCertificate(string Subject, string Thumbprint)
		{
			return new LocalizedString("TryingCertificate", "Ex64C53F", false, true, Strings.ResourceManager, new object[]
			{
				Subject,
				Thumbprint
			});
		}

		// Token: 0x170035A3 RID: 13731
		// (get) Token: 0x0600A36D RID: 41837 RVA: 0x00281F87 File Offset: 0x00280187
		public static LocalizedString ProgressStatusCompleted
		{
			get
			{
				return new LocalizedString("ProgressStatusCompleted", "ExD6B7F8", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170035A4 RID: 13732
		// (get) Token: 0x0600A36E RID: 41838 RVA: 0x00281FA5 File Offset: 0x002801A5
		public static LocalizedString ReplayLagPlayDownReasonNotEnoughFreeSpace
		{
			get
			{
				return new LocalizedString("ReplayLagPlayDownReasonNotEnoughFreeSpace", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A36F RID: 41839 RVA: 0x00281FC4 File Offset: 0x002801C4
		public static LocalizedString ConfirmationMessageRemoveOabVirtualDirectory(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveOabVirtualDirectory", "ExF23611", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x170035A5 RID: 13733
		// (get) Token: 0x0600A370 RID: 41840 RVA: 0x00281FF3 File Offset: 0x002801F3
		public static LocalizedString ErrorSetRecipientViewRootAndViewEntireForestToTrue
		{
			get
			{
				return new LocalizedString("ErrorSetRecipientViewRootAndViewEntireForestToTrue", "ExA51902", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170035A6 RID: 13734
		// (get) Token: 0x0600A371 RID: 41841 RVA: 0x00282011 File Offset: 0x00280211
		public static LocalizedString NewImap4ConfigurationTask
		{
			get
			{
				return new LocalizedString("NewImap4ConfigurationTask", "ExEDCE19", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A372 RID: 41842 RVA: 0x00282030 File Offset: 0x00280230
		public static LocalizedString CannotContinue(string operation)
		{
			return new LocalizedString("CannotContinue", "", false, false, Strings.ResourceManager, new object[]
			{
				operation
			});
		}

		// Token: 0x0600A373 RID: 41843 RVA: 0x00282060 File Offset: 0x00280260
		public static LocalizedString NotEnoughFreePrioritiesAvailable(string priority)
		{
			return new LocalizedString("NotEnoughFreePrioritiesAvailable", "", false, false, Strings.ResourceManager, new object[]
			{
				priority
			});
		}

		// Token: 0x0600A374 RID: 41844 RVA: 0x00282090 File Offset: 0x00280290
		public static LocalizedString ElcExpirationServiceUnavailable(string serverName, string errorCode)
		{
			return new LocalizedString("ElcExpirationServiceUnavailable", "", false, false, Strings.ResourceManager, new object[]
			{
				serverName,
				errorCode
			});
		}

		// Token: 0x170035A7 RID: 13735
		// (get) Token: 0x0600A375 RID: 41845 RVA: 0x002820C3 File Offset: 0x002802C3
		public static LocalizedString ScenarioAvailabilityService
		{
			get
			{
				return new LocalizedString("ScenarioAvailabilityService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A376 RID: 41846 RVA: 0x002820E4 File Offset: 0x002802E4
		public static LocalizedString MoveMailboxOnlineShouldMove(string displayname, string smtp, string database)
		{
			return new LocalizedString("MoveMailboxOnlineShouldMove", "Ex4DBD3A", false, true, Strings.ResourceManager, new object[]
			{
				displayname,
				smtp,
				database
			});
		}

		// Token: 0x170035A8 RID: 13736
		// (get) Token: 0x0600A377 RID: 41847 RVA: 0x0028211B File Offset: 0x0028031B
		public static LocalizedString MigrationValidateNotSupported
		{
			get
			{
				return new LocalizedString("MigrationValidateNotSupported", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170035A9 RID: 13737
		// (get) Token: 0x0600A378 RID: 41848 RVA: 0x00282139 File Offset: 0x00280339
		public static LocalizedString ErrorGenericAllCannotbeUsedWithOtherAccessRights
		{
			get
			{
				return new LocalizedString("ErrorGenericAllCannotbeUsedWithOtherAccessRights", "Ex47BC5A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A379 RID: 41849 RVA: 0x00282158 File Offset: 0x00280358
		public static LocalizedString InfoProcessAddRight(string right, string domain)
		{
			return new LocalizedString("InfoProcessAddRight", "Ex47EBF2", false, true, Strings.ResourceManager, new object[]
			{
				right,
				domain
			});
		}

		// Token: 0x0600A37A RID: 41850 RVA: 0x0028218C File Offset: 0x0028038C
		public static LocalizedString CasHealthOwaLogonAuthenticationMethod(string method)
		{
			return new LocalizedString("CasHealthOwaLogonAuthenticationMethod", "Ex97C263", false, true, Strings.ResourceManager, new object[]
			{
				method
			});
		}

		// Token: 0x170035AA RID: 13738
		// (get) Token: 0x0600A37B RID: 41851 RVA: 0x002821BB File Offset: 0x002803BB
		public static LocalizedString ErrorInvalidSizeRangeCondition
		{
			get
			{
				return new LocalizedString("ErrorInvalidSizeRangeCondition", "ExAA6372", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A37C RID: 41852 RVA: 0x002821DC File Offset: 0x002803DC
		public static LocalizedString InvalidMessageClassification(string classification)
		{
			return new LocalizedString("InvalidMessageClassification", "Ex169D57", false, true, Strings.ResourceManager, new object[]
			{
				classification
			});
		}

		// Token: 0x0600A37D RID: 41853 RVA: 0x0028220C File Offset: 0x0028040C
		public static LocalizedString ConfirmationMessageSetOrganizationFlags(string organization)
		{
			return new LocalizedString("ConfirmationMessageSetOrganizationFlags", "ExC3FA63", false, true, Strings.ResourceManager, new object[]
			{
				organization
			});
		}

		// Token: 0x170035AB RID: 13739
		// (get) Token: 0x0600A37E RID: 41854 RVA: 0x0028223B File Offset: 0x0028043B
		public static LocalizedString MigrationCsvParameterInvalid
		{
			get
			{
				return new LocalizedString("MigrationCsvParameterInvalid", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170035AC RID: 13740
		// (get) Token: 0x0600A37F RID: 41855 RVA: 0x00282259 File Offset: 0x00280459
		public static LocalizedString ADAttributeName
		{
			get
			{
				return new LocalizedString("ADAttributeName", "ExC2B93C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170035AD RID: 13741
		// (get) Token: 0x0600A380 RID: 41856 RVA: 0x00282277 File Offset: 0x00280477
		public static LocalizedString ValidatingUserObjectDescription
		{
			get
			{
				return new LocalizedString("ValidatingUserObjectDescription", "Ex5E402D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A381 RID: 41857 RVA: 0x00282298 File Offset: 0x00280498
		public static LocalizedString ConfirmationMessageSetWorkloadPolicy(string Name)
		{
			return new LocalizedString("ConfirmationMessageSetWorkloadPolicy", "", false, false, Strings.ResourceManager, new object[]
			{
				Name
			});
		}

		// Token: 0x0600A382 RID: 41858 RVA: 0x002822C8 File Offset: 0x002804C8
		public static LocalizedString DuplicateItemInGatewayIpAddressListId(string ip)
		{
			return new LocalizedString("DuplicateItemInGatewayIpAddressListId", "Ex448496", false, true, Strings.ResourceManager, new object[]
			{
				ip
			});
		}

		// Token: 0x0600A383 RID: 41859 RVA: 0x002822F8 File Offset: 0x002804F8
		public static LocalizedString ErrorAdUserNotUnique(string user)
		{
			return new LocalizedString("ErrorAdUserNotUnique", "ExBD778E", false, true, Strings.ResourceManager, new object[]
			{
				user
			});
		}

		// Token: 0x170035AE RID: 13742
		// (get) Token: 0x0600A384 RID: 41860 RVA: 0x00282327 File Offset: 0x00280527
		public static LocalizedString RmsOnline
		{
			get
			{
				return new LocalizedString("RmsOnline", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170035AF RID: 13743
		// (get) Token: 0x0600A385 RID: 41861 RVA: 0x00282345 File Offset: 0x00280545
		public static LocalizedString SetupProgressDisplaySpecifiers
		{
			get
			{
				return new LocalizedString("SetupProgressDisplaySpecifiers", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A386 RID: 41862 RVA: 0x00282364 File Offset: 0x00280564
		public static LocalizedString ConfirmationMessageNewClassificationRuleCollection(string name)
		{
			return new LocalizedString("ConfirmationMessageNewClassificationRuleCollection", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x0600A387 RID: 41863 RVA: 0x00282394 File Offset: 0x00280594
		public static LocalizedString ClearingHostServerForDatabaseCopy(string dbCopyName)
		{
			return new LocalizedString("ClearingHostServerForDatabaseCopy", "", false, false, Strings.ResourceManager, new object[]
			{
				dbCopyName
			});
		}

		// Token: 0x0600A388 RID: 41864 RVA: 0x002823C4 File Offset: 0x002805C4
		public static LocalizedString ConfirmationMessageSetHostedContentFilterRule(string identity)
		{
			return new LocalizedString("ConfirmationMessageSetHostedContentFilterRule", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x0600A389 RID: 41865 RVA: 0x002823F4 File Offset: 0x002805F4
		public static LocalizedString WarningProvisionedServerAlreadyAssigned(string server)
		{
			return new LocalizedString("WarningProvisionedServerAlreadyAssigned", "Ex95FB53", false, true, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		// Token: 0x0600A38A RID: 41866 RVA: 0x00282424 File Offset: 0x00280624
		public static LocalizedString ExportToPSTShouldExport(string srcDisplayname, string PSTFolderPath)
		{
			return new LocalizedString("ExportToPSTShouldExport", "ExE094F2", false, true, Strings.ResourceManager, new object[]
			{
				srcDisplayname,
				PSTFolderPath
			});
		}

		// Token: 0x0600A38B RID: 41867 RVA: 0x00282458 File Offset: 0x00280658
		public static LocalizedString VerboseWillBeLookingForAssignee(string checkConfigNC, string checkDomainNC)
		{
			return new LocalizedString("VerboseWillBeLookingForAssignee", "Ex673189", false, true, Strings.ResourceManager, new object[]
			{
				checkConfigNC,
				checkDomainNC
			});
		}

		// Token: 0x0600A38C RID: 41868 RVA: 0x0028248C File Offset: 0x0028068C
		public static LocalizedString SetMailboxSearchConfirmation(string identity)
		{
			return new LocalizedString("SetMailboxSearchConfirmation", "Ex425B0C", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x0600A38D RID: 41869 RVA: 0x002824BC File Offset: 0x002806BC
		public static LocalizedString FailedToReadAirSyncDebugLogging(string user, string error)
		{
			return new LocalizedString("FailedToReadAirSyncDebugLogging", "Ex1FA32F", false, true, Strings.ResourceManager, new object[]
			{
				user,
				error
			});
		}

		// Token: 0x0600A38E RID: 41870 RVA: 0x002824F0 File Offset: 0x002806F0
		public static LocalizedString ErrorCannotSetVirtualDirectoryOutOfWriteScope(string virtualDirectoryName, string reason)
		{
			return new LocalizedString("ErrorCannotSetVirtualDirectoryOutOfWriteScope", "", false, false, Strings.ResourceManager, new object[]
			{
				virtualDirectoryName,
				reason
			});
		}

		// Token: 0x0600A38F RID: 41871 RVA: 0x00282524 File Offset: 0x00280724
		public static LocalizedString ExportMigrationBatchRowCountOutOfBoundsException(int requestedRowCount, int minRowCount, int maxRowCount)
		{
			return new LocalizedString("ExportMigrationBatchRowCountOutOfBoundsException", "ExB1DCBE", false, true, Strings.ResourceManager, new object[]
			{
				requestedRowCount,
				minRowCount,
				maxRowCount
			});
		}

		// Token: 0x170035B0 RID: 13744
		// (get) Token: 0x0600A390 RID: 41872 RVA: 0x0028256A File Offset: 0x0028076A
		public static LocalizedString UnableToDetermineExecutingUser
		{
			get
			{
				return new LocalizedString("UnableToDetermineExecutingUser", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A391 RID: 41873 RVA: 0x00282588 File Offset: 0x00280788
		public static LocalizedString VerboseDefaultGALFound(string id)
		{
			return new LocalizedString("VerboseDefaultGALFound", "ExE1F42D", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		// Token: 0x0600A392 RID: 41874 RVA: 0x002825B8 File Offset: 0x002807B8
		public static LocalizedString ConfirmationMessageRemoveExchangeSettings(string Name)
		{
			return new LocalizedString("ConfirmationMessageRemoveExchangeSettings", "", false, false, Strings.ResourceManager, new object[]
			{
				Name
			});
		}

		// Token: 0x0600A393 RID: 41875 RVA: 0x002825E8 File Offset: 0x002807E8
		public static LocalizedString InfoReadObjectFromDC(string server, string dn)
		{
			return new LocalizedString("InfoReadObjectFromDC", "Ex67AEE6", false, true, Strings.ResourceManager, new object[]
			{
				server,
				dn
			});
		}

		// Token: 0x0600A394 RID: 41876 RVA: 0x0028261C File Offset: 0x0028081C
		public static LocalizedString TasksRpcListenerRpcFailed(string machineName, string error)
		{
			return new LocalizedString("TasksRpcListenerRpcFailed", "Ex623565", false, true, Strings.ResourceManager, new object[]
			{
				machineName,
				error
			});
		}

		// Token: 0x0600A395 RID: 41877 RVA: 0x00282650 File Offset: 0x00280850
		public static LocalizedString ErrorRemoteEndpointsCannotBeUsedOnLocalBatches(string endpointName)
		{
			return new LocalizedString("ErrorRemoteEndpointsCannotBeUsedOnLocalBatches", "", false, false, Strings.ResourceManager, new object[]
			{
				endpointName
			});
		}

		// Token: 0x0600A396 RID: 41878 RVA: 0x00282680 File Offset: 0x00280880
		public static LocalizedString ExportIOFailure(string err)
		{
			return new LocalizedString("ExportIOFailure", "Ex3B7F53", false, true, Strings.ResourceManager, new object[]
			{
				err
			});
		}

		// Token: 0x170035B1 RID: 13745
		// (get) Token: 0x0600A397 RID: 41879 RVA: 0x002826AF File Offset: 0x002808AF
		public static LocalizedString ComAdminInstallOleConverter
		{
			get
			{
				return new LocalizedString("ComAdminInstallOleConverter", "ExFAA989", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A398 RID: 41880 RVA: 0x002826D0 File Offset: 0x002808D0
		public static LocalizedString DeleteClusterDBKey(string database)
		{
			return new LocalizedString("DeleteClusterDBKey", "", false, false, Strings.ResourceManager, new object[]
			{
				database
			});
		}

		// Token: 0x0600A399 RID: 41881 RVA: 0x00282700 File Offset: 0x00280900
		public static LocalizedString ConfirmationMessageSetDeliveryAgentConnector(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetDeliveryAgentConnector", "ExF22120", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x0600A39A RID: 41882 RVA: 0x00282730 File Offset: 0x00280930
		public static LocalizedString MRSProxyNotResponding(string mrsProxyServer, string mrsServer, LocalizedString error)
		{
			return new LocalizedString("MRSProxyNotResponding", "", false, false, Strings.ResourceManager, new object[]
			{
				mrsProxyServer,
				mrsServer,
				error
			});
		}

		// Token: 0x170035B2 RID: 13746
		// (get) Token: 0x0600A39B RID: 41883 RVA: 0x0028276C File Offset: 0x0028096C
		public static LocalizedString BPACheckingForUpdates
		{
			get
			{
				return new LocalizedString("BPACheckingForUpdates", "ExB5286C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A39C RID: 41884 RVA: 0x0028278C File Offset: 0x0028098C
		public static LocalizedString CorruptedRoleNeedsCleanupException(string roleId, string error)
		{
			return new LocalizedString("CorruptedRoleNeedsCleanupException", "Ex53113A", false, true, Strings.ResourceManager, new object[]
			{
				roleId,
				error
			});
		}

		// Token: 0x170035B3 RID: 13747
		// (get) Token: 0x0600A39D RID: 41885 RVA: 0x002827BF File Offset: 0x002809BF
		public static LocalizedString SendConnectorValidSourceServerNotFound
		{
			get
			{
				return new LocalizedString("SendConnectorValidSourceServerNotFound", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A39E RID: 41886 RVA: 0x002827E0 File Offset: 0x002809E0
		public static LocalizedString ErrorManagedMemberExists(string memberName)
		{
			return new LocalizedString("ErrorManagedMemberExists", "ExD9BD5D", false, true, Strings.ResourceManager, new object[]
			{
				memberName
			});
		}

		// Token: 0x0600A39F RID: 41887 RVA: 0x00282810 File Offset: 0x00280A10
		public static LocalizedString InfoMovedGroup(string group, string oldOU, string newOU)
		{
			return new LocalizedString("InfoMovedGroup", "Ex193D62", false, true, Strings.ResourceManager, new object[]
			{
				group,
				oldOU,
				newOU
			});
		}

		// Token: 0x170035B4 RID: 13748
		// (get) Token: 0x0600A3A0 RID: 41888 RVA: 0x00282847 File Offset: 0x00280A47
		public static LocalizedString AboutToAddLocalOrgUSGToLocalAdminGroup
		{
			get
			{
				return new LocalizedString("AboutToAddLocalOrgUSGToLocalAdminGroup", "ExEFF7C8", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A3A1 RID: 41889 RVA: 0x00282868 File Offset: 0x00280A68
		public static LocalizedString VerboseFoundInvalidAlternateServiceAccountCredential(string qualifiedUserName, DateTime whenAdded, string failureReason)
		{
			return new LocalizedString("VerboseFoundInvalidAlternateServiceAccountCredential", "ExBC75BE", false, true, Strings.ResourceManager, new object[]
			{
				qualifiedUserName,
				whenAdded,
				failureReason
			});
		}

		// Token: 0x170035B5 RID: 13749
		// (get) Token: 0x0600A3A2 RID: 41890 RVA: 0x002828A4 File Offset: 0x00280AA4
		public static LocalizedString DatabaseRedundancyCheckDesc
		{
			get
			{
				return new LocalizedString("DatabaseRedundancyCheckDesc", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170035B6 RID: 13750
		// (get) Token: 0x0600A3A3 RID: 41891 RVA: 0x002828C2 File Offset: 0x00280AC2
		public static LocalizedString MarkingMoveJobAsCanceled
		{
			get
			{
				return new LocalizedString("MarkingMoveJobAsCanceled", "Ex5CEC2C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170035B7 RID: 13751
		// (get) Token: 0x0600A3A4 RID: 41892 RVA: 0x002828E0 File Offset: 0x00280AE0
		public static LocalizedString InstallFrontendTransportRoleDescription
		{
			get
			{
				return new LocalizedString("InstallFrontendTransportRoleDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A3A5 RID: 41893 RVA: 0x00282900 File Offset: 0x00280B00
		public static LocalizedString CannotProvisionNonCoexistenceDomain(string domain)
		{
			return new LocalizedString("CannotProvisionNonCoexistenceDomain", "", false, false, Strings.ResourceManager, new object[]
			{
				domain
			});
		}

		// Token: 0x0600A3A6 RID: 41894 RVA: 0x00282930 File Offset: 0x00280B30
		public static LocalizedString VerboseRereadRecipient(string id, string root)
		{
			return new LocalizedString("VerboseRereadRecipient", "Ex479BD5", false, true, Strings.ResourceManager, new object[]
			{
				id,
				root
			});
		}

		// Token: 0x0600A3A7 RID: 41895 RVA: 0x00282964 File Offset: 0x00280B64
		public static LocalizedString ConfirmationMessageSetInboundConnector(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetInboundConnector", "", false, false, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x0600A3A8 RID: 41896 RVA: 0x00282994 File Offset: 0x00280B94
		public static LocalizedString TestMailflowSucceeded(string source, string target)
		{
			return new LocalizedString("TestMailflowSucceeded", "ExC16C8B", false, true, Strings.ResourceManager, new object[]
			{
				source,
				target
			});
		}

		// Token: 0x0600A3A9 RID: 41897 RVA: 0x002829C8 File Offset: 0x00280BC8
		public static LocalizedString ErrorAdministratorNotInDomainError(string netId, string domainName)
		{
			return new LocalizedString("ErrorAdministratorNotInDomainError", "Ex053012", false, true, Strings.ResourceManager, new object[]
			{
				netId,
				domainName
			});
		}

		// Token: 0x0600A3AA RID: 41898 RVA: 0x002829FC File Offset: 0x00280BFC
		public static LocalizedString ErrorOabALAlreadyAssigned(string oab, string oabAL)
		{
			return new LocalizedString("ErrorOabALAlreadyAssigned", "ExFFBB2E", false, true, Strings.ResourceManager, new object[]
			{
				oab,
				oabAL
			});
		}

		// Token: 0x0600A3AB RID: 41899 RVA: 0x00282A30 File Offset: 0x00280C30
		public static LocalizedString CommitMetabaseChangesException(string server)
		{
			return new LocalizedString("CommitMetabaseChangesException", "Ex86D640", false, true, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		// Token: 0x0600A3AC RID: 41900 RVA: 0x00282A60 File Offset: 0x00280C60
		public static LocalizedString ErrorAssociatedMRSRequestExists(string requestType)
		{
			return new LocalizedString("ErrorAssociatedMRSRequestExists", "ExF81D7C", false, true, Strings.ResourceManager, new object[]
			{
				requestType
			});
		}

		// Token: 0x0600A3AD RID: 41901 RVA: 0x00282A90 File Offset: 0x00280C90
		public static LocalizedString ClassificationRuleCollectionExistingRuleIdViolation(string ruleIds)
		{
			return new LocalizedString("ClassificationRuleCollectionExistingRuleIdViolation", "", false, false, Strings.ResourceManager, new object[]
			{
				ruleIds
			});
		}

		// Token: 0x170035B8 RID: 13752
		// (get) Token: 0x0600A3AE RID: 41902 RVA: 0x00282ABF File Offset: 0x00280CBF
		public static LocalizedString RmsSharedIdentityFailedToRemoveLink
		{
			get
			{
				return new LocalizedString("RmsSharedIdentityFailedToRemoveLink", "Ex13D44F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170035B9 RID: 13753
		// (get) Token: 0x0600A3AF RID: 41903 RVA: 0x00282ADD File Offset: 0x00280CDD
		public static LocalizedString SetupProgressCreateMessageHygieneContainer
		{
			get
			{
				return new LocalizedString("SetupProgressCreateMessageHygieneContainer", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A3B0 RID: 41904 RVA: 0x00282AFC File Offset: 0x00280CFC
		public static LocalizedString ConfirmationMessageRemoveRoutingGroupConnector(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveRoutingGroupConnector", "Ex8E2D6E", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x170035BA RID: 13754
		// (get) Token: 0x0600A3B1 RID: 41905 RVA: 0x00282B2B File Offset: 0x00280D2B
		public static LocalizedString ErrorInvalidResponseFormat
		{
			get
			{
				return new LocalizedString("ErrorInvalidResponseFormat", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A3B2 RID: 41906 RVA: 0x00282B4C File Offset: 0x00280D4C
		public static LocalizedString ErrorOriginalLogFolderPathIsMissed(string database)
		{
			return new LocalizedString("ErrorOriginalLogFolderPathIsMissed", "Ex053530", false, true, Strings.ResourceManager, new object[]
			{
				database
			});
		}

		// Token: 0x0600A3B3 RID: 41907 RVA: 0x00282B7C File Offset: 0x00280D7C
		public static LocalizedString VerboseFailedToPrepopulateCache(string message)
		{
			return new LocalizedString("VerboseFailedToPrepopulateCache", "Ex03AC3B", false, true, Strings.ResourceManager, new object[]
			{
				message
			});
		}

		// Token: 0x0600A3B4 RID: 41908 RVA: 0x00282BAC File Offset: 0x00280DAC
		public static LocalizedString ConfirmationMessageEnableRpcHttpExternalOnly(string WebSiteName, string Server, string ExternalHostname, string ExternalClientAuthenticationMethod, string IISAuthenticationMethods)
		{
			return new LocalizedString("ConfirmationMessageEnableRpcHttpExternalOnly", "", false, false, Strings.ResourceManager, new object[]
			{
				WebSiteName,
				Server,
				ExternalHostname,
				ExternalClientAuthenticationMethod,
				IISAuthenticationMethods
			});
		}

		// Token: 0x170035BB RID: 13755
		// (get) Token: 0x0600A3B5 RID: 41909 RVA: 0x00282BEC File Offset: 0x00280DEC
		public static LocalizedString NewPolicyTipConfigDuplicate
		{
			get
			{
				return new LocalizedString("NewPolicyTipConfigDuplicate", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A3B6 RID: 41910 RVA: 0x00282C0C File Offset: 0x00280E0C
		public static LocalizedString messageClientAccessArrayNotFoundException(string site, ServerIdParameter serverId)
		{
			return new LocalizedString("messageClientAccessArrayNotFoundException", "", false, false, Strings.ResourceManager, new object[]
			{
				site,
				serverId
			});
		}

		// Token: 0x0600A3B7 RID: 41911 RVA: 0x00282C40 File Offset: 0x00280E40
		public static LocalizedString UnwillingToPerformException(string name, string dom)
		{
			return new LocalizedString("UnwillingToPerformException", "Ex7BFD6B", false, true, Strings.ResourceManager, new object[]
			{
				name,
				dom
			});
		}

		// Token: 0x0600A3B8 RID: 41912 RVA: 0x00282C74 File Offset: 0x00280E74
		public static LocalizedString ErrorTestMailboxNotFound(string scriptsPath, string datacenter, string errorDetails)
		{
			return new LocalizedString("ErrorTestMailboxNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				scriptsPath,
				datacenter,
				errorDetails
			});
		}

		// Token: 0x0600A3B9 RID: 41913 RVA: 0x00282CAC File Offset: 0x00280EAC
		public static LocalizedString RequiredColumnEmpty(int rowNumber, string required)
		{
			return new LocalizedString("RequiredColumnEmpty", "Ex52C554", false, true, Strings.ResourceManager, new object[]
			{
				rowNumber,
				required
			});
		}

		// Token: 0x0600A3BA RID: 41914 RVA: 0x00282CE4 File Offset: 0x00280EE4
		public static LocalizedString ErrorCannotDisablePrimaryPublicFolderMailbox(string name)
		{
			return new LocalizedString("ErrorCannotDisablePrimaryPublicFolderMailbox", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x170035BC RID: 13756
		// (get) Token: 0x0600A3BB RID: 41915 RVA: 0x00282D13 File Offset: 0x00280F13
		public static LocalizedString VerboseUnlockingModulesSection
		{
			get
			{
				return new LocalizedString("VerboseUnlockingModulesSection", "Ex07EC3B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A3BC RID: 41916 RVA: 0x00282D34 File Offset: 0x00280F34
		public static LocalizedString ErrorRootContainerNotExist(string root)
		{
			return new LocalizedString("ErrorRootContainerNotExist", "Ex1DC7EB", false, true, Strings.ResourceManager, new object[]
			{
				root
			});
		}

		// Token: 0x0600A3BD RID: 41917 RVA: 0x00282D64 File Offset: 0x00280F64
		public static LocalizedString DagTaskServerCanNotContactClusterException(int numberOfOtherServers, string otherServers)
		{
			return new LocalizedString("DagTaskServerCanNotContactClusterException", "", false, false, Strings.ResourceManager, new object[]
			{
				numberOfOtherServers,
				otherServers
			});
		}

		// Token: 0x0600A3BE RID: 41918 RVA: 0x00282D9C File Offset: 0x00280F9C
		public static LocalizedString ErrorCannotUpgradeManagedFolder(string folderName)
		{
			return new LocalizedString("ErrorCannotUpgradeManagedFolder", "", false, false, Strings.ResourceManager, new object[]
			{
				folderName
			});
		}

		// Token: 0x170035BD RID: 13757
		// (get) Token: 0x0600A3BF RID: 41919 RVA: 0x00282DCB File Offset: 0x00280FCB
		public static LocalizedString SetupProgressAllowRemotePowerShellForAdmins
		{
			get
			{
				return new LocalizedString("SetupProgressAllowRemotePowerShellForAdmins", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170035BE RID: 13758
		// (get) Token: 0x0600A3C0 RID: 41920 RVA: 0x00282DE9 File Offset: 0x00280FE9
		public static LocalizedString SetupProgressHostedConnectorFilterPolicy
		{
			get
			{
				return new LocalizedString("SetupProgressHostedConnectorFilterPolicy", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A3C1 RID: 41921 RVA: 0x00282E08 File Offset: 0x00281008
		public static LocalizedString WriteScopeGreaterThanRoleScope(string scopeName, string roleName, string implicitScope)
		{
			return new LocalizedString("WriteScopeGreaterThanRoleScope", "ExFE35D5", false, true, Strings.ResourceManager, new object[]
			{
				scopeName,
				roleName,
				implicitScope
			});
		}

		// Token: 0x0600A3C2 RID: 41922 RVA: 0x00282E40 File Offset: 0x00281040
		public static LocalizedString RemoveADServerMetadataConfirmationMessage(string identity)
		{
			return new LocalizedString("RemoveADServerMetadataConfirmationMessage", "ExC10E7A", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x0600A3C3 RID: 41923 RVA: 0x00282E70 File Offset: 0x00281070
		public static LocalizedString ConfirmationMessageEnableMailboxAuditLog(string Identity)
		{
			return new LocalizedString("ConfirmationMessageEnableMailboxAuditLog", "", false, false, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x0600A3C4 RID: 41924 RVA: 0x00282EA0 File Offset: 0x002810A0
		public static LocalizedString Error_InvalidAddress(string address)
		{
			return new LocalizedString("Error_InvalidAddress", "", false, false, Strings.ResourceManager, new object[]
			{
				address
			});
		}

		// Token: 0x170035BF RID: 13759
		// (get) Token: 0x0600A3C5 RID: 41925 RVA: 0x00282ECF File Offset: 0x002810CF
		public static LocalizedString NoSmtpAddress
		{
			get
			{
				return new LocalizedString("NoSmtpAddress", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A3C6 RID: 41926 RVA: 0x00282EF0 File Offset: 0x002810F0
		public static LocalizedString UnifiedMessagingMailboxPolicyHasProtectAuthenticatedVoiceMailSetTo(string policyName, DRMProtectionOptions drmProtectionOption)
		{
			return new LocalizedString("UnifiedMessagingMailboxPolicyHasProtectAuthenticatedVoiceMailSetTo", "", false, false, Strings.ResourceManager, new object[]
			{
				policyName,
				drmProtectionOption
			});
		}

		// Token: 0x170035C0 RID: 13760
		// (get) Token: 0x0600A3C7 RID: 41927 RVA: 0x00282F28 File Offset: 0x00281128
		public static LocalizedString ErrorBPAConfigDataSave
		{
			get
			{
				return new LocalizedString("ErrorBPAConfigDataSave", "Ex9A4568", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170035C1 RID: 13761
		// (get) Token: 0x0600A3C8 RID: 41928 RVA: 0x00282F46 File Offset: 0x00281146
		public static LocalizedString OfficeDataLoaderServiceDescription
		{
			get
			{
				return new LocalizedString("OfficeDataLoaderServiceDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170035C2 RID: 13762
		// (get) Token: 0x0600A3C9 RID: 41929 RVA: 0x00282F64 File Offset: 0x00281164
		public static LocalizedString IISNotInstalled
		{
			get
			{
				return new LocalizedString("IISNotInstalled", "Ex4F725C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A3CA RID: 41930 RVA: 0x00282F84 File Offset: 0x00281184
		public static LocalizedString ErrorManagedByCrossTenant(string manageBy)
		{
			return new LocalizedString("ErrorManagedByCrossTenant", "Ex1753C5", false, true, Strings.ResourceManager, new object[]
			{
				manageBy
			});
		}

		// Token: 0x0600A3CB RID: 41931 RVA: 0x00282FB4 File Offset: 0x002811B4
		public static LocalizedString MigrationPartitionMailboxInvalid(string mailbox)
		{
			return new LocalizedString("MigrationPartitionMailboxInvalid", "", false, false, Strings.ResourceManager, new object[]
			{
				mailbox
			});
		}

		// Token: 0x0600A3CC RID: 41932 RVA: 0x00282FE4 File Offset: 0x002811E4
		public static LocalizedString AttemptingToManageRole(string mode, string role)
		{
			return new LocalizedString("AttemptingToManageRole", "ExB7DEB5", false, true, Strings.ResourceManager, new object[]
			{
				mode,
				role
			});
		}

		// Token: 0x0600A3CD RID: 41933 RVA: 0x00283018 File Offset: 0x00281218
		public static LocalizedString RmsOnlineFailedToGetTpd(Exception e, Exception inner)
		{
			return new LocalizedString("RmsOnlineFailedToGetTpd", "", false, false, Strings.ResourceManager, new object[]
			{
				e,
				inner
			});
		}

		// Token: 0x170035C3 RID: 13763
		// (get) Token: 0x0600A3CE RID: 41934 RVA: 0x0028304B File Offset: 0x0028124B
		public static LocalizedString GetPolicyTipConfigUrlUsedAsActionFilter
		{
			get
			{
				return new LocalizedString("GetPolicyTipConfigUrlUsedAsActionFilter", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A3CF RID: 41935 RVA: 0x0028306C File Offset: 0x0028126C
		public static LocalizedString ErrorCannotModifyRehomingRequest(string identity)
		{
			return new LocalizedString("ErrorCannotModifyRehomingRequest", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x170035C4 RID: 13764
		// (get) Token: 0x0600A3D0 RID: 41936 RVA: 0x0028309B File Offset: 0x0028129B
		public static LocalizedString ErrorSetGroupMailboxRemoveMembersOtherUser
		{
			get
			{
				return new LocalizedString("ErrorSetGroupMailboxRemoveMembersOtherUser", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A3D1 RID: 41937 RVA: 0x002830BC File Offset: 0x002812BC
		public static LocalizedString VerboseBeginTextExtraction(int fileSize, int textScanLimit)
		{
			return new LocalizedString("VerboseBeginTextExtraction", "", false, false, Strings.ResourceManager, new object[]
			{
				fileSize,
				textScanLimit
			});
		}

		// Token: 0x170035C5 RID: 13765
		// (get) Token: 0x0600A3D2 RID: 41938 RVA: 0x002830F9 File Offset: 0x002812F9
		public static LocalizedString CasHealthCalendarVDirSuccess
		{
			get
			{
				return new LocalizedString("CasHealthCalendarVDirSuccess", "ExD995BC", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170035C6 RID: 13766
		// (get) Token: 0x0600A3D3 RID: 41939 RVA: 0x00283117 File Offset: 0x00281317
		public static LocalizedString IgnoredAuthenticationWarning
		{
			get
			{
				return new LocalizedString("IgnoredAuthenticationWarning", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170035C7 RID: 13767
		// (get) Token: 0x0600A3D4 RID: 41940 RVA: 0x00283135 File Offset: 0x00281335
		public static LocalizedString AutoGroupJoinMessageSubject
		{
			get
			{
				return new LocalizedString("AutoGroupJoinMessageSubject", "ExD64285", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A3D5 RID: 41941 RVA: 0x00283154 File Offset: 0x00281354
		public static LocalizedString CasHealthOwaErrorPageRequestUrl(string url)
		{
			return new LocalizedString("CasHealthOwaErrorPageRequestUrl", "ExC6CF0B", false, true, Strings.ResourceManager, new object[]
			{
				url
			});
		}

		// Token: 0x0600A3D6 RID: 41942 RVA: 0x00283184 File Offset: 0x00281384
		public static LocalizedString ConfirmationMessageNewTeamMailbox(string Name, string UserPrincipalName, string OrganizationalUnit)
		{
			return new LocalizedString("ConfirmationMessageNewTeamMailbox", "", false, false, Strings.ResourceManager, new object[]
			{
				Name,
				UserPrincipalName,
				OrganizationalUnit
			});
		}

		// Token: 0x0600A3D7 RID: 41943 RVA: 0x002831BC File Offset: 0x002813BC
		public static LocalizedString DagMemberUpCheckFailed(string serverName, string dagName)
		{
			return new LocalizedString("DagMemberUpCheckFailed", "ExE201FF", false, true, Strings.ResourceManager, new object[]
			{
				serverName,
				dagName
			});
		}

		// Token: 0x0600A3D8 RID: 41944 RVA: 0x002831F0 File Offset: 0x002813F0
		public static LocalizedString MailboxAssistantsServiceCouldNotBeStopped(string serverName, string errorMessage)
		{
			return new LocalizedString("MailboxAssistantsServiceCouldNotBeStopped", "Ex415A5B", false, true, Strings.ResourceManager, new object[]
			{
				serverName,
				errorMessage
			});
		}

		// Token: 0x170035C8 RID: 13768
		// (get) Token: 0x0600A3D9 RID: 41945 RVA: 0x00283223 File Offset: 0x00281423
		public static LocalizedString MigrationOperationFailed
		{
			get
			{
				return new LocalizedString("MigrationOperationFailed", "Ex0F93AF", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170035C9 RID: 13769
		// (get) Token: 0x0600A3DA RID: 41946 RVA: 0x00283241 File Offset: 0x00281441
		public static LocalizedString OwaAuthenticationNotMatchEcpWarning
		{
			get
			{
				return new LocalizedString("OwaAuthenticationNotMatchEcpWarning", "Ex3154A1", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A3DB RID: 41947 RVA: 0x00283260 File Offset: 0x00281460
		public static LocalizedString ConfirmationMessageRemoveHostedEncryptionVirtualDirectory(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveHostedEncryptionVirtualDirectory", "", false, false, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x0600A3DC RID: 41948 RVA: 0x00283290 File Offset: 0x00281490
		public static LocalizedString UnableToGetProcessForService(string serviceName, string exception)
		{
			return new LocalizedString("UnableToGetProcessForService", "Ex14BA3A", false, true, Strings.ResourceManager, new object[]
			{
				serviceName,
				exception
			});
		}

		// Token: 0x170035CA RID: 13770
		// (get) Token: 0x0600A3DD RID: 41949 RVA: 0x002832C3 File Offset: 0x002814C3
		public static LocalizedString ErrorCannotMovePublicFolderIntoSameMailbox
		{
			get
			{
				return new LocalizedString("ErrorCannotMovePublicFolderIntoSameMailbox", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A3DE RID: 41950 RVA: 0x002832E4 File Offset: 0x002814E4
		public static LocalizedString ConfirmationMessageConnectMailboxShared(string Identity, string Shared, string Database)
		{
			return new LocalizedString("ConfirmationMessageConnectMailboxShared", "Ex3E167E", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				Shared,
				Database
			});
		}

		// Token: 0x0600A3DF RID: 41951 RVA: 0x0028331C File Offset: 0x0028151C
		public static LocalizedString CasHealthOwaUrlColon(string url)
		{
			return new LocalizedString("CasHealthOwaUrlColon", "Ex93E13B", false, true, Strings.ResourceManager, new object[]
			{
				url
			});
		}

		// Token: 0x170035CB RID: 13771
		// (get) Token: 0x0600A3E0 RID: 41952 RVA: 0x0028334B File Offset: 0x0028154B
		public static LocalizedString SetupProgressStartingEdgeSyncService
		{
			get
			{
				return new LocalizedString("SetupProgressStartingEdgeSyncService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170035CC RID: 13772
		// (get) Token: 0x0600A3E1 RID: 41953 RVA: 0x00283369 File Offset: 0x00281569
		public static LocalizedString MailSubmissionServiceDisplayName
		{
			get
			{
				return new LocalizedString("MailSubmissionServiceDisplayName", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A3E2 RID: 41954 RVA: 0x00283388 File Offset: 0x00281588
		public static LocalizedString ErrorDuplicateKey(int key)
		{
			return new LocalizedString("ErrorDuplicateKey", "", false, false, Strings.ResourceManager, new object[]
			{
				key
			});
		}

		// Token: 0x0600A3E3 RID: 41955 RVA: 0x002833BC File Offset: 0x002815BC
		public static LocalizedString ConfirmationMessageSwitchMailboxPolicy(string policyType, string Identity)
		{
			return new LocalizedString("ConfirmationMessageSwitchMailboxPolicy", "", false, false, Strings.ResourceManager, new object[]
			{
				policyType,
				Identity
			});
		}

		// Token: 0x170035CD RID: 13773
		// (get) Token: 0x0600A3E4 RID: 41956 RVA: 0x002833EF File Offset: 0x002815EF
		public static LocalizedString AutodiscoverFailure
		{
			get
			{
				return new LocalizedString("AutodiscoverFailure", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170035CE RID: 13774
		// (get) Token: 0x0600A3E5 RID: 41957 RVA: 0x0028340D File Offset: 0x0028160D
		public static LocalizedString ConflictedPolicyUpdateNotAllowed
		{
			get
			{
				return new LocalizedString("ConflictedPolicyUpdateNotAllowed", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170035CF RID: 13775
		// (get) Token: 0x0600A3E6 RID: 41958 RVA: 0x0028342B File Offset: 0x0028162B
		public static LocalizedString InvalidCategory
		{
			get
			{
				return new LocalizedString("InvalidCategory", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A3E7 RID: 41959 RVA: 0x0028344C File Offset: 0x0028164C
		public static LocalizedString InfoCreateMESOContainer(string dn)
		{
			return new LocalizedString("InfoCreateMESOContainer", "Ex9EA7D9", false, true, Strings.ResourceManager, new object[]
			{
				dn
			});
		}

		// Token: 0x0600A3E8 RID: 41960 RVA: 0x0028347C File Offset: 0x0028167C
		public static LocalizedString ErrorNoDefaultAcceptedDomainFound(string orgId)
		{
			return new LocalizedString("ErrorNoDefaultAcceptedDomainFound", "Ex27F402", false, true, Strings.ResourceManager, new object[]
			{
				orgId
			});
		}

		// Token: 0x0600A3E9 RID: 41961 RVA: 0x002834AC File Offset: 0x002816AC
		public static LocalizedString IPRangeInConnectorContainsReservedIPAddressesId(string ipRange)
		{
			return new LocalizedString("IPRangeInConnectorContainsReservedIPAddressesId", "", false, false, Strings.ResourceManager, new object[]
			{
				ipRange
			});
		}

		// Token: 0x0600A3EA RID: 41962 RVA: 0x002834DC File Offset: 0x002816DC
		public static LocalizedString HostedContentFilterActionDescription(string policy)
		{
			return new LocalizedString("HostedContentFilterActionDescription", "", false, false, Strings.ResourceManager, new object[]
			{
				policy
			});
		}

		// Token: 0x0600A3EB RID: 41963 RVA: 0x0028350C File Offset: 0x0028170C
		public static LocalizedString DomainIgnoredBecauseApplicationUriInconsitent(string domain, string actualApplicationUri, string expectedApplicationUri)
		{
			return new LocalizedString("DomainIgnoredBecauseApplicationUriInconsitent", "Ex8EE66A", false, true, Strings.ResourceManager, new object[]
			{
				domain,
				actualApplicationUri,
				expectedApplicationUri
			});
		}

		// Token: 0x0600A3EC RID: 41964 RVA: 0x00283544 File Offset: 0x00281744
		public static LocalizedString TestSearchServiceNotRunning(string service)
		{
			return new LocalizedString("TestSearchServiceNotRunning", "ExF36E4F", false, true, Strings.ResourceManager, new object[]
			{
				service
			});
		}

		// Token: 0x0600A3ED RID: 41965 RVA: 0x00283574 File Offset: 0x00281774
		public static LocalizedString Error_NoDatabaseAttributesMatchingMailboxProvisioningConstraint(string mailboxProvisioningConstraint)
		{
			return new LocalizedString("Error_NoDatabaseAttributesMatchingMailboxProvisioningConstraint", "", false, false, Strings.ResourceManager, new object[]
			{
				mailboxProvisioningConstraint
			});
		}

		// Token: 0x170035D0 RID: 13776
		// (get) Token: 0x0600A3EE RID: 41966 RVA: 0x002835A3 File Offset: 0x002817A3
		public static LocalizedString JournalingToExternalOnly
		{
			get
			{
				return new LocalizedString("JournalingToExternalOnly", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170035D1 RID: 13777
		// (get) Token: 0x0600A3EF RID: 41967 RVA: 0x002835C1 File Offset: 0x002817C1
		public static LocalizedString ErrorTenantIsPiloting
		{
			get
			{
				return new LocalizedString("ErrorTenantIsPiloting", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A3F0 RID: 41968 RVA: 0x002835E0 File Offset: 0x002817E0
		public static LocalizedString ConfirmationMessageNewAuthServer(string name)
		{
			return new LocalizedString("ConfirmationMessageNewAuthServer", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		// Token: 0x170035D2 RID: 13778
		// (get) Token: 0x0600A3F1 RID: 41969 RVA: 0x0028360F File Offset: 0x0028180F
		public static LocalizedString SetupProgressStoppingAddressBookService
		{
			get
			{
				return new LocalizedString("SetupProgressStoppingAddressBookService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170035D3 RID: 13779
		// (get) Token: 0x0600A3F2 RID: 41970 RVA: 0x0028362D File Offset: 0x0028182D
		public static LocalizedString SetupComponentConfiguringADTopologyService
		{
			get
			{
				return new LocalizedString("SetupComponentConfiguringADTopologyService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170035D4 RID: 13780
		// (get) Token: 0x0600A3F3 RID: 41971 RVA: 0x0028364B File Offset: 0x0028184B
		public static LocalizedString FailedToCreateAuditLogSearch
		{
			get
			{
				return new LocalizedString("FailedToCreateAuditLogSearch", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A3F4 RID: 41972 RVA: 0x0028366C File Offset: 0x0028186C
		public static LocalizedString ErrorCannotUMEnableInTarget(string user, string reason)
		{
			return new LocalizedString("ErrorCannotUMEnableInTarget", "Ex92C8B1", false, true, Strings.ResourceManager, new object[]
			{
				user,
				reason
			});
		}

		// Token: 0x0600A3F5 RID: 41973 RVA: 0x002836A0 File Offset: 0x002818A0
		public static LocalizedString TPRListenerNotHealthy(string machineName, string error)
		{
			return new LocalizedString("TPRListenerNotHealthy", "ExD848BD", false, true, Strings.ResourceManager, new object[]
			{
				machineName,
				error
			});
		}

		// Token: 0x0600A3F6 RID: 41974 RVA: 0x002836D4 File Offset: 0x002818D4
		public static LocalizedString ErrorNoTenantGlsRecord(string identity)
		{
			return new LocalizedString("ErrorNoTenantGlsRecord", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x170035D5 RID: 13781
		// (get) Token: 0x0600A3F7 RID: 41975 RVA: 0x00283703 File Offset: 0x00281903
		public static LocalizedString WarningPropertySetIgnored
		{
			get
			{
				return new LocalizedString("WarningPropertySetIgnored", "Ex69E418", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170035D6 RID: 13782
		// (get) Token: 0x0600A3F8 RID: 41976 RVA: 0x00283721 File Offset: 0x00281921
		public static LocalizedString MigrationPleaseUseStopForDisablingIncremental
		{
			get
			{
				return new LocalizedString("MigrationPleaseUseStopForDisablingIncremental", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170035D7 RID: 13783
		// (get) Token: 0x0600A3F9 RID: 41977 RVA: 0x0028373F File Offset: 0x0028193F
		public static LocalizedString StatusMessageSynchronizerRunningInBackground
		{
			get
			{
				return new LocalizedString("StatusMessageSynchronizerRunningInBackground", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170035D8 RID: 13784
		// (get) Token: 0x0600A3FA RID: 41978 RVA: 0x0028375D File Offset: 0x0028195D
		public static LocalizedString ErrorBothCustomAndPrecannedFilterSpecified
		{
			get
			{
				return new LocalizedString("ErrorBothCustomAndPrecannedFilterSpecified", "Ex63CCD2", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x170035D9 RID: 13785
		// (get) Token: 0x0600A3FB RID: 41979 RVA: 0x0028377B File Offset: 0x0028197B
		public static LocalizedString ErrorTaskRunningLocationFrontendOnly
		{
			get
			{
				return new LocalizedString("ErrorTaskRunningLocationFrontendOnly", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A3FC RID: 41980 RVA: 0x0028379C File Offset: 0x0028199C
		public static LocalizedString ConfirmationMessageSetDistributionGroup(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetDistributionGroup", "ExDFA746", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		// Token: 0x0600A3FD RID: 41981 RVA: 0x002837CC File Offset: 0x002819CC
		public static LocalizedString ErrorDBOwningServerNotFound(string idStringValue)
		{
			return new LocalizedString("ErrorDBOwningServerNotFound", "Ex9B8A30", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		// Token: 0x170035DA RID: 13786
		// (get) Token: 0x0600A3FE RID: 41982 RVA: 0x002837FB File Offset: 0x002819FB
		public static LocalizedString CasHealthOwaErrorPageHeader
		{
			get
			{
				return new LocalizedString("CasHealthOwaErrorPageHeader", "Ex4B2980", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		// Token: 0x0600A3FF RID: 41983 RVA: 0x0028381C File Offset: 0x00281A1C
		public static LocalizedString WarningDismountDatabaseToDoConfigurationOnly(string databaseName)
		{
			return new LocalizedString("WarningDismountDatabaseToDoConfigurationOnly", "Ex37DE77", false, true, Strings.ResourceManager, new object[]
			{
				databaseName
			});
		}

		// Token: 0x0600A400 RID: 41984 RVA: 0x0028384C File Offset: 0x00281A4C
		public static LocalizedString DuplicateRemoteDomain(string domain)
		{
			return new LocalizedString("DuplicateRemoteDomain", "Ex032532", false, true, Strings.ResourceManager, new object[]
			{
				domain
			});
		}

		// Token: 0x0600A401 RID: 41985 RVA: 0x0028387C File Offset: 0x00281A7C
		public static LocalizedString ConfirmationMessageInterceptorRuleForestWide(string identity)
		{
			return new LocalizedString("ConfirmationMessageInterceptorRuleForestWide", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		// Token: 0x0600A402 RID: 41986 RVA: 0x002838AC File Offset: 0x00281AAC
		public static LocalizedString ErrorRemoveMailboxPlanRoleAssignment(string user, string role, string plan)
		{
			return new LocalizedString("ErrorRemoveMailboxPlanRoleAssignment", "Ex12E850", false, true, Strings.ResourceManager, new object[]
			{
				user,
				role,
				plan
			});
		}

		// Token: 0x0600A403 RID: 41987 RVA: 0x002838E3 File Offset: 0x00281AE3
		public static LocalizedString GetLocalizedString(Strings.IDs key)
		{
			return new LocalizedString(Strings.stringIDs[(uint)key], Strings.ResourceManager, new object[0]);
		}

		// Token: 0x040041B6 RID: 16822
		private static Dictionary<uint, string> stringIDs = new Dictionary<uint, string>(3091);

		// Token: 0x040041B7 RID: 16823
		private static ExchangeResourceManager ResourceManager = ExchangeResourceManager.GetResourceManager("Microsoft.Exchange.Management.Tasks.Strings", typeof(Strings).GetTypeInfo().Assembly);

		// Token: 0x02000DCD RID: 3533
		public enum IDs : uint
		{
			// Token: 0x040041B9 RID: 16825
			SetupComponentGatewayLocal = 139133773U,
			// Token: 0x040041BA RID: 16826
			SetupProgressCreateServerObject = 1019266140U,
			// Token: 0x040041BB RID: 16827
			ErrorPatternCannotContainEmptyAlternations = 3118077072U,
			// Token: 0x040041BC RID: 16828
			SetupComponentPostSetupUnifiedMessaging = 3133271685U,
			// Token: 0x040041BD RID: 16829
			CannotCombineWildcardRecipientAddress = 3076033759U,
			// Token: 0x040041BE RID: 16830
			VerboseRebuildWSManRegistry = 4053421780U,
			// Token: 0x040041BF RID: 16831
			CannotAddIPSafelistsIfIPSafelistingSyncDisabledId = 3032285884U,
			// Token: 0x040041C0 RID: 16832
			ExpiryDateSameOrBeforeActivationDate = 876478325U,
			// Token: 0x040041C1 RID: 16833
			ErrorPrecannedRoleAndSpecificMailboxFolderPermission = 2380804056U,
			// Token: 0x040041C2 RID: 16834
			ErrorCannotSpecifyScopeParameter = 274479317U,
			// Token: 0x040041C3 RID: 16835
			SetupProgressImportingAddionalEdgeSchema = 4176599321U,
			// Token: 0x040041C4 RID: 16836
			E4eLicensingIsDisabledCreateRule = 1856519480U,
			// Token: 0x040041C5 RID: 16837
			SetupProgressInstallMessageDeliveryContainer = 3267746767U,
			// Token: 0x040041C6 RID: 16838
			SetupProgressInstallAdministrativeGroupContainer = 361784375U,
			// Token: 0x040041C7 RID: 16839
			ErrorRoomPasswordMustBeSetWhenEnablingRoomADAccount = 2367053929U,
			// Token: 0x040041C8 RID: 16840
			SetupProgressCreateRBACRoles = 786067343U,
			// Token: 0x040041C9 RID: 16841
			ForwardSyncServiceDisplayName = 1845804172U,
			// Token: 0x040041CA RID: 16842
			MoveContentIndexTask = 3030424583U,
			// Token: 0x040041CB RID: 16843
			ADAttributeLastName = 1016721882U,
			// Token: 0x040041CC RID: 16844
			ErrorMaxVersionOrFixVersionRequired = 859062683U,
			// Token: 0x040041CD RID: 16845
			WarningIgnoreMailboxSettingOnlyPolicy = 2850084476U,
			// Token: 0x040041CE RID: 16846
			InstallExchangeOrganizationDescription = 1427955775U,
			// Token: 0x040041CF RID: 16847
			ClassificationRuleCollectionIllegalScopedNewOperation = 126246359U,
			// Token: 0x040041D0 RID: 16848
			CannotRemoveDefaultRemoteDomain = 3732489244U,
			// Token: 0x040041D1 RID: 16849
			SetupProgressCreateLiveEnableFederatedEmailMailbox = 45450529U,
			// Token: 0x040041D2 RID: 16850
			SetupComponentBridgeheadGlobalConfig = 1765853772U,
			// Token: 0x040041D3 RID: 16851
			CopyStatusMisconfigured = 1587179080U,
			// Token: 0x040041D4 RID: 16852
			DiagnosticsServiceDescription = 213659447U,
			// Token: 0x040041D5 RID: 16853
			DisableConversationsTask = 3491818999U,
			// Token: 0x040041D6 RID: 16854
			SetupProgressOutlookAnywhereEnabled = 622937693U,
			// Token: 0x040041D7 RID: 16855
			ErrorCannotSetPowerShellMaxTenantConcurrency = 3937769803U,
			// Token: 0x040041D8 RID: 16856
			ForwardSyncService2DisplayName = 2729327636U,
			// Token: 0x040041D9 RID: 16857
			ErrorSuspendWhenReadyToCompleteCannotBeSetWithIncrementalSyncInterval = 1063350901U,
			// Token: 0x040041DA RID: 16858
			SetupProgressStoppingComplianceAuditService = 2071245439U,
			// Token: 0x040041DB RID: 16859
			HealthManagerServiceDescription = 2461945188U,
			// Token: 0x040041DC RID: 16860
			MessageTracingClientServiceDescription = 739210221U,
			// Token: 0x040041DD RID: 16861
			RoleNonEditingAuthor = 1636409600U,
			// Token: 0x040041DE RID: 16862
			ErrorSecondaryMailboxIdRequired = 2218700066U,
			// Token: 0x040041DF RID: 16863
			HeaderName = 2909775076U,
			// Token: 0x040041E0 RID: 16864
			InvalidRecipient = 2790684056U,
			// Token: 0x040041E1 RID: 16865
			RcrDatabasesMountedCheckDesc = 512186364U,
			// Token: 0x040041E2 RID: 16866
			RemovingFiles = 277119228U,
			// Token: 0x040041E3 RID: 16867
			RoleContributor = 2589734627U,
			// Token: 0x040041E4 RID: 16868
			SetupProgressCreateRBACRolesContainer = 3036981548U,
			// Token: 0x040041E5 RID: 16869
			NoVersionMatch = 523386612U,
			// Token: 0x040041E6 RID: 16870
			JournalNdrMailboxInJournalRuleRecipient = 3195479398U,
			// Token: 0x040041E7 RID: 16871
			PromptToUpgradeRulesFormat = 4055862009U,
			// Token: 0x040041E8 RID: 16872
			ErrorAliasEmpty = 2917478147U,
			// Token: 0x040041E9 RID: 16873
			SetupProgressCreatePrecannedGAL = 3482350932U,
			// Token: 0x040041EA RID: 16874
			ConnectorValidationFailedId = 2322679854U,
			// Token: 0x040041EB RID: 16875
			PatternContainsProhibitedLeadingOrTrailingRegexCharacters = 277022941U,
			// Token: 0x040041EC RID: 16876
			ConfirmationMessageImportJournalRuleCollection = 3852117776U,
			// Token: 0x040041ED RID: 16877
			InfoGetLicensingUri = 1287226944U,
			// Token: 0x040041EE RID: 16878
			InvalidSummmarizeBy = 904825440U,
			// Token: 0x040041EF RID: 16879
			SetAppConfigValue = 793178976U,
			// Token: 0x040041F0 RID: 16880
			MsiReinstallMustAll = 3312690295U,
			// Token: 0x040041F1 RID: 16881
			MessageTypeReadReceipt = 680782013U,
			// Token: 0x040041F2 RID: 16882
			InfoLoadIRMConfig = 1329598090U,
			// Token: 0x040041F3 RID: 16883
			ErrorEmptyProxyAddressInWLID = 1720218724U,
			// Token: 0x040041F4 RID: 16884
			ErrorInvalidApplicationId = 1830044678U,
			// Token: 0x040041F5 RID: 16885
			ExceptionUserObjectAmbiguous = 597233763U,
			// Token: 0x040041F6 RID: 16886
			StartMidFileCopyDescription = 4051199925U,
			// Token: 0x040041F7 RID: 16887
			InstallFreeBusyFolderUnableToCreateFolder = 1580525556U,
			// Token: 0x040041F8 RID: 16888
			UceContentFilterObjectNotFound = 2295478344U,
			// Token: 0x040041F9 RID: 16889
			AuditLogSearchNamePrefix = 689400110U,
			// Token: 0x040041FA RID: 16890
			SetupProgressCreatePrecannedAddressLists = 367024857U,
			// Token: 0x040041FB RID: 16891
			MoreThanOneRecipient = 4203484097U,
			// Token: 0x040041FC RID: 16892
			ConfirmationMessageNewEdgeSubscription = 1173059748U,
			// Token: 0x040041FD RID: 16893
			Imap4BeServiceDescription = 830763533U,
			// Token: 0x040041FE RID: 16894
			SetupProgressUpdateDatabaseCopy = 1019596387U,
			// Token: 0x040041FF RID: 16895
			DatabaseWideTasksExceeded = 2140270019U,
			// Token: 0x04004200 RID: 16896
			MatchSubDomainsIsInternalRelayOnly = 3053221044U,
			// Token: 0x04004201 RID: 16897
			InstallBridgeheadRoleDescription = 1690438080U,
			// Token: 0x04004202 RID: 16898
			ResourceCorruptCalConfig = 1897883499U,
			// Token: 0x04004203 RID: 16899
			SetupProgressSearchMessageEnabled = 805031200U,
			// Token: 0x04004204 RID: 16900
			IisTasksApplicationPoolValidationProperty = 3381267863U,
			// Token: 0x04004205 RID: 16901
			IncompatibleVoiceMailProtectionAndAnalysisSettings = 2160696509U,
			// Token: 0x04004206 RID: 16902
			CasHealtRemotePowerShellCloseRunspaceSucceeded = 1863749674U,
			// Token: 0x04004207 RID: 16903
			SetupProgressInstallDefaultConnectionFilterContainer = 3928796881U,
			// Token: 0x04004208 RID: 16904
			NoUserOrOrganiztionProvidedException = 3857675279U,
			// Token: 0x04004209 RID: 16905
			ErrorInboxRuleMustHaveActions = 3733737272U,
			// Token: 0x0400420A RID: 16906
			ConfirmationMessageWebServicesVirtualDirectoryContinue = 4218611731U,
			// Token: 0x0400420B RID: 16907
			MigrationWorkflowServiceDescription = 593283652U,
			// Token: 0x0400420C RID: 16908
			ErrorFolderIsMailEnabled = 156083260U,
			// Token: 0x0400420D RID: 16909
			CasHealthOwaAuthTypeNotCheckedForExternalUrl = 634620851U,
			// Token: 0x0400420E RID: 16910
			ExportCertificateAs12WithoutKey = 2953781159U,
			// Token: 0x0400420F RID: 16911
			ChangePasswordInvalidNewPassword = 3512699247U,
			// Token: 0x04004210 RID: 16912
			MigrationBatchIdMissing = 926742601U,
			// Token: 0x04004211 RID: 16913
			CasHealthAdditionalInformation = 1422131190U,
			// Token: 0x04004212 RID: 16914
			TestMigrationServerAvailabilityProtocolArgument = 3939837379U,
			// Token: 0x04004213 RID: 16915
			OrganizationNotFederatedException = 2096844093U,
			// Token: 0x04004214 RID: 16916
			ReplayLagStatusLabelPlayDownReason = 3160504501U,
			// Token: 0x04004215 RID: 16917
			ErrorDialPlanNotMatch = 3354444285U,
			// Token: 0x04004216 RID: 16918
			SetupComponentAllADRolesCommon = 4002412124U,
			// Token: 0x04004217 RID: 16919
			QuorumGroupCheckDesc = 1401307769U,
			// Token: 0x04004218 RID: 16920
			CasHealthSiteName = 543437901U,
			// Token: 0x04004219 RID: 16921
			WarningAuthenticationTypeIsNotChanged = 1291176623U,
			// Token: 0x0400421A RID: 16922
			ArbitrationMailboxDefaultDisplayName = 1647181233U,
			// Token: 0x0400421B RID: 16923
			ErrorMoreThanOneAggregatedAccountOperationSpecified = 2290602049U,
			// Token: 0x0400421C RID: 16924
			SetupProgressSchemaFile = 4115286253U,
			// Token: 0x0400421D RID: 16925
			ConfirmationMessageImportDlpPolicy = 3380542549U,
			// Token: 0x0400421E RID: 16926
			CasTransactionResultUndefined = 3583369532U,
			// Token: 0x0400421F RID: 16927
			InfoNoTiFound = 4191725334U,
			// Token: 0x04004220 RID: 16928
			TransitionStateInactive = 3094442783U,
			// Token: 0x04004221 RID: 16929
			RpcProxyScenario = 2731029007U,
			// Token: 0x04004222 RID: 16930
			ClearingCache = 2024045189U,
			// Token: 0x04004223 RID: 16931
			CasHealthEasScenarioSyncOne = 1160072915U,
			// Token: 0x04004224 RID: 16932
			ErrorNotSupportedWritableRecipient = 860632184U,
			// Token: 0x04004225 RID: 16933
			PromptToOverwriteRulesOnImport = 1041810761U,
			// Token: 0x04004226 RID: 16934
			ErrorPrimarySmtpAndEmailAddressesSpecified = 2801716203U,
			// Token: 0x04004227 RID: 16935
			ErrorRemoveMailboxWithJournalArchiveWithDirSync = 1003706237U,
			// Token: 0x04004228 RID: 16936
			ModerateActionMustBeTheOnlyAction = 3682029584U,
			// Token: 0x04004229 RID: 16937
			TransitionInfoLabelCurrentState = 965874437U,
			// Token: 0x0400422A RID: 16938
			ComAdminUninstallOleConverter = 2357316042U,
			// Token: 0x0400422B RID: 16939
			SetRuleSyncAcrossDifferentVersionsNeeded = 4146681835U,
			// Token: 0x0400422C RID: 16940
			DatabasesCopyKeepingUpCheckDesc = 1534135610U,
			// Token: 0x0400422D RID: 16941
			InvalidStartDateOffset = 4021383240U,
			// Token: 0x0400422E RID: 16942
			WarningSupervisionTagsRemoved = 2142106696U,
			// Token: 0x0400422F RID: 16943
			SetupProgressEnableWMIInbound = 549796425U,
			// Token: 0x04004230 RID: 16944
			DefaultAllRooms = 1998021006U,
			// Token: 0x04004231 RID: 16945
			JournalingParameterErrorGccWithoutRecipient = 777113388U,
			// Token: 0x04004232 RID: 16946
			TenantAdminCannotInvokeHotmailOperation = 2991269321U,
			// Token: 0x04004233 RID: 16947
			DlpPolicyInvalidCollectionError = 1614986787U,
			// Token: 0x04004234 RID: 16948
			UCWADiscoveryUrlEmpty = 3163237226U,
			// Token: 0x04004235 RID: 16949
			ActiveDirectorySearchScenario = 3568214229U,
			// Token: 0x04004236 RID: 16950
			InfoGetCertificationUri = 1888394526U,
			// Token: 0x04004237 RID: 16951
			UCWADiscoveryUrlException = 3248899022U,
			// Token: 0x04004238 RID: 16952
			ErrorNoAggregatedAccountOperationSpecified = 681186416U,
			// Token: 0x04004239 RID: 16953
			CertificateWasNotFound = 2266904519U,
			// Token: 0x0400423A RID: 16954
			ErrorSystemFolderPathNotAvailable = 4098321834U,
			// Token: 0x0400423B RID: 16955
			CasHealthOwaAuthTypeCheckedForInternalUrl = 4252886198U,
			// Token: 0x0400423C RID: 16956
			GetQueueDigestForestParameterCannotBeFalse = 1806450332U,
			// Token: 0x0400423D RID: 16957
			ExceptionEmptyStringNotAllowed = 3632772754U,
			// Token: 0x0400423E RID: 16958
			MtrtAddHeader = 2448948717U,
			// Token: 0x0400423F RID: 16959
			AnonymousUser = 1144958480U,
			// Token: 0x04004240 RID: 16960
			CannotSetPerimeterOrgIdIfEhfConfigSyncIsDisabledId = 2027635495U,
			// Token: 0x04004241 RID: 16961
			CasHealthOwaAuthenticationVerificationError = 485575497U,
			// Token: 0x04004242 RID: 16962
			WarningSettingsNotModifiable = 580429770U,
			// Token: 0x04004243 RID: 16963
			InstallDagMgmtServiceTask = 4280240728U,
			// Token: 0x04004244 RID: 16964
			DataClassificationDnIdentityNotSupported = 3793537057U,
			// Token: 0x04004245 RID: 16965
			InvalidRuleSearchFilterEmpty = 4162603766U,
			// Token: 0x04004246 RID: 16966
			InvalidPage = 4029807706U,
			// Token: 0x04004247 RID: 16967
			ErrorSuspendWhenReadyToCompleteCannotBeSetWithStartAfterOrCompleteAfter = 1240499241U,
			// Token: 0x04004248 RID: 16968
			ErrorRemoveMailuserWithJournalArchive = 681744771U,
			// Token: 0x04004249 RID: 16969
			ErrorInvalidEndpointParameterReasonInvalidProperty = 1288394341U,
			// Token: 0x0400424A RID: 16970
			Pop3BeServiceDescription = 3248641044U,
			// Token: 0x0400424B RID: 16971
			DefaultAllGroups = 3224500054U,
			// Token: 0x0400424C RID: 16972
			ErrorDisableMailboxWithJournalArchive = 872238113U,
			// Token: 0x0400424D RID: 16973
			ProgressActivityGetFederationMetadata = 2758012420U,
			// Token: 0x0400424E RID: 16974
			InvalidPrimaryLeaseLocation = 1925218238U,
			// Token: 0x0400424F RID: 16975
			InvalidSource = 4270189224U,
			// Token: 0x04004250 RID: 16976
			LanguagePackPerfCounterMergeEnd = 386910029U,
			// Token: 0x04004251 RID: 16977
			CheckServerConfiguration = 3881434143U,
			// Token: 0x04004252 RID: 16978
			UpgradedSearchObjectDescription = 3485959825U,
			// Token: 0x04004253 RID: 16979
			CopyStatusSinglePageRestore = 1359519288U,
			// Token: 0x04004254 RID: 16980
			IgnoreRequireTLSConflict = 2764219150U,
			// Token: 0x04004255 RID: 16981
			ErrorRpcHttpMustSpecifyInternalClientsRequireSslParameter = 3098305126U,
			// Token: 0x04004256 RID: 16982
			EmptyMesssageWillBeCreated = 2769512906U,
			// Token: 0x04004257 RID: 16983
			SubjectCnNotValidFQDN = 2142814423U,
			// Token: 0x04004258 RID: 16984
			WarningExpiryDateBeforeCurrentDate = 1829927449U,
			// Token: 0x04004259 RID: 16985
			MtrtRequireTLS = 339075801U,
			// Token: 0x0400425A RID: 16986
			SendConnectorSourceServersSetForEdge = 68568156U,
			// Token: 0x0400425B RID: 16987
			ErrorInvalidCertificateData = 3910947918U,
			// Token: 0x0400425C RID: 16988
			NoKeyIDInImportedTrustedPublishingDomain = 2582005788U,
			// Token: 0x0400425D RID: 16989
			SetupProgressDistributionListCountQuota = 3281590539U,
			// Token: 0x0400425E RID: 16990
			ConfirmationMessageIRMConfig = 3636258538U,
			// Token: 0x0400425F RID: 16991
			DebugStartGeneratingUniqueSamAccountName = 204012629U,
			// Token: 0x04004260 RID: 16992
			CouldNotFindAutodiscoverService = 3148569182U,
			// Token: 0x04004261 RID: 16993
			ErrorInvalidAuditAdminOperationType = 3468504006U,
			// Token: 0x04004262 RID: 16994
			ErrorAuthServerCannotSwitchType = 3768201246U,
			// Token: 0x04004263 RID: 16995
			VirtualDirectoryTypeNotApplicable = 1045148960U,
			// Token: 0x04004264 RID: 16996
			RmsOnlineUrlsNotPresent = 1725140761U,
			// Token: 0x04004265 RID: 16997
			StartPreConfigurationDescription = 3070965441U,
			// Token: 0x04004266 RID: 16998
			ErrorAssociatedMoveRequestExists = 893233504U,
			// Token: 0x04004267 RID: 16999
			MigrationStartAfterRequiresAutoComplete = 2558903800U,
			// Token: 0x04004268 RID: 17000
			SomeMapiTransactionsFailedPrefix = 3445636645U,
			// Token: 0x04004269 RID: 17001
			InfoCheckingTpdFromRmsOnline = 2031086061U,
			// Token: 0x0400426A RID: 17002
			TenantNotificationUnavailableEventMessage = 2409328034U,
			// Token: 0x0400426B RID: 17003
			DagTaskRestoreDagCouldNotOpenCluster = 2876349303U,
			// Token: 0x0400426C RID: 17004
			ConfirmationMessageSetIPAllowListConfig = 1304474150U,
			// Token: 0x0400426D RID: 17005
			UpdateManageDelegation2ProvisioningInDNS = 1086317875U,
			// Token: 0x0400426E RID: 17006
			ErrorIgnoreDefaultScopeAndDCSetTogether = 3216817101U,
			// Token: 0x0400426F RID: 17007
			CasHealthOwaNoCasArgumentError = 1657137395U,
			// Token: 0x04004270 RID: 17008
			HybridMailflowOutboundConnectorComment = 1869397051U,
			// Token: 0x04004271 RID: 17009
			PublishManageDelegation2ProvisioningInDNS = 2049140123U,
			// Token: 0x04004272 RID: 17010
			InvalidActionSequence = 1018858686U,
			// Token: 0x04004273 RID: 17011
			CannotUseDefaultAttributesForExchange2007OAB = 3567029179U,
			// Token: 0x04004274 RID: 17012
			ImproperTypeForThisIdParameter = 1247936583U,
			// Token: 0x04004275 RID: 17013
			SetupProgressStoppingWatchDogService = 1594256938U,
			// Token: 0x04004276 RID: 17014
			ErrorPreventCompletionCannotSet = 2800695281U,
			// Token: 0x04004277 RID: 17015
			ErrorTaskRunningLocation = 1000180735U,
			// Token: 0x04004278 RID: 17016
			ErrorTenantOrgOutOfDate = 1044260641U,
			// Token: 0x04004279 RID: 17017
			SetupProgressStartingComplianceAuditService = 3858535199U,
			// Token: 0x0400427A RID: 17018
			ConfirmationMessageSetIPBlockListProvidersConfig = 1197534060U,
			// Token: 0x0400427B RID: 17019
			UninstallMailboxReplicationServiceTask = 1114455400U,
			// Token: 0x0400427C RID: 17020
			SetupProgressAutoReplyEnabled = 46134730U,
			// Token: 0x0400427D RID: 17021
			SynNowCanOnlyRunAgainstHub = 1293373139U,
			// Token: 0x0400427E RID: 17022
			UninstallKeynoteConnectorServiceTask = 1906820204U,
			// Token: 0x0400427F RID: 17023
			ProgressStatusRemovingManagementRoleTree = 511946795U,
			// Token: 0x04004280 RID: 17024
			CasTransactionResultSkipped = 345735772U,
			// Token: 0x04004281 RID: 17025
			ErrorAgentCannotBeDisabled = 2053186887U,
			// Token: 0x04004282 RID: 17026
			CreateSharedConfigurationRequiredForTT = 1842673731U,
			// Token: 0x04004283 RID: 17027
			SetupProgressStoppingAdam = 3723446335U,
			// Token: 0x04004284 RID: 17028
			CasHealthOwaGotIsaLogonPage = 3205347653U,
			// Token: 0x04004285 RID: 17029
			CreateActiveSyncOraganizationSettings = 3576079758U,
			// Token: 0x04004286 RID: 17030
			InheritedAceIgnored = 2814365579U,
			// Token: 0x04004287 RID: 17031
			StartPreFileCopyDescription = 718060562U,
			// Token: 0x04004288 RID: 17032
			SetupComponentConfiguringMailSubmissionService = 2306021189U,
			// Token: 0x04004289 RID: 17033
			ErrorCannotGetLocalSite = 2062465841U,
			// Token: 0x0400428A RID: 17034
			ErrorCannotSpecifySuspendCommentWithoutSuspend = 2995736033U,
			// Token: 0x0400428B RID: 17035
			SetupProgressStartingRpcClientAccessService = 4218312291U,
			// Token: 0x0400428C RID: 17036
			SetupComponentStoppingMailboxServices = 3248358162U,
			// Token: 0x0400428D RID: 17037
			StartOrganizationPilotDescription = 1628012707U,
			// Token: 0x0400428E RID: 17038
			AlsEmailFooter = 1068106535U,
			// Token: 0x0400428F RID: 17039
			ConfirmationMessageRemoveEdgeSubscriptionRecipients = 1557867634U,
			// Token: 0x04004290 RID: 17040
			CasHealthOwaNoInternalUrl = 3250043305U,
			// Token: 0x04004291 RID: 17041
			ReversingTaskList = 3613594314U,
			// Token: 0x04004292 RID: 17042
			SetupProgressMaxRecipientsTransportQuota = 1793609503U,
			// Token: 0x04004293 RID: 17043
			ContactAdminForForwardingWarning = 1688623221U,
			// Token: 0x04004294 RID: 17044
			SetResubmitRequestConfirmation = 1985418867U,
			// Token: 0x04004295 RID: 17045
			ExsetdataLegacyOrganizationName = 3427981878U,
			// Token: 0x04004296 RID: 17046
			PatternIsWhiteSpace = 1733149537U,
			// Token: 0x04004297 RID: 17047
			SetupComponentPostSetupAllRoles = 4186825349U,
			// Token: 0x04004298 RID: 17048
			SetupProgressStoppingServiceHostService = 4241796904U,
			// Token: 0x04004299 RID: 17049
			ErrorDirectoryNotFound = 1382008128U,
			// Token: 0x0400429A RID: 17050
			SetupProgressDisclosure = 1285179481U,
			// Token: 0x0400429B RID: 17051
			CasHealthOwaPingFailed = 2812311335U,
			// Token: 0x0400429C RID: 17052
			SetServerComponentStateInvalidLocalRemoteSwitch = 2534355845U,
			// Token: 0x0400429D RID: 17053
			TokenSuccessfullyGenerated = 241488845U,
			// Token: 0x0400429E RID: 17054
			InvalidLeaseDirectory = 3729565548U,
			// Token: 0x0400429F RID: 17055
			AuthenticationMethodDigest = 2714395591U,
			// Token: 0x040042A0 RID: 17056
			ErrorPrimaryPublicFolderMailboxNotFound = 533822862U,
			// Token: 0x040042A1 RID: 17057
			NSPIGetProfileDetailsScenario = 2939831845U,
			// Token: 0x040042A2 RID: 17058
			SetupProgressCreateDefaultWLMPolicy = 2566981015U,
			// Token: 0x040042A3 RID: 17059
			UninstallUnifiedMessagingRoleDescription = 2727317856U,
			// Token: 0x040042A4 RID: 17060
			ErrorNeedToSpecifyScopeParameter = 2809178217U,
			// Token: 0x040042A5 RID: 17061
			InstallFfoPrimingServiceTask = 1167690000U,
			// Token: 0x040042A6 RID: 17062
			MailboxTransportSubmissionServiceDescription = 2266874684U,
			// Token: 0x040042A7 RID: 17063
			RejectStatusCode = 1434991878U,
			// Token: 0x040042A8 RID: 17064
			ErrorMaxVersionAndFixVersionSpecified = 1895340720U,
			// Token: 0x040042A9 RID: 17065
			CasTransactionResultSuccess = 2907455067U,
			// Token: 0x040042AA RID: 17066
			InstallFreeBusyFolderNoPublicFolderDatabase = 2383751265U,
			// Token: 0x040042AB RID: 17067
			SetupComponentConfiguringSharedCacheService = 301735889U,
			// Token: 0x040042AC RID: 17068
			VerboseSaveADServerSettings = 2263616798U,
			// Token: 0x040042AD RID: 17069
			ADAttributeCustomAttribute11 = 645477220U,
			// Token: 0x040042AE RID: 17070
			ADAttributeCustomAttribute15 = 2614845688U,
			// Token: 0x040042AF RID: 17071
			ErrorResetPasswordRequiresPassword = 2883464667U,
			// Token: 0x040042B0 RID: 17072
			FailureMappingMdbGuidForGet = 4056489825U,
			// Token: 0x040042B1 RID: 17073
			ScenarioAutoDiscoverOutlookProvider = 1720836242U,
			// Token: 0x040042B2 RID: 17074
			ImportCertificateUntrustedRoot = 2294833768U,
			// Token: 0x040042B3 RID: 17075
			AccountPrivilegeWarning = 2442376176U,
			// Token: 0x040042B4 RID: 17076
			InterceptorWarningCustomResponseCodeTextWithoutRejectAction = 3630480834U,
			// Token: 0x040042B5 RID: 17077
			SetupProgressCreateOrgContainer = 2160342179U,
			// Token: 0x040042B6 RID: 17078
			SetupProgressConfiguringDefaultTransportAgents = 1000887253U,
			// Token: 0x040042B7 RID: 17079
			MessageTypeEncrypted = 3544120613U,
			// Token: 0x040042B8 RID: 17080
			WordIsWhiteSpaceOrContainsWhiteSpacePrefixOrSuffix = 1323896402U,
			// Token: 0x040042B9 RID: 17081
			NotPublicFolderDatabase = 3573549683U,
			// Token: 0x040042BA RID: 17082
			ErrorPrecannedRoleAndSpecificPermission = 425417434U,
			// Token: 0x040042BB RID: 17083
			OwaInvalidFormsAuthenticationConfiguration = 2188442253U,
			// Token: 0x040042BC RID: 17084
			ErrorQuotaOnDefaultFolder = 840944282U,
			// Token: 0x040042BD RID: 17085
			ADAttributeEmail = 4289093673U,
			// Token: 0x040042BE RID: 17086
			WarningFederatedOrgIdNotEnabled = 2392105441U,
			// Token: 0x040042BF RID: 17087
			SendingGuidInMailFrom = 45917787U,
			// Token: 0x040042C0 RID: 17088
			Error_MultipleItemsFound = 2976272587U,
			// Token: 0x040042C1 RID: 17089
			SetupComponentConfiguringMailboxPerfCounters = 1690073363U,
			// Token: 0x040042C2 RID: 17090
			SetupComponentConfiguringProtectedServiceHost = 2657860018U,
			// Token: 0x040042C3 RID: 17091
			ConversationsMailboxAlreadyDisabled = 3058326614U,
			// Token: 0x040042C4 RID: 17092
			MapiSubmitSystemProbeId = 163826707U,
			// Token: 0x040042C5 RID: 17093
			OutboundConnectorToRouteAcceptedDomainNotFound = 3114445527U,
			// Token: 0x040042C6 RID: 17094
			SetupProgressCreateRAPassignments = 2024750425U,
			// Token: 0x040042C7 RID: 17095
			ClassificationRuleCollectionIllegalScopedRemoveOperation = 977526821U,
			// Token: 0x040042C8 RID: 17096
			UninstallRecoveryActionArbiterServiceTask = 543355436U,
			// Token: 0x040042C9 RID: 17097
			EnableContentIndexTask = 2566309275U,
			// Token: 0x040042CA RID: 17098
			SuppressXAnonymousTlsEnabledOnEdge = 823570622U,
			// Token: 0x040042CB RID: 17099
			ReloadingMoveRequest = 2259906521U,
			// Token: 0x040042CC RID: 17100
			SetupComponentMidFileCopyMailbox = 1585773875U,
			// Token: 0x040042CD RID: 17101
			ErrorOrganizationIsNotInUpgradeState = 933450270U,
			// Token: 0x040042CE RID: 17102
			AddressRewriteInvalidMapping = 2336039625U,
			// Token: 0x040042CF RID: 17103
			DlpPolicyStateDescription = 1316689733U,
			// Token: 0x040042D0 RID: 17104
			ErrorContentSettingAlreadyExist = 1226199280U,
			// Token: 0x040042D1 RID: 17105
			SetupComponentPostUpdatingServicePlan = 4205883882U,
			// Token: 0x040042D2 RID: 17106
			ErrorSetMailboxCrossVersionRehoming = 3564253415U,
			// Token: 0x040042D3 RID: 17107
			TransitionInfoLabelLastFailureTransition = 2868264770U,
			// Token: 0x040042D4 RID: 17108
			AutoGroupManagedByCannotBeEmpty = 562001953U,
			// Token: 0x040042D5 RID: 17109
			ConfirmationMessageSetLoadBalanceSettings = 771584439U,
			// Token: 0x040042D6 RID: 17110
			ProductKeyRestartWarning = 1407354013U,
			// Token: 0x040042D7 RID: 17111
			MailboxParameterNotSpecified = 3530329232U,
			// Token: 0x040042D8 RID: 17112
			CasHealthEasScenarioDirectPushAndSync = 2424622863U,
			// Token: 0x040042D9 RID: 17113
			SetupProgressRegisterCmdletExtensionAgents = 1779020807U,
			// Token: 0x040042DA RID: 17114
			MoveStatusWarning = 664730499U,
			// Token: 0x040042DB RID: 17115
			SetupComponentStartingBridgeheadServices = 780734969U,
			// Token: 0x040042DC RID: 17116
			ClockOutofSync = 2567786022U,
			// Token: 0x040042DD RID: 17117
			ErrorSharePointUrlDoesNotMatchPartnerApplication = 2365917741U,
			// Token: 0x040042DE RID: 17118
			MessageTypeApprovalRequest = 4072748617U,
			// Token: 0x040042DF RID: 17119
			RecoveryActionArbiterServiceDisplayName = 611036308U,
			// Token: 0x040042E0 RID: 17120
			PartitionIdRequiredForMultipleOrgSearch = 1411232125U,
			// Token: 0x040042E1 RID: 17121
			ErrorDirectoryNotEmpty = 1536983777U,
			// Token: 0x040042E2 RID: 17122
			MigrationNeutralCultureIsInvalid = 4075921268U,
			// Token: 0x040042E3 RID: 17123
			ConfirmationMessageSetPendingFederationDomain = 2261648U,
			// Token: 0x040042E4 RID: 17124
			CouldNotFindTask = 744449214U,
			// Token: 0x040042E5 RID: 17125
			DlpPolicyModeDescription = 408063793U,
			// Token: 0x040042E6 RID: 17126
			ErrorSetVersion1OfExchange12OAB = 3439866578U,
			// Token: 0x040042E7 RID: 17127
			SetupComponentPreSetupCafe = 4022980833U,
			// Token: 0x040042E8 RID: 17128
			ErrorTaskCancelledBecauseMoreMailboxesThanSearchSupported = 2025774842U,
			// Token: 0x040042E9 RID: 17129
			SetupComponentPreUpdatingServicePlan = 17561413U,
			// Token: 0x040042EA RID: 17130
			CasHealthOwaUnexpectedResponse = 490047050U,
			// Token: 0x040042EB RID: 17131
			SendConnectorDashdashAddressSpaceNotOffEdge = 1069387158U,
			// Token: 0x040042EC RID: 17132
			InvalidParameterSet = 2563356384U,
			// Token: 0x040042ED RID: 17133
			AttachmentFilterADEntryNotFound = 3988796807U,
			// Token: 0x040042EE RID: 17134
			CasHealthOwaNoLogonCookieReturned = 5426607U,
			// Token: 0x040042EF RID: 17135
			SetupProgressMalwareFilterPolicy = 925956923U,
			// Token: 0x040042F0 RID: 17136
			ConfirmationMessageSetContentFilterConfig = 1605831397U,
			// Token: 0x040042F1 RID: 17137
			InstallFBAServiceTask = 3179690214U,
			// Token: 0x040042F2 RID: 17138
			MigrationCompleteAfterIncorrectState = 4199915451U,
			// Token: 0x040042F3 RID: 17139
			ActiveSyncOrganizationSettingsAmbiguous = 4056523457U,
			// Token: 0x040042F4 RID: 17140
			InfoImportingTpdFromRmsOnline = 1492775636U,
			// Token: 0x040042F5 RID: 17141
			MtrtEventMalware = 2422284162U,
			// Token: 0x040042F6 RID: 17142
			InvalidAggregatedDateTime = 3583996249U,
			// Token: 0x040042F7 RID: 17143
			ErrorRecipientTypeDetailsConflictWithRecipientType = 3407394740U,
			// Token: 0x040042F8 RID: 17144
			InfoCheckMode = 1761587115U,
			// Token: 0x040042F9 RID: 17145
			SetIISGzipMimeTypesFailure = 308522664U,
			// Token: 0x040042FA RID: 17146
			SetupComponentConfiguringReplayService = 465050415U,
			// Token: 0x040042FB RID: 17147
			MessageTypeSigned = 3606274629U,
			// Token: 0x040042FC RID: 17148
			InstallADTopologyServiceTask = 1069404793U,
			// Token: 0x040042FD RID: 17149
			SetupProgressCreateGlobalExchangeUSGs = 1251200968U,
			// Token: 0x040042FE RID: 17150
			ADAttributeTitle = 2634964433U,
			// Token: 0x040042FF RID: 17151
			MoveMailboxSourceCleanupTypeMailEnableSourceAccount = 1717488648U,
			// Token: 0x04004300 RID: 17152
			NoSourceMailboxesAndNoPublicFolderSourcesSet = 1685700083U,
			// Token: 0x04004301 RID: 17153
			SetupProgressCreateFederatedEmailMailbox = 563433368U,
			// Token: 0x04004302 RID: 17154
			ErrorJoinRestrictionInvalid = 112004327U,
			// Token: 0x04004303 RID: 17155
			TopologyServiceResultFailure = 2206782705U,
			// Token: 0x04004304 RID: 17156
			WarningBulkOperationCannotDetermineRequester = 4222836121U,
			// Token: 0x04004305 RID: 17157
			SetupComponentMidFileCopyOSP = 1239241343U,
			// Token: 0x04004306 RID: 17158
			ErrorUMPolicyToPreE12 = 2571165378U,
			// Token: 0x04004307 RID: 17159
			WarningTransportDecryptionMandatoryRequiresSuperUser = 1850979017U,
			// Token: 0x04004308 RID: 17160
			UnableToRetrieveDeletePolicyTag = 2007613643U,
			// Token: 0x04004309 RID: 17161
			ConfirmationMessageTestGlobalLocatorServiceIdentity = 233479074U,
			// Token: 0x0400430A RID: 17162
			ReplayServiceCheckDesc = 1909346717U,
			// Token: 0x0400430B RID: 17163
			ExchangeServersUSGDescription = 3819771664U,
			// Token: 0x0400430C RID: 17164
			CertificateDoesNotHavePKCS10 = 2278864889U,
			// Token: 0x0400430D RID: 17165
			ErrorMissingNameOrDescriptionOrIsDefaultParameters = 3741937590U,
			// Token: 0x0400430E RID: 17166
			VerboseEndFingerprint = 333526005U,
			// Token: 0x0400430F RID: 17167
			CasHealthSpecifiedServerIsNotCas = 503478192U,
			// Token: 0x04004310 RID: 17168
			InstallingTranscodingService = 3649434212U,
			// Token: 0x04004311 RID: 17169
			VerboseNotFoundAssigneeInConfigNC = 3750627262U,
			// Token: 0x04004312 RID: 17170
			CannotRemoveDefaultSiteMailboxProvisioningPolicyException = 2388954365U,
			// Token: 0x04004313 RID: 17171
			SetupProgressConfigureAdminGroup = 1785196314U,
			// Token: 0x04004314 RID: 17172
			ErrorMicrosoftExchangeRecipientNotFound = 1058125491U,
			// Token: 0x04004315 RID: 17173
			UmLanguagePackPrereqCheck = 52866768U,
			// Token: 0x04004316 RID: 17174
			ADAttributeCustomAttribute6 = 1377545164U,
			// Token: 0x04004317 RID: 17175
			ADAttributeCustomAttribute2 = 1377545168U,
			// Token: 0x04004318 RID: 17176
			ErrorFileNameCannotBeEmptyOrNull = 3851263184U,
			// Token: 0x04004319 RID: 17177
			ConfirmationMessageSetActiveSyncOrganizationSettings = 3464809167U,
			// Token: 0x0400431A RID: 17178
			NewContentIndexTask = 2779757030U,
			// Token: 0x0400431B RID: 17179
			MapiSubmitSystemProbeSuccesfullyDeleted = 3690963829U,
			// Token: 0x0400431C RID: 17180
			ConfirmationMessageSetPop3Config = 3896912312U,
			// Token: 0x0400431D RID: 17181
			Error_MissingOrganizerEmail = 3851464644U,
			// Token: 0x0400431E RID: 17182
			ExchangeTracingProviderAlreadyExists = 2532482654U,
			// Token: 0x0400431F RID: 17183
			ErrorRpcHttpMustSpecifyExternalClientAuthenticationMethodOrDefaultAuthenticationMethod = 3214881135U,
			// Token: 0x04004320 RID: 17184
			InvalidBackupLeaseLocation = 2759728920U,
			// Token: 0x04004321 RID: 17185
			CouldNotFindAutodiscoverStandardAuthBindingTransportElement = 1259814674U,
			// Token: 0x04004322 RID: 17186
			CasConfigurationCheckSuccess = 2028085072U,
			// Token: 0x04004323 RID: 17187
			RetrievingGlobalThrottlingPolicy = 2923667921U,
			// Token: 0x04004324 RID: 17188
			SetupComponentConfiguringLegacyMailbox = 4213166642U,
			// Token: 0x04004325 RID: 17189
			VerboseFixingAddressBooksInNativeMode = 3083753440U,
			// Token: 0x04004326 RID: 17190
			CasHealthEasScenarioCreateItem = 3305350853U,
			// Token: 0x04004327 RID: 17191
			FfoWebServiceEcpComponentDescription = 3128424281U,
			// Token: 0x04004328 RID: 17192
			SetupProgressStartingThrottlingService = 2922449898U,
			// Token: 0x04004329 RID: 17193
			TransitionStateActive = 735377508U,
			// Token: 0x0400432A RID: 17194
			UMCallAnsweringRuleDescriptionIf = 2369645597U,
			// Token: 0x0400432B RID: 17195
			InvalidTransportRule = 2595151256U,
			// Token: 0x0400432C RID: 17196
			ImapExternalServerSettings = 463879924U,
			// Token: 0x0400432D RID: 17197
			ErrorNoPropertyWasModified = 4205633792U,
			// Token: 0x0400432E RID: 17198
			DisclaimerText = 1689084926U,
			// Token: 0x0400432F RID: 17199
			InterceptorWarningPathIgnored = 4122757518U,
			// Token: 0x04004330 RID: 17200
			CannotCombineWildcardSenderAddress = 2496907143U,
			// Token: 0x04004331 RID: 17201
			SetupProgressOwaInstantMessagingEnabled = 1411848455U,
			// Token: 0x04004332 RID: 17202
			SetupProgressCleanupOldMailboxPlan = 1610376224U,
			// Token: 0x04004333 RID: 17203
			InvalidRejectEnhancedStatus = 2063369946U,
			// Token: 0x04004334 RID: 17204
			CouldNotFindLocalhostDirectoryEntryException = 2144801278U,
			// Token: 0x04004335 RID: 17205
			TSCrashDumpsOnlyAvailableOnLocalMachine = 4142265347U,
			// Token: 0x04004336 RID: 17206
			ConfirmSetSyncDaemonArbitrationConfig = 3195028184U,
			// Token: 0x04004337 RID: 17207
			MustProvideValidSessionForFindingRequests = 199165212U,
			// Token: 0x04004338 RID: 17208
			PopImapConnecting = 1218978020U,
			// Token: 0x04004339 RID: 17209
			SetupComponentCommonTenantConfigLast = 2370061645U,
			// Token: 0x0400433A RID: 17210
			InstallShareIISLogFileDirectoryTask = 1470772353U,
			// Token: 0x0400433B RID: 17211
			ErrorBPAConfigDataLoad = 1367543679U,
			// Token: 0x0400433C RID: 17212
			UninstallHealthManagerServiceTask = 4014797545U,
			// Token: 0x0400433D RID: 17213
			MtrtEventSubmit = 504739579U,
			// Token: 0x0400433E RID: 17214
			ErrorCertificateMissingPrivateKey = 291523223U,
			// Token: 0x0400433F RID: 17215
			RecipientDomainStarOnPremiseOutboundConnector = 357993642U,
			// Token: 0x04004340 RID: 17216
			CertificateStatusUntrusted = 3588438151U,
			// Token: 0x04004341 RID: 17217
			SetupProgressStartingReplayService = 533012186U,
			// Token: 0x04004342 RID: 17218
			InstallReplayServiceTask = 3162817800U,
			// Token: 0x04004343 RID: 17219
			InvalidDirection = 2576923962U,
			// Token: 0x04004344 RID: 17220
			SetupProgressUpdateDatabaseSettings = 3874457483U,
			// Token: 0x04004345 RID: 17221
			ErrorCannotChangeLinkedProperty = 1104283461U,
			// Token: 0x04004346 RID: 17222
			LanguagePackPerfCounterMergeStart = 57521374U,
			// Token: 0x04004347 RID: 17223
			DefaultSharingPolicyName = 1825160064U,
			// Token: 0x04004348 RID: 17224
			SetupProgressCreateClassificationDefinitionsContainer = 1322418917U,
			// Token: 0x04004349 RID: 17225
			SecurityDescriptorBeingUpdatedMsg = 3650915108U,
			// Token: 0x0400434A RID: 17226
			MtrtRequireDecryption = 2388010079U,
			// Token: 0x0400434B RID: 17227
			ErrorTeamMailboxCanNotLinkSharePointByNonOwner = 1003347076U,
			// Token: 0x0400434C RID: 17228
			ErrorMailboxPlanInvalidInThisRelease = 3391359806U,
			// Token: 0x0400434D RID: 17229
			BadWordsPolicyNotEnabledIfBadWordsListNull = 2607048324U,
			// Token: 0x0400434E RID: 17230
			ProgressTaskComplete = 3287132233U,
			// Token: 0x0400434F RID: 17231
			SetupProgressDisableWMIRPCSS = 63291148U,
			// Token: 0x04004350 RID: 17232
			OrgPrereqCheck = 188776009U,
			// Token: 0x04004351 RID: 17233
			MtrtSetHeader = 2809852842U,
			// Token: 0x04004352 RID: 17234
			CannotRunOnEdge = 1148485298U,
			// Token: 0x04004353 RID: 17235
			InterceptorErrorConditionHeaderNameMissing = 5951564U,
			// Token: 0x04004354 RID: 17236
			CasHealthOwaShortName = 2914613013U,
			// Token: 0x04004355 RID: 17237
			PopImapDisconnecting = 3088693696U,
			// Token: 0x04004356 RID: 17238
			WillNotCreateGlobalThrottlingPolicy = 4035129721U,
			// Token: 0x04004357 RID: 17239
			FederationTrustHasOutdatedCertificates = 1864829159U,
			// Token: 0x04004358 RID: 17240
			ErrorEnableNonUniversalGroup = 261927478U,
			// Token: 0x04004359 RID: 17241
			ConversationsFailedToCreateConversationsFolder = 1686636202U,
			// Token: 0x0400435A RID: 17242
			VerboseSaveADServerSettingsSucceed = 3993542306U,
			// Token: 0x0400435B RID: 17243
			SetupProgressPerMBXPlanRoleAssignmentPolicy = 1291241716U,
			// Token: 0x0400435C RID: 17244
			AllMapiTransactionsSucceeded = 454353554U,
			// Token: 0x0400435D RID: 17245
			WarningRestrictionWithWrongGroupType = 3395234788U,
			// Token: 0x0400435E RID: 17246
			SetupProgressShowInAddressListsEnabled = 162508716U,
			// Token: 0x0400435F RID: 17247
			ComplianceSearchTimeoutError = 231799122U,
			// Token: 0x04004360 RID: 17248
			OrganizationParamRequired = 3163689273U,
			// Token: 0x04004361 RID: 17249
			ErrorMultipleDefaultRetentionPolicyTag = 243123253U,
			// Token: 0x04004362 RID: 17250
			CouldNotGetMsoEndpoint = 2977205104U,
			// Token: 0x04004363 RID: 17251
			MoveRequestIsMissing = 354404596U,
			// Token: 0x04004364 RID: 17252
			ErrorCannotChangeAcceptMessagesFrom = 1723752717U,
			// Token: 0x04004365 RID: 17253
			MessageTraceMinimumCriteriaFieldsInError = 2951176425U,
			// Token: 0x04004366 RID: 17254
			ErrorCannotChangeHiddenFromAddressListsEnabled = 3158077333U,
			// Token: 0x04004367 RID: 17255
			ErrorDefaultRoleAssignmentPolicyNotFound = 420723843U,
			// Token: 0x04004368 RID: 17256
			InvalidOrgCapabilityParameter = 733779898U,
			// Token: 0x04004369 RID: 17257
			JournalingReportNdrToSameAsJournalEmailAddress = 2835118191U,
			// Token: 0x0400436A RID: 17258
			ErrorRpcHttpSSLOffloadingDisabled = 2900893440U,
			// Token: 0x0400436B RID: 17259
			ContinueOnEmptySearchQuery = 3622201701U,
			// Token: 0x0400436C RID: 17260
			UninstallingIMAP4Service = 417532052U,
			// Token: 0x0400436D RID: 17261
			WarningReturnDefaultOrganizationThrottlingPolicy = 551608721U,
			// Token: 0x0400436E RID: 17262
			ErrorStartAfterCanBeSetOnlyInQueued = 3200589103U,
			// Token: 0x0400436F RID: 17263
			ClientAccessLocalPermissionsComponentDescription = 3524052893U,
			// Token: 0x04004370 RID: 17264
			MailboxDatabaseIsDown = 1037163961U,
			// Token: 0x04004371 RID: 17265
			SetupComponentClientAccessGlobalConfig = 1068896218U,
			// Token: 0x04004372 RID: 17266
			JournalingExpiryDateAlreadyExpired = 1898301735U,
			// Token: 0x04004373 RID: 17267
			ErrorTargetEndpointRequired = 3871360571U,
			// Token: 0x04004374 RID: 17268
			SetupProgressRecreateCannedRBACRoleGroups = 2497315428U,
			// Token: 0x04004375 RID: 17269
			StoppinggMSExchangeFDS = 3593053823U,
			// Token: 0x04004376 RID: 17270
			MtrtModerateMessageByUser = 604566495U,
			// Token: 0x04004377 RID: 17271
			LogonFailure = 1116614049U,
			// Token: 0x04004378 RID: 17272
			ErrorImageImport = 850579312U,
			// Token: 0x04004379 RID: 17273
			AddressRewriteInvalidIdentity = 3673139399U,
			// Token: 0x0400437A RID: 17274
			NewPop3ConfigurationTask = 464677521U,
			// Token: 0x0400437B RID: 17275
			ErrorActivationPreferenceNotAllowedWhenHostServerUnlinked = 702091437U,
			// Token: 0x0400437C RID: 17276
			ArchiveConnectivityResultArchiveNotProvisioned = 1029805125U,
			// Token: 0x0400437D RID: 17277
			SetupExchangeHostedFilteringPerimeterEnabled = 4161304777U,
			// Token: 0x0400437E RID: 17278
			SetupComponentMidFileCopyCafe = 2614046954U,
			// Token: 0x0400437F RID: 17279
			ErrorTargetDatabaseNotAllowedForRemotePush = 3269945312U,
			// Token: 0x04004380 RID: 17280
			ErrorADOperationSucceededButMetabaseOperationFailed = 3182689518U,
			// Token: 0x04004381 RID: 17281
			SetupSettingAdminToolsConfiguredVersion = 1677794547U,
			// Token: 0x04004382 RID: 17282
			UMCallAnsweringRuleUnknownContact = 2089273302U,
			// Token: 0x04004383 RID: 17283
			MtrtSetAuditSeverity = 4276932551U,
			// Token: 0x04004384 RID: 17284
			ReservedString1 = 4054043086U,
			// Token: 0x04004385 RID: 17285
			SetupComponentConfigPermissionsFrontendTransport = 979064683U,
			// Token: 0x04004386 RID: 17286
			CasHealthOwaGotOwaLogonPage = 874781227U,
			// Token: 0x04004387 RID: 17287
			ADAttributeOtherHomePhoneNumber = 856583401U,
			// Token: 0x04004388 RID: 17288
			SubjectPrefix = 1100730082U,
			// Token: 0x04004389 RID: 17289
			SendConnectorSourceServersNotSet = 3128145071U,
			// Token: 0x0400438A RID: 17290
			ErrorInvalidAuditDelegateOperationType = 2396781446U,
			// Token: 0x0400438B RID: 17291
			ErrorCannotMoveWellKnownPublicFolders = 2547668869U,
			// Token: 0x0400438C RID: 17292
			NoFederationMetadataEpr = 2261801750U,
			// Token: 0x0400438D RID: 17293
			SetupProcessCreateDefaultThrottlingPolicy = 1654271044U,
			// Token: 0x0400438E RID: 17294
			ToplogyScanFailed = 1420937392U,
			// Token: 0x0400438F RID: 17295
			CasHealthOwaTimeoutInternal = 159047272U,
			// Token: 0x04004390 RID: 17296
			DisasterRecoveryClientAccessRoleDescription = 1631562655U,
			// Token: 0x04004391 RID: 17297
			MailboxReplicationServiceDescription = 1297659643U,
			// Token: 0x04004392 RID: 17298
			ErrorFolderTypeModified = 1167159339U,
			// Token: 0x04004393 RID: 17299
			CasHealthWebAppLogonScenarioName = 2404626142U,
			// Token: 0x04004394 RID: 17300
			StoppingIMAP4Service = 1960367174U,
			// Token: 0x04004395 RID: 17301
			SetupProgressSyncAccountsTimeBeforeDormant = 206924338U,
			// Token: 0x04004396 RID: 17302
			ConfirmationMessageResetADServerSettings = 1625538986U,
			// Token: 0x04004397 RID: 17303
			NoAuthenticatedServerUri = 377011883U,
			// Token: 0x04004398 RID: 17304
			VirtualDirectoryTypeRequired = 1220824217U,
			// Token: 0x04004399 RID: 17305
			ErrorSoftDeletedMailboxCanOnlyChangeLitigationHoldEnabled = 3691311357U,
			// Token: 0x0400439A RID: 17306
			SetupProgressMSOSyncEnabled = 3695562421U,
			// Token: 0x0400439B RID: 17307
			MtrtEventBadmail = 2016035929U,
			// Token: 0x0400439C RID: 17308
			GetImap4ConfigurationTask = 1375131586U,
			// Token: 0x0400439D RID: 17309
			ErrorRecipientViewRootEmptyAndViewEntireForestToFalse = 668469937U,
			// Token: 0x0400439E RID: 17310
			ConfirmationMessageSetExchangeAssistance = 316585499U,
			// Token: 0x0400439F RID: 17311
			UpdateServicePlanDescription = 3529494341U,
			// Token: 0x040043A0 RID: 17312
			StartReplService = 1588246230U,
			// Token: 0x040043A1 RID: 17313
			MtrtEventSpam = 2051672478U,
			// Token: 0x040043A2 RID: 17314
			CasHealthUriFoundViaAutodiscovery = 3437115628U,
			// Token: 0x040043A3 RID: 17315
			ErrorFederationCertificateNotSpecified = 511090707U,
			// Token: 0x040043A4 RID: 17316
			SetupProgressInstallDefaultMessageFilterContainer = 2633315000U,
			// Token: 0x040043A5 RID: 17317
			ErrorFileIsTooSmallForFingerprint = 568876522U,
			// Token: 0x040043A6 RID: 17318
			TestTeamMailboxSharepointCallUnderOauthTask = 3953390382U,
			// Token: 0x040043A7 RID: 17319
			CasHealthEcpLongName = 3605578582U,
			// Token: 0x040043A8 RID: 17320
			WarningModifySubjectValueNotSet = 35832858U,
			// Token: 0x040043A9 RID: 17321
			ErrorRemoteArchiveTargetDatabaseMustBeSpecifiedForRemoteArchiveOnlyPush = 1687432599U,
			// Token: 0x040043AA RID: 17322
			InvalidNotifyAddress = 3592677092U,
			// Token: 0x040043AB RID: 17323
			QuarantineActionNotAvailable = 4170515100U,
			// Token: 0x040043AC RID: 17324
			MtrtRedirectMessage = 3362446484U,
			// Token: 0x040043AD RID: 17325
			CasHealthOwaUriScopeHeader = 2100396363U,
			// Token: 0x040043AE RID: 17326
			EndPointNotRegisteredException = 2085573869U,
			// Token: 0x040043AF RID: 17327
			MapiTransactionDiagnosticTargetDatabaseDismounted = 2163517138U,
			// Token: 0x040043B0 RID: 17328
			SetupComponentConfiguringServiceHost = 1632566846U,
			// Token: 0x040043B1 RID: 17329
			DlpPolicyXmlInvalid = 1808397640U,
			// Token: 0x040043B2 RID: 17330
			SetupProgressEnableWMIRPCSS = 13270221U,
			// Token: 0x040043B3 RID: 17331
			SetupProgressPopulateDatabases = 2728374224U,
			// Token: 0x040043B4 RID: 17332
			VerboseNoExchangeServersUSG = 461830259U,
			// Token: 0x040043B5 RID: 17333
			RegisterFilterFailed = 1325604176U,
			// Token: 0x040043B6 RID: 17334
			ErrorCannotRemoveSpecialUser = 3707507579U,
			// Token: 0x040043B7 RID: 17335
			MailboxTransportDeliveryServiceDescription = 787262776U,
			// Token: 0x040043B8 RID: 17336
			DefaultAllUsers = 3322195502U,
			// Token: 0x040043B9 RID: 17337
			SetupProgressStoppingRemoteRegistryService = 2823758188U,
			// Token: 0x040043BA RID: 17338
			UpdateDbcDeleteFilesInvalidParametersException = 996743220U,
			// Token: 0x040043BB RID: 17339
			ErrorInvalidDateRangeCondition = 4204700933U,
			// Token: 0x040043BC RID: 17340
			SetupProgressInstallDefaultEmailAddressPolicy = 3051316042U,
			// Token: 0x040043BD RID: 17341
			SetupProgressStoppingDagMgmtService = 4041875300U,
			// Token: 0x040043BE RID: 17342
			MoveStatusFailed = 3649145916U,
			// Token: 0x040043BF RID: 17343
			CasHealthCalendarScenarioTestICal = 1094916016U,
			// Token: 0x040043C0 RID: 17344
			WarningSecurePipelineTracingPath = 1670347310U,
			// Token: 0x040043C1 RID: 17345
			EnableConfigCustomizationsDescription = 3931827059U,
			// Token: 0x040043C2 RID: 17346
			WrongLogLevel = 3046221789U,
			// Token: 0x040043C3 RID: 17347
			ErrorPublicFolderFree = 3359504671U,
			// Token: 0x040043C4 RID: 17348
			ErrorUMInvalidParameters = 1392508367U,
			// Token: 0x040043C5 RID: 17349
			ADAttributeCustomAttribute10 = 3374360575U,
			// Token: 0x040043C6 RID: 17350
			DlpPolicyDescriptionDescription = 2945221880U,
			// Token: 0x040043C7 RID: 17351
			SetupProgressStoppingThrottlingService = 3087625658U,
			// Token: 0x040043C8 RID: 17352
			CasHealthOwaNotOwaPage = 1419643475U,
			// Token: 0x040043C9 RID: 17353
			ErrorRpcHttpMustSpecifyExternalClientAuthenticationParameter = 1180865852U,
			// Token: 0x040043CA RID: 17354
			InstallOSPRoleDescription = 3495070055U,
			// Token: 0x040043CB RID: 17355
			AllTenantsScopedSessionNotSupported = 3955140957U,
			// Token: 0x040043CC RID: 17356
			ErrorUnableToFindValidPublicFolderMailbox = 235837528U,
			// Token: 0x040043CD RID: 17357
			ProgressChangeFsw = 1117213053U,
			// Token: 0x040043CE RID: 17358
			ConfirmationMessageNewEdgeSyncMservConnectorOnLocalSite = 625706739U,
			// Token: 0x040043CF RID: 17359
			StartAfterOrCompleteAfterCannotBeSetOnLegacyRequests = 3110567830U,
			// Token: 0x040043D0 RID: 17360
			MtrtRejectMessage = 3492150331U,
			// Token: 0x040043D1 RID: 17361
			WarningConnectingPrimaryAsSecondary = 2525505760U,
			// Token: 0x040043D2 RID: 17362
			MapiTransactionResultUndefined = 3206520672U,
			// Token: 0x040043D3 RID: 17363
			ArgumentNotSet = 207684870U,
			// Token: 0x040043D4 RID: 17364
			VerboseNoWriteAccessToExchangeServers = 54348676U,
			// Token: 0x040043D5 RID: 17365
			ResponseHeader = 1227806140U,
			// Token: 0x040043D6 RID: 17366
			ErrorCannotChangeResourceProperties = 686932030U,
			// Token: 0x040043D7 RID: 17367
			InstallingMSExchangeFDS = 3526228985U,
			// Token: 0x040043D8 RID: 17368
			ErrorEnableWindowsLiveIdForEnterpriseMailbox = 533673063U,
			// Token: 0x040043D9 RID: 17369
			SetupDiagnosticsServiceComponent = 1494601097U,
			// Token: 0x040043DA RID: 17370
			CannotConfigureAdfsOwaWithoutEcpFirst = 2510042328U,
			// Token: 0x040043DB RID: 17371
			InstallAdminAuditLogConfig = 717668237U,
			// Token: 0x040043DC RID: 17372
			ErrorNotEnoughInformationToFindRequest = 2074533376U,
			// Token: 0x040043DD RID: 17373
			SetupProgressStartingRemoteRegistryService = 2648400316U,
			// Token: 0x040043DE RID: 17374
			ErrorProofOfOwnershipNotValid = 148513305U,
			// Token: 0x040043DF RID: 17375
			ErrorFailedToGetCertificationUri = 1099315268U,
			// Token: 0x040043E0 RID: 17376
			InvalidClassification = 1505963751U,
			// Token: 0x040043E1 RID: 17377
			ErrorInvalidOperation = 2063677784U,
			// Token: 0x040043E2 RID: 17378
			SetupComponentRoleSetterBridgehead = 1876927882U,
			// Token: 0x040043E3 RID: 17379
			SetupProgressOwaExplicitLogonEnabled = 4037451409U,
			// Token: 0x040043E4 RID: 17380
			CannotModifyOneOffTemplates = 791976745U,
			// Token: 0x040043E5 RID: 17381
			ReplayLagPlayDownReasonNone = 3310722589U,
			// Token: 0x040043E6 RID: 17382
			DeviceBlocked = 3159442548U,
			// Token: 0x040043E7 RID: 17383
			GetRemoteAccountSyncCache = 3940866218U,
			// Token: 0x040043E8 RID: 17384
			UsingTargetMonitoringMailbox = 434580719U,
			// Token: 0x040043E9 RID: 17385
			SetupComponentMidFileCopyUnifiedMessaging = 3316189097U,
			// Token: 0x040043EA RID: 17386
			StoppingHealthService = 2902832461U,
			// Token: 0x040043EB RID: 17387
			RemovePerfCounters = 1027987732U,
			// Token: 0x040043EC RID: 17388
			ErrorSharedConfigurationUpgradeNotSupported = 2819120138U,
			// Token: 0x040043ED RID: 17389
			UMCallAnsweringRuleProvideTheCallerWithTheseOptions = 748625712U,
			// Token: 0x040043EE RID: 17390
			TestSearchTestThreadTimeOut = 3097596739U,
			// Token: 0x040043EF RID: 17391
			SetupComponentCommonTransportConfiguration = 4178554518U,
			// Token: 0x040043F0 RID: 17392
			ConfirmationMessageTestSmtpConnectivity = 3498944269U,
			// Token: 0x040043F1 RID: 17393
			UninstallingPOP3Service = 2342824031U,
			// Token: 0x040043F2 RID: 17394
			MigrationTypeDoesntMatchConnectionSettings = 245532275U,
			// Token: 0x040043F3 RID: 17395
			DebugStartInternalBeginProcessing = 2445398080U,
			// Token: 0x040043F4 RID: 17396
			SetupComponentPreSetupMailbox = 1147595104U,
			// Token: 0x040043F5 RID: 17397
			ADTopologyServiceDisplayName = 4230134658U,
			// Token: 0x040043F6 RID: 17398
			ExceptionInvalidIisVersion = 1949851943U,
			// Token: 0x040043F7 RID: 17399
			SendConnectorNonE12SourceAndTargetServers = 2889503651U,
			// Token: 0x040043F8 RID: 17400
			ErrorInvalidJPEGFormat = 4289383202U,
			// Token: 0x040043F9 RID: 17401
			MtrtEventDefer = 2322437519U,
			// Token: 0x040043FA RID: 17402
			InvalidRmsTemplate = 2609648925U,
			// Token: 0x040043FB RID: 17403
			CasHealthCalendarScenarioTestICalDesc = 1043688457U,
			// Token: 0x040043FC RID: 17404
			SetPop3ConfigurationTask = 1748950543U,
			// Token: 0x040043FD RID: 17405
			SetupProgressOwaOrganizationEnabled = 2200535965U,
			// Token: 0x040043FE RID: 17406
			ClassificationRuleCollectionMissingRootElementViolation = 988117695U,
			// Token: 0x040043FF RID: 17407
			ErrorDistributionGroupNamingPolicy = 2194749999U,
			// Token: 0x04004400 RID: 17408
			ProgressStartUpdateOtherAD = 1566772861U,
			// Token: 0x04004401 RID: 17409
			DlpRuleMustContainMessageContainsDataClassificationPredicate = 3204500204U,
			// Token: 0x04004402 RID: 17410
			SetupProgressConfigureSystemMessageClassification = 3331859280U,
			// Token: 0x04004403 RID: 17411
			BPAScanCompleted = 948483101U,
			// Token: 0x04004404 RID: 17412
			WarningPublicFolderFree = 3365309049U,
			// Token: 0x04004405 RID: 17413
			SetupExchangeHostedFilteringAdminCenterAvailabilityEnabled = 905413889U,
			// Token: 0x04004406 RID: 17414
			DeleteMessageActionMustBeTheOnlyAction = 4116851739U,
			// Token: 0x04004407 RID: 17415
			ClientAccessPerfCountersComponentDescription = 4172665002U,
			// Token: 0x04004408 RID: 17416
			SMTPNotEnabledForTlsCertificate = 941932955U,
			// Token: 0x04004409 RID: 17417
			MonitoringServiceDescription = 2809770327U,
			// Token: 0x0400440A RID: 17418
			CasHealthWarnTrustAllCertificates = 2193807956U,
			// Token: 0x0400440B RID: 17419
			ServiceUnavaiable = 2571441823U,
			// Token: 0x0400440C RID: 17420
			ClassificationRuleCollectionConfigValidationUnexpectedContents = 3938903556U,
			// Token: 0x0400440D RID: 17421
			ErrorEndTimeSmallerThanNow = 797610307U,
			// Token: 0x0400440E RID: 17422
			FailedToStartRegSvr32 = 782503604U,
			// Token: 0x0400440F RID: 17423
			ConfirmationMessageSetMapiVirtualDirectory = 452522079U,
			// Token: 0x04004410 RID: 17424
			UseDagDefaultOnOffNone = 3602520180U,
			// Token: 0x04004411 RID: 17425
			MultipleMsoSyncObjectsRetrieved = 4211012520U,
			// Token: 0x04004412 RID: 17426
			EnableCertificateFederation = 1234571969U,
			// Token: 0x04004413 RID: 17427
			ReplicationCheckResultPassed = 3962371391U,
			// Token: 0x04004414 RID: 17428
			SetupComponentPreSetupUnifiedMessaging = 1533048402U,
			// Token: 0x04004415 RID: 17429
			SetupProgressCreateTransportSettingsContainer = 3287674875U,
			// Token: 0x04004416 RID: 17430
			VerboseFixingStart = 3964614477U,
			// Token: 0x04004417 RID: 17431
			SetupProgressPublicFolderMailboxCountQuota = 938999630U,
			// Token: 0x04004418 RID: 17432
			SetupProgressHostedOutboundSpamFilterPolicy = 2501038566U,
			// Token: 0x04004419 RID: 17433
			ErrorArchiveRemoteArchiveCannotBeSpecifiedTogether = 2012379768U,
			// Token: 0x0400441A RID: 17434
			CasHealthTaskNotRunOnExchangeServer = 3067186331U,
			// Token: 0x0400441B RID: 17435
			WatchDogServiceDescription = 16215670U,
			// Token: 0x0400441C RID: 17436
			FindingEventSources = 754559519U,
			// Token: 0x0400441D RID: 17437
			SetupProgressPopEnabled = 4120295996U,
			// Token: 0x0400441E RID: 17438
			ADAttributePOBox = 4260106383U,
			// Token: 0x0400441F RID: 17439
			ErrorInstallationModeMustBeBuildToBuildUpgrade = 1680887904U,
			// Token: 0x04004420 RID: 17440
			SetupProgressCreateSenderRepuationConfiguration = 637756306U,
			// Token: 0x04004421 RID: 17441
			ErrorOnlyOneParameterMayBeUsed = 1228780278U,
			// Token: 0x04004422 RID: 17442
			Away = 930407740U,
			// Token: 0x04004423 RID: 17443
			ErrorOnlyForestWideAllowIsAllowed = 1372052369U,
			// Token: 0x04004424 RID: 17444
			SetupProgressPerMBXPlanRetentionPolicyEnabled = 1830297210U,
			// Token: 0x04004425 RID: 17445
			ErrorOabVirtualDirectoryNameIsImmutable = 3865997491U,
			// Token: 0x04004426 RID: 17446
			SetupProgressStartingMailboxReplicationService = 94891499U,
			// Token: 0x04004427 RID: 17447
			RFRIGetReferralScenario = 3477937254U,
			// Token: 0x04004428 RID: 17448
			SetupProgressCreateCmdletExtensionAgentContainer = 4294363030U,
			// Token: 0x04004429 RID: 17449
			TransportSyncManagerServiceDisplayName = 1941627535U,
			// Token: 0x0400442A RID: 17450
			AutodiscoverScenario = 1694156056U,
			// Token: 0x0400442B RID: 17451
			WipeSucceededNote = 1012539222U,
			// Token: 0x0400442C RID: 17452
			SetupComponentPerfCountersBridgehead = 184445993U,
			// Token: 0x0400442D RID: 17453
			RemoteExchangeVersionNotSupported = 1516604862U,
			// Token: 0x0400442E RID: 17454
			ProgressDeletingLogFiles = 4235274244U,
			// Token: 0x0400442F RID: 17455
			ErrorPatternCannotBeginWithWildcardMultiMatch = 1026730790U,
			// Token: 0x04004430 RID: 17456
			WarningNoDefaultGAL = 4012037194U,
			// Token: 0x04004431 RID: 17457
			BackSyncUrlInvalidProtcolFormat = 3712723548U,
			// Token: 0x04004432 RID: 17458
			MSExchangeMGMTDescription = 1583857132U,
			// Token: 0x04004433 RID: 17459
			TcpListenerCheckDesc = 957901814U,
			// Token: 0x04004434 RID: 17460
			CannotRemoveDefaultAcceptedDomain = 1970107969U,
			// Token: 0x04004435 RID: 17461
			ErrorMoveToArchiveAppliedToSystemFolder = 4066206809U,
			// Token: 0x04004436 RID: 17462
			ErrorDisableJournalArchiveMailuserNotSoftDeleted = 3925057385U,
			// Token: 0x04004437 RID: 17463
			MigrationCSVNotAllowedForRunningState = 972735676U,
			// Token: 0x04004438 RID: 17464
			AboutToAddForeginOrgUSGToLocalAdminGroup = 23416362U,
			// Token: 0x04004439 RID: 17465
			SetupComponentPrepareSharedConfig = 1817485482U,
			// Token: 0x0400443A RID: 17466
			MtrtGenerateIncidentReport = 61461170U,
			// Token: 0x0400443B RID: 17467
			SetRemoteAccountSyncCache = 3553998014U,
			// Token: 0x0400443C RID: 17468
			FileNotFound = 2797904681U,
			// Token: 0x0400443D RID: 17469
			CouldNotFindMailboxDatabaseById = 1819604532U,
			// Token: 0x0400443E RID: 17470
			MobileDeviceLogEMailFailure = 24533818U,
			// Token: 0x0400443F RID: 17471
			SetupProgressGenericComponent = 2213042884U,
			// Token: 0x04004440 RID: 17472
			ErrorAuthentication = 1910710192U,
			// Token: 0x04004441 RID: 17473
			TenantNotificationVerboseSendingEmail = 2795454743U,
			// Token: 0x04004442 RID: 17474
			ErrorSettingErrorReportingEnabledtoNull = 2449740657U,
			// Token: 0x04004443 RID: 17475
			InfoOverallWarning = 2770526255U,
			// Token: 0x04004444 RID: 17476
			ErrorCannotRetrieveLocalForest = 2204861371U,
			// Token: 0x04004445 RID: 17477
			TenantNotificationVerboseNotSendingEmailPastDay = 2574649442U,
			// Token: 0x04004446 RID: 17478
			PhoneNumberUsedByOthers = 277780160U,
			// Token: 0x04004447 RID: 17479
			UnSupportedPermissionGroupsForEdge = 1144873528U,
			// Token: 0x04004448 RID: 17480
			ErrorMoveOabToTiFrondEndServer = 4043674320U,
			// Token: 0x04004449 RID: 17481
			ErrorJPEGFileTooBig = 3117239164U,
			// Token: 0x0400444A RID: 17482
			EdgeParameterNotValidOnHubRole = 2141139127U,
			// Token: 0x0400444B RID: 17483
			SetupProgressAutoGroupPermissions = 4147328458U,
			// Token: 0x0400444C RID: 17484
			UmLanguagePackInvalidExtraction = 513638219U,
			// Token: 0x0400444D RID: 17485
			Info_MessageItemHasBeenDeleted = 1539690042U,
			// Token: 0x0400444E RID: 17486
			ErrorMailboxSearchStorageTransient = 88947707U,
			// Token: 0x0400444F RID: 17487
			SetupProgressSyncAccountsEnabled = 2687598256U,
			// Token: 0x04004450 RID: 17488
			ErrorEwsAllowListAndEwsBlockListSpecified = 537295937U,
			// Token: 0x04004451 RID: 17489
			ReplayServiceDisplayName = 865295007U,
			// Token: 0x04004452 RID: 17490
			InterceptorErrorActionInvalid = 1686462850U,
			// Token: 0x04004453 RID: 17491
			ErrorMetadataMustBeAbsoluteUrl = 2183464741U,
			// Token: 0x04004454 RID: 17492
			ConnectorIncorrectUsageConnectorStillReferenced = 3780701529U,
			// Token: 0x04004455 RID: 17493
			ResubmitRequestStateInvalid = 433327936U,
			// Token: 0x04004456 RID: 17494
			CasHealthEasSyncDownTestItem = 1037175036U,
			// Token: 0x04004457 RID: 17495
			CasHealthOwaUrlAndCredentialsArgumentError = 1897752555U,
			// Token: 0x04004458 RID: 17496
			ExportFileNameMissing = 1323904189U,
			// Token: 0x04004459 RID: 17497
			DlpPolicyStateStateInvalid = 3065080461U,
			// Token: 0x0400445A RID: 17498
			SetServiceInstanceMapResultCodeUnknownError = 3051615604U,
			// Token: 0x0400445B RID: 17499
			SetupProgressUpgradeLegacyGlobalObjects = 3621387192U,
			// Token: 0x0400445C RID: 17500
			RolePublishingAuthor = 2309238384U,
			// Token: 0x0400445D RID: 17501
			ConfirmationMessageRemoveMapiVirtualDirectory = 920938791U,
			// Token: 0x0400445E RID: 17502
			SetupProgressAddSeverToDag = 3787373033U,
			// Token: 0x0400445F RID: 17503
			SetupProgressDisableWMIInbound = 3723166912U,
			// Token: 0x04004460 RID: 17504
			SetupProgressCreatingEdgeContainers = 2486066850U,
			// Token: 0x04004461 RID: 17505
			InterceptorConfirmDelayAction = 2869755872U,
			// Token: 0x04004462 RID: 17506
			RuleNameAlreadyExist = 1453324876U,
			// Token: 0x04004463 RID: 17507
			UsageTypeInternet = 3052282420U,
			// Token: 0x04004464 RID: 17508
			ADAttributeZipCode = 381216251U,
			// Token: 0x04004465 RID: 17509
			CertificateFound = 3550551595U,
			// Token: 0x04004466 RID: 17510
			MoveMailboxSourceCleanupTypeDeleteSourceNTAccount = 1484480947U,
			// Token: 0x04004467 RID: 17511
			ErrorSiteMailboxCannotLoadAddressTemplate = 4273097132U,
			// Token: 0x04004468 RID: 17512
			InfoDatacenterMode = 3460801308U,
			// Token: 0x04004469 RID: 17513
			ErrorCouldNotStartFullSyncForFirstOrg = 3989217663U,
			// Token: 0x0400446A RID: 17514
			ErrorPatternCannotEndWithWildcardMultiMatch = 2851315938U,
			// Token: 0x0400446B RID: 17515
			FormsAuthenticationDeleteMarkErrorPathNotFound = 4068899631U,
			// Token: 0x0400446C RID: 17516
			ErrorFederatedIdentityandPasswordTogether = 180031276U,
			// Token: 0x0400446D RID: 17517
			VerboseFixingRecipientsOnE12AdminGroup = 4038565178U,
			// Token: 0x0400446E RID: 17518
			IncomingServerTooLong = 664667065U,
			// Token: 0x0400446F RID: 17519
			ErrorPublicFolderReferralIncludeSelf = 177272670U,
			// Token: 0x04004470 RID: 17520
			ErrorEwsEnforceAllowListAndEwsBlockListSpecified = 3320504571U,
			// Token: 0x04004471 RID: 17521
			Error_EndDateCheck = 2943002002U,
			// Token: 0x04004472 RID: 17522
			HybridMailflowNoOrganizationError = 3806563425U,
			// Token: 0x04004473 RID: 17523
			ADAttributeHomePhoneNumber = 1457839961U,
			// Token: 0x04004474 RID: 17524
			NoFederationTrust = 1797820726U,
			// Token: 0x04004475 RID: 17525
			ErrorSyncMailboxWithMasterAccountSidNull = 386400541U,
			// Token: 0x04004476 RID: 17526
			ErrorCannotMovePublicFoldersFromDifferentSourceMailbox = 3061164332U,
			// Token: 0x04004477 RID: 17527
			Word = 4143129766U,
			// Token: 0x04004478 RID: 17528
			CasHealthOwaGetFbaPageNonOKCode = 1434682002U,
			// Token: 0x04004479 RID: 17529
			ParameterErrorForInternetUsage = 170573252U,
			// Token: 0x0400447A RID: 17530
			LanguagePackCfgDescription = 3623745587U,
			// Token: 0x0400447B RID: 17531
			UnifiedMessagingPrereqCheck = 1281443429U,
			// Token: 0x0400447C RID: 17532
			ReservedString2 = 4054043087U,
			// Token: 0x0400447D RID: 17533
			ErrorRpcHttpInvalidSwitchCombo = 3623354108U,
			// Token: 0x0400447E RID: 17534
			CasHealthEasScenarioSyncTestItem = 3287501662U,
			// Token: 0x0400447F RID: 17535
			MessageTypeVoicemail = 117825870U,
			// Token: 0x04004480 RID: 17536
			UninstallMonitoringRoleDescription = 2331920480U,
			// Token: 0x04004481 RID: 17537
			ShouldSpecifyEitherIdentityOrMailbox = 1264080170U,
			// Token: 0x04004482 RID: 17538
			InvalidTemplate = 2685432525U,
			// Token: 0x04004483 RID: 17539
			ADAttributeCustomAttribute14 = 1048761747U,
			// Token: 0x04004484 RID: 17540
			TenantExecutionNotSupported = 2695346913U,
			// Token: 0x04004485 RID: 17541
			SetupComponentStartingGatewayServices = 3666531412U,
			// Token: 0x04004486 RID: 17542
			ErrorModifyJournalArchiveAddress = 1607246833U,
			// Token: 0x04004487 RID: 17543
			MapiTransactionResultMdbMoved = 3777271156U,
			// Token: 0x04004488 RID: 17544
			UninstallMailboxRoleDescription = 2837902138U,
			// Token: 0x04004489 RID: 17545
			RepairUrgencyProhibited = 3785106612U,
			// Token: 0x0400448A RID: 17546
			ErrorCannotRestoreFromPublicToPrivateMailbox = 2343523210U,
			// Token: 0x0400448B RID: 17547
			ErrorMoveToDestinationFolderInvalid = 1301715689U,
			// Token: 0x0400448C RID: 17548
			InvalidOperationIdentityWithShowDeletion = 1361742503U,
			// Token: 0x0400448D RID: 17549
			ErrorTenantIsUpgrading = 1698089187U,
			// Token: 0x0400448E RID: 17550
			JournalingParameterErrorGccTenantSettingNotExist = 2785027967U,
			// Token: 0x0400448F RID: 17551
			LiveIdAuthenticationResultFailure = 4220433130U,
			// Token: 0x04004490 RID: 17552
			FDS_UM_PerfCountersComponentDescription = 3393259516U,
			// Token: 0x04004491 RID: 17553
			GzipLowDoesNotUseDynamicCompression = 3315552988U,
			// Token: 0x04004492 RID: 17554
			ProgressStatusFinished = 1964968671U,
			// Token: 0x04004493 RID: 17555
			CouldNotFindObjectById = 796416024U,
			// Token: 0x04004494 RID: 17556
			UMCallAnsweringRuleInvalidValue = 1951165280U,
			// Token: 0x04004495 RID: 17557
			StopReplService = 1083707598U,
			// Token: 0x04004496 RID: 17558
			ErrorNoMatchedUserFound = 4037085182U,
			// Token: 0x04004497 RID: 17559
			ErrorVirtualDirectoryNameNull = 3270764744U,
			// Token: 0x04004498 RID: 17560
			ErrorDefaultHostedContentFilterPolicyCannotBeDeleted = 534542334U,
			// Token: 0x04004499 RID: 17561
			SettingRequest = 3468207191U,
			// Token: 0x0400449A RID: 17562
			ErrorReportingEnabledLegalMessage = 1878646175U,
			// Token: 0x0400449B RID: 17563
			ClassificationRuleCollectionAlreadyExists = 3950782380U,
			// Token: 0x0400449C RID: 17564
			ExportFileNameShouldNotBeSet = 3231976114U,
			// Token: 0x0400449D RID: 17565
			ADAttributeState = 3882899654U,
			// Token: 0x0400449E RID: 17566
			PhoneNumberAllowedOnlyWithDialplanWithCountryCode = 2283093077U,
			// Token: 0x0400449F RID: 17567
			SetupComponentDataStorageConfiguration = 1653262113U,
			// Token: 0x040044A0 RID: 17568
			SetMailboxForwardingAddressConfirmationMessage = 163354931U,
			// Token: 0x040044A1 RID: 17569
			SetupProgressPermissionManagementEnabled = 2371482883U,
			// Token: 0x040044A2 RID: 17570
			SetImap4ConfigurationTask = 4052366510U,
			// Token: 0x040044A3 RID: 17571
			ErrorSourceEndpointRequired = 766796983U,
			// Token: 0x040044A4 RID: 17572
			LPPrepareInstallationSource = 735969708U,
			// Token: 0x040044A5 RID: 17573
			EADCWeakSourceCreds = 2661979141U,
			// Token: 0x040044A6 RID: 17574
			idCreateActiveSyncOraganizationSettings = 731066465U,
			// Token: 0x040044A7 RID: 17575
			ErrorPartnerApplicationEmptyRealmWhenNotUseAuthServer = 2469839629U,
			// Token: 0x040044A8 RID: 17576
			SetupProgressStoppingHTTPFilterService = 986846419U,
			// Token: 0x040044A9 RID: 17577
			Pop3ServiceDescription = 4253494883U,
			// Token: 0x040044AA RID: 17578
			ErrorParametersRequiredForNewTenant = 261580922U,
			// Token: 0x040044AB RID: 17579
			ErrorBookmarkIndexOutOfRange = 385792810U,
			// Token: 0x040044AC RID: 17580
			RetentionPolicyNotEnabled = 1085159024U,
			// Token: 0x040044AD RID: 17581
			ErrorRpcHttpMustSpecifyEitherInternalOrExternalHostName = 3250910474U,
			// Token: 0x040044AE RID: 17582
			CompletePublicFolderMigrationBatchRequiresSourceLockDown = 420398710U,
			// Token: 0x040044AF RID: 17583
			ErrorPublicFolderMigrationCompletedPreviously = 3561171250U,
			// Token: 0x040044B0 RID: 17584
			DataMartTimeoutException = 2772872006U,
			// Token: 0x040044B1 RID: 17585
			ProgressDeletingEdbFile = 1181325280U,
			// Token: 0x040044B2 RID: 17586
			DebugStartSetDatabase = 1570002996U,
			// Token: 0x040044B3 RID: 17587
			SearchServiceDisplayName = 4275861342U,
			// Token: 0x040044B4 RID: 17588
			ErrorCannotOperateOnOrgInCurrentState = 2155767711U,
			// Token: 0x040044B5 RID: 17589
			SetupProgressPerMBXPlanOWAPolicyEnabled = 1719064209U,
			// Token: 0x040044B6 RID: 17590
			SetupProgressStartingASUpdateService = 421167968U,
			// Token: 0x040044B7 RID: 17591
			SetupProgressStartingWMIProviderService = 533423045U,
			// Token: 0x040044B8 RID: 17592
			InvalidRequestJob = 1424238063U,
			// Token: 0x040044B9 RID: 17593
			MalboxFolderRightsFolderVisible = 1340234760U,
			// Token: 0x040044BA RID: 17594
			SuspendSgcTimeout = 3941297540U,
			// Token: 0x040044BB RID: 17595
			NonUniqueCategoryObject = 1794306721U,
			// Token: 0x040044BC RID: 17596
			SendConnectorValidTargetServerNotFound = 3908311118U,
			// Token: 0x040044BD RID: 17597
			WarningLegacyExchangeServer = 4274945649U,
			// Token: 0x040044BE RID: 17598
			IntegratedVDirDisabledWarning = 1461816102U,
			// Token: 0x040044BF RID: 17599
			SetupProgressStoppingReplayService = 582063934U,
			// Token: 0x040044C0 RID: 17600
			CasHealthOwaLogonScenarioDescription = 241712969U,
			// Token: 0x040044C1 RID: 17601
			AdminGroupsNotFoundException = 4253171919U,
			// Token: 0x040044C2 RID: 17602
			DiscoveryMailboxDisplayName = 2532440427U,
			// Token: 0x040044C3 RID: 17603
			ErrorAssignmentMethodWithoutRoleAssignee = 226086397U,
			// Token: 0x040044C4 RID: 17604
			CasHealthCouldNotObtainFqdn = 4255815683U,
			// Token: 0x040044C5 RID: 17605
			ErrorSetPasswordWithoutPermission = 1218462432U,
			// Token: 0x040044C6 RID: 17606
			SetupProgressUpdateMailboxes = 4247430353U,
			// Token: 0x040044C7 RID: 17607
			ErrorMissLinkedDomainController = 3679340841U,
			// Token: 0x040044C8 RID: 17608
			CasHealthOwaGetLogoffStart = 4287593485U,
			// Token: 0x040044C9 RID: 17609
			DebugEndCreateMemberRequest = 1824522771U,
			// Token: 0x040044CA RID: 17610
			SetupProgressNewTLSCertificate = 1872464746U,
			// Token: 0x040044CB RID: 17611
			UninstallingMSExchangeFDS = 390386316U,
			// Token: 0x040044CC RID: 17612
			WarningLastPublicFolderDatabase = 292732930U,
			// Token: 0x040044CD RID: 17613
			DNSRoutingEnabledMustBeSpecifiedForAuthMechanism = 3437030666U,
			// Token: 0x040044CE RID: 17614
			SetupProgressCreateModeratedRecipients = 3479749483U,
			// Token: 0x040044CF RID: 17615
			FileUploadServiceDisplayName = 4032370005U,
			// Token: 0x040044D0 RID: 17616
			DegubStartConnectingToDomainServices = 2940137032U,
			// Token: 0x040044D1 RID: 17617
			InvalidMessageIdentity = 488863134U,
			// Token: 0x040044D2 RID: 17618
			ComplianceSearchTaskCreationError = 2545086143U,
			// Token: 0x040044D3 RID: 17619
			ErrorSourceMailboxDatabaseVersionUnsupported = 1295832983U,
			// Token: 0x040044D4 RID: 17620
			UninstallClientAccessIisWebServiceExtensions = 2730360995U,
			// Token: 0x040044D5 RID: 17621
			UninstallExchangeStreamingOpticsTask = 1873803728U,
			// Token: 0x040044D6 RID: 17622
			SetupComponentConfiguringCore = 2499030806U,
			// Token: 0x040044D7 RID: 17623
			ADAttributeStreet = 2002903510U,
			// Token: 0x040044D8 RID: 17624
			SmtpConnectivityNoneSucceeded = 2993918660U,
			// Token: 0x040044D9 RID: 17625
			SetupComponentStartingMailboxServices = 2767568162U,
			// Token: 0x040044DA RID: 17626
			FrontEndTransportServiceDescription = 318642788U,
			// Token: 0x040044DB RID: 17627
			InvalidPageSize = 577523851U,
			// Token: 0x040044DC RID: 17628
			SetupProgressCreateApplicationMailDestinationsContainer = 531065537U,
			// Token: 0x040044DD RID: 17629
			ProvisioningRequestAlreadyCanceling = 692347082U,
			// Token: 0x040044DE RID: 17630
			SetupProgressStoppingCredentialService = 1574844528U,
			// Token: 0x040044DF RID: 17631
			SetupProgressImapEnabled = 596322096U,
			// Token: 0x040044E0 RID: 17632
			ProgressValidation = 1369158086U,
			// Token: 0x040044E1 RID: 17633
			ErrorRecipientContainerInvalidOrNotExists = 4216445905U,
			// Token: 0x040044E2 RID: 17634
			DomainsNotFoundException = 2063735667U,
			// Token: 0x040044E3 RID: 17635
			SetupProgressCreateMoveToArchiveRetentionPolicyTag = 872788106U,
			// Token: 0x040044E4 RID: 17636
			FailedToFindFederationTrust = 2954545082U,
			// Token: 0x040044E5 RID: 17637
			MailboxConnectScenario = 3818749374U,
			// Token: 0x040044E6 RID: 17638
			ElcUserConfigurationConfigurationItemNotAvailable = 4201996528U,
			// Token: 0x040044E7 RID: 17639
			OutlookProtectionRuleInvalidPriority = 28165407U,
			// Token: 0x040044E8 RID: 17640
			CouldNotFindEWSStandardAuthBindingTransportElement = 2616555063U,
			// Token: 0x040044E9 RID: 17641
			SetupProgressCreateArbitrationMailboxRetentionPolicy = 133450481U,
			// Token: 0x040044EA RID: 17642
			AddressRewriteIdentityNotFound = 3692329177U,
			// Token: 0x040044EB RID: 17643
			ErrorFailedToGetRacAndClcTenant = 30730169U,
			// Token: 0x040044EC RID: 17644
			RemoveCertificateFederation = 1056311972U,
			// Token: 0x040044ED RID: 17645
			ErrorWMAFileTooBig = 2034871165U,
			// Token: 0x040044EE RID: 17646
			ADAttributeCustomAttribute3 = 1377545169U,
			// Token: 0x040044EF RID: 17647
			IMSAdminHelperGetDataPathsCouldNotAllocateException = 1499192082U,
			// Token: 0x040044F0 RID: 17648
			CasHealthMustSpecifyCas = 784747152U,
			// Token: 0x040044F1 RID: 17649
			ConfirmationMessageSetSupervisionPolicy = 2311033855U,
			// Token: 0x040044F2 RID: 17650
			ErrorSetMailboxLitigationHoldDuration = 467522453U,
			// Token: 0x040044F3 RID: 17651
			AddressBookServiceDisplayName = 2485903499U,
			// Token: 0x040044F4 RID: 17652
			MigrationNoLargeItemLimitForLocalBatches = 3342681064U,
			// Token: 0x040044F5 RID: 17653
			SetupProgressConfigureAntispamObjects = 59123757U,
			// Token: 0x040044F6 RID: 17654
			ADAttributeDepartment = 3367615085U,
			// Token: 0x040044F7 RID: 17655
			ErrorFreeBusyResponsibility = 3295799601U,
			// Token: 0x040044F8 RID: 17656
			SetupComponentCommonGlobalConfig = 1920246746U,
			// Token: 0x040044F9 RID: 17657
			MetabaseSetPropertiesFailure = 3214028675U,
			// Token: 0x040044FA RID: 17658
			ErrorLinkedMailboxesAreNotSupported = 350309502U,
			// Token: 0x040044FB RID: 17659
			ExchangeSettingsEnableUsage = 3930521376U,
			// Token: 0x040044FC RID: 17660
			DebugStartUpnUniquenessCheck = 1649334496U,
			// Token: 0x040044FD RID: 17661
			MigrationCannotBeCompleted = 574372347U,
			// Token: 0x040044FE RID: 17662
			IsapiDLLPathNotFoundException = 1904936963U,
			// Token: 0x040044FF RID: 17663
			MtrtMessageFail = 2522223732U,
			// Token: 0x04004500 RID: 17664
			CannotRemoveSharingPolicyWithUsersAssigned = 3694845743U,
			// Token: 0x04004501 RID: 17665
			MissingDataClassificationsParameter = 1485874038U,
			// Token: 0x04004502 RID: 17666
			Debug = 882462221U,
			// Token: 0x04004503 RID: 17667
			ErrorFromSyncClientAndMembersUsedTogether = 2158213497U,
			// Token: 0x04004504 RID: 17668
			NoAction = 161711511U,
			// Token: 0x04004505 RID: 17669
			ErrorSuspendWRTCForOnlineOnly = 222253302U,
			// Token: 0x04004506 RID: 17670
			ErrorMinimumAccountExpiry = 1533807700U,
			// Token: 0x04004507 RID: 17671
			ComInteropTlbNotFound = 3367745963U,
			// Token: 0x04004508 RID: 17672
			InstallContentIndexingServiceTask = 1442001356U,
			// Token: 0x04004509 RID: 17673
			SetupComponentSMTPConfiguration = 2361559256U,
			// Token: 0x0400450A RID: 17674
			InvalidOrganization = 906204482U,
			// Token: 0x0400450B RID: 17675
			SyncNowAlreadyStartedException = 2291874325U,
			// Token: 0x0400450C RID: 17676
			WarningPropertiesIgnored = 3812135455U,
			// Token: 0x0400450D RID: 17677
			MoveMailboxGenerateWatsonDump = 3862568128U,
			// Token: 0x0400450E RID: 17678
			AuthenticationMethodFba = 815668002U,
			// Token: 0x0400450F RID: 17679
			WarningGeneratingMailboxIsNullOABWillNotBeGenerated = 3850237910U,
			// Token: 0x04004510 RID: 17680
			WarningForceMessage = 1520502444U,
			// Token: 0x04004511 RID: 17681
			SetupProgressCreateRBACContainer = 3119406771U,
			// Token: 0x04004512 RID: 17682
			MetadataPropertyIsWhiteSpaceOrContainsWhiteSpacePrefixOrSuffix = 1122863290U,
			// Token: 0x04004513 RID: 17683
			InvalidStartAndEndTime = 4040765572U,
			// Token: 0x04004514 RID: 17684
			CasHealthOwaUrlAndCasArgumentError = 4135619444U,
			// Token: 0x04004515 RID: 17685
			WarnAboutStarAcceptedDomain = 2494275330U,
			// Token: 0x04004516 RID: 17686
			NoTPDsImported = 2071494620U,
			// Token: 0x04004517 RID: 17687
			SetupProgressCleanEmptyDirs = 1741046566U,
			// Token: 0x04004518 RID: 17688
			SearchServiceDescription = 3879378277U,
			// Token: 0x04004519 RID: 17689
			SetupComponentPostSetupBridgehead = 2801279682U,
			// Token: 0x0400451A RID: 17690
			ProgressSavingADObject = 1756765869U,
			// Token: 0x0400451B RID: 17691
			TenantOrganizationMissing2 = 1928317617U,
			// Token: 0x0400451C RID: 17692
			MultipleCoexistenceDomainsFoundException = 4085285360U,
			// Token: 0x0400451D RID: 17693
			ErrorNotEnoughPermissions = 3468299751U,
			// Token: 0x0400451E RID: 17694
			CasHealthOwaGetAuthSucceeded = 963382869U,
			// Token: 0x0400451F RID: 17695
			ErrorCannotUnlinkMailboxPlanForTenant = 379322642U,
			// Token: 0x04004520 RID: 17696
			FDServiceDisplayName = 2954647688U,
			// Token: 0x04004521 RID: 17697
			CasHealthUserNameHeader = 867272512U,
			// Token: 0x04004522 RID: 17698
			ErrorInboxRuleHasNoAction = 248554005U,
			// Token: 0x04004523 RID: 17699
			ErrorNotSupportInCrossOrg = 2162195429U,
			// Token: 0x04004524 RID: 17700
			VerboseSyncTaskNullCookie = 3931432863U,
			// Token: 0x04004525 RID: 17701
			SetupdProgressPrivacyLink = 3040152642U,
			// Token: 0x04004526 RID: 17702
			SetupProgressTemplateTenant = 3017742918U,
			// Token: 0x04004527 RID: 17703
			CasHealthOwaConnectionError = 2524348032U,
			// Token: 0x04004528 RID: 17704
			SetupProgressStoppingInformationStoreService = 3804447234U,
			// Token: 0x04004529 RID: 17705
			SetupProgressGatewayPerfCounters = 1498335696U,
			// Token: 0x0400452A RID: 17706
			FailedToUnregisterContentIndexingBinaries = 920999072U,
			// Token: 0x0400452B RID: 17707
			CreateDefaultActiveSyncMailboxPolicy = 3415113328U,
			// Token: 0x0400452C RID: 17708
			SetupProgressCreateAutoDiscoverContainer = 2110592425U,
			// Token: 0x0400452D RID: 17709
			FBAServiceDescription = 640336054U,
			// Token: 0x0400452E RID: 17710
			AirSyncReportingProgressActivity = 3665160963U,
			// Token: 0x0400452F RID: 17711
			SetupProgressStoppingExchangeMGMTService = 3640701559U,
			// Token: 0x04004530 RID: 17712
			TaskBothConfigurationOnlyAndQuorumOnlySpecified = 3023752340U,
			// Token: 0x04004531 RID: 17713
			ErrorCorruptFederationMetadata = 2676557537U,
			// Token: 0x04004532 RID: 17714
			SetupProgressCreateAutoGroup = 899504670U,
			// Token: 0x04004533 RID: 17715
			SetupProgressCleanupFiles = 674748907U,
			// Token: 0x04004534 RID: 17716
			CasHealthWebAppNoCasMbxUmHtArgumentError = 3478112858U,
			// Token: 0x04004535 RID: 17717
			SetupProgressStoppingSystemAttendantService = 3677088551U,
			// Token: 0x04004536 RID: 17718
			ErrorBPAMoreThanOnePrereqServerSpecified = 1843600203U,
			// Token: 0x04004537 RID: 17719
			ErrorDotNetInstallPathNotFound = 3418928659U,
			// Token: 0x04004538 RID: 17720
			InstallImap4BeServiceTask = 1880877723U,
			// Token: 0x04004539 RID: 17721
			MigrationMustSpecifyEmailOrMailboxDN = 4240176319U,
			// Token: 0x0400453A RID: 17722
			CannotLocateTargetServiceEndpoint = 1465077572U,
			// Token: 0x0400453B RID: 17723
			UnregisterFilterFailed = 362822361U,
			// Token: 0x0400453C RID: 17724
			RegSvr32FailedToExit = 3201264196U,
			// Token: 0x0400453D RID: 17725
			ComplianceAuditServiceNotUninstalled = 2773342531U,
			// Token: 0x0400453E RID: 17726
			SetupProgressUninstallTransportLogSearchService = 3914082886U,
			// Token: 0x0400453F RID: 17727
			SetupProgressDisableFastSearchSeedingPortRule = 2879434796U,
			// Token: 0x04004540 RID: 17728
			GlobalLocatorServiceResultSuccess = 640518096U,
			// Token: 0x04004541 RID: 17729
			DagNetworkInconsistentRoleException = 3548951548U,
			// Token: 0x04004542 RID: 17730
			SetInstallPathInAppConfig = 3295286714U,
			// Token: 0x04004543 RID: 17731
			ConfirmationMessageRemoveAutodiscoverVirtualDirectory = 2320102244U,
			// Token: 0x04004544 RID: 17732
			DomainControllerName = 1874104103U,
			// Token: 0x04004545 RID: 17733
			UninstallADTopologyServiceTask = 2631968966U,
			// Token: 0x04004546 RID: 17734
			SmtpConnectivityAllTested = 2887275141U,
			// Token: 0x04004547 RID: 17735
			ErrorInboxRuleNotSupported = 1174103519U,
			// Token: 0x04004548 RID: 17736
			Verbose = 2666067648U,
			// Token: 0x04004549 RID: 17737
			ContinueToRemoveHoldForInactive = 998944703U,
			// Token: 0x0400454A RID: 17738
			CasHealthLatencyHeader = 2363277368U,
			// Token: 0x0400454B RID: 17739
			ADAttributeFaxNumber = 2182511137U,
			// Token: 0x0400454C RID: 17740
			SetupProgressCreateOutlookContainer = 4242268310U,
			// Token: 0x0400454D RID: 17741
			InvalidCategoryObject = 195087670U,
			// Token: 0x0400454E RID: 17742
			OfficeDataLoaderServiceDisplayName = 3886507265U,
			// Token: 0x0400454F RID: 17743
			MoveStatusSucceeded = 1353995902U,
			// Token: 0x04004550 RID: 17744
			LoadCredentialsSuccess = 1546277393U,
			// Token: 0x04004551 RID: 17745
			LegacyIncludeOriginalMailParameterWillBeUpgraded = 2631471741U,
			// Token: 0x04004552 RID: 17746
			FileShareQuorumCheckDesc = 3725160909U,
			// Token: 0x04004553 RID: 17747
			ClientAccessComponentDescription = 2928336084U,
			// Token: 0x04004554 RID: 17748
			StopADTopologyService = 928033673U,
			// Token: 0x04004555 RID: 17749
			ErrorCannotChangeRoleGroupType = 872037930U,
			// Token: 0x04004556 RID: 17750
			ErrorInvalidCasting = 1020220U,
			// Token: 0x04004557 RID: 17751
			SetupProgressCreatingNewPublicFolderDatabase = 3437177865U,
			// Token: 0x04004558 RID: 17752
			SortedAvailablePatches = 3327710720U,
			// Token: 0x04004559 RID: 17753
			WarningSetMailboxLitigationHoldDuration = 2038537031U,
			// Token: 0x0400455A RID: 17754
			ADUserIsMissingData = 343634016U,
			// Token: 0x0400455B RID: 17755
			ExpiryCertMessage = 3219751466U,
			// Token: 0x0400455C RID: 17756
			ContentIndexAlreadyExists = 2978007281U,
			// Token: 0x0400455D RID: 17757
			ImportCertificateBase64DataInvalid = 2460780396U,
			// Token: 0x0400455E RID: 17758
			InfoUL = 2469672135U,
			// Token: 0x0400455F RID: 17759
			ErrorLocalMachineIsNotExchangeServer = 3855259485U,
			// Token: 0x04004560 RID: 17760
			ErrorEwsEnforceBlockListAndEwsAllowListSpecified = 349869371U,
			// Token: 0x04004561 RID: 17761
			MoveMailboxSourceCleanupTypeCreateSourceContact = 2062290861U,
			// Token: 0x04004562 RID: 17762
			MRSHealthPassed = 1971406120U,
			// Token: 0x04004563 RID: 17763
			ErrorAccessingTransportSettings = 1453329754U,
			// Token: 0x04004564 RID: 17764
			PopImapLoggingOff = 1846483964U,
			// Token: 0x04004565 RID: 17765
			ConfirmationMessageRemoveProvisioningWebServiceVirtualDirectory = 332094276U,
			// Token: 0x04004566 RID: 17766
			MtrtMessageSubmitDetailMessage = 205573600U,
			// Token: 0x04004567 RID: 17767
			TheOnlySourceMailboxIsTheTargetMailbox = 3906240272U,
			// Token: 0x04004568 RID: 17768
			UnifiedMessagingRoleDisplayName = 126744571U,
			// Token: 0x04004569 RID: 17769
			TpdAlreadyImported = 1510867730U,
			// Token: 0x0400456A RID: 17770
			SetupProgressStoppingNotificationsBrokerService = 1468831408U,
			// Token: 0x0400456B RID: 17771
			CannotBypassDomainNameValidation = 3641402715U,
			// Token: 0x0400456C RID: 17772
			InitialOrIncrementalMigrationArgument = 1289162260U,
			// Token: 0x0400456D RID: 17773
			VerboseBeginFingerprint = 2183205705U,
			// Token: 0x0400456E RID: 17774
			MailboxReplicationServiceNotRunning = 2774892227U,
			// Token: 0x0400456F RID: 17775
			AddressBookServiceDescription = 3099642004U,
			// Token: 0x04004570 RID: 17776
			MonitoringCorrelationServiceDescription = 2462782643U,
			// Token: 0x04004571 RID: 17777
			ErrorCannotRetrieveLocalSite = 1325930305U,
			// Token: 0x04004572 RID: 17778
			SetupProgressDiscoveryMailboxes = 1390596538U,
			// Token: 0x04004573 RID: 17779
			ErrorApprovalApplicationIdentityUnsupported = 1525201652U,
			// Token: 0x04004574 RID: 17780
			CasHealthOwaInternalTrustCertificate = 3997887818U,
			// Token: 0x04004575 RID: 17781
			EnableCertificateServiceNotInstalled = 3297360946U,
			// Token: 0x04004576 RID: 17782
			SetupProgressCreateOutlookProtectionRulesContainer = 369010750U,
			// Token: 0x04004577 RID: 17783
			MailboxReplicationServiceIsRunning = 2836471846U,
			// Token: 0x04004578 RID: 17784
			PolicyNeededForAutotagging = 3403924458U,
			// Token: 0x04004579 RID: 17785
			CasHealthOwaLogonScenarioName = 2088391844U,
			// Token: 0x0400457A RID: 17786
			RemoveSecondaryDomainDescription = 2256240594U,
			// Token: 0x0400457B RID: 17787
			SetupProgressSkipResetPasswordOnFirstLogonEnabled = 1225301128U,
			// Token: 0x0400457C RID: 17788
			RejectMessageParameterWillBeIgnored = 2799440992U,
			// Token: 0x0400457D RID: 17789
			ReplayLagStatusLabelConfigured = 934287899U,
			// Token: 0x0400457E RID: 17790
			WarningTooManyLegacyGALsCreated = 3487518861U,
			// Token: 0x0400457F RID: 17791
			ErrorLegacyPublicFolderDatabaseExist = 1803359682U,
			// Token: 0x04004580 RID: 17792
			UninstallMailboxTransportDeliveryServiceTask = 3014123757U,
			// Token: 0x04004581 RID: 17793
			LiveIdAuthenticationResultUndefined = 703660436U,
			// Token: 0x04004582 RID: 17794
			AspnetConfigFileNotFound = 2198248626U,
			// Token: 0x04004583 RID: 17795
			CannotMoveOabToE15OrLaterServer = 3520531162U,
			// Token: 0x04004584 RID: 17796
			ErrorNotSupportedModifyMultivaluedProperties = 2910100378U,
			// Token: 0x04004585 RID: 17797
			RuleCollectionInvalid = 2531302401U,
			// Token: 0x04004586 RID: 17798
			IsNetlogonRunningScenario = 433694853U,
			// Token: 0x04004587 RID: 17799
			TestCNGPrivateKeyNotSupported = 2523315401U,
			// Token: 0x04004588 RID: 17800
			Info_MessageItemHasBeenCreated = 3719036545U,
			// Token: 0x04004589 RID: 17801
			SetupProgressCleanManagement = 1226169742U,
			// Token: 0x0400458A RID: 17802
			ErrorSystemAttendantObjectMissing = 4209927473U,
			// Token: 0x0400458B RID: 17803
			InvalidAction = 1466544691U,
			// Token: 0x0400458C RID: 17804
			NewServiceConnectionPointInvalidParameters = 2037665150U,
			// Token: 0x0400458D RID: 17805
			OauthIsTurnedOff = 1441009660U,
			// Token: 0x0400458E RID: 17806
			AutoDiscoverUrlIsBad = 2041792354U,
			// Token: 0x0400458F RID: 17807
			ErrorLocalAccountPartitionRequiredForTT = 691468660U,
			// Token: 0x04004590 RID: 17808
			InvalidFqdnFromAD = 536922083U,
			// Token: 0x04004591 RID: 17809
			VerboseStartAuditLogSearch = 478157661U,
			// Token: 0x04004592 RID: 17810
			CasHealthCalendarLongName = 307758658U,
			// Token: 0x04004593 RID: 17811
			ErrorWhileFolderSync = 671469622U,
			// Token: 0x04004594 RID: 17812
			Pop3ServiceDisplayName = 2976017118U,
			// Token: 0x04004595 RID: 17813
			ErrorGetSyncDeletedRecipientRetryFailed = 57133306U,
			// Token: 0x04004596 RID: 17814
			ErrorChangingBadwordsTransportRule = 1794509022U,
			// Token: 0x04004597 RID: 17815
			DatacenterEnvironmentOnlyOperationException = 3636625232U,
			// Token: 0x04004598 RID: 17816
			RemoveOrganizationFailWithExistingMailboxes = 2284358260U,
			// Token: 0x04004599 RID: 17817
			ErrorFederationEnabledIsImmutable = 310110990U,
			// Token: 0x0400459A RID: 17818
			SetupComponentConfiguringInformationStore = 3043193198U,
			// Token: 0x0400459B RID: 17819
			PopImapComponentDescription = 855500179U,
			// Token: 0x0400459C RID: 17820
			MoveMailboxSourceCleanupTypeDeleteSourceMailbox = 3924025634U,
			// Token: 0x0400459D RID: 17821
			ReplayLagStatusLabelEnabled = 302613486U,
			// Token: 0x0400459E RID: 17822
			FileDistributionServiceControlComponentDescription = 1777480851U,
			// Token: 0x0400459F RID: 17823
			VerboseVerifyRecipientViewRootSucceed = 2388930131U,
			// Token: 0x040045A0 RID: 17824
			NewOrganizationDescription = 2499808701U,
			// Token: 0x040045A1 RID: 17825
			ArchiveConnectivityResultPrimaryFailure = 3347295290U,
			// Token: 0x040045A2 RID: 17826
			ConfirmationMessageEnableAntiSpamUpdates = 2993783194U,
			// Token: 0x040045A3 RID: 17827
			WarningUseConfigurationOnly = 3791304781U,
			// Token: 0x040045A4 RID: 17828
			IsapiExtensionMustHavePhysicalPathException = 2888337457U,
			// Token: 0x040045A5 RID: 17829
			SetMailboxSearchActivity = 3051861517U,
			// Token: 0x040045A6 RID: 17830
			SetupProgressCreateFederationContainer = 748775328U,
			// Token: 0x040045A7 RID: 17831
			ExchangeTracingProviderInstalledSuccess = 204171309U,
			// Token: 0x040045A8 RID: 17832
			SetupProgressStartingServiceHostService = 3571315384U,
			// Token: 0x040045A9 RID: 17833
			MigrationStartAfterIncorrectMigrationType = 2383416297U,
			// Token: 0x040045AA RID: 17834
			SetupProgressCreateRulesContainer = 531644470U,
			// Token: 0x040045AB RID: 17835
			ThrottlingServiceDisplayName = 446352617U,
			// Token: 0x040045AC RID: 17836
			CasHealthTestNewUserDataCenterScriptName = 4208434869U,
			// Token: 0x040045AD RID: 17837
			MtrtModerateMessageByManager = 1406904313U,
			// Token: 0x040045AE RID: 17838
			CasHealthInstructResetCredentials = 1372186092U,
			// Token: 0x040045AF RID: 17839
			ErrorInvalidDlpPolicyTemplateIdentity = 3029376667U,
			// Token: 0x040045B0 RID: 17840
			RoleReviewer = 1140300925U,
			// Token: 0x040045B1 RID: 17841
			StartSetupProcess = 1700516872U,
			// Token: 0x040045B2 RID: 17842
			SMSMWIEnabledAllowedOnlyOnE164ConsumerDialplan = 1990198525U,
			// Token: 0x040045B3 RID: 17843
			NoKeyInformationInImportedTrustedPublishingDomain = 2135255345U,
			// Token: 0x040045B4 RID: 17844
			ErrorOrganizationIdentityRequired = 418330348U,
			// Token: 0x040045B5 RID: 17845
			TransportSyncManagerServiceNotInstalled = 1927181059U,
			// Token: 0x040045B6 RID: 17846
			ErrorMissingWindowsLiveIdHandler = 2827020246U,
			// Token: 0x040045B7 RID: 17847
			MigrationJobCorrupted = 1363030539U,
			// Token: 0x040045B8 RID: 17848
			SetupProgressCreateDSNContainerHierarcy = 2950414539U,
			// Token: 0x040045B9 RID: 17849
			ErrorEndTimeSmallerThanStartTime = 2630227016U,
			// Token: 0x040045BA RID: 17850
			StoppingMonitoringService = 3117364089U,
			// Token: 0x040045BB RID: 17851
			MtrtAddCopyToRecipient = 3900097179U,
			// Token: 0x040045BC RID: 17852
			SetupProgressCreateMailboxContainers = 910877028U,
			// Token: 0x040045BD RID: 17853
			SetupComponentCafeGlobalConfig = 230534278U,
			// Token: 0x040045BE RID: 17854
			ErrorDatabaseCountInServerExceedLimit = 52273023U,
			// Token: 0x040045BF RID: 17855
			NoKeyIDTypeInImportedTrustedPublishingDomain = 3883167156U,
			// Token: 0x040045C0 RID: 17856
			ErrorChangePartnerApplicationDirectTrust = 3122739895U,
			// Token: 0x040045C1 RID: 17857
			ProtectedServiceHostDisplayName = 245723146U,
			// Token: 0x040045C2 RID: 17858
			EcpAuthenticationNotMatchOwaWarning = 2024633455U,
			// Token: 0x040045C3 RID: 17859
			SetupProgressStartingSystemAttendantService = 712435719U,
			// Token: 0x040045C4 RID: 17860
			InterceptorErrorEventInvalid = 2862785662U,
			// Token: 0x040045C5 RID: 17861
			NewPerfCounters = 4219526338U,
			// Token: 0x040045C6 RID: 17862
			CalendarAnalysisMixedModeNotSupported = 2534963029U,
			// Token: 0x040045C7 RID: 17863
			MapiSubmitSystemProbeFail = 472758664U,
			// Token: 0x040045C8 RID: 17864
			FinishedUpdatingMFLFiles = 3414041514U,
			// Token: 0x040045C9 RID: 17865
			FailedToChangeServiceConfig = 4222707329U,
			// Token: 0x040045CA RID: 17866
			JournalNdrMailboxWarning = 1166503263U,
			// Token: 0x040045CB RID: 17867
			DeleteOperation = 1777122322U,
			// Token: 0x040045CC RID: 17868
			TenantNotificationVerboseNotSendingEmailNoRecipients = 2154198407U,
			// Token: 0x040045CD RID: 17869
			InternalJournalRuleScope = 2765375592U,
			// Token: 0x040045CE RID: 17870
			TestMigrationServerConnectionFailed = 3649628048U,
			// Token: 0x040045CF RID: 17871
			CannotRemoveDefaultSharingPolicy = 3520915432U,
			// Token: 0x040045D0 RID: 17872
			DatabaseOffline = 3608246202U,
			// Token: 0x040045D1 RID: 17873
			FileAlreadyExists = 622543112U,
			// Token: 0x040045D2 RID: 17874
			ErrorCannotLoadFingerprintCreator = 4025218279U,
			// Token: 0x040045D3 RID: 17875
			VerboseChangeWinrmStartType = 2349505779U,
			// Token: 0x040045D4 RID: 17876
			ConfiguringMailboxSystemAttendantDependentTasks = 3476101420U,
			// Token: 0x040045D5 RID: 17877
			StartingMSExchangeFDS = 4251301146U,
			// Token: 0x040045D6 RID: 17878
			ErrorInvalidExcludedCmdletPattern = 3588458122U,
			// Token: 0x040045D7 RID: 17879
			CasHealthTaskCasHasNoTopologySite = 353738526U,
			// Token: 0x040045D8 RID: 17880
			DisasterRecoveryGatewayRoleDescription = 3068214134U,
			// Token: 0x040045D9 RID: 17881
			GlobalLocatorServiceResultUndefined = 3584192845U,
			// Token: 0x040045DA RID: 17882
			SetupProgressCustomScriptsEnabled = 1226048266U,
			// Token: 0x040045DB RID: 17883
			MessageTypeCalendaring = 1903193717U,
			// Token: 0x040045DC RID: 17884
			InstallRecoveryActionArbiterServiceTask = 4235097279U,
			// Token: 0x040045DD RID: 17885
			InvalidNameOrDescriptionForDefaultLocale = 595624881U,
			// Token: 0x040045DE RID: 17886
			ErrorRoomPasswordMustBeSetWhenCreatingARoomADAccount = 93941597U,
			// Token: 0x040045DF RID: 17887
			ExceptionProductInfoRequired = 3931018787U,
			// Token: 0x040045E0 RID: 17888
			VerboseSucceedToPrepopulateCache = 3287357166U,
			// Token: 0x040045E1 RID: 17889
			NotMailboxDatabase = 2662348268U,
			// Token: 0x040045E2 RID: 17890
			Error_CheckClientInfo = 3572711316U,
			// Token: 0x040045E3 RID: 17891
			DelegationTokenRequestSuccess = 1236397787U,
			// Token: 0x040045E4 RID: 17892
			MOWADeviceTypePrefix = 2708098864U,
			// Token: 0x040045E5 RID: 17893
			FFoDisablePrepareSct = 4184366094U,
			// Token: 0x040045E6 RID: 17894
			SetupProgressConfiguringOAB = 439240951U,
			// Token: 0x040045E7 RID: 17895
			ErrorDefaultSpamConfigCannotBeDeleted = 841216837U,
			// Token: 0x040045E8 RID: 17896
			SetupComponentPreSetupFrontendTransport = 3037105461U,
			// Token: 0x040045E9 RID: 17897
			SetupComponentPostSetupGateway = 4110715451U,
			// Token: 0x040045EA RID: 17898
			ValidatingTestCasConnectivityRunInstance = 2803101125U,
			// Token: 0x040045EB RID: 17899
			InstallTranscodingServiceEx = 3558380023U,
			// Token: 0x040045EC RID: 17900
			GlobalJournalRuleScope = 1033795742U,
			// Token: 0x040045ED RID: 17901
			ActiveManagerCheckDesc = 822308736U,
			// Token: 0x040045EE RID: 17902
			SetupComponentConfigurationBridgehead = 358249099U,
			// Token: 0x040045EF RID: 17903
			ClassificationRuleCollectionDecryptionFailure = 3141727619U,
			// Token: 0x040045F0 RID: 17904
			ProgressRestoringDatabaseStatus = 385783597U,
			// Token: 0x040045F1 RID: 17905
			CasHealthOwaTimeoutExternal = 3789968890U,
			// Token: 0x040045F2 RID: 17906
			TestSearchCheckMailbox = 3237406418U,
			// Token: 0x040045F3 RID: 17907
			SendConnectorDashdashAddressSpaceNotUnique = 1194595183U,
			// Token: 0x040045F4 RID: 17908
			UninstallImap4BeServiceTask = 3826931934U,
			// Token: 0x040045F5 RID: 17909
			CopyStatusDisconnectedAndHealthy = 3985647980U,
			// Token: 0x040045F6 RID: 17910
			WarningADServerSettingsUnchanged = 717219190U,
			// Token: 0x040045F7 RID: 17911
			CreateMailboxSession = 3254817118U,
			// Token: 0x040045F8 RID: 17912
			ErrorNoNextCertificate = 3130711463U,
			// Token: 0x040045F9 RID: 17913
			TokenValidationFailed = 1068084403U,
			// Token: 0x040045FA RID: 17914
			CannotCreateAuditLogSearchDueToSearchQuota = 3005712405U,
			// Token: 0x040045FB RID: 17915
			SavingCalendarLogs = 3470766201U,
			// Token: 0x040045FC RID: 17916
			ReplayServiceDescription = 4096720402U,
			// Token: 0x040045FD RID: 17917
			ADAttributeNotes = 863112602U,
			// Token: 0x040045FE RID: 17918
			SetupProgressLinkOutOfTheBoxMrmTags = 1264026888U,
			// Token: 0x040045FF RID: 17919
			InstallPop3ServiceTask = 2720557853U,
			// Token: 0x04004600 RID: 17920
			ErrorMailboxSearchStoragePermanent = 3329534613U,
			// Token: 0x04004601 RID: 17921
			ErrorCannotSetRecipientContainer = 3137925175U,
			// Token: 0x04004602 RID: 17922
			SmimeConfigAmbiguous = 1237939725U,
			// Token: 0x04004603 RID: 17923
			CasHealthOwaAuthResponseHeaderMissing = 3930981558U,
			// Token: 0x04004604 RID: 17924
			ErrorFailedRmsVersionCheck = 2844363599U,
			// Token: 0x04004605 RID: 17925
			ErrorParametersMandatory = 1685032169U,
			// Token: 0x04004606 RID: 17926
			ServiceHostServiceControlComponentDescription = 3242409340U,
			// Token: 0x04004607 RID: 17927
			ErrorRefreshMetadataOptionNotAllowed = 459738740U,
			// Token: 0x04004608 RID: 17928
			ErrorFailedToGetULEnterprise = 2244149146U,
			// Token: 0x04004609 RID: 17929
			InfoTpdFromRmsOnlineChecked = 4132471740U,
			// Token: 0x0400460A RID: 17930
			AuthenticationMethodNone = 2695169681U,
			// Token: 0x0400460B RID: 17931
			CasHealthOwaLogonFailed = 1065601728U,
			// Token: 0x0400460C RID: 17932
			DelegateRoleTypeServerAdmin = 408932233U,
			// Token: 0x0400460D RID: 17933
			SetupProgressCreateMailboxPlan = 731624525U,
			// Token: 0x0400460E RID: 17934
			OwaMetabaseGetPropertiesFailure = 1147746662U,
			// Token: 0x0400460F RID: 17935
			ErrorDatabaseOffline = 2582405772U,
			// Token: 0x04004610 RID: 17936
			SetupProgressCreatingNewMailboxDatabase = 2413236052U,
			// Token: 0x04004611 RID: 17937
			MailboxPrereqCheck = 3672835011U,
			// Token: 0x04004612 RID: 17938
			OnPremisesConfigurationObjectNotFound = 3458987765U,
			// Token: 0x04004613 RID: 17939
			RoleAuthor = 3892568161U,
			// Token: 0x04004614 RID: 17940
			PrepareDomainDescription = 3571909379U,
			// Token: 0x04004615 RID: 17941
			OwaNameParameterIgnored = 2749659911U,
			// Token: 0x04004616 RID: 17942
			ErrorInvalidPostMasterAddress = 2336909403U,
			// Token: 0x04004617 RID: 17943
			SendConnectorDashdashSmarthostNotUnique = 838914092U,
			// Token: 0x04004618 RID: 17944
			InvalidDlpPolicyParameter = 3886180752U,
			// Token: 0x04004619 RID: 17945
			UninstallBridgeheadRoleDescription = 487743183U,
			// Token: 0x0400461A RID: 17946
			OldVersionMailboxSkipped = 3783722197U,
			// Token: 0x0400461B RID: 17947
			CannotRemoveUMCertificate = 3731283738U,
			// Token: 0x0400461C RID: 17948
			SetupProcessCreateDefaultDataClassificationConfig = 2845114771U,
			// Token: 0x0400461D RID: 17949
			PhoneNumberInvalidLength = 2520624322U,
			// Token: 0x0400461E RID: 17950
			ErrorPathTooLong = 250472943U,
			// Token: 0x0400461F RID: 17951
			CertificateStatusRevocationCheckFailure = 3383748791U,
			// Token: 0x04004620 RID: 17952
			MoveMailboxSourceCleanupTypeNone = 3244203554U,
			// Token: 0x04004621 RID: 17953
			ConfirmationMessageTestFederationTrustCertificate = 2284227198U,
			// Token: 0x04004622 RID: 17954
			ConfirmationMessageRemoveMicrosoftExchangeRecipient = 1401920462U,
			// Token: 0x04004623 RID: 17955
			ScenarioAutoDiscoverSoapProvider = 3914981870U,
			// Token: 0x04004624 RID: 17956
			CouldNotFindEWSStandardAuthBinding = 3642085168U,
			// Token: 0x04004625 RID: 17957
			CasHealthPortnumber = 2303334587U,
			// Token: 0x04004626 RID: 17958
			ErrorElcPolicyToPreE12 = 1680424794U,
			// Token: 0x04004627 RID: 17959
			CasHealthEasScenarioFolderSync = 2738624741U,
			// Token: 0x04004628 RID: 17960
			ErrorMoveOabBetweenTwoTiServers = 3505749236U,
			// Token: 0x04004629 RID: 17961
			DiscoveryManagementSecurityGroupNotFound = 2716009035U,
			// Token: 0x0400462A RID: 17962
			ReleaseAgentBinaryReference = 2849847834U,
			// Token: 0x0400462B RID: 17963
			SetupComponentConfiguringMSARPSService = 4267871022U,
			// Token: 0x0400462C RID: 17964
			DisasterRecoveryBridgeheadRoleDescription = 3089160909U,
			// Token: 0x0400462D RID: 17965
			SetupComponentConfiguringRpcProxy = 1797920U,
			// Token: 0x0400462E RID: 17966
			VerboseFixingDynamicDistributionGroupFilterMetadata = 4141119452U,
			// Token: 0x0400462F RID: 17967
			SetupProgressEnableWMIOutbound = 2694277878U,
			// Token: 0x04004630 RID: 17968
			EmptySearchQuery = 2374542673U,
			// Token: 0x04004631 RID: 17969
			CasHealthOwaReturnedErrorPage = 1029533142U,
			// Token: 0x04004632 RID: 17970
			SpecifiedOUNotUnique = 979072870U,
			// Token: 0x04004633 RID: 17971
			ErrorNoDefaultMailTipTranslationSpecified = 1294778787U,
			// Token: 0x04004634 RID: 17972
			SetupProgressTeamMailboxCountQuota = 4036417902U,
			// Token: 0x04004635 RID: 17973
			ErrorPartnerApplicationRealmNotFoundInAuthServer = 1845875730U,
			// Token: 0x04004636 RID: 17974
			ExchangeTrustedSubsystemDescription = 2447683441U,
			// Token: 0x04004637 RID: 17975
			InstallingLanguages = 364234330U,
			// Token: 0x04004638 RID: 17976
			CannotOnlySpecifyCredential = 988376401U,
			// Token: 0x04004639 RID: 17977
			FrontendTransportPrereqCheck = 212774136U,
			// Token: 0x0400463A RID: 17978
			SettingMoveRequest = 2272693956U,
			// Token: 0x0400463B RID: 17979
			TenantGuidNotIdentified = 1996694683U,
			// Token: 0x0400463C RID: 17980
			InfoTemplate = 784370740U,
			// Token: 0x0400463D RID: 17981
			AllGroupMembers = 4142133581U,
			// Token: 0x0400463E RID: 17982
			JournalNdrMailboxInJournalRuleJournalEmailAddress = 3726632542U,
			// Token: 0x0400463F RID: 17983
			SetupComponentConfiguringGatewaySettings = 667561628U,
			// Token: 0x04004640 RID: 17984
			AuthenticationMethodBasic = 508689909U,
			// Token: 0x04004641 RID: 17985
			SetupComponentConfiguringContentIndexing = 404165634U,
			// Token: 0x04004642 RID: 17986
			OperationNotAllowed = 808776120U,
			// Token: 0x04004643 RID: 17987
			EnableMessageHistory = 3080147272U,
			// Token: 0x04004644 RID: 17988
			NoFoldersInMailbox = 3690733839U,
			// Token: 0x04004645 RID: 17989
			WarningInternalLicensingDisabled = 3533711711U,
			// Token: 0x04004646 RID: 17990
			MapiTransactionDiagnosticTargetDatabaseNotAttached = 3955111949U,
			// Token: 0x04004647 RID: 17991
			BridgeheadExchangeCertificateComponentDescription = 2197368288U,
			// Token: 0x04004648 RID: 17992
			CatchAllRecipientNotAllowedForNonAuthoritativeAcceptedDomains = 1280818475U,
			// Token: 0x04004649 RID: 17993
			UninstallMomConnectorServiceTask = 876326020U,
			// Token: 0x0400464A RID: 17994
			ExsetdataOrganizationName = 3230913595U,
			// Token: 0x0400464B RID: 17995
			ErrorAccountDisabledForUserMailbox = 2755453831U,
			// Token: 0x0400464C RID: 17996
			SetupProgressStoppingUMService = 3362908635U,
			// Token: 0x0400464D RID: 17997
			ErrorFailedToGetULTenant = 3964929519U,
			// Token: 0x0400464E RID: 17998
			CasHealthOwaAuthFailInternal = 4077893373U,
			// Token: 0x0400464F RID: 17999
			InstallMigrationWorkflowServiceTask = 404966124U,
			// Token: 0x04004650 RID: 18000
			ActiveDirectorySearchViaADDriverScenario = 2428243352U,
			// Token: 0x04004651 RID: 18001
			ADTopologyServiceDescription = 835092827U,
			// Token: 0x04004652 RID: 18002
			GetHealthReportProgressFinished = 450527367U,
			// Token: 0x04004653 RID: 18003
			DatabaseChecksFailed = 3481422259U,
			// Token: 0x04004654 RID: 18004
			CopyStatusDisconnectedAndResynchronizing = 3655046083U,
			// Token: 0x04004655 RID: 18005
			ErrorEwsValidatorFailed = 1653552528U,
			// Token: 0x04004656 RID: 18006
			IPListEntryTypeMismatch = 1137715195U,
			// Token: 0x04004657 RID: 18007
			OrganizationWide = 832308282U,
			// Token: 0x04004658 RID: 18008
			ErrorNonExistentDefaultContactsFolder = 2028770649U,
			// Token: 0x04004659 RID: 18009
			CustomCannotBeUsedForPermissionGroups = 314238422U,
			// Token: 0x0400465A RID: 18010
			MapiTransactionAbortedMsg = 2794545475U,
			// Token: 0x0400465B RID: 18011
			ErrorDefaultHostedConnectionFilterPolicyCannotBeDeleted = 1689076287U,
			// Token: 0x0400465C RID: 18012
			CertAuthWithoutSSLError = 2484407530U,
			// Token: 0x0400465D RID: 18013
			NeedEitherAssemblyPathOrName = 3221965754U,
			// Token: 0x0400465E RID: 18014
			CannotFindTestUser = 3874701191U,
			// Token: 0x0400465F RID: 18015
			MalboxFolderRightsEditAllItems = 2484130891U,
			// Token: 0x04004660 RID: 18016
			CertificateStatusPendingRequest = 2502489235U,
			// Token: 0x04004661 RID: 18017
			AddressRewriteExternalAddressExists = 2626534131U,
			// Token: 0x04004662 RID: 18018
			ErrorMoveDatabasePathInvalidOnReplicated = 2951010618U,
			// Token: 0x04004663 RID: 18019
			CasTransactionResultFailure = 2832128882U,
			// Token: 0x04004664 RID: 18020
			RoleOwner = 3816006969U,
			// Token: 0x04004665 RID: 18021
			ConfirmationMessageTestIRMConfiguration = 3581069082U,
			// Token: 0x04004666 RID: 18022
			RejectMessageActionMustBeTheOnlyAction = 3708149033U,
			// Token: 0x04004667 RID: 18023
			VerboseIgnoreDefaultScope = 4050757435U,
			// Token: 0x04004668 RID: 18024
			InstallFreeBusyFolderAlreadyExists = 3988131606U,
			// Token: 0x04004669 RID: 18025
			ADAttributeUserLogonName = 1452889642U,
			// Token: 0x0400466A RID: 18026
			CertificateStatusInvalid = 1662594798U,
			// Token: 0x0400466B RID: 18027
			NewDagCompletedSuccessfully = 2375600040U,
			// Token: 0x0400466C RID: 18028
			Error_CheckClientIntent = 1848155062U,
			// Token: 0x0400466D RID: 18029
			MediumPriorityChecksFailed = 3726385721U,
			// Token: 0x0400466E RID: 18030
			ConfirmationMessageSetHybridMailflow = 279800153U,
			// Token: 0x0400466F RID: 18031
			BPATestSystemHealthTaskName = 3721169246U,
			// Token: 0x04004670 RID: 18032
			ErrorMissingNetIDWhenBypassWLID = 1463063580U,
			// Token: 0x04004671 RID: 18033
			InvalidFqdn = 1408328594U,
			// Token: 0x04004672 RID: 18034
			ErrorExecutingUserIsNull = 4074802050U,
			// Token: 0x04004673 RID: 18035
			MapiTransactionErrorMsgNoMailboxMdbDismounted = 3947810800U,
			// Token: 0x04004674 RID: 18036
			NotEnoughPrioritiesAvailable = 132709086U,
			// Token: 0x04004675 RID: 18037
			InformationSkippedAsForAutodiscover = 3816781481U,
			// Token: 0x04004676 RID: 18038
			ErrorTargetServicePlanHasNoMatchingMailboxPlan = 2123565360U,
			// Token: 0x04004677 RID: 18039
			InvalidSubscriptionFile = 1188336490U,
			// Token: 0x04004678 RID: 18040
			TenantAlreadyHasFinalizedMigration = 3400182072U,
			// Token: 0x04004679 RID: 18041
			ErrorCouldNotFindMigrationEndpoint = 2405332414U,
			// Token: 0x0400467A RID: 18042
			WillContinueProcessing = 2204523380U,
			// Token: 0x0400467B RID: 18043
			ScenarioExchangeWebServices = 4031371403U,
			// Token: 0x0400467C RID: 18044
			FDS_GM_PerfCountersComponentDescription = 1123438282U,
			// Token: 0x0400467D RID: 18045
			AssistantsServiceDescription = 2589611372U,
			// Token: 0x0400467E RID: 18046
			SetupProgressMaxReceiveTransportQuota = 3302502416U,
			// Token: 0x0400467F RID: 18047
			FailedToRetrieveAuditLogSearch = 714510073U,
			// Token: 0x04004680 RID: 18048
			ADAttributeCountry = 3600528589U,
			// Token: 0x04004681 RID: 18049
			MapiTransactionResultFailure = 3698488318U,
			// Token: 0x04004682 RID: 18050
			RemoveResubmiRequestMessage = 4171039939U,
			// Token: 0x04004683 RID: 18051
			CasHealthOwaPingScenarioDescription = 981821282U,
			// Token: 0x04004684 RID: 18052
			DlpPolicyContainsEmptyKeywords = 4188600390U,
			// Token: 0x04004685 RID: 18053
			RoleDoesNotSupportExchangeCertificateTasksException = 1653862842U,
			// Token: 0x04004686 RID: 18054
			RunningAspNetRegIis = 3457665177U,
			// Token: 0x04004687 RID: 18055
			MultipleOnPremisesOrganizationsFoundException = 172756948U,
			// Token: 0x04004688 RID: 18056
			SetupProgressStoppingTransportLogSearchService = 4077307460U,
			// Token: 0x04004689 RID: 18057
			CopyStatusFailedAndSuspended = 1765158362U,
			// Token: 0x0400468A RID: 18058
			ErrorStorageMailboxDatabaseVersionUnsupported = 313226775U,
			// Token: 0x0400468B RID: 18059
			ProvisioningRequestAlreadyStarted = 1282955967U,
			// Token: 0x0400468C RID: 18060
			CasHealthOwaDoLanguageSelection = 827778289U,
			// Token: 0x0400468D RID: 18061
			SetupProgressStartingW3SVCService = 1272200597U,
			// Token: 0x0400468E RID: 18062
			NotFederated = 2888966445U,
			// Token: 0x0400468F RID: 18063
			ImportDlpPolicyFileDataIsNull = 1645878456U,
			// Token: 0x04004690 RID: 18064
			SetupProgressCreateDefaultOWAMailboxPolicy = 300076344U,
			// Token: 0x04004691 RID: 18065
			StartPostFileCopyDescription = 1790949389U,
			// Token: 0x04004692 RID: 18066
			ErrorNoAccountNamespace = 148851043U,
			// Token: 0x04004693 RID: 18067
			Imap4BeServiceDisplayName = 594514822U,
			// Token: 0x04004694 RID: 18068
			MessageTypeOof = 2129610537U,
			// Token: 0x04004695 RID: 18069
			MtrtAddManagerAsRecipient = 3889527190U,
			// Token: 0x04004696 RID: 18070
			ErrorInvalidBase64String = 3952057831U,
			// Token: 0x04004697 RID: 18071
			ErrorSuspendCommentWithoutSuspend = 1865584991U,
			// Token: 0x04004698 RID: 18072
			CasHealthLatency = 3400784257U,
			// Token: 0x04004699 RID: 18073
			BridgeheadRoleDisplayName = 1134594294U,
			// Token: 0x0400469A RID: 18074
			ErrorEnterpriseOrgOutOfDate = 2683567092U,
			// Token: 0x0400469B RID: 18075
			ErrorElcUserConfigurationServiceCall = 1646161068U,
			// Token: 0x0400469C RID: 18076
			ErrorAssociatedUserMailboxExistInDC = 3916272972U,
			// Token: 0x0400469D RID: 18077
			ErrorPropertyParameter = 4118882660U,
			// Token: 0x0400469E RID: 18078
			ErrorMsnIsNotSupportedInEnterprise = 2865766755U,
			// Token: 0x0400469F RID: 18079
			LongAddressesEnabledOnEdge = 1813104937U,
			// Token: 0x040046A0 RID: 18080
			ComplianceAuditServiceDescription = 950609671U,
			// Token: 0x040046A1 RID: 18081
			InfoRmsOnlineAuthenticationCertificateChecked = 435421099U,
			// Token: 0x040046A2 RID: 18082
			ErrorSoftDeletedParmatersConflict = 3054507024U,
			// Token: 0x040046A3 RID: 18083
			DefaultGlobalAddressList = 3476845520U,
			// Token: 0x040046A4 RID: 18084
			NoCASE15SP1ServersFoundException = 3267662260U,
			// Token: 0x040046A5 RID: 18085
			UnableToRetrieveArchivePolicyTag = 813640644U,
			// Token: 0x040046A6 RID: 18086
			ErrorParametersCannotHaveEmbeddedDot = 2415151346U,
			// Token: 0x040046A7 RID: 18087
			SetupProgressCreateAcceptedDomainsContainer = 812478835U,
			// Token: 0x040046A8 RID: 18088
			ContinueMountWhenDBFilesNotExist = 3880512861U,
			// Token: 0x040046A9 RID: 18089
			ExceptionRetryIntervalInvalid = 2781055473U,
			// Token: 0x040046AA RID: 18090
			InvalidRuleName = 2267758972U,
			// Token: 0x040046AB RID: 18091
			DetermineSourceMailbox = 261889570U,
			// Token: 0x040046AC RID: 18092
			ProgressCopyingEdbFile = 2442798609U,
			// Token: 0x040046AD RID: 18093
			MoveStatusSkipped = 3694944833U,
			// Token: 0x040046AE RID: 18094
			SetupProgressStartingHygieneUpdateService = 76607383U,
			// Token: 0x040046AF RID: 18095
			IsIntegQueueFull = 2022973157U,
			// Token: 0x040046B0 RID: 18096
			ErrorInvalidEndpointParameterReasonUsedForConnectionTest = 1528176827U,
			// Token: 0x040046B1 RID: 18097
			StartPostSetupDescription = 4133650633U,
			// Token: 0x040046B2 RID: 18098
			StatusSpecifiedForProvisionedServer = 447887202U,
			// Token: 0x040046B3 RID: 18099
			DatabasesReplayKeepingUpCheckDesc = 2444726760U,
			// Token: 0x040046B4 RID: 18100
			RemoveRuleSyncAcrossDifferentVersionsNeeded = 1050054139U,
			// Token: 0x040046B5 RID: 18101
			LocalFederatedDomainsAreMissingFromTheRemoteOrganizationRelationsipDomains = 2062802331U,
			// Token: 0x040046B6 RID: 18102
			DetailsTemplateMailboxAgent = 3186800467U,
			// Token: 0x040046B7 RID: 18103
			CalendarNotificationConfirmation = 2218121730U,
			// Token: 0x040046B8 RID: 18104
			InstallComplianceServiceTask = 2638175612U,
			// Token: 0x040046B9 RID: 18105
			ErrorTpdCheckingFailed = 3829198285U,
			// Token: 0x040046BA RID: 18106
			OpenDomainRoutingDisabled = 3919059708U,
			// Token: 0x040046BB RID: 18107
			BPALoadingLocalConfiguration = 3326356690U,
			// Token: 0x040046BC RID: 18108
			UninstallFfoPrimingServiceTask = 4116327307U,
			// Token: 0x040046BD RID: 18109
			SetupProgressStartingNotificationsBrokerService = 1006245152U,
			// Token: 0x040046BE RID: 18110
			ErrorCannotHavePrimaryInDatacenterAndArchiveOnPremise = 1449863534U,
			// Token: 0x040046BF RID: 18111
			MtrtRequireEncryption = 2829778253U,
			// Token: 0x040046C0 RID: 18112
			ErrorFailedRmsVersionCheckInitialization = 4083067559U,
			// Token: 0x040046C1 RID: 18113
			HybridMailflowInboundConnectorComment = 1825525944U,
			// Token: 0x040046C2 RID: 18114
			CopyStatusMounted = 623586765U,
			// Token: 0x040046C3 RID: 18115
			CouldNotFindEWSService = 121298733U,
			// Token: 0x040046C4 RID: 18116
			ErrorNotEnoughInformationToFindUniqueRequest = 1384159399U,
			// Token: 0x040046C5 RID: 18117
			DomainControllerNotSpecifiedException = 1907503788U,
			// Token: 0x040046C6 RID: 18118
			ErrorWebSiteNullOrEmpty = 384890306U,
			// Token: 0x040046C7 RID: 18119
			ProtectedServiceHostServiceControlComponentDescription = 2746111946U,
			// Token: 0x040046C8 RID: 18120
			RemoveOrganizationFailWithSharedConfigurationBacklinks = 2256278254U,
			// Token: 0x040046C9 RID: 18121
			InternalTransportCertificateCorruptedInADOnHub = 87194845U,
			// Token: 0x040046CA RID: 18122
			ErrorNoDefaultPFDatabaseForTenant = 508070510U,
			// Token: 0x040046CB RID: 18123
			ExceptionPerfCounterInvalidDefinitionFile = 312913212U,
			// Token: 0x040046CC RID: 18124
			PhoneNumberReachQuota = 4277689054U,
			// Token: 0x040046CD RID: 18125
			SetupProgressInitializeExchangeConfigurationContainer = 248449646U,
			// Token: 0x040046CE RID: 18126
			ErrorUserNull = 899968010U,
			// Token: 0x040046CF RID: 18127
			OrgIsntOptinError = 2681771342U,
			// Token: 0x040046D0 RID: 18128
			SetupProgressMailPublicFolderCountQuota = 1580103065U,
			// Token: 0x040046D1 RID: 18129
			CannotRunDeliveryAgentConnectorTaskOnEdge = 177812025U,
			// Token: 0x040046D2 RID: 18130
			CouldNotGetExecutingUser = 1970632681U,
			// Token: 0x040046D3 RID: 18131
			NoUpdatesDirectorySpecified = 1941112294U,
			// Token: 0x040046D4 RID: 18132
			SetupProgressDisableWMIOutbound = 193193577U,
			// Token: 0x040046D5 RID: 18133
			ValidatingUserObject = 199751719U,
			// Token: 0x040046D6 RID: 18134
			SetupProgressAddressListsEnabled = 622930654U,
			// Token: 0x040046D7 RID: 18135
			SetupComponentAllADRolesPrecompileManagementBinaries = 4063229747U,
			// Token: 0x040046D8 RID: 18136
			NotifySenderAndRejectMessageShouldBeSingletonAction = 2115663408U,
			// Token: 0x040046D9 RID: 18137
			ServiceNameAs = 4104369074U,
			// Token: 0x040046DA RID: 18138
			MultipleWebServicesExternalUrlsFound = 2367546289U,
			// Token: 0x040046DB RID: 18139
			ErrorCannotRemoveMigrationUserFromPublicFolderBatch = 895980775U,
			// Token: 0x040046DC RID: 18140
			RemoteContinuousReplication = 1397279617U,
			// Token: 0x040046DD RID: 18141
			CasHealthOwaAuthMethodSeparator = 6301028U,
			// Token: 0x040046DE RID: 18142
			DagNetworkSubnetAssignmentIncomplete = 946664064U,
			// Token: 0x040046DF RID: 18143
			GetPop3ConfigurationTask = 3404236667U,
			// Token: 0x040046E0 RID: 18144
			UninstallTransportSyncManagerServiceTask = 2578482429U,
			// Token: 0x040046E1 RID: 18145
			RegSvr32NotFound = 4127908197U,
			// Token: 0x040046E2 RID: 18146
			RPSSvcNotRunning = 2369302933U,
			// Token: 0x040046E3 RID: 18147
			ConfirmationMessageUnconfigureWSManIISHosting = 790081152U,
			// Token: 0x040046E4 RID: 18148
			ConfirmationTestAssistantHealth = 3556665161U,
			// Token: 0x040046E5 RID: 18149
			ErrorPerfcountersInvalid = 1382192131U,
			// Token: 0x040046E6 RID: 18150
			ReplicationCheckWarningsLabel = 2720600917U,
			// Token: 0x040046E7 RID: 18151
			ElcUserConfigurationServiceBindingNotAvailable = 438361403U,
			// Token: 0x040046E8 RID: 18152
			UninstallFrontendTransportRoleDescription = 1249227945U,
			// Token: 0x040046E9 RID: 18153
			SetupProgressStartingTransportSyncManagerService = 2409098904U,
			// Token: 0x040046EA RID: 18154
			ErrorAlsEncounteredUnexpectedException = 404296754U,
			// Token: 0x040046EB RID: 18155
			InvalidEventType = 2524982981U,
			// Token: 0x040046EC RID: 18156
			ErrorOffboardingDisabled = 2832690601U,
			// Token: 0x040046ED RID: 18157
			SetupProgressOwaSmsEnabled = 2462705091U,
			// Token: 0x040046EE RID: 18158
			E4eLicensingIsDisabledEnableRule = 621468991U,
			// Token: 0x040046EF RID: 18159
			IsNTDSRunningScenario = 3142946342U,
			// Token: 0x040046F0 RID: 18160
			SetupProgressGenericPerfCounters = 2902028717U,
			// Token: 0x040046F1 RID: 18161
			MomConnectorServiceDescription = 1301020495U,
			// Token: 0x040046F2 RID: 18162
			ErrorCannotFindMoveRequestWithStatusNone = 2892001738U,
			// Token: 0x040046F3 RID: 18163
			SendConnectorDashdashSmarthostNotOffEdge = 1564322603U,
			// Token: 0x040046F4 RID: 18164
			ProgressCompleting = 1954290077U,
			// Token: 0x040046F5 RID: 18165
			SetupProgressInstallTransportLogSearchService = 3723147943U,
			// Token: 0x040046F6 RID: 18166
			GetProtocolLogNeedsRecipients = 951795433U,
			// Token: 0x040046F7 RID: 18167
			ClusterNetworkCheckDesc = 813491343U,
			// Token: 0x040046F8 RID: 18168
			SetupComponentConfiguringRpcClientAccessProtocol = 4099222219U,
			// Token: 0x040046F9 RID: 18169
			ErrorWSManRegistryCorrupted = 3862950059U,
			// Token: 0x040046FA RID: 18170
			InvalidTestAccountRequest = 696846567U,
			// Token: 0x040046FB RID: 18171
			ErrorCannotFindTargetDeliveryDomain = 1302065573U,
			// Token: 0x040046FC RID: 18172
			MailboxRoleDisplayName = 3319509477U,
			// Token: 0x040046FD RID: 18173
			SetupComponentConfiguringInfoWorker = 2823472669U,
			// Token: 0x040046FE RID: 18174
			ClientAccessIisWebServiceExtensionsDescription = 1290199067U,
			// Token: 0x040046FF RID: 18175
			ErrorManageDelegation2ProofDomainOwnership = 2429358254U,
			// Token: 0x04004700 RID: 18176
			CasHealthOwaFbaAuthTypeNotExpected = 404014232U,
			// Token: 0x04004701 RID: 18177
			ImportCertificateDataInvalid = 3559101633U,
			// Token: 0x04004702 RID: 18178
			CannotSpecifyBothAllDomainsAndDomain = 1752382112U,
			// Token: 0x04004703 RID: 18179
			RegisterComInteropTlbTask = 740001268U,
			// Token: 0x04004704 RID: 18180
			ErrorThrottlingPolicyMustBeSpecified = 1440534643U,
			// Token: 0x04004705 RID: 18181
			NotifySenderActionRequiresMcdcPredicate = 2147095286U,
			// Token: 0x04004706 RID: 18182
			ErrorCannotDisableFederation = 2997921680U,
			// Token: 0x04004707 RID: 18183
			ConfirmationMessageAuthNewInProgress = 3659149162U,
			// Token: 0x04004708 RID: 18184
			SyncNowFailedToRunException = 1638365639U,
			// Token: 0x04004709 RID: 18185
			CannotRemoveApprovalApplicationWithMailboxes = 141232568U,
			// Token: 0x0400470A RID: 18186
			RuleNameAlreadyExists = 3117240671U,
			// Token: 0x0400470B RID: 18187
			DefaultAllModernGroups = 2476236185U,
			// Token: 0x0400470C RID: 18188
			RejectText = 1178729042U,
			// Token: 0x0400470D RID: 18189
			ErrorInvalidWMAFormat = 2481283129U,
			// Token: 0x0400470E RID: 18190
			PartialVerisonMatch = 2344272450U,
			// Token: 0x0400470F RID: 18191
			CasHealthOwaUriHeader = 2359011225U,
			// Token: 0x04004710 RID: 18192
			SetupProgressStartingMailboxAssistantService = 2765443951U,
			// Token: 0x04004711 RID: 18193
			VerboseCreatePSFanInProvider = 268688472U,
			// Token: 0x04004712 RID: 18194
			JournalingParameterErrorFullReportWithoutGcc = 607657692U,
			// Token: 0x04004713 RID: 18195
			MigrationSettingCompeteAfterWithCurrentCompleteAfterInLessThanOneHour = 1469181716U,
			// Token: 0x04004714 RID: 18196
			ErrorCannotGenerateSiteMailboxAlias = 1734288143U,
			// Token: 0x04004715 RID: 18197
			ResumeSgcTimeout = 2837997609U,
			// Token: 0x04004716 RID: 18198
			ProgressActivityNewFederationTrust = 3892071893U,
			// Token: 0x04004717 RID: 18199
			ErrorOnboardingDisabled = 268582115U,
			// Token: 0x04004718 RID: 18200
			CompletedAceActivity = 1990022743U,
			// Token: 0x04004719 RID: 18201
			ErrorSpecifyOrganizatonAndContainerBoth = 2301337168U,
			// Token: 0x0400471A RID: 18202
			UnableToRetrieveManagedFolder = 2018204159U,
			// Token: 0x0400471B RID: 18203
			AddressRewriteWildcardWarning = 1492863700U,
			// Token: 0x0400471C RID: 18204
			ForeignConnectorNullOrEmptyDropDirectory = 2288135166U,
			// Token: 0x0400471D RID: 18205
			SetupComponentConfiguringAddressBookService = 1967624551U,
			// Token: 0x0400471E RID: 18206
			ErrorTemplatesMayNotContainImmutableIds = 1042788951U,
			// Token: 0x0400471F RID: 18207
			AuthenticationMethodWindowsIntegrated = 1724897479U,
			// Token: 0x04004720 RID: 18208
			StartOrganizationUpgradeDescription = 3472707977U,
			// Token: 0x04004721 RID: 18209
			SetupProgressSyncAccountsMirroredAccountsEnabled = 1422915642U,
			// Token: 0x04004722 RID: 18210
			ErrorManagedByCannotBeEmpty = 1980863497U,
			// Token: 0x04004723 RID: 18211
			VerifyStoreServiceExists = 3248052869U,
			// Token: 0x04004724 RID: 18212
			DefaultUser = 1379659384U,
			// Token: 0x04004725 RID: 18213
			ErrorDumpsterTagWrongRetentionAction = 1466854827U,
			// Token: 0x04004726 RID: 18214
			ErrorAuthCannotDeleteCurrent = 325513897U,
			// Token: 0x04004727 RID: 18215
			ConfirmationMessageNewSearchDocumentFormat = 2357970530U,
			// Token: 0x04004728 RID: 18216
			ServerLocatorServiceCheckDesc = 671509911U,
			// Token: 0x04004729 RID: 18217
			AuthenticationMethodUnknown = 4027839955U,
			// Token: 0x0400472A RID: 18218
			FileDistributionServiceComponentDescription = 3080984634U,
			// Token: 0x0400472B RID: 18219
			MtrtMessageDefer = 3004107700U,
			// Token: 0x0400472C RID: 18220
			OrganizationNotSpecified = 342374076U,
			// Token: 0x0400472D RID: 18221
			ErrorDlpPolicyNameOrTemplateParameterMustBeSpecified = 55296709U,
			// Token: 0x0400472E RID: 18222
			NoValidIssuerCertificate = 2813852905U,
			// Token: 0x0400472F RID: 18223
			UninstallMigrationWorkflowServiceTask = 2180704617U,
			// Token: 0x04004730 RID: 18224
			MustSpecifyEitherAccessOrExtendedRightsException = 2707578357U,
			// Token: 0x04004731 RID: 18225
			RpcClientAccessServiceDescription = 4069016795U,
			// Token: 0x04004732 RID: 18226
			ConfirmationMessageNewMapiVirtualDirectory = 639127653U,
			// Token: 0x04004733 RID: 18227
			VerboseResolvingRecipientOrganizationalUnitScope = 726111090U,
			// Token: 0x04004734 RID: 18228
			AutodiscoverySuccess = 2674130276U,
			// Token: 0x04004735 RID: 18229
			CentralAdminServiceDescription = 1906118891U,
			// Token: 0x04004736 RID: 18230
			ErrorCannotSetDowngradedExchangeServerAuthOnEdge = 3351161488U,
			// Token: 0x04004737 RID: 18231
			MigrationCsvStreamParameterInvalid = 722352284U,
			// Token: 0x04004738 RID: 18232
			InstallMailSubmissionServiceTask = 4138250312U,
			// Token: 0x04004739 RID: 18233
			SetupComponentMalwareFiltering = 3726353961U,
			// Token: 0x0400473A RID: 18234
			ProtolcolWarnTrustAllCertificates = 3198793815U,
			// Token: 0x0400473B RID: 18235
			ErrorLocalNotForTenantAdmins = 1508593011U,
			// Token: 0x0400473C RID: 18236
			AttemptToMakeUserLogon = 967574322U,
			// Token: 0x0400473D RID: 18237
			IisTasksWebSiteValidationProperty = 944738592U,
			// Token: 0x0400473E RID: 18238
			ErrorIncrementalSyncIntervalCannotBeSetOnNonIncrementalRequests = 1604061446U,
			// Token: 0x0400473F RID: 18239
			ErrorCannotRestoreFromPrivateToPublicMailbox = 2930685350U,
			// Token: 0x04004740 RID: 18240
			DelegateRoleTypeRecipientAdmin = 3366659407U,
			// Token: 0x04004741 RID: 18241
			SharedCacheServiceDisplayName = 2793254613U,
			// Token: 0x04004742 RID: 18242
			MtrtNoDetailInformation = 231085887U,
			// Token: 0x04004743 RID: 18243
			ErrorLoadCertificateOnEdge = 2046913201U,
			// Token: 0x04004744 RID: 18244
			AllPolicyAssignees = 1625001871U,
			// Token: 0x04004745 RID: 18245
			ConfirmationTurnOffJournalArchiving = 307488803U,
			// Token: 0x04004746 RID: 18246
			ConfirmationMessageSetSenderIdConfig = 2953142896U,
			// Token: 0x04004747 RID: 18247
			SetupProgressPrecompilingBinaries = 3904912496U,
			// Token: 0x04004748 RID: 18248
			ProgressCompletingSearch = 2177919315U,
			// Token: 0x04004749 RID: 18249
			CallerIsInMyDefaultContactsFolder = 977931768U,
			// Token: 0x0400474A RID: 18250
			SetupProgressMessageTrackingPermissions = 4078434446U,
			// Token: 0x0400474B RID: 18251
			SetupProgressStartingUMService = 449814027U,
			// Token: 0x0400474C RID: 18252
			RequestIsMissing = 38404619U,
			// Token: 0x0400474D RID: 18253
			ConfirmationMessageSetADServerSettings = 394328647U,
			// Token: 0x0400474E RID: 18254
			DeviceOk = 278718718U,
			// Token: 0x0400474F RID: 18255
			MountStatusMounted = 2963429141U,
			// Token: 0x04004750 RID: 18256
			LeaseExpired = 199062377U,
			// Token: 0x04004751 RID: 18257
			ThirdPartyReplCheckDesc = 1585616693U,
			// Token: 0x04004752 RID: 18258
			CMCConnectorRequiresTenantScopedInboundConnector = 2741314546U,
			// Token: 0x04004753 RID: 18259
			SetupProgressStartingWMIService = 62533178U,
			// Token: 0x04004754 RID: 18260
			VerboseCheckRequiredRegistryKeys = 3513112714U,
			// Token: 0x04004755 RID: 18261
			VerboseStartResolvingUsers = 63979149U,
			// Token: 0x04004756 RID: 18262
			InfoCreatePL = 1913407550U,
			// Token: 0x04004757 RID: 18263
			ConfirmationMessageDisableSendConnector = 89007683U,
			// Token: 0x04004758 RID: 18264
			UsageTypePartner = 3599602255U,
			// Token: 0x04004759 RID: 18265
			ErrorInvalidMailboxAuditLogSearchCriteria = 3121249817U,
			// Token: 0x0400475A RID: 18266
			ErrorInvalidGroupTypeForPublicToGroups = 3258178327U,
			// Token: 0x0400475B RID: 18267
			SetupProgressCreateArbitrationMailbox = 3971688957U,
			// Token: 0x0400475C RID: 18268
			ArchiveDisabledError = 2604883106U,
			// Token: 0x0400475D RID: 18269
			SSTFileSizeExceedLimit = 567195498U,
			// Token: 0x0400475E RID: 18270
			WarningOABWithoutDistribution = 2830472790U,
			// Token: 0x0400475F RID: 18271
			MtrtReportSeverityLevelMed = 2608506884U,
			// Token: 0x04004760 RID: 18272
			InvalidDlpRoleAccess = 1373356377U,
			// Token: 0x04004761 RID: 18273
			VerboseRestartWSManService = 2772713742U,
			// Token: 0x04004762 RID: 18274
			ConfirmationMessageConfigureWSManIISHosting = 1369963769U,
			// Token: 0x04004763 RID: 18275
			ErrorAggregatedMailboxGuidNotSpecified = 1235407621U,
			// Token: 0x04004764 RID: 18276
			MobileDeviceLogSuccess = 685862647U,
			// Token: 0x04004765 RID: 18277
			TestOutboundOauthLog = 2947423393U,
			// Token: 0x04004766 RID: 18278
			UninstallMonitoringCorrelationServiceTask = 3586374252U,
			// Token: 0x04004767 RID: 18279
			UseDagDefaultOnOffOn = 1297632601U,
			// Token: 0x04004768 RID: 18280
			SetupProgressFastSearchSeedingPortRule = 3226135540U,
			// Token: 0x04004769 RID: 18281
			RemoveRemoteAccountPolicyFailedWithExistingMailboxes = 2825905091U,
			// Token: 0x0400476A RID: 18282
			BPAUpdateCheckCompleted = 3204861685U,
			// Token: 0x0400476B RID: 18283
			CasHealthDirectPushAndSyncAggregateScenarioDescription = 2573144003U,
			// Token: 0x0400476C RID: 18284
			MalboxFolderRightsFolderOwner = 244505583U,
			// Token: 0x0400476D RID: 18285
			ErrorParentIISPathNull = 3015360437U,
			// Token: 0x0400476E RID: 18286
			ErrorFailedToGetRacAndClcEnterprise = 597851718U,
			// Token: 0x0400476F RID: 18287
			MessageTracingClientServiceDisplayName = 1000659622U,
			// Token: 0x04004770 RID: 18288
			ErrorTenantNeedsUpgradeFirst = 95305143U,
			// Token: 0x04004771 RID: 18289
			DelegationTokenValidationSuccess = 830584157U,
			// Token: 0x04004772 RID: 18290
			WarningNoAuthServerWithDefaultAuthorizationEndpoint = 2245832939U,
			// Token: 0x04004773 RID: 18291
			ErrorMapiVirtualDirectoryMustBeLocalServerToReset = 687010727U,
			// Token: 0x04004774 RID: 18292
			ExternalAddress = 1739145871U,
			// Token: 0x04004775 RID: 18293
			UninstallFBAServiceTask = 750158307U,
			// Token: 0x04004776 RID: 18294
			TenantOrganizationMissing = 3689107639U,
			// Token: 0x04004777 RID: 18295
			TestTeamMailboxOutboundOauthLog = 1611112302U,
			// Token: 0x04004778 RID: 18296
			SetupProgressStoppingEdgeSyncService = 2512251895U,
			// Token: 0x04004779 RID: 18297
			MailboxLogonScenario = 3072624127U,
			// Token: 0x0400477A RID: 18298
			ConversationsFailedToCreateAllItemsFolder = 820016583U,
			// Token: 0x0400477B RID: 18299
			BootstrapAccountExpireTooSoon = 1252200145U,
			// Token: 0x0400477C RID: 18300
			NewDagConfigurationCompletedSuccessfully = 3194476650U,
			// Token: 0x0400477D RID: 18301
			RetryLaterException = 2432721285U,
			// Token: 0x0400477E RID: 18302
			ConfigureSchema = 3193785025U,
			// Token: 0x0400477F RID: 18303
			UninstallMessageTracingClientServiceTask = 1994155502U,
			// Token: 0x04004780 RID: 18304
			SetupProgressStoppingWMIProviderService = 957004625U,
			// Token: 0x04004781 RID: 18305
			FinishedCopyingOwaLPFiles = 2431239667U,
			// Token: 0x04004782 RID: 18306
			TenantNotificationTestFirstOrgNotSupported = 1553663172U,
			// Token: 0x04004783 RID: 18307
			ErrorTeamMailboxCannotIdentifyTheUser = 2434431800U,
			// Token: 0x04004784 RID: 18308
			SetupProgressCreateModeratedRecipientsRetentionPolicyTag = 897711225U,
			// Token: 0x04004785 RID: 18309
			GetHealthReportProgressActivity = 46998244U,
			// Token: 0x04004786 RID: 18310
			ConfirmationExportAutoDiscoverConfig = 2104106561U,
			// Token: 0x04004787 RID: 18311
			ErrorFailedToGetTemplateEnterprise = 532834943U,
			// Token: 0x04004788 RID: 18312
			DebugStartCreateMemberRequest = 3454341798U,
			// Token: 0x04004789 RID: 18313
			CannotModifyPhotoBecauseMailboxIsInTransit = 3252566213U,
			// Token: 0x0400478A RID: 18314
			InfoOrganizationContextChecked = 1543209017U,
			// Token: 0x0400478B RID: 18315
			CasHealthWarnCredenditialsPassedInTheClear = 3522024953U,
			// Token: 0x0400478C RID: 18316
			ForwardSyncServiceDescription = 2192189891U,
			// Token: 0x0400478D RID: 18317
			CasHealthScenarioAutodiscoverCas = 466554668U,
			// Token: 0x0400478E RID: 18318
			MigrationCompleteAfterAndAutoCompleteExclusive = 2999804354U,
			// Token: 0x0400478F RID: 18319
			ADAttributeCity = 4226527350U,
			// Token: 0x04004790 RID: 18320
			CouldNotFindAutodiscoverStandardAuthBinding = 3639987903U,
			// Token: 0x04004791 RID: 18321
			ErrorNeedOrgIdentity = 3766651652U,
			// Token: 0x04004792 RID: 18322
			UninstallPop3ServiceTask = 2473572750U,
			// Token: 0x04004793 RID: 18323
			DlpPolicyXmlMissingElements = 2723129778U,
			// Token: 0x04004794 RID: 18324
			CasHealthOwaGetAuthStart = 727073936U,
			// Token: 0x04004795 RID: 18325
			CasHealthTestNewUserHostingScriptName = 147207876U,
			// Token: 0x04004796 RID: 18326
			ConfirmationMessageTestActiveDirectoryConnectivity = 386650992U,
			// Token: 0x04004797 RID: 18327
			ErrorMissingInternalUrlInRemoteScenario = 2301252957U,
			// Token: 0x04004798 RID: 18328
			RetrieveFederationMetadataFailed = 2774736401U,
			// Token: 0x04004799 RID: 18329
			DataClassificationConfigFirstOrgNotSupported = 1981219267U,
			// Token: 0x0400479A RID: 18330
			SetSecondaryDomainDescription = 1244562342U,
			// Token: 0x0400479B RID: 18331
			ErrorInvalidLogonType = 3522975510U,
			// Token: 0x0400479C RID: 18332
			MtrtSetSpamConfidenceLevel = 2350887172U,
			// Token: 0x0400479D RID: 18333
			ErrorInvalidOSPServerRole = 136434832U,
			// Token: 0x0400479E RID: 18334
			ErrorModifyTiServerNotAllowed = 1360678989U,
			// Token: 0x0400479F RID: 18335
			MediumPriorityChecksWarning = 1824789360U,
			// Token: 0x040047A0 RID: 18336
			InstallCentralAdminServiceTask = 1169555177U,
			// Token: 0x040047A1 RID: 18337
			WarningRoleAssignmentWithDatabaseScopeApplicableOnlyInSP = 3264150393U,
			// Token: 0x040047A2 RID: 18338
			DDGFilterIsNonoptimized = 1932795447U,
			// Token: 0x040047A3 RID: 18339
			ErrorModifyE12DatabaseNotAllowed = 2358053276U,
			// Token: 0x040047A4 RID: 18340
			ErrorWebObjOrPropertiesNull = 4019033326U,
			// Token: 0x040047A5 RID: 18341
			ProgressStopUpdateOtherAD = 2478684369U,
			// Token: 0x040047A6 RID: 18342
			ContentIndexServiceDisplayName = 3538356643U,
			// Token: 0x040047A7 RID: 18343
			ErrorEmptyFsmoRoleOwnerAttribute = 3742321691U,
			// Token: 0x040047A8 RID: 18344
			ErrorSetGroupMailboxAddMembersOtherUser = 2732113732U,
			// Token: 0x040047A9 RID: 18345
			UninstallOSPRoleDescription = 639504132U,
			// Token: 0x040047AA RID: 18346
			ErrorInvalidDlpPolicyIdentity = 3238542439U,
			// Token: 0x040047AB RID: 18347
			MtrtApplyClassification = 3076603065U,
			// Token: 0x040047AC RID: 18348
			ConfirmationMessageSetRecipientFilterConfig = 2836523615U,
			// Token: 0x040047AD RID: 18349
			ADAttributeCustomAttribute13 = 1808276634U,
			// Token: 0x040047AE RID: 18350
			ErrorSessionNotFound = 1247715429U,
			// Token: 0x040047AF RID: 18351
			CopyStatusDisconnected = 2831161206U,
			// Token: 0x040047B0 RID: 18352
			CannotSpecifyBothDoNotUpdateAndForceUpdate = 864464091U,
			// Token: 0x040047B1 RID: 18353
			ErrorsDomainNotReserved = 394967746U,
			// Token: 0x040047B2 RID: 18354
			PowerShellComponentDescription = 4181924872U,
			// Token: 0x040047B3 RID: 18355
			Error_SentRepresentingRemoved = 979596793U,
			// Token: 0x040047B4 RID: 18356
			JournalNdrMailboxCannotBeNull = 561049406U,
			// Token: 0x040047B5 RID: 18357
			BPADownloadingFailed = 203910820U,
			// Token: 0x040047B6 RID: 18358
			SkippedUpdatingMFLFiles = 613469788U,
			// Token: 0x040047B7 RID: 18359
			ErrorBPAOutFileNotFound = 3141042970U,
			// Token: 0x040047B8 RID: 18360
			ErrorFileTypeIsUnsupported = 1069447725U,
			// Token: 0x040047B9 RID: 18361
			ClusterRpcCheckDesc = 61834792U,
			// Token: 0x040047BA RID: 18362
			SetupProgressOrganizationalQueryBaseDNEnabled = 3869111566U,
			// Token: 0x040047BB RID: 18363
			ErrorNoActiveDCForProvisioningReconciliationCookie = 1958782279U,
			// Token: 0x040047BC RID: 18364
			UMCallAnsweringRuleCallbackLater = 2688759287U,
			// Token: 0x040047BD RID: 18365
			ActiveSyncMetabaseIsapiUninstallFailure = 2179844603U,
			// Token: 0x040047BE RID: 18366
			ADAttributeCompany = 2891753468U,
			// Token: 0x040047BF RID: 18367
			SetupProgressStartingHTTPFilterService = 4210711027U,
			// Token: 0x040047C0 RID: 18368
			AttachmentFilterEntryExists = 1723932345U,
			// Token: 0x040047C1 RID: 18369
			NullServerObject = 1880703947U,
			// Token: 0x040047C2 RID: 18370
			TooManyFederationTrust = 2146343540U,
			// Token: 0x040047C3 RID: 18371
			CalendarSave = 2101033087U,
			// Token: 0x040047C4 RID: 18372
			SetupComponentPreSetupOSP = 1260493142U,
			// Token: 0x040047C5 RID: 18373
			ErrorUseDatabaseRetentionDefaultsCanOnlySetToFalse = 2999415054U,
			// Token: 0x040047C6 RID: 18374
			TransportCommonServiceControlComponentDescription = 3229133469U,
			// Token: 0x040047C7 RID: 18375
			MsiPropertyTooLarge = 1263734293U,
			// Token: 0x040047C8 RID: 18376
			ArchiveConnectivityResultSuccess = 3574175325U,
			// Token: 0x040047C9 RID: 18377
			FailedToRegisterContentIndexingBinaries = 8956383U,
			// Token: 0x040047CA RID: 18378
			ErrorRmsOnlinePrerequisites = 689745244U,
			// Token: 0x040047CB RID: 18379
			ErrorServerNameModified = 1561303831U,
			// Token: 0x040047CC RID: 18380
			MailSubmissionServiceDescription = 2874562042U,
			// Token: 0x040047CD RID: 18381
			VerboseFixingAddressBookFilterMetadata = 416983059U,
			// Token: 0x040047CE RID: 18382
			ErrorMovingToOldExchangeDatabaseUnsupported = 1485895935U,
			// Token: 0x040047CF RID: 18383
			ErrorOnlyDefaultTagAllowCustomizedMessageClass = 3494585454U,
			// Token: 0x040047D0 RID: 18384
			DagFswInternalErrorFswObjectNotInitialized = 2628736153U,
			// Token: 0x040047D1 RID: 18385
			ChunkingEnabledSettingConflict = 3593430692U,
			// Token: 0x040047D2 RID: 18386
			CafeLocalPermissionsComponentDescription = 418834457U,
			// Token: 0x040047D3 RID: 18387
			CasHealthGetFolderScenarioDescription = 3764294661U,
			// Token: 0x040047D4 RID: 18388
			ConfirmationMessageTestTenantMonitoringPerfCounters = 1822933486U,
			// Token: 0x040047D5 RID: 18389
			SetupComponentTransportGlobalConfig = 2588683306U,
			// Token: 0x040047D6 RID: 18390
			UpdateDbcCatalogOnlyAndDatabaseOnlyAreMutuallyExclusiveException = 3225666107U,
			// Token: 0x040047D7 RID: 18391
			GetHealthReportProgressStarting = 3803388745U,
			// Token: 0x040047D8 RID: 18392
			Pop3BeServiceDisplayName = 4242555427U,
			// Token: 0x040047D9 RID: 18393
			SupervisionPolicyAmbiguous = 857660825U,
			// Token: 0x040047DA RID: 18394
			ProgressStartUpdateAD = 2498994945U,
			// Token: 0x040047DB RID: 18395
			DagMgmtServiceDisplayName = 3529576605U,
			// Token: 0x040047DC RID: 18396
			IncludeKeywordStatisticsParameterConflict = 3852766979U,
			// Token: 0x040047DD RID: 18397
			MtrtReportSeverityLevelLow = 188799712U,
			// Token: 0x040047DE RID: 18398
			ClassificationRuleCollectionIllegalScopedSetOperation = 2326537993U,
			// Token: 0x040047DF RID: 18399
			MigrationMustSpecifyEmailOrMailboxDNOrMailboxPermission = 3300531825U,
			// Token: 0x040047E0 RID: 18400
			WarningMessageNewTPRDag = 1839699905U,
			// Token: 0x040047E1 RID: 18401
			JournalingParameterErrorGccWithOrganization = 2438278052U,
			// Token: 0x040047E2 RID: 18402
			SetupProgressDisableMigrationRPCFirewallRule = 3215740127U,
			// Token: 0x040047E3 RID: 18403
			AlsEmailBodyCriteria = 1647196573U,
			// Token: 0x040047E4 RID: 18404
			SetServiceInstanceMapReturnedNull = 1094497050U,
			// Token: 0x040047E5 RID: 18405
			CopyStatusNotConfigured = 1310067130U,
			// Token: 0x040047E6 RID: 18406
			ClassificationRuleCollectionInvalidObject = 1545448632U,
			// Token: 0x040047E7 RID: 18407
			CannotResolveSiteRedirectionTemplateMessage = 873295235U,
			// Token: 0x040047E8 RID: 18408
			SetupComponentConfiguringPublicFolder = 2730604640U,
			// Token: 0x040047E9 RID: 18409
			CasHealthNoTuplesToTest = 271598664U,
			// Token: 0x040047EA RID: 18410
			SetupProgressStoppingProtectedServiceHostService = 3555678614U,
			// Token: 0x040047EB RID: 18411
			SetupComponentDomainGlobalConfig = 903687533U,
			// Token: 0x040047EC RID: 18412
			DagFswUnableToDetermineFrontendTransportServerException = 3079435902U,
			// Token: 0x040047ED RID: 18413
			ErrorCannotCreateRuleWithoutCondition = 1833931616U,
			// Token: 0x040047EE RID: 18414
			CopyStatusServiceDown = 729299916U,
			// Token: 0x040047EF RID: 18415
			ErrorNoNewSiteFolderDatabaseFound = 1569212399U,
			// Token: 0x040047F0 RID: 18416
			CasHealthAllTransactionsSucceeded = 2152281250U,
			// Token: 0x040047F1 RID: 18417
			AdminToolsPrereqCheck = 2530019387U,
			// Token: 0x040047F2 RID: 18418
			SetupPrereqAnalysisInProgress = 3289631126U,
			// Token: 0x040047F3 RID: 18419
			UninstallReplayServiceTask = 1308578877U,
			// Token: 0x040047F4 RID: 18420
			SetupComponentMidFileCopyAdminTools = 1009247039U,
			// Token: 0x040047F5 RID: 18421
			FailedToAccessIrmConfiguration = 2491313992U,
			// Token: 0x040047F6 RID: 18422
			CopyStatusUnknown = 1960737953U,
			// Token: 0x040047F7 RID: 18423
			ErrorBPAOutDirectoryNotFound = 3080450531U,
			// Token: 0x040047F8 RID: 18424
			OmaVDirNotFound = 2727848737U,
			// Token: 0x040047F9 RID: 18425
			SetupProgressInstallingHealthManager = 1050709066U,
			// Token: 0x040047FA RID: 18426
			ErrorMultipleProvisioningPolicyExist = 1294165706U,
			// Token: 0x040047FB RID: 18427
			UninstallAdminToolsRoleDescription = 2926020684U,
			// Token: 0x040047FC RID: 18428
			InvalidCertAuthValue = 2419369378U,
			// Token: 0x040047FD RID: 18429
			ConfirmImportExchangeCertificateDirect = 2778932812U,
			// Token: 0x040047FE RID: 18430
			ErrorUseDatabaseQuotaDefaultsCanOnlySetToFalse = 2445661152U,
			// Token: 0x040047FF RID: 18431
			ErrorAuthInvalidNewEffectiveDate = 2215510534U,
			// Token: 0x04004800 RID: 18432
			UsageTypeInternal = 1082913928U,
			// Token: 0x04004801 RID: 18433
			InvalidParamIdentityHasWildcardException = 2314884551U,
			// Token: 0x04004802 RID: 18434
			WarningFixedMissingGALEntry = 3450980076U,
			// Token: 0x04004803 RID: 18435
			GlobalLocatorServiceSuccess = 3734111801U,
			// Token: 0x04004804 RID: 18436
			ErrorMoveWebDistributionEnabledOabToTiServer = 1063568409U,
			// Token: 0x04004805 RID: 18437
			CasHealthEasFolderSyncScenarioDescription = 545033587U,
			// Token: 0x04004806 RID: 18438
			ConfirmationMessageSetResourceConfig = 209792268U,
			// Token: 0x04004807 RID: 18439
			UMCallAnsweringRuleCheckAutomaticReplies = 2903762331U,
			// Token: 0x04004808 RID: 18440
			ErrorCreatePublicFolderTree = 3689959917U,
			// Token: 0x04004809 RID: 18441
			TopologyServiceResultUndefined = 1410063427U,
			// Token: 0x0400480A RID: 18442
			ErrorSharedConfigurationRequiresServicePlan = 1613686497U,
			// Token: 0x0400480B RID: 18443
			SomeMdbsWereMovedWhileRunningPrefix = 4192463412U,
			// Token: 0x0400480C RID: 18444
			InstallingPOP3Service = 1690028294U,
			// Token: 0x0400480D RID: 18445
			AddressRewriteInternalAddressExists = 347605313U,
			// Token: 0x0400480E RID: 18446
			CannotSetDefaultTPD = 1406451776U,
			// Token: 0x0400480F RID: 18447
			SetupProgressStartingHealthManagerService = 474554696U,
			// Token: 0x04004810 RID: 18448
			SetupProgressRemovingLegacySystemMailboxUsers = 1799234143U,
			// Token: 0x04004811 RID: 18449
			StoppingPOP3Service = 596346937U,
			// Token: 0x04004812 RID: 18450
			InvalidPredicate = 3627783386U,
			// Token: 0x04004813 RID: 18451
			VerboseEnableBasicAuthForWSMan = 1331970650U,
			// Token: 0x04004814 RID: 18452
			ErrorSharePointUrlNotWhitelisted = 556563131U,
			// Token: 0x04004815 RID: 18453
			InfoOverallFail = 958569967U,
			// Token: 0x04004816 RID: 18454
			ErrorArchiveMainCouldNotBeProvisioned = 1413655130U,
			// Token: 0x04004817 RID: 18455
			ConfirmationMessageSetServiceInstanceMap = 3950900668U,
			// Token: 0x04004818 RID: 18456
			UserWithoutFederatedDomain = 2834370617U,
			// Token: 0x04004819 RID: 18457
			CasHealthConfirmTestActiveSyncLocalMachine = 3770893258U,
			// Token: 0x0400481A RID: 18458
			TasksRpcListenerCheckDesc = 3118684996U,
			// Token: 0x0400481B RID: 18459
			ExcludeDuplicateMessagesParameterConflict = 1920559542U,
			// Token: 0x0400481C RID: 18460
			ErrorDomainServicesNotYetImplemented = 3974455509U,
			// Token: 0x0400481D RID: 18461
			RequestNameAvailabilityComplete = 3657087972U,
			// Token: 0x0400481E RID: 18462
			MigrationMustSpecifyEmailOrMailboxDNOrSkipVerification = 613419658U,
			// Token: 0x0400481F RID: 18463
			ErrorInvalidFfoServerRole = 2291096419U,
			// Token: 0x04004820 RID: 18464
			ErrorNotEnoughInformationToFindRequestOfCorrectType = 443059279U,
			// Token: 0x04004821 RID: 18465
			UninstallCafeIisWebServiceExtensions = 3842763887U,
			// Token: 0x04004822 RID: 18466
			ServerNameConflict = 171191748U,
			// Token: 0x04004823 RID: 18467
			NewPolicyTipConfigInvalidUrl = 224474141U,
			// Token: 0x04004824 RID: 18468
			Free = 3323263744U,
			// Token: 0x04004825 RID: 18469
			TpdIsHSMEncrypted = 627463594U,
			// Token: 0x04004826 RID: 18470
			ConfirmationMessageSetPerimeterConfig = 2638906221U,
			// Token: 0x04004827 RID: 18471
			ErrorRetentionActionNowAllowed = 3770469704U,
			// Token: 0x04004828 RID: 18472
			ChangePasswordInvalidCredentials = 866665304U,
			// Token: 0x04004829 RID: 18473
			ConfirmationMessageSetAttachmentfilterlistconfig = 3607766719U,
			// Token: 0x0400482A RID: 18474
			ConfirmationMessageNewAutodiscoverVirtualDirectory = 1259731166U,
			// Token: 0x0400482B RID: 18475
			UnifiedMessagingDatacenterComponentDescription = 1779766570U,
			// Token: 0x0400482C RID: 18476
			ConfirmationGetLitigationHoldInformation = 2044072828U,
			// Token: 0x0400482D RID: 18477
			FfoPrimingServiceDisplayName = 2021664053U,
			// Token: 0x0400482E RID: 18478
			Error_StartDateCheck = 3028030101U,
			// Token: 0x0400482F RID: 18479
			WrongSubscriptionIdentity = 3648433740U,
			// Token: 0x04004830 RID: 18480
			ConfirmationMessageTestExchangeSearch = 2646427859U,
			// Token: 0x04004831 RID: 18481
			RoleEditor = 3727590521U,
			// Token: 0x04004832 RID: 18482
			ErrorUnknownPartition = 124266088U,
			// Token: 0x04004833 RID: 18483
			ConfirmationMessageImportTransportRuleCollection = 2416344434U,
			// Token: 0x04004834 RID: 18484
			RegasmNotFound = 3878533180U,
			// Token: 0x04004835 RID: 18485
			SetServiceInstanceMapResultCodeObjectNotFound = 2744256804U,
			// Token: 0x04004836 RID: 18486
			FederationTrustValid = 996496831U,
			// Token: 0x04004837 RID: 18487
			MoveAlreadyCanceled = 387143530U,
			// Token: 0x04004838 RID: 18488
			ADAttributeCustomAttribute7 = 1377545165U,
			// Token: 0x04004839 RID: 18489
			ErrorOnlyForestWideBlockIsAllowed = 1649886345U,
			// Token: 0x0400483A RID: 18490
			InstallHealthManagerServiceTask = 3240013436U,
			// Token: 0x0400483B RID: 18491
			NoComponentInfoFilesException = 1316394624U,
			// Token: 0x0400483C RID: 18492
			SetupComponentMTAConfiguration = 2945806020U,
			// Token: 0x0400483D RID: 18493
			MountStatusUnknown = 487566617U,
			// Token: 0x0400483E RID: 18494
			ErrorVerificationCodeTooManyFailed = 2896321434U,
			// Token: 0x0400483F RID: 18495
			CustomerFeedbackEnabledError = 1955637848U,
			// Token: 0x04004840 RID: 18496
			MigrationReportNotFound = 549458741U,
			// Token: 0x04004841 RID: 18497
			InitializedWithInvalidObjectId = 859003787U,
			// Token: 0x04004842 RID: 18498
			DatabaseSeedStatusLabelRead = 1576804522U,
			// Token: 0x04004843 RID: 18499
			UnableToDiscoverMailboxPermission = 2856567438U,
			// Token: 0x04004844 RID: 18500
			SuppressXAnonymousTlsEnabledWithoutDowngradedExchangeAuth = 987792256U,
			// Token: 0x04004845 RID: 18501
			MtrtRouteMessageHighRisk = 821173418U,
			// Token: 0x04004846 RID: 18502
			SetupProgressFederationEnabled = 2742380346U,
			// Token: 0x04004847 RID: 18503
			CasHealthEasTestTypeAndAutodiscoverArgumentError = 400464704U,
			// Token: 0x04004848 RID: 18504
			ErrorCreatedAfterLaterThanToday = 1062718164U,
			// Token: 0x04004849 RID: 18505
			FileUploadServiceDescription = 936853662U,
			// Token: 0x0400484A RID: 18506
			CasHealthPerformanceCounterName = 3238755484U,
			// Token: 0x0400484B RID: 18507
			InstallIisWebServiceExtensionNoChanges = 3676775874U,
			// Token: 0x0400484C RID: 18508
			ErrorExceededMaxiumNumberOfDatabasesPerServer = 638769072U,
			// Token: 0x0400484D RID: 18509
			UMMailboxPolicySetFaxServerURIError = 3569022346U,
			// Token: 0x0400484E RID: 18510
			UninstallCafeRoleDescription = 2680788449U,
			// Token: 0x0400484F RID: 18511
			RemoveHuntGroupsLinkedToTenantDialPlans = 3830301655U,
			// Token: 0x04004850 RID: 18512
			ErrorCannotCreateFingerprint = 2663637685U,
			// Token: 0x04004851 RID: 18513
			InvalidEndDate = 173476074U,
			// Token: 0x04004852 RID: 18514
			InstallFreeBusyFolderCannotGetOrganizationContainer = 1372004637U,
			// Token: 0x04004853 RID: 18515
			ErrorSetPublicFolderMailMailEnabledFalse = 2472985937U,
			// Token: 0x04004854 RID: 18516
			SetupProgressConfigurePerimeterConfig = 2357719805U,
			// Token: 0x04004855 RID: 18517
			SetupProgressStartingProtectedServiceHostService = 1766283082U,
			// Token: 0x04004856 RID: 18518
			SetupProgressIssueWarningMaiboxQuota = 546863019U,
			// Token: 0x04004857 RID: 18519
			InvalidPredicateSequence = 2194177847U,
			// Token: 0x04004858 RID: 18520
			InstallAdminToolsRoleDescription = 3514896639U,
			// Token: 0x04004859 RID: 18521
			ProgressCopyingCopySystemFiles = 1058454737U,
			// Token: 0x0400485A RID: 18522
			ErrorBPAOutFileSave = 1474103016U,
			// Token: 0x0400485B RID: 18523
			ErrorInvalidParametersForLocalPublicFolderMailboxMigration = 747339504U,
			// Token: 0x0400485C RID: 18524
			HybridIsEnabledOnPremisesButTenantIsNotUpgraded = 2489458996U,
			// Token: 0x0400485D RID: 18525
			SetupProgressRemovingDefaultTransportAgents = 810697535U,
			// Token: 0x0400485E RID: 18526
			ConfirmationMessageGetSearchDocumentFormat = 3560370784U,
			// Token: 0x0400485F RID: 18527
			SendConnectorUpdatingnteropUsgMembership = 3473154256U,
			// Token: 0x04004860 RID: 18528
			SetupProgressMailboxCountQuota = 829912647U,
			// Token: 0x04004861 RID: 18529
			CreateExchangePrincipalObject = 557019716U,
			// Token: 0x04004862 RID: 18530
			ExceptionInvalidUILevel = 25826658U,
			// Token: 0x04004863 RID: 18531
			UninstallComplianceAuditServiceTask = 2734851240U,
			// Token: 0x04004864 RID: 18532
			ParameterVersionMismatch = 929006655U,
			// Token: 0x04004865 RID: 18533
			ErrorAddGroupToItself = 2252143100U,
			// Token: 0x04004866 RID: 18534
			SetupProgressSetPermissionsOnAdminGroup = 4151447213U,
			// Token: 0x04004867 RID: 18535
			UninstallDagMgmtServiceTask = 3660237507U,
			// Token: 0x04004868 RID: 18536
			SendConnectorMixedSourceServerRoles = 2284256781U,
			// Token: 0x04004869 RID: 18537
			CasHealthNoteSecureAccess = 3315533230U,
			// Token: 0x0400486A RID: 18538
			WarningCleanExistingPipelineTracingContent = 2395829035U,
			// Token: 0x0400486B RID: 18539
			CasHealthOwaGetLogoffSucceeded = 269194386U,
			// Token: 0x0400486C RID: 18540
			InfoRacAndClc = 3146481U,
			// Token: 0x0400486D RID: 18541
			ConfirmationMessageSetAuthConfig = 1293016842U,
			// Token: 0x0400486E RID: 18542
			CatalogDoesntExist = 1761523563U,
			// Token: 0x0400486F RID: 18543
			ErrorAuthServiceNameNotBlank = 709632357U,
			// Token: 0x04004870 RID: 18544
			ConfirmationMessageSetSenderReputationConfig = 4287515218U,
			// Token: 0x04004871 RID: 18545
			SetupComponentPreSetupBridgehead = 2708013991U,
			// Token: 0x04004872 RID: 18546
			ProcessUtilizationManagerServiceDisplayName = 1322669528U,
			// Token: 0x04004873 RID: 18547
			PromptToOverwriteDlpPoliciesOnImport = 2244936124U,
			// Token: 0x04004874 RID: 18548
			NewReceiveConnectorAddingPermissionsDoneMsg = 885922192U,
			// Token: 0x04004875 RID: 18549
			MessageTraceMinimumCriteriaFieldsInErrorDeliveryStatus = 375841809U,
			// Token: 0x04004876 RID: 18550
			UninstallClientAccessRoleDescription = 3194886917U,
			// Token: 0x04004877 RID: 18551
			SetupComponentConfiguringDatacenterMailbox = 642572136U,
			// Token: 0x04004878 RID: 18552
			UserNotInAd = 2260693300U,
			// Token: 0x04004879 RID: 18553
			SendConnectorInvalidSourceIPAddress = 3872838286U,
			// Token: 0x0400487A RID: 18554
			WarningDelegatesExceededOutlookLimit = 3135809837U,
			// Token: 0x0400487B RID: 18555
			PatternContainsLeadingTrailingWhiteSpace = 161838924U,
			// Token: 0x0400487C RID: 18556
			DuplicateInitialDomain = 2131142349U,
			// Token: 0x0400487D RID: 18557
			AddressRewriteUnrecognizedAddress = 4188767105U,
			// Token: 0x0400487E RID: 18558
			AmbiguousDatabaseAndExchangeServerParameters = 3504853238U,
			// Token: 0x0400487F RID: 18559
			ADAttributeOffice = 1927573801U,
			// Token: 0x04004880 RID: 18560
			ExportCertificateAs12KeyNotExportable = 1352231058U,
			// Token: 0x04004881 RID: 18561
			InvalidParamSpecifyIdentityOrDagException = 2585600455U,
			// Token: 0x04004882 RID: 18562
			StartingW3SVC = 2829601938U,
			// Token: 0x04004883 RID: 18563
			MigrationWorkflowServiceDisplayName = 1811867995U,
			// Token: 0x04004884 RID: 18564
			Imap4ServiceDisplayName = 1988030389U,
			// Token: 0x04004885 RID: 18565
			ProvisioningRequestCorrupted = 2882860628U,
			// Token: 0x04004886 RID: 18566
			MapiTransactionErrorMsgNoMailbox = 118205473U,
			// Token: 0x04004887 RID: 18567
			InPlaceHoldNotAllowedForPublicFolders = 1054930625U,
			// Token: 0x04004888 RID: 18568
			SetupProgressGALEnabled = 978499145U,
			// Token: 0x04004889 RID: 18569
			CasHealthTestMultipleMailboxServersFound = 2963803423U,
			// Token: 0x0400488A RID: 18570
			ErrorTooManyGALsCreated = 1952683340U,
			// Token: 0x0400488B RID: 18571
			AddOutlookTenantAcceptedDomains = 3222875934U,
			// Token: 0x0400488C RID: 18572
			CannotRemoveSendConnectorCertificate = 816116421U,
			// Token: 0x0400488D RID: 18573
			CopyStatusSeedingSource = 2160282563U,
			// Token: 0x0400488E RID: 18574
			SetOpenDomainRoutingOnHotmailMigrateDomain = 2266221568U,
			// Token: 0x0400488F RID: 18575
			ErrorSystemFolderPathNotUniqueUnderTheSameNode = 3765206323U,
			// Token: 0x04004890 RID: 18576
			CannotLocateWebRequestorEndpoint = 2288430532U,
			// Token: 0x04004891 RID: 18577
			ErrorSiteNotSpecifiedAndLocalSiteNotFound = 4085511058U,
			// Token: 0x04004892 RID: 18578
			TransportSyncManagerServiceNotUninstalled = 1855335654U,
			// Token: 0x04004893 RID: 18579
			InstallExchangeStreamingOpticsTask = 10041749U,
			// Token: 0x04004894 RID: 18580
			MountStatusDismounted = 853303979U,
			// Token: 0x04004895 RID: 18581
			AutoDiscoverIsNotSetInOrgRelationship = 766671470U,
			// Token: 0x04004896 RID: 18582
			ExchangeSettingsGuidUsage = 3326397734U,
			// Token: 0x04004897 RID: 18583
			ExternalRelayDomainsAreNotAllowedInDatacenterAndFfo = 3910774036U,
			// Token: 0x04004898 RID: 18584
			ComplianceSearchInitializingMessage = 1003253425U,
			// Token: 0x04004899 RID: 18585
			ServerNotHubOrEdge = 4217102173U,
			// Token: 0x0400489A RID: 18586
			ErrorCannotProvideNetIDAndSmtpAddress = 174447511U,
			// Token: 0x0400489B RID: 18587
			SetupProgressRemovingAdamInstance = 4159134257U,
			// Token: 0x0400489C RID: 18588
			ErrorRpcHttpBasicAuthOverHttpDisallowed = 2414509351U,
			// Token: 0x0400489D RID: 18589
			SetupComponentPreSetupAllRoles = 332418900U,
			// Token: 0x0400489E RID: 18590
			ProgressCopying = 974762364U,
			// Token: 0x0400489F RID: 18591
			ErrorSubscriptionFileMustBeXml = 266823016U,
			// Token: 0x040048A0 RID: 18592
			CasHealthEcpScenarioTestWebService = 1065704932U,
			// Token: 0x040048A1 RID: 18593
			ErrorNewTeamMailboxParameter = 3903594392U,
			// Token: 0x040048A2 RID: 18594
			RmsSharedIdentityLocalComputerNotFound = 4196969280U,
			// Token: 0x040048A3 RID: 18595
			CalendarVDirDisabledWarning = 968773825U,
			// Token: 0x040048A4 RID: 18596
			UninstallForwardSyncServiceTask = 2888187612U,
			// Token: 0x040048A5 RID: 18597
			InstallImap4ServiceTask = 1587845536U,
			// Token: 0x040048A6 RID: 18598
			ConfirmationMessageExportJournalRuleCollection = 2633433681U,
			// Token: 0x040048A7 RID: 18599
			MtrtRightsProtectMessage = 949894156U,
			// Token: 0x040048A8 RID: 18600
			CannotSetBothEhfAndFfoRoutingId = 472135594U,
			// Token: 0x040048A9 RID: 18601
			InstallCentralAdminFrontEndRoleDescription = 158415293U,
			// Token: 0x040048AA RID: 18602
			DebugStartSaveDataObject = 1698201925U,
			// Token: 0x040048AB RID: 18603
			RpcClientAccessServiceControlComponentDescription = 1804822115U,
			// Token: 0x040048AC RID: 18604
			FfoReportingMessage = 266949762U,
			// Token: 0x040048AD RID: 18605
			WarningPromotingSecondaryToPrimary = 1889388206U,
			// Token: 0x040048AE RID: 18606
			TestMailflowNoSystemMailbox = 1952429157U,
			// Token: 0x040048AF RID: 18607
			FailedToCreateEwsConnection = 3353268175U,
			// Token: 0x040048B0 RID: 18608
			VerboseWaitingForReplicationInTargetForest = 3512195069U,
			// Token: 0x040048B1 RID: 18609
			UserCreatedFolder = 3811422379U,
			// Token: 0x040048B2 RID: 18610
			GetMsoDiagnosticsNewCookieIsBeingUsed = 3104043273U,
			// Token: 0x040048B3 RID: 18611
			SetupProgressUninstallingContentIndexingMSI = 219970510U,
			// Token: 0x040048B4 RID: 18612
			MigrationCSVRequired = 1091504803U,
			// Token: 0x040048B5 RID: 18613
			ErrorNewRoleInvalidValueUnscopedParameter = 1552530836U,
			// Token: 0x040048B6 RID: 18614
			CallingGetFederationInformation = 3472833669U,
			// Token: 0x040048B7 RID: 18615
			DagTaskFixingUpIpResources = 2207102733U,
			// Token: 0x040048B8 RID: 18616
			ApplicationUrisSkipped = 3732896675U,
			// Token: 0x040048B9 RID: 18617
			ErrorSetPublicFolderMailMailRecipientGuidNull = 3008043280U,
			// Token: 0x040048BA RID: 18618
			MultipleSubscriptionSites = 4151922635U,
			// Token: 0x040048BB RID: 18619
			ErrorOWAVdirAppPoolNotExist = 1906143331U,
			// Token: 0x040048BC RID: 18620
			CasHealthPowerShellShortName = 1329949041U,
			// Token: 0x040048BD RID: 18621
			CopyStatusHealthy = 1484668346U,
			// Token: 0x040048BE RID: 18622
			SubscriptionPasswordEmptyException = 2810838460U,
			// Token: 0x040048BF RID: 18623
			ReportsMPNotInstalled = 185229349U,
			// Token: 0x040048C0 RID: 18624
			RequestOnInaccessibleDatabase = 2417965290U,
			// Token: 0x040048C1 RID: 18625
			SetupProgressStartingServices = 1428403360U,
			// Token: 0x040048C2 RID: 18626
			Busy = 2052801377U,
			// Token: 0x040048C3 RID: 18627
			DatabaseAvailabilityCheckDesc = 2686627867U,
			// Token: 0x040048C4 RID: 18628
			ClassificationRuleCollectionStorageFailure = 2021788683U,
			// Token: 0x040048C5 RID: 18629
			ErrorCannotModifyFolderName = 192027990U,
			// Token: 0x040048C6 RID: 18630
			JournalingReportNdrToSameAsRecipient = 2873363543U,
			// Token: 0x040048C7 RID: 18631
			XRopConnectLogon = 3912787342U,
			// Token: 0x040048C8 RID: 18632
			ErrorRpcHttpMustSpecifyExternalClientsRequireSslParameter = 2864130840U,
			// Token: 0x040048C9 RID: 18633
			SetupProgressProhibitSendReceiveQuota = 1859742910U,
			// Token: 0x040048CA RID: 18634
			ScenarioEwsGetFolder = 4065885103U,
			// Token: 0x040048CB RID: 18635
			CalendarLogIdentityNotSpecified = 4181933535U,
			// Token: 0x040048CC RID: 18636
			ErrorBypassWLIDAndRemovedMailboxTogether = 3046095919U,
			// Token: 0x040048CD RID: 18637
			StartingHealthService = 2204793929U,
			// Token: 0x040048CE RID: 18638
			InstallMomConnectorServiceTask = 672436065U,
			// Token: 0x040048CF RID: 18639
			ExchangeUpgradeBucketInvalidCapacityValue = 416621071U,
			// Token: 0x040048D0 RID: 18640
			MapiTransactionResultSuccess = 3620520123U,
			// Token: 0x040048D1 RID: 18641
			ErrorBPAOutFileLoad = 3866700857U,
			// Token: 0x040048D2 RID: 18642
			AccessStoreSuccess = 2481943192U,
			// Token: 0x040048D3 RID: 18643
			ErrorSuspendAndResumeDontSupportFalse = 3531376863U,
			// Token: 0x040048D4 RID: 18644
			InstallCafeIisWebServiceExtensions = 542947632U,
			// Token: 0x040048D5 RID: 18645
			VerboseStartWinrm = 3691772373U,
			// Token: 0x040048D6 RID: 18646
			CasHealthCalendarScenarioTestViewDesc = 4170882099U,
			// Token: 0x040048D7 RID: 18647
			UpdateAspnetConfigFailed = 2129843125U,
			// Token: 0x040048D8 RID: 18648
			SingleCopyDatabase = 86137682U,
			// Token: 0x040048D9 RID: 18649
			ConfirmationMessageSetIPBlockListConfig = 3067181414U,
			// Token: 0x040048DA RID: 18650
			InvalidRecipientAddress = 2847533272U,
			// Token: 0x040048DB RID: 18651
			AttachmentFilterEntryNotFound = 3423115636U,
			// Token: 0x040048DC RID: 18652
			CasHealthEcpScenarioTestWebServiceDescription = 3101272142U,
			// Token: 0x040048DD RID: 18653
			WarningUnsupportedEdgeTransportConfigProperty = 698348194U,
			// Token: 0x040048DE RID: 18654
			ErrorBPAConfigFileNotFound = 1280404394U,
			// Token: 0x040048DF RID: 18655
			TargetDatabasesNotAllowed = 708658832U,
			// Token: 0x040048E0 RID: 18656
			LocalSiteNotFound = 2593249093U,
			// Token: 0x040048E1 RID: 18657
			SetupComponentAdam = 1226483017U,
			// Token: 0x040048E2 RID: 18658
			ErrorApplyRusFailed = 3571093343U,
			// Token: 0x040048E3 RID: 18659
			MtrtEventReceive = 3812994936U,
			// Token: 0x040048E4 RID: 18660
			GlobalRoutingEntryVerificationSkipped = 1533614992U,
			// Token: 0x040048E5 RID: 18661
			MalboxFolderRightsNone = 3528435264U,
			// Token: 0x040048E6 RID: 18662
			ClassificationRuleCollectionIllegalScopedNewOobOperation = 2664395245U,
			// Token: 0x040048E7 RID: 18663
			ErrorBPAIisInstalledParameterRequired = 2752094876U,
			// Token: 0x040048E8 RID: 18664
			InvalidSelectionTarget = 2103885852U,
			// Token: 0x040048E9 RID: 18665
			VerboseSearchingAssigneeInDomainNC = 3987189255U,
			// Token: 0x040048EA RID: 18666
			SetupComponentConfiguringMailboxPermissions = 548988381U,
			// Token: 0x040048EB RID: 18667
			ErrorAlsSearchResultLargeAttachmentSize = 1786294530U,
			// Token: 0x040048EC RID: 18668
			SetupProgressCreateRBACScopesContainer = 1757744768U,
			// Token: 0x040048ED RID: 18669
			SetupProgressHostedContentFilterPolicy = 3873707400U,
			// Token: 0x040048EE RID: 18670
			DuplicateDataClassificationSpecified = 1419022259U,
			// Token: 0x040048EF RID: 18671
			MailboxTransportDeliveryServiceDisplayName = 4019830635U,
			// Token: 0x040048F0 RID: 18672
			ErrorSetSendAsOnMailboxPermissionNotAllowed = 1212046423U,
			// Token: 0x040048F1 RID: 18673
			ErrorAnotherPublicFolderMigrationTypeAlreadyInProgress = 1718119522U,
			// Token: 0x040048F2 RID: 18674
			ErrorNoDCInLocalSite = 728045039U,
			// Token: 0x040048F3 RID: 18675
			BridgeheadPrereqCheck = 2684014814U,
			// Token: 0x040048F4 RID: 18676
			PhoneNumberAlreadyRegistered = 3655557265U,
			// Token: 0x040048F5 RID: 18677
			ErrorTeamMailboxCanNotLoadPolicy = 1870712198U,
			// Token: 0x040048F6 RID: 18678
			VerboseResolvingExclusiveRecipientWriteScope = 1510453889U,
			// Token: 0x040048F7 RID: 18679
			ConfirmationMessageTestOutlookWebServices = 3321247001U,
			// Token: 0x040048F8 RID: 18680
			AddSecondaryDomainDescription = 3769478445U,
			// Token: 0x040048F9 RID: 18681
			ErrorImportingTpdFromRmsOnline = 4079789178U,
			// Token: 0x040048FA RID: 18682
			DisasterRecoveryCafeRoleDescription = 2430123483U,
			// Token: 0x040048FB RID: 18683
			CasHealthConnectionType = 1259030099U,
			// Token: 0x040048FC RID: 18684
			SetupProgressOfflineAddressBookEnabled = 341845757U,
			// Token: 0x040048FD RID: 18685
			CasHealthOwaVdirNameHeader = 2294357729U,
			// Token: 0x040048FE RID: 18686
			AllActiveSyncTransactionsSucceeded = 1151978302U,
			// Token: 0x040048FF RID: 18687
			RootDomainNotFoundException = 2444920946U,
			// Token: 0x04004900 RID: 18688
			RequestAlreadyCanceled = 245296314U,
			// Token: 0x04004901 RID: 18689
			InstallWatchDogServiceTask = 2184875284U,
			// Token: 0x04004902 RID: 18690
			ScopeIsInUse = 369727888U,
			// Token: 0x04004903 RID: 18691
			CasHealthOwaInvalidCertificate = 2731790600U,
			// Token: 0x04004904 RID: 18692
			TestSearchCheckService = 3596291951U,
			// Token: 0x04004905 RID: 18693
			ServiceHostDisplayName = 2554964784U,
			// Token: 0x04004906 RID: 18694
			SetupProgressInstallGlobalSettingsContainer = 3785964720U,
			// Token: 0x04004907 RID: 18695
			TopologyServiceResultSuccess = 813346190U,
			// Token: 0x04004908 RID: 18696
			InfoOverallPass = 1288207498U,
			// Token: 0x04004909 RID: 18697
			ErrorCannotUpdateGlsDomainFromOrgId = 2868492561U,
			// Token: 0x0400490A RID: 18698
			SendConnectorTargetServersNotSet = 3402326851U,
			// Token: 0x0400490B RID: 18699
			SetupComponentMonitoring = 2774693296U,
			// Token: 0x0400490C RID: 18700
			ImportFileDataIsNull = 3339775592U,
			// Token: 0x0400490D RID: 18701
			ErrorDatabaseUnavailableForProvisioning = 1493094573U,
			// Token: 0x0400490E RID: 18702
			StartingToCopyOwaLPFiles = 3433387878U,
			// Token: 0x0400490F RID: 18703
			AutodiscoverServiceCallFailed = 4222471768U,
			// Token: 0x04004910 RID: 18704
			IncompatibleDatabaseSchemaVersionsInDAG = 3141335933U,
			// Token: 0x04004911 RID: 18705
			ErrorBPAConfigFileLoad = 587913101U,
			// Token: 0x04004912 RID: 18706
			Imap4ServiceDescription = 2931186720U,
			// Token: 0x04004913 RID: 18707
			SetupProgressMaxConcurrentMigrations = 318753442U,
			// Token: 0x04004914 RID: 18708
			WarningSafetyNetHoldTimeMustBeGreaterThanReplayLagTime = 2019968228U,
			// Token: 0x04004915 RID: 18709
			SetupComponentMidFileCopyAllRoles = 403853017U,
			// Token: 0x04004916 RID: 18710
			UninstallMonitoringServiceTask = 2199720396U,
			// Token: 0x04004917 RID: 18711
			SmartHostsValidationFailedWarningMessage = 604494259U,
			// Token: 0x04004918 RID: 18712
			ClassificationRuleCollectionEngineValidationFailure = 1788709803U,
			// Token: 0x04004919 RID: 18713
			CasHealthDeleteItemScenarioDescription = 2608560709U,
			// Token: 0x0400491A RID: 18714
			ADAttributeMobileNumber = 2411750738U,
			// Token: 0x0400491B RID: 18715
			SetupProgressCleanRegistry = 3794422642U,
			// Token: 0x0400491C RID: 18716
			VerboseCheckRequiredFiles = 3078877348U,
			// Token: 0x0400491D RID: 18717
			BackSyncUrlNeedsToBeAbsolute = 2920861445U,
			// Token: 0x0400491E RID: 18718
			FfoWebServicePostConfigComponentDescription = 2803298965U,
			// Token: 0x0400491F RID: 18719
			SetupProgressStartingWatchDogService = 2916035674U,
			// Token: 0x04004920 RID: 18720
			CasHealthNoMailboxServersToTest = 3333988183U,
			// Token: 0x04004921 RID: 18721
			ProvisionServerDescription = 430617656U,
			// Token: 0x04004922 RID: 18722
			ErrorChangePasswordForAppPasswordAccount = 3732418497U,
			// Token: 0x04004923 RID: 18723
			NoRecipients = 1217883829U,
			// Token: 0x04004924 RID: 18724
			ErrorSetGroupMailboxNoOwners = 1589123818U,
			// Token: 0x04004925 RID: 18725
			ErrorMovingUnsupportedArchiveUser = 1217557034U,
			// Token: 0x04004926 RID: 18726
			MicrosoftExchangeRecipientExists = 633706886U,
			// Token: 0x04004927 RID: 18727
			DeletionAndLogOnlyNotPermitted = 3308770896U,
			// Token: 0x04004928 RID: 18728
			MtrtMessageDeliverDetailMessage = 807443215U,
			// Token: 0x04004929 RID: 18729
			ErrorMustSpecifyEitherAbsoluteOrRelativePath = 2052997646U,
			// Token: 0x0400492A RID: 18730
			SetupComponentPostPrepForestGlobalConfig = 1304678551U,
			// Token: 0x0400492B RID: 18731
			ErrorCannotSetGlobalThrottlingPolicyWithoutForceSettingGlobalParameter = 3568653834U,
			// Token: 0x0400492C RID: 18732
			InformationSkippedEws = 1951423981U,
			// Token: 0x0400492D RID: 18733
			SupervisionPolicyCollectionAmbiguous = 1233036147U,
			// Token: 0x0400492E RID: 18734
			CopyStatusNonExchangeReplication = 3990056197U,
			// Token: 0x0400492F RID: 18735
			ErrorAccountEnabledForNonUserMailbox = 1010297221U,
			// Token: 0x04004930 RID: 18736
			ErrorInvalidOperationOnProvisionedMailboxServer = 4150035864U,
			// Token: 0x04004931 RID: 18737
			NegativePriority = 2937791153U,
			// Token: 0x04004932 RID: 18738
			InstallFfoWebServiceRoleDescription = 1521120953U,
			// Token: 0x04004933 RID: 18739
			RemoveOrganizationFailWithoutSharedConfigurationParameter = 376492407U,
			// Token: 0x04004934 RID: 18740
			InformationSkippedAsForEWS = 2967394064U,
			// Token: 0x04004935 RID: 18741
			ErrorUseDataPropertyNameParameter = 2085825600U,
			// Token: 0x04004936 RID: 18742
			DatabaseStatus = 1517655709U,
			// Token: 0x04004937 RID: 18743
			InfoGetPublishingUri = 2813353071U,
			// Token: 0x04004938 RID: 18744
			MomConnectorServiceDisplayName = 2794053464U,
			// Token: 0x04004939 RID: 18745
			InstallMailboxTransportDeliveryServiceTask = 3156748290U,
			// Token: 0x0400493A RID: 18746
			PreserveAppSettingsTask = 2215772277U,
			// Token: 0x0400493B RID: 18747
			SetupProgressRecreateCannedRBACRoles = 3258683347U,
			// Token: 0x0400493C RID: 18748
			SetupComponentPostSetupOSP = 3944568479U,
			// Token: 0x0400493D RID: 18749
			SetupProgressUMEnabled = 234821519U,
			// Token: 0x0400493E RID: 18750
			NewReceiveConnectorAddingPermissionsMsg = 3380466612U,
			// Token: 0x0400493F RID: 18751
			ProgressForceQuorum = 128806629U,
			// Token: 0x04004940 RID: 18752
			TestTeamMailboxSharePointResponseDetails = 2527198467U,
			// Token: 0x04004941 RID: 18753
			SetupProgressInstallTransportLogSearchSerice = 2764287489U,
			// Token: 0x04004942 RID: 18754
			MtrtEventSend = 35249167U,
			// Token: 0x04004943 RID: 18755
			EnableAntiSpamUpdatesDeprecated = 394963499U,
			// Token: 0x04004944 RID: 18756
			IntegratedVDirNotFound = 2100461993U,
			// Token: 0x04004945 RID: 18757
			CopyStatusResynchronizing = 1545501201U,
			// Token: 0x04004946 RID: 18758
			SetupProgressConfigureMessageClassificationsContainer = 484901463U,
			// Token: 0x04004947 RID: 18759
			ComplianceProgramStateError = 3632680670U,
			// Token: 0x04004948 RID: 18760
			DebugEndGeneratingUniqueSamAccountName = 3941719008U,
			// Token: 0x04004949 RID: 18761
			SkippingInvalidTypeInGroupExpansion = 631692221U,
			// Token: 0x0400494A RID: 18762
			GetMsoDiagnosticsFindingTheCookie = 540991791U,
			// Token: 0x0400494B RID: 18763
			ProgressCopyingSystemFiles = 427603828U,
			// Token: 0x0400494C RID: 18764
			SendMessage = 3259527179U,
			// Token: 0x0400494D RID: 18765
			RoleAvailabilityOnly = 3937861705U,
			// Token: 0x0400494E RID: 18766
			CasHealthSecureAccess = 3172987846U,
			// Token: 0x0400494F RID: 18767
			MigrationNewBatchUsersShareBatch = 3299454883U,
			// Token: 0x04004950 RID: 18768
			SetBothForwardingAddressConfirmationMessage = 3049974650U,
			// Token: 0x04004951 RID: 18769
			InstallMonitoringRoleDescription = 3798570991U,
			// Token: 0x04004952 RID: 18770
			NotEnoughInformationSupplied = 2761303157U,
			// Token: 0x04004953 RID: 18771
			OnPremisesConnectorHasRouteUsingMXId = 3211546685U,
			// Token: 0x04004954 RID: 18772
			ErrorLocalServerIsNotMailboxServer = 1622178204U,
			// Token: 0x04004955 RID: 18773
			ErrorPatternCannotContainMultiMatchOnGroupOrAssertion = 3841604610U,
			// Token: 0x04004956 RID: 18774
			CertificateStatusValid = 2573369783U,
			// Token: 0x04004957 RID: 18775
			DlpPolicyVersionUnsupported = 1421470187U,
			// Token: 0x04004958 RID: 18776
			ErrorMapiVirtualDirectoryMustSpecifyIISAuthenticationMethods = 415510158U,
			// Token: 0x04004959 RID: 18777
			RecoveryActionArbiterServiceDescription = 211700381U,
			// Token: 0x0400495A RID: 18778
			SetupProgressUninstallTransportLogSearchSerice = 1933689530U,
			// Token: 0x0400495B RID: 18779
			ConfirmationMessageRemoveSearchDocumentFormat = 698026304U,
			// Token: 0x0400495C RID: 18780
			ErrorCannotMovePublicFolderIntoNonPublicFolderMailbox = 2715778979U,
			// Token: 0x0400495D RID: 18781
			InvalidStoreMailboxIdentity = 2298668180U,
			// Token: 0x0400495E RID: 18782
			NewFilterNeitherOptimizedNorImproved = 3308687873U,
			// Token: 0x0400495F RID: 18783
			GetMsoDiagnosticsMoreDataIsAvailable = 2625625929U,
			// Token: 0x04004960 RID: 18784
			SetupComponentTransportLogSearchService = 3180802142U,
			// Token: 0x04004961 RID: 18785
			ErrorTagTypeModified = 2506373819U,
			// Token: 0x04004962 RID: 18786
			CatchAllRecipientNotAllowedForArbitrationMailbox = 2236297220U,
			// Token: 0x04004963 RID: 18787
			ErrorLegacyOABDoesNotSupportLinkedMailbox = 572655299U,
			// Token: 0x04004964 RID: 18788
			ErrorSelectUserCmdletOnlyWorksForTwoUsers = 1767452929U,
			// Token: 0x04004965 RID: 18789
			ErrorServicePlanIsNotSet = 201914195U,
			// Token: 0x04004966 RID: 18790
			MtrtRemoveHeader = 839645532U,
			// Token: 0x04004967 RID: 18791
			JournalingParameterErrorExpiryDateWithoutGcc = 2376119956U,
			// Token: 0x04004968 RID: 18792
			ConfirmationMessageSetImap4Config = 4174794989U,
			// Token: 0x04004969 RID: 18793
			InCorrectRequiredPOPSetting = 4021969573U,
			// Token: 0x0400496A RID: 18794
			WarnAboutSetDatabaseDefaults = 1268368950U,
			// Token: 0x0400496B RID: 18795
			ErrorRestrictionWithWrongGroupType = 1288060522U,
			// Token: 0x0400496C RID: 18796
			DagMembersUpCheckDesc = 2488760739U,
			// Token: 0x0400496D RID: 18797
			ErrorCannotDisablePublicFolderMailboxWithFolders = 127311569U,
			// Token: 0x0400496E RID: 18798
			CasHealthScenarioLogon = 2327516238U,
			// Token: 0x0400496F RID: 18799
			ADAttributeInitials = 2468414724U,
			// Token: 0x04004970 RID: 18800
			NeedIisRestartWarning = 3835641716U,
			// Token: 0x04004971 RID: 18801
			ErrorFailedToCreatePL = 6354352U,
			// Token: 0x04004972 RID: 18802
			VerifyRoleInstalled = 1230778519U,
			// Token: 0x04004973 RID: 18803
			ConfirmationMessageGetFailedContentIndexDocuments = 140153690U,
			// Token: 0x04004974 RID: 18804
			FailedToLoadEdgeSyncConfigFile = 1867927292U,
			// Token: 0x04004975 RID: 18805
			ClassificationRuleCollectionIneffectiveSharingViolationCheck = 1163910679U,
			// Token: 0x04004976 RID: 18806
			VerboseFailedToTestWriteAccessToExchangeServers = 892157639U,
			// Token: 0x04004977 RID: 18807
			ErrorInvalidGuidFormat = 410666693U,
			// Token: 0x04004978 RID: 18808
			MtrtDecrypt = 1333408282U,
			// Token: 0x04004979 RID: 18809
			ErrorNotRunningAsTenantAdmin = 4176097491U,
			// Token: 0x0400497A RID: 18810
			InstallMonitoringServiceTask = 3736170493U,
			// Token: 0x0400497B RID: 18811
			CreateDumpster20Tag = 1547108334U,
			// Token: 0x0400497C RID: 18812
			InstallClientAccessRoleDescription = 3242462262U,
			// Token: 0x0400497D RID: 18813
			ConfirmationMessageTestWebServicesConnectivity = 1707855545U,
			// Token: 0x0400497E RID: 18814
			ConfigureMailTips = 3312019203U,
			// Token: 0x0400497F RID: 18815
			TestMigrationServerConnectionTimeout = 591582552U,
			// Token: 0x04004980 RID: 18816
			SetupProgressStartingTransportLogSearchService = 2449914212U,
			// Token: 0x04004981 RID: 18817
			ErrorPublicFolderHierarchyAlreadyProvisioned = 3137393342U,
			// Token: 0x04004982 RID: 18818
			ErrorInvalidOperationOnProvisionedServer = 3654120958U,
			// Token: 0x04004983 RID: 18819
			CasHealthEasScenarioGetItemEstimate = 2556217749U,
			// Token: 0x04004984 RID: 18820
			SetupProgressCreateOutOfTheBoxAdditionalMrmTags = 1093843235U,
			// Token: 0x04004985 RID: 18821
			AddressRewriteExceptionListDisallowed = 2136017683U,
			// Token: 0x04004986 RID: 18822
			InstallIisWebServiceExtensionCommitting = 3528453455U,
			// Token: 0x04004987 RID: 18823
			SetupProgressCreateGlobalContainers = 501834753U,
			// Token: 0x04004988 RID: 18824
			ErrorSyncProtocolNotSpecified = 3631260574U,
			// Token: 0x04004989 RID: 18825
			ArchiveNamePrefix = 3934741745U,
			// Token: 0x0400498A RID: 18826
			InvokePreMoveActionDescription = 2085683230U,
			// Token: 0x0400498B RID: 18827
			SetupProgressProhibitSendQuota = 1852904459U,
			// Token: 0x0400498C RID: 18828
			SetupComponentPerfCountersTransport = 1456068237U,
			// Token: 0x0400498D RID: 18829
			WatchDogServiceDisplayName = 29841201U,
			// Token: 0x0400498E RID: 18830
			StoppingOnePointService = 2600973645U,
			// Token: 0x0400498F RID: 18831
			ProgressCheckingReplayState = 3497830027U,
			// Token: 0x04004990 RID: 18832
			CopyStatusDismounted = 3673730471U,
			// Token: 0x04004991 RID: 18833
			DebugStartIsDomainReservedCheck = 2442076717U,
			// Token: 0x04004992 RID: 18834
			InvalidActionParameter = 3982469894U,
			// Token: 0x04004993 RID: 18835
			CasHealthClientAccessServerName = 3084415248U,
			// Token: 0x04004994 RID: 18836
			ArchiveDatabaseNotExplicitlyStampedError = 1415129751U,
			// Token: 0x04004995 RID: 18837
			ExchangeWindowsPermissionsDescription = 2556724114U,
			// Token: 0x04004996 RID: 18838
			CasHealthOwaPingScenarioName = 2806693281U,
			// Token: 0x04004997 RID: 18839
			TargetMailboxRequired = 2425687808U,
			// Token: 0x04004998 RID: 18840
			ConfirmationMessageSetTransportConfig = 3860792703U,
			// Token: 0x04004999 RID: 18841
			MigrationPartitionMailboxNotFound = 3173344529U,
			// Token: 0x0400499A RID: 18842
			ClassificationRuleCollectionExportEncyrptedProhibited = 3994004286U,
			// Token: 0x0400499B RID: 18843
			UninstallGatewayRoleDescription = 3144908676U,
			// Token: 0x0400499C RID: 18844
			HighPriorityChecksFailed = 2985845130U,
			// Token: 0x0400499D RID: 18845
			CouldNotRestartExSearch = 3773528322U,
			// Token: 0x0400499E RID: 18846
			AdminAuditLogSearchMissingCmdletsWhileParameterProvided = 930222453U,
			// Token: 0x0400499F RID: 18847
			RmsOnlineFailedToValidateKeys = 3527197609U,
			// Token: 0x040049A0 RID: 18848
			VerboseCheckingScopePassed = 2775441772U,
			// Token: 0x040049A1 RID: 18849
			NotAValidDistributionGroup = 1613874467U,
			// Token: 0x040049A2 RID: 18850
			ConfirmEnforceRequireSslOnRoot = 894156138U,
			// Token: 0x040049A3 RID: 18851
			ErrorMessageCopyForSendOnBehalfEnabledCanOnlySetOnSharedMailbox = 1268556399U,
			// Token: 0x040049A4 RID: 18852
			NoBindingsSet = 1397395049U,
			// Token: 0x040049A5 RID: 18853
			ErrorAccountPartitionRequired = 1360109098U,
			// Token: 0x040049A6 RID: 18854
			DebugEndInAcceptedDomainCheck = 3103126396U,
			// Token: 0x040049A7 RID: 18855
			UninstallingTranscodingService = 3692425173U,
			// Token: 0x040049A8 RID: 18856
			SetupProgressEnableWMIAsync = 3387886734U,
			// Token: 0x040049A9 RID: 18857
			MtrtDeleteMessage = 1971301201U,
			// Token: 0x040049AA RID: 18858
			ClassificationRuleCollectionTimeoutFailure = 2658797945U,
			// Token: 0x040049AB RID: 18859
			ErrorMessageCopyForSentAsEnabledCanOnlySetOnSharedMailbox = 2428787024U,
			// Token: 0x040049AC RID: 18860
			ErrorLinkedRoleGroupCannotHaveMembers = 4233755904U,
			// Token: 0x040049AD RID: 18861
			UnableToDetermineCreatingUser = 1504344471U,
			// Token: 0x040049AE RID: 18862
			ProgressDeletingCatalog = 1817876216U,
			// Token: 0x040049AF RID: 18863
			ErrorGlobalThrottlingPolicyNotFound = 3183614673U,
			// Token: 0x040049B0 RID: 18864
			IncompatibleTenantOrganizationForBulkProvisioning = 2734579474U,
			// Token: 0x040049B1 RID: 18865
			RuleStateEnabled = 2720144322U,
			// Token: 0x040049B2 RID: 18866
			DisasterRecoveryMailboxRoleDescription = 1049461168U,
			// Token: 0x040049B3 RID: 18867
			ManagedAvailabilityServersUSGDescription = 4128527909U,
			// Token: 0x040049B4 RID: 18868
			ConfirmationMessageTestEdgeSynchronization = 3250669143U,
			// Token: 0x040049B5 RID: 18869
			ErrorBasicAndLiveIdBasicNotAllowed = 3334485045U,
			// Token: 0x040049B6 RID: 18870
			ErrorInvalidCharException = 3247824756U,
			// Token: 0x040049B7 RID: 18871
			CalendarVDirNotFound = 3233886878U,
			// Token: 0x040049B8 RID: 18872
			ReplicationCheckFailuresLabel = 124793491U,
			// Token: 0x040049B9 RID: 18873
			CreateAltFswWillAutomaticallyCalculateLater = 1844786054U,
			// Token: 0x040049BA RID: 18874
			ProgressDeletingCopySystemFiles = 1855656096U,
			// Token: 0x040049BB RID: 18875
			UninstallCentralAdminServiceTask = 460271254U,
			// Token: 0x040049BC RID: 18876
			SetupComponentConfiguringDAV = 3306705804U,
			// Token: 0x040049BD RID: 18877
			CouldNotFindFirstOrgPerimeterConfigObjectId = 2740942150U,
			// Token: 0x040049BE RID: 18878
			MapiSubmitSystemProbeInternetMessageId = 2507815087U,
			// Token: 0x040049BF RID: 18879
			ErrorFailedToGetPublishingUri = 2789110641U,
			// Token: 0x040049C0 RID: 18880
			RequiredStartDateParameter = 4130544628U,
			// Token: 0x040049C1 RID: 18881
			SetupProgressRemotePowerShellAccessEnabled = 2328331598U,
			// Token: 0x040049C2 RID: 18882
			SetupProgressOwaLightEnabled = 535310264U,
			// Token: 0x040049C3 RID: 18883
			InvalidUnicodeCharacterUsage = 3015750530U,
			// Token: 0x040049C4 RID: 18884
			ErrorRemoteTargetDatabaseNotAllowedForRemotePull = 1310486619U,
			// Token: 0x040049C5 RID: 18885
			CasHealthEasScenarioSyncZero = 4161302825U,
			// Token: 0x040049C6 RID: 18886
			SetUMMailboxPolicyDuplicateSourceForestPolicyNames = 2469261993U,
			// Token: 0x040049C7 RID: 18887
			CatchAllRecipientTypeNotAllowed = 468761160U,
			// Token: 0x040049C8 RID: 18888
			ErrorFailedToCheckMode = 520563401U,
			// Token: 0x040049C9 RID: 18889
			ErrorEnableRoomMailboxAccountCanBeUsedWithRoomsOnly = 2047820105U,
			// Token: 0x040049CA RID: 18890
			ErrorTaskRunningLocationMailboxOnly = 3824133691U,
			// Token: 0x040049CB RID: 18891
			OwaIdentityMustHaveValueException = 4186670836U,
			// Token: 0x040049CC RID: 18892
			DebugGettingNetIdFromMemeberName = 1379838521U,
			// Token: 0x040049CD RID: 18893
			ExchangeMigrationSidHistoryAuditingDSGDescription = 4185944676U,
			// Token: 0x040049CE RID: 18894
			SmtpExternalServerSettings = 3325258591U,
			// Token: 0x040049CF RID: 18895
			CannotDisableAdfsEcpWithoutOwaFirst = 4273640756U,
			// Token: 0x040049D0 RID: 18896
			SetupProgressStoppingIISAdminService = 1926434175U,
			// Token: 0x040049D1 RID: 18897
			UnableToCommunicate = 1418979799U,
			// Token: 0x040049D2 RID: 18898
			TenantConfigurationInfoIsNull = 1639545723U,
			// Token: 0x040049D3 RID: 18899
			ComplianceAuditServiceDisplayName = 1855234972U,
			// Token: 0x040049D4 RID: 18900
			UmLanguagePathLogFilePathNotSpecified = 3361199071U,
			// Token: 0x040049D5 RID: 18901
			StartAfterOrCompleteAfterCannotBeSetForOfflineMoves = 1633415838U,
			// Token: 0x040049D6 RID: 18902
			ReplicationCheckBlankMessage = 4242852735U,
			// Token: 0x040049D7 RID: 18903
			AdminAuditLogSearchFailed = 3326005479U,
			// Token: 0x040049D8 RID: 18904
			MigrationCompleteAfterChangedToEarlierTime = 2193132985U,
			// Token: 0x040049D9 RID: 18905
			ErrorCannotMoveHalfMailboxBetweenTwoNonDatacenterForests = 433212455U,
			// Token: 0x040049DA RID: 18906
			StartingToUpdateMFLFiles = 2687116030U,
			// Token: 0x040049DB RID: 18907
			CannotSetEdgeTransportServerOnAd = 2411285952U,
			// Token: 0x040049DC RID: 18908
			ApplicationUrisMissingOnReturnedInformation = 185298481U,
			// Token: 0x040049DD RID: 18909
			DNSRoutingEnabledMustNotBeSpecified = 342525783U,
			// Token: 0x040049DE RID: 18910
			CannotLocateFedOrgId = 269884753U,
			// Token: 0x040049DF RID: 18911
			ErrorIncompleteSettings = 291218883U,
			// Token: 0x040049E0 RID: 18912
			ContinueOnRemoveSearchResults = 1213215400U,
			// Token: 0x040049E1 RID: 18913
			PopImapLoggingOn = 1516838238U,
			// Token: 0x040049E2 RID: 18914
			PopInternalServerSettings = 2155968014U,
			// Token: 0x040049E3 RID: 18915
			ConfirmationMessageSetEdgeSyncSendConnectorAddressSpaceOrSmartHosts = 2370208778U,
			// Token: 0x040049E4 RID: 18916
			ReplayLagPlayDownReasonLagDisabled = 434752309U,
			// Token: 0x040049E5 RID: 18917
			InstallCentralAdminDatabaseRoleDescription = 1865089306U,
			// Token: 0x040049E6 RID: 18918
			OwaUrlNotMatchEcpWarning = 1756888518U,
			// Token: 0x040049E7 RID: 18919
			ErrorPFDistributionNotSpecified = 696161139U,
			// Token: 0x040049E8 RID: 18920
			VerboseResetPasswordOnNextLogon = 109380891U,
			// Token: 0x040049E9 RID: 18921
			ErrorAppPoolIdCannotBeEmpty = 1362435159U,
			// Token: 0x040049EA RID: 18922
			InformationSkippedOab = 76164030U,
			// Token: 0x040049EB RID: 18923
			NoRMSServersFoundException = 3202705274U,
			// Token: 0x040049EC RID: 18924
			CasHealthOwaNoExternalUrl = 30958655U,
			// Token: 0x040049ED RID: 18925
			ReplayLagStatusLabelPercentage = 3893846751U,
			// Token: 0x040049EE RID: 18926
			ErrorCannotUpdateCertificateWhenFederationNotProvisioned = 1018021345U,
			// Token: 0x040049EF RID: 18927
			WarningMultiSiteSourceServers = 4081846807U,
			// Token: 0x040049F0 RID: 18928
			ErrorTeamMailboxSharePointUrl = 556775763U,
			// Token: 0x040049F1 RID: 18929
			AuthenticationMethodWindows = 3824833340U,
			// Token: 0x040049F2 RID: 18930
			MountStatusMounting = 1539605370U,
			// Token: 0x040049F3 RID: 18931
			SetupProgressInstallDefaultAcceptedDomain = 2295231809U,
			// Token: 0x040049F4 RID: 18932
			ComplianceServiceDescription = 400166206U,
			// Token: 0x040049F5 RID: 18933
			ContentIndexingExSearchNotFound = 812672951U,
			// Token: 0x040049F6 RID: 18934
			CasHealthSyncFolderItemsScenarioDescription = 3105051314U,
			// Token: 0x040049F7 RID: 18935
			ChangeServiceConfigFailure = 97006653U,
			// Token: 0x040049F8 RID: 18936
			ErrorDisableMailuserWithJournalArchive = 2281255925U,
			// Token: 0x040049F9 RID: 18937
			ErrorTooManyCertificates = 2313611105U,
			// Token: 0x040049FA RID: 18938
			SetupProgressStoppingTransportSyncManagerService = 1799783420U,
			// Token: 0x040049FB RID: 18939
			ConfirmationMessageSetSenderFilterConfig = 161394695U,
			// Token: 0x040049FC RID: 18940
			SetupProcessCreateDefaultSharingPolicy = 408634319U,
			// Token: 0x040049FD RID: 18941
			ActiveDirectorySearchViaADDriverAgainstSpecificDCScenario = 990532542U,
			// Token: 0x040049FE RID: 18942
			CasHealthResult = 3299210260U,
			// Token: 0x040049FF RID: 18943
			DRMNotAllowedForConsumerDialPlan = 911093058U,
			// Token: 0x04004A00 RID: 18944
			CafePrereqCheck = 2360538852U,
			// Token: 0x04004A01 RID: 18945
			DatabaseSeedStatusLabelPercentage = 3829706538U,
			// Token: 0x04004A02 RID: 18946
			CasHealthCreateItemScenarioDescription = 3236535734U,
			// Token: 0x04004A03 RID: 18947
			SetupProgressInstallingDefaultTransportAgents = 3547605377U,
			// Token: 0x04004A04 RID: 18948
			ErrorExpansionServerMustBeTiOrBhServer = 2035571295U,
			// Token: 0x04004A05 RID: 18949
			ErrorRoomMailboxPasswordCanOnlyBeUsedWithEnableRoomMailboxAccount = 764010493U,
			// Token: 0x04004A06 RID: 18950
			MailboxParameterMissingException = 3388261540U,
			// Token: 0x04004A07 RID: 18951
			PromptToOverwriteExistingRuleCollection = 1226596383U,
			// Token: 0x04004A08 RID: 18952
			AuthenticationMethodLiveIdFba = 4104165981U,
			// Token: 0x04004A09 RID: 18953
			ErrorIncorrectDefaultTag = 3043034532U,
			// Token: 0x04004A0A RID: 18954
			ErrorEnableRoomMailboxAccountCannotBeUsedWithLinkedRoomMailbox = 3268676866U,
			// Token: 0x04004A0B RID: 18955
			MSARPSServiceDisplayName = 2147011188U,
			// Token: 0x04004A0C RID: 18956
			NotifySenderActionIsBeingOverridded = 4135645967U,
			// Token: 0x04004A0D RID: 18957
			EitherSenderOrRmsOnlineParametersMustBeSpecified = 137891794U,
			// Token: 0x04004A0E RID: 18958
			StoppingMomService = 2340528056U,
			// Token: 0x04004A0F RID: 18959
			HighPriorityChecksWarning = 2455516899U,
			// Token: 0x04004A10 RID: 18960
			SetupProgressStartingInformationStoreService = 3888635110U,
			// Token: 0x04004A11 RID: 18961
			OldRmsOnlineImportAfterRmsOnlineForwardSync = 3766269728U,
			// Token: 0x04004A12 RID: 18962
			InvalidReportEndDate = 1448587360U,
			// Token: 0x04004A13 RID: 18963
			DisasterRecoveryMonitoringRoleDescription = 766081866U,
			// Token: 0x04004A14 RID: 18964
			AllWebServicesTransactionsSucceeded = 2214481763U,
			// Token: 0x04004A15 RID: 18965
			ArchiveConnectivityResultUndefined = 3019121814U,
			// Token: 0x04004A16 RID: 18966
			Error_MissingSenderEmail = 3252760822U,
			// Token: 0x04004A17 RID: 18967
			EdgeServerNotSubscribed = 21238159U,
			// Token: 0x04004A18 RID: 18968
			DelegateRoleTypeOrgAdmin = 1455306500U,
			// Token: 0x04004A19 RID: 18969
			InfoCheckingOrganizationContext = 1020874888U,
			// Token: 0x04004A1A RID: 18970
			DagMgmtServiceDescription = 1664700488U,
			// Token: 0x04004A1B RID: 18971
			WarningRedirectToRecipientsNotSet = 1279214916U,
			// Token: 0x04004A1C RID: 18972
			IndexEntryIsMissingData = 2391097994U,
			// Token: 0x04004A1D RID: 18973
			SetupProgressCreateApprovalApplicationsContainer = 1748468167U,
			// Token: 0x04004A1E RID: 18974
			PublicFolderMailboxNotFound = 2354834546U,
			// Token: 0x04004A1F RID: 18975
			PopImapNoMessagesToDelete = 8549621U,
			// Token: 0x04004A20 RID: 18976
			NoJournalingToPublicFolder = 49581212U,
			// Token: 0x04004A21 RID: 18977
			ProgressStatusRemovingAddressListTree = 283984324U,
			// Token: 0x04004A22 RID: 18978
			ADAttributeCustomAttribute4 = 1377545162U,
			// Token: 0x04004A23 RID: 18979
			VerboseRestartDefaultWebSite = 4050256429U,
			// Token: 0x04004A24 RID: 18980
			ErrorInvalidParametersForOutlookAnywherePublicFolderMailboxMigration = 570475965U,
			// Token: 0x04004A25 RID: 18981
			ErrorFailedToGetLicensingUri = 3859128598U,
			// Token: 0x04004A26 RID: 18982
			MicrosoftExchangeRecipientNotFoundOnGatewayServerRole = 4221700743U,
			// Token: 0x04004A27 RID: 18983
			SetupProgressContactCountQuota = 121474667U,
			// Token: 0x04004A28 RID: 18984
			ErrorInstallationModeNotSupported = 3995778130U,
			// Token: 0x04004A29 RID: 18985
			NoSuchRequestInSpecifiedIndex = 3604568438U,
			// Token: 0x04004A2A RID: 18986
			MigrationAutoStopAlreadySet = 2370162247U,
			// Token: 0x04004A2B RID: 18987
			UseDagDefaultOnOffOff = 3628539559U,
			// Token: 0x04004A2C RID: 18988
			ServerUnavailableException = 1995762726U,
			// Token: 0x04004A2D RID: 18989
			ClientAccessOwaComponentDescription = 325877545U,
			// Token: 0x04004A2E RID: 18990
			SetupProgressCreateUceContentFilterObject = 233667309U,
			// Token: 0x04004A2F RID: 18991
			ConversationsMailboxDisabled = 1589222130U,
			// Token: 0x04004A30 RID: 18992
			SetupComponentUpdateResourcePropertySchema = 1909170865U,
			// Token: 0x04004A31 RID: 18993
			TransitionStateUnknown = 1612688160U,
			// Token: 0x04004A32 RID: 18994
			FileDataShouldNotBeSet = 555828727U,
			// Token: 0x04004A33 RID: 18995
			ParameterErrorForDefaultUsage = 3623760724U,
			// Token: 0x04004A34 RID: 18996
			SetupProgressStartingDagMgmtService = 4269792004U,
			// Token: 0x04004A35 RID: 18997
			FinishingFileCopy = 4252228748U,
			// Token: 0x04004A36 RID: 18998
			MtrtReportSeverityLevelHigh = 143203986U,
			// Token: 0x04004A37 RID: 18999
			ErrorPatternCannotContainGroupOrAssertionWithMultiMatchWildcard = 2335842547U,
			// Token: 0x04004A38 RID: 19000
			EnableConversationsTask = 1485878098U,
			// Token: 0x04004A39 RID: 19001
			NoDeviceFilters = 3039898050U,
			// Token: 0x04004A3A RID: 19002
			ConfirmationMessageSearchMessageTracking = 2918650372U,
			// Token: 0x04004A3B RID: 19003
			ConfirmationMessageTestSystemHealth = 533928811U,
			// Token: 0x04004A3C RID: 19004
			CopyStatusFailed = 4015121608U,
			// Token: 0x04004A3D RID: 19005
			DlpPolicyStateDisplayName = 4107372202U,
			// Token: 0x04004A3E RID: 19006
			MailboxSearchDisabled = 1881614050U,
			// Token: 0x04004A3F RID: 19007
			ErrorManagedByMustBeSpecifiedWIthOrganization = 1613921097U,
			// Token: 0x04004A40 RID: 19008
			LiveIdAuthenticationResultSuccess = 1886798257U,
			// Token: 0x04004A41 RID: 19009
			FinishedComponentTasks = 29090731U,
			// Token: 0x04004A42 RID: 19010
			MountStatusDismounting = 3184703320U,
			// Token: 0x04004A43 RID: 19011
			UninstallPop3BeServiceTask = 455979009U,
			// Token: 0x04004A44 RID: 19012
			DisasterRecoveryFrontendTransportRoleDescription = 3215055419U,
			// Token: 0x04004A45 RID: 19013
			TeamMailboxSharePointUrlMissing = 2361940575U,
			// Token: 0x04004A46 RID: 19014
			ConfirmationMessageTestEdgeSyncEhf = 2454229449U,
			// Token: 0x04004A47 RID: 19015
			PhotoMustNotBeBlank = 1631911187U,
			// Token: 0x04004A48 RID: 19016
			PopExternalServerSettings = 888502160U,
			// Token: 0x04004A49 RID: 19017
			ConfirmationRemoveAllSupervisionListEntries = 3447968637U,
			// Token: 0x04004A4A RID: 19018
			InvalidReportingPeriod = 4165998328U,
			// Token: 0x04004A4B RID: 19019
			FfoWebServicePermissionsComponentDescription = 3472376295U,
			// Token: 0x04004A4C RID: 19020
			RepairUrgencyNormal = 2726496295U,
			// Token: 0x04004A4D RID: 19021
			ErrorDefaultMalwareConfigCannotBeDeleted = 3114647655U,
			// Token: 0x04004A4E RID: 19022
			InvalidAggregateBy = 752989991U,
			// Token: 0x04004A4F RID: 19023
			SetupProgressCreateRBACRoleAssignmentsContainer = 2099442359U,
			// Token: 0x04004A50 RID: 19024
			AutoProvisionFailedException = 4240648378U,
			// Token: 0x04004A51 RID: 19025
			NeedToSpecifyServerObject = 2833582586U,
			// Token: 0x04004A52 RID: 19026
			HybridMailflowNotYetSet = 875645786U,
			// Token: 0x04004A53 RID: 19027
			DegubEndConnectingToDomainServices = 3352448229U,
			// Token: 0x04004A54 RID: 19028
			CallingGetOrganizationRelationshipSettings = 133553638U,
			// Token: 0x04004A55 RID: 19029
			DagTaskValidatingParameters = 2431610718U,
			// Token: 0x04004A56 RID: 19030
			NewRuleSyncAcrossDifferentVersionsNeeded = 1191033945U,
			// Token: 0x04004A57 RID: 19031
			PopImapDeleteOldMsgs = 2167067396U,
			// Token: 0x04004A58 RID: 19032
			ReloadingRequest = 3174578250U,
			// Token: 0x04004A59 RID: 19033
			RepairUrgencyCritical = 1880520539U,
			// Token: 0x04004A5A RID: 19034
			UnpackingFiles = 1935034447U,
			// Token: 0x04004A5B RID: 19035
			CentralAdminServiceDisplayName = 2464857106U,
			// Token: 0x04004A5C RID: 19036
			WarnRpcHttpNegotiateCoexistence = 1020674371U,
			// Token: 0x04004A5D RID: 19037
			SetupProgressCreatingAdamInstance = 688825023U,
			// Token: 0x04004A5E RID: 19038
			ActiveSyncMetabaseProxyInstallFailure = 422014390U,
			// Token: 0x04004A5F RID: 19039
			InvalidMessageDataClassificationEmptyName = 1957537238U,
			// Token: 0x04004A60 RID: 19040
			ErrorFileHasNoTextContent = 1283422781U,
			// Token: 0x04004A61 RID: 19041
			ErrorTaskRunningLocationHubOnly = 1040938896U,
			// Token: 0x04004A62 RID: 19042
			ErrorInboxRuleDoesNotExist = 4035449407U,
			// Token: 0x04004A63 RID: 19043
			CasHealthEasScenarioGetFolder = 4258639914U,
			// Token: 0x04004A64 RID: 19044
			InstallUnifiedMessagingRoleDescription = 1239032133U,
			// Token: 0x04004A65 RID: 19045
			DagTaskFormedCluster = 442307290U,
			// Token: 0x04004A66 RID: 19046
			IisTasksApplicationRootValidationProperty = 653347817U,
			// Token: 0x04004A67 RID: 19047
			WillIgnoreNoncriticalErrors = 3750163877U,
			// Token: 0x04004A68 RID: 19048
			ErrorRemoteTargetDatabaseMustBeSpecifiedForRemotePush = 2476064707U,
			// Token: 0x04004A69 RID: 19049
			ReplayLagPlayDownReasonLogsInRequiredRange = 3162325577U,
			// Token: 0x04004A6A RID: 19050
			InstallMessageTracingClientServiceTask = 3648320443U,
			// Token: 0x04004A6B RID: 19051
			FriendlyNameTooLong = 1343133942U,
			// Token: 0x04004A6C RID: 19052
			ErrorPatternCannotContainSequentialIdenticalMultiMatchPatterns = 1668037270U,
			// Token: 0x04004A6D RID: 19053
			ErrorConflictCountryOrRegion = 467864039U,
			// Token: 0x04004A6E RID: 19054
			InvalidSenderAddress = 3500302124U,
			// Token: 0x04004A6F RID: 19055
			PhoneNumberAllowedOnlyOnE164ConsumerDialplan = 3542711257U,
			// Token: 0x04004A70 RID: 19056
			ProgressDeletingSystemFiles = 1785523337U,
			// Token: 0x04004A71 RID: 19057
			ErrorMissingManagedFolder = 3379767095U,
			// Token: 0x04004A72 RID: 19058
			ConfirmationMessageExportDlpPolicyCollection = 3376852758U,
			// Token: 0x04004A73 RID: 19059
			InvalidQueryParameters = 4054146957U,
			// Token: 0x04004A74 RID: 19060
			MtrtMessageExpandDetailMessage = 4187281280U,
			// Token: 0x04004A75 RID: 19061
			InfoRmsOnlinePrerequisitesChecked = 2971233211U,
			// Token: 0x04004A76 RID: 19062
			SetupProgressCreateDefaultMessageClassificationsContainer = 2956386236U,
			// Token: 0x04004A77 RID: 19063
			InfoGetTemplate = 489716232U,
			// Token: 0x04004A78 RID: 19064
			DlpPolicyModeDisplayName = 2853286652U,
			// Token: 0x04004A79 RID: 19065
			WarningXHeaderValueNotSet = 3230982409U,
			// Token: 0x04004A7A RID: 19066
			GetFederationInformationFailed = 711082378U,
			// Token: 0x04004A7B RID: 19067
			UninstallAssistantsServiceTask = 534171625U,
			// Token: 0x04004A7C RID: 19068
			ProgressCopyingPST = 1053984119U,
			// Token: 0x04004A7D RID: 19069
			UninstallComplianceServiceTask = 863270287U,
			// Token: 0x04004A7E RID: 19070
			ConfirmationMessageSetDataClassificationConfig = 209725232U,
			// Token: 0x04004A7F RID: 19071
			WarnBasicAuthInClear = 2620423486U,
			// Token: 0x04004A80 RID: 19072
			DisableContentIndexTask = 4118091956U,
			// Token: 0x04004A81 RID: 19073
			GatewayRoleDisplayName = 2320733697U,
			// Token: 0x04004A82 RID: 19074
			RemoveOrganizationFailRelocationInProgress = 4146114679U,
			// Token: 0x04004A83 RID: 19075
			CafeIisWebServiceExtensionsDescription = 3143233303U,
			// Token: 0x04004A84 RID: 19076
			NoDefaultTestAccount = 1889514201U,
			// Token: 0x04004A85 RID: 19077
			UsageTypeClient = 2420149034U,
			// Token: 0x04004A86 RID: 19078
			SetupProgressRecreateCannedRBACRoleAssignments = 1613721886U,
			// Token: 0x04004A87 RID: 19079
			SetupProgressStoppingRpcClientAccessService = 2396495091U,
			// Token: 0x04004A88 RID: 19080
			CasHealthScenario = 3593604775U,
			// Token: 0x04004A89 RID: 19081
			InstallCafeRoleDescription = 4138813450U,
			// Token: 0x04004A8A RID: 19082
			InstallMailboxRoleDescription = 1884159739U,
			// Token: 0x04004A8B RID: 19083
			ErrorInvalidValueForPreventCompletion = 2457049403U,
			// Token: 0x04004A8C RID: 19084
			AboutToAddLocalEtsUSGToLocalAdminGroup = 283239335U,
			// Token: 0x04004A8D RID: 19085
			NotificationsBrokerServiceDisplayName = 3910668745U,
			// Token: 0x04004A8E RID: 19086
			MigrationReportIntervalParameterInvalid = 3846996117U,
			// Token: 0x04004A8F RID: 19087
			SetupComponentPostSetupFrontendTransport = 1749900570U,
			// Token: 0x04004A90 RID: 19088
			ErrorFilterParametersForCloneMode = 1058256821U,
			// Token: 0x04004A91 RID: 19089
			SetupProgressCreatingDefaultOAB = 316441426U,
			// Token: 0x04004A92 RID: 19090
			DebugEndSetDatabase = 3104098617U,
			// Token: 0x04004A93 RID: 19091
			Tentative = 1797669216U,
			// Token: 0x04004A94 RID: 19092
			RolePublishingEditor = 3532057202U,
			// Token: 0x04004A95 RID: 19093
			NewDagConfigurationPassedChecks = 1916928879U,
			// Token: 0x04004A96 RID: 19094
			AutodiscoverSvcGetRemoteEndpoint = 3150409675U,
			// Token: 0x04004A97 RID: 19095
			SetupProgressCalendarSharingEnabled = 4097081969U,
			// Token: 0x04004A98 RID: 19096
			NoMonitoringErrorsInTestServiceHealthTask = 1224187099U,
			// Token: 0x04004A99 RID: 19097
			SetupComponentConfiguringMsFte = 3832339474U,
			// Token: 0x04004A9A RID: 19098
			ReservedString3 = 4054043088U,
			// Token: 0x04004A9B RID: 19099
			ErrorBPARunFailed = 980249561U,
			// Token: 0x04004A9C RID: 19100
			UMCallAnsweringRuleDescriptionTakeActions = 363803184U,
			// Token: 0x04004A9D RID: 19101
			SetupProgressCommonConfiguration = 535010283U,
			// Token: 0x04004A9E RID: 19102
			DatacenterLiveIdPerfCountersComponentDescription = 4284518091U,
			// Token: 0x04004A9F RID: 19103
			NewDagPassedChecks = 1642342167U,
			// Token: 0x04004AA0 RID: 19104
			InstallForwardSyncServiceTask = 1627739245U,
			// Token: 0x04004AA1 RID: 19105
			SetupProgressStartingMailSubmissionService = 2839570606U,
			// Token: 0x04004AA2 RID: 19106
			SendConnectorProxyEnabledOnEdge = 642792694U,
			// Token: 0x04004AA3 RID: 19107
			VerboseNoOabVDirOnLocalServer = 1810462903U,
			// Token: 0x04004AA4 RID: 19108
			NotificationsBrokerServiceDescription = 243344748U,
			// Token: 0x04004AA5 RID: 19109
			SetupProgressStoppingMailboxAssistantService = 1877930527U,
			// Token: 0x04004AA6 RID: 19110
			InfoPreL = 2617553441U,
			// Token: 0x04004AA7 RID: 19111
			ErrorMessageClassModified = 750721438U,
			// Token: 0x04004AA8 RID: 19112
			IgnoringSameNextCertificate = 2838173073U,
			// Token: 0x04004AA9 RID: 19113
			ErrorGroupTypeInvalid = 2235134294U,
			// Token: 0x04004AAA RID: 19114
			HealthManagerServiceDisplayName = 1695373195U,
			// Token: 0x04004AAB RID: 19115
			DiagnosticsServiceDisplayName = 1050445322U,
			// Token: 0x04004AAC RID: 19116
			FileDataMissing = 3444014848U,
			// Token: 0x04004AAD RID: 19117
			InstallPop3BeServiceTask = 3548459082U,
			// Token: 0x04004AAE RID: 19118
			ServiceHostDescription = 4274815123U,
			// Token: 0x04004AAF RID: 19119
			SetupProgressConfigureControlPointConfig = 1326571555U,
			// Token: 0x04004AB0 RID: 19120
			ErrorModerationWithWrongGroupType = 599651768U,
			// Token: 0x04004AB1 RID: 19121
			SiteMailboxMembershipSyncEventEnqueued = 4247632026U,
			// Token: 0x04004AB2 RID: 19122
			ErrorTeamMailboxSharePointServerVersionInCompatible = 3389267252U,
			// Token: 0x04004AB3 RID: 19123
			AllowVoiceMailAnalysisWarning = 2147062214U,
			// Token: 0x04004AB4 RID: 19124
			SetupComponentPreSetupClientAccess = 4188748229U,
			// Token: 0x04004AB5 RID: 19125
			SetupProgressUninstallingMsFteMSI = 1384051878U,
			// Token: 0x04004AB6 RID: 19126
			ErrorMovingOldExchangeUsersUnsupported = 1962764795U,
			// Token: 0x04004AB7 RID: 19127
			RemoveADServerMetadataSucceeded = 4100221894U,
			// Token: 0x04004AB8 RID: 19128
			QuarantineMessageTypeTransportRule = 471227616U,
			// Token: 0x04004AB9 RID: 19129
			ErrorAssociatedUserMailboxExist = 3949675526U,
			// Token: 0x04004ABA RID: 19130
			SetupProgressInstallInternetMessageFormat = 847696334U,
			// Token: 0x04004ABB RID: 19131
			EditWillUpgradeSearchObject = 247279245U,
			// Token: 0x04004ABC RID: 19132
			SetupComponentUnifiedMessagingGlobalConfig = 2438747511U,
			// Token: 0x04004ABD RID: 19133
			NoHubInSubscribedSite = 365229532U,
			// Token: 0x04004ABE RID: 19134
			ErrorFailedToLoadIRMConfig = 1383341120U,
			// Token: 0x04004ABF RID: 19135
			ProgressCopyingCatalog = 759230387U,
			// Token: 0x04004AC0 RID: 19136
			MailboxTransportSubmissionServiceDisplayName = 3237430231U,
			// Token: 0x04004AC1 RID: 19137
			ImapInternalServerSettings = 3455360282U,
			// Token: 0x04004AC2 RID: 19138
			DatabaseSeedStatusLabelWrittenPerSec = 4109012977U,
			// Token: 0x04004AC3 RID: 19139
			NullUserError = 2526768594U,
			// Token: 0x04004AC4 RID: 19140
			ConfirmationMessageSetAutodiscoverVirtualDirectory = 2128735504U,
			// Token: 0x04004AC5 RID: 19141
			ErrorAuthSameAsCurrent = 1315910557U,
			// Token: 0x04004AC6 RID: 19142
			VerboseHasWriteAccessToExchangeServers = 407003399U,
			// Token: 0x04004AC7 RID: 19143
			ActiveSyncMetabaseIsapiInstallFailure = 3070362658U,
			// Token: 0x04004AC8 RID: 19144
			InstallCentralAdminRoleDescription = 2706201571U,
			// Token: 0x04004AC9 RID: 19145
			ConfirmationMessageImportDlpPolicyTemplate = 3473716705U,
			// Token: 0x04004ACA RID: 19146
			ADAttributeIsWhiteSpaceOrContainsWhiteSpacePrefixOrSuffix = 2747221151U,
			// Token: 0x04004ACB RID: 19147
			SetupProgressImportingAdamSchema = 1656912255U,
			// Token: 0x04004ACC RID: 19148
			SupportedToolsCannotReadFile = 2143081262U,
			// Token: 0x04004ACD RID: 19149
			AuthModuleFilterMetabaseIsapiInstallFailure = 3471145417U,
			// Token: 0x04004ACE RID: 19150
			HeaderValue = 2163423328U,
			// Token: 0x04004ACF RID: 19151
			NonE14ServerError = 2834035896U,
			// Token: 0x04004AD0 RID: 19152
			ClientAccessServiceControlComponentDescription = 1655030876U,
			// Token: 0x04004AD1 RID: 19153
			GatewayPrereqCheck = 3033688531U,
			// Token: 0x04004AD2 RID: 19154
			CannotSetHubTransportServerOnAdam = 666293858U,
			// Token: 0x04004AD3 RID: 19155
			MigrationCompleteAfterIncorrectMigrationType = 4207425180U,
			// Token: 0x04004AD4 RID: 19156
			CasHealthOwaReturnedErrorPageForAuth = 3123642639U,
			// Token: 0x04004AD5 RID: 19157
			LocalDomainNotFoundException = 973517949U,
			// Token: 0x04004AD6 RID: 19158
			Info_MessageItemHasBeenUpdated = 1104443180U,
			// Token: 0x04004AD7 RID: 19159
			SetupProgressOwaEnabled = 1949550598U,
			// Token: 0x04004AD8 RID: 19160
			ErrorManageDelegation1ProofDomainOwnership = 1612924637U,
			// Token: 0x04004AD9 RID: 19161
			ValidateSecretFailure = 493674830U,
			// Token: 0x04004ADA RID: 19162
			VerboseResetADServerSettingsSucceed = 3600064844U,
			// Token: 0x04004ADB RID: 19163
			SetupProgressSkipToUAndParentalControlCheckEnabled = 2112765551U,
			// Token: 0x04004ADC RID: 19164
			CountingFilesToCopy = 2062169902U,
			// Token: 0x04004ADD RID: 19165
			AnonymousSharingEnabledWarning = 1429918150U,
			// Token: 0x04004ADE RID: 19166
			CalendarLogsNotFound = 3639980884U,
			// Token: 0x04004ADF RID: 19167
			MSARPSServiceDescription = 3048237641U,
			// Token: 0x04004AE0 RID: 19168
			OwaMetabaseIsapiInstallFailure = 275657530U,
			// Token: 0x04004AE1 RID: 19169
			MtrtMessageBadmail = 4106677824U,
			// Token: 0x04004AE2 RID: 19170
			ProgressDeletingCopyLogFiles = 348002949U,
			// Token: 0x04004AE3 RID: 19171
			MessageTypePermissionControlled = 2872629304U,
			// Token: 0x04004AE4 RID: 19172
			InstallTransportSyncManagerServiceTask = 2479928670U,
			// Token: 0x04004AE5 RID: 19173
			ErrorUnableToIdentifyTheUser = 1686231910U,
			// Token: 0x04004AE6 RID: 19174
			CasHealthEasGetItemEstimate = 2655847911U,
			// Token: 0x04004AE7 RID: 19175
			ErrorFailedExtractTextForFingerprint = 4118655296U,
			// Token: 0x04004AE8 RID: 19176
			ComInteropDllNotFound = 2734769737U,
			// Token: 0x04004AE9 RID: 19177
			SetupProgressCreateActiveSyncMailboxPolicyContainers = 3029203465U,
			// Token: 0x04004AEA RID: 19178
			Pattern = 1660006804U,
			// Token: 0x04004AEB RID: 19179
			ErrorRpcHttpMustSpecifyEitherIISAuthenticationMethodsOrDefaultAuthenticationMethod = 3317013550U,
			// Token: 0x04004AEC RID: 19180
			SetupProgressCreateNewMailboxPlanObject = 3640979510U,
			// Token: 0x04004AED RID: 19181
			ReplicationCheckResultWarning = 2346524817U,
			// Token: 0x04004AEE RID: 19182
			SetupProgressCreateJournalingRuleCollection = 3926581147U,
			// Token: 0x04004AEF RID: 19183
			ContentIndexingServiceNotInstalled = 3844154567U,
			// Token: 0x04004AF0 RID: 19184
			ErrorMServeConfigurationIsBroken = 3873444299U,
			// Token: 0x04004AF1 RID: 19185
			ConfirmationMessageTestIntraOrganizationConnector = 3678435224U,
			// Token: 0x04004AF2 RID: 19186
			CasHealthOwaLoginWithNoCredentials = 1310542130U,
			// Token: 0x04004AF3 RID: 19187
			MonitoringServiceDisplayName = 1919389628U,
			// Token: 0x04004AF4 RID: 19188
			CannotSpecifyApplyMandatoryPropertiesParameterWithE15OrLaterOab = 3397451545U,
			// Token: 0x04004AF5 RID: 19189
			RegSvr32Failed = 539901569U,
			// Token: 0x04004AF6 RID: 19190
			DeviceWipeSucceeded = 3617746388U,
			// Token: 0x04004AF7 RID: 19191
			ErrorAtleastOneOfCSVInput = 1317139899U,
			// Token: 0x04004AF8 RID: 19192
			QuarantineMessageTypeSpam = 4040564888U,
			// Token: 0x04004AF9 RID: 19193
			SetupProgressStoppingMailSubmissionService = 4143535486U,
			// Token: 0x04004AFA RID: 19194
			ErrorInvalidOrganization = 3730091040U,
			// Token: 0x04004AFB RID: 19195
			JournalingReportNdrToNotSet = 1440702907U,
			// Token: 0x04004AFC RID: 19196
			ProgressStatusInProgress = 204895011U,
			// Token: 0x04004AFD RID: 19197
			NewSendConnectorIncorrectUsageParameters = 3366786089U,
			// Token: 0x04004AFE RID: 19198
			ConfigurationContainerNotFoundException = 1809082251U,
			// Token: 0x04004AFF RID: 19199
			SmtpInternalServerSettings = 3807329645U,
			// Token: 0x04004B00 RID: 19200
			MalboxFolderRightsCreateSubfolders = 2691134897U,
			// Token: 0x04004B01 RID: 19201
			ErrorFailedToManagedFoldersInMailbox = 641425147U,
			// Token: 0x04004B02 RID: 19202
			OpenServiceFailed = 3675089712U,
			// Token: 0x04004B03 RID: 19203
			ErrorNameNotFQDN = 396068831U,
			// Token: 0x04004B04 RID: 19204
			SetupComponentMonitoringCorrelation = 1898390588U,
			// Token: 0x04004B05 RID: 19205
			SetupProgressCreateDatabaseFolders = 3427352430U,
			// Token: 0x04004B06 RID: 19206
			CannotRunOnSubscribedEdge = 4175925886U,
			// Token: 0x04004B07 RID: 19207
			NoOrganizationRelationshipInstancesWereReturnedByTheRemoteParty = 1225987784U,
			// Token: 0x04004B08 RID: 19208
			StatusMessageUpdatePublicFolderMailboxCompleted = 2550967442U,
			// Token: 0x04004B09 RID: 19209
			DatabaseSeedStatusLabelReadPerSec = 2800354258U,
			// Token: 0x04004B0A RID: 19210
			ErrorInvalidDateRangeException = 2123483125U,
			// Token: 0x04004B0B RID: 19211
			ErrorNoTrustConfigured = 2304297729U,
			// Token: 0x04004B0C RID: 19212
			ErrorEnableRoleGroup = 4174308722U,
			// Token: 0x04004B0D RID: 19213
			MapiTransactionFailedAgainstServerPrefix = 1554948996U,
			// Token: 0x04004B0E RID: 19214
			SetupProgressCreateFederationTrusts = 1046590614U,
			// Token: 0x04004B0F RID: 19215
			CasHealthOwaPingRequestSucceeded = 2243519812U,
			// Token: 0x04004B10 RID: 19216
			ConfirmationOnDisablingInternalLicensing = 1705322316U,
			// Token: 0x04004B11 RID: 19217
			GetDagHealthInfoNoResultsWarning = 1589644643U,
			// Token: 0x04004B12 RID: 19218
			InvalidTransportRoleOnReceiveConnector = 1232854071U,
			// Token: 0x04004B13 RID: 19219
			UninstallImap4ServiceTask = 585138347U,
			// Token: 0x04004B14 RID: 19220
			InstallNotificationsBrokerServiceTask = 2120620876U,
			// Token: 0x04004B15 RID: 19221
			ErrorDlpPolicyCollectionCannotContainTransportRules = 942070657U,
			// Token: 0x04004B16 RID: 19222
			DelegateRoleTypePublicFolderAdmin = 4048010479U,
			// Token: 0x04004B17 RID: 19223
			SetupProgressAutoForwardEnabled = 4078764843U,
			// Token: 0x04004B18 RID: 19224
			ConfirmationMessageOverrideContentMailbox = 690809061U,
			// Token: 0x04004B19 RID: 19225
			CreateOwaForEcpWarning = 1521128314U,
			// Token: 0x04004B1A RID: 19226
			ContinueMountWithDataLoss = 1726782365U,
			// Token: 0x04004B1B RID: 19227
			SetupComponentConfigPermissionsBridgehead = 61328153U,
			// Token: 0x04004B1C RID: 19228
			MapiTransactionDiagnosticStoreServiceIsNotRunning = 4164791858U,
			// Token: 0x04004B1D RID: 19229
			ErrorMoreThanOneDefaultMailTipTranslationSpecified = 124932322U,
			// Token: 0x04004B1E RID: 19230
			CompleteOrganizationUpgradeDescription = 3396334448U,
			// Token: 0x04004B1F RID: 19231
			ErrorTenantOrgInUnexpectedState = 359340039U,
			// Token: 0x04004B20 RID: 19232
			ConversationsMailboxAlreadyEnabled = 2355449289U,
			// Token: 0x04004B21 RID: 19233
			ImportE14TransportRuleCollectionInDCError = 4136277918U,
			// Token: 0x04004B22 RID: 19234
			MessageTypeAutoForward = 2041595767U,
			// Token: 0x04004B23 RID: 19235
			CasHealthOwaHttpUnknownLogoffError = 389917399U,
			// Token: 0x04004B24 RID: 19236
			CasHealthEasScenarioSyncFolderItems = 2589525087U,
			// Token: 0x04004B25 RID: 19237
			FrontEndTransportServiceDisplayName = 2148824781U,
			// Token: 0x04004B26 RID: 19238
			ComponentTaskSection = 1935468563U,
			// Token: 0x04004B27 RID: 19239
			ErrorIdAndOUSetTogetherUnderIgnoreDefaultScope = 3203686041U,
			// Token: 0x04004B28 RID: 19240
			ConfirmationMessageExportTransportRuleCollection = 1702097235U,
			// Token: 0x04004B29 RID: 19241
			ErrorRuleMissingPredicate = 3300374799U,
			// Token: 0x04004B2A RID: 19242
			ErrorRemoteLegacyWithE15NotAllowed = 972482907U,
			// Token: 0x04004B2B RID: 19243
			InstallMailboxTransportSubmissionServiceTask = 2764082182U,
			// Token: 0x04004B2C RID: 19244
			ErrorOrganizationParameterRequired = 3420250947U,
			// Token: 0x04004B2D RID: 19245
			ErrorDateRangeInvalid = 3608765512U,
			// Token: 0x04004B2E RID: 19246
			ExchangeStreamingOpticsDescription = 3282443379U,
			// Token: 0x04004B2F RID: 19247
			ErrorDepartRestrictionInvalid = 2762887375U,
			// Token: 0x04004B30 RID: 19248
			LocalSiteNameIsEmpty = 2632441174U,
			// Token: 0x04004B31 RID: 19249
			InvalidIncidentReportContent = 2084274330U,
			// Token: 0x04004B32 RID: 19250
			CasHealthHttpResponseHeaders = 885090528U,
			// Token: 0x04004B33 RID: 19251
			SetupProgressLicenseEnforcement = 157257905U,
			// Token: 0x04004B34 RID: 19252
			TenantNotificationNoNotificationRecipientsSpecified = 3161117751U,
			// Token: 0x04004B35 RID: 19253
			TestSearchTask = 1552735353U,
			// Token: 0x04004B36 RID: 19254
			SetupProgressUMFaxEnabled = 4213714110U,
			// Token: 0x04004B37 RID: 19255
			ErrorMultipleDefaultRetentionPolicy = 3012202611U,
			// Token: 0x04004B38 RID: 19256
			SetupProgressCreateOutOfTheBoxReducedMrmTags = 2018678440U,
			// Token: 0x04004B39 RID: 19257
			ComplianceSearchCreateTaskActivity = 2561639227U,
			// Token: 0x04004B3A RID: 19258
			SupportedToolsCannotFindFile = 3087351795U,
			// Token: 0x04004B3B RID: 19259
			LegacyRegistryMarkersComponentDescription = 1744727734U,
			// Token: 0x04004B3C RID: 19260
			NoMailboxAssociationIdentityProvided = 1946909737U,
			// Token: 0x04004B3D RID: 19261
			VerboseFixingEmailAddressPolicyFilterMetadata = 3215501240U,
			// Token: 0x04004B3E RID: 19262
			ADAttributeOtherPhoneNumber = 3162495226U,
			// Token: 0x04004B3F RID: 19263
			AdvertiseClientSettingsWithoutExchangeUsersPermissionGroups = 346749009U,
			// Token: 0x04004B40 RID: 19264
			NoPrivateKeyInImportedTrustedPublishingDomain = 1230533634U,
			// Token: 0x04004B41 RID: 19265
			CasHealthCasServerNotFound = 2929278810U,
			// Token: 0x04004B42 RID: 19266
			CasHealthCalendarShortName = 803789992U,
			// Token: 0x04004B43 RID: 19267
			ErrorCannotMovePublicFoldersWithNullEntryId = 924598646U,
			// Token: 0x04004B44 RID: 19268
			ChangePasswordFailed = 2473076826U,
			// Token: 0x04004B45 RID: 19269
			CasHealthOwaCredentialFailure = 282134995U,
			// Token: 0x04004B46 RID: 19270
			ErrorNetIDWithoutBypassWLIDInSet = 3365945163U,
			// Token: 0x04004B47 RID: 19271
			PhoneNumberAllowedOnlyOnE164ConsumerDialplanWithCountryCode = 3228324102U,
			// Token: 0x04004B48 RID: 19272
			UninstallOldMailSubmissionServiceTask = 1436616364U,
			// Token: 0x04004B49 RID: 19273
			DefaultAllContacts = 1537384713U,
			// Token: 0x04004B4A RID: 19274
			UsingMonitoringMailboxAuthenticationCredentials = 323037630U,
			// Token: 0x04004B4B RID: 19275
			IntegratedVDirNotSupported = 1134431673U,
			// Token: 0x04004B4C RID: 19276
			SetupProgressCreateRBACPoliciesContainer = 2381551853U,
			// Token: 0x04004B4D RID: 19277
			ProtectedServiceHostDescription = 1328045433U,
			// Token: 0x04004B4E RID: 19278
			ErrorTemplateAndTemplateDataCannotBothBeDefined = 476702017U,
			// Token: 0x04004B4F RID: 19279
			SetupComponentMidFileCopyMonitoring = 3290510799U,
			// Token: 0x04004B50 RID: 19280
			SetupProgressStartingCredentialService = 195589900U,
			// Token: 0x04004B51 RID: 19281
			CasHealthEasSyncOne = 2460972809U,
			// Token: 0x04004B52 RID: 19282
			MachinePingScenario = 2760740739U,
			// Token: 0x04004B53 RID: 19283
			ProcessUtilizationManagerServiceDescription = 1485407849U,
			// Token: 0x04004B54 RID: 19284
			TenantAlreadyHasMigrationPending = 912948631U,
			// Token: 0x04004B55 RID: 19285
			OwaMetabaseStopBinFilteringFailure = 1702242844U,
			// Token: 0x04004B56 RID: 19286
			CasHealthEasScenarioPing = 878905098U,
			// Token: 0x04004B57 RID: 19287
			CreateEcpForOwaWarning = 1340013018U,
			// Token: 0x04004B58 RID: 19288
			ConfirmationMessageTestEdgeSyncMserv = 3690425457U,
			// Token: 0x04004B59 RID: 19289
			ErrorCannotRemovePublicFolderMailboxWithFolders = 3992993999U,
			// Token: 0x04004B5A RID: 19290
			UMCallAnsweringRuleLeaveVoiceMessage = 1553189934U,
			// Token: 0x04004B5B RID: 19291
			MicrosoftExchangeContainerNotFoundException = 2393557138U,
			// Token: 0x04004B5C RID: 19292
			CannotFindSubscriptionSite = 2953927220U,
			// Token: 0x04004B5D RID: 19293
			CasHealtRemotePowerShellOpenRunspaceSucceeded = 1143552818U,
			// Token: 0x04004B5E RID: 19294
			CasHealthEasScenarioDeleteItem = 528083274U,
			// Token: 0x04004B5F RID: 19295
			ConfirmationMessageInstallSystemMessageClassification = 1564792125U,
			// Token: 0x04004B60 RID: 19296
			CasHealthWebAppLiveIdStart = 3656239515U,
			// Token: 0x04004B61 RID: 19297
			SetupProgressMailUserCountQuota = 351759919U,
			// Token: 0x04004B62 RID: 19298
			PhoneNumberIsNotE164 = 1881041876U,
			// Token: 0x04004B63 RID: 19299
			AssistantsServiceDisplayName = 724161223U,
			// Token: 0x04004B64 RID: 19300
			ErrorRmsOnlineAuthenticationCertificateNotFound = 1783998077U,
			// Token: 0x04004B65 RID: 19301
			WordIsWhiteSpace = 2311491823U,
			// Token: 0x04004B66 RID: 19302
			ErrorCannotSetJournalingReportNdrTo = 2768218355U,
			// Token: 0x04004B67 RID: 19303
			SetupProgressOwaDelegateAccessEnabled = 4195978929U,
			// Token: 0x04004B68 RID: 19304
			RMSServerIsNotConfigured = 1342738960U,
			// Token: 0x04004B69 RID: 19305
			UMNotAvailableForUserInTargetForest = 2086103397U,
			// Token: 0x04004B6A RID: 19306
			SetServiceInstanceMapResultCodeUnspecifiedError = 2418812611U,
			// Token: 0x04004B6B RID: 19307
			SetupComponentProvisioningFeatures = 3321302356U,
			// Token: 0x04004B6C RID: 19308
			CasHealthOwaTrustAnyCertificate = 4172450099U,
			// Token: 0x04004B6D RID: 19309
			CasHealthEasScenarioOptions = 886790004U,
			// Token: 0x04004B6E RID: 19310
			ErrorCannotDeleteGlobalThrottlingPolicy = 677161662U,
			// Token: 0x04004B6F RID: 19311
			NewMailboxSearchActivity = 853257855U,
			// Token: 0x04004B70 RID: 19312
			JournalingParameterErrorGccWithScope = 1386608555U,
			// Token: 0x04004B71 RID: 19313
			CasHealthOwaNoAuthChallenge = 2743468428U,
			// Token: 0x04004B72 RID: 19314
			InstallMailboxReplicationServiceTask = 3256293617U,
			// Token: 0x04004B73 RID: 19315
			ExportAutoDiscoverSameForest = 3832614491U,
			// Token: 0x04004B74 RID: 19316
			JournalRuleCorrupt = 2593828216U,
			// Token: 0x04004B75 RID: 19317
			CopyStatusSuspended = 2605454650U,
			// Token: 0x04004B76 RID: 19318
			BestEffortNotAllowedInServerModeException = 3374660851U,
			// Token: 0x04004B77 RID: 19319
			RemoveProvisionedServerDescription = 2345003377U,
			// Token: 0x04004B78 RID: 19320
			ErrorAuthSetNewEffectDate = 329310285U,
			// Token: 0x04004B79 RID: 19321
			VerboseResolvingCustomRecipientWriteScope = 494398490U,
			// Token: 0x04004B7A RID: 19322
			UninstallTranscodingServiceEx = 1045130098U,
			// Token: 0x04004B7B RID: 19323
			ConfirmationMessageRemoveReportingVirtualDirectory = 21508778U,
			// Token: 0x04004B7C RID: 19324
			MtrtMessageSpamAdditional = 934995448U,
			// Token: 0x04004B7D RID: 19325
			ErrorProvisioningReconciliationCookieNotSet = 1727429145U,
			// Token: 0x04004B7E RID: 19326
			ErrorCannotMigratePublicFolderIntoNonPublicFolderMailbox = 2069264155U,
			// Token: 0x04004B7F RID: 19327
			GetCalendarDiagnosticLogNoCleanGoidErrorMessage = 864818849U,
			// Token: 0x04004B80 RID: 19328
			ADAttributeCustomAttribute8 = 1377545174U,
			// Token: 0x04004B81 RID: 19329
			ErrorDomainControllerNotSpecifiedWithUsnForReconciliationSearch = 1646617707U,
			// Token: 0x04004B82 RID: 19330
			SetupComponentConfiguringMDB = 3017732590U,
			// Token: 0x04004B83 RID: 19331
			ProgressStopUpdateAD = 815548093U,
			// Token: 0x04004B84 RID: 19332
			Warning = 1861340610U,
			// Token: 0x04004B85 RID: 19333
			ADAttributeManager = 494686544U,
			// Token: 0x04004B86 RID: 19334
			PageCookieInterruptedException = 2844240268U,
			// Token: 0x04004B87 RID: 19335
			DatacenterClientAccessPerfCountersComponentDescription = 3669527025U,
			// Token: 0x04004B88 RID: 19336
			IndividualRecipient = 210030056U,
			// Token: 0x04004B89 RID: 19337
			MalboxFolderRightsCreateItems = 4182624490U,
			// Token: 0x04004B8A RID: 19338
			RuleStateDisabled = 4233384325U,
			// Token: 0x04004B8B RID: 19339
			MalboxFolderRightsReadItems = 1187378442U,
			// Token: 0x04004B8C RID: 19340
			SetupProgressSyncAccountsMaxAccountsQuota = 4018390487U,
			// Token: 0x04004B8D RID: 19341
			DatabaseSeedStatusLabelWritten = 363043027U,
			// Token: 0x04004B8E RID: 19342
			ErrorSetPasswordForLogonDisabledAccount = 1615913674U,
			// Token: 0x04004B8F RID: 19343
			MonitoringServiceCheckDesc = 303389116U,
			// Token: 0x04004B90 RID: 19344
			SiteParameterRequired = 2694075755U,
			// Token: 0x04004B91 RID: 19345
			IisTasksVirtualDirectoryValidationProperty = 2246430441U,
			// Token: 0x04004B92 RID: 19346
			NullCurrentOrganizationIdException = 3597664875U,
			// Token: 0x04004B93 RID: 19347
			ClassificationRuleCollectionIllegalScopedSetOobOperation = 769488995U,
			// Token: 0x04004B94 RID: 19348
			InvalidSmtpAddress = 3042237373U,
			// Token: 0x04004B95 RID: 19349
			TestOrganizationRelationshipError = 4148731813U,
			// Token: 0x04004B96 RID: 19350
			SetupProgressStartingContentIndexingService = 979959660U,
			// Token: 0x04004B97 RID: 19351
			CasHealthOwaLogonError = 308457205U,
			// Token: 0x04004B98 RID: 19352
			Error_KnowniPhoneIssues = 1773264523U,
			// Token: 0x04004B99 RID: 19353
			OwaGzipCannotBeSetToLegacyVirtualDirectoryWhenMailboxRoleInstalled = 2137414559U,
			// Token: 0x04004B9A RID: 19354
			ClientAccessExchangeCertificateComponentDescription = 2932389186U,
			// Token: 0x04004B9B RID: 19355
			SenderAndRmsOnlineParametersCannotBeCombined = 1040599336U,
			// Token: 0x04004B9C RID: 19356
			TopologyServiceDisplayName = 1938975541U,
			// Token: 0x04004B9D RID: 19357
			ErrorChangeConfigurationNotSupported = 1618002793U,
			// Token: 0x04004B9E RID: 19358
			InterceptorErrorConditionHeaderValueMissing = 2467206592U,
			// Token: 0x04004B9F RID: 19359
			VerboseCheckIISConfiguration = 1523783911U,
			// Token: 0x04004BA0 RID: 19360
			SetupComponentADSchema = 3024861528U,
			// Token: 0x04004BA1 RID: 19361
			InstallingIMAP4Service = 4107219633U,
			// Token: 0x04004BA2 RID: 19362
			MSExchangeMGMTDisplayName = 2128405927U,
			// Token: 0x04004BA3 RID: 19363
			AdminAuditLogSearchNegativeResultSize = 2891009079U,
			// Token: 0x04004BA4 RID: 19364
			ConfirmationMessageNewEdgeSyncEhfConnectorOnLocalSite = 999144299U,
			// Token: 0x04004BA5 RID: 19365
			SetupProgressMailTipsEnabled = 2103941010U,
			// Token: 0x04004BA6 RID: 19366
			CopyStatusInitializing = 1373187244U,
			// Token: 0x04004BA7 RID: 19367
			ErrorCannotSetPowerShellMaxTenantRunspaces = 3560770236U,
			// Token: 0x04004BA8 RID: 19368
			StartADTopologyService = 910317825U,
			// Token: 0x04004BA9 RID: 19369
			InvalidRuleSearchFilterMissingElements = 1149547458U,
			// Token: 0x04004BAA RID: 19370
			SpecifiedOUNotFound = 2563311167U,
			// Token: 0x04004BAB RID: 19371
			MtrtAddBlindCopyToRecipient = 3938326230U,
			// Token: 0x04004BAC RID: 19372
			NoSLCCertChainInImportedTrustedPublishingDomain = 67550991U,
			// Token: 0x04004BAD RID: 19373
			SetupProgressStopHealthManagerService = 529637304U,
			// Token: 0x04004BAE RID: 19374
			ErrorPowerShellCorrupted = 1612938185U,
			// Token: 0x04004BAF RID: 19375
			ErrorTextMessageInsufficientPermission = 1619534902U,
			// Token: 0x04004BB0 RID: 19376
			DlpPolicyDescriptionDisplayName = 2287537271U,
			// Token: 0x04004BB1 RID: 19377
			WarningInboxRuleOutlookBlobExists = 514153900U,
			// Token: 0x04004BB2 RID: 19378
			RmsUrlsCannotBeSet = 3587729804U,
			// Token: 0x04004BB3 RID: 19379
			DebugEndSaveDataObject = 247906216U,
			// Token: 0x04004BB4 RID: 19380
			ConfirmationMessageStartEdgeSynchronization = 243743017U,
			// Token: 0x04004BB5 RID: 19381
			VerboseResolvingSecurityPrinciplals = 2031953882U,
			// Token: 0x04004BB6 RID: 19382
			WarningLegacyExchangeServerForMailContact = 2199141127U,
			// Token: 0x04004BB7 RID: 19383
			ErrorTemplatesMayNotContainRulesWithImmutableIds = 3687261608U,
			// Token: 0x04004BB8 RID: 19384
			CertificateStatusRevoked = 1163984313U,
			// Token: 0x04004BB9 RID: 19385
			CasHealthOwaPingError = 4269203724U,
			// Token: 0x04004BBA RID: 19386
			ReservedString5 = 4054043082U,
			// Token: 0x04004BBB RID: 19387
			WarningDatabaseScopeCreationApplicableOnlyInSP = 450966693U,
			// Token: 0x04004BBC RID: 19388
			ServiceNameEws = 3203524443U,
			// Token: 0x04004BBD RID: 19389
			MailboxAssociationMailboxNotFound = 645544640U,
			// Token: 0x04004BBE RID: 19390
			SetupComponentMidFileCopyBridgehead = 1343310908U,
			// Token: 0x04004BBF RID: 19391
			NodePausedCheckDesc = 592390813U,
			// Token: 0x04004BC0 RID: 19392
			AllLinkedGroupMembers = 2811670542U,
			// Token: 0x04004BC1 RID: 19393
			SharedCacheServiceDescription = 1360134828U,
			// Token: 0x04004BC2 RID: 19394
			InstallKeynoteConnectorServiceTask = 3237220889U,
			// Token: 0x04004BC3 RID: 19395
			InvalidIncidentReportOriginalMail = 1604244669U,
			// Token: 0x04004BC4 RID: 19396
			ErrorConflictingMailboxes = 2228796246U,
			// Token: 0x04004BC5 RID: 19397
			RemoveVirtualDirectoryCouldNotAccessWebServicesRootException = 1366760397U,
			// Token: 0x04004BC6 RID: 19398
			ErrorInvalidAuthServerTypeValue = 4051542195U,
			// Token: 0x04004BC7 RID: 19399
			ErrorCorruptRuleAction = 4002590677U,
			// Token: 0x04004BC8 RID: 19400
			ErrorRunspaceServerSettingsNotFound = 1276593436U,
			// Token: 0x04004BC9 RID: 19401
			ClassificationRuleCollectionOffendingListSeparator = 4278888973U,
			// Token: 0x04004BCA RID: 19402
			ScenarioEwsConvertId = 224359057U,
			// Token: 0x04004BCB RID: 19403
			ProgressCopyingCopyLogFiles = 25431416U,
			// Token: 0x04004BCC RID: 19404
			DisasterRecoveryAdminToolsRoleDescription = 799867258U,
			// Token: 0x04004BCD RID: 19405
			ErrorEnabledPrimarySmtpAndEmailAddressTemplatesSpecified = 3785983711U,
			// Token: 0x04004BCE RID: 19406
			ErrorBPAMergeFileLoad = 1836636963U,
			// Token: 0x04004BCF RID: 19407
			IISNotInstalledException = 2431707337U,
			// Token: 0x04004BD0 RID: 19408
			SetupComponentPreSetupAdminTools = 1935215586U,
			// Token: 0x04004BD1 RID: 19409
			ErrorCannotDetermineRequester = 909539378U,
			// Token: 0x04004BD2 RID: 19410
			VerboseFixingEmailAddressPoliciesInNativeMode = 2655838320U,
			// Token: 0x04004BD3 RID: 19411
			DebugEndUpnUniquenessCheck = 937945415U,
			// Token: 0x04004BD4 RID: 19412
			InfoPLCreated = 2687794018U,
			// Token: 0x04004BD5 RID: 19413
			SetupProgressRemoveServerObject = 2580842796U,
			// Token: 0x04004BD6 RID: 19414
			UnknownFailureFromCiRpcServer = 1069636970U,
			// Token: 0x04004BD7 RID: 19415
			WarningActionWillOnlyBeAppliedIfMessageIsNotRejected = 2674744913U,
			// Token: 0x04004BD8 RID: 19416
			CookieNotUpdated = 2996271904U,
			// Token: 0x04004BD9 RID: 19417
			ProcessingAceActivity = 1484844461U,
			// Token: 0x04004BDA RID: 19418
			CasHealthOwaFbaAuthTypeExpected = 2105969147U,
			// Token: 0x04004BDB RID: 19419
			ConfirmationMessageSendMapiSubmitSystemProbe = 1356174462U,
			// Token: 0x04004BDC RID: 19420
			ConfirmationMessageStartELCAssistant = 3985182496U,
			// Token: 0x04004BDD RID: 19421
			MobileDeviceLogNoLogsExist = 1214391541U,
			// Token: 0x04004BDE RID: 19422
			ErrorRpcHttpMustSpecifyInternalClientAuthenticationMethodOrDefaultAuthenticationMethod = 2991967653U,
			// Token: 0x04004BDF RID: 19423
			MtrtEventExpand = 3696548465U,
			// Token: 0x04004BE0 RID: 19424
			EmptyTargetMailbox = 159616798U,
			// Token: 0x04004BE1 RID: 19425
			ErrorDistributionGroupNameTooLong = 1619798746U,
			// Token: 0x04004BE2 RID: 19426
			SetupProgressCreateOutOfTheBoxDefaultMRMTags = 2654720989U,
			// Token: 0x04004BE3 RID: 19427
			ErrorTargetMailboxDatabaseVersionUnsupported = 4249074819U,
			// Token: 0x04004BE4 RID: 19428
			SetupComponentConfigurationFrontendTransport = 1223504853U,
			// Token: 0x04004BE5 RID: 19429
			RepairUrgencyHigh = 2718544146U,
			// Token: 0x04004BE6 RID: 19430
			SetupProgressUpdatingResourcePropertySchema = 2897887400U,
			// Token: 0x04004BE7 RID: 19431
			DefaultAllDistributionLists = 4269635969U,
			// Token: 0x04004BE8 RID: 19432
			SetupProgressCreateGlobalAutoDiscoverContainer = 811249870U,
			// Token: 0x04004BE9 RID: 19433
			MigrationCompleteAfterScheduledBatchesOnly = 2193598558U,
			// Token: 0x04004BEA RID: 19434
			UMMailboxPolicySetAllowFaxError = 3992939044U,
			// Token: 0x04004BEB RID: 19435
			AttachmentFilterNoExceptionConnector = 1946128370U,
			// Token: 0x04004BEC RID: 19436
			ChangePasswordLockedOut = 3115336137U,
			// Token: 0x04004BED RID: 19437
			SetupProgressCreateWLMContainer = 4017283327U,
			// Token: 0x04004BEE RID: 19438
			GlobalLocatorServiceResultFailure = 44339415U,
			// Token: 0x04004BEF RID: 19439
			CannotRunForeignConnectorTaskOnEdge = 2231509304U,
			// Token: 0x04004BF0 RID: 19440
			CasHealthOwaAuthMethodHeader = 4121265404U,
			// Token: 0x04004BF1 RID: 19441
			TestSearchCheckServer = 3113324051U,
			// Token: 0x04004BF2 RID: 19442
			SetupProgressUpdateTenantMailboxes = 1381834853U,
			// Token: 0x04004BF3 RID: 19443
			ErrorTrustAlreadyDefined = 3755531083U,
			// Token: 0x04004BF4 RID: 19444
			ConfirmationMessageSetOrganizationConfig = 3285185239U,
			// Token: 0x04004BF5 RID: 19445
			RequiredIdentityInformationNotSet = 3332580362U,
			// Token: 0x04004BF6 RID: 19446
			ErrorSetOWAMailboxPolicyToE12User = 3365079287U,
			// Token: 0x04004BF7 RID: 19447
			SetupProgressRemovingPublicFolderDatabase = 1290509263U,
			// Token: 0x04004BF8 RID: 19448
			ProgressCopyingLogFiles = 2642450701U,
			// Token: 0x04004BF9 RID: 19449
			SetupComponentProvisionServer = 1381261690U,
			// Token: 0x04004BFA RID: 19450
			NeedEitherAssemblyPathOrValidName = 4012071978U,
			// Token: 0x04004BFB RID: 19451
			ErrorFindCertificateOnServerObject = 2086818621U,
			// Token: 0x04004BFC RID: 19452
			ErrorProvisioningReconciliationConfigNotFound = 1460008623U,
			// Token: 0x04004BFD RID: 19453
			SetupProgressStopEdgeTransportService = 3846405471U,
			// Token: 0x04004BFE RID: 19454
			DebugStartInAcceptedDomainCheck = 3252841297U,
			// Token: 0x04004BFF RID: 19455
			UninstallMailSubmissionServiceTask = 1036372211U,
			// Token: 0x04004C00 RID: 19456
			InstallClientAccessIisWebServiceExtensions = 1475578476U,
			// Token: 0x04004C01 RID: 19457
			CouldNotLocateAnyTeamMailbox = 441773451U,
			// Token: 0x04004C02 RID: 19458
			CertificateStatusUnknown = 3260271077U,
			// Token: 0x04004C03 RID: 19459
			VariablesSection = 1318485394U,
			// Token: 0x04004C04 RID: 19460
			InfoCheckingRmsOnlineAuthenticationCertificate = 3469456862U,
			// Token: 0x04004C05 RID: 19461
			MtrtNotifySender = 2835213035U,
			// Token: 0x04004C06 RID: 19462
			TransportSettingsNotFound = 751112921U,
			// Token: 0x04004C07 RID: 19463
			SetupProgressCreateRBACRoleAssignments = 480800478U,
			// Token: 0x04004C08 RID: 19464
			GetContentIndexTask = 3662015180U,
			// Token: 0x04004C09 RID: 19465
			BackSyncFailedToConvertSyncObjectToDirectoryObject = 950974516U,
			// Token: 0x04004C0A RID: 19466
			ADAttributePagerNumber = 3850073087U,
			// Token: 0x04004C0B RID: 19467
			SetupProgressEnableSelfManagement = 2398741750U,
			// Token: 0x04004C0C RID: 19468
			ADAttributePhoneNumber = 4137481806U,
			// Token: 0x04004C0D RID: 19469
			TenantNotificationVerboseNotSendingEmailDailyCap = 771734573U,
			// Token: 0x04004C0E RID: 19470
			DagNetworkAllDisabledWarning = 2026505547U,
			// Token: 0x04004C0F RID: 19471
			ContentIndexServiceDescription = 1120293486U,
			// Token: 0x04004C10 RID: 19472
			SetupProgressGALSyncEnabled = 3538510592U,
			// Token: 0x04004C11 RID: 19473
			ErrorNameNotSet = 3240052672U,
			// Token: 0x04004C12 RID: 19474
			StartingMomService = 2114850440U,
			// Token: 0x04004C13 RID: 19475
			SetupProgressRecipientMailSubmissionRateQuota = 1987393790U,
			// Token: 0x04004C14 RID: 19476
			MalboxFolderRightsEditOwnedItems = 2419166909U,
			// Token: 0x04004C15 RID: 19477
			SetupPerimeterSafelistingUIMode = 3072162476U,
			// Token: 0x04004C16 RID: 19478
			VerboseSearchingAssigneeInConfigNC = 1993693877U,
			// Token: 0x04004C17 RID: 19479
			AllForeignAccounts = 2235869021U,
			// Token: 0x04004C18 RID: 19480
			CasHealthEasSyncZeroScenarioDescription = 1920148531U,
			// Token: 0x04004C19 RID: 19481
			SetupProgressMaxSendTransportQuota = 4224229383U,
			// Token: 0x04004C1A RID: 19482
			FfoWebServicePreConfigComponentDescription = 2270748102U,
			// Token: 0x04004C1B RID: 19483
			DisasterRecoveryUnifiedMessagingRoleDescription = 3381713806U,
			// Token: 0x04004C1C RID: 19484
			SetupProgressActiveSyncEnabled = 2423295274U,
			// Token: 0x04004C1D RID: 19485
			ErrorInvalidAuditOwnerOperationType = 1897854438U,
			// Token: 0x04004C1E RID: 19486
			ActiveDirectoryConnectivityTransactionsAllSucceeded = 4178137973U,
			// Token: 0x04004C1F RID: 19487
			DefaultPublicFolders = 3378630967U,
			// Token: 0x04004C20 RID: 19488
			SetupProgressCreateAutoGroupRetentionPolicyTag = 2849913626U,
			// Token: 0x04004C21 RID: 19489
			MoveStatusUnknown = 1489480989U,
			// Token: 0x04004C22 RID: 19490
			CasHealthOwaLongName = 2569295017U,
			// Token: 0x04004C23 RID: 19491
			CasHealthEcpShortName = 2496242404U,
			// Token: 0x04004C24 RID: 19492
			CopyStatusMounting = 1208301054U,
			// Token: 0x04004C25 RID: 19493
			CopyOperation = 2846914028U,
			// Token: 0x04004C26 RID: 19494
			FfoWebServiceProvisionComponentDescription = 3552826330U,
			// Token: 0x04004C27 RID: 19495
			ErrorConflictResourceCustom = 1984115551U,
			// Token: 0x04004C28 RID: 19496
			InstallAssistantsServiceTask = 3025732470U,
			// Token: 0x04004C29 RID: 19497
			SetupProgressCreateOWAMailboxPolicyContainers = 1810706551U,
			// Token: 0x04004C2A RID: 19498
			KeynoteConnectorServiceDisplayName = 2768464912U,
			// Token: 0x04004C2B RID: 19499
			ADAttributeCustomAttribute5 = 1377545163U,
			// Token: 0x04004C2C RID: 19500
			ADAttributeCustomAttribute1 = 1377545167U,
			// Token: 0x04004C2D RID: 19501
			ErrorFilterParametersIntraOrg = 1549280152U,
			// Token: 0x04004C2E RID: 19502
			CasHealthWebAppLiveIdEnd = 3721623660U,
			// Token: 0x04004C2F RID: 19503
			WebServiceRoleEntryNotSupportParametersAndSnapin = 2747907193U,
			// Token: 0x04004C30 RID: 19504
			MtrtEventFail = 1151252861U,
			// Token: 0x04004C31 RID: 19505
			WarningMessageSizeRestrictionOutOfSync = 1767955380U,
			// Token: 0x04004C32 RID: 19506
			MigrationCSVNotAllowed = 1355366283U,
			// Token: 0x04004C33 RID: 19507
			NeedIisRestartForChangingECPFeatureWarning = 3372077054U,
			// Token: 0x04004C34 RID: 19508
			ClassificationRuleCollectionUnexpectedContents = 4163377893U,
			// Token: 0x04004C35 RID: 19509
			BPADownloadingUpdates = 2193176105U,
			// Token: 0x04004C36 RID: 19510
			FoundMultipleObjectById = 1329891945U,
			// Token: 0x04004C37 RID: 19511
			CasHealthSpecifyMailboxForResetCredentials = 2783321364U,
			// Token: 0x04004C38 RID: 19512
			SetupComponentPostSetupCafe = 706028660U,
			// Token: 0x04004C39 RID: 19513
			ConfirmationMessageSetIPAllowListProvidersConfig = 475854284U,
			// Token: 0x04004C3A RID: 19514
			SetupComponentConfiguringRpcClientAccessService = 863845264U,
			// Token: 0x04004C3B RID: 19515
			ErrorAddGroupMemberCrossTenant = 101589004U,
			// Token: 0x04004C3C RID: 19516
			ErrorBPAOutputConflict = 4151753170U,
			// Token: 0x04004C3D RID: 19517
			ErrorRemoteMailboxImportNeedRemoteProxy = 1642010523U,
			// Token: 0x04004C3E RID: 19518
			ServicesComponentDescription = 1209054947U,
			// Token: 0x04004C3F RID: 19519
			StartingOnePointService = 2393820385U,
			// Token: 0x04004C40 RID: 19520
			ErrorCannotResumeIfNotSuspended = 2762012249U,
			// Token: 0x04004C41 RID: 19521
			SetupProgressRemovingMailboxDatabase = 2462309444U,
			// Token: 0x04004C42 RID: 19522
			MobileDeviceLogNotRetrieved = 531835631U,
			// Token: 0x04004C43 RID: 19523
			DeletionAndUnsearchableNotPermitted = 3816576111U,
			// Token: 0x04004C44 RID: 19524
			InboxRuleDescriptionOr = 1467203807U,
			// Token: 0x04004C45 RID: 19525
			MonitoringCorrelationServiceDisplayName = 1012815040U,
			// Token: 0x04004C46 RID: 19526
			ProgressEmailAddressPolicyPreparingPriority = 824920009U,
			// Token: 0x04004C47 RID: 19527
			MtrtApplyHtmlDisclaimer = 2811275637U,
			// Token: 0x04004C48 RID: 19528
			UnableToConnect = 2654165210U,
			// Token: 0x04004C49 RID: 19529
			UninstallExchangeOrganizationDescription = 1177180156U,
			// Token: 0x04004C4A RID: 19530
			CasHealthScenarioDescription = 302716089U,
			// Token: 0x04004C4B RID: 19531
			DualWriteSaveWarningMessage = 1241635965U,
			// Token: 0x04004C4C RID: 19532
			ErrorCannotChangeName = 3223564936U,
			// Token: 0x04004C4D RID: 19533
			SetupComponentPostSetupAdminTools = 2672737351U,
			// Token: 0x04004C4E RID: 19534
			MtrtAddToRecipient = 1630998932U,
			// Token: 0x04004C4F RID: 19535
			NeedToSpecifyADSiteObject = 624509981U,
			// Token: 0x04004C50 RID: 19536
			ErrorConfigurationOnly = 3852698972U,
			// Token: 0x04004C51 RID: 19537
			DatacenterSetupComponentPerfCountersBridgehead = 1486813282U,
			// Token: 0x04004C52 RID: 19538
			FBAServiceDisplayName = 915562217U,
			// Token: 0x04004C53 RID: 19539
			TransitionInfoLabelLastSuccessTransition = 2731341333U,
			// Token: 0x04004C54 RID: 19540
			ErrorPrimarySmtpAndWindowsAddressDifferent = 1752948545U,
			// Token: 0x04004C55 RID: 19541
			ErrorWriteOpOnDehydratedTenant = 1221524445U,
			// Token: 0x04004C56 RID: 19542
			ErrorRmsOnlineAuthenticationCertificateNotYetValid = 3097067489U,
			// Token: 0x04004C57 RID: 19543
			UninstallWatchDogServiceTask = 4205247815U,
			// Token: 0x04004C58 RID: 19544
			ErrorSpecifyAutoMappingOnNonFullAccess = 266841953U,
			// Token: 0x04004C59 RID: 19545
			ClientAccessPrereqCheck = 639692992U,
			// Token: 0x04004C5A RID: 19546
			ConfirmationMessageAuthSettingOutage = 1253954375U,
			// Token: 0x04004C5B RID: 19547
			WarningModerationWithWrongGroupType = 846242402U,
			// Token: 0x04004C5C RID: 19548
			CasHealthOwaMailboxServerHeader = 1495738752U,
			// Token: 0x04004C5D RID: 19549
			DebugEndEnablingUM = 2361565504U,
			// Token: 0x04004C5E RID: 19550
			FederatedOrganizationIdNotSet = 332863269U,
			// Token: 0x04004C5F RID: 19551
			SetupProgressCreateDSNCustomizationContainer = 1066400057U,
			// Token: 0x04004C60 RID: 19552
			SetupProgressStoppingMailboxReplicationService = 4100727451U,
			// Token: 0x04004C61 RID: 19553
			MalboxFolderRightsFolderContact = 1323608086U,
			// Token: 0x04004C62 RID: 19554
			MapiSubmitSystemProbeNoMessageFound = 3961198570U,
			// Token: 0x04004C63 RID: 19555
			WarningNonemptyManagedFolderNotDeleted = 3923667863U,
			// Token: 0x04004C64 RID: 19556
			SetupProgressCreateMailboxManagedFolders = 2641950738U,
			// Token: 0x04004C65 RID: 19557
			InvalidTimeRange = 1628899399U,
			// Token: 0x04004C66 RID: 19558
			SetupProgressCreateClientAccessContainer = 4259877028U,
			// Token: 0x04004C67 RID: 19559
			SetupPrereqAnalysisCompleted = 1743121281U,
			// Token: 0x04004C68 RID: 19560
			RequiredEndDateParameter = 2722004787U,
			// Token: 0x04004C69 RID: 19561
			RpcClientAccessServiceDisplayName = 978731224U,
			// Token: 0x04004C6A RID: 19562
			WarningNoCookiesRemovedForRollback = 887526467U,
			// Token: 0x04004C6B RID: 19563
			SetupMultiEngineAVEnabled = 2334907634U,
			// Token: 0x04004C6C RID: 19564
			UninstallNotificationsBrokerServiceTask = 1255598415U,
			// Token: 0x04004C6D RID: 19565
			ADAttributeFirstName = 2986926906U,
			// Token: 0x04004C6E RID: 19566
			DebugStartRetrievingAuditConfig = 4141971325U,
			// Token: 0x04004C6F RID: 19567
			EwsNotSupportedException = 1003903261U,
			// Token: 0x04004C70 RID: 19568
			IncludeAutoDiscoverOnlyApplicableToCAS = 343112327U,
			// Token: 0x04004C71 RID: 19569
			ReplicationCheckResultUndefined = 863604629U,
			// Token: 0x04004C72 RID: 19570
			CasHealthOwaLogoffError = 4288698983U,
			// Token: 0x04004C73 RID: 19571
			DagTaskDone = 2695605747U,
			// Token: 0x04004C74 RID: 19572
			MustProvideNonEmptyStringForIdentity = 1302133406U,
			// Token: 0x04004C75 RID: 19573
			WarningDeleteTemplate = 1427317623U,
			// Token: 0x04004C76 RID: 19574
			SetupProgressStoppingWMIService = 1501174110U,
			// Token: 0x04004C77 RID: 19575
			ConfirmationMessageStopELCAssistant = 3074556176U,
			// Token: 0x04004C78 RID: 19576
			MalboxFolderRightsDeleteOwnedItems = 62572758U,
			// Token: 0x04004C79 RID: 19577
			ErrorAuthNewCertificateNeeded = 2954092362U,
			// Token: 0x04004C7A RID: 19578
			ContentIndexingServiceStillInstalled = 2724814698U,
			// Token: 0x04004C7B RID: 19579
			CasHealthOwaConnectionRefused = 3234641110U,
			// Token: 0x04004C7C RID: 19580
			NoMatchingUMMailboxPolicyInTargetForest = 3697667913U,
			// Token: 0x04004C7D RID: 19581
			ContentIndexingPHStubNotFound = 1725408952U,
			// Token: 0x04004C7E RID: 19582
			ConfirmationMessageTestMailflow = 4155200793U,
			// Token: 0x04004C7F RID: 19583
			ADAttributeOtherFaxNumber = 3689464497U,
			// Token: 0x04004C80 RID: 19584
			ErrorChildObjectTypeParameter = 2188750956U,
			// Token: 0x04004C81 RID: 19585
			SetupProgressCreateDag = 3834576904U,
			// Token: 0x04004C82 RID: 19586
			ReplayLagStatusLabelActual = 3477555365U,
			// Token: 0x04004C83 RID: 19587
			MtrtPrependSubject = 136993055U,
			// Token: 0x04004C84 RID: 19588
			CannotRemoveUMCRCertificate = 3630035827U,
			// Token: 0x04004C85 RID: 19589
			Error_MessageClassFilter = 2224870290U,
			// Token: 0x04004C86 RID: 19590
			MetabaseGetPropertiesFailure = 1856631791U,
			// Token: 0x04004C87 RID: 19591
			FolderMoveRequestCheckComplete = 2911430177U,
			// Token: 0x04004C88 RID: 19592
			ConfirmationMessageNewEdgeSyncServiceConfigOnLocalSite = 106773198U,
			// Token: 0x04004C89 RID: 19593
			InstallMonitoringCorrelationServiceTask = 983241257U,
			// Token: 0x04004C8A RID: 19594
			ConfirmationMessageUpdateSyncStatistics = 2196859003U,
			// Token: 0x04004C8B RID: 19595
			ClientAccessRoleDisplayName = 3229808788U,
			// Token: 0x04004C8C RID: 19596
			ConfirmationMessageNewMicrosoftExchangeRecipient = 1940704520U,
			// Token: 0x04004C8D RID: 19597
			GzipCannotBeSetToError = 920948119U,
			// Token: 0x04004C8E RID: 19598
			ThrottlingServiceDescription = 4130365422U,
			// Token: 0x04004C8F RID: 19599
			FileLocationNotChanged = 2064866056U,
			// Token: 0x04004C90 RID: 19600
			ConversationsNoConversationsFound = 873161575U,
			// Token: 0x04004C91 RID: 19601
			ErrorCannotTurnOnBothAndAndRemove = 3592788208U,
			// Token: 0x04004C92 RID: 19602
			InfoGetRacAndClc = 3820850055U,
			// Token: 0x04004C93 RID: 19603
			SetupProgressStoppingHygieneUpdateService = 1644641079U,
			// Token: 0x04004C94 RID: 19604
			TransportSyncManagerServiceDescription = 91086936U,
			// Token: 0x04004C95 RID: 19605
			RejectMessageActionIsBeingOverridded = 3134498491U,
			// Token: 0x04004C96 RID: 19606
			SetServiceInstanceMapResultCodePartitionUnavailable = 4017981356U,
			// Token: 0x04004C97 RID: 19607
			SetupProgressStoppingContentIndexingService = 3244118776U,
			// Token: 0x04004C98 RID: 19608
			PhoneNumberInvalidCountryCode = 2854796459U,
			// Token: 0x04004C99 RID: 19609
			IrmLicensingIsDisabled = 406334368U,
			// Token: 0x04004C9A RID: 19610
			ErrorDisableMailboxWithJournalArchiveWithDirSync = 4064249999U,
			// Token: 0x04004C9B RID: 19611
			FederationTrustHasAllStsCertificates = 178490484U,
			// Token: 0x04004C9C RID: 19612
			SetupComponentPreSetupGateway = 2935896590U,
			// Token: 0x04004C9D RID: 19613
			ErrorMailTipSetTranslationsWithoutDefault = 2801109101U,
			// Token: 0x04004C9E RID: 19614
			InstallThrottlingServiceTask = 2060695020U,
			// Token: 0x04004C9F RID: 19615
			SetupComponentConfiguringMailbox = 2377371197U,
			// Token: 0x04004CA0 RID: 19616
			ArchiveConnectivityResultArchiveNotActive = 1391409413U,
			// Token: 0x04004CA1 RID: 19617
			ReplicationCheckResultFailed = 2302151400U,
			// Token: 0x04004CA2 RID: 19618
			SuspendWRTCPreventCompletionCannotBeSetOnNewRequests = 4085097797U,
			// Token: 0x04004CA3 RID: 19619
			ErrorMultipleJournalArchiveAddress = 221534809U,
			// Token: 0x04004CA4 RID: 19620
			ConfirmationMessageTestFederationTrust = 2808132619U,
			// Token: 0x04004CA5 RID: 19621
			DelegateRoleTypeViewOnlyAdmin = 3020149749U,
			// Token: 0x04004CA6 RID: 19622
			ServiceNameOab = 3983242292U,
			// Token: 0x04004CA7 RID: 19623
			ScenarioOfflineAddressBook = 2378120020U,
			// Token: 0x04004CA8 RID: 19624
			TestSearchStatus = 4198747660U,
			// Token: 0x04004CA9 RID: 19625
			SetupProgressApplicationImpersonationEnabled = 2394040785U,
			// Token: 0x04004CAA RID: 19626
			SetupProgressStartingIISAdminService = 2315436063U,
			// Token: 0x04004CAB RID: 19627
			SetupComponentMidFileCopyFrontendTransport = 1036352676U,
			// Token: 0x04004CAC RID: 19628
			ErrorRoomMailboxPasswordCannotBeSetIfEnableRoomMailboxAccountIsFalse = 993270375U,
			// Token: 0x04004CAD RID: 19629
			CannotSwitchLinkedInAccount = 2845208078U,
			// Token: 0x04004CAE RID: 19630
			InfoRmsVersionChecked = 558509551U,
			// Token: 0x04004CAF RID: 19631
			LogOnlyOperation = 3290100793U,
			// Token: 0x04004CB0 RID: 19632
			CasHealthOwaAuthFailExternal = 303672627U,
			// Token: 0x04004CB1 RID: 19633
			CertificateStatusDateInvalid = 191693082U,
			// Token: 0x04004CB2 RID: 19634
			MustBeUnpacked = 1917741727U,
			// Token: 0x04004CB3 RID: 19635
			ClientAccessEcpComponentDescription = 3480344122U,
			// Token: 0x04004CB4 RID: 19636
			PublishingNotEnabled = 1452889109U,
			// Token: 0x04004CB5 RID: 19637
			EmptyTaskListException = 1027614433U,
			// Token: 0x04004CB6 RID: 19638
			WarningReplicationLatency = 1075761718U,
			// Token: 0x04004CB7 RID: 19639
			NoWebServicesExternalUrlFoundException = 3882871374U,
			// Token: 0x04004CB8 RID: 19640
			MigrationPartitionMailboxAmbiguous = 4174322812U,
			// Token: 0x04004CB9 RID: 19641
			SetupComponentMidFileCopyGateway = 209372995U,
			// Token: 0x04004CBA RID: 19642
			SetupProgressListOpenFiles = 3317770113U,
			// Token: 0x04004CBB RID: 19643
			SupportedToolsContainsInconsistentData = 4049833125U,
			// Token: 0x04004CBC RID: 19644
			CasHealthOwaGetLogonPageSucceeded = 2266049675U,
			// Token: 0x04004CBD RID: 19645
			SupportedToolsUnableToGetToolData = 1916087801U,
			// Token: 0x04004CBE RID: 19646
			ProgressStatusFailed = 1190886562U,
			// Token: 0x04004CBF RID: 19647
			AvailabilityAddressSpaceInvalidTargetAutodiscoverEpr = 2543735748U,
			// Token: 0x04004CC0 RID: 19648
			ErrorStartAfterEarlierThanCompleteAfter = 3180631268U,
			// Token: 0x04004CC1 RID: 19649
			ProvisioningRequestCannotBeCanceled = 2681404045U,
			// Token: 0x04004CC2 RID: 19650
			ErrorModifyE14DatabaseNotAllowed = 3800508562U,
			// Token: 0x04004CC3 RID: 19651
			CasHealthOwaGetAuthEmptyPage = 634215246U,
			// Token: 0x04004CC4 RID: 19652
			FDServiceDescription = 2694743145U,
			// Token: 0x04004CC5 RID: 19653
			InvalidDeliveryStatus = 1481201881U,
			// Token: 0x04004CC6 RID: 19654
			ErrorCannotSetLegacyArchiveJournalingEnabled = 1249578946U,
			// Token: 0x04004CC7 RID: 19655
			WarningJournalArchiveMailboxHasNoMailUser = 2808015702U,
			// Token: 0x04004CC8 RID: 19656
			CasHealthConfirmTestActiveSyncUsingAutodiscovery = 2394697169U,
			// Token: 0x04004CC9 RID: 19657
			InfoCheckingRmsOnlinePrerequisites = 173411374U,
			// Token: 0x04004CCA RID: 19658
			ErrorChangePasswordRequiresOldPasswordNewPassword = 3495731578U,
			// Token: 0x04004CCB RID: 19659
			SetupProgressDisableWMIAsync = 2660569143U,
			// Token: 0x04004CCC RID: 19660
			CannotRemoveInternalTransportCertificate = 765220380U,
			// Token: 0x04004CCD RID: 19661
			ErrorFailedToGetPreL = 1431279917U,
			// Token: 0x04004CCE RID: 19662
			ErrorPartnerApplicationUseAuthServerCannotSetUrl = 2419294408U,
			// Token: 0x04004CCF RID: 19663
			CopyAndDeleteOperation = 576430832U,
			// Token: 0x04004CD0 RID: 19664
			CompleteMigrationBatchNotSupported = 1980396424U,
			// Token: 0x04004CD1 RID: 19665
			StartPreSetupDescription = 402764310U,
			// Token: 0x04004CD2 RID: 19666
			MtrtEventTransportRule = 782748382U,
			// Token: 0x04004CD3 RID: 19667
			PopGettingMessageIDs = 217981904U,
			// Token: 0x04004CD4 RID: 19668
			SetupProgressCreateTransportRuleCollection = 1236740085U,
			// Token: 0x04004CD5 RID: 19669
			AgentLogInvalidTimeRange = 2220152108U,
			// Token: 0x04004CD6 RID: 19670
			ErrorAgentPriorityCannotBeChanged = 906770351U,
			// Token: 0x04004CD7 RID: 19671
			CasHealthCalendarScenarioTestView = 2647704984U,
			// Token: 0x04004CD8 RID: 19672
			SetupComponentPostSetupMailbox = 3902082635U,
			// Token: 0x04004CD9 RID: 19673
			CopyStatusDismounting = 4189810048U,
			// Token: 0x04004CDA RID: 19674
			ProgressActivityUpdateRecipient = 2177109544U,
			// Token: 0x04004CDB RID: 19675
			ParameterErrorForInternalUsage = 2710426824U,
			// Token: 0x04004CDC RID: 19676
			ErrorCannotEnableJournalArchive = 1312047919U,
			// Token: 0x04004CDD RID: 19677
			ErrorBPAMergeFileNotFound = 1015332134U,
			// Token: 0x04004CDE RID: 19678
			SclValue = 214463947U,
			// Token: 0x04004CDF RID: 19679
			PerfCounterDefinitionFileNameDescription = 3294832335U,
			// Token: 0x04004CE0 RID: 19680
			HubParameterNotValidOnEdgeRole = 1704483791U,
			// Token: 0x04004CE1 RID: 19681
			NewDagClusteringInstalledLaterRunningChecksLaterVerbose = 2066445404U,
			// Token: 0x04004CE2 RID: 19682
			CannotRemoveDefaultRmsTpdWithoutSettingAnotherDefault = 2361175376U,
			// Token: 0x04004CE3 RID: 19683
			MailboxExchangeCertificateComponentDescription = 656898367U,
			// Token: 0x04004CE4 RID: 19684
			ADAttributeCustomAttribute12 = 242192693U,
			// Token: 0x04004CE5 RID: 19685
			ProgressValidatingFileLocations = 2076969542U,
			// Token: 0x04004CE6 RID: 19686
			ErrorInboxRuleTooBig = 2818510402U,
			// Token: 0x04004CE7 RID: 19687
			OutlookProtectionRuleRmsTemplateNotSet = 317546527U,
			// Token: 0x04004CE8 RID: 19688
			LocalSiteColon = 4162816907U,
			// Token: 0x04004CE9 RID: 19689
			DirectoryPathDoesntExist = 2065442552U,
			// Token: 0x04004CEA RID: 19690
			MtrtQuarantine = 1746698641U,
			// Token: 0x04004CEB RID: 19691
			SetupProgressOwaGlobalAddressListEnabled = 2576192317U,
			// Token: 0x04004CEC RID: 19692
			SameOwaVersionDoNotCopyLPFiles = 4033729879U,
			// Token: 0x04004CED RID: 19693
			ErrorDefaultMalwareFilterPolicyCannotBeDeleted = 3808447353U,
			// Token: 0x04004CEE RID: 19694
			MigrationStartAfterScheduledBatchesOnly = 2327721635U,
			// Token: 0x04004CEF RID: 19695
			InvalidDlpPolicyConfiguration = 1910163041U,
			// Token: 0x04004CF0 RID: 19696
			ConfirmationMessageSetAvailabilityConfig = 1096493597U,
			// Token: 0x04004CF1 RID: 19697
			BPAScanInProgress = 2308331446U,
			// Token: 0x04004CF2 RID: 19698
			ExportWithPrivateKeyRequiresPassword = 3722370321U,
			// Token: 0x04004CF3 RID: 19699
			CasHealthScenarioResetCredentials = 1404355436U,
			// Token: 0x04004CF4 RID: 19700
			KeynoteConnectorServiceDescription = 3045092087U,
			// Token: 0x04004CF5 RID: 19701
			ConfirmationMessageSetSearchDocumentFormat = 1460043812U,
			// Token: 0x04004CF6 RID: 19702
			ErrorInvalidSizeRangeException = 908067860U,
			// Token: 0x04004CF7 RID: 19703
			ErrorNoDatabaseInfor = 785552508U,
			// Token: 0x04004CF8 RID: 19704
			DebugStartEnablingUM = 123373405U,
			// Token: 0x04004CF9 RID: 19705
			ErrorSettingCertOnTenant = 14776491U,
			// Token: 0x04004CFA RID: 19706
			ErrorFailedToGetTemplateTenant = 133178266U,
			// Token: 0x04004CFB RID: 19707
			CannotRunOnNonHubTransport = 1348708874U,
			// Token: 0x04004CFC RID: 19708
			ErrorRmsOnlineAuthenticationCertificateExpired = 2651520529U,
			// Token: 0x04004CFD RID: 19709
			ErrorFailedToGetULDueToInvalidSuperUserConfiguration = 1785220801U,
			// Token: 0x04004CFE RID: 19710
			RemoveOrganizationDescription = 3672610051U,
			// Token: 0x04004CFF RID: 19711
			CasHealthTestNewUserScriptName = 2844085614U,
			// Token: 0x04004D00 RID: 19712
			InstallGatewayRoleDescription = 2009348203U,
			// Token: 0x04004D01 RID: 19713
			InvalidClientCertificateSubjectName = 2594705516U,
			// Token: 0x04004D02 RID: 19714
			SetupComponentPostSetupClientAccess = 3346850040U,
			// Token: 0x04004D03 RID: 19715
			ErrorCannotUpdatePublicFolderHierarchyInformation = 2189011080U,
			// Token: 0x04004D04 RID: 19716
			messageAutodiscoverServiceUnavailableException = 3014289487U,
			// Token: 0x04004D05 RID: 19717
			InfoIRMConfigLoaded = 1630518161U,
			// Token: 0x04004D06 RID: 19718
			CasHealthOwaGotLanguageSelectionPage = 3950720433U,
			// Token: 0x04004D07 RID: 19719
			WarningMustInvokeUpdateOABToStartScheduledGeneration = 3598927792U,
			// Token: 0x04004D08 RID: 19720
			HaltingExecution = 36668747U,
			// Token: 0x04004D09 RID: 19721
			CasHealthPowerShellLongName = 673284277U,
			// Token: 0x04004D0A RID: 19722
			AppIdElementIsEmpty = 1079115709U,
			// Token: 0x04004D0B RID: 19723
			InPlaceHoldNotAllowedForAllSourceMailboxes = 2849670203U,
			// Token: 0x04004D0C RID: 19724
			NoMdbWasMovedWhileRunning = 78736594U,
			// Token: 0x04004D0D RID: 19725
			MtrtDeleteAttachment = 2768242287U,
			// Token: 0x04004D0E RID: 19726
			IncomingUserNameEmpty = 2584381281U,
			// Token: 0x04004D0F RID: 19727
			AddressRewriteSessionNull = 4202582373U,
			// Token: 0x04004D10 RID: 19728
			ErrorAccessRightsEmpty = 3131090706U,
			// Token: 0x04004D11 RID: 19729
			SetupComponentMailboxGlobalConfig = 3623667921U,
			// Token: 0x04004D12 RID: 19730
			MtrtEventDeliver = 3868619324U,
			// Token: 0x04004D13 RID: 19731
			EcpUrlNotMatchOwaWarning = 2503320550U,
			// Token: 0x04004D14 RID: 19732
			CasHealthEasPing = 1356551856U,
			// Token: 0x04004D15 RID: 19733
			ErrorCompleteOrgUpgradeCannotRunForSharedConfigurationOrgs = 561948288U,
			// Token: 0x04004D16 RID: 19734
			WSManIISHostingConfigurationComponentDescription = 4113539864U,
			// Token: 0x04004D17 RID: 19735
			DiagnosticsHeader = 367058863U,
			// Token: 0x04004D18 RID: 19736
			UnknownMigrationUserStatusSummaryValue = 4243684796U,
			// Token: 0x04004D19 RID: 19737
			OwaMetabaseIsapiUninstallFailure = 1535975937U,
			// Token: 0x04004D1A RID: 19738
			MoreThanOneTeamMailboxes = 3935454309U,
			// Token: 0x04004D1B RID: 19739
			CasHealthOwaIsaFbaFormdirParseFailed = 681503665U,
			// Token: 0x04004D1C RID: 19740
			EventLogText = 3910386293U,
			// Token: 0x04004D1D RID: 19741
			ManageDelegation2ProvisioningInDNS = 749715156U,
			// Token: 0x04004D1E RID: 19742
			SetupPrereqAnalysis = 4236823146U,
			// Token: 0x04004D1F RID: 19743
			UninstallContentIndexingServiceTask = 3855792877U,
			// Token: 0x04004D20 RID: 19744
			SetupProgressSyncAccountsPollingInterval = 2547584967U,
			// Token: 0x04004D21 RID: 19745
			ExternalJournalRuleScope = 2583888766U,
			// Token: 0x04004D22 RID: 19746
			TestMigrationServerAvailabilityPasswordException = 12898892U,
			// Token: 0x04004D23 RID: 19747
			CasHealthEasOptionsScenarioDescription = 2190311546U,
			// Token: 0x04004D24 RID: 19748
			ProgressStatusRemovingWorkloadManagementPolicyTree = 2067178212U,
			// Token: 0x04004D25 RID: 19749
			ConfirmationMessageInitializeExchangeLegacyPermissions = 1927518978U,
			// Token: 0x04004D26 RID: 19750
			CopyStatusSeeding = 448862132U,
			// Token: 0x04004D27 RID: 19751
			ConfirmationMessageTestOrganizationRelationship = 2783924553U,
			// Token: 0x04004D28 RID: 19752
			UninstallOldAssistantsServiceTask = 2472730642U,
			// Token: 0x04004D29 RID: 19753
			ReservedString4 = 4054043081U,
			// Token: 0x04004D2A RID: 19754
			DeviceWipePending = 3728408622U,
			// Token: 0x04004D2B RID: 19755
			InfoEnterpriseMode = 2405285278U,
			// Token: 0x04004D2C RID: 19756
			ServiceNameAutoDiscover = 1486748686U,
			// Token: 0x04004D2D RID: 19757
			RemoveRemoteAccountSyncCache = 1275658866U,
			// Token: 0x04004D2E RID: 19758
			DualWriteDeleteWarningMessage = 1709945553U,
			// Token: 0x04004D2F RID: 19759
			ConfirmSetProvisioningReconciliationConfig = 1296902656U,
			// Token: 0x04004D30 RID: 19760
			UninstallThrottlingServiceTask = 3875057279U,
			// Token: 0x04004D31 RID: 19761
			SetupProgressPublicFoldersEnabled = 4218353751U,
			// Token: 0x04004D32 RID: 19762
			NotificationEmailsParameterMissing = 2028616171U,
			// Token: 0x04004D33 RID: 19763
			CasHealthWebAppNoCasArgumentError = 2428804411U,
			// Token: 0x04004D34 RID: 19764
			SetupProgressCreateExchangeMimeTypes = 1991303282U,
			// Token: 0x04004D35 RID: 19765
			ShouldContinueToExpandGroupsForHold = 3091771729U,
			// Token: 0x04004D36 RID: 19766
			HybridMailflowGetFfoDCPublicIPAddressesFailed = 377177216U,
			// Token: 0x04004D37 RID: 19767
			MigrationAutoStopForInProgressOnly = 167572150U,
			// Token: 0x04004D38 RID: 19768
			ErrorLogFolderPathNotAvailable = 547522671U,
			// Token: 0x04004D39 RID: 19769
			ErrorPublicFolderReferralHasWrittenToServer = 3890878117U,
			// Token: 0x04004D3A RID: 19770
			SetupProgressInstallingFreeBusyFolder = 1122989846U,
			// Token: 0x04004D3B RID: 19771
			MigrationStartAfterAndAutoStartExclusive = 1280796226U,
			// Token: 0x04004D3C RID: 19772
			UninstallFfoWebServiceRoleDescription = 8058994U,
			// Token: 0x04004D3D RID: 19773
			LanguagePackDescription = 1798622353U,
			// Token: 0x04004D3E RID: 19774
			InfoImportingTpdFromRmsOnlineCheckedNoTemplates = 1041587867U,
			// Token: 0x04004D3F RID: 19775
			ConfirmationExportMailboxDiagnosticLogs = 1211829139U,
			// Token: 0x04004D40 RID: 19776
			ErrorModifyE12ServerNotAllowed = 494607782U,
			// Token: 0x04004D41 RID: 19777
			ErrorRemoveMailboxWithJournalArchive = 3397377515U,
			// Token: 0x04004D42 RID: 19778
			InvalidProductKey = 805841165U,
			// Token: 0x04004D43 RID: 19779
			CannotLocateCurrentCertificate = 3250408681U,
			// Token: 0x04004D44 RID: 19780
			MtrtRouteMessageUsingConnector = 1700206738U,
			// Token: 0x04004D45 RID: 19781
			SetupProgressInstallingContentIndexingMSI = 2044663579U,
			// Token: 0x04004D46 RID: 19782
			ErrorSettingRealmOnFirstOrg = 2274442006U,
			// Token: 0x04004D47 RID: 19783
			FirstRoleAssignmentPolicyMustBeDefault = 3036936652U,
			// Token: 0x04004D48 RID: 19784
			SetupProgressStoppingW3SVCService = 2114394121U,
			// Token: 0x04004D49 RID: 19785
			DistributionGroup = 2537873109U,
			// Token: 0x04004D4A RID: 19786
			CannotEditManuallyModifiedRule = 1488045589U,
			// Token: 0x04004D4B RID: 19787
			MalboxFolderRightsDeleteAllItems = 2270964732U,
			// Token: 0x04004D4C RID: 19788
			ProtocolSettings = 3040964019U,
			// Token: 0x04004D4D RID: 19789
			TestOrganizationRelationshipWarning = 2022479947U,
			// Token: 0x04004D4E RID: 19790
			WarningReportNotAvailable = 3889143264U,
			// Token: 0x04004D4F RID: 19791
			ExceptionHeader = 1679500402U,
			// Token: 0x04004D50 RID: 19792
			SetupProgressSyncAccountsTimeBeforeInactive = 3539375720U,
			// Token: 0x04004D51 RID: 19793
			TestSearchTaskBaseError = 823932952U,
			// Token: 0x04004D52 RID: 19794
			NoNameArgument = 841037861U,
			// Token: 0x04004D53 RID: 19795
			CannotLocateFederationInfo = 4116718674U,
			// Token: 0x04004D54 RID: 19796
			GetFederationInformationProgress = 310671256U,
			// Token: 0x04004D55 RID: 19797
			SetupProgressInstallingMsFteMSI = 1467822517U,
			// Token: 0x04004D56 RID: 19798
			ErrorCannotSpecifyAccountNamespaceWithoutTrust = 1139041786U,
			// Token: 0x04004D57 RID: 19799
			ExchangeInteropUSGDescription = 254334823U,
			// Token: 0x04004D58 RID: 19800
			ADAttributeCustomAttribute9 = 1377545175U,
			// Token: 0x04004D59 RID: 19801
			PromptToRemoveLogEventAction = 1691025395U,
			// Token: 0x04004D5A RID: 19802
			ConfirmationMessageNewMailFlowPartnerConfig = 1949680079U,
			// Token: 0x04004D5B RID: 19803
			ErrorAlsFailedToProcessRequest = 1678323524U,
			// Token: 0x04004D5C RID: 19804
			ExchangeStreamingOpticsDisplayName = 470745396U,
			// Token: 0x04004D5D RID: 19805
			RemoveContentIndexTask = 1223062556U,
			// Token: 0x04004D5E RID: 19806
			ErrorMapiVirtualDirectoryMustSpecifyEitherInternalOrExternalUrl = 3234625944U,
			// Token: 0x04004D5F RID: 19807
			SetupComponentMidFileCopyClientAccess = 414183510U,
			// Token: 0x04004D60 RID: 19808
			UmLanguagePackPackagePathNotSpecified = 3235153535U,
			// Token: 0x04004D61 RID: 19809
			SetupProgressStartingAddressBookService = 2428723312U,
			// Token: 0x04004D62 RID: 19810
			InstallComplianceAuditServiceTask = 838814397U,
			// Token: 0x04004D63 RID: 19811
			InternalTransportCertificateUpdatedOnEdge = 1184910862U,
			// Token: 0x04004D64 RID: 19812
			ErrorCleanUpAndRemoveAlternateServiceAccountsAreMutuallyExclusive = 262546359U,
			// Token: 0x04004D65 RID: 19813
			ErrorSetGroupMailboxAddMembersPrivate = 1041208934U,
			// Token: 0x04004D66 RID: 19814
			MailboxReplicationServiceNotInstalled = 3031418490U,
			// Token: 0x04004D67 RID: 19815
			ConfirmationMessageNewReportingVirtualDirectory = 4059699036U,
			// Token: 0x04004D68 RID: 19816
			WarningReplayLagTimeMustBeLessThanSafetyNetHoldTime = 2810951265U,
			// Token: 0x04004D69 RID: 19817
			TowsMissingAutoDiscoverElement = 2449344145U,
			// Token: 0x04004D6A RID: 19818
			SetupProgressHideAdminAccessWarning = 2922053695U,
			// Token: 0x04004D6B RID: 19819
			SetupProgressStartEdgeTransportService = 2350123123U,
			// Token: 0x04004D6C RID: 19820
			WipePendingNote = 1877416004U,
			// Token: 0x04004D6D RID: 19821
			ComplianceAuditServiceNotInstalled = 3768894518U,
			// Token: 0x04004D6E RID: 19822
			MissingDataClassificationsName = 3557021932U,
			// Token: 0x04004D6F RID: 19823
			UninstallMailboxTransportSubmissionServiceTask = 4016212985U,
			// Token: 0x04004D70 RID: 19824
			OpenSCMFailed = 3855115154U,
			// Token: 0x04004D71 RID: 19825
			SetupProgressStoppingServices = 4009609004U,
			// Token: 0x04004D72 RID: 19826
			StartAfterOrCompleteAfterCannotBeSetWhenJobCompleting = 2354473495U,
			// Token: 0x04004D73 RID: 19827
			DatabaseChecksWarning = 273291066U,
			// Token: 0x04004D74 RID: 19828
			SetupProgressSyncAccountsSyncNowEnabled = 2621242427U,
			// Token: 0x04004D75 RID: 19829
			CannotResetDefaultOAB = 2522664611U,
			// Token: 0x04004D76 RID: 19830
			FfoPrimingServiceDescription = 828523090U,
			// Token: 0x04004D77 RID: 19831
			RoleLimitedDetails = 3060667906U,
			// Token: 0x04004D78 RID: 19832
			ExceptionVirtualServerNotExists = 3080406678U,
			// Token: 0x04004D79 RID: 19833
			ProgressActivityCreateAppId = 3080326154U,
			// Token: 0x04004D7A RID: 19834
			OwaMetabaseSetPropertiesFailure = 26237954U,
			// Token: 0x04004D7B RID: 19835
			MultipleOrganizationRelationshipInstancesReturnedByTheRemoteParty = 3330303460U,
			// Token: 0x04004D7C RID: 19836
			TokenRequestFailed = 649628065U,
			// Token: 0x04004D7D RID: 19837
			OneOrMoreTasksFailed = 1314188949U,
			// Token: 0x04004D7E RID: 19838
			E4eLicensingIsDisabledSetRule = 1507204552U,
			// Token: 0x04004D7F RID: 19839
			ConfirmationDisableJournalArchiving = 2654587277U,
			// Token: 0x04004D80 RID: 19840
			SetupComponentPostSetupMonitoringCorrelation = 2990267815U,
			// Token: 0x04004D81 RID: 19841
			MailboxReplicationServiceDisplayName = 235473832U,
			// Token: 0x04004D82 RID: 19842
			ConfirmationMessageTestMigrationServerAvailability = 3253730210U,
			// Token: 0x04004D83 RID: 19843
			InvalidAvailabilityAccessMethod = 3842833603U,
			// Token: 0x04004D84 RID: 19844
			MigrationPleaseUseStartForReenablingIncremental = 84116853U,
			// Token: 0x04004D85 RID: 19845
			ErrorMailTipRemoveDefaultAndTranslationsExist = 944597893U,
			// Token: 0x04004D86 RID: 19846
			TestSearchOperationAborted = 2120607910U,
			// Token: 0x04004D87 RID: 19847
			ComplianceServiceDisplayName = 1012278329U,
			// Token: 0x04004D88 RID: 19848
			ErrorDefaultRoleAssignmentPolicyNotUnique = 2072089536U,
			// Token: 0x04004D89 RID: 19849
			SetupProgressWsbPlugin = 3068649109U,
			// Token: 0x04004D8A RID: 19850
			UsageTypeCustom = 4140458166U,
			// Token: 0x04004D8B RID: 19851
			InvalidDomain = 3403459873U,
			// Token: 0x04004D8C RID: 19852
			ConfirmationMessageSetTransportProcessingConfig = 1996536374U,
			// Token: 0x04004D8D RID: 19853
			MsiProgressStatus = 1734429948U,
			// Token: 0x04004D8E RID: 19854
			VerboseClearAllPreferredDC = 922137960U,
			// Token: 0x04004D8F RID: 19855
			CannotMoveE15OrLaterOab = 2826824284U,
			// Token: 0x04004D90 RID: 19856
			DebugEndIsDomainReservedCheck = 368391118U,
			// Token: 0x04004D91 RID: 19857
			IisTasksNameValidationProperty = 1500370212U,
			// Token: 0x04004D92 RID: 19858
			FDS_OAD_PerfCountersComponentDescription = 3323623818U,
			// Token: 0x04004D93 RID: 19859
			ServerObjectIsNullWarning = 3496199763U,
			// Token: 0x04004D94 RID: 19860
			ProgressStatusCompleted = 3361139520U,
			// Token: 0x04004D95 RID: 19861
			ReplayLagPlayDownReasonNotEnoughFreeSpace = 4206530938U,
			// Token: 0x04004D96 RID: 19862
			ErrorSetRecipientViewRootAndViewEntireForestToTrue = 2299824885U,
			// Token: 0x04004D97 RID: 19863
			NewImap4ConfigurationTask = 2597902056U,
			// Token: 0x04004D98 RID: 19864
			ScenarioAvailabilityService = 1395708426U,
			// Token: 0x04004D99 RID: 19865
			MigrationValidateNotSupported = 2749826425U,
			// Token: 0x04004D9A RID: 19866
			ErrorGenericAllCannotbeUsedWithOtherAccessRights = 2903077230U,
			// Token: 0x04004D9B RID: 19867
			ErrorInvalidSizeRangeCondition = 70447300U,
			// Token: 0x04004D9C RID: 19868
			MigrationCsvParameterInvalid = 3474126328U,
			// Token: 0x04004D9D RID: 19869
			ADAttributeName = 3050431750U,
			// Token: 0x04004D9E RID: 19870
			ValidatingUserObjectDescription = 2678936089U,
			// Token: 0x04004D9F RID: 19871
			RmsOnline = 1319233567U,
			// Token: 0x04004DA0 RID: 19872
			SetupProgressDisplaySpecifiers = 2671381439U,
			// Token: 0x04004DA1 RID: 19873
			UnableToDetermineExecutingUser = 499504696U,
			// Token: 0x04004DA2 RID: 19874
			ComAdminInstallOleConverter = 3923056437U,
			// Token: 0x04004DA3 RID: 19875
			BPACheckingForUpdates = 605575496U,
			// Token: 0x04004DA4 RID: 19876
			SendConnectorValidSourceServerNotFound = 2920595890U,
			// Token: 0x04004DA5 RID: 19877
			AboutToAddLocalOrgUSGToLocalAdminGroup = 3947119703U,
			// Token: 0x04004DA6 RID: 19878
			DatabaseRedundancyCheckDesc = 2615723947U,
			// Token: 0x04004DA7 RID: 19879
			MarkingMoveJobAsCanceled = 3047692628U,
			// Token: 0x04004DA8 RID: 19880
			InstallFrontendTransportRoleDescription = 2732176076U,
			// Token: 0x04004DA9 RID: 19881
			RmsSharedIdentityFailedToRemoveLink = 3257900905U,
			// Token: 0x04004DAA RID: 19882
			SetupProgressCreateMessageHygieneContainer = 1177356111U,
			// Token: 0x04004DAB RID: 19883
			ErrorInvalidResponseFormat = 1811296721U,
			// Token: 0x04004DAC RID: 19884
			NewPolicyTipConfigDuplicate = 1448572638U,
			// Token: 0x04004DAD RID: 19885
			VerboseUnlockingModulesSection = 481130440U,
			// Token: 0x04004DAE RID: 19886
			SetupProgressAllowRemotePowerShellForAdmins = 2798232721U,
			// Token: 0x04004DAF RID: 19887
			SetupProgressHostedConnectorFilterPolicy = 3660257130U,
			// Token: 0x04004DB0 RID: 19888
			NoSmtpAddress = 3069929753U,
			// Token: 0x04004DB1 RID: 19889
			ErrorBPAConfigDataSave = 3847601718U,
			// Token: 0x04004DB2 RID: 19890
			OfficeDataLoaderServiceDescription = 2926722674U,
			// Token: 0x04004DB3 RID: 19891
			IISNotInstalled = 1780428476U,
			// Token: 0x04004DB4 RID: 19892
			GetPolicyTipConfigUrlUsedAsActionFilter = 3183807969U,
			// Token: 0x04004DB5 RID: 19893
			ErrorSetGroupMailboxRemoveMembersOtherUser = 2627276457U,
			// Token: 0x04004DB6 RID: 19894
			CasHealthCalendarVDirSuccess = 2569719605U,
			// Token: 0x04004DB7 RID: 19895
			IgnoredAuthenticationWarning = 1164934596U,
			// Token: 0x04004DB8 RID: 19896
			AutoGroupJoinMessageSubject = 3957453737U,
			// Token: 0x04004DB9 RID: 19897
			MigrationOperationFailed = 418863002U,
			// Token: 0x04004DBA RID: 19898
			OwaAuthenticationNotMatchEcpWarning = 3566266091U,
			// Token: 0x04004DBB RID: 19899
			ErrorCannotMovePublicFolderIntoSameMailbox = 3203832541U,
			// Token: 0x04004DBC RID: 19900
			SetupProgressStartingEdgeSyncService = 1524386503U,
			// Token: 0x04004DBD RID: 19901
			MailSubmissionServiceDisplayName = 44103597U,
			// Token: 0x04004DBE RID: 19902
			AutodiscoverFailure = 1796170360U,
			// Token: 0x04004DBF RID: 19903
			ConflictedPolicyUpdateNotAllowed = 1366093647U,
			// Token: 0x04004DC0 RID: 19904
			InvalidCategory = 3497616869U,
			// Token: 0x04004DC1 RID: 19905
			JournalingToExternalOnly = 344390835U,
			// Token: 0x04004DC2 RID: 19906
			ErrorTenantIsPiloting = 3204473306U,
			// Token: 0x04004DC3 RID: 19907
			SetupProgressStoppingAddressBookService = 51564260U,
			// Token: 0x04004DC4 RID: 19908
			SetupComponentConfiguringADTopologyService = 4084620468U,
			// Token: 0x04004DC5 RID: 19909
			FailedToCreateAuditLogSearch = 3039439991U,
			// Token: 0x04004DC6 RID: 19910
			WarningPropertySetIgnored = 3995145683U,
			// Token: 0x04004DC7 RID: 19911
			MigrationPleaseUseStopForDisablingIncremental = 3963066099U,
			// Token: 0x04004DC8 RID: 19912
			StatusMessageSynchronizerRunningInBackground = 1465827073U,
			// Token: 0x04004DC9 RID: 19913
			ErrorBothCustomAndPrecannedFilterSpecified = 1505488867U,
			// Token: 0x04004DCA RID: 19914
			ErrorTaskRunningLocationFrontendOnly = 3863634433U,
			// Token: 0x04004DCB RID: 19915
			CasHealthOwaErrorPageHeader = 213191494U
		}

		// Token: 0x02000DCE RID: 3534
		private enum ParamIDs
		{
			// Token: 0x04004DCD RID: 19917
			VerboseWsrmNotConfigured,
			// Token: 0x04004DCE RID: 19918
			ErrorCannotDeleteRoleWithAssignment,
			// Token: 0x04004DCF RID: 19919
			WarningMisconfiguredElcMailboxPolicy,
			// Token: 0x04004DD0 RID: 19920
			ErrorNonMailboxDirectoryUser,
			// Token: 0x04004DD1 RID: 19921
			ConversationsFailedToOpenMailbox,
			// Token: 0x04004DD2 RID: 19922
			ConfirmationMessageNewMailboxResource,
			// Token: 0x04004DD3 RID: 19923
			InvalidLogIdentityFormat,
			// Token: 0x04004DD4 RID: 19924
			VerboseDeleteMailboxInStore,
			// Token: 0x04004DD5 RID: 19925
			RestoreMailboxDuplicates,
			// Token: 0x04004DD6 RID: 19926
			E12DomainServersGroupNotFoundException,
			// Token: 0x04004DD7 RID: 19927
			DagTaskCheckingDagServersAreClustered,
			// Token: 0x04004DD8 RID: 19928
			ConfirmationMessageSetAddressrewriteentry,
			// Token: 0x04004DD9 RID: 19929
			WarnExtendedProtectionIsNotEnabled,
			// Token: 0x04004DDA RID: 19930
			SharedConfigurationInfoExists,
			// Token: 0x04004DDB RID: 19931
			RecipientDomainNotManaged,
			// Token: 0x04004DDC RID: 19932
			ErrorWLCDPartnerAccessException,
			// Token: 0x04004DDD RID: 19933
			InconsistentServerNotInDag,
			// Token: 0x04004DDE RID: 19934
			ErrorAuthServerIssuerNameNotFound,
			// Token: 0x04004DDF RID: 19935
			InterceptorErrorRootedPathNotAllowed,
			// Token: 0x04004DE0 RID: 19936
			HybridMailflowConnectorNameAndTypeWarning,
			// Token: 0x04004DE1 RID: 19937
			COMDetailException,
			// Token: 0x04004DE2 RID: 19938
			ErrorCannotCancelRequestBeingCompleted,
			// Token: 0x04004DE3 RID: 19939
			VerboseADOperationSucceeded,
			// Token: 0x04004DE4 RID: 19940
			ConfirmationMessageSetAuthServer,
			// Token: 0x04004DE5 RID: 19941
			DagTaskCreatingFsw,
			// Token: 0x04004DE6 RID: 19942
			ConfirmOrphanCannotConnectToMailboxDatabase,
			// Token: 0x04004DE7 RID: 19943
			ErrorMailboxAuditLogSearchTimeout,
			// Token: 0x04004DE8 RID: 19944
			ErrorSetOlderVirtualDirectory,
			// Token: 0x04004DE9 RID: 19945
			FoundTasksToExecute,
			// Token: 0x04004DEA RID: 19946
			WarningUpgradeIsNotComplete,
			// Token: 0x04004DEB RID: 19947
			ErrorMailboxDatabaseToRecoverHasAssociatedRecoveryMailboxDatabaseAlready,
			// Token: 0x04004DEC RID: 19948
			ConfirmationMessageSetIntraOrganizationConnector,
			// Token: 0x04004DED RID: 19949
			WarningOabGenFailed,
			// Token: 0x04004DEE RID: 19950
			InvalidForwardSyncConfigurationError,
			// Token: 0x04004DEF RID: 19951
			ErrorWildcardNotSupportedInRelocationIdentity,
			// Token: 0x04004DF0 RID: 19952
			ConfirmationMessageRemoveHostedContentFilterPolicy,
			// Token: 0x04004DF1 RID: 19953
			WarningPrimaryExchangeRecipientNotSet,
			// Token: 0x04004DF2 RID: 19954
			VerboseCreatingMonitoringMailbox,
			// Token: 0x04004DF3 RID: 19955
			OABVdirBasicAuthWithoutSSL,
			// Token: 0x04004DF4 RID: 19956
			ClassificationRuleCollectionReservedRulePackIdViolation,
			// Token: 0x04004DF5 RID: 19957
			NamespaceServiceUrl,
			// Token: 0x04004DF6 RID: 19958
			ConfirmationMessageEnableMalwareFilterRule,
			// Token: 0x04004DF7 RID: 19959
			DagTaskNoNetworksRunningDhcp,
			// Token: 0x04004DF8 RID: 19960
			ErrorLiveIdAuthentication,
			// Token: 0x04004DF9 RID: 19961
			FormsAuthenticationDeleteUnknownErrorException,
			// Token: 0x04004DFA RID: 19962
			FailedProbeResultDetails,
			// Token: 0x04004DFB RID: 19963
			ErrorNoMatchedUserTypeFound,
			// Token: 0x04004DFC RID: 19964
			ConfirmationMessageTestServiceHealth,
			// Token: 0x04004DFD RID: 19965
			ExchangeSettingsExpirationDateIsInThePastWarning,
			// Token: 0x04004DFE RID: 19966
			VerboseFailedToDeleteEapWhileRollingBack,
			// Token: 0x04004DFF RID: 19967
			ErrorSetMailPublicFolderEntryIdWrongFormat,
			// Token: 0x04004E00 RID: 19968
			VerboseTestUserAddress,
			// Token: 0x04004E01 RID: 19969
			SetServerAttributePermissionDeniedException,
			// Token: 0x04004E02 RID: 19970
			VerboseFailedToRollbackPriority,
			// Token: 0x04004E03 RID: 19971
			DetailRpcError,
			// Token: 0x04004E04 RID: 19972
			AboutToAddServerAdminToLocalAdminGroup,
			// Token: 0x04004E05 RID: 19973
			ServiceHasNoProcessId,
			// Token: 0x04004E06 RID: 19974
			ErrorNotExchange12Server,
			// Token: 0x04004E07 RID: 19975
			ErrorPolicyNotFound,
			// Token: 0x04004E08 RID: 19976
			ServiceDisabled,
			// Token: 0x04004E09 RID: 19977
			MultipleDialplansWithSameId,
			// Token: 0x04004E0A RID: 19978
			CasHealthWebAppStartTest,
			// Token: 0x04004E0B RID: 19979
			ConfirmationMessageSetMailboxCrossVersionRehoming,
			// Token: 0x04004E0C RID: 19980
			DagNetworkSubnetMoving,
			// Token: 0x04004E0D RID: 19981
			SenderIPAddressOverlapsFfoDCIPAddressesId,
			// Token: 0x04004E0E RID: 19982
			ExchangePrincipalNotFoundException,
			// Token: 0x04004E0F RID: 19983
			OutputFileExists,
			// Token: 0x04004E10 RID: 19984
			messageTopologyDiscoverException,
			// Token: 0x04004E11 RID: 19985
			NewFederationTrustProvisioningService,
			// Token: 0x04004E12 RID: 19986
			ErrorSetGroupMailboxInvalidYammerEmailAddress,
			// Token: 0x04004E13 RID: 19987
			ErrorTeamMailboxSharePointSiteAlreadyLinkedWithOtherTM,
			// Token: 0x04004E14 RID: 19988
			FailToCreateOrUpdateSubscriptionPrincipalOnEdge,
			// Token: 0x04004E15 RID: 19989
			ClassificationRuleCollectionInvalidProcessorReferenceViolation,
			// Token: 0x04004E16 RID: 19990
			WritableDatabaseNotFound,
			// Token: 0x04004E17 RID: 19991
			WritableRecipientNotFound,
			// Token: 0x04004E18 RID: 19992
			ErrorFailedToGetDatabaseLastBackupTimes,
			// Token: 0x04004E19 RID: 19993
			AddAccessRuleArgument,
			// Token: 0x04004E1A RID: 19994
			ErrorEdbFileDirectoryNotExist,
			// Token: 0x04004E1B RID: 19995
			DeviceFilterRuleAlreadyExists,
			// Token: 0x04004E1C RID: 19996
			ErrorConflictSaving,
			// Token: 0x04004E1D RID: 19997
			NoAuthenticationWarning,
			// Token: 0x04004E1E RID: 19998
			MapiTransactionDiagnosticTargetDatabaseNotOnTargetServer,
			// Token: 0x04004E1F RID: 19999
			CertificateInvalidFQDNValue,
			// Token: 0x04004E20 RID: 20000
			ErrorGroupNotUniqueOnDomainController,
			// Token: 0x04004E21 RID: 20001
			ConfirmationMessageRemoveResourcePolicy,
			// Token: 0x04004E22 RID: 20002
			WKGuidNotFoundRetrying,
			// Token: 0x04004E23 RID: 20003
			GeneratingDelegationToken,
			// Token: 0x04004E24 RID: 20004
			PerfCounterProcessingFile,
			// Token: 0x04004E25 RID: 20005
			OabVirtualDirectoryAdOrphanFound,
			// Token: 0x04004E26 RID: 20006
			FailedToCreateAdminAuditLogItem,
			// Token: 0x04004E27 RID: 20007
			SuspendSgcUseRpc,
			// Token: 0x04004E28 RID: 20008
			UmLanguagePackProductCode,
			// Token: 0x04004E29 RID: 20009
			messageNSPIOperationException,
			// Token: 0x04004E2A RID: 20010
			DomainNotReachableWarning,
			// Token: 0x04004E2B RID: 20011
			InvalidPushNotificationSubscriptionExpirationTime,
			// Token: 0x04004E2C RID: 20012
			ConfirmationMessageResumeMalwareFilterRecoveryItem,
			// Token: 0x04004E2D RID: 20013
			SeederProgressMsgOverSpecifiedNetwork,
			// Token: 0x04004E2E RID: 20014
			ErrorAssigneeSecurityGroupNotUnique,
			// Token: 0x04004E2F RID: 20015
			SpecifiedRecipientNotDistributionGroup,
			// Token: 0x04004E30 RID: 20016
			DuplicateIntraOrganizationConnectorDomain,
			// Token: 0x04004E31 RID: 20017
			NoRemoteFederatedDomainInLocalOrganizationRelationship,
			// Token: 0x04004E32 RID: 20018
			SuspendSgcFallbackToState,
			// Token: 0x04004E33 RID: 20019
			ErrorInvalidNameCharacter,
			// Token: 0x04004E34 RID: 20020
			ImportCertificateAlreadyExists,
			// Token: 0x04004E35 RID: 20021
			FederationCertificateNotFound,
			// Token: 0x04004E36 RID: 20022
			WarningSearchAdminAuditLogOnPreE15,
			// Token: 0x04004E37 RID: 20023
			ErrorPSFanInProviderAssemblyNotFound,
			// Token: 0x04004E38 RID: 20024
			ServerDoesNotHaveADomain,
			// Token: 0x04004E39 RID: 20025
			ErrorMailboxDatabaseNotOnE14Server,
			// Token: 0x04004E3A RID: 20026
			ConfirmationMessageUpdateStoreMailboxStateMailboxIdentity,
			// Token: 0x04004E3B RID: 20027
			ErrorFederationTrustNotUnique,
			// Token: 0x04004E3C RID: 20028
			ErrorMailboxPlanNotUnique,
			// Token: 0x04004E3D RID: 20029
			ErrorTenantAdminsCanOnlyAddSubdomains,
			// Token: 0x04004E3E RID: 20030
			DagTaskServerIsNotInDagException,
			// Token: 0x04004E3F RID: 20031
			ErrorOfflineAddressBookNotUnique,
			// Token: 0x04004E40 RID: 20032
			ConfirmationMessageNewMailboxRepairRequestDatabase,
			// Token: 0x04004E41 RID: 20033
			VerboseVerifyingServer,
			// Token: 0x04004E42 RID: 20034
			CasHealthStorageError,
			// Token: 0x04004E43 RID: 20035
			InvalidWKObjectException,
			// Token: 0x04004E44 RID: 20036
			ErrorArchiveAlreadyPresent,
			// Token: 0x04004E45 RID: 20037
			SendConnectorComputerNotFound,
			// Token: 0x04004E46 RID: 20038
			FormsAuthenticationMarkPathCloseError,
			// Token: 0x04004E47 RID: 20039
			WarningCouldNotCreateRoleAssignment,
			// Token: 0x04004E48 RID: 20040
			ErrorAddressListNotUnique,
			// Token: 0x04004E49 RID: 20041
			WarningInvalidRoleAfterUpgrade,
			// Token: 0x04004E4A RID: 20042
			IPListEntryExists,
			// Token: 0x04004E4B RID: 20043
			WarningSiteFolderCheckTaskNotAvailableOnTiServer,
			// Token: 0x04004E4C RID: 20044
			ConfirmationMessageNewMailboxArbitration,
			// Token: 0x04004E4D RID: 20045
			MultipleDefaultFoldersInPolicyException,
			// Token: 0x04004E4E RID: 20046
			ValidationDivergenceMustBeNonHalting,
			// Token: 0x04004E4F RID: 20047
			FailureToGetDelegationToken,
			// Token: 0x04004E50 RID: 20048
			ErrorDlpTemplateDuplicateParameter,
			// Token: 0x04004E51 RID: 20049
			NoDeviceFilterByName,
			// Token: 0x04004E52 RID: 20050
			ToomanyDatabasesForServer,
			// Token: 0x04004E53 RID: 20051
			MigrationJobNotFound,
			// Token: 0x04004E54 RID: 20052
			AdTopologyServiceWithOldNameInstalled,
			// Token: 0x04004E55 RID: 20053
			ErrorExceededMaxClassificationsLimit,
			// Token: 0x04004E56 RID: 20054
			LogSourceServerRusReferral,
			// Token: 0x04004E57 RID: 20055
			NoDCsAvailableException,
			// Token: 0x04004E58 RID: 20056
			ErrorMailboxCalendarConfigurationNotAllowedParameterValue,
			// Token: 0x04004E59 RID: 20057
			DagTaskProblemChangingQuorumException,
			// Token: 0x04004E5A RID: 20058
			WarningSetMailboxLitigationHoldDelay,
			// Token: 0x04004E5B RID: 20059
			ConfirmationMessageSetInboxRule,
			// Token: 0x04004E5C RID: 20060
			ErrorTeamMailboxContactSharePointSiteWithCorrelationId,
			// Token: 0x04004E5D RID: 20061
			ErrorRoleAssignmentConstraintViolationOnScopes,
			// Token: 0x04004E5E RID: 20062
			MigrationMissingParameterException,
			// Token: 0x04004E5F RID: 20063
			ErrorFailedToFindFolderInMailbox,
			// Token: 0x04004E60 RID: 20064
			ErrorOpeningCertificateStore,
			// Token: 0x04004E61 RID: 20065
			ConfirmationRemoveSupervisionListEntry,
			// Token: 0x04004E62 RID: 20066
			ErrorDeprovisionedTargetPassedWithoutComplete,
			// Token: 0x04004E63 RID: 20067
			PropertiesDiffer,
			// Token: 0x04004E64 RID: 20068
			ConfirmationMessageStartOrganizationPilot,
			// Token: 0x04004E65 RID: 20069
			CertificateValid,
			// Token: 0x04004E66 RID: 20070
			DagFswUnableToRemoveWitnessDirectoryException,
			// Token: 0x04004E67 RID: 20071
			ErrorSCTsCannotBeMigrated,
			// Token: 0x04004E68 RID: 20072
			VerboseCheckingScopeFailed,
			// Token: 0x04004E69 RID: 20073
			ConfirmationMessageSetServiceInstanceInfo,
			// Token: 0x04004E6A RID: 20074
			ConfirmationMessageRemoveAddressList,
			// Token: 0x04004E6B RID: 20075
			ConfirmationMessageSetTextMessagingAccount,
			// Token: 0x04004E6C RID: 20076
			ErrorTeamMailboxSetShowInMyClient,
			// Token: 0x04004E6D RID: 20077
			UmLanguagePackDescription,
			// Token: 0x04004E6E RID: 20078
			VerboseServiceValidatorUrl,
			// Token: 0x04004E6F RID: 20079
			NoDeviceFilterRuleByNameAndCharacteristic,
			// Token: 0x04004E70 RID: 20080
			ErrorCannotFindDomainController,
			// Token: 0x04004E71 RID: 20081
			WarningUnableToResolveUser,
			// Token: 0x04004E72 RID: 20082
			WaitingForClusterServiceToStop,
			// Token: 0x04004E73 RID: 20083
			ConfirmationMessageNewActiveSyncDeviceAccessRule,
			// Token: 0x04004E74 RID: 20084
			CouldNotUpdateServiceInstanceMap,
			// Token: 0x04004E75 RID: 20085
			UnableToMoveUCSMigratedMailboxToDownlevelError,
			// Token: 0x04004E76 RID: 20086
			ErrorUserWithMatchingNetIdAndDifferentWindowsLiveIdExists,
			// Token: 0x04004E77 RID: 20087
			CookieExpiredException,
			// Token: 0x04004E78 RID: 20088
			MapiTransactionShortErrorMsgFromException,
			// Token: 0x04004E79 RID: 20089
			ServerNotInDagError,
			// Token: 0x04004E7A RID: 20090
			ConfirmationMessageNewOutlookProtectionRule,
			// Token: 0x04004E7B RID: 20091
			ErrorInvalidFilterProperty,
			// Token: 0x04004E7C RID: 20092
			ErrorUnableToDetermineMdbQueue,
			// Token: 0x04004E7D RID: 20093
			ConfirmationMessageNewMobileMailboxDefaultPolicy,
			// Token: 0x04004E7E RID: 20094
			ErrorServicePlanHasNoMatchingMailboxPlan,
			// Token: 0x04004E7F RID: 20095
			ErrorCannotMoveDiscoveryMailboxesDownlevel,
			// Token: 0x04004E80 RID: 20096
			ErrorFailedToUpdateStoreMailboxInformationException,
			// Token: 0x04004E81 RID: 20097
			MailboxAdminDisplayVersionCouldNotBeDisplayed,
			// Token: 0x04004E82 RID: 20098
			ErrorCompleteFlagRequired,
			// Token: 0x04004E83 RID: 20099
			AcceptedDomainsCannotBeRoutedByOutboundConnector,
			// Token: 0x04004E84 RID: 20100
			ConfirmationMessageNewMailboxExportRequest,
			// Token: 0x04004E85 RID: 20101
			CasHealthPowerShellAppPoolNotRunning,
			// Token: 0x04004E86 RID: 20102
			ErrorArbitrationMailboxNotSet,
			// Token: 0x04004E87 RID: 20103
			CannotSetProxy,
			// Token: 0x04004E88 RID: 20104
			ConfirmationMessageUpdatePublicFolderMailbox,
			// Token: 0x04004E89 RID: 20105
			ErrorExistingRecipientInActionsCannotBeDistributionGroup,
			// Token: 0x04004E8A RID: 20106
			WarningNoMyBaseOptionsRole,
			// Token: 0x04004E8B RID: 20107
			SecurityDescriptorAccessDeniedException,
			// Token: 0x04004E8C RID: 20108
			ConfirmEnableCertForUMCR,
			// Token: 0x04004E8D RID: 20109
			ErrorDCIsNotGC,
			// Token: 0x04004E8E RID: 20110
			ErrorCannotMoveMailboxesWithInPlaceHoldDownlevel,
			// Token: 0x04004E8F RID: 20111
			OwaAuthenticationMethodCouldNotFindExtensionException,
			// Token: 0x04004E90 RID: 20112
			messageFatalAutodiscoverException,
			// Token: 0x04004E91 RID: 20113
			Error_DatabaseLocationDoesNotMatchHighestActivationPreferenceCopyLocation,
			// Token: 0x04004E92 RID: 20114
			GetDbcsDetectReplayServiceDown,
			// Token: 0x04004E93 RID: 20115
			ExchangeUpgradeBucketSourceVersionBiggerThanTarget,
			// Token: 0x04004E94 RID: 20116
			RpcHttpE2k3Servers,
			// Token: 0x04004E95 RID: 20117
			NoRecipientsForRecipientId,
			// Token: 0x04004E96 RID: 20118
			ErrorCannotCreateARoleFromADeprecatedRole,
			// Token: 0x04004E97 RID: 20119
			ServerNotUnique,
			// Token: 0x04004E98 RID: 20120
			ResumeSgcFallbackToState,
			// Token: 0x04004E99 RID: 20121
			LogProcessExitCode,
			// Token: 0x04004E9A RID: 20122
			RootNodeDoesNotMatch,
			// Token: 0x04004E9B RID: 20123
			TSProcessNotFound,
			// Token: 0x04004E9C RID: 20124
			VerboseDefaultOABNameFound,
			// Token: 0x04004E9D RID: 20125
			DkmContainerAlreadyExists,
			// Token: 0x04004E9E RID: 20126
			ErrorCleanupRequestedAtWrongRequestedState,
			// Token: 0x04004E9F RID: 20127
			ErrorFailedToConnectToStore,
			// Token: 0x04004EA0 RID: 20128
			GetCopyStatusRpcException,
			// Token: 0x04004EA1 RID: 20129
			ConfirmationMessageEnableHostedConnectionFilterRule,
			// Token: 0x04004EA2 RID: 20130
			ErrorUnableToDetermineContentMailbox,
			// Token: 0x04004EA3 RID: 20131
			CheckPointProgressed,
			// Token: 0x04004EA4 RID: 20132
			ErrorEnableMailPublicFolderNotAllowed,
			// Token: 0x04004EA5 RID: 20133
			DlpPolicyMissingEnString,
			// Token: 0x04004EA6 RID: 20134
			ErrorCompleteAfter,
			// Token: 0x04004EA7 RID: 20135
			InstallingGlobalThrottlingPolicy,
			// Token: 0x04004EA8 RID: 20136
			ErrorGroupNameContainBlockedWords,
			// Token: 0x04004EA9 RID: 20137
			ExchangeSettingsExistingSettingNotUpdated,
			// Token: 0x04004EAA RID: 20138
			WarningSetMailboxRetentionHoldDataFAI,
			// Token: 0x04004EAB RID: 20139
			ExceptionRegistryKeyNotFound,
			// Token: 0x04004EAC RID: 20140
			ConfirmationMessageSetELCFolder,
			// Token: 0x04004EAD RID: 20141
			ErrorNoMatchingSmtpProxy,
			// Token: 0x04004EAE RID: 20142
			ErrorSetPolicyRoleAssignment,
			// Token: 0x04004EAF RID: 20143
			ConfirmationMessageRemoveRemoteDomain,
			// Token: 0x04004EB0 RID: 20144
			ProtocolTransactionsSucceeded,
			// Token: 0x04004EB1 RID: 20145
			AlsEmailBodyAdminCmdlets,
			// Token: 0x04004EB2 RID: 20146
			ExchangeSettingsUpdateScopeForest,
			// Token: 0x04004EB3 RID: 20147
			OwaAuthenticationMethodFoundMoreThanOneExtensionException,
			// Token: 0x04004EB4 RID: 20148
			ConfirmationMessageSetEdgeSyncServiceConfig,
			// Token: 0x04004EB5 RID: 20149
			ConfirmationMessageNewMailboxWithArchive,
			// Token: 0x04004EB6 RID: 20150
			ExSGroupNotFoundException,
			// Token: 0x04004EB7 RID: 20151
			VerboseFixingObject,
			// Token: 0x04004EB8 RID: 20152
			ErrorRetentionIdConflictsWithRetentionPolicy,
			// Token: 0x04004EB9 RID: 20153
			ReplicationCheckFatalException,
			// Token: 0x04004EBA RID: 20154
			EdgeSyncServiceConfigMissing,
			// Token: 0x04004EBB RID: 20155
			FileShareWitnessPathNotSet,
			// Token: 0x04004EBC RID: 20156
			ConfirmationMessageResumeDatabaseCopyReplicationIdentity,
			// Token: 0x04004EBD RID: 20157
			InvalidMessageDataClassificationParameterMinGreaterThanMax,
			// Token: 0x04004EBE RID: 20158
			MigrationInvalidBatchIdForUser,
			// Token: 0x04004EBF RID: 20159
			NoReceiveConnectors,
			// Token: 0x04004EC0 RID: 20160
			ConfirmationMessageNewMailboxRelocation,
			// Token: 0x04004EC1 RID: 20161
			VerboseLogFolderPathUniqueUnderDAGCondition,
			// Token: 0x04004EC2 RID: 20162
			ErrorMemberNameUnavailableUsedAlternateAlias,
			// Token: 0x04004EC3 RID: 20163
			RemoveDefaultOAB,
			// Token: 0x04004EC4 RID: 20164
			ErrorNoAdministratorKeyFound,
			// Token: 0x04004EC5 RID: 20165
			messageGlobalLocatorServiceWCFExceptionThrown,
			// Token: 0x04004EC6 RID: 20166
			ErrorRemoveModeratorMailbox,
			// Token: 0x04004EC7 RID: 20167
			ConfirmationMessageNewELCFolder,
			// Token: 0x04004EC8 RID: 20168
			WarningMailboxNeverBeenLoggedOn,
			// Token: 0x04004EC9 RID: 20169
			CasHealthOwaUserColon,
			// Token: 0x04004ECA RID: 20170
			CannotFindXPath,
			// Token: 0x04004ECB RID: 20171
			WarningManagementWebServiceVDirCreated,
			// Token: 0x04004ECC RID: 20172
			ELCFolderAlreadyUpgraded,
			// Token: 0x04004ECD RID: 20173
			ErrorCanNotAddMailboxToWellKnownHostedMailboxSG,
			// Token: 0x04004ECE RID: 20174
			ExportMailboxDuplicates,
			// Token: 0x04004ECF RID: 20175
			ConfirmationMessageTestReplicationHealth,
			// Token: 0x04004ED0 RID: 20176
			TransportRpcNotRegistered,
			// Token: 0x04004ED1 RID: 20177
			CasHealthWebAppLogonScenarioDescription,
			// Token: 0x04004ED2 RID: 20178
			ErrorMbxPlanReleaseTransition,
			// Token: 0x04004ED3 RID: 20179
			AdminSDHolderNotFoundException,
			// Token: 0x04004ED4 RID: 20180
			TiE12Warning,
			// Token: 0x04004ED5 RID: 20181
			InfoFoundPreE12Server,
			// Token: 0x04004ED6 RID: 20182
			ConfirmationMessageNewHostedEncryptionVirtualDirectory,
			// Token: 0x04004ED7 RID: 20183
			DagMemberString,
			// Token: 0x04004ED8 RID: 20184
			ErrorDatabaseExcludedFromProvisioning,
			// Token: 0x04004ED9 RID: 20185
			ErrorInvalidParameterForAuditLog,
			// Token: 0x04004EDA RID: 20186
			ClassificationRuleCollectionSchemaNonConformance,
			// Token: 0x04004EDB RID: 20187
			MoveRequestNotFoundOrUnsupported,
			// Token: 0x04004EDC RID: 20188
			SearchingForCertificate,
			// Token: 0x04004EDD RID: 20189
			ErrorNoRemoteHostNameSettingForLocalMove,
			// Token: 0x04004EDE RID: 20190
			MsiRebootRequiredToFinish,
			// Token: 0x04004EDF RID: 20191
			ConfirmationMessageSetSendConnector,
			// Token: 0x04004EE0 RID: 20192
			ErrorMessageNotFound,
			// Token: 0x04004EE1 RID: 20193
			SelfMemberNotFoundException,
			// Token: 0x04004EE2 RID: 20194
			VerboseCopyFile,
			// Token: 0x04004EE3 RID: 20195
			RestoreMailboxShouldRestore,
			// Token: 0x04004EE4 RID: 20196
			ErrorPropertyTypeNotFound,
			// Token: 0x04004EE5 RID: 20197
			OabVirtualDirectoryNotExisting,
			// Token: 0x04004EE6 RID: 20198
			ConfirmationMessageRemoveAdminAuditLogConfig,
			// Token: 0x04004EE7 RID: 20199
			ConfirmationMessageSuspendDatabaseCopyActivationIdentity,
			// Token: 0x04004EE8 RID: 20200
			ErrorActivateOnServerMustbeSpecifiedIfSkipChecksRequestedSourceServer,
			// Token: 0x04004EE9 RID: 20201
			AmMoveRpcCompletedAnyServerSourceServer,
			// Token: 0x04004EEA RID: 20202
			ProgressDismountingDatabase,
			// Token: 0x04004EEB RID: 20203
			NeedRemoveCopyFileManuallyAfterCopyDisabledRcr,
			// Token: 0x04004EEC RID: 20204
			ErrorAssemblyIsPath,
			// Token: 0x04004EED RID: 20205
			CasHealthWebAppAllTransactionsSucceeded,
			// Token: 0x04004EEE RID: 20206
			CasHealthPowerShellRemoteConnectionScenario,
			// Token: 0x04004EEF RID: 20207
			ConfirmationMessageRemoveDefaultMobileMailboxPolicy,
			// Token: 0x04004EF0 RID: 20208
			MailboxIsNotLocked,
			// Token: 0x04004EF1 RID: 20209
			ErrorCertificateHasExpired,
			// Token: 0x04004EF2 RID: 20210
			RegistryAccessSecurityExceptionRead,
			// Token: 0x04004EF3 RID: 20211
			ErrorCasServerNotRpcEnabled,
			// Token: 0x04004EF4 RID: 20212
			RmsSharedIdentityUserNotFoundInGC,
			// Token: 0x04004EF5 RID: 20213
			ConfirmationMessageSetAddressList,
			// Token: 0x04004EF6 RID: 20214
			InfoGetPreL,
			// Token: 0x04004EF7 RID: 20215
			CatchAllRecipientNotExists,
			// Token: 0x04004EF8 RID: 20216
			ConfirmationMessageRemoveOrgELCFolder,
			// Token: 0x04004EF9 RID: 20217
			RecipientFilterMustBeValid,
			// Token: 0x04004EFA RID: 20218
			ConfirmationMessageSetRetentionTagOnMailbox,
			// Token: 0x04004EFB RID: 20219
			ConfirmationMessageSetDatabaseAvailabilityGroupConfiguration,
			// Token: 0x04004EFC RID: 20220
			ConfirmationMessageSetMailboxWithDatabase,
			// Token: 0x04004EFD RID: 20221
			ConfirmationMessageAddDatabaseAvailabilityGroupServer,
			// Token: 0x04004EFE RID: 20222
			ExchangeSettingsPriorityIsNotUnique,
			// Token: 0x04004EFF RID: 20223
			VerboseMailboxDelegateAlreadyExists,
			// Token: 0x04004F00 RID: 20224
			RmsSharedIdentityTooManyUsers,
			// Token: 0x04004F01 RID: 20225
			ProcessingDependentService,
			// Token: 0x04004F02 RID: 20226
			ConfirmationMessageMoveDatabasePath,
			// Token: 0x04004F03 RID: 20227
			ErrorRemoteAccountPolicyNotFound,
			// Token: 0x04004F04 RID: 20228
			ConfirmSearchAdminAuditLogConfigTask,
			// Token: 0x04004F05 RID: 20229
			ErrorAcceptedDomainExists,
			// Token: 0x04004F06 RID: 20230
			RecipientNotFoundException,
			// Token: 0x04004F07 RID: 20231
			ErrorUnableToAccessMessageCategoriesGenericMessage,
			// Token: 0x04004F08 RID: 20232
			FoundGlobalThrottlingPolicy,
			// Token: 0x04004F09 RID: 20233
			FederatedIdentityTypeMismatch,
			// Token: 0x04004F0A RID: 20234
			ErrorStoreMailboxNotFound,
			// Token: 0x04004F0B RID: 20235
			BadEnabledParameterException,
			// Token: 0x04004F0C RID: 20236
			ConfirmationMessageSetMailboxDatabase,
			// Token: 0x04004F0D RID: 20237
			CasHealthCouldNotBuildTestUserName,
			// Token: 0x04004F0E RID: 20238
			CalculatedNameRequiredForTT,
			// Token: 0x04004F0F RID: 20239
			SmtpConnectivityNotTested,
			// Token: 0x04004F10 RID: 20240
			InconsistentADError,
			// Token: 0x04004F11 RID: 20241
			ErrorTrustAlreadyInUse,
			// Token: 0x04004F12 RID: 20242
			CannotAcquireSTSClientForUser,
			// Token: 0x04004F13 RID: 20243
			ErrorParameterNotSupportedForMigrationType,
			// Token: 0x04004F14 RID: 20244
			WarningMetadataNotOverHttps,
			// Token: 0x04004F15 RID: 20245
			MdbServerNotFoundException,
			// Token: 0x04004F16 RID: 20246
			ErrorCannotImportPstToPublicFolderMailbox,
			// Token: 0x04004F17 RID: 20247
			ErrorUserAlreadyInTargetDatabase,
			// Token: 0x04004F18 RID: 20248
			VerboseOpenFirewallPort,
			// Token: 0x04004F19 RID: 20249
			ConfirmationMessageClearAutoTags,
			// Token: 0x04004F1A RID: 20250
			messageHttpRequestTimeoutException,
			// Token: 0x04004F1B RID: 20251
			ConfirmationMessageRemoveEdgeSyncEhfConnector,
			// Token: 0x04004F1C RID: 20252
			ErrorFailedToMountDatabase,
			// Token: 0x04004F1D RID: 20253
			InformationQueryExpression,
			// Token: 0x04004F1E RID: 20254
			DagTaskRemovingServerFromDag,
			// Token: 0x04004F1F RID: 20255
			DatabaseException,
			// Token: 0x04004F20 RID: 20256
			InvalidCharacterInDisplayName,
			// Token: 0x04004F21 RID: 20257
			MtrtMessageSpam,
			// Token: 0x04004F22 RID: 20258
			WarningFailedToSetPolicy,
			// Token: 0x04004F23 RID: 20259
			ErrorELCFolderExist,
			// Token: 0x04004F24 RID: 20260
			ReplayServiceNotRunning,
			// Token: 0x04004F25 RID: 20261
			OwaAttachmentTypeInvalidCharacter,
			// Token: 0x04004F26 RID: 20262
			FederatedDomainofUserNotOrgFederated,
			// Token: 0x04004F27 RID: 20263
			DagTaskUpdatedAdDagStartedStoppedMembership,
			// Token: 0x04004F28 RID: 20264
			ErrorSingleDatabaseCopyRemove,
			// Token: 0x04004F29 RID: 20265
			TestSearchMapiError,
			// Token: 0x04004F2A RID: 20266
			ErrorSetScopeNeedHierarchicalRoleAssignment,
			// Token: 0x04004F2B RID: 20267
			ErrorInvalidOperationOnLowestEap,
			// Token: 0x04004F2C RID: 20268
			ErrorTooManyRegexCharsInRuleCollection,
			// Token: 0x04004F2D RID: 20269
			FailedToDkmProtectPrivateKey,
			// Token: 0x04004F2E RID: 20270
			ErrorUnsupportedAuthMethodForMerges,
			// Token: 0x04004F2F RID: 20271
			NotValidSecurityPrincipal,
			// Token: 0x04004F30 RID: 20272
			ErrorRoleEntryParametersNotExistOnParent,
			// Token: 0x04004F31 RID: 20273
			ConfirmEnableExchangeCertificate,
			// Token: 0x04004F32 RID: 20274
			ConfirmationMessageRemoveMigrationBatch,
			// Token: 0x04004F33 RID: 20275
			WritableRecipientNotUnique,
			// Token: 0x04004F34 RID: 20276
			AddedTasksForComponent,
			// Token: 0x04004F35 RID: 20277
			SuccessAddGlobalMonitoringOverride,
			// Token: 0x04004F36 RID: 20278
			GetCopyStatusRpcQuery,
			// Token: 0x04004F37 RID: 20279
			RcrDatabaseFailoverMountNotAllowed,
			// Token: 0x04004F38 RID: 20280
			ErrorInvalidParameterForPublicFolderRestore,
			// Token: 0x04004F39 RID: 20281
			DagTaskSleepAfterClusterFormation,
			// Token: 0x04004F3A RID: 20282
			ConfirmationMessageRemoveExchangeUpgradeBucket,
			// Token: 0x04004F3B RID: 20283
			IncompatibleGetTransportRuleParameters,
			// Token: 0x04004F3C RID: 20284
			FormsAuthenticationIsEnabledAccessDeniedException,
			// Token: 0x04004F3D RID: 20285
			ConfirmationMessageSetForeignConnector,
			// Token: 0x04004F3E RID: 20286
			ComplianceBindingNoError,
			// Token: 0x04004F3F RID: 20287
			ConfirmationMessageSetGls,
			// Token: 0x04004F40 RID: 20288
			ErrorUserNotHaveMailboxPlan,
			// Token: 0x04004F41 RID: 20289
			ConfirmationMessageNewManagementRoleAssignment,
			// Token: 0x04004F42 RID: 20290
			ConfirmationMessageUpdateSystemAddressList,
			// Token: 0x04004F43 RID: 20291
			ErrorWMIException,
			// Token: 0x04004F44 RID: 20292
			VerboseFailedCreateDirectory,
			// Token: 0x04004F45 RID: 20293
			ReadDeletedObjectsPermissionDeniedException,
			// Token: 0x04004F46 RID: 20294
			ConfirmationMessageRemoveMalwareFilterPolicy,
			// Token: 0x04004F47 RID: 20295
			ConfirmationMessageRemoveOutlookProtectionRule,
			// Token: 0x04004F48 RID: 20296
			SeederCancelDbSeedRpcBegin,
			// Token: 0x04004F49 RID: 20297
			ConfirmationMessageRemoveCountryList,
			// Token: 0x04004F4A RID: 20298
			ConfirmationMessageRemoveIPBlockListEntry,
			// Token: 0x04004F4B RID: 20299
			SetLiveFedUriReserveResponse,
			// Token: 0x04004F4C RID: 20300
			InvalidMacroName,
			// Token: 0x04004F4D RID: 20301
			ErrorRemoveGlobalAddressListWithAssociatedAddressBookPolicies,
			// Token: 0x04004F4E RID: 20302
			WarningMultiSiteReplicationFailed,
			// Token: 0x04004F4F RID: 20303
			OutlookProtectionRuleRmsTemplateNotFound,
			// Token: 0x04004F50 RID: 20304
			WarnAdministratorToRestartService,
			// Token: 0x04004F51 RID: 20305
			Error_SentRepresentingChanged,
			// Token: 0x04004F52 RID: 20306
			DatabasesAvailabilityCheckFailed,
			// Token: 0x04004F53 RID: 20307
			LegacyPermissionsDomainNotReachableWarning,
			// Token: 0x04004F54 RID: 20308
			ClassificationRuleCollectionDistinctFunctionsExceedLimit,
			// Token: 0x04004F55 RID: 20309
			FaildToCreateFolder,
			// Token: 0x04004F56 RID: 20310
			MismatchedSTS,
			// Token: 0x04004F57 RID: 20311
			ConfirmationMessageNewMservEntry,
			// Token: 0x04004F58 RID: 20312
			ErrorPortalTextBig,
			// Token: 0x04004F59 RID: 20313
			ConfirmationMessageRemoveCompletedMoveRequest,
			// Token: 0x04004F5A RID: 20314
			ErrorCannotMovePublicFolderMailboxesCrossForestOrCrossPremise,
			// Token: 0x04004F5B RID: 20315
			ServerVersionNull,
			// Token: 0x04004F5C RID: 20316
			ExchangeUpgradeBucketTargetIncludedInSource,
			// Token: 0x04004F5D RID: 20317
			DagTaskClusteringMustBeInstalledAndRunningException,
			// Token: 0x04004F5E RID: 20318
			ErrorCannotModifyRequestAlreadyCompleting,
			// Token: 0x04004F5F RID: 20319
			ErrorBadItemLimitAlreadyExceededNew,
			// Token: 0x04004F60 RID: 20320
			ErrorLiveDomainServicesAccess,
			// Token: 0x04004F61 RID: 20321
			VerboseSyncMailboxesWithDS,
			// Token: 0x04004F62 RID: 20322
			ErrorTeamMailboxUserNotResolved,
			// Token: 0x04004F63 RID: 20323
			ApplyingHoldSettings,
			// Token: 0x04004F64 RID: 20324
			AdminGroupCouldNotBeRead,
			// Token: 0x04004F65 RID: 20325
			ChangeMFLFile,
			// Token: 0x04004F66 RID: 20326
			ErrorSuspendWhenReadyToCompleteNotSupported,
			// Token: 0x04004F67 RID: 20327
			RequestedVersionIsLowerThanCurrentVersion,
			// Token: 0x04004F68 RID: 20328
			VerboseTestEwsFromAutoDiscover,
			// Token: 0x04004F69 RID: 20329
			ErrorFailedOnMemberHasMailbox,
			// Token: 0x04004F6A RID: 20330
			ErrorCannotUnsetDowngradedExchangeServerAuthIfReceiveConnectorHasSuppressXAnonmyousTlsSet,
			// Token: 0x04004F6B RID: 20331
			ErrorFullSyncInProgress,
			// Token: 0x04004F6C RID: 20332
			CasHealthTransactionWarnings,
			// Token: 0x04004F6D RID: 20333
			ConfirmationMessageRemoveRemoteMailbox,
			// Token: 0x04004F6E RID: 20334
			InterceptorErrorConditionInvalidFormat,
			// Token: 0x04004F6F RID: 20335
			UMCallAnsweringRuleTimeOfDayComplex,
			// Token: 0x04004F70 RID: 20336
			ProtocolTransactionWarnings,
			// Token: 0x04004F71 RID: 20337
			RestoreOrExportSourceAndTargetTheSame,
			// Token: 0x04004F72 RID: 20338
			AlsEmailBodyAdminParamters,
			// Token: 0x04004F73 RID: 20339
			ConfirmationMessageSetAdSite,
			// Token: 0x04004F74 RID: 20340
			TestSearchCurrentServer,
			// Token: 0x04004F75 RID: 20341
			ErrorInvalidCharactersInParameterValue,
			// Token: 0x04004F76 RID: 20342
			DuplicateX400Domain,
			// Token: 0x04004F77 RID: 20343
			ServerNamesMustBeUnique,
			// Token: 0x04004F78 RID: 20344
			CasHealthOwaUnsupportedLogonAuthenticationMethod,
			// Token: 0x04004F79 RID: 20345
			ReceiveConnectorAclOverflow,
			// Token: 0x04004F7A RID: 20346
			FailedToLoadSubscriptionFile,
			// Token: 0x04004F7B RID: 20347
			DagTaskProblemChangingQuorumExceptionPathNotFound,
			// Token: 0x04004F7C RID: 20348
			ConfirmationMessageNewMailboxFolder,
			// Token: 0x04004F7D RID: 20349
			ErrorTargetUserAlreadyHasPrimaryMailbox,
			// Token: 0x04004F7E RID: 20350
			TestMailflowSucceededNoDatabaseOnSourceServer,
			// Token: 0x04004F7F RID: 20351
			DagTaskProblemChangingQuorumExceptionBadNetName,
			// Token: 0x04004F80 RID: 20352
			ErrorDefaultDomainNotUnique,
			// Token: 0x04004F81 RID: 20353
			OnPremisesOrganizationOutboundConnectorNotUnique,
			// Token: 0x04004F82 RID: 20354
			ParameterAllowedOnlyForTopLevelRoleManipulation,
			// Token: 0x04004F83 RID: 20355
			UserFederatedDomainInLocalOrgRelationship,
			// Token: 0x04004F84 RID: 20356
			ErrorUMInvalidSipNameOrExtensionAddressFormat,
			// Token: 0x04004F85 RID: 20357
			ConfirmationMessageNewEcpVirtualDirectory,
			// Token: 0x04004F86 RID: 20358
			ConfirmationMessageSetUMMailboxPlan,
			// Token: 0x04004F87 RID: 20359
			ErrorAutoDiscoverValidatorEwsNotFound,
			// Token: 0x04004F88 RID: 20360
			ConfirmationMessageRemoveIPAllowListProvider,
			// Token: 0x04004F89 RID: 20361
			ErrorFingerprintRulePackTemplateCorrupted,
			// Token: 0x04004F8A RID: 20362
			ServiceDependencies,
			// Token: 0x04004F8B RID: 20363
			NoSubscription,
			// Token: 0x04004F8C RID: 20364
			ExceptionPerfCounterUnlodctrFailed,
			// Token: 0x04004F8D RID: 20365
			BPAConfigurationWarningFound,
			// Token: 0x04004F8E RID: 20366
			ExceptionExsetdataGenericError,
			// Token: 0x04004F8F RID: 20367
			ErrorRemovingPolicyInUse,
			// Token: 0x04004F90 RID: 20368
			ErrorMailboxBeingMoved,
			// Token: 0x04004F91 RID: 20369
			ErrorPolicyRuleExists,
			// Token: 0x04004F92 RID: 20370
			ErrorConvertNonUniversalDistributionGroup,
			// Token: 0x04004F93 RID: 20371
			ErrorUserAlreadyDelegate,
			// Token: 0x04004F94 RID: 20372
			DatabaseCopyQueueNotKeepingUp,
			// Token: 0x04004F95 RID: 20373
			EnumerateRightsFailedException,
			// Token: 0x04004F96 RID: 20374
			ErrorOrgsStillUsingThisMailFlowPartner,
			// Token: 0x04004F97 RID: 20375
			ReadingComponents,
			// Token: 0x04004F98 RID: 20376
			WarningCustomizationsAreAlreadyEnabled,
			// Token: 0x04004F99 RID: 20377
			CasHealthOwaAuthTypesSupported4,
			// Token: 0x04004F9A RID: 20378
			InvalidFqdnUnderExchangeServerAuth,
			// Token: 0x04004F9B RID: 20379
			MultipleCertsFoundBySubject,
			// Token: 0x04004F9C RID: 20380
			ValueTooSmallException,
			// Token: 0x04004F9D RID: 20381
			TestSearchServerIsNull,
			// Token: 0x04004F9E RID: 20382
			MonitoringServiceRequestFailed,
			// Token: 0x04004F9F RID: 20383
			MailboxSearchInPlaceHoldFormatError,
			// Token: 0x04004FA0 RID: 20384
			ConfirmationMessageSetExchangeObjectVersion,
			// Token: 0x04004FA1 RID: 20385
			ConfirmationMessageNewHostedContentFilterPolicy,
			// Token: 0x04004FA2 RID: 20386
			ErrorMoreThanOneValue,
			// Token: 0x04004FA3 RID: 20387
			ConfirmationMessageNewSyncServiceInstance,
			// Token: 0x04004FA4 RID: 20388
			ErrorTenantAlreadyBeingRelocated,
			// Token: 0x04004FA5 RID: 20389
			ErrorAddedRecipientCannotBeDistributionGroup,
			// Token: 0x04004FA6 RID: 20390
			ConfirmationMessageNewResourcePolicy,
			// Token: 0x04004FA7 RID: 20391
			ErrorNotPublicFolderMailbox,
			// Token: 0x04004FA8 RID: 20392
			ExchangeSettingsScopeAlreadyExists,
			// Token: 0x04004FA9 RID: 20393
			GetDbcsRpcNotSupported,
			// Token: 0x04004FAA RID: 20394
			AlsEmailBodyAdminObjectIds,
			// Token: 0x04004FAB RID: 20395
			WarningCustomRoleCreatedDuringUpgradeForSplittingRole,
			// Token: 0x04004FAC RID: 20396
			NullOrEmptyStringNotAllowed,
			// Token: 0x04004FAD RID: 20397
			CallingLineIdNotUnique,
			// Token: 0x04004FAE RID: 20398
			ErrorFailedToEvictMember,
			// Token: 0x04004FAF RID: 20399
			MapiTransactionDiagnosticFailedToGetMdbLocation,
			// Token: 0x04004FB0 RID: 20400
			CasHealthOwaMailboxServerColon,
			// Token: 0x04004FB1 RID: 20401
			CasHealthPowerShellConnectionVirtualDirectory,
			// Token: 0x04004FB2 RID: 20402
			ConfirmationMessageRemoveForeignConnector,
			// Token: 0x04004FB3 RID: 20403
			OptionalRetentionPolicyTagsMustBePersonalTags,
			// Token: 0x04004FB4 RID: 20404
			WarningPasswordIgnored,
			// Token: 0x04004FB5 RID: 20405
			ErrorSynchronizationTypeNotRecognized,
			// Token: 0x04004FB6 RID: 20406
			AllSourceMailboxesParameterOverride,
			// Token: 0x04004FB7 RID: 20407
			ErrorCmdletNotSupportedForGroupMailbox,
			// Token: 0x04004FB8 RID: 20408
			AlgorithmFailedForTraining,
			// Token: 0x04004FB9 RID: 20409
			NotTransportServer,
			// Token: 0x04004FBA RID: 20410
			WarningIssuerCertificateExpired,
			// Token: 0x04004FBB RID: 20411
			AlsEmailBodyAdminUserIds,
			// Token: 0x04004FBC RID: 20412
			ExceptionServiceIsNotRunning,
			// Token: 0x04004FBD RID: 20413
			ConfirmationMessageMoveMailboxDatabaseMasterAnyServer,
			// Token: 0x04004FBE RID: 20414
			ExRBACFailedToUpdateCustomRole,
			// Token: 0x04004FBF RID: 20415
			ErrorImageFileBig,
			// Token: 0x04004FC0 RID: 20416
			ErrorUsedByOrganization,
			// Token: 0x04004FC1 RID: 20417
			DagNetworkUnknownSubnetWarning,
			// Token: 0x04004FC2 RID: 20418
			ManageIsapiExtensionCouldNotFindExtensionException,
			// Token: 0x04004FC3 RID: 20419
			DomainUsersGroupNotFoundException,
			// Token: 0x04004FC4 RID: 20420
			ErrorLinkedUserAccountIsAlreadyUsed,
			// Token: 0x04004FC5 RID: 20421
			ConfirmationMessageSetDetailsTemplate,
			// Token: 0x04004FC6 RID: 20422
			AgentAlreadyRegistered,
			// Token: 0x04004FC7 RID: 20423
			ProgressActivityRemovingAddressListTree,
			// Token: 0x04004FC8 RID: 20424
			ErrorProvisioningDomainNotMatchAcceptedDomain,
			// Token: 0x04004FC9 RID: 20425
			ErrorLargeDataLossNotAccepted,
			// Token: 0x04004FCA RID: 20426
			ErrorAmbiguousPolicyIdentity,
			// Token: 0x04004FCB RID: 20427
			ErrorOabGenFailed,
			// Token: 0x04004FCC RID: 20428
			WarningDuplicatedPropertyModifiedEntry,
			// Token: 0x04004FCD RID: 20429
			CasTransactionResultCaseNotHandled,
			// Token: 0x04004FCE RID: 20430
			ProbeResult,
			// Token: 0x04004FCF RID: 20431
			ConfirmationMessageAddSecondaryDomain,
			// Token: 0x04004FD0 RID: 20432
			ConfirmationMessageAddMailboxDatabaseCopy,
			// Token: 0x04004FD1 RID: 20433
			WarningMustRunEnableAddressListPagingWithForceSwitch,
			// Token: 0x04004FD2 RID: 20434
			ConfirmationMessageRemoveDatabaseAvailabilityGroup,
			// Token: 0x04004FD3 RID: 20435
			ErrorNonExistentContact,
			// Token: 0x04004FD4 RID: 20436
			VerboseClearPreferredServer,
			// Token: 0x04004FD5 RID: 20437
			ErrorStoreMailboxNotUnique,
			// Token: 0x04004FD6 RID: 20438
			ConfirmationMessageSetRemoteAccountPolicy,
			// Token: 0x04004FD7 RID: 20439
			ErrorSourceHoldNotTimedOut,
			// Token: 0x04004FD8 RID: 20440
			SubscriptionInvalidEmailAddress,
			// Token: 0x04004FD9 RID: 20441
			ErrorObjectNotFound,
			// Token: 0x04004FDA RID: 20442
			ErrorCertificateSKINotUnique,
			// Token: 0x04004FDB RID: 20443
			ConfirmationMessageRemoveRecipientTemplateProvisioningPolicy,
			// Token: 0x04004FDC RID: 20444
			CasHealthOwaErrorPageErrorMessage,
			// Token: 0x04004FDD RID: 20445
			ErrorNotEnoughConfigPermissions,
			// Token: 0x04004FDE RID: 20446
			ErrorRequestJobAlreadyOnProperQueue,
			// Token: 0x04004FDF RID: 20447
			ExchangeConfigContainerDataValidationException,
			// Token: 0x04004FE0 RID: 20448
			ErrorSearchUserNotUnique,
			// Token: 0x04004FE1 RID: 20449
			ErrorMailboxDatabaseNotOnE15Server,
			// Token: 0x04004FE2 RID: 20450
			ConfirmationMessageConfigureWSRMPolicy,
			// Token: 0x04004FE3 RID: 20451
			ErrorOrganizationThrottlingPolicyAlreadyExists,
			// Token: 0x04004FE4 RID: 20452
			ErrorThrottlingPolicyNotFound,
			// Token: 0x04004FE5 RID: 20453
			ProtocolLogAttachmentNote,
			// Token: 0x04004FE6 RID: 20454
			ClassificationRuleCollectionOobRulesRemoved,
			// Token: 0x04004FE7 RID: 20455
			ErrorInvalidExternalUserId,
			// Token: 0x04004FE8 RID: 20456
			SetLiveFedUriReserveRequest,
			// Token: 0x04004FE9 RID: 20457
			DlpPolicyOptionalParameterNotSupplied,
			// Token: 0x04004FEA RID: 20458
			ErrorFaildToWriteRegistry,
			// Token: 0x04004FEB RID: 20459
			ErrorDistributionListJoinClosed,
			// Token: 0x04004FEC RID: 20460
			EBDInvalidBundle,
			// Token: 0x04004FED RID: 20461
			CasHealthAutodiscoverServer,
			// Token: 0x04004FEE RID: 20462
			ConfirmationMessageRemovePartnerApplication,
			// Token: 0x04004FEF RID: 20463
			ErrorManagedFolderMailboxPolicyNotUnique,
			// Token: 0x04004FF0 RID: 20464
			GetDbcsRpcQuery,
			// Token: 0x04004FF1 RID: 20465
			ErrorWindowsLiveIdAssociatedWithAnotherRecipient,
			// Token: 0x04004FF2 RID: 20466
			MoveMailboxNullOrEmptyStringInParameter,
			// Token: 0x04004FF3 RID: 20467
			ErrorLiveDomainServicesUnexpectedResult,
			// Token: 0x04004FF4 RID: 20468
			RequiredReportingParameter,
			// Token: 0x04004FF5 RID: 20469
			OutOfRangeSlaTaget,
			// Token: 0x04004FF6 RID: 20470
			MailboxSearchTaskException,
			// Token: 0x04004FF7 RID: 20471
			RecipientNotFoundInOrganization,
			// Token: 0x04004FF8 RID: 20472
			ErrorCannotModifyContentSettingsLinkedToTag,
			// Token: 0x04004FF9 RID: 20473
			DbCopyAlreadyHostedOnServerException,
			// Token: 0x04004FFA RID: 20474
			ConfirmationMessageEnableCmdletExtensionAgent,
			// Token: 0x04004FFB RID: 20475
			ExTrustedSubsystemGroupNotFoundException,
			// Token: 0x04004FFC RID: 20476
			CannotDeleteAssociatedMailboxPolicyException,
			// Token: 0x04004FFD RID: 20477
			ResumeSuccessInformationalMessage,
			// Token: 0x04004FFE RID: 20478
			ErrorFailedToCreateMember,
			// Token: 0x04004FFF RID: 20479
			DatabaseCopyStateCheckDesc,
			// Token: 0x04005000 RID: 20480
			CouldNotRemoveRequest,
			// Token: 0x04005001 RID: 20481
			ConfirmationMessageSetOwaVirtualDirectory,
			// Token: 0x04005002 RID: 20482
			ErrorAssigneeUserNotFound,
			// Token: 0x04005003 RID: 20483
			ErrorSetScopeToBlockSelf,
			// Token: 0x04005004 RID: 20484
			ErrorInvalidMemberName,
			// Token: 0x04005005 RID: 20485
			VerboseMountDatabaseDataLoss,
			// Token: 0x04005006 RID: 20486
			MailboxSearchObjectWithHoldIdentityNotFound,
			// Token: 0x04005007 RID: 20487
			InvalidUMPilotIdentifierListEntry,
			// Token: 0x04005008 RID: 20488
			SeedingErrorFileIsDirectory,
			// Token: 0x04005009 RID: 20489
			ConfirmationMessageRemoveClassificationRuleCollection,
			// Token: 0x0400500A RID: 20490
			VerboseCopyDatabaseLogFiles,
			// Token: 0x0400500B RID: 20491
			ConfirmationMessageSetPolicyTipConfig,
			// Token: 0x0400500C RID: 20492
			InstallIisWebServiceExtensionExists,
			// Token: 0x0400500D RID: 20493
			ErrorPfDatabaseAlreadyExists,
			// Token: 0x0400500E RID: 20494
			StatusMessageUpdatePublicFolderMailboxUnderProgress,
			// Token: 0x0400500F RID: 20495
			ConfirmationMessageRemoveSystemMessage,
			// Token: 0x04005010 RID: 20496
			ErrorCannotParseUsefulHostnameFrom,
			// Token: 0x04005011 RID: 20497
			ErrorInvalidFingerprint,
			// Token: 0x04005012 RID: 20498
			SeederEndDbSeedRpcFailedException,
			// Token: 0x04005013 RID: 20499
			ErrorGroupNotFound,
			// Token: 0x04005014 RID: 20500
			ErrorSetPublicFolderMailRecipientGuidNotFoundInAd,
			// Token: 0x04005015 RID: 20501
			MaximumAllowedNumberOfGatewayIPAddressesExceededId,
			// Token: 0x04005016 RID: 20502
			OutlookConnectivityErrorUserNotUnique,
			// Token: 0x04005017 RID: 20503
			InfoCreatedWKGuid,
			// Token: 0x04005018 RID: 20504
			ErrorDbCopyNotHostedOnServer,
			// Token: 0x04005019 RID: 20505
			ErrorAddressListOrGlobalAddressListNotUnique,
			// Token: 0x0400501A RID: 20506
			RecipientNotUniqueException,
			// Token: 0x0400501B RID: 20507
			ErrorAuditLogMailboxShouldBeDeletedWithAuditLogSpecified,
			// Token: 0x0400501C RID: 20508
			ParameterConflict,
			// Token: 0x0400501D RID: 20509
			WarningSetAdminAuditLogOnPreR5,
			// Token: 0x0400501E RID: 20510
			AmInvalidRoleDagServer,
			// Token: 0x0400501F RID: 20511
			CasHealthPowerShellConnectionUri,
			// Token: 0x04005020 RID: 20512
			CouldNotFindExchangeServerDirectoryEntryException,
			// Token: 0x04005021 RID: 20513
			ErrorMailboxCreationFailure,
			// Token: 0x04005022 RID: 20514
			ErrorStampSecondaryAddress,
			// Token: 0x04005023 RID: 20515
			ExchangeSettingsCannotChangeScopeFilterOnDownlevelGroup,
			// Token: 0x04005024 RID: 20516
			ErrorConflictingMailboxFolder,
			// Token: 0x04005025 RID: 20517
			NotSupportedForPre14Mailbox,
			// Token: 0x04005026 RID: 20518
			ErrorCanNotApplyMailboxSettingOnlyPolicy,
			// Token: 0x04005027 RID: 20519
			ConfirmationMessageRemoveManagementRoleRecursive,
			// Token: 0x04005028 RID: 20520
			ConfirmationMessageDisableRemoteMailbox,
			// Token: 0x04005029 RID: 20521
			ExchangeSettingsGroupNotFound,
			// Token: 0x0400502A RID: 20522
			CasHealthCalendarCheckSuccess,
			// Token: 0x0400502B RID: 20523
			FailedToEvictNode,
			// Token: 0x0400502C RID: 20524
			ErrorArchiveTargetIsNotAnMEU,
			// Token: 0x0400502D RID: 20525
			InfoTakeOwnership,
			// Token: 0x0400502E RID: 20526
			FailedToDecryptImportedTrustedPublishingDomain,
			// Token: 0x0400502F RID: 20527
			TestMessageSent,
			// Token: 0x04005030 RID: 20528
			ConfirmationMessageRemoveDeliveryAgentConnector,
			// Token: 0x04005031 RID: 20529
			ConfirmationMessageRemoveMoveRequestDebug,
			// Token: 0x04005032 RID: 20530
			SourceAndTargetDialPlanURITypeMismatch,
			// Token: 0x04005033 RID: 20531
			ErrorRemovedMailboxDoesNotHaveMailboxGuid,
			// Token: 0x04005034 RID: 20532
			ErrorCannotRetrieveSyncDaemonArbitrationConfigContainer,
			// Token: 0x04005035 RID: 20533
			ErrorFailedToPrepopulateCache,
			// Token: 0x04005036 RID: 20534
			InvalidIntegerConfiguration,
			// Token: 0x04005037 RID: 20535
			ErrorClientAccessArrayNotUnique,
			// Token: 0x04005038 RID: 20536
			MoveMailboxToE14,
			// Token: 0x04005039 RID: 20537
			ErrorUnableToAccessInboxRulesGenericMessage,
			// Token: 0x0400503A RID: 20538
			ConfirmationMessageUpdateOfflineAddressBook,
			// Token: 0x0400503B RID: 20539
			ErrorLogFolderPathNotUniqueUnderSameDAG,
			// Token: 0x0400503C RID: 20540
			ErrorRelocationConstraintsPresent,
			// Token: 0x0400503D RID: 20541
			VerboseCheckingRecipientWriteScope,
			// Token: 0x0400503E RID: 20542
			ConfirmationMessageRemoveTransportRuleThatBelongsToDLpPolicy,
			// Token: 0x0400503F RID: 20543
			ProvisioningRequestNotFound,
			// Token: 0x04005040 RID: 20544
			ProgressStatusUpdateRecipient,
			// Token: 0x04005041 RID: 20545
			ErrorTeamMailboxSetShowInMyClientForClosedMailbox,
			// Token: 0x04005042 RID: 20546
			CertificateInvalidFileName,
			// Token: 0x04005043 RID: 20547
			UnableToGrantFullControlOnEOA,
			// Token: 0x04005044 RID: 20548
			TenantAlreadyHasMigrationActive,
			// Token: 0x04005045 RID: 20549
			ExceptionStorageOther,
			// Token: 0x04005046 RID: 20550
			ErrorServerIsNotInCasRole,
			// Token: 0x04005047 RID: 20551
			MsiInstallFailed,
			// Token: 0x04005048 RID: 20552
			ConfirmationMessageRemoveMailboxRepairRequestDatabase,
			// Token: 0x04005049 RID: 20553
			CasHealthOwaHttpCode,
			// Token: 0x0400504A RID: 20554
			VerboseFixingVersionAndMinAdmin,
			// Token: 0x0400504B RID: 20555
			ReservedIPv4AddressesAreNotAllowedInGatewayIPAddressesId,
			// Token: 0x0400504C RID: 20556
			ConfirmationMessageNewOutboundConnector,
			// Token: 0x0400504D RID: 20557
			ClassificationRuleCollectionDistinctRegexesExceedLimit,
			// Token: 0x0400504E RID: 20558
			CannotRunMonitoringTaskRemotelyException,
			// Token: 0x0400504F RID: 20559
			ErrorInvalidMailboxPlanTransition,
			// Token: 0x04005050 RID: 20560
			ConfirmationMessageNewPswsVirtualDirectory,
			// Token: 0x04005051 RID: 20561
			EstimateOnlyLogLevelParameterConflict,
			// Token: 0x04005052 RID: 20562
			DagNetworkEmptyDagException,
			// Token: 0x04005053 RID: 20563
			VerboseMailboxDistinguishedName,
			// Token: 0x04005054 RID: 20564
			ErrorEdbFileLocationNotOnFixedDrive,
			// Token: 0x04005055 RID: 20565
			IISNotReachableException,
			// Token: 0x04005056 RID: 20566
			AppIDServiceUrl,
			// Token: 0x04005057 RID: 20567
			ErrorUnableToReserveUri,
			// Token: 0x04005058 RID: 20568
			ErrorFailedToDetermineExchangeModeException,
			// Token: 0x04005059 RID: 20569
			ConfirmationMessageNewTagELCContentSettings,
			// Token: 0x0400505A RID: 20570
			ConfirmationMessageNewMailMessage,
			// Token: 0x0400505B RID: 20571
			CouldNotParseRemoteValue,
			// Token: 0x0400505C RID: 20572
			TenantNotificationDebugEventResourceFileNotFound,
			// Token: 0x0400505D RID: 20573
			DatabaseNotMovedInServerModeException,
			// Token: 0x0400505E RID: 20574
			TestSearchCreateFolder,
			// Token: 0x0400505F RID: 20575
			InterceptorWarningConditionInvalidCharacters,
			// Token: 0x04005060 RID: 20576
			ConfirmationMessageRemoveRoleGroupMember,
			// Token: 0x04005061 RID: 20577
			MissingMapping,
			// Token: 0x04005062 RID: 20578
			InfoLicensingUri,
			// Token: 0x04005063 RID: 20579
			ConfirmationMessageNewEmailAddressPolicySMTPTemplateWithCustomFilter,
			// Token: 0x04005064 RID: 20580
			VerboseSyncTaskHighestCommittedUSN,
			// Token: 0x04005065 RID: 20581
			ConfirmationMessageNewMailboxWithWindowsLiveId,
			// Token: 0x04005066 RID: 20582
			ExceptionPerfCounterDefinitionFileNotFound,
			// Token: 0x04005067 RID: 20583
			DagNetworkEnumerationFailed,
			// Token: 0x04005068 RID: 20584
			ErrorGroupOrIndividualRecipientNeeded,
			// Token: 0x04005069 RID: 20585
			VerboseResetMdb,
			// Token: 0x0400506A RID: 20586
			CertificateNotValidForExchange,
			// Token: 0x0400506B RID: 20587
			ProvisioningTenantAlreadyHasMigrationPending,
			// Token: 0x0400506C RID: 20588
			ErrorRetentionTagNotFound,
			// Token: 0x0400506D RID: 20589
			ConfirmationMessageTestMRSHealth,
			// Token: 0x0400506E RID: 20590
			VerboseExecuteCmd,
			// Token: 0x0400506F RID: 20591
			BadProtocolSettingsException,
			// Token: 0x04005070 RID: 20592
			ConfirmationMessageSetRemoteMailbox,
			// Token: 0x04005071 RID: 20593
			ErrorRoleNameMustBeUnique,
			// Token: 0x04005072 RID: 20594
			ConfirmationMessageNewOabVirtualDirectory,
			// Token: 0x04005073 RID: 20595
			ConfirmRemovalOfRequestForInaccessibleDatabase,
			// Token: 0x04005074 RID: 20596
			Error_DatabaseAttributesMismatch,
			// Token: 0x04005075 RID: 20597
			ErrorOldTenantsCannotBeMigrated,
			// Token: 0x04005076 RID: 20598
			ConfirmationMessageEnableFederatedOrgId,
			// Token: 0x04005077 RID: 20599
			ChangingGlobalPolicy,
			// Token: 0x04005078 RID: 20600
			GetQueueDigestFromMtrtFailed,
			// Token: 0x04005079 RID: 20601
			ConfirmationMessageSetContact,
			// Token: 0x0400507A RID: 20602
			TestSearchCatalogBacklog,
			// Token: 0x0400507B RID: 20603
			UnableToRetrieveFolderName,
			// Token: 0x0400507C RID: 20604
			messageExternalUrlNotFoundException,
			// Token: 0x0400507D RID: 20605
			DagTaskJoinedNodeToCluster,
			// Token: 0x0400507E RID: 20606
			ErrorPidRealmIssuerDifferentFromMetadata,
			// Token: 0x0400507F RID: 20607
			ErrorLiveIdServiceDown,
			// Token: 0x04005080 RID: 20608
			IisUtilityInvalidApplicationRootPathException,
			// Token: 0x04005081 RID: 20609
			NeedNonrestrictedScopeAssignment,
			// Token: 0x04005082 RID: 20610
			CollectionConflictionError,
			// Token: 0x04005083 RID: 20611
			ConfirmationMessageRemoveMSOFullSyncRequest,
			// Token: 0x04005084 RID: 20612
			ErrorNoArchiveWithManagedFolder,
			// Token: 0x04005085 RID: 20613
			FailedToGetPropertyFromPF,
			// Token: 0x04005086 RID: 20614
			BackSyncObjectExcluded,
			// Token: 0x04005087 RID: 20615
			RestoreMailboxDuplicateRecoveryMailbox,
			// Token: 0x04005088 RID: 20616
			ErrorBPAScanTypeNotFound,
			// Token: 0x04005089 RID: 20617
			VerboseInvokingRUS,
			// Token: 0x0400508A RID: 20618
			VerboseEvictMember,
			// Token: 0x0400508B RID: 20619
			ErrorWSManConfigFileNotFound,
			// Token: 0x0400508C RID: 20620
			RuleIsCorrupt,
			// Token: 0x0400508D RID: 20621
			MailboxReplicationServiceIsScanningForJobs,
			// Token: 0x0400508E RID: 20622
			VerboseCheckingConfigWriteScope,
			// Token: 0x0400508F RID: 20623
			CasHealthMailboxNotFound,
			// Token: 0x04005090 RID: 20624
			ErrorRemoveNonExistentParameters,
			// Token: 0x04005091 RID: 20625
			DagTaskServerMailboxServerIsInDifferentDagException,
			// Token: 0x04005092 RID: 20626
			DagTaskClusterWithDagNameIsSquattingException,
			// Token: 0x04005093 RID: 20627
			MsiInstallFailedDetailed,
			// Token: 0x04005094 RID: 20628
			ErrorConnectorNotEnabled,
			// Token: 0x04005095 RID: 20629
			ConfirmationMessageRemoveFederatedDomain,
			// Token: 0x04005096 RID: 20630
			ConfirmationMessageSetCallAnsweringRule,
			// Token: 0x04005097 RID: 20631
			CannotInstallWithNonCurrentRoles,
			// Token: 0x04005098 RID: 20632
			InterceptorErrorInvalidXml,
			// Token: 0x04005099 RID: 20633
			ErrorMserveException,
			// Token: 0x0400509A RID: 20634
			ErrorReceiveConnectorNotFound,
			// Token: 0x0400509B RID: 20635
			IISErrorReadingWritingException,
			// Token: 0x0400509C RID: 20636
			ErrorRemoveClassificationUsedByTransportRule,
			// Token: 0x0400509D RID: 20637
			VerboseMailboxDelegateSkip,
			// Token: 0x0400509E RID: 20638
			ErrorAccessingFederationMetadata,
			// Token: 0x0400509F RID: 20639
			ComplianceSearchTasksCreated,
			// Token: 0x040050A0 RID: 20640
			ExceptionDirectoryNotFound,
			// Token: 0x040050A1 RID: 20641
			ComplianceSearchNameIsNotUnique,
			// Token: 0x040050A2 RID: 20642
			ConfirmationMessageNewMailboxPublicFolder,
			// Token: 0x040050A3 RID: 20643
			ErrorCompletedMoveMustBeCleared,
			// Token: 0x040050A4 RID: 20644
			ConfirmationMessageNewMailboxPlan,
			// Token: 0x040050A5 RID: 20645
			ConfirmationMessageRemoveRMSTPD,
			// Token: 0x040050A6 RID: 20646
			ClassificationRuleCollectionReservedProcessorIdViolation,
			// Token: 0x040050A7 RID: 20647
			ConfirmationMessageSetMailboxTransportService,
			// Token: 0x040050A8 RID: 20648
			ErrorDatabaseVersionUnsupported,
			// Token: 0x040050A9 RID: 20649
			ErrorCannotChangeObjectOutOfWriteScope,
			// Token: 0x040050AA RID: 20650
			InstallingMSIFor,
			// Token: 0x040050AB RID: 20651
			CannotMakeAcceptedDomainExternalRelaySinceItIsReferencedByAddressTemplate,
			// Token: 0x040050AC RID: 20652
			EmptyStringConfiguration,
			// Token: 0x040050AD RID: 20653
			ConfirmationMessageEnableMailboxShared,
			// Token: 0x040050AE RID: 20654
			ExceptionSourceMailboxNotFound,
			// Token: 0x040050AF RID: 20655
			ErrorReferenceParameter,
			// Token: 0x040050B0 RID: 20656
			ImportCertificateDataIsNull,
			// Token: 0x040050B1 RID: 20657
			ErrorCannotDetermineEndpointForNewTenant,
			// Token: 0x040050B2 RID: 20658
			LogMigrationProgress,
			// Token: 0x040050B3 RID: 20659
			GetHealthReportProgressProcessing,
			// Token: 0x040050B4 RID: 20660
			ErrorFailedToRunSiteFolderCheckTask,
			// Token: 0x040050B5 RID: 20661
			ErrorOnlyOnePartitionCanBeLocalForest,
			// Token: 0x040050B6 RID: 20662
			ErrorMoveDatabasePathAsSourceFileNotExist,
			// Token: 0x040050B7 RID: 20663
			InvalidObjectIdForTenantWideDivergence,
			// Token: 0x040050B8 RID: 20664
			RuleStateParameterValueIsInconsistentWithDlpPolicyState,
			// Token: 0x040050B9 RID: 20665
			ErrorApplicationNotDefined,
			// Token: 0x040050BA RID: 20666
			OwaAttachmentTypeCharacterOutOfAsciiRange,
			// Token: 0x040050BB RID: 20667
			ConfirmationMessageNewSendConnectorAddressSpaces,
			// Token: 0x040050BC RID: 20668
			RemovingDefaultPolicyIsNotSupported,
			// Token: 0x040050BD RID: 20669
			ErrorChangeWinrmStartType,
			// Token: 0x040050BE RID: 20670
			CasHealthEcpServiceResponse,
			// Token: 0x040050BF RID: 20671
			ResumeSgcOnHostServer,
			// Token: 0x040050C0 RID: 20672
			GetQueueDigestServerIsNotHubTransport,
			// Token: 0x040050C1 RID: 20673
			VerboseGenerateAliasBySiteDisplayName,
			// Token: 0x040050C2 RID: 20674
			WarningCannotGetLocalSite,
			// Token: 0x040050C3 RID: 20675
			AlsSubjectMailbox,
			// Token: 0x040050C4 RID: 20676
			ErrorMailboxAddressNotUnique,
			// Token: 0x040050C5 RID: 20677
			ConfirmationMessageHostCannotBeResolved,
			// Token: 0x040050C6 RID: 20678
			ConfirmationMessageNewMailboxDatabaseRecovery,
			// Token: 0x040050C7 RID: 20679
			WarningFswNotValidPath,
			// Token: 0x040050C8 RID: 20680
			ErrorNonExchangeUserError,
			// Token: 0x040050C9 RID: 20681
			AboutToInstallCertificateToMachineStore,
			// Token: 0x040050CA RID: 20682
			BadRtfParameterException,
			// Token: 0x040050CB RID: 20683
			WarningReuseExistingFingerprints,
			// Token: 0x040050CC RID: 20684
			AppSettingKeyNotFound,
			// Token: 0x040050CD RID: 20685
			ErrorOutboundConnectorAlreadyExists,
			// Token: 0x040050CE RID: 20686
			ErrorRBACPolicyNotUnique,
			// Token: 0x040050CF RID: 20687
			VerboseFixingObjectsUnderRootId,
			// Token: 0x040050D0 RID: 20688
			ConfirmationMessageEnableMailboxPublicFolder,
			// Token: 0x040050D1 RID: 20689
			ErrorValidationException,
			// Token: 0x040050D2 RID: 20690
			ConfirmationMessageMoveMailboxDatabaseMaster,
			// Token: 0x040050D3 RID: 20691
			ErrorImportLiveIdManagedMemberExists,
			// Token: 0x040050D4 RID: 20692
			LogExsetdataUninstallingAtom,
			// Token: 0x040050D5 RID: 20693
			ClassificationRuleCollectionFingerprintValidationFailure,
			// Token: 0x040050D6 RID: 20694
			ClassificationRuleCollectionInvalidLangCodesInRuleName,
			// Token: 0x040050D7 RID: 20695
			ConfirmationMessageNewHostedContentFilterRule,
			// Token: 0x040050D8 RID: 20696
			MoveMailboxStartDateEarlierThanEndDate,
			// Token: 0x040050D9 RID: 20697
			ErrorUnableToReserveDomain,
			// Token: 0x040050DA RID: 20698
			ConfirmationMessageSetTenantRelocationRequest,
			// Token: 0x040050DB RID: 20699
			RemoveDagDestroyingCluster,
			// Token: 0x040050DC RID: 20700
			MapiTranscationErrorMsgNoTimeLeft,
			// Token: 0x040050DD RID: 20701
			MoveMailboxExclusiveParameters,
			// Token: 0x040050DE RID: 20702
			GlobalRoutingEntryNotFound,
			// Token: 0x040050DF RID: 20703
			ConfirmationMessageSetRetentionTag,
			// Token: 0x040050E0 RID: 20704
			ConfirmationMessageEnableDatbaseCopy,
			// Token: 0x040050E1 RID: 20705
			VerboseMemberNameToNetId,
			// Token: 0x040050E2 RID: 20706
			RmsUrlIsInvalidException,
			// Token: 0x040050E3 RID: 20707
			ConfirmationMessageRemoveContentFilterPhrase,
			// Token: 0x040050E4 RID: 20708
			WarningMovingTeamMailboxesCrossForestOrCrossPremise,
			// Token: 0x040050E5 RID: 20709
			ReportUpdateMovedMailboxFailureAfterADSwitchover,
			// Token: 0x040050E6 RID: 20710
			WarningArchiveMailboxNotReachable,
			// Token: 0x040050E7 RID: 20711
			ErrorCannotBeFfoWithoutDatacenter,
			// Token: 0x040050E8 RID: 20712
			VerboseGenerateDefaultScopeByExistingAssignments,
			// Token: 0x040050E9 RID: 20713
			ErrorNoRemoteCredentialSettingForLocalMove,
			// Token: 0x040050EA RID: 20714
			UMCallAnsweringRuleExtension,
			// Token: 0x040050EB RID: 20715
			ErrorLogFolderPathMissed,
			// Token: 0x040050EC RID: 20716
			TestSearchGetMDBCatalogState,
			// Token: 0x040050ED RID: 20717
			ConfirmationMessageRemoveMailboxFolderPermission,
			// Token: 0x040050EE RID: 20718
			InvalidOutlookProbeIdentity,
			// Token: 0x040050EF RID: 20719
			SkipWriteEmptyTemplateGuid,
			// Token: 0x040050F0 RID: 20720
			NewDagErrorDuplicateName,
			// Token: 0x040050F1 RID: 20721
			ErrorFailedToMoveDatabaseLogFiles,
			// Token: 0x040050F2 RID: 20722
			CannotChangeStandardUserCredentials,
			// Token: 0x040050F3 RID: 20723
			TraceCannotGetWindowsIdentity,
			// Token: 0x040050F4 RID: 20724
			VerboseApprovalApplicationObjectExists,
			// Token: 0x040050F5 RID: 20725
			ErrorLocatingLocalServerObject,
			// Token: 0x040050F6 RID: 20726
			InvalidSiteForOrganizationMessage,
			// Token: 0x040050F7 RID: 20727
			LoadedComponentWithTasks,
			// Token: 0x040050F8 RID: 20728
			ConfirmationMessageTestTopologyServiceIdentity,
			// Token: 0x040050F9 RID: 20729
			ErrorAuxHasChildren,
			// Token: 0x040050FA RID: 20730
			ConfirmationMessageSetTransportProcessingQuotaOverride,
			// Token: 0x040050FB RID: 20731
			ErrorRecipientDoesNotHavePicture,
			// Token: 0x040050FC RID: 20732
			AdminAuditLogSearchStartDateIsLaterThanEndDate,
			// Token: 0x040050FD RID: 20733
			WebServicesTestErrorEventDetail,
			// Token: 0x040050FE RID: 20734
			ConfirmationMessageAdminAuditLogAgeLimitSmaller,
			// Token: 0x040050FF RID: 20735
			AllEssentialServicesForTheRoleRunning,
			// Token: 0x04005100 RID: 20736
			GetCalendarDiagnosticLog,
			// Token: 0x04005101 RID: 20737
			UMCallAnsweringRuleTransferToVoiceMailWithContext,
			// Token: 0x04005102 RID: 20738
			ErrorMailboxNotEnabled,
			// Token: 0x04005103 RID: 20739
			ClientAccessRoleAbsent,
			// Token: 0x04005104 RID: 20740
			ErrorAuxUnsupportedParent,
			// Token: 0x04005105 RID: 20741
			ErrorInvalidOperationOnRecoveryMailboxDatabase,
			// Token: 0x04005106 RID: 20742
			ConfirmationMessageInstallProvisioningAgent,
			// Token: 0x04005107 RID: 20743
			MultipleAdminAuditLogConfig,
			// Token: 0x04005108 RID: 20744
			InfoAlreadyIsMemberOfGroup,
			// Token: 0x04005109 RID: 20745
			ErrorMinorPartnerIdIsNotUnique,
			// Token: 0x0400510A RID: 20746
			InvalidStartDate,
			// Token: 0x0400510B RID: 20747
			SeederAlreadyInProgressPrompt,
			// Token: 0x0400510C RID: 20748
			AppcmdExecutionFailed,
			// Token: 0x0400510D RID: 20749
			ClassificationRuleCollectionInconsistentDefaultInRuleResource,
			// Token: 0x0400510E RID: 20750
			UMCallAnsweringRuleTransferToWithoutContext,
			// Token: 0x0400510F RID: 20751
			FailedToDeletePublicFolderTree,
			// Token: 0x04005110 RID: 20752
			FactoryIdentityInUse,
			// Token: 0x04005111 RID: 20753
			ImapSelectingFolder,
			// Token: 0x04005112 RID: 20754
			ErrorTeamMailboxContactSharePointSite,
			// Token: 0x04005113 RID: 20755
			FailedToGenerateSharedKey,
			// Token: 0x04005114 RID: 20756
			messageTopologyServiceMissingDCExceptionThrown,
			// Token: 0x04005115 RID: 20757
			ConfirmationMessageRemoveMalwareFilterRecoveryItem,
			// Token: 0x04005116 RID: 20758
			MailboxAssistantsServiceStarted,
			// Token: 0x04005117 RID: 20759
			ComplianceJobTaskException,
			// Token: 0x04005118 RID: 20760
			CannotFindRPSServerFile,
			// Token: 0x04005119 RID: 20761
			InsufficientEmailsForCrossValidation,
			// Token: 0x0400511A RID: 20762
			AutodiscoverUrlsDiffer,
			// Token: 0x0400511B RID: 20763
			ErrorPublicFolderDatabaseNotFound,
			// Token: 0x0400511C RID: 20764
			ConfirmationMessageSuspendDatabaseCopyIdentity,
			// Token: 0x0400511D RID: 20765
			ErrorUnableToResolveOwner,
			// Token: 0x0400511E RID: 20766
			VerboseWillUpgradeServicePlan,
			// Token: 0x0400511F RID: 20767
			ConfirmationMessageSetLinkedUser,
			// Token: 0x04005120 RID: 20768
			VerboseNoAccessControlSpecified,
			// Token: 0x04005121 RID: 20769
			ErrorAutoDiscoverValidatorOabNotFound,
			// Token: 0x04005122 RID: 20770
			VerboseSyncTaskCookieOriginatingDCNotAvailable,
			// Token: 0x04005123 RID: 20771
			ErrorStartAfter,
			// Token: 0x04005124 RID: 20772
			VerboseE12AdminGroupNotFound,
			// Token: 0x04005125 RID: 20773
			ConfirmationMessageNewSystemMessageQuota,
			// Token: 0x04005126 RID: 20774
			FailedToRunGlobalMonitoringOverride,
			// Token: 0x04005127 RID: 20775
			MsoObjectNotFound,
			// Token: 0x04005128 RID: 20776
			TestMailflowError,
			// Token: 0x04005129 RID: 20777
			DownloadingFilesTasksRemaining,
			// Token: 0x0400512A RID: 20778
			AgentHandlesNoCmdlets,
			// Token: 0x0400512B RID: 20779
			RemoveLiveFedUriReserveResponse,
			// Token: 0x0400512C RID: 20780
			ConfirmationMessageSetCASMailbox,
			// Token: 0x0400512D RID: 20781
			DomainNotFoundException,
			// Token: 0x0400512E RID: 20782
			MsiPackageAlreadyInstalled,
			// Token: 0x0400512F RID: 20783
			ErrorDatabaseInNonMailboxServer,
			// Token: 0x04005130 RID: 20784
			CannotCreateJunkEmailRule,
			// Token: 0x04005131 RID: 20785
			ProtocolTransactionsDetails,
			// Token: 0x04005132 RID: 20786
			VerboseTargetDcIsUpToDate,
			// Token: 0x04005133 RID: 20787
			ExchangeSettingsAssemblyNotFound,
			// Token: 0x04005134 RID: 20788
			ConfirmationMessageRemoveDistributionGroup,
			// Token: 0x04005135 RID: 20789
			ErrorDisconnectedMailboxNotPrimary,
			// Token: 0x04005136 RID: 20790
			TestOAuthResponseDetails,
			// Token: 0x04005137 RID: 20791
			BadNameParameterException,
			// Token: 0x04005138 RID: 20792
			RestoreUsingExistingFile,
			// Token: 0x04005139 RID: 20793
			ErrorSystemFolderPathMissed,
			// Token: 0x0400513A RID: 20794
			VerboseDGOwnershipDeepSearch,
			// Token: 0x0400513B RID: 20795
			ParsingTokenIssuerPreviousCertificate,
			// Token: 0x0400513C RID: 20796
			ReplicationCheckPassed,
			// Token: 0x0400513D RID: 20797
			ErrorCleanupRequestedAtWrongStage,
			// Token: 0x0400513E RID: 20798
			DagTaskRemovedServerFromDag,
			// Token: 0x0400513F RID: 20799
			ErrorDlpPolicyTemplateIsNotInstalled,
			// Token: 0x04005140 RID: 20800
			AboutToUpdateCongigFile,
			// Token: 0x04005141 RID: 20801
			ConfirmationMessageMailboxAuditBypassAssociation,
			// Token: 0x04005142 RID: 20802
			TaskTimeout,
			// Token: 0x04005143 RID: 20803
			DagTaskRemoveDagServerRunningChecks,
			// Token: 0x04005144 RID: 20804
			MigrationNotFound,
			// Token: 0x04005145 RID: 20805
			ErrorArchiveNotSupport,
			// Token: 0x04005146 RID: 20806
			ExchangeSettingsGroupFoundMultipleTimes,
			// Token: 0x04005147 RID: 20807
			RemoveADServerMetadataServerNotFound,
			// Token: 0x04005148 RID: 20808
			ErrorWSManConfigSchemaFileNotFound,
			// Token: 0x04005149 RID: 20809
			FailedToDeserializeDagConfigurationXMLString,
			// Token: 0x0400514A RID: 20810
			CasHealthUserNotFound,
			// Token: 0x0400514B RID: 20811
			ConfirmationMessageCancelUserPhoto,
			// Token: 0x0400514C RID: 20812
			InconsistentADDbMasterServerNotADag,
			// Token: 0x0400514D RID: 20813
			DagFswAndAlternateFswOnSameWitnessServerButPointToDifferentDirectoriesException,
			// Token: 0x0400514E RID: 20814
			AmMoveRpcCompletedAnyServer,
			// Token: 0x0400514F RID: 20815
			MailboxReplicationServiceIsRespondingToRPCPing,
			// Token: 0x04005150 RID: 20816
			UmLanguagePackLogFile,
			// Token: 0x04005151 RID: 20817
			DagTaskSkippingFormCluster,
			// Token: 0x04005152 RID: 20818
			ErrorUsedByMbDb,
			// Token: 0x04005153 RID: 20819
			FailedToWriteAirSyncDebugLogging,
			// Token: 0x04005154 RID: 20820
			ServerAlreadyLicensed,
			// Token: 0x04005155 RID: 20821
			NewDagConfigurationErrorDuplicateName,
			// Token: 0x04005156 RID: 20822
			ConfirmationMessageEnableHostedContentFilterRule,
			// Token: 0x04005157 RID: 20823
			ErrorMailboxLegacyDNInUse,
			// Token: 0x04005158 RID: 20824
			PopImapTransactionWarning,
			// Token: 0x04005159 RID: 20825
			ErrorDomainAlreadyFederated,
			// Token: 0x0400515A RID: 20826
			ErrorFaildToSavePubllicFolderReferral,
			// Token: 0x0400515B RID: 20827
			InvalidMailboxFolderIdentity,
			// Token: 0x0400515C RID: 20828
			ErrorInGlsLookup,
			// Token: 0x0400515D RID: 20829
			AirSyncReportingProgressParsing,
			// Token: 0x0400515E RID: 20830
			DiscoveryEndpointWasConstructed,
			// Token: 0x0400515F RID: 20831
			ClassificationRuleCollectionOrphanedResourceViolation,
			// Token: 0x04005160 RID: 20832
			ConfirmationMessageAddIPAllowListEntryIPAddress,
			// Token: 0x04005161 RID: 20833
			EmailAddressNotInAcceptedDomain,
			// Token: 0x04005162 RID: 20834
			ConfirmationMessageSetPowerShellVirtualDirectory,
			// Token: 0x04005163 RID: 20835
			CrossPremiseMapMdbToServerFailure,
			// Token: 0x04005164 RID: 20836
			SetLiveFedDomainReserveRequest,
			// Token: 0x04005165 RID: 20837
			ErrorMoveRequestAlreadyExistsInMDBQueue,
			// Token: 0x04005166 RID: 20838
			VerboseRemovePSFanInProvider,
			// Token: 0x04005167 RID: 20839
			ErrorUnableToFindFqdnForHost,
			// Token: 0x04005168 RID: 20840
			ConfirmationMessageNewOrganizationRelationship,
			// Token: 0x04005169 RID: 20841
			ErrorUserWithMatchingWindowsLiveIdExists,
			// Token: 0x0400516A RID: 20842
			TestSearchMdbMonitorMbxIsNull,
			// Token: 0x0400516B RID: 20843
			ConfirmationMessageAddMonitoringOverride,
			// Token: 0x0400516C RID: 20844
			ErrorTargetDatabaseIsRecovery,
			// Token: 0x0400516D RID: 20845
			ProcessStart,
			// Token: 0x0400516E RID: 20846
			WarningShouldReadFromRidMaster,
			// Token: 0x0400516F RID: 20847
			TestRHGetAmRoleRpc,
			// Token: 0x04005170 RID: 20848
			ServiceNotRunning,
			// Token: 0x04005171 RID: 20849
			CannotResolvePartitionFromInstanceId,
			// Token: 0x04005172 RID: 20850
			ErrorDisconnectedMailboxNotArchive,
			// Token: 0x04005173 RID: 20851
			InvalidDateValueException,
			// Token: 0x04005174 RID: 20852
			ErrorDomainIsNotReservedWithWLCD,
			// Token: 0x04005175 RID: 20853
			SiteMailboxDiagnosticsEmailSubject,
			// Token: 0x04005176 RID: 20854
			IisTasksValidationStringLengthOutOfRangeException,
			// Token: 0x04005177 RID: 20855
			ConfirmationMessageRemoveDefaultActiveSyncMailboxPolicy,
			// Token: 0x04005178 RID: 20856
			ErrorMoveMailboxFindDomain,
			// Token: 0x04005179 RID: 20857
			ConfirmationMessageSetEmailAddressPolicy,
			// Token: 0x0400517A RID: 20858
			ReplicationCheckHighPriorityFailedException,
			// Token: 0x0400517B RID: 20859
			CouldNotFindServerDirectoryEntryException,
			// Token: 0x0400517C RID: 20860
			ErrorManagedByInCoManagedByList,
			// Token: 0x0400517D RID: 20861
			VerboseConnectionMapiRpcInterface,
			// Token: 0x0400517E RID: 20862
			CouldNotFindElementWithTwoAttributes,
			// Token: 0x0400517F RID: 20863
			ConfirmationMessageNewAddressrewriteentry,
			// Token: 0x04005180 RID: 20864
			AddDatabaseCopyAllCopiesMustBeInSameDagException,
			// Token: 0x04005181 RID: 20865
			ConfirmationMessageNewDataClassification,
			// Token: 0x04005182 RID: 20866
			ContinueUpgradeObjectVersion,
			// Token: 0x04005183 RID: 20867
			ConfirmationMessageMoveOfflineAddressBook,
			// Token: 0x04005184 RID: 20868
			ClassificationRuleCollectionIncorrectDocumentNamespaceViolation,
			// Token: 0x04005185 RID: 20869
			ErrorDisableMailboxIsJournalReportNdrTo,
			// Token: 0x04005186 RID: 20870
			ReplServiceNotRunningOnNodeException,
			// Token: 0x04005187 RID: 20871
			MissingPilotTargetOffer,
			// Token: 0x04005188 RID: 20872
			ErrorInvalidParameterValue,
			// Token: 0x04005189 RID: 20873
			ProtocolConfrimationMessage,
			// Token: 0x0400518A RID: 20874
			InfoSetAces,
			// Token: 0x0400518B RID: 20875
			NoBindings,
			// Token: 0x0400518C RID: 20876
			ConfirmationMessageNewForeignConnectorAddressSpaces,
			// Token: 0x0400518D RID: 20877
			EventOtherActionFailed,
			// Token: 0x0400518E RID: 20878
			MobileDeviceLogNotFound,
			// Token: 0x0400518F RID: 20879
			CopyConfigurationErrorException,
			// Token: 0x04005190 RID: 20880
			GlobalRoutingEntryNotFoundRetry,
			// Token: 0x04005191 RID: 20881
			ConfirmationMessageUpdateTeamMailbox,
			// Token: 0x04005192 RID: 20882
			ErrorGeneratingMailboxInvalid,
			// Token: 0x04005193 RID: 20883
			ErrorResolveFqdnForDomainController,
			// Token: 0x04005194 RID: 20884
			RemovedDuplicateRecipients,
			// Token: 0x04005195 RID: 20885
			ErrorUsedByOab,
			// Token: 0x04005196 RID: 20886
			UmLanguagePackMsiFileNotFound,
			// Token: 0x04005197 RID: 20887
			ErrorSuspendWhenReadyToCompleteCannotBeUsedOnAutoResumeJobs,
			// Token: 0x04005198 RID: 20888
			ConditionIncompatibleWithNotifySenderAction,
			// Token: 0x04005199 RID: 20889
			ErrorUserCannotChangePasswordAtNextLogon,
			// Token: 0x0400519A RID: 20890
			Error_DatabaseLocationDoesNotMatchHighestActivationPreferenceServerLocation,
			// Token: 0x0400519B RID: 20891
			InvalidTlsAuthLevel,
			// Token: 0x0400519C RID: 20892
			ConfirmationMessageRemoveOutlookProvider,
			// Token: 0x0400519D RID: 20893
			VerboseGenerateAliasByRandomString,
			// Token: 0x0400519E RID: 20894
			ErrorMemberNameUnavailable,
			// Token: 0x0400519F RID: 20895
			ConfirmationMessageTestIPAllowListProvider,
			// Token: 0x040051A0 RID: 20896
			VerboseDeletingChildVDir,
			// Token: 0x040051A1 RID: 20897
			ErrorInvalidObjectMissingCriticalProperty,
			// Token: 0x040051A2 RID: 20898
			ConfirmationMessageAddContentFilterPhrase,
			// Token: 0x040051A3 RID: 20899
			ErrorRecoveryDatabase,
			// Token: 0x040051A4 RID: 20900
			ErrorCannotRetargetPrimaryForArchiveOnlyMoves,
			// Token: 0x040051A5 RID: 20901
			InvalidDataException,
			// Token: 0x040051A6 RID: 20902
			ConfirmationMessageRemoveTenantRelocationRequest,
			// Token: 0x040051A7 RID: 20903
			ErrorInvalidEapNewPriority,
			// Token: 0x040051A8 RID: 20904
			TenantNotificationDebugFormatMessageFailedSystemLang,
			// Token: 0x040051A9 RID: 20905
			UnparseableParameter,
			// Token: 0x040051AA RID: 20906
			ConfirmationMessageRemoveDatabaseAvailabilityGroupConfiguration,
			// Token: 0x040051AB RID: 20907
			CasHealthAutodiscoveryServerNotFound,
			// Token: 0x040051AC RID: 20908
			ErrorReadMatchingRecipients,
			// Token: 0x040051AD RID: 20909
			UMCallAnsweringRuleTransferToVoiceMailWithoutContext,
			// Token: 0x040051AE RID: 20910
			ErrorFederationTrustNotFound,
			// Token: 0x040051AF RID: 20911
			ErrorDisallowMergeRequestForPublicFolderMailbox,
			// Token: 0x040051B0 RID: 20912
			ConfirmationMessageStartMailboxSearch,
			// Token: 0x040051B1 RID: 20913
			ConfirmationMessageDisableInboxRule,
			// Token: 0x040051B2 RID: 20914
			LanguagePackPerfCounterMergeStatus,
			// Token: 0x040051B3 RID: 20915
			ImportCertificateFileInvalid,
			// Token: 0x040051B4 RID: 20916
			PublicFolderDatabaseDoesNotBelongToTenant,
			// Token: 0x040051B5 RID: 20917
			VerboseDeleteSystemAttendantObject,
			// Token: 0x040051B6 RID: 20918
			ConfirmationMessageRemoveMonitoringOverride,
			// Token: 0x040051B7 RID: 20919
			NoOwnProcessService,
			// Token: 0x040051B8 RID: 20920
			ConfirmationMessageSetMailPublicFolder,
			// Token: 0x040051B9 RID: 20921
			ErrorArgumentIsOfWrongType,
			// Token: 0x040051BA RID: 20922
			ErrorFolderIsNotOrganizational,
			// Token: 0x040051BB RID: 20923
			ConfirmationMessageConnectMailboxLinked,
			// Token: 0x040051BC RID: 20924
			ConfirmationMessageNewMailboxRepairRequestMailbox,
			// Token: 0x040051BD RID: 20925
			InvalidReportingDateRange,
			// Token: 0x040051BE RID: 20926
			ParsingTokenIssuerEndPoint,
			// Token: 0x040051BF RID: 20927
			DagFswUnableToCreateWitnessShareException,
			// Token: 0x040051C0 RID: 20928
			RunCmdletOnDomain,
			// Token: 0x040051C1 RID: 20929
			CantAddDeviceFilterRuleSinceApplyForAllDevicesSetToTrue,
			// Token: 0x040051C2 RID: 20930
			DlpPolicyMissingRequiredParameter,
			// Token: 0x040051C3 RID: 20931
			ReportMovedMailUserMorphedToMailbox,
			// Token: 0x040051C4 RID: 20932
			TowsFoundScpBySite,
			// Token: 0x040051C5 RID: 20933
			ErrorCannotRemoveLastArbitrationMailboxInOrganization,
			// Token: 0x040051C6 RID: 20934
			ConfirmationMessageRemoveMessageClassification,
			// Token: 0x040051C7 RID: 20935
			ErrorUserAlreadyExistsInPermissionEntry,
			// Token: 0x040051C8 RID: 20936
			WarningInboxRuleInError,
			// Token: 0x040051C9 RID: 20937
			ErrorCertificateNotExportable,
			// Token: 0x040051CA RID: 20938
			ValidationOrgCurrentOrgNotMatchException,
			// Token: 0x040051CB RID: 20939
			FormsAuthenticationDeleteMarkErrorUnknownOpenError,
			// Token: 0x040051CC RID: 20940
			ErrorActivationPreferenceInvalid,
			// Token: 0x040051CD RID: 20941
			ConfirmationMessageAddDelegate,
			// Token: 0x040051CE RID: 20942
			ErrorCannotRestoreIntoSelf,
			// Token: 0x040051CF RID: 20943
			LogExsetdataInstallingAtom,
			// Token: 0x040051D0 RID: 20944
			ErrorMismatchedMailboxRelease,
			// Token: 0x040051D1 RID: 20945
			SupportedToolsDataInvalidTenantVersionRange,
			// Token: 0x040051D2 RID: 20946
			ConfirmationMessageRemoveMailboxIdentityAndNotLiveId,
			// Token: 0x040051D3 RID: 20947
			MailboxNotUmEnabled,
			// Token: 0x040051D4 RID: 20948
			ErrorInvalidServerRole,
			// Token: 0x040051D5 RID: 20949
			QuorumGroupNotOnline,
			// Token: 0x040051D6 RID: 20950
			EmptyToken,
			// Token: 0x040051D7 RID: 20951
			ErrorTargetPartitionSctMissing,
			// Token: 0x040051D8 RID: 20952
			ErrorOccuredInFixingObject,
			// Token: 0x040051D9 RID: 20953
			EventManifestNotUpdated,
			// Token: 0x040051DA RID: 20954
			CasHealthOwaVdirColon,
			// Token: 0x040051DB RID: 20955
			MigrationEndpointIdentityAmbiguous,
			// Token: 0x040051DC RID: 20956
			FormsAuthenticationDeleteCloseException,
			// Token: 0x040051DD RID: 20957
			InvalidServiceInstanceMapXmlFormat,
			// Token: 0x040051DE RID: 20958
			ErrorCmdExecutionFailed,
			// Token: 0x040051DF RID: 20959
			WarningPushFailed,
			// Token: 0x040051E0 RID: 20960
			ExchangeUpgradeBucketInvalidOrganizationVersion,
			// Token: 0x040051E1 RID: 20961
			ConfirmationMessageNewRemoteMailbox,
			// Token: 0x040051E2 RID: 20962
			TestSearchCurrentMailbox,
			// Token: 0x040051E3 RID: 20963
			ConfirmationMessageRemoveOrganizationRelationship,
			// Token: 0x040051E4 RID: 20964
			TestSearchFindMessage,
			// Token: 0x040051E5 RID: 20965
			KeyNoMatch,
			// Token: 0x040051E6 RID: 20966
			SchemaValidationError,
			// Token: 0x040051E7 RID: 20967
			ServiceDidNotReachStatusDuringWait,
			// Token: 0x040051E8 RID: 20968
			ErrorRpcHttpNotUnique,
			// Token: 0x040051E9 RID: 20969
			InvalidIPRangeFormatId,
			// Token: 0x040051EA RID: 20970
			ExportCertificateFileInvalid,
			// Token: 0x040051EB RID: 20971
			ErrorExchangeUpgradeBucketNotFound,
			// Token: 0x040051EC RID: 20972
			MoveAlreadySuspended,
			// Token: 0x040051ED RID: 20973
			PrimaryAndArchiveNotOnSameVersionPostMove,
			// Token: 0x040051EE RID: 20974
			ExchangeSettingsNonExistingSettingNotRemoved,
			// Token: 0x040051EF RID: 20975
			ConfirmationMessageSwitchRBACPolicy,
			// Token: 0x040051F0 RID: 20976
			CannotFindSchemaClassException,
			// Token: 0x040051F1 RID: 20977
			OabVirtualDirectoryAmbiguous,
			// Token: 0x040051F2 RID: 20978
			CasHealthResetCredentialsScenario,
			// Token: 0x040051F3 RID: 20979
			FailedToResetMdb,
			// Token: 0x040051F4 RID: 20980
			OAuthRequestEndPoint,
			// Token: 0x040051F5 RID: 20981
			HybridMailflowUnexpectedType,
			// Token: 0x040051F6 RID: 20982
			DagNetworkSingleDNSNicViolation,
			// Token: 0x040051F7 RID: 20983
			ConfirmationMessageResumeRequest,
			// Token: 0x040051F8 RID: 20984
			ExchVirtualDirectoryTooManyRpcsToIisMetabase,
			// Token: 0x040051F9 RID: 20985
			AlsEmailBodyExternalAccess,
			// Token: 0x040051FA RID: 20986
			MoveMailboxUnexpectedAfterMove,
			// Token: 0x040051FB RID: 20987
			ErrorRemoveAddressListWithAssociatedAddressBookPolicies,
			// Token: 0x040051FC RID: 20988
			NonRoomMailboxAddToRoomListException,
			// Token: 0x040051FD RID: 20989
			FailedToSetPfdbAsFirstInstance,
			// Token: 0x040051FE RID: 20990
			ErrorWellKnownHostedMailboxSGNotFound,
			// Token: 0x040051FF RID: 20991
			InconsistentAFSettingsError,
			// Token: 0x04005200 RID: 20992
			ConfirmationMessageNewProvisioningRequest,
			// Token: 0x04005201 RID: 20993
			ErrorExternalDirectoryObjectIdNotUnique,
			// Token: 0x04005202 RID: 20994
			EnableDBCSuspendReplayNoDbComment,
			// Token: 0x04005203 RID: 20995
			ErrorEdbFileLocationNotUniqueUnderSameNode,
			// Token: 0x04005204 RID: 20996
			MoreThanOneRecipientForRecipientId,
			// Token: 0x04005205 RID: 20997
			ErrorArchiveRecoveryArchiveDatabaseDeleted,
			// Token: 0x04005206 RID: 20998
			ConfirmationMessageStopComplianceSearch,
			// Token: 0x04005207 RID: 20999
			ErrorRemovedMailboxNotFound,
			// Token: 0x04005208 RID: 21000
			FailedToReadPefCounter,
			// Token: 0x04005209 RID: 21001
			GetQueueDigestUnexpectedError,
			// Token: 0x0400520A RID: 21002
			CannotRemoveMailboxCatchAllRecipient,
			// Token: 0x0400520B RID: 21003
			AutodiscoverUsingDomain,
			// Token: 0x0400520C RID: 21004
			ProcessStandardError,
			// Token: 0x0400520D RID: 21005
			ErrorTeamMailboxFeatureNotInstalled,
			// Token: 0x0400520E RID: 21006
			ConfirmationMessageEnableMailboxArbitration,
			// Token: 0x0400520F RID: 21007
			PublicFolderSourcesFolderDoesnotExist,
			// Token: 0x04005210 RID: 21008
			CasHealthOwaIncorrectAuthTypes,
			// Token: 0x04005211 RID: 21009
			InvalidTPRTask,
			// Token: 0x04005212 RID: 21010
			VerboseMailboxDelegateRemoved,
			// Token: 0x04005213 RID: 21011
			ErrorRemoteTeamMailboxIsNotChangeable,
			// Token: 0x04005214 RID: 21012
			ErrorOwaMailboxPolicyNotUnique,
			// Token: 0x04005215 RID: 21013
			ConfirmationMessageRemoveOwaMailboxPolicy,
			// Token: 0x04005216 RID: 21014
			CannotSubscribeToMultipleSites,
			// Token: 0x04005217 RID: 21015
			TestSearchCurrentMDB,
			// Token: 0x04005218 RID: 21016
			UpdatingLegDnForDatabaseToServer,
			// Token: 0x04005219 RID: 21017
			ErrorUserNotFoundOnDomainController,
			// Token: 0x0400521A RID: 21018
			ErrorInvalidNameOrDescriptionParameters,
			// Token: 0x0400521B RID: 21019
			ErrorSecondaryDomainNotUnique,
			// Token: 0x0400521C RID: 21020
			InvalidNumberOfSegments,
			// Token: 0x0400521D RID: 21021
			ErrorExtendedProtectionSPNHasToStartWithHTTP,
			// Token: 0x0400521E RID: 21022
			ConfirmationMessageRemoveDataClassification,
			// Token: 0x0400521F RID: 21023
			ErrorCannotMoveArbitrationMailboxesDownlevel,
			// Token: 0x04005220 RID: 21024
			LastConfigLoadTime,
			// Token: 0x04005221 RID: 21025
			UmLanguagePackException,
			// Token: 0x04005222 RID: 21026
			VerboseTestOabFromAutoDiscover,
			// Token: 0x04005223 RID: 21027
			OwaAdminObjectNotFoundException,
			// Token: 0x04005224 RID: 21028
			NewPolicyTipConfigInvalidName,
			// Token: 0x04005225 RID: 21029
			ErrorArchiveNotEnabled,
			// Token: 0x04005226 RID: 21030
			ErrorRemovePolicyRoleAssignment,
			// Token: 0x04005227 RID: 21031
			TowsAutodiscoverUrl,
			// Token: 0x04005228 RID: 21032
			BadCharSetParameterException,
			// Token: 0x04005229 RID: 21033
			SeedingPathWarningException,
			// Token: 0x0400522A RID: 21034
			AggregationTaskMailboxNotFound,
			// Token: 0x0400522B RID: 21035
			ConfirmationMessageSetOWAMailboxPolicy,
			// Token: 0x0400522C RID: 21036
			ErrorRpcHttpAlreadyEnabled,
			// Token: 0x0400522D RID: 21037
			CasHealthFailedToPopulateFromMetabase,
			// Token: 0x0400522E RID: 21038
			ConfirmationMessageRemoveDynamicDistributionGroup,
			// Token: 0x0400522F RID: 21039
			ErrorRemoteSourceArchiveMailboxDoesNotExist,
			// Token: 0x04005230 RID: 21040
			ErrorLegacyPublicFolder,
			// Token: 0x04005231 RID: 21041
			ConfirmationMessageNewHostedConnectionFilterRule,
			// Token: 0x04005232 RID: 21042
			ErrorTooManyAddedRecipientsInRuleCollection,
			// Token: 0x04005233 RID: 21043
			ComplianceBindingUnknownError,
			// Token: 0x04005234 RID: 21044
			RemoteCertificateExchangeVersionNotSupported,
			// Token: 0x04005235 RID: 21045
			ErrorArbitrationMbxNotSetForApproval,
			// Token: 0x04005236 RID: 21046
			FailedToDeleteDatabaseCopy,
			// Token: 0x04005237 RID: 21047
			ConfirmationMessageEnableReplayLag,
			// Token: 0x04005238 RID: 21048
			ErrorCannotDetermineEndpointForTenant,
			// Token: 0x04005239 RID: 21049
			CasHealthOwaErrorPageExceptionType,
			// Token: 0x0400523A RID: 21050
			DsnCodeNotADefault,
			// Token: 0x0400523B RID: 21051
			ErrorUnableToCheckMountedStatusNoResult,
			// Token: 0x0400523C RID: 21052
			RemoveEstimateMailboxSearchConfirmation,
			// Token: 0x0400523D RID: 21053
			InitializingFileCopy,
			// Token: 0x0400523E RID: 21054
			BadNumberOfProcessesForService,
			// Token: 0x0400523F RID: 21055
			WarningRemoveApprovalRequiredGroupOwners,
			// Token: 0x04005240 RID: 21056
			FailedToDeleteOldEdbFile,
			// Token: 0x04005241 RID: 21057
			MapiTransactionDiagnosticStoreServiceCheckFailure,
			// Token: 0x04005242 RID: 21058
			ConfirmNewMailboxSearchTask,
			// Token: 0x04005243 RID: 21059
			UmLanguagePackTempFilesNotDeleted,
			// Token: 0x04005244 RID: 21060
			ErrorGroupCannotBeEmptyRoleAssignmentConstraint,
			// Token: 0x04005245 RID: 21061
			ErrorSharePointSiteHasNoValidUrl,
			// Token: 0x04005246 RID: 21062
			ScriptDontExist,
			// Token: 0x04005247 RID: 21063
			ErrorArchiveAlreadyInTargetArchiveDatabase,
			// Token: 0x04005248 RID: 21064
			MsiProperty,
			// Token: 0x04005249 RID: 21065
			ErrorSendNotificationForSiteMailbox,
			// Token: 0x0400524A RID: 21066
			ErrorUpdatingVDir,
			// Token: 0x0400524B RID: 21067
			ConfirmationResetProvisioningCache,
			// Token: 0x0400524C RID: 21068
			RemoveVirtualDirectoryGetApplicationPoolUnknownError,
			// Token: 0x0400524D RID: 21069
			TraceCannotGetExchangeVersion,
			// Token: 0x0400524E RID: 21070
			RpcHttpTiSp1FeatureDisabled,
			// Token: 0x0400524F RID: 21071
			ConfirmationMessageSwitchActiveSyncDefaultPolicy,
			// Token: 0x04005250 RID: 21072
			ConfirmationMessageSetTeamMailboxProvisioningPolicy,
			// Token: 0x04005251 RID: 21073
			ConfirmationMessageSetMailUser,
			// Token: 0x04005252 RID: 21074
			StatusMessageStartUpdatePublicFolderMailbox,
			// Token: 0x04005253 RID: 21075
			ConfirmationMessageRemoveCmdletExtensionAgent,
			// Token: 0x04005254 RID: 21076
			MailboxAssociationReplicationRpcRequest,
			// Token: 0x04005255 RID: 21077
			InstallIisWebServiceExtensionAdding,
			// Token: 0x04005256 RID: 21078
			ForeignForestRootDomainNotFoundException,
			// Token: 0x04005257 RID: 21079
			RemoveVirtualDirectoryApplicationPoolSearchError,
			// Token: 0x04005258 RID: 21080
			ErrorCannotUpdateRecipient,
			// Token: 0x04005259 RID: 21081
			VerbosePendingServicePlanUpgradeDetected,
			// Token: 0x0400525A RID: 21082
			UnableToUnlockMailboxDueToOutstandingMoveRequest,
			// Token: 0x0400525B RID: 21083
			ConfirmationMessageRemoveProvisioningRequest,
			// Token: 0x0400525C RID: 21084
			ErrorRoleEntryNotUnique,
			// Token: 0x0400525D RID: 21085
			ErrorMultipleSystemFolderTagConfliction,
			// Token: 0x0400525E RID: 21086
			ConfirmationMessageNewWebServicesVirtualDirectory,
			// Token: 0x0400525F RID: 21087
			MaximumWaitTimeSetTo,
			// Token: 0x04005260 RID: 21088
			ConfirmationMessageSetDatabaseAvailabilityGroup,
			// Token: 0x04005261 RID: 21089
			DagNetworkHasMultiNicForNode,
			// Token: 0x04005262 RID: 21090
			RemainingTimeForServiceWait,
			// Token: 0x04005263 RID: 21091
			ConfirmationMessageNewUMMailboxPolicy,
			// Token: 0x04005264 RID: 21092
			GetOwaVersionException,
			// Token: 0x04005265 RID: 21093
			ErrorTargetServicePlanDifferent,
			// Token: 0x04005266 RID: 21094
			DagTaskUpdatingMasterServerOnDatabase,
			// Token: 0x04005267 RID: 21095
			ConfirmationMessageNewRecipientEnforcementProvisioningPolicy,
			// Token: 0x04005268 RID: 21096
			ErrorUnableToDetermineTargetDatabase,
			// Token: 0x04005269 RID: 21097
			ErrorLinkedGroupInTheCurrentForest,
			// Token: 0x0400526A RID: 21098
			ConfirmationMessageUpdateSafeList,
			// Token: 0x0400526B RID: 21099
			SeederCancelCalled,
			// Token: 0x0400526C RID: 21100
			CannotOperateOnAcceptedDomainPendingRemoval,
			// Token: 0x0400526D RID: 21101
			VerboseSyncMailboxWithDS,
			// Token: 0x0400526E RID: 21102
			ErrorDisableMailboxWithDiscoveryHold,
			// Token: 0x0400526F RID: 21103
			CouldNotUpgradeAllContentSettings,
			// Token: 0x04005270 RID: 21104
			ConfirmationMessageEnableMailUser,
			// Token: 0x04005271 RID: 21105
			MissingPropertyInFederationTrust,
			// Token: 0x04005272 RID: 21106
			CookieAndParameterServiceInstanceIdMismatch,
			// Token: 0x04005273 RID: 21107
			FormsAuthenticationMarkPathErrorUnknownOpenError,
			// Token: 0x04005274 RID: 21108
			ErrorUserMissingADData,
			// Token: 0x04005275 RID: 21109
			ErrorExecutingUserOutOfTargetOrg,
			// Token: 0x04005276 RID: 21110
			ErrorUMPolicyNotFound,
			// Token: 0x04005277 RID: 21111
			ErrorCannotRemoveLastOrgAdmin,
			// Token: 0x04005278 RID: 21112
			ConfirmSearchMailboxAuditLogTask,
			// Token: 0x04005279 RID: 21113
			WarningUMCallAnsweringRuleInError,
			// Token: 0x0400527A RID: 21114
			WarningInitLegacyAlreadyDone,
			// Token: 0x0400527B RID: 21115
			ConfirmationMessageRemoveMailboxPermanent,
			// Token: 0x0400527C RID: 21116
			ConfirmationMessageEnableOutlookProtectionRule,
			// Token: 0x0400527D RID: 21117
			ReadingE14ServerRoles,
			// Token: 0x0400527E RID: 21118
			RpcHttpOldOSServers,
			// Token: 0x0400527F RID: 21119
			ConfirmationMessageUpdateDatabaseCopy,
			// Token: 0x04005280 RID: 21120
			ErrorAggregatedMailboxNotFound,
			// Token: 0x04005281 RID: 21121
			ConfirmationMessageSetRecipientEnforcementProvisioningPolicy,
			// Token: 0x04005282 RID: 21122
			TenantNotificationDebugLoadLibraryFailed,
			// Token: 0x04005283 RID: 21123
			ErrorWorkloadManagementPolicyNotFound,
			// Token: 0x04005284 RID: 21124
			ConfirmationMessageNewMailboxAuditLogSearch,
			// Token: 0x04005285 RID: 21125
			CannotRemoveMailContactCatchAllRecipient,
			// Token: 0x04005286 RID: 21126
			DagFswUnableToBindWitnessDirectoryException,
			// Token: 0x04005287 RID: 21127
			InterceptorErrorCustomTextInvalid,
			// Token: 0x04005288 RID: 21128
			VerboseDeleteDatabaseCatalogFiles,
			// Token: 0x04005289 RID: 21129
			ErrorRequestQueueIsTooLong,
			// Token: 0x0400528A RID: 21130
			ConfirmationMessageNewTransportRule,
			// Token: 0x0400528B RID: 21131
			ConfirmationMessageRemoveMigrationBatchWithPendingItems,
			// Token: 0x0400528C RID: 21132
			ErrorPrimaryDatabaseLocationNotFound,
			// Token: 0x0400528D RID: 21133
			TestSearchSucceeded,
			// Token: 0x0400528E RID: 21134
			ClassificationRuleCollectionInvalidLangCodesInRulePackDescriptor,
			// Token: 0x0400528F RID: 21135
			ErrorTransportRuleLimitTooSmall,
			// Token: 0x04005290 RID: 21136
			NoMdbForOperation,
			// Token: 0x04005291 RID: 21137
			ConfirmationRemoveAccountPartitionWithTenants,
			// Token: 0x04005292 RID: 21138
			ConfirmationMessageNewOWAMailboxPolicy,
			// Token: 0x04005293 RID: 21139
			ErrorServerNotUnique,
			// Token: 0x04005294 RID: 21140
			ErrorRemovedMailboxDoesNotHaveDatabase,
			// Token: 0x04005295 RID: 21141
			ErrorGrantingEraFullAccessOnMailbox,
			// Token: 0x04005296 RID: 21142
			CanceledMoveHistoryEntry,
			// Token: 0x04005297 RID: 21143
			DagTaskAddClusterNodeUnexpectedlyFailedException,
			// Token: 0x04005298 RID: 21144
			OnlineIsIntegRemoveJobException,
			// Token: 0x04005299 RID: 21145
			DurationShouldBeGreaterThanZero,
			// Token: 0x0400529A RID: 21146
			TopologyServiceSuccess,
			// Token: 0x0400529B RID: 21147
			CasHealthOwaExtraAuthType,
			// Token: 0x0400529C RID: 21148
			NonExistantDialPlan,
			// Token: 0x0400529D RID: 21149
			CertificateNotFound,
			// Token: 0x0400529E RID: 21150
			StagedMigrationRequiresValidTargetDomain,
			// Token: 0x0400529F RID: 21151
			WarningClusterGroupNotFormed,
			// Token: 0x040052A0 RID: 21152
			WaveDirectoryNotFoundException,
			// Token: 0x040052A1 RID: 21153
			CasHealthSpecifiedMailboxServerVersionNotMatched,
			// Token: 0x040052A2 RID: 21154
			ErrorOabVirtualDirectoryIISObjectAlreadyExists,
			// Token: 0x040052A3 RID: 21155
			RunConfigUpdaterRpcFailedWarning,
			// Token: 0x040052A4 RID: 21156
			CasHealthCouldNotLogUser,
			// Token: 0x040052A5 RID: 21157
			DagTaskAddedServerToDag,
			// Token: 0x040052A6 RID: 21158
			ErrorInvalidAuthenticationTypeValue,
			// Token: 0x040052A7 RID: 21159
			ConfirmationMessageStartMigrationBatch,
			// Token: 0x040052A8 RID: 21160
			IisTasksReadRegistryValueSecurityException,
			// Token: 0x040052A9 RID: 21161
			MsiRebootRequiredToContinue,
			// Token: 0x040052AA RID: 21162
			CannotRemoveNonProvisionedServerException,
			// Token: 0x040052AB RID: 21163
			ErrorCannotOverrideConflictingRedirectionEntry,
			// Token: 0x040052AC RID: 21164
			ConfirmationMessageNewEdgeReSubscriptionExpirationWarning,
			// Token: 0x040052AD RID: 21165
			ErrorCannotMoveRoleAssignmentOfDeprecatedRole,
			// Token: 0x040052AE RID: 21166
			ConfirmationMessageRemoveEdgeSyncMservConnector,
			// Token: 0x040052AF RID: 21167
			ErrorMoveAlreadyCanceled,
			// Token: 0x040052B0 RID: 21168
			DagTaskCouldNotFindAnyMatchingNetworkException,
			// Token: 0x040052B1 RID: 21169
			UserCanNotBeEnabledForUM,
			// Token: 0x040052B2 RID: 21170
			LiveIdConnectivityExceptionThrown,
			// Token: 0x040052B3 RID: 21171
			CertificateInvalidRequestFile,
			// Token: 0x040052B4 RID: 21172
			MailboxCouldNotBeUmDisabled,
			// Token: 0x040052B5 RID: 21173
			FailedDocumentsNoResultsMailbox,
			// Token: 0x040052B6 RID: 21174
			RoleNotConfigured,
			// Token: 0x040052B7 RID: 21175
			TopologyServiceExceptionThrown,
			// Token: 0x040052B8 RID: 21176
			ErrorEapObjectTooNew,
			// Token: 0x040052B9 RID: 21177
			DagTaskJoiningNodeToCluster,
			// Token: 0x040052BA RID: 21178
			ErrorOabGenFailedSinceNoOrgMbxFound,
			// Token: 0x040052BB RID: 21179
			GetFedDomainStatusInfo,
			// Token: 0x040052BC RID: 21180
			DebugResolvingUserSid,
			// Token: 0x040052BD RID: 21181
			FailedToReadAdamPortFromRegistry,
			// Token: 0x040052BE RID: 21182
			RemoveOwaVirtualDirectoryCannotFindVirtualDirectoryException,
			// Token: 0x040052BF RID: 21183
			ExceptionValidatingConditionFailed,
			// Token: 0x040052C0 RID: 21184
			ConfirmationMessageNewPublicFolderDatabase,
			// Token: 0x040052C1 RID: 21185
			MissingNonAuthoritativeDomain,
			// Token: 0x040052C2 RID: 21186
			ConfirmationMessageSetOutlookProtectionRule,
			// Token: 0x040052C3 RID: 21187
			CasHealthWebAppTestStepFinished,
			// Token: 0x040052C4 RID: 21188
			ErrorMessageMoveMailboxFailed,
			// Token: 0x040052C5 RID: 21189
			SetupLogHeader,
			// Token: 0x040052C6 RID: 21190
			ErrorMoreThanOneMailTipTranslationForThisCulture,
			// Token: 0x040052C7 RID: 21191
			PAMOtherError,
			// Token: 0x040052C8 RID: 21192
			ErrorOabVirtualDirctoryPathNotOnFixedDrive,
			// Token: 0x040052C9 RID: 21193
			ErrorCannotLocalizeDefaultFolders,
			// Token: 0x040052CA RID: 21194
			ConfirmationMessageSetMailFlowPartnerConfigWithName,
			// Token: 0x040052CB RID: 21195
			AlsEmailBodyMailboxIds,
			// Token: 0x040052CC RID: 21196
			DlpPolicyParsingError,
			// Token: 0x040052CD RID: 21197
			ErrorPublicFolderNotUnique,
			// Token: 0x040052CE RID: 21198
			MailboxAssistantsServiceCouldNotBeKilled,
			// Token: 0x040052CF RID: 21199
			ErrorMailboxAddressNotFound,
			// Token: 0x040052D0 RID: 21200
			ConfirmationMessageSetIPBlockListProvider,
			// Token: 0x040052D1 RID: 21201
			ConfirmationMessageNewInboxRule,
			// Token: 0x040052D2 RID: 21202
			UnpackedRoles,
			// Token: 0x040052D3 RID: 21203
			ErrorOnlyAllowChangeMembersOnUniversalGroup,
			// Token: 0x040052D4 RID: 21204
			MailboxSearchInPlaceHoldIdentityExists,
			// Token: 0x040052D5 RID: 21205
			SeedingLogFileExists,
			// Token: 0x040052D6 RID: 21206
			ErrorMemberNameBlocked,
			// Token: 0x040052D7 RID: 21207
			ProgressForceCleanupNode,
			// Token: 0x040052D8 RID: 21208
			ReplicationCheckFatalError,
			// Token: 0x040052D9 RID: 21209
			ServerComponentStateInvalidComponentName,
			// Token: 0x040052DA RID: 21210
			CasHealthTransactionFailedSummary,
			// Token: 0x040052DB RID: 21211
			TowsFoundScpByDomain,
			// Token: 0x040052DC RID: 21212
			WarningSetAdminAuditLogConfigDelay,
			// Token: 0x040052DD RID: 21213
			DatabaseMustBeInDagException,
			// Token: 0x040052DE RID: 21214
			DidntCompleteInHours,
			// Token: 0x040052DF RID: 21215
			ErrorBackupInProgress,
			// Token: 0x040052E0 RID: 21216
			ConfirmationMessageRemoveGroup,
			// Token: 0x040052E1 RID: 21217
			MigrationUserSubscriptionInaccessible,
			// Token: 0x040052E2 RID: 21218
			ErrorFoundInvalidADObject,
			// Token: 0x040052E3 RID: 21219
			VerboseVerifyServerSucceed,
			// Token: 0x040052E4 RID: 21220
			VerboseVerifyingRecipientViewRoot,
			// Token: 0x040052E5 RID: 21221
			BlockedSendersNotUpdated,
			// Token: 0x040052E6 RID: 21222
			FailedDocumentsResultsServer,
			// Token: 0x040052E7 RID: 21223
			VerboseIgnoreFixingOneDynamicDistributionGroupFilterMetadata,
			// Token: 0x040052E8 RID: 21224
			WarningMessageExistsInReplayQueue,
			// Token: 0x040052E9 RID: 21225
			ErrorDomainIsNotFederated,
			// Token: 0x040052EA RID: 21226
			ConfirmationMessageRemoveWorkloadPolicy,
			// Token: 0x040052EB RID: 21227
			ErrorAllRoomListNotFound,
			// Token: 0x040052EC RID: 21228
			CasHealthWebAppAddingTestInstance,
			// Token: 0x040052ED RID: 21229
			ClassificationRuleCollectionNestedAnyDepthExceedLimit,
			// Token: 0x040052EE RID: 21230
			InterceptorErrorConditionInvalidProperty,
			// Token: 0x040052EF RID: 21231
			ConfirmationMessageTestConversations,
			// Token: 0x040052F0 RID: 21232
			ErrorSiteNameIsLongerThanLimit,
			// Token: 0x040052F1 RID: 21233
			UserCreateFailed,
			// Token: 0x040052F2 RID: 21234
			ConfirmationMessageRemoveMigrationEndpoint,
			// Token: 0x040052F3 RID: 21235
			ErrorInvalidMailboxTypeConversion,
			// Token: 0x040052F4 RID: 21236
			ErrorFailedToSwitchBackToEarlierPermissionModel,
			// Token: 0x040052F5 RID: 21237
			ErrorSetMailboxPlanRoleAssignment,
			// Token: 0x040052F6 RID: 21238
			GetFederationInformationProxy,
			// Token: 0x040052F7 RID: 21239
			ErrorDomainNameNotAcceptedDomain,
			// Token: 0x040052F8 RID: 21240
			VerboseTaskParameters,
			// Token: 0x040052F9 RID: 21241
			messageRFROperationException,
			// Token: 0x040052FA RID: 21242
			InfoAclNotCanonical,
			// Token: 0x040052FB RID: 21243
			ConfirmationMessageSetActiveSyncDeviceAutoblockThreshold,
			// Token: 0x040052FC RID: 21244
			MailboxSearchNameIsNotUnique,
			// Token: 0x040052FD RID: 21245
			FailedToEvictNodeException,
			// Token: 0x040052FE RID: 21246
			ConfirmationMessageRemoveDistributionGroupMember,
			// Token: 0x040052FF RID: 21247
			VerboseSkipCreatingRoleAssignment,
			// Token: 0x04005300 RID: 21248
			SeedingEdbFileExists,
			// Token: 0x04005301 RID: 21249
			ErrorUserWithMatchingWindowsLiveIdAndDifferentNetIdExists,
			// Token: 0x04005302 RID: 21250
			MailboxSearchRpcCallFailed,
			// Token: 0x04005303 RID: 21251
			ErrorFailedToRemoveMonitoringMailbox,
			// Token: 0x04005304 RID: 21252
			VerboseEndTextExtraction,
			// Token: 0x04005305 RID: 21253
			FindingServer,
			// Token: 0x04005306 RID: 21254
			InternalTransportCertificateMustBeCAPICertificate,
			// Token: 0x04005307 RID: 21255
			IllegalVoipPlatformException,
			// Token: 0x04005308 RID: 21256
			ErrorPhoneNumberIsNotValid,
			// Token: 0x04005309 RID: 21257
			ErrorRecordReport,
			// Token: 0x0400530A RID: 21258
			ErrorCasArrayOrServerAlreadyExists,
			// Token: 0x0400530B RID: 21259
			DirectoryObjectNotFoundException,
			// Token: 0x0400530C RID: 21260
			ConfirmationMessageRemoveMigrationUser,
			// Token: 0x0400530D RID: 21261
			ErrorTeamMailboxResolveUser,
			// Token: 0x0400530E RID: 21262
			WarningNonZeroItemLimitMerge,
			// Token: 0x0400530F RID: 21263
			TestApiCallUnderOauthTask,
			// Token: 0x04005310 RID: 21264
			DatabaseCopyFailedCheck,
			// Token: 0x04005311 RID: 21265
			ErrorAddressListNotFound,
			// Token: 0x04005312 RID: 21266
			VerboseEatUpException,
			// Token: 0x04005313 RID: 21267
			NoActiveSyncOrganizationSettingsException,
			// Token: 0x04005314 RID: 21268
			ErrorCannotCalculateDefaultScope,
			// Token: 0x04005315 RID: 21269
			ConfirmationMessageNewClientAccessArray,
			// Token: 0x04005316 RID: 21270
			ErrorRBACPolicyLinkNotFound,
			// Token: 0x04005317 RID: 21271
			ConfirmationMessageNewTeamMailboxProvisioningPolicy,
			// Token: 0x04005318 RID: 21272
			InterceptorErrorPathInvalidCharacters,
			// Token: 0x04005319 RID: 21273
			ErrorIisConfigurationWillRetry,
			// Token: 0x0400531A RID: 21274
			VerbosePfdbIsSetAsFirstInstance,
			// Token: 0x0400531B RID: 21275
			ErrorOrgUserBeAssignedToParentOrg,
			// Token: 0x0400531C RID: 21276
			VerboseWillSkipUpdateServicePlan,
			// Token: 0x0400531D RID: 21277
			ErrorExcludedDCConflict,
			// Token: 0x0400531E RID: 21278
			ErrorCouldNotLocateMailboxPlanForMailUser,
			// Token: 0x0400531F RID: 21279
			SendConnectorNonSmtpAddressSpaceOnDNSConnector,
			// Token: 0x04005320 RID: 21280
			UnableToConnectToEdge,
			// Token: 0x04005321 RID: 21281
			ErrorUnexpectedAccountForestValueInGls,
			// Token: 0x04005322 RID: 21282
			ReportUpdateMovedMailboxError,
			// Token: 0x04005323 RID: 21283
			CasHealthWebAppBuildVdirList,
			// Token: 0x04005324 RID: 21284
			ErrorBadItemLimitOutOfRange,
			// Token: 0x04005325 RID: 21285
			ComAdminPropertyException,
			// Token: 0x04005326 RID: 21286
			OwaIsapiFilterException,
			// Token: 0x04005327 RID: 21287
			ErrorCommandExecutionException,
			// Token: 0x04005328 RID: 21288
			LogExecutingCommand,
			// Token: 0x04005329 RID: 21289
			WarningMaxCmdletsRatioNotSupported,
			// Token: 0x0400532A RID: 21290
			ConfirmationMessageNewOwaVirtualDirectory,
			// Token: 0x0400532B RID: 21291
			TestSearchNoMailbox,
			// Token: 0x0400532C RID: 21292
			ErrorNoArchiveForPublicMailbox,
			// Token: 0x0400532D RID: 21293
			ConfirmationMessageSetHostedContentFilterPolicy,
			// Token: 0x0400532E RID: 21294
			ErrorTargetMailboxDnNotFound,
			// Token: 0x0400532F RID: 21295
			DagTaskUpdatingAdDagStartedStoppedMembership,
			// Token: 0x04005330 RID: 21296
			SetMailForestContactNotAllowed,
			// Token: 0x04005331 RID: 21297
			ConfirmationMessageTestMAPIConnectivityIdentity,
			// Token: 0x04005332 RID: 21298
			InvalidMessageDataClassificationParameterLessThanOne,
			// Token: 0x04005333 RID: 21299
			VerboseRecipientTypeDetailsIgnored,
			// Token: 0x04005334 RID: 21300
			ConfirmationMessageRemoveManagementRoleAssignment,
			// Token: 0x04005335 RID: 21301
			ErrorOabGenFailedForAllOrgMailboxes,
			// Token: 0x04005336 RID: 21302
			ErrorWillNotPerformOnInheritedAce,
			// Token: 0x04005337 RID: 21303
			CasHealthWebAppBadVdirConfig,
			// Token: 0x04005338 RID: 21304
			TestSearchStoreServiceNotRunning,
			// Token: 0x04005339 RID: 21305
			CurrentExternalDirectoryOrganizationId,
			// Token: 0x0400533A RID: 21306
			ContentFilterUsedVerbose,
			// Token: 0x0400533B RID: 21307
			ErrorTargetUserAlreadyHasArchiveMailbox,
			// Token: 0x0400533C RID: 21308
			ConfirmationMessageMailboxJunkEmailConfiguration,
			// Token: 0x0400533D RID: 21309
			SenderIPAddressOverlapsExistingTenantInboundConnectors,
			// Token: 0x0400533E RID: 21310
			ConfirmationMessageSaveUserPhoto,
			// Token: 0x0400533F RID: 21311
			FormsAuthenticationMarkPathErrorPathNotFoundException,
			// Token: 0x04005340 RID: 21312
			CasHealthWebAppResponseReceived,
			// Token: 0x04005341 RID: 21313
			WarningRetentionPolicyTagCorrupted,
			// Token: 0x04005342 RID: 21314
			ClassificationRuleCollectionRegexValidationFailure,
			// Token: 0x04005343 RID: 21315
			ConfirmationMessageUninstallDlpPolicy,
			// Token: 0x04005344 RID: 21316
			VerboseSettingDisableGls,
			// Token: 0x04005345 RID: 21317
			CannotLicenseServer,
			// Token: 0x04005346 RID: 21318
			ConfirmationMessageSetMigrationEndpoint,
			// Token: 0x04005347 RID: 21319
			InvalidSmtpAddressOrAlias,
			// Token: 0x04005348 RID: 21320
			ErrorNoNeedApplyMandatoryProperties,
			// Token: 0x04005349 RID: 21321
			ParameterDoesNotExist,
			// Token: 0x0400534A RID: 21322
			E4eRuleRmsTemplateNotFound,
			// Token: 0x0400534B RID: 21323
			ErrorScopeNotExclusive,
			// Token: 0x0400534C RID: 21324
			NewDagServerIsAlreadyInDifferentDagException,
			// Token: 0x0400534D RID: 21325
			ErrorCertificateNoSKI,
			// Token: 0x0400534E RID: 21326
			ErrorFailedToUnmountDatabase,
			// Token: 0x0400534F RID: 21327
			ErrorUnsupportedConfigScopeType,
			// Token: 0x04005350 RID: 21328
			ErrorRetentionIdConflictsWithRetentionTag,
			// Token: 0x04005351 RID: 21329
			NewDagServerIsAlreadyManuallyConfiguredForClusteringButIsNotInDagException,
			// Token: 0x04005352 RID: 21330
			ConfirmationMessageConnectMailboxUser,
			// Token: 0x04005353 RID: 21331
			ConfirmationMessageNewPublicFolderMigrationRequest,
			// Token: 0x04005354 RID: 21332
			VerboseDefaultOABIsNewerThanVersionE12,
			// Token: 0x04005355 RID: 21333
			ErrorActiveManagerIsNotReachable,
			// Token: 0x04005356 RID: 21334
			VerboseExtractedTextStreams,
			// Token: 0x04005357 RID: 21335
			ErrorInstallDlpPolicyRuleWithThisNameAlreadyExists,
			// Token: 0x04005358 RID: 21336
			MsiCouldNotOpenPackage,
			// Token: 0x04005359 RID: 21337
			ErrorWorkloadManagementPolicyName,
			// Token: 0x0400535A RID: 21338
			ConfirmationMessageSetAuthRedirect,
			// Token: 0x0400535B RID: 21339
			ErrorRelocationStateRequestedIsMandatory,
			// Token: 0x0400535C RID: 21340
			LiveIdAuthenticationSuccess,
			// Token: 0x0400535D RID: 21341
			ErrorCannotSaveBecauseTooNew,
			// Token: 0x0400535E RID: 21342
			ErrorMailboxVersionTooOld,
			// Token: 0x0400535F RID: 21343
			WarningCannotResolveUser,
			// Token: 0x04005360 RID: 21344
			ConfirmationMessageUpdateAddressBookPolicy,
			// Token: 0x04005361 RID: 21345
			ConfirmationMessageNewManagementRoleEntry,
			// Token: 0x04005362 RID: 21346
			ErrorAssigneeUserNotUnique,
			// Token: 0x04005363 RID: 21347
			ErrorFailedToGetDatabaseSize,
			// Token: 0x04005364 RID: 21348
			ErrorManagedConentSettinsNonUnique,
			// Token: 0x04005365 RID: 21349
			ErrorChildFolderNotExistsOnServer,
			// Token: 0x04005366 RID: 21350
			ErrorIncompatbileManagementSiteLink,
			// Token: 0x04005367 RID: 21351
			SystemMailboxTarget,
			// Token: 0x04005368 RID: 21352
			ConfirmationMessageTestTeamMailbox,
			// Token: 0x04005369 RID: 21353
			ErrorPidRealmDifferentFromMetadata,
			// Token: 0x0400536A RID: 21354
			RemovedDeviceFilterRuleByNameAndCharacteristic,
			// Token: 0x0400536B RID: 21355
			VerboseMountDatabase,
			// Token: 0x0400536C RID: 21356
			SmtpConnectivityFailures,
			// Token: 0x0400536D RID: 21357
			ConfirmationMessageRemoveSecondaryDomain,
			// Token: 0x0400536E RID: 21358
			WarningNoActiveDatabasesFoundOnServer,
			// Token: 0x0400536F RID: 21359
			ErrorMailboxDatabaseNotOnCurrentCmdletVersion2,
			// Token: 0x04005370 RID: 21360
			InfoProcessRemoveMember,
			// Token: 0x04005371 RID: 21361
			ConfirmationMessageSetMalwareFilterPolicy,
			// Token: 0x04005372 RID: 21362
			DatabaseLogonSuccessful,
			// Token: 0x04005373 RID: 21363
			ErrorCertificateNotValid,
			// Token: 0x04005374 RID: 21364
			ErrorArbitrationMbxNotSetForModeration,
			// Token: 0x04005375 RID: 21365
			ErrorMaxConcurrentMigrationsExceeded,
			// Token: 0x04005376 RID: 21366
			PasscodeInformation,
			// Token: 0x04005377 RID: 21367
			DataClassificationAmbiguousName,
			// Token: 0x04005378 RID: 21368
			ChangedMessageClass,
			// Token: 0x04005379 RID: 21369
			ConfirmationMessageRemoveTeamMailbox,
			// Token: 0x0400537A RID: 21370
			ClassificationRuleCollectionPayloadSizeExceededLimitFailure,
			// Token: 0x0400537B RID: 21371
			OpeningClusterDatabase,
			// Token: 0x0400537C RID: 21372
			ErrorPasswordIncludesInvalidChars,
			// Token: 0x0400537D RID: 21373
			ErrorRoleAssignmentPolicyNotFound,
			// Token: 0x0400537E RID: 21374
			ConfirmationMessageNewMailuserWithWindowsLiveId,
			// Token: 0x0400537F RID: 21375
			ConfirmationMessageRemoveAttachmentfilterentry,
			// Token: 0x04005380 RID: 21376
			NoLocalDomainIsFederatedRemotely,
			// Token: 0x04005381 RID: 21377
			ResumeSgcUseState,
			// Token: 0x04005382 RID: 21378
			ErrorCompilingMFL,
			// Token: 0x04005383 RID: 21379
			CmdletHandlerAlreadyDefined,
			// Token: 0x04005384 RID: 21380
			ErrorNameNotAvailable,
			// Token: 0x04005385 RID: 21381
			ErrorPilotServicePlanCanBeUsedToCreateSharedOrgsOnly,
			// Token: 0x04005386 RID: 21382
			InstallDefaultSharingPolicy,
			// Token: 0x04005387 RID: 21383
			ErrorMovePublicFolderDistributionDisabledOabToTiServer,
			// Token: 0x04005388 RID: 21384
			InfoRemovingAce,
			// Token: 0x04005389 RID: 21385
			RemoveDefaultTPD,
			// Token: 0x0400538A RID: 21386
			AlsEmailBodyMailboxLogonTypes,
			// Token: 0x0400538B RID: 21387
			ErrorNewRoleNeedHierarchicalRoleAssignmentWithoutScopeRestriction,
			// Token: 0x0400538C RID: 21388
			AlreadyConfiguredComponent,
			// Token: 0x0400538D RID: 21389
			UMCallAnsweringRuleFindMeWithContext,
			// Token: 0x0400538E RID: 21390
			WarningChangeDefaultTPD,
			// Token: 0x0400538F RID: 21391
			CutoverMigrationNotSupportedForProtocol,
			// Token: 0x04005390 RID: 21392
			ErrorInvalidArbitrationMbxTypeForModerationAndAutogroup,
			// Token: 0x04005391 RID: 21393
			SendConnectorNonSmtpAddressSpaceOnEdge,
			// Token: 0x04005392 RID: 21394
			OtherDatabaseCopyHasHighestPreference,
			// Token: 0x04005393 RID: 21395
			CouldNotRemoveCompletedRequest,
			// Token: 0x04005394 RID: 21396
			ErrorOneManagementOrgMailboxIsRequired,
			// Token: 0x04005395 RID: 21397
			ErrorCannotModifyCrossVersionObject,
			// Token: 0x04005396 RID: 21398
			GetDagHealthInfoRequestException,
			// Token: 0x04005397 RID: 21399
			TestTeamMailboxConstraintError,
			// Token: 0x04005398 RID: 21400
			ConfirmationMessageDisableMailPublicFolder,
			// Token: 0x04005399 RID: 21401
			DebugResolvingUserCN,
			// Token: 0x0400539A RID: 21402
			ConfirmationMessageRemoveGls,
			// Token: 0x0400539B RID: 21403
			ErrorCannotCreateFolderUnderNonIpmSubtree,
			// Token: 0x0400539C RID: 21404
			ElcServerNotFound,
			// Token: 0x0400539D RID: 21405
			ConnectionFailedException,
			// Token: 0x0400539E RID: 21406
			ConfirmationMessageNewExchangeSettings,
			// Token: 0x0400539F RID: 21407
			OnPremisesOrganizationConfirmationMessageRemove,
			// Token: 0x040053A0 RID: 21408
			ErrorCannotMovePrimaryAndArchiveInDifferentDirections,
			// Token: 0x040053A1 RID: 21409
			ErrorMoveUnableToGetCopyStatusException,
			// Token: 0x040053A2 RID: 21410
			ApplicationUrisDiffer,
			// Token: 0x040053A3 RID: 21411
			WarnRpcHttpAdOrphanFound,
			// Token: 0x040053A4 RID: 21412
			OnPremisesOrganizationInboundConnectorNotExists,
			// Token: 0x040053A5 RID: 21413
			VerboseTestSourceSite,
			// Token: 0x040053A6 RID: 21414
			BackupFileNotCreated,
			// Token: 0x040053A7 RID: 21415
			ErrorCanNotFindWebObject,
			// Token: 0x040053A8 RID: 21416
			ErrorUnknownAssignmentMethod,
			// Token: 0x040053A9 RID: 21417
			VerboseDomainControllerUsedOutOfSiteDatabase,
			// Token: 0x040053AA RID: 21418
			NoMailboxRoleInstalledException,
			// Token: 0x040053AB RID: 21419
			MalwareFilterActionDescription,
			// Token: 0x040053AC RID: 21420
			ConfirmationMessageRemoveManagementScope,
			// Token: 0x040053AD RID: 21421
			ConfirmationMessageRemoveMessageClassificationExtended,
			// Token: 0x040053AE RID: 21422
			ErrorAddressListOrGlobalAddressListNotFound,
			// Token: 0x040053AF RID: 21423
			DagTaskProblemChangingQuorumExceptionAccessDenied,
			// Token: 0x040053B0 RID: 21424
			SupportedToolsDataOverlappingTenantVersionRanges,
			// Token: 0x040053B1 RID: 21425
			ErrorRollbackGlsExpectsSynchronizationFinishedFullSync,
			// Token: 0x040053B2 RID: 21426
			ErrorFailedToNetIdToMemberName,
			// Token: 0x040053B3 RID: 21427
			RetentionPolicyTagTaskException,
			// Token: 0x040053B4 RID: 21428
			TenantAlreadyHasRequestPending,
			// Token: 0x040053B5 RID: 21429
			verboseNetIdToMemberName,
			// Token: 0x040053B6 RID: 21430
			SendConnectorSourceAndTargetServersInOneRg,
			// Token: 0x040053B7 RID: 21431
			ErrorDiscoveryMailboxDatabase,
			// Token: 0x040053B8 RID: 21432
			ClassificationRuleCollectionKeywordTooLong,
			// Token: 0x040053B9 RID: 21433
			PopImapDeleteMsg,
			// Token: 0x040053BA RID: 21434
			GetEcpVersionException,
			// Token: 0x040053BB RID: 21435
			InvalidAuditSeverityLevel,
			// Token: 0x040053BC RID: 21436
			ErrorExtendedRightNotFound,
			// Token: 0x040053BD RID: 21437
			ReadDeletedObjectsAclPermissionDeniedException,
			// Token: 0x040053BE RID: 21438
			ErrorSetMailboxLitigationHoldDurationNotReadError,
			// Token: 0x040053BF RID: 21439
			EcpAdOrphanFound,
			// Token: 0x040053C0 RID: 21440
			CouldNotConnectToClusterError,
			// Token: 0x040053C1 RID: 21441
			ErrorWSManModuleFileNotFound,
			// Token: 0x040053C2 RID: 21442
			AuditLogSearchArbitrationMailboxNotFound,
			// Token: 0x040053C3 RID: 21443
			UnableToAddE12DStoExSReplicationException,
			// Token: 0x040053C4 RID: 21444
			FailedDocumentsResultsMailbox,
			// Token: 0x040053C5 RID: 21445
			TopologyServiceADServerInfo,
			// Token: 0x040053C6 RID: 21446
			ErrorDCNotFound,
			// Token: 0x040053C7 RID: 21447
			messageTopologyServiceWCFExceptionThrown,
			// Token: 0x040053C8 RID: 21448
			DagTaskServersInClusterNotInAd,
			// Token: 0x040053C9 RID: 21449
			VerboseSyncTaskDomainControllerToUse,
			// Token: 0x040053CA RID: 21450
			MoveMailboxConfigurationOnlyShouldMoveE14ToLowerVersion,
			// Token: 0x040053CB RID: 21451
			WarningCertificateSameAsPrevious,
			// Token: 0x040053CC RID: 21452
			ErrorMovingCatalogs,
			// Token: 0x040053CD RID: 21453
			ConfirmationClearingChainedProperties,
			// Token: 0x040053CE RID: 21454
			RootNodeCannotBeRemoved,
			// Token: 0x040053CF RID: 21455
			ErrorNoPublicFolderDatabaseOnServer,
			// Token: 0x040053D0 RID: 21456
			SeederProgressMsgNoNetwork,
			// Token: 0x040053D1 RID: 21457
			AmMoveRpcCompleted,
			// Token: 0x040053D2 RID: 21458
			LookingForTask,
			// Token: 0x040053D3 RID: 21459
			ConfirmationMessageMoveMailboxDatabaseMasterToDisabledServer,
			// Token: 0x040053D4 RID: 21460
			CannotValidateIfVOAdmin,
			// Token: 0x040053D5 RID: 21461
			ErrorSpecifiedPropertyCannotBeSet,
			// Token: 0x040053D6 RID: 21462
			ErrorInvalidMetadataUrl,
			// Token: 0x040053D7 RID: 21463
			FailedToGetServiceStatusForNodeException,
			// Token: 0x040053D8 RID: 21464
			ConfirmationMessageRemoveMailboxAssociation,
			// Token: 0x040053D9 RID: 21465
			ExceptionIncomparableType,
			// Token: 0x040053DA RID: 21466
			RequestFailedValidation,
			// Token: 0x040053DB RID: 21467
			VerboseLogLocationAvailableCondition,
			// Token: 0x040053DC RID: 21468
			CannotResolveObjectTypeDefined,
			// Token: 0x040053DD RID: 21469
			ConfirmationMessageMountDatabase,
			// Token: 0x040053DE RID: 21470
			WarningSuspendSupportedOnlyDuringSync,
			// Token: 0x040053DF RID: 21471
			ErrorCannotRemovePrimaryPublicFolderMailbox,
			// Token: 0x040053E0 RID: 21472
			ErrorManagedByWrongRecipientTypeDetails,
			// Token: 0x040053E1 RID: 21473
			VerboseOabLinkedToPfdb,
			// Token: 0x040053E2 RID: 21474
			GetFederationInformationTokenIssuerMatches,
			// Token: 0x040053E3 RID: 21475
			ErrorRoleAssignmentConstraintViolation,
			// Token: 0x040053E4 RID: 21476
			SetFedAcceptedDomainCleanup,
			// Token: 0x040053E5 RID: 21477
			CasHealthMailboxServerNotFound,
			// Token: 0x040053E6 RID: 21478
			ErrorDatabaseNotFound,
			// Token: 0x040053E7 RID: 21479
			AIDatabaseStatusPollThreadHung,
			// Token: 0x040053E8 RID: 21480
			ManageDelegationProvisioningInDNS,
			// Token: 0x040053E9 RID: 21481
			CertificateRequestMissingForArgument,
			// Token: 0x040053EA RID: 21482
			ErrorPasswordTooLong,
			// Token: 0x040053EB RID: 21483
			VerboseTestEwsFromParameter,
			// Token: 0x040053EC RID: 21484
			InstallingPackage,
			// Token: 0x040053ED RID: 21485
			RunFromServer,
			// Token: 0x040053EE RID: 21486
			GetFederationInformationShouldUseInvalidCertificate,
			// Token: 0x040053EF RID: 21487
			ErrorConnectToApplicationTimeout,
			// Token: 0x040053F0 RID: 21488
			ErrorPathIsNotOnFixedDrive,
			// Token: 0x040053F1 RID: 21489
			MsiFullPackagePath,
			// Token: 0x040053F2 RID: 21490
			DagMemberPausedFailed,
			// Token: 0x040053F3 RID: 21491
			ErrorFailedToMoveEdbFile,
			// Token: 0x040053F4 RID: 21492
			InfoAddGroupToGroup,
			// Token: 0x040053F5 RID: 21493
			ConfirmationMessageCompareTextMessagingVerificationCode,
			// Token: 0x040053F6 RID: 21494
			ConfirmationMessageNewPartnerApplication,
			// Token: 0x040053F7 RID: 21495
			ErrorUnexpectedResults,
			// Token: 0x040053F8 RID: 21496
			ConfirmationMessageDisableHostedConnectionFilterRule,
			// Token: 0x040053F9 RID: 21497
			ConfirmationMessageSetUMMailboxPolicy,
			// Token: 0x040053FA RID: 21498
			FailedToDecryptPrivateKey,
			// Token: 0x040053FB RID: 21499
			ErrorCannotExportPstFromPublicFolderMailbox,
			// Token: 0x040053FC RID: 21500
			ProgressEmailAddressPolicyRollingBackPriority,
			// Token: 0x040053FD RID: 21501
			ErrorCannotChangeResourceMailboxToUserMailbox,
			// Token: 0x040053FE RID: 21502
			ConfirmationMessageEnableMailUserArchive,
			// Token: 0x040053FF RID: 21503
			CannotLicenseRemoteServerWith32BitAdmin,
			// Token: 0x04005400 RID: 21504
			ConfirmationMessageRemoveIPBlockListProvider,
			// Token: 0x04005401 RID: 21505
			CertificateExpired,
			// Token: 0x04005402 RID: 21506
			ConfirmationMessageDisableCallAnsweringRule,
			// Token: 0x04005403 RID: 21507
			ErrorCannotConvertBuiltInGroup,
			// Token: 0x04005404 RID: 21508
			CannotModifyRuleDueToVersion,
			// Token: 0x04005405 RID: 21509
			ConfirmationMessageNewSharingPolicy,
			// Token: 0x04005406 RID: 21510
			TenantCannotChangeIsDataMigrationRequested,
			// Token: 0x04005407 RID: 21511
			ConfirmOverwriteInternalTransportCertificate,
			// Token: 0x04005408 RID: 21512
			LiveDomainServicesRequestFailed,
			// Token: 0x04005409 RID: 21513
			DuplicateCapabilityMapping,
			// Token: 0x0400540A RID: 21514
			JournalingParameterErrorGccTenantNotFound,
			// Token: 0x0400540B RID: 21515
			FailedMoveHistoryEntry,
			// Token: 0x0400540C RID: 21516
			DagUnableToFindCnoError,
			// Token: 0x0400540D RID: 21517
			CantFindCertByThumbprint,
			// Token: 0x0400540E RID: 21518
			ErrorAccessingRegistryRaisesException,
			// Token: 0x0400540F RID: 21519
			ReportMovedMailboxUpdated,
			// Token: 0x04005410 RID: 21520
			InvalidTrafficType,
			// Token: 0x04005411 RID: 21521
			ErrorCannotRestoreFromConnectedMailbox,
			// Token: 0x04005412 RID: 21522
			ErrorFailedToAddCrossDomainGroupMember,
			// Token: 0x04005413 RID: 21523
			ErrorUserNotBeingMoved,
			// Token: 0x04005414 RID: 21524
			NoExecutableForService,
			// Token: 0x04005415 RID: 21525
			ErrorInvalidDomainInSmtpAddressTemplate,
			// Token: 0x04005416 RID: 21526
			PatchFileFound,
			// Token: 0x04005417 RID: 21527
			ErrorRemoteAccountPolicyNotUnique,
			// Token: 0x04005418 RID: 21528
			ConfirmationMessageCompleteMigrationBatchWithFailedItems,
			// Token: 0x04005419 RID: 21529
			ErrorMemberNameInUse,
			// Token: 0x0400541A RID: 21530
			InfoProcessAction,
			// Token: 0x0400541B RID: 21531
			ErrorExistingAuthServerWithSameRealm,
			// Token: 0x0400541C RID: 21532
			CasHealthNoHttpResponseRecieved,
			// Token: 0x0400541D RID: 21533
			ErrorAddExistentParameters,
			// Token: 0x0400541E RID: 21534
			DatabaseNotFoundException,
			// Token: 0x0400541F RID: 21535
			WarningFswFailed,
			// Token: 0x04005420 RID: 21536
			LookupAccountNameFailedException,
			// Token: 0x04005421 RID: 21537
			RecipientNotValidException,
			// Token: 0x04005422 RID: 21538
			FoundComponents,
			// Token: 0x04005423 RID: 21539
			RemoveADServerMetadataDomainControllerNotFound,
			// Token: 0x04005424 RID: 21540
			ErrorLinkedAccountInTheCurrentForest,
			// Token: 0x04005425 RID: 21541
			ErrorServerNotFound,
			// Token: 0x04005426 RID: 21542
			ErrorCannotDeletePrecannedRole,
			// Token: 0x04005427 RID: 21543
			ConfirmationMessageRemoveAvailabilityConfig,
			// Token: 0x04005428 RID: 21544
			RemovingFile,
			// Token: 0x04005429 RID: 21545
			NeedRemoveDatabaseFileManually,
			// Token: 0x0400542A RID: 21546
			DiscoveringDomain,
			// Token: 0x0400542B RID: 21547
			ConfirmationMessageUpdateDatabaseCopyServerBegin,
			// Token: 0x0400542C RID: 21548
			GlobalLocatorServiceFailed,
			// Token: 0x0400542D RID: 21549
			DlpPolicyDuplicateLocalizedString,
			// Token: 0x0400542E RID: 21550
			ErrorRetentionPolicyNotFound,
			// Token: 0x0400542F RID: 21551
			PerfCounterCategoryDefinition,
			// Token: 0x04005430 RID: 21552
			MaSGroupNotFoundException,
			// Token: 0x04005431 RID: 21553
			ConfirmationMessageSetFederationTrust3,
			// Token: 0x04005432 RID: 21554
			ConfirmationMessageNewEmailAddressPolicySMTPTemplateWithPrecannedFilter,
			// Token: 0x04005433 RID: 21555
			ServiceInstanceNotMatchMessage,
			// Token: 0x04005434 RID: 21556
			ConfirmationMessageEnableRpcHttpInternalOnly,
			// Token: 0x04005435 RID: 21557
			UnableToGeneratedWatsonReportForHungService,
			// Token: 0x04005436 RID: 21558
			ErrorOabVDirAlreadyAssigned,
			// Token: 0x04005437 RID: 21559
			WarningRetentionPolicyIdChange,
			// Token: 0x04005438 RID: 21560
			ErrorUMInvalidE164OrExtensionAddressFormat,
			// Token: 0x04005439 RID: 21561
			ErrorCannotSetTransportServerPropertyOnSubscribedEdge,
			// Token: 0x0400543A RID: 21562
			MigrationMaxConcurrentIncrementalSyncsVerificationFailed,
			// Token: 0x0400543B RID: 21563
			SmartHostsIPValidationFailedId,
			// Token: 0x0400543C RID: 21564
			CasHealthCalendarVDirWarning,
			// Token: 0x0400543D RID: 21565
			ConstraintError,
			// Token: 0x0400543E RID: 21566
			VerboseMailboxNotExistInStore,
			// Token: 0x0400543F RID: 21567
			CannotAssignCertificateToUM,
			// Token: 0x04005440 RID: 21568
			ErrorMissingDependentParameter,
			// Token: 0x04005441 RID: 21569
			ConfirmationMessageSetPublicFolderDatabase,
			// Token: 0x04005442 RID: 21570
			DivergenceAlreadyExists,
			// Token: 0x04005443 RID: 21571
			ConfirmationMessageEnableConversations,
			// Token: 0x04005444 RID: 21572
			ErrorCannotChangeBecauseTooOld,
			// Token: 0x04005445 RID: 21573
			InvalidCspForCryptoModeInImportedTrustedPublishingDomain,
			// Token: 0x04005446 RID: 21574
			AddAccountRightsFailedException,
			// Token: 0x04005447 RID: 21575
			CasHealthWebAppVdirNotFoundError,
			// Token: 0x04005448 RID: 21576
			FailedToLocatePublicFolder,
			// Token: 0x04005449 RID: 21577
			UmLanguagePackDirectory,
			// Token: 0x0400544A RID: 21578
			RmsSharedIdentityComputerNotFound,
			// Token: 0x0400544B RID: 21579
			LogMigrationOpenRegistryKey,
			// Token: 0x0400544C RID: 21580
			ErrorDisableMailboxWithAssociatedApprovalRecipents,
			// Token: 0x0400544D RID: 21581
			TestSearchCreateSearchFolderError,
			// Token: 0x0400544E RID: 21582
			ProcessingComponent,
			// Token: 0x0400544F RID: 21583
			ConfirmationMessageSetRMSTemplate,
			// Token: 0x04005450 RID: 21584
			ErrorDbMountedOnServer,
			// Token: 0x04005451 RID: 21585
			ConfirmationMessageNewDistributionGroup,
			// Token: 0x04005452 RID: 21586
			DatabaseCopySuspendedCheck,
			// Token: 0x04005453 RID: 21587
			ConfirmationMessageMoveActiveMailboxDatabasePrefToServer,
			// Token: 0x04005454 RID: 21588
			AddAccessRuleCOM,
			// Token: 0x04005455 RID: 21589
			WarnCertificateWillNotBeUsedBestIsPKI,
			// Token: 0x04005456 RID: 21590
			InstallFreeBusyFolderGeneralFailure,
			// Token: 0x04005457 RID: 21591
			ErrorUserNotUniqueOnDomainController,
			// Token: 0x04005458 RID: 21592
			ErrorUnableToReleaseUri,
			// Token: 0x04005459 RID: 21593
			HybridMailflowNullConnector,
			// Token: 0x0400545A RID: 21594
			ClassificationRuleCollectionVersionViolation,
			// Token: 0x0400545B RID: 21595
			ErrorCannotDetermineInitialDomain,
			// Token: 0x0400545C RID: 21596
			ErrorObjectIsNotLiveIDEnabled,
			// Token: 0x0400545D RID: 21597
			ErrorInvalidRegistryHive,
			// Token: 0x0400545E RID: 21598
			WarnAboutDeprecatedParameter,
			// Token: 0x0400545F RID: 21599
			ErrorDisableMailuserWithLitigationHold,
			// Token: 0x04005460 RID: 21600
			ErrorSchemaVersionDoesntApply,
			// Token: 0x04005461 RID: 21601
			ErrorOperationOnOldServer,
			// Token: 0x04005462 RID: 21602
			InvalidExpression,
			// Token: 0x04005463 RID: 21603
			ErrorCannotRemoveMigrationUserOnCurrentState,
			// Token: 0x04005464 RID: 21604
			ErrorConnectSystemAttendantMailbox,
			// Token: 0x04005465 RID: 21605
			ErrorPublicFolderDatabaseNotUnique,
			// Token: 0x04005466 RID: 21606
			ConfirmationMessageSetWebServicesVirtualDirectory,
			// Token: 0x04005467 RID: 21607
			ConfirmationMessageNewMalwareFilterRule,
			// Token: 0x04005468 RID: 21608
			ConfirmationMessageNewAddressBookPolicy,
			// Token: 0x04005469 RID: 21609
			ErrorInvalidContentMailbox,
			// Token: 0x0400546A RID: 21610
			ConfirmationMessageNewAvailabilityConfig,
			// Token: 0x0400546B RID: 21611
			ElementNotFound,
			// Token: 0x0400546C RID: 21612
			AdminAuditLogSearchCriteria,
			// Token: 0x0400546D RID: 21613
			ErrorMailboxDatabaseNotFound,
			// Token: 0x0400546E RID: 21614
			OfferIdMatchError,
			// Token: 0x0400546F RID: 21615
			NoGCsAvailableException,
			// Token: 0x04005470 RID: 21616
			VerboseSyncTaskCookieHasPageData,
			// Token: 0x04005471 RID: 21617
			ErrorVerificationCodeNeverSent,
			// Token: 0x04005472 RID: 21618
			CouldNotFindHostDirectoryEntryException,
			// Token: 0x04005473 RID: 21619
			TestMigrationServerAvailabilityException,
			// Token: 0x04005474 RID: 21620
			WarningEESandEDSNotFound,
			// Token: 0x04005475 RID: 21621
			UnableToResolveValidDomainExchangeCertificateTasksException,
			// Token: 0x04005476 RID: 21622
			RestoreFailedDagUp,
			// Token: 0x04005477 RID: 21623
			ConfirmationMessageNewMessageClassificationName,
			// Token: 0x04005478 RID: 21624
			PopImapSettingsPortMismatch,
			// Token: 0x04005479 RID: 21625
			GlobalRoutingEntryFound,
			// Token: 0x0400547A RID: 21626
			VerboseDeleteSystemMailbox,
			// Token: 0x0400547B RID: 21627
			ConfirmationMessageRemovePublicFolderDatabase,
			// Token: 0x0400547C RID: 21628
			ConfirmationMessageEnableMailboxUser,
			// Token: 0x0400547D RID: 21629
			WarningDiscoveryHoldDelay,
			// Token: 0x0400547E RID: 21630
			ErrorInvalidExpansionServer,
			// Token: 0x0400547F RID: 21631
			MailboxSearchServiceUnavailable,
			// Token: 0x04005480 RID: 21632
			WarningPushCertificate,
			// Token: 0x04005481 RID: 21633
			TestMigrationServerAvailabilitySuccess,
			// Token: 0x04005482 RID: 21634
			ConfirmationMessageRemoveOutboundConnector,
			// Token: 0x04005483 RID: 21635
			ErrorRoleNotFound,
			// Token: 0x04005484 RID: 21636
			ProgressActivityPushFederationCertificate,
			// Token: 0x04005485 RID: 21637
			ConfirmationMessageNewMobileSyncVirtualDirectory,
			// Token: 0x04005486 RID: 21638
			CallingDomainServicesEndPoint,
			// Token: 0x04005487 RID: 21639
			ConfirmationMessageNewMailboxImportRequest,
			// Token: 0x04005488 RID: 21640
			ErrorCannotModifyDeprecatedRole,
			// Token: 0x04005489 RID: 21641
			ErrorOperationOnlyOnMailboxServer,
			// Token: 0x0400548A RID: 21642
			ErrorUnsupportedMailboxShapeFeatureVersionException,
			// Token: 0x0400548B RID: 21643
			ErrorCannotParseFsmoRoleOwnerVersion,
			// Token: 0x0400548C RID: 21644
			CannotStartRunningJob,
			// Token: 0x0400548D RID: 21645
			ConfirmationMessageNewRecipientTemplateProvisioningPolicy,
			// Token: 0x0400548E RID: 21646
			ErrorPolicyValidationFailed,
			// Token: 0x0400548F RID: 21647
			DagMemberStopped,
			// Token: 0x04005490 RID: 21648
			ConfirmationMessageRemoveWebServicesVirtualDirectory,
			// Token: 0x04005491 RID: 21649
			ConfirmationMessageSetMalwareFilterConfig,
			// Token: 0x04005492 RID: 21650
			ConfirmationMessageEnableMailboxWithArchive,
			// Token: 0x04005493 RID: 21651
			DagFswInsufficientPermissionsToAccessFswException,
			// Token: 0x04005494 RID: 21652
			EmptyDeviceFilterRemoved,
			// Token: 0x04005495 RID: 21653
			SmtpConnectivityServerNotConfigured,
			// Token: 0x04005496 RID: 21654
			ErrorDlpPolicyAlreadyInstalled,
			// Token: 0x04005497 RID: 21655
			WarningDuplicatedPropertyOriginalEntry,
			// Token: 0x04005498 RID: 21656
			MaxDeviceDeletesPerMonthReached,
			// Token: 0x04005499 RID: 21657
			VerboseSavePublicFolderReferral,
			// Token: 0x0400549A RID: 21658
			MissingPilotOffer,
			// Token: 0x0400549B RID: 21659
			ConfirmationMessageInvokePreMoveAction,
			// Token: 0x0400549C RID: 21660
			ErrorUnableToCheckMountedStatus,
			// Token: 0x0400549D RID: 21661
			ErrorServerDacedAndNotStarted,
			// Token: 0x0400549E RID: 21662
			VerboseBumpOrganizationExchangeVersion,
			// Token: 0x0400549F RID: 21663
			ExceptionStorageAccessDenied,
			// Token: 0x040054A0 RID: 21664
			EnableConversationsProcessingItems,
			// Token: 0x040054A1 RID: 21665
			FailedToRemoveDatabaseSection,
			// Token: 0x040054A2 RID: 21666
			FailToValidateSubscripionPrincipalOnEdge,
			// Token: 0x040054A3 RID: 21667
			FailedToGetElcUserConfigurationFromService,
			// Token: 0x040054A4 RID: 21668
			WarningRoleEntryAlreadyExists,
			// Token: 0x040054A5 RID: 21669
			VerboseMailboxDelegateAdded,
			// Token: 0x040054A6 RID: 21670
			ConfirmationMessageRemoveEmailAddressPolicy,
			// Token: 0x040054A7 RID: 21671
			ConfirmationMessageRemoveLinkedUser,
			// Token: 0x040054A8 RID: 21672
			VerboseRemoveWSManGlobalModule,
			// Token: 0x040054A9 RID: 21673
			WarningCouldNotCreateDefaultRoleAssignment,
			// Token: 0x040054AA RID: 21674
			ConfirmationMessageSetTransportServer,
			// Token: 0x040054AB RID: 21675
			NoRemoteInstallPath,
			// Token: 0x040054AC RID: 21676
			AccessStoreError,
			// Token: 0x040054AD RID: 21677
			ErrorMRSIsDownlevel,
			// Token: 0x040054AE RID: 21678
			AgentDoesNotExist,
			// Token: 0x040054AF RID: 21679
			ErrorPSTFileNotExist,
			// Token: 0x040054B0 RID: 21680
			ErrorServerIsNotCasServer,
			// Token: 0x040054B1 RID: 21681
			CannotReadRolesFromRegistry,
			// Token: 0x040054B2 RID: 21682
			InvalidMessageDataClassificationParameterConfidenceExceedsMaxAllowed,
			// Token: 0x040054B3 RID: 21683
			FormsAuthenticationErrorPathBusyException,
			// Token: 0x040054B4 RID: 21684
			ErrorUserIsAlreadyBeingMoved,
			// Token: 0x040054B5 RID: 21685
			DatabasesRedundancyCheckFailed,
			// Token: 0x040054B6 RID: 21686
			VerboseSetSystemAttendantObject,
			// Token: 0x040054B7 RID: 21687
			InfoPrivilegeAlreadyPresent,
			// Token: 0x040054B8 RID: 21688
			ErrorOfflineAddressBookNotFound,
			// Token: 0x040054B9 RID: 21689
			ConfigFileNotFoundException,
			// Token: 0x040054BA RID: 21690
			VerboseParsingOPathFilterFailed,
			// Token: 0x040054BB RID: 21691
			MigrationMaxConcurrentConnectionsVerificationFailed,
			// Token: 0x040054BC RID: 21692
			ConfirmationMessageRemoveTransportProcessingQuotaOverride,
			// Token: 0x040054BD RID: 21693
			ErrorMinVersionGreaterThanMaxVersion,
			// Token: 0x040054BE RID: 21694
			SiteMailboxLanguageSet,
			// Token: 0x040054BF RID: 21695
			MailboxAssistantsServiceStopped,
			// Token: 0x040054C0 RID: 21696
			WarningMessageSetWebServicesVirtualDirectoryWindowsAuthentication,
			// Token: 0x040054C1 RID: 21697
			ErrorInvalidIso3166Alpha2Code,
			// Token: 0x040054C2 RID: 21698
			ErrorCannotConnectToMailboxDatabase,
			// Token: 0x040054C3 RID: 21699
			CasHealthWebAppLiveIdError,
			// Token: 0x040054C4 RID: 21700
			InvalidMailboxContainerGuid,
			// Token: 0x040054C5 RID: 21701
			ComplianceSearchSendStartMessageError,
			// Token: 0x040054C6 RID: 21702
			TestSearchDatabaseIsNull,
			// Token: 0x040054C7 RID: 21703
			ErrorLogFolderPathNotUniqueUnderTheSameNode,
			// Token: 0x040054C8 RID: 21704
			DebugResolvingDomainAccount,
			// Token: 0x040054C9 RID: 21705
			VerboseMRSRequestDistinguishedName,
			// Token: 0x040054CA RID: 21706
			DagTaskClusterServiceNotRunningOnNodeException,
			// Token: 0x040054CB RID: 21707
			ConfirmCreatingExclusiveScope,
			// Token: 0x040054CC RID: 21708
			GeneratedWatsonReportForHungService,
			// Token: 0x040054CD RID: 21709
			ErrorSourcePrimaryMailboxDoesNotExist,
			// Token: 0x040054CE RID: 21710
			ErrorArchiveDumpsterExceedsTargetQuota,
			// Token: 0x040054CF RID: 21711
			ErrorNoAvailableDefaultFilePath,
			// Token: 0x040054D0 RID: 21712
			InterceptorErrorInvalidEventActionPair,
			// Token: 0x040054D1 RID: 21713
			UnableToMoveMailboxWithSubscriptions,
			// Token: 0x040054D2 RID: 21714
			ErrorPathNotExistsOnServer,
			// Token: 0x040054D3 RID: 21715
			RuleCollectionAlreadyExists,
			// Token: 0x040054D4 RID: 21716
			CouldNotUpgradeRetentionTrigger,
			// Token: 0x040054D5 RID: 21717
			ClassificationRuleCollectionNonUniqueLangCodesInRulePackDescriptor,
			// Token: 0x040054D6 RID: 21718
			ErrorUniversalGroupCannotHaveForeignSP,
			// Token: 0x040054D7 RID: 21719
			ConfirmationMessageAutoTagCrossValidate,
			// Token: 0x040054D8 RID: 21720
			InvalidCidrRangeId,
			// Token: 0x040054D9 RID: 21721
			TargetMailboxInSourceIsSkipped,
			// Token: 0x040054DA RID: 21722
			ProcessingAceStatus,
			// Token: 0x040054DB RID: 21723
			messageADServerNotFoundException,
			// Token: 0x040054DC RID: 21724
			messageSystemMailboxNotFoundException,
			// Token: 0x040054DD RID: 21725
			ErrorUnableToResolvePublicToGroup,
			// Token: 0x040054DE RID: 21726
			InterceptorErrorInvalidBehavior,
			// Token: 0x040054DF RID: 21727
			ErrorRemoveGroupRoleAssignment,
			// Token: 0x040054E0 RID: 21728
			CrossPremiseNoEgressTargets,
			// Token: 0x040054E1 RID: 21729
			RemoveDagDestroyedCluster,
			// Token: 0x040054E2 RID: 21730
			ErrorCannotAssignPartnerAppRole,
			// Token: 0x040054E3 RID: 21731
			ConfirmationMessageEnableTransportRule,
			// Token: 0x040054E4 RID: 21732
			UnableToAddE12DStoExSPermissionsException,
			// Token: 0x040054E5 RID: 21733
			WarningCouldNotRemoveRoleAssignment,
			// Token: 0x040054E6 RID: 21734
			OpenPolicyFailedException,
			// Token: 0x040054E7 RID: 21735
			PatchAttributeValue,
			// Token: 0x040054E8 RID: 21736
			MoveMailboxParameterError,
			// Token: 0x040054E9 RID: 21737
			ErrorCouldNotFindRequest,
			// Token: 0x040054EA RID: 21738
			ErrorPowerShellVdirAppPoolNotExist,
			// Token: 0x040054EB RID: 21739
			InterceptorConfirmModifyingOlderVersion,
			// Token: 0x040054EC RID: 21740
			FormsAuthenticationDeleteAccessDeniedException,
			// Token: 0x040054ED RID: 21741
			ExServerSGroupNotFoundException,
			// Token: 0x040054EE RID: 21742
			ErrorCannotUpdateReplicationLatency,
			// Token: 0x040054EF RID: 21743
			ErrorDefaultTagHasConflictedMessageClasses,
			// Token: 0x040054F0 RID: 21744
			ConfirmationMessageSetRoutingGroupConnector,
			// Token: 0x040054F1 RID: 21745
			SeederAsyncBeginCalled,
			// Token: 0x040054F2 RID: 21746
			ErrorParsingScript,
			// Token: 0x040054F3 RID: 21747
			ErrorSingleDbCopyMove,
			// Token: 0x040054F4 RID: 21748
			ErrorFailedToMountDatabaseMissingLogFile,
			// Token: 0x040054F5 RID: 21749
			ErrorClientAccessArrayNotFound,
			// Token: 0x040054F6 RID: 21750
			CasHealthTransactionFailures,
			// Token: 0x040054F7 RID: 21751
			VerboseSearchCompleted,
			// Token: 0x040054F8 RID: 21752
			CannotCancelWipe,
			// Token: 0x040054F9 RID: 21753
			InfoPublishingUri,
			// Token: 0x040054FA RID: 21754
			ErrorDlpPolicyTemplateNotFound,
			// Token: 0x040054FB RID: 21755
			FailedToResetRecoveryDatabase,
			// Token: 0x040054FC RID: 21756
			VerboseBackupIISConfig,
			// Token: 0x040054FD RID: 21757
			ConfirmationMessageNewPolicyTipConfig,
			// Token: 0x040054FE RID: 21758
			FailedToStartNodeException,
			// Token: 0x040054FF RID: 21759
			CantFindCertBySubject,
			// Token: 0x04005500 RID: 21760
			RecipientWithTenantServiceInstanceNotSet,
			// Token: 0x04005501 RID: 21761
			ConfirmationMessageNewPublicFolderMoveRequest,
			// Token: 0x04005502 RID: 21762
			VerboseSaveStoreMailboxSecurityDescriptor,
			// Token: 0x04005503 RID: 21763
			ConnectionToIPListRPCEndpointFailed,
			// Token: 0x04005504 RID: 21764
			VerboseDeleteDatabaseLogFiles,
			// Token: 0x04005505 RID: 21765
			ErrorNonZeroValueForShadowRetry,
			// Token: 0x04005506 RID: 21766
			ErrorOutlook2010OrLaterRequired,
			// Token: 0x04005507 RID: 21767
			PropertyAlreadyHasAnOverride,
			// Token: 0x04005508 RID: 21768
			DagTaskRemovedNodeToCluster,
			// Token: 0x04005509 RID: 21769
			WarningRenamingRole,
			// Token: 0x0400550A RID: 21770
			ErrorRetentionTagNotUnique,
			// Token: 0x0400550B RID: 21771
			ConfirmGenerateExchangeCertificate,
			// Token: 0x0400550C RID: 21772
			ConfirmationMessageStartOrganizationUpgrade,
			// Token: 0x0400550D RID: 21773
			UserNotFoundException,
			// Token: 0x0400550E RID: 21774
			ConfirmationMessageSetExchangeServer,
			// Token: 0x0400550F RID: 21775
			RecipientHasNoExternalId,
			// Token: 0x04005510 RID: 21776
			WarningFailedToDeleteSourceMailbox,
			// Token: 0x04005511 RID: 21777
			ErrorSchemaVersionOutOfRange,
			// Token: 0x04005512 RID: 21778
			SubscriptionCacheOperationFailed,
			// Token: 0x04005513 RID: 21779
			SourceMailboxMustBeE15OrLater,
			// Token: 0x04005514 RID: 21780
			ErrorFailedToReplicateMailbox,
			// Token: 0x04005515 RID: 21781
			ConversationsADUserIsNull,
			// Token: 0x04005516 RID: 21782
			ErrorUserNotHaveRoleAssignmentPolicy,
			// Token: 0x04005517 RID: 21783
			ErrorCannotAutoSuspendMoveAlreadyCompleting,
			// Token: 0x04005518 RID: 21784
			ErrorCannotDeletePrecannedRoleAssignmentToRoleGroup,
			// Token: 0x04005519 RID: 21785
			DagTaskUpdatedAdDagMembership,
			// Token: 0x0400551A RID: 21786
			ErrorGroupNotUniqueOnGlobalCatalog,
			// Token: 0x0400551B RID: 21787
			ErrorCannotRemoveNonActiveOrganization,
			// Token: 0x0400551C RID: 21788
			RemoveDagConfigurationNeedsZeroDagsException,
			// Token: 0x0400551D RID: 21789
			DagFswUnableToParseWitnessServerNameException,
			// Token: 0x0400551E RID: 21790
			AmMoveRpcRequested,
			// Token: 0x0400551F RID: 21791
			MoveMailboxCrossOrgToPt,
			// Token: 0x04005520 RID: 21792
			CasHealthSyntaxErrorInResponse,
			// Token: 0x04005521 RID: 21793
			ConfirmationMessageRemoveIntraOrganizationConnector,
			// Token: 0x04005522 RID: 21794
			SuccessDisableMailboxQuarantine,
			// Token: 0x04005523 RID: 21795
			ConfirmationMessageTestLiveIdAuthenticationIdentity,
			// Token: 0x04005524 RID: 21796
			ConfirmationMessageNewEmailAddressPolicyAllTemplatesWithCustomFilter,
			// Token: 0x04005525 RID: 21797
			ConfirmationMessageSuspendOnlineMoveRequest,
			// Token: 0x04005526 RID: 21798
			ConfirmationMessageSetSecondaryDomain,
			// Token: 0x04005527 RID: 21799
			AddDatabaseCopyAllCopiesMustBeInTheDagException,
			// Token: 0x04005528 RID: 21800
			CasHealthOwaCasColon,
			// Token: 0x04005529 RID: 21801
			ResourceOnly,
			// Token: 0x0400552A RID: 21802
			MultipleOrgMbxesWithCapability,
			// Token: 0x0400552B RID: 21803
			ErrorMailboxDumpsterExceedsTargetQuota,
			// Token: 0x0400552C RID: 21804
			ErrorAuxToAuxAttachment,
			// Token: 0x0400552D RID: 21805
			ConfirmationMessageUninstallDlpPolicyTemplate,
			// Token: 0x0400552E RID: 21806
			ErrorRedirectionEntryFailedToAdd,
			// Token: 0x0400552F RID: 21807
			ErrorTeamMailboxGetByNonMember,
			// Token: 0x04005530 RID: 21808
			ErrorDlpPolicyIsNotInstalled,
			// Token: 0x04005531 RID: 21809
			WarningCloseGroupMemberJoinForNoArbitrationMbx,
			// Token: 0x04005532 RID: 21810
			ErrorOfProtocolCommand,
			// Token: 0x04005533 RID: 21811
			DagTaskDagNameMustBeComputerNameExceptionM1,
			// Token: 0x04005534 RID: 21812
			ErrorNoRetentionPolicyForTeamMailbox,
			// Token: 0x04005535 RID: 21813
			ErrorRemoveMailboxWithAssociatedApprovalRecipents,
			// Token: 0x04005536 RID: 21814
			ConfirmationMessageAddMailboxPermissionAccessRights,
			// Token: 0x04005537 RID: 21815
			ConfirmationMessageSetMailboxPlan,
			// Token: 0x04005538 RID: 21816
			ServiceReachedStatus,
			// Token: 0x04005539 RID: 21817
			ErrorLiveDomainInaccessibleEpr,
			// Token: 0x0400553A RID: 21818
			ConfirmationMessageSetInterceptorRule,
			// Token: 0x0400553B RID: 21819
			WarningPreferredServerReplaced,
			// Token: 0x0400553C RID: 21820
			CasHealthCouldNotLogUserNoDetailedInfo,
			// Token: 0x0400553D RID: 21821
			ConnectorIPRangeContainsInvalidIPv4AddressId,
			// Token: 0x0400553E RID: 21822
			ProgressActivityPushFederationServer,
			// Token: 0x0400553F RID: 21823
			IPv6AddressesRangesAreNotAllowedInConnectorId,
			// Token: 0x04005540 RID: 21824
			AvailabilityConfigReadException,
			// Token: 0x04005541 RID: 21825
			ErrorCannotDisableLastArbitrationMailboxInOrganization,
			// Token: 0x04005542 RID: 21826
			WarningNoNeedToConvertMailboxType,
			// Token: 0x04005543 RID: 21827
			GetQueueDigestServerNoServerFoundInDag,
			// Token: 0x04005544 RID: 21828
			VerboseFindAutoDiscoverUrl,
			// Token: 0x04005545 RID: 21829
			WarningFailedToMailEnableSourceAccount,
			// Token: 0x04005546 RID: 21830
			UserHasNoFederatedIdentity,
			// Token: 0x04005547 RID: 21831
			ErrorInvalidOperationOnAddDBCopyForRecoveryDB,
			// Token: 0x04005548 RID: 21832
			ErrorInheritedObjectTypeNotFound,
			// Token: 0x04005549 RID: 21833
			MigrationPortVerificationFailed,
			// Token: 0x0400554A RID: 21834
			ConfirmationMessageMailboxCalendarConfiguration,
			// Token: 0x0400554B RID: 21835
			ConfirmationMessageSetExchangeUpgradeBucket,
			// Token: 0x0400554C RID: 21836
			ErrorBadItemLimitAlreadyExceeded,
			// Token: 0x0400554D RID: 21837
			FailedDeleteTempDatabaseLogFiles,
			// Token: 0x0400554E RID: 21838
			ActiveDirectoryConnectivityExceptionThrown,
			// Token: 0x0400554F RID: 21839
			AdminAuditLogSearchTimeout,
			// Token: 0x04005550 RID: 21840
			ConfirmationMessageNewManagementScope,
			// Token: 0x04005551 RID: 21841
			CommentsTooLong,
			// Token: 0x04005552 RID: 21842
			CrossPremiseProbesPending,
			// Token: 0x04005553 RID: 21843
			DlpPolicyScriptExecutionError,
			// Token: 0x04005554 RID: 21844
			WarningRemoveRoleAssignmentToBlockSelf,
			// Token: 0x04005555 RID: 21845
			CasHealthOwaPingStart,
			// Token: 0x04005556 RID: 21846
			AddResubmitRequestFailed,
			// Token: 0x04005557 RID: 21847
			ConfirmationMessageSetFailedMSOSyncObject,
			// Token: 0x04005558 RID: 21848
			ErrorInvalidRecipientType,
			// Token: 0x04005559 RID: 21849
			ErrorWorkloadManagementPolicyNotUnique,
			// Token: 0x0400555A RID: 21850
			UsingAuthenticationCredentials,
			// Token: 0x0400555B RID: 21851
			VerboseUpdatingVersion,
			// Token: 0x0400555C RID: 21852
			MailboxUserNotFoundException,
			// Token: 0x0400555D RID: 21853
			ConfirmationMessageRemoveEdgeSubscription,
			// Token: 0x0400555E RID: 21854
			ConfirmationMessageSetRetentionPolicy,
			// Token: 0x0400555F RID: 21855
			ErrorUpdateManagementVDirForRemoteServer,
			// Token: 0x04005560 RID: 21856
			FailedToResetOabPublicFolderDistribution,
			// Token: 0x04005561 RID: 21857
			ErrorMailboxDatabaseToRecoverIsRecoveryMailboxDatabase,
			// Token: 0x04005562 RID: 21858
			ErrorCannotRetrieveRidManagerContainer,
			// Token: 0x04005563 RID: 21859
			RequestIndexEntryIsMissingLocalUserData,
			// Token: 0x04005564 RID: 21860
			ErrorParameterRequired,
			// Token: 0x04005565 RID: 21861
			ConfirmationMessageNewMailboxShared,
			// Token: 0x04005566 RID: 21862
			ConfirmationMessageRemoveMailuserAndLiveId,
			// Token: 0x04005567 RID: 21863
			CannotSetTargetDeliveryDomainOnWildCardDomains,
			// Token: 0x04005568 RID: 21864
			SiteMailboxLinkedToSharePointSite,
			// Token: 0x04005569 RID: 21865
			VerboseSettingDisableAggregation,
			// Token: 0x0400556A RID: 21866
			CannotSetWebServiceRoleEntry,
			// Token: 0x0400556B RID: 21867
			AdminAuditLogSearchOutOfRangeResultSize,
			// Token: 0x0400556C RID: 21868
			ErrorAuthenticationFailed,
			// Token: 0x0400556D RID: 21869
			ImportNodeNameDoesNotMatch,
			// Token: 0x0400556E RID: 21870
			CasHealthOwaHttpGetNonOkayForLogoff,
			// Token: 0x0400556F RID: 21871
			ErrorExchangeAdministrativeGroupNotFoundDueToAdReplicationLatent,
			// Token: 0x04005570 RID: 21872
			MoveMailboxUnexpectedReportingProgress,
			// Token: 0x04005571 RID: 21873
			ConfirmationMessageGetDatabaseAvailabilityGroupConfiguration,
			// Token: 0x04005572 RID: 21874
			ErrorServicePlanIsDeprecated,
			// Token: 0x04005573 RID: 21875
			InfoGroupAlreadyPresent,
			// Token: 0x04005574 RID: 21876
			VerboseCheckPFDatabaseLocalReplicas,
			// Token: 0x04005575 RID: 21877
			RunConfigUpdaterRpcVerbose,
			// Token: 0x04005576 RID: 21878
			ConfirmationMessageAddIPBlockListEntryIPRange,
			// Token: 0x04005577 RID: 21879
			ErrorRetiredOrganizationFound,
			// Token: 0x04005578 RID: 21880
			VerboseUnmountDatabase,
			// Token: 0x04005579 RID: 21881
			MailboxReplicationServiceNotResponding,
			// Token: 0x0400557A RID: 21882
			DatabaseFilterMustBeValid,
			// Token: 0x0400557B RID: 21883
			UsingTargetMailbox,
			// Token: 0x0400557C RID: 21884
			VerboseUninstallWSManModule,
			// Token: 0x0400557D RID: 21885
			ConfirmationMessageSetClientAccessArray,
			// Token: 0x0400557E RID: 21886
			DomainControllerServerNotFound,
			// Token: 0x0400557F RID: 21887
			TenantNotificationDebugFormatMessageFailed,
			// Token: 0x04005580 RID: 21888
			ConfirmationMessageSetMobileSyncVirtualDirectory,
			// Token: 0x04005581 RID: 21889
			MigrationMailboxLimitExceeded,
			// Token: 0x04005582 RID: 21890
			WarningDedicatedMailboxPlanNotFound,
			// Token: 0x04005583 RID: 21891
			ConfirmationMessageNewEdgeSyncEhfConnectorWithSiteSpecified,
			// Token: 0x04005584 RID: 21892
			ErrorUnableToRenameEndUserRoleNameAlreadyExist,
			// Token: 0x04005585 RID: 21893
			ErrorSharePointSiteHasNoValidWebCollectionUrl,
			// Token: 0x04005586 RID: 21894
			FailedToValidateTemplate,
			// Token: 0x04005587 RID: 21895
			VerbosePathOnFixedOrNetworkDriveCondition,
			// Token: 0x04005588 RID: 21896
			ErrorGrantSendOnBehalfToRecipientTypeError,
			// Token: 0x04005589 RID: 21897
			ErrorCannedRoleGroupCannotBeEmpty,
			// Token: 0x0400558A RID: 21898
			MonitoringItemAlreadyHasLocalOverride,
			// Token: 0x0400558B RID: 21899
			MismatchedFederation,
			// Token: 0x0400558C RID: 21900
			ProvideSnapinNameForCmdletEntryForRole,
			// Token: 0x0400558D RID: 21901
			ErrorUserOrSecurityGroupNotFound,
			// Token: 0x0400558E RID: 21902
			ConfirmationMessageMoveMailboxDatabaseMasterSourceServer,
			// Token: 0x0400558F RID: 21903
			ProgressActivityRemovingManagementRoleTree,
			// Token: 0x04005590 RID: 21904
			ServiceDidNotReachStatus,
			// Token: 0x04005591 RID: 21905
			TestMailflowInvalidTargetEmailAddress,
			// Token: 0x04005592 RID: 21906
			ErrorOrganizationNotUnique,
			// Token: 0x04005593 RID: 21907
			ConfirmationMessageRemovePhoto,
			// Token: 0x04005594 RID: 21908
			ErrorCannotGenerateExternalDirectoryObjectIdOnInternalRecipientType,
			// Token: 0x04005595 RID: 21909
			TotalFolderSize,
			// Token: 0x04005596 RID: 21910
			InterceptorErrorInvalidConditionMatchTypePair,
			// Token: 0x04005597 RID: 21911
			ErrorExistingAuthServerWithDefaultAuthorizationEndpoint,
			// Token: 0x04005598 RID: 21912
			ConfirmationResettingPartitionTrust,
			// Token: 0x04005599 RID: 21913
			ErrorFailedToGenerateRandomPassword,
			// Token: 0x0400559A RID: 21914
			DagNodeNotFound,
			// Token: 0x0400559B RID: 21915
			ConfirmationMessageUpdateGlobalAddressList,
			// Token: 0x0400559C RID: 21916
			OrganizationHasNoFederatedDomains,
			// Token: 0x0400559D RID: 21917
			ErrorRequestCompletedDuringCancellation,
			// Token: 0x0400559E RID: 21918
			ErrorInvalidMailboxAssociationIdentity,
			// Token: 0x0400559F RID: 21919
			CasHealthPowerShellConnectionAuthenticationType,
			// Token: 0x040055A0 RID: 21920
			ErrorRetentionPolicyNotUnique,
			// Token: 0x040055A1 RID: 21921
			CasHealthEcpServiceRequestResult,
			// Token: 0x040055A2 RID: 21922
			ErrorLargeItemLimitAlreadyExceeded,
			// Token: 0x040055A3 RID: 21923
			ErrorELCFolderNotUnique,
			// Token: 0x040055A4 RID: 21924
			CasHealthWebAppNoSession,
			// Token: 0x040055A5 RID: 21925
			ConfirmationMessageAutoTagTrain,
			// Token: 0x040055A6 RID: 21926
			ConfirmationMessageRemoveInboxRule,
			// Token: 0x040055A7 RID: 21927
			CasHealthOwaTestUrlSpecified,
			// Token: 0x040055A8 RID: 21928
			ParsingTokenIssuerCertificate,
			// Token: 0x040055A9 RID: 21929
			ErrorMailboxServerNotFound,
			// Token: 0x040055AA RID: 21930
			ErrorDirectoryManagementWebServiceNotFound,
			// Token: 0x040055AB RID: 21931
			SafeSendersNotUpdated,
			// Token: 0x040055AC RID: 21932
			ConfirmationMessageSetMailboxAuditLogAgeLimitZero,
			// Token: 0x040055AD RID: 21933
			ConfirmationMessageEnableMailboxWithRemoteArchive,
			// Token: 0x040055AE RID: 21934
			ErrorRoleNotUnique,
			// Token: 0x040055AF RID: 21935
			ConfirmationMessageRemoveMobileDeviceWhileRemoteWipeIsPending,
			// Token: 0x040055B0 RID: 21936
			ConfirmationMessageCompleteMigrationBatchWithPendingItems,
			// Token: 0x040055B1 RID: 21937
			ConfirmationMessageEnableMailContact,
			// Token: 0x040055B2 RID: 21938
			ErrorSingleDatabaseCopy,
			// Token: 0x040055B3 RID: 21939
			ErrorGlobalAddressListNotFound,
			// Token: 0x040055B4 RID: 21940
			VerboseTestSourceServer,
			// Token: 0x040055B5 RID: 21941
			ErrorArchiveGuidsDontMatch,
			// Token: 0x040055B6 RID: 21942
			ErrorMailboxHasNoArchive,
			// Token: 0x040055B7 RID: 21943
			UsersContainerNotFound,
			// Token: 0x040055B8 RID: 21944
			ErrorTeamMailboxRemoveByNonOwner,
			// Token: 0x040055B9 RID: 21945
			ErrorArchiveRecoveryArchiveInUse,
			// Token: 0x040055BA RID: 21946
			DataClassificationAmbiguousIdentifier,
			// Token: 0x040055BB RID: 21947
			ConfirmationMessageSetMalwareFilterRule,
			// Token: 0x040055BC RID: 21948
			ErrorSettingTeamMailboxUserPermissions,
			// Token: 0x040055BD RID: 21949
			ConfirmationMessageSetAdminAuditLogConfig,
			// Token: 0x040055BE RID: 21950
			PhoneNumberNotANumber,
			// Token: 0x040055BF RID: 21951
			RmsSharedIdentityInconsistentState,
			// Token: 0x040055C0 RID: 21952
			ConfirmationMessageSetHostedConnectorFilterPolicy,
			// Token: 0x040055C1 RID: 21953
			WarningNoDatabasesWereMovedBackToServer,
			// Token: 0x040055C2 RID: 21954
			DagTaskCheckingClusterMembershipOfServer,
			// Token: 0x040055C3 RID: 21955
			ErrorInvalidApplicationUri,
			// Token: 0x040055C4 RID: 21956
			ErrorWindowsLiveIdNotExist,
			// Token: 0x040055C5 RID: 21957
			SendConnectorRgcNotFound,
			// Token: 0x040055C6 RID: 21958
			ErrorWhileFolderSyncForDeletion,
			// Token: 0x040055C7 RID: 21959
			OutboundConnectorIdNotFound,
			// Token: 0x040055C8 RID: 21960
			CasHealthWebAppConfirmTestWithServer,
			// Token: 0x040055C9 RID: 21961
			RestoreMailboxNotE14OrLater,
			// Token: 0x040055CA RID: 21962
			ErrorGroupAlreadyMailEnabled,
			// Token: 0x040055CB RID: 21963
			ErrorCertificateHasNoPrivateKey,
			// Token: 0x040055CC RID: 21964
			InfoAddingAce,
			// Token: 0x040055CD RID: 21965
			ConfirmationMessageNewMigrationBatch,
			// Token: 0x040055CE RID: 21966
			CrossValidationIncorrectFolds,
			// Token: 0x040055CF RID: 21967
			AddedDeviceFilterRule,
			// Token: 0x040055D0 RID: 21968
			CurrentQueryTime,
			// Token: 0x040055D1 RID: 21969
			NodeNotElement,
			// Token: 0x040055D2 RID: 21970
			ErrorMailboxIsNotAudit,
			// Token: 0x040055D3 RID: 21971
			DCWithGivenNameCouldNotBeFound,
			// Token: 0x040055D4 RID: 21972
			invalidFipsCryptoModeInImportedTrustedPublishingDomain,
			// Token: 0x040055D5 RID: 21973
			DagTaskServerFswServerNotAccessibleWithWmi,
			// Token: 0x040055D6 RID: 21974
			WarningDuplicateProxyAddressIsFiltered,
			// Token: 0x040055D7 RID: 21975
			ExWindowsPermissionsGroupNotFoundException,
			// Token: 0x040055D8 RID: 21976
			ErrorInvalidParameterForPublicFolderTasks,
			// Token: 0x040055D9 RID: 21977
			DatabaseNamesMustBeUnique,
			// Token: 0x040055DA RID: 21978
			CouldNotUpgradeDisabledContentSettings,
			// Token: 0x040055DB RID: 21979
			ExchangeServerNotFoundException,
			// Token: 0x040055DC RID: 21980
			WarningRmsOnlineAuthenticationCertificateExpiryApproaching,
			// Token: 0x040055DD RID: 21981
			ConfirmationMessageSetServerMonitor,
			// Token: 0x040055DE RID: 21982
			VerboseSaveADSecurityDescriptor,
			// Token: 0x040055DF RID: 21983
			ErrorLeadingTrailingWhitespaces,
			// Token: 0x040055E0 RID: 21984
			RemoveDlpPolicyCorruptRule,
			// Token: 0x040055E1 RID: 21985
			ExportMailboxShouldExport,
			// Token: 0x040055E2 RID: 21986
			FoundProcessesForService,
			// Token: 0x040055E3 RID: 21987
			ErrorGroupNotFoundOnGlobalCatalog,
			// Token: 0x040055E4 RID: 21988
			CannotCreateRuleDueToVersion,
			// Token: 0x040055E5 RID: 21989
			ConfirmationMessageSetDlpPolicy,
			// Token: 0x040055E6 RID: 21990
			ConfirmationMessageEnableOrganizationRelationship,
			// Token: 0x040055E7 RID: 21991
			CannotFindLocalAdminGroupException,
			// Token: 0x040055E8 RID: 21992
			InvalidSmtpBanner,
			// Token: 0x040055E9 RID: 21993
			RemoveMailboxSearchConfirmation,
			// Token: 0x040055EA RID: 21994
			ConfirmationMessageSetGlobalAddressList,
			// Token: 0x040055EB RID: 21995
			ConfirmationMessageSetSyncServiceInstance,
			// Token: 0x040055EC RID: 21996
			ErrorCannotMoveTeamMailboxesDownlevel,
			// Token: 0x040055ED RID: 21997
			ErrorMemberNameUnavailableUsedForDL,
			// Token: 0x040055EE RID: 21998
			UmLanguagePackFullPath,
			// Token: 0x040055EF RID: 21999
			UpdateRecipientNotSupportedInRemoteForestWarning,
			// Token: 0x040055F0 RID: 22000
			ErrorInboxRuleUserInvalid,
			// Token: 0x040055F1 RID: 22001
			NullOrgIdException,
			// Token: 0x040055F2 RID: 22002
			ErrorResponseContainsError,
			// Token: 0x040055F3 RID: 22003
			FailedToSystemProbeCmdlet,
			// Token: 0x040055F4 RID: 22004
			ErrorCannotModifyPrecannedRole,
			// Token: 0x040055F5 RID: 22005
			ErrorPropertiesInvalid,
			// Token: 0x040055F6 RID: 22006
			ComplianceBindingAmbiguous,
			// Token: 0x040055F7 RID: 22007
			ClassificationRuleCollectionAnyBlocksExceedLimit,
			// Token: 0x040055F8 RID: 22008
			EventManifestActionFailed,
			// Token: 0x040055F9 RID: 22009
			ErrorPublicFolderUserNotUnique,
			// Token: 0x040055FA RID: 22010
			ConfirmationMessageRemoveRequestDebug,
			// Token: 0x040055FB RID: 22011
			ConfirmationMessageNewMailUser,
			// Token: 0x040055FC RID: 22012
			RawRequestJobDump,
			// Token: 0x040055FD RID: 22013
			CouldNotConnectToCluster,
			// Token: 0x040055FE RID: 22014
			ErrorServerOutOfScope,
			// Token: 0x040055FF RID: 22015
			ConfirmationMessageMailboxAutoReplyConfiguration,
			// Token: 0x04005600 RID: 22016
			UpdatingDatabaseCopyObject,
			// Token: 0x04005601 RID: 22017
			ErrorRemoveAddressBookPolicyWithAssociatedUsers,
			// Token: 0x04005602 RID: 22018
			CustomizedDsnNotConfigured,
			// Token: 0x04005603 RID: 22019
			StringResourceNotFound,
			// Token: 0x04005604 RID: 22020
			ConfirmationMessageRemoveAvailabilityAddressSpace,
			// Token: 0x04005605 RID: 22021
			ErrorReceiveConnectorNotUnique,
			// Token: 0x04005606 RID: 22022
			VerboseReadStoreMailboxSecurityDescriptor,
			// Token: 0x04005607 RID: 22023
			TowsSslError,
			// Token: 0x04005608 RID: 22024
			ConfirmationMessageRemoveInterceptorRule,
			// Token: 0x04005609 RID: 22025
			TestSearchCatalogState,
			// Token: 0x0400560A RID: 22026
			CorruptRule,
			// Token: 0x0400560B RID: 22027
			VerboseDefaultOABServerIsNotE12,
			// Token: 0x0400560C RID: 22028
			ConfirmationMessageRemoveOfflineAddressBook,
			// Token: 0x0400560D RID: 22029
			ConfirmationMessageNewManagedFolderMailboxPolicy,
			// Token: 0x0400560E RID: 22030
			ParameterNotApplicableToInstalledServerRoles,
			// Token: 0x0400560F RID: 22031
			ConfirmationMessageAddIPBlockListProvider,
			// Token: 0x04005610 RID: 22032
			VerboseLoadingAssignmentsByScope,
			// Token: 0x04005611 RID: 22033
			ParsingTokenIssuerUri,
			// Token: 0x04005612 RID: 22034
			RpcHttpE2kServers,
			// Token: 0x04005613 RID: 22035
			ErrorUserNotUniqueOnGlobalCatalog,
			// Token: 0x04005614 RID: 22036
			VerboseInstallKerberosAuthenticationModule,
			// Token: 0x04005615 RID: 22037
			ConfirmationMessageNewDeliveryAgentConnector,
			// Token: 0x04005616 RID: 22038
			VerboseConnectingIISVDir,
			// Token: 0x04005617 RID: 22039
			CasHealthPowerShellCmdletExecutionSummary,
			// Token: 0x04005618 RID: 22040
			ErrorPolicyOutOfRoleScope,
			// Token: 0x04005619 RID: 22041
			CasHealthOwaHttpGetOkay,
			// Token: 0x0400561A RID: 22042
			ErrorGroupRecipientNeeded,
			// Token: 0x0400561B RID: 22043
			ConfirmationMessageImportRMSTPD,
			// Token: 0x0400561C RID: 22044
			GetMsoDiagnosticsExclusiveParameters,
			// Token: 0x0400561D RID: 22045
			ErrorDeleteActiveSourceNTAccount,
			// Token: 0x0400561E RID: 22046
			ErrorCannotDeletePrecannedRoleGroup,
			// Token: 0x0400561F RID: 22047
			InsufficientEmailsForTraining,
			// Token: 0x04005620 RID: 22048
			ErrorTargetDatabaseIsNotE2K7OrLater,
			// Token: 0x04005621 RID: 22049
			ConfirmationMessageRemoveMservEntry,
			// Token: 0x04005622 RID: 22050
			ElcNoLocalMbxOrArchive,
			// Token: 0x04005623 RID: 22051
			ErrorFailedToRemoveSystemMailbox,
			// Token: 0x04005624 RID: 22052
			ExInvalidArgumentForServerRoleException,
			// Token: 0x04005625 RID: 22053
			ErrorParameterNotSupportedForMigration,
			// Token: 0x04005626 RID: 22054
			ErrorCouldNotReadDatabaseCopy,
			// Token: 0x04005627 RID: 22055
			ErrorCannotMoveArchiveMailboxesDownlevel,
			// Token: 0x04005628 RID: 22056
			VerboseResetOab,
			// Token: 0x04005629 RID: 22057
			DlpPolicyModeIsOverridenByModeParameter,
			// Token: 0x0400562A RID: 22058
			ErrorMailboxAuditLogSearchFailed,
			// Token: 0x0400562B RID: 22059
			CasHealthOwaHttpGetNonOkayForLogon,
			// Token: 0x0400562C RID: 22060
			ConfirmationMessageSetAdSiteLink,
			// Token: 0x0400562D RID: 22061
			IncorrectlyFormattedColumn,
			// Token: 0x0400562E RID: 22062
			WarningFailedToCreateSourceContact,
			// Token: 0x0400562F RID: 22063
			VerboseGrantingEoaFullAccessOnMailbox,
			// Token: 0x04005630 RID: 22064
			ErrorExistingAuthServerWithEmptyRealm,
			// Token: 0x04005631 RID: 22065
			AlsEmailBodyMailboxOperations,
			// Token: 0x04005632 RID: 22066
			InvalidParameterForFilter,
			// Token: 0x04005633 RID: 22067
			ErrorAtLeastOneSideMustBeCurrentProductVersion,
			// Token: 0x04005634 RID: 22068
			ErrorClassificationAlreadyDefined,
			// Token: 0x04005635 RID: 22069
			ConfigurationNotSynchronized,
			// Token: 0x04005636 RID: 22070
			ErrorNoOfflineSuspendWhenReadyToComplete,
			// Token: 0x04005637 RID: 22071
			ConfirmationMessageRemoveAccountPartition,
			// Token: 0x04005638 RID: 22072
			TransportRpcUnavailable,
			// Token: 0x04005639 RID: 22073
			ErrorRuleStateInconsistentWithComplianceProgram,
			// Token: 0x0400563A RID: 22074
			ExchangeCmdletsNotAllowedInRole,
			// Token: 0x0400563B RID: 22075
			RcrExceedDbLimitException,
			// Token: 0x0400563C RID: 22076
			ErrorExceededMaximumCollectionCount,
			// Token: 0x0400563D RID: 22077
			UnexpectedNonAuthoritativeDomain,
			// Token: 0x0400563E RID: 22078
			ErrorScopeNotUnique,
			// Token: 0x0400563F RID: 22079
			ErrorPublicFolderStatisticsNotFoundInDatacenter,
			// Token: 0x04005640 RID: 22080
			ErrorOabVirtualDirectoryAlreadyExists,
			// Token: 0x04005641 RID: 22081
			ErrorDatabaseWrongVersion,
			// Token: 0x04005642 RID: 22082
			ConfirmationMessageNewUser,
			// Token: 0x04005643 RID: 22083
			NoMonitoringErrorsInTestReplicationHealth,
			// Token: 0x04005644 RID: 22084
			SelfMemberAlreadyExistsException,
			// Token: 0x04005645 RID: 22085
			ConfirmationMessageSetFederatedOrganizationIdentifier2,
			// Token: 0x04005646 RID: 22086
			InterceptorErrorCustomTextNonAscii,
			// Token: 0x04005647 RID: 22087
			ErrorFailedToRemoveWinRMSchemaFile,
			// Token: 0x04005648 RID: 22088
			ConfirmationMessageMoveOfflineAddressBookE14ToLowerVersion,
			// Token: 0x04005649 RID: 22089
			ConfirmationMessageRemoveIPAllowListEntry,
			// Token: 0x0400564A RID: 22090
			ConfirmationMessageMailboxMessageConfiguration,
			// Token: 0x0400564B RID: 22091
			MoveMailboxDuplicates,
			// Token: 0x0400564C RID: 22092
			VerboseUpdateStoreMailboxState,
			// Token: 0x0400564D RID: 22093
			SomeWebServicesTransactionsFailed,
			// Token: 0x0400564E RID: 22094
			ErrorRpcHttpNotEnabled,
			// Token: 0x0400564F RID: 22095
			ConfirmationMessageAdminAuditLogAgeLimitZero,
			// Token: 0x04005650 RID: 22096
			CasHealthPowerShellSkipCertVDir,
			// Token: 0x04005651 RID: 22097
			VerboseEdbFileLocationUniqueUnderServerCondition,
			// Token: 0x04005652 RID: 22098
			AccessMismatchLocalRemote,
			// Token: 0x04005653 RID: 22099
			WarningFailedToCreateAssignmentForNewRole,
			// Token: 0x04005654 RID: 22100
			ErrorContentFilterInvalid,
			// Token: 0x04005655 RID: 22101
			ConfirmationMessageRemoveMailboxStoreMailboxIdentity,
			// Token: 0x04005656 RID: 22102
			ConfirmationMessageSetGroup,
			// Token: 0x04005657 RID: 22103
			MessageClassIsNotValid,
			// Token: 0x04005658 RID: 22104
			ErrorTrustedPublishingDomainNotUnique,
			// Token: 0x04005659 RID: 22105
			ExchangeTenantNotFound,
			// Token: 0x0400565A RID: 22106
			ExchangeSettingsScopeNotFound,
			// Token: 0x0400565B RID: 22107
			ErrorTargetRecipientIsNotAnMEU,
			// Token: 0x0400565C RID: 22108
			VerboseWillSkipOrganizationUpgrade,
			// Token: 0x0400565D RID: 22109
			NodeNotUnique,
			// Token: 0x0400565E RID: 22110
			InfoAddedGroupToGroup,
			// Token: 0x0400565F RID: 22111
			ErrorTeamMailboxEnqueueMembershipSyncEvent,
			// Token: 0x04005660 RID: 22112
			DagNetworkSubnetIdConflictError,
			// Token: 0x04005661 RID: 22113
			ReplicationCheckResultToStringCaseNotHandled,
			// Token: 0x04005662 RID: 22114
			ConfirmationMessageNewPublicFolderDatabaseRepairRequest,
			// Token: 0x04005663 RID: 22115
			ServerLocatorServiceRequestFailed,
			// Token: 0x04005664 RID: 22116
			ErrorFailedToGenerateFileNameFromAlias,
			// Token: 0x04005665 RID: 22117
			ErrorMaxCmdletsNotSupported,
			// Token: 0x04005666 RID: 22118
			ConfirmationMessageRemoveThrottlingPolicy,
			// Token: 0x04005667 RID: 22119
			UpdateMovedMailboxFailureAfterADSwitchover,
			// Token: 0x04005668 RID: 22120
			ConfirmationMessageRemoveDatabaseAvailabilityGroupServer,
			// Token: 0x04005669 RID: 22121
			NotValidEmailAddress,
			// Token: 0x0400566A RID: 22122
			ErrorUnableToGetUserSid,
			// Token: 0x0400566B RID: 22123
			RmsSharedIdentityBeingUnlinkedFromComputer,
			// Token: 0x0400566C RID: 22124
			UMCallAnsweringRuleTimeOfDaySimple,
			// Token: 0x0400566D RID: 22125
			OrganizationHasNoFederation,
			// Token: 0x0400566E RID: 22126
			RemoveNonEmptyOabVirtualDirectory,
			// Token: 0x0400566F RID: 22127
			ReadNetworkAdapterInfo,
			// Token: 0x04005670 RID: 22128
			RemoveMailForestContactNotAllowed,
			// Token: 0x04005671 RID: 22129
			ConfirmationMessageSetHostedContentFilterConfig,
			// Token: 0x04005672 RID: 22130
			TooFewMailboxServersToStart,
			// Token: 0x04005673 RID: 22131
			ConfirmationMessageSetThrottlingPolicyAssociation,
			// Token: 0x04005674 RID: 22132
			ErrorSynchronizationTypeTokenNotRecognized,
			// Token: 0x04005675 RID: 22133
			ErrorInvalidServicePlanTransition,
			// Token: 0x04005676 RID: 22134
			VerboseDeleteDirectory,
			// Token: 0x04005677 RID: 22135
			ErrorMoveActiveCopyIsSeedingSourceException,
			// Token: 0x04005678 RID: 22136
			ErrorEsnIncompatibleRule,
			// Token: 0x04005679 RID: 22137
			ConfirmationMessageNewRoutingGroupConnectorTwoWays,
			// Token: 0x0400567A RID: 22138
			ErrorRedirectionEntryForDomainNotFound,
			// Token: 0x0400567B RID: 22139
			AssemblyPathIsNotRegistered,
			// Token: 0x0400567C RID: 22140
			ErrorCredentialRequiredForIdentity,
			// Token: 0x0400567D RID: 22141
			TestSearchGetNonIpmSubTreeFolderError,
			// Token: 0x0400567E RID: 22142
			CmdletExecutionError,
			// Token: 0x0400567F RID: 22143
			ProtocolSettingsDetails,
			// Token: 0x04005680 RID: 22144
			CouldNotUpgradeJournaling,
			// Token: 0x04005681 RID: 22145
			ConfirmationMessageDisableOrganizationRelationship,
			// Token: 0x04005682 RID: 22146
			ManageIsapiExtensionFoundMoreThanOneExtensionException,
			// Token: 0x04005683 RID: 22147
			ErrorAuxHasParent,
			// Token: 0x04005684 RID: 22148
			ConfirmationMessageEnableDistributionGroup,
			// Token: 0x04005685 RID: 22149
			ConfirmationMessageUpdateRecipient,
			// Token: 0x04005686 RID: 22150
			ErrorMetabasePathNotFound,
			// Token: 0x04005687 RID: 22151
			ErrorFolderLocationUnknown,
			// Token: 0x04005688 RID: 22152
			WarningRemoveInvalidRoleAssignment,
			// Token: 0x04005689 RID: 22153
			ConfirmationMessageSetResourcePolicy,
			// Token: 0x0400568A RID: 22154
			BatchValidationWarningsAutoStart,
			// Token: 0x0400568B RID: 22155
			ErrorAppHostOrWindowsAuthenticationNotFound,
			// Token: 0x0400568C RID: 22156
			GetIISVersionException,
			// Token: 0x0400568D RID: 22157
			DatabaseListMustBeValid,
			// Token: 0x0400568E RID: 22158
			InvalidIdentity,
			// Token: 0x0400568F RID: 22159
			ErrorLinkOpOnDehydratedTenant,
			// Token: 0x04005690 RID: 22160
			ErrorConvertGroupContainsNonRoomMailbox,
			// Token: 0x04005691 RID: 22161
			ErrorInvalidArbitrationMbxType,
			// Token: 0x04005692 RID: 22162
			DagTaskServersInAdNotInCluster,
			// Token: 0x04005693 RID: 22163
			WarningMessageRemoveWebServicesVirtualDirectory,
			// Token: 0x04005694 RID: 22164
			CrossPremiseSessionFailure,
			// Token: 0x04005695 RID: 22165
			UninstallOldMSIFor,
			// Token: 0x04005696 RID: 22166
			ErrorCallingNetSh,
			// Token: 0x04005697 RID: 22167
			SuccessRemoveGlobalMonitoringOverride,
			// Token: 0x04005698 RID: 22168
			TSMDBperformanceCounterNotLoaded,
			// Token: 0x04005699 RID: 22169
			VerboseCheckIfTopLevelRoleThatSelfDelegatorRemovalCheckCanBeWaivedFor,
			// Token: 0x0400569A RID: 22170
			ErrorInvalidOperationOnEapObject,
			// Token: 0x0400569B RID: 22171
			InvalidUMFaxServerURIValue,
			// Token: 0x0400569C RID: 22172
			ErrorMultipleDatabaseCopies,
			// Token: 0x0400569D RID: 22173
			ConfirmationMessageAddADPermissionAccessRights,
			// Token: 0x0400569E RID: 22174
			InvalidDataSourceException,
			// Token: 0x0400569F RID: 22175
			VerboseGetSyncDeletedRecipientNeedsRetry,
			// Token: 0x040056A0 RID: 22176
			TestRHCheckTPRListener,
			// Token: 0x040056A1 RID: 22177
			ConfirmationMessageRemoveRetentionPolicy,
			// Token: 0x040056A2 RID: 22178
			AutodiscoverServiceCallSucceeded,
			// Token: 0x040056A3 RID: 22179
			ErrorUnexpectedRemoveStoreMailboxState,
			// Token: 0x040056A4 RID: 22180
			GroupsIsNotAllowedForHold,
			// Token: 0x040056A5 RID: 22181
			DagConfigVersionConflictException,
			// Token: 0x040056A6 RID: 22182
			ConfirmationMessageNewTenantRelocationRequest,
			// Token: 0x040056A7 RID: 22183
			CannotRemoveServiceInstanceError,
			// Token: 0x040056A8 RID: 22184
			FailureAndReason,
			// Token: 0x040056A9 RID: 22185
			DatabaseReplayQueueNotKeepingUp,
			// Token: 0x040056AA RID: 22186
			ValidPatch,
			// Token: 0x040056AB RID: 22187
			BackupFileCreated,
			// Token: 0x040056AC RID: 22188
			InfoCertificationUri,
			// Token: 0x040056AD RID: 22189
			XmlDeserializationException,
			// Token: 0x040056AE RID: 22190
			ExportMultipleMailboxToOnePST,
			// Token: 0x040056AF RID: 22191
			CannotFindGlobalCatalogsInForest,
			// Token: 0x040056B0 RID: 22192
			TestSearchCreateSearchFolder,
			// Token: 0x040056B1 RID: 22193
			CouldNotSaveContentSetting,
			// Token: 0x040056B2 RID: 22194
			ErrorSubmitCommandFailed,
			// Token: 0x040056B3 RID: 22195
			GetFederationInformationResults,
			// Token: 0x040056B4 RID: 22196
			RemovingMoveJobFromAd,
			// Token: 0x040056B5 RID: 22197
			EntryNoAllowedInRoleType,
			// Token: 0x040056B6 RID: 22198
			ErrorElcFolderNotFound,
			// Token: 0x040056B7 RID: 22199
			ConfirmationMessageRemoveUMMailboxPolicy,
			// Token: 0x040056B8 RID: 22200
			ConfirmationMessageSetDynamicDistributionGroup,
			// Token: 0x040056B9 RID: 22201
			InvalidPropertyOverrideValue,
			// Token: 0x040056BA RID: 22202
			ErrorClassificationNameCannotBeBlank,
			// Token: 0x040056BB RID: 22203
			CannotStopNonRunningJob,
			// Token: 0x040056BC RID: 22204
			WebServicesTestOutcomeToString,
			// Token: 0x040056BD RID: 22205
			WarningActivationDateBeforeCurrentDate,
			// Token: 0x040056BE RID: 22206
			ConfirmationMessageSetManagementRoleAssignment,
			// Token: 0x040056BF RID: 22207
			WaitForServiceStatusChange,
			// Token: 0x040056C0 RID: 22208
			VerboseCreatedRoleAssignment,
			// Token: 0x040056C1 RID: 22209
			CannotParseRuleDueToVersion,
			// Token: 0x040056C2 RID: 22210
			ExchVirtualDirectoryCannotFindWebSite,
			// Token: 0x040056C3 RID: 22211
			ErrorInvalidParentExtendedFolderFlags,
			// Token: 0x040056C4 RID: 22212
			NewPolicyTipConfigInvalidLocale,
			// Token: 0x040056C5 RID: 22213
			ConfirmationMessageDisableAddressListPaging,
			// Token: 0x040056C6 RID: 22214
			ErrorUserNotInRoleGroups,
			// Token: 0x040056C7 RID: 22215
			UsingProxy,
			// Token: 0x040056C8 RID: 22216
			ErrorAppCmdNotExist,
			// Token: 0x040056C9 RID: 22217
			DagServerCantBeRemovedInDatacenterActivationMode,
			// Token: 0x040056CA RID: 22218
			VerboseCopyDirectory,
			// Token: 0x040056CB RID: 22219
			ServerFilterMustBeValid,
			// Token: 0x040056CC RID: 22220
			ConfirmationMessageNewMailboxLinked,
			// Token: 0x040056CD RID: 22221
			VerboseCopyDatabaseCatalogFiles,
			// Token: 0x040056CE RID: 22222
			RmsVersionMismatchException,
			// Token: 0x040056CF RID: 22223
			RemoveADServerMetadataRemovingServerDN,
			// Token: 0x040056D0 RID: 22224
			InvalidTypeOfExpression,
			// Token: 0x040056D1 RID: 22225
			ErrorMultipleMatchedUser,
			// Token: 0x040056D2 RID: 22226
			AgentAlreadyExists,
			// Token: 0x040056D3 RID: 22227
			AmMoveRpcRequestedAnyServer,
			// Token: 0x040056D4 RID: 22228
			ErrorPrimaryOnlyCrossForestMovesWithoutArchive,
			// Token: 0x040056D5 RID: 22229
			VerboseConnectionAdminRpcInterface,
			// Token: 0x040056D6 RID: 22230
			ErrorOabNotFoundForUser,
			// Token: 0x040056D7 RID: 22231
			ErrorSyncMailboxWithMasterAccountSid,
			// Token: 0x040056D8 RID: 22232
			ExchangeSettingsGroupAlreadyExists,
			// Token: 0x040056D9 RID: 22233
			messageLiveIdConnectivityWCFExceptionThrown,
			// Token: 0x040056DA RID: 22234
			ConfirmationMessageSetNotification,
			// Token: 0x040056DB RID: 22235
			ErrorStringContainsLeadingSpace,
			// Token: 0x040056DC RID: 22236
			SyncstateupgradeFailedWarning,
			// Token: 0x040056DD RID: 22237
			CouldNotFindElementWithAttribute,
			// Token: 0x040056DE RID: 22238
			InvalidDisclaimerMacroName,
			// Token: 0x040056DF RID: 22239
			ErrorRemoveOfflineAddressBookWithAssociatedAddressBookPolicies,
			// Token: 0x040056E0 RID: 22240
			ReplicationCheckWarningException,
			// Token: 0x040056E1 RID: 22241
			RemovingAceFromDkmContainerAcl,
			// Token: 0x040056E2 RID: 22242
			VerboseSkipObject,
			// Token: 0x040056E3 RID: 22243
			SubscriptionConnectionError,
			// Token: 0x040056E4 RID: 22244
			ErrorEdbFilePathOccupiedByFile,
			// Token: 0x040056E5 RID: 22245
			VerboseParsingOPathFilterSucceed,
			// Token: 0x040056E6 RID: 22246
			ErrorProvisioningFederatedExchange,
			// Token: 0x040056E7 RID: 22247
			DataClassificationNonUniqueQuery,
			// Token: 0x040056E8 RID: 22248
			ComAdminUnableToInstallComponentsException,
			// Token: 0x040056E9 RID: 22249
			VerboseGetStoreConfigDCName,
			// Token: 0x040056EA RID: 22250
			ErrorUserNotFoundOnGlobalCatalog,
			// Token: 0x040056EB RID: 22251
			DagFswUnableToCreateWitnessDirectoryException,
			// Token: 0x040056EC RID: 22252
			RestoreOrExportTargetFolderIsSpecial,
			// Token: 0x040056ED RID: 22253
			TraceCannotCreateXmlReportFolder,
			// Token: 0x040056EE RID: 22254
			ExAllHostedOrganizationsGroupNotFoundException,
			// Token: 0x040056EF RID: 22255
			DataClassificationNonUniqueNameViolation,
			// Token: 0x040056F0 RID: 22256
			ErrorTooManyRemoteDomains,
			// Token: 0x040056F1 RID: 22257
			ErrorUserNotFound,
			// Token: 0x040056F2 RID: 22258
			CasHealthWarnUserCredentials,
			// Token: 0x040056F3 RID: 22259
			ConfirmationMessageSetMailboxWithNewWindowsLiveID,
			// Token: 0x040056F4 RID: 22260
			ConfirmationMessageNewMalwareFilterConfig,
			// Token: 0x040056F5 RID: 22261
			ElcServiceCallFailed,
			// Token: 0x040056F6 RID: 22262
			ProgressFixIPAddr,
			// Token: 0x040056F7 RID: 22263
			CannotFindCmdletInSnapin,
			// Token: 0x040056F8 RID: 22264
			IsNotMemberOfVOAdmin,
			// Token: 0x040056F9 RID: 22265
			ConfirmationResettingLocalForestAccountPartition,
			// Token: 0x040056FA RID: 22266
			ConfirmationMessageRemoveAuthServer,
			// Token: 0x040056FB RID: 22267
			ErrorDagNotFound,
			// Token: 0x040056FC RID: 22268
			ConfirmationMessageGetDatabaseAvailabilityGroup,
			// Token: 0x040056FD RID: 22269
			ConfirmationMessageSetSharingPolicy,
			// Token: 0x040056FE RID: 22270
			RemoveLiveFedDomainReserveResponse,
			// Token: 0x040056FF RID: 22271
			ErrorUpdateRecipient,
			// Token: 0x04005700 RID: 22272
			CannotRemoveFederatedAcceptedDomain,
			// Token: 0x04005701 RID: 22273
			AlsEmailBodyMailboxShowDetails,
			// Token: 0x04005702 RID: 22274
			ErrorTeamMailboxMaxShowInMyClientReached,
			// Token: 0x04005703 RID: 22275
			HubServerVersionNotFound,
			// Token: 0x04005704 RID: 22276
			MobileDeviceLogNoPermissionsException,
			// Token: 0x04005705 RID: 22277
			ErrorRoleEntryNotFound,
			// Token: 0x04005706 RID: 22278
			OwaGzipEnabledOnLegacyVirtualDirectoryWhenMailboxRoleInstalledWarning,
			// Token: 0x04005707 RID: 22279
			StandaloneMailboxNoReplication,
			// Token: 0x04005708 RID: 22280
			WarningChangingUserPrincipalName,
			// Token: 0x04005709 RID: 22281
			OperationExceedsPerServiceInstanceFullSyncObjectRequestLimit,
			// Token: 0x0400570A RID: 22282
			ConfirmationMessageEnableServiceEmailChannel,
			// Token: 0x0400570B RID: 22283
			ConfirmationMessageRemoveActiveSyncDeviceAccessRule,
			// Token: 0x0400570C RID: 22284
			ConfirmationMessageSetJournalrule,
			// Token: 0x0400570D RID: 22285
			ErrorDeprovisionedTargetNotPassed,
			// Token: 0x0400570E RID: 22286
			CannotRemoveTenantWideDivergence,
			// Token: 0x0400570F RID: 22287
			MigrationJobAlreadyExists,
			// Token: 0x04005710 RID: 22288
			UpdatesDirectoryNotFound,
			// Token: 0x04005711 RID: 22289
			ErrorDlpTemplateRequiresParameter,
			// Token: 0x04005712 RID: 22290
			ErrorOWAEnabledStatusNotConsistent,
			// Token: 0x04005713 RID: 22291
			ConfirmationMessageNewMailboxDiscovery,
			// Token: 0x04005714 RID: 22292
			ErrorSamePublicFolderMRSJobInstancesNotAllowed,
			// Token: 0x04005715 RID: 22293
			ResettingIsDefaultIsNotSupported,
			// Token: 0x04005716 RID: 22294
			ErrorProxyAddressAlreadyExists,
			// Token: 0x04005717 RID: 22295
			ErrorMailboxRelocationSplitSourceNotInContainer,
			// Token: 0x04005718 RID: 22296
			ConfirmationMessageDisableJournalrule,
			// Token: 0x04005719 RID: 22297
			CasHealthTestUserOnWrongSite,
			// Token: 0x0400571A RID: 22298
			FailedToMatchTemplateDistributionPointToLicensingUri,
			// Token: 0x0400571B RID: 22299
			ConditionIncompatibleWithTheSubtype,
			// Token: 0x0400571C RID: 22300
			EtrHasE4eAction,
			// Token: 0x0400571D RID: 22301
			ProgressCreateAltFsw,
			// Token: 0x0400571E RID: 22302
			ErrorAddressBookPolicyNotFound,
			// Token: 0x0400571F RID: 22303
			ErrorDeviceIdInBothLists,
			// Token: 0x04005720 RID: 22304
			SuccessEnableMailboxQuarantine,
			// Token: 0x04005721 RID: 22305
			ErrorKerbauthModuleFileNotFound,
			// Token: 0x04005722 RID: 22306
			CasHealthOwaConfirmTestUrl,
			// Token: 0x04005723 RID: 22307
			DatabaseCopyRpcResultNotFound,
			// Token: 0x04005724 RID: 22308
			DagSubnetDown,
			// Token: 0x04005725 RID: 22309
			ErrorFilePathMustBeUNC,
			// Token: 0x04005726 RID: 22310
			ConfirmationMessageSetRecipientTemplateProvisioningPolicy,
			// Token: 0x04005727 RID: 22311
			UpdatingAdminToolsConfiguredVersion,
			// Token: 0x04005728 RID: 22312
			RemoveDagFailedToDestroyClusterException,
			// Token: 0x04005729 RID: 22313
			ConfirmationMessageSetClientAccessServer,
			// Token: 0x0400572A RID: 22314
			ErrorMailboxRelocationJoinTargetNotContainer,
			// Token: 0x0400572B RID: 22315
			MaxDevicesReachedSingular,
			// Token: 0x0400572C RID: 22316
			ExceptionMandatoryParameter,
			// Token: 0x0400572D RID: 22317
			GetQueueDigestAmbiguosSite,
			// Token: 0x0400572E RID: 22318
			WarningNTSecurityDescriptorNotUpdated,
			// Token: 0x0400572F RID: 22319
			ExportSkippedE15Rules,
			// Token: 0x04005730 RID: 22320
			ErrorDisclaimerTextBig,
			// Token: 0x04005731 RID: 22321
			WarningBackgroundDatabaseMaintenanceChangeRequiresRemount,
			// Token: 0x04005732 RID: 22322
			MailboxAuditLogSearchFailed,
			// Token: 0x04005733 RID: 22323
			ErrorMoveAddressListAcrossOrganization,
			// Token: 0x04005734 RID: 22324
			ErrorRemoveMailuserWithLitigationHold,
			// Token: 0x04005735 RID: 22325
			ClassificationRuleCollectionInternalFailure,
			// Token: 0x04005736 RID: 22326
			WarningSetMailboxLitigationOwnerIdentity,
			// Token: 0x04005737 RID: 22327
			ErrorNoDeletionNoTarget,
			// Token: 0x04005738 RID: 22328
			InvalidComplianceBindingWarning,
			// Token: 0x04005739 RID: 22329
			ConfirmationMessageUninstallProvisioningAgent,
			// Token: 0x0400573A RID: 22330
			ConfirmationMessageEnableMailboxLinked,
			// Token: 0x0400573B RID: 22331
			NoEntityLinkedToTenantInReportingDB,
			// Token: 0x0400573C RID: 22332
			ErrorCompleteFlagNotAllowed,
			// Token: 0x0400573D RID: 22333
			ErrorSourceServerNotInDag,
			// Token: 0x0400573E RID: 22334
			CasHealthSpecifiedCASServerVersionNotMatched,
			// Token: 0x0400573F RID: 22335
			RegistryInsufficientPermissionException,
			// Token: 0x04005740 RID: 22336
			ErrorAssigneeComputerNotUnique,
			// Token: 0x04005741 RID: 22337
			ErrorRecipientIdParamElementsNotUnique,
			// Token: 0x04005742 RID: 22338
			DagCantBeSetIntoDatacenterActivationMode,
			// Token: 0x04005743 RID: 22339
			SharedConfigurationNotEnabled,
			// Token: 0x04005744 RID: 22340
			DagTaskNodeNotUpExceptionTryConfigOnlyException,
			// Token: 0x04005745 RID: 22341
			OptInNotSupportedForPre14Mailbox,
			// Token: 0x04005746 RID: 22342
			DagTaskMultipleDefaultGatewaysFound,
			// Token: 0x04005747 RID: 22343
			WarningRulesWillNotBeCopied,
			// Token: 0x04005748 RID: 22344
			ErrorUnknownMailboxFolderAccessRights,
			// Token: 0x04005749 RID: 22345
			DagTaskRemoveNodeCleanupFailed,
			// Token: 0x0400574A RID: 22346
			ErrorCreatedUserNotExist,
			// Token: 0x0400574B RID: 22347
			CasHealthPowerShellLogonFailed,
			// Token: 0x0400574C RID: 22348
			DatabaseNamesMustBeValid,
			// Token: 0x0400574D RID: 22349
			ErrorRBACPolicyNotFound,
			// Token: 0x0400574E RID: 22350
			VerboseFailedDoubleWriteOperation,
			// Token: 0x0400574F RID: 22351
			NeedToConfigOABForWeb,
			// Token: 0x04005750 RID: 22352
			MtrtMessageSend,
			// Token: 0x04005751 RID: 22353
			OnlineIsIntegException,
			// Token: 0x04005752 RID: 22354
			CasHealthOwaMissingAuthType,
			// Token: 0x04005753 RID: 22355
			ProtocolTransactionShortErrorMsgFromException,
			// Token: 0x04005754 RID: 22356
			ErrorAddressBookMailboxPolicyNotUnique,
			// Token: 0x04005755 RID: 22357
			SuspendSuccessInformationalMessage,
			// Token: 0x04005756 RID: 22358
			ServiceFailedToStart,
			// Token: 0x04005757 RID: 22359
			ErrorTenantNotBeingRelocated,
			// Token: 0x04005758 RID: 22360
			ErrorCannotCreateRoleAssignmentToADeprecatedRole,
			// Token: 0x04005759 RID: 22361
			MFLFileNotFound,
			// Token: 0x0400575A RID: 22362
			ConfirmationMessageSetComponentState,
			// Token: 0x0400575B RID: 22363
			VerboseAdministrativeGroupLinkedToPfdb,
			// Token: 0x0400575C RID: 22364
			ConfirmationMessageConnectMailboxValidateOnly,
			// Token: 0x0400575D RID: 22365
			ServerAdminLinkEmptyException,
			// Token: 0x0400575E RID: 22366
			ConfirmationMessageDisableFederatedOrgId,
			// Token: 0x0400575F RID: 22367
			ErrorServerNotE14OrLater,
			// Token: 0x04005760 RID: 22368
			ErrorInvalidAuthServerRealm,
			// Token: 0x04005761 RID: 22369
			DisableMailForestContactNotAllowed,
			// Token: 0x04005762 RID: 22370
			NoSystemProbesFound,
			// Token: 0x04005763 RID: 22371
			ErrorRoleAssignmentPolicyNotUnique,
			// Token: 0x04005764 RID: 22372
			LogSourceMailboxRemoved,
			// Token: 0x04005765 RID: 22373
			FailToAddServerAdminToLocalAdminGroup,
			// Token: 0x04005766 RID: 22374
			UMCallAnsweringRuleTransferToWithContext,
			// Token: 0x04005767 RID: 22375
			ErrorMailboxFolderNotUnique,
			// Token: 0x04005768 RID: 22376
			ReplicationCheckGeneralFail,
			// Token: 0x04005769 RID: 22377
			ConfirmationMessageExportRecipientDataProperty,
			// Token: 0x0400576A RID: 22378
			ErrorFileIsTooLargeForFingerprint,
			// Token: 0x0400576B RID: 22379
			ProgressEmailAddressPolicyAdjustingPriority,
			// Token: 0x0400576C RID: 22380
			ConfirmationMessageSetTransportRule,
			// Token: 0x0400576D RID: 22381
			VerboseMultiSiteDCContact,
			// Token: 0x0400576E RID: 22382
			ErrorUsersNotInSameOrganization,
			// Token: 0x0400576F RID: 22383
			TestSearchActiveManager,
			// Token: 0x04005770 RID: 22384
			ErrorSimilarResourcePolicyExist,
			// Token: 0x04005771 RID: 22385
			VerboseDeletePFProxy,
			// Token: 0x04005772 RID: 22386
			FailedToJoinNode,
			// Token: 0x04005773 RID: 22387
			VerboseOfflineDatabaseResource,
			// Token: 0x04005774 RID: 22388
			MonitoringServiceRequestTimedout,
			// Token: 0x04005775 RID: 22389
			ConfirmationMessageSetCalendarNotification,
			// Token: 0x04005776 RID: 22390
			ErrorNoAvailableDefaultName,
			// Token: 0x04005777 RID: 22391
			MigrationEndpointNotFound,
			// Token: 0x04005778 RID: 22392
			GetDbcsRpcQueryAllDone,
			// Token: 0x04005779 RID: 22393
			ConfirmationMessageNewGroupMailbox,
			// Token: 0x0400577A RID: 22394
			AmInvalidRoleStandaloneServer,
			// Token: 0x0400577B RID: 22395
			VerboseRollbackPublicFolderReferralChange,
			// Token: 0x0400577C RID: 22396
			ErrorFailToParseLocalLongFullPath,
			// Token: 0x0400577D RID: 22397
			ErrorArchiveDatabaseDoesNotMatchUser,
			// Token: 0x0400577E RID: 22398
			ErrorNotMsoOrganization,
			// Token: 0x0400577F RID: 22399
			WarningSourceServersSkipped,
			// Token: 0x04005780 RID: 22400
			SupervisionPoliciesNotFound,
			// Token: 0x04005781 RID: 22401
			ErrorArchiveCanNotBeDownVersion,
			// Token: 0x04005782 RID: 22402
			ConfirmationMessageRemoveRecipientEnforcementProvisioningPolicy,
			// Token: 0x04005783 RID: 22403
			CrossPremiseProbeResponseMatch,
			// Token: 0x04005784 RID: 22404
			ServiceReachedStatusDuringWait,
			// Token: 0x04005785 RID: 22405
			ErrorNoValidPhones,
			// Token: 0x04005786 RID: 22406
			InvalidThumbprintFormat,
			// Token: 0x04005787 RID: 22407
			LogSourceRecipient,
			// Token: 0x04005788 RID: 22408
			DataClassificationFingerprintsDuplicated,
			// Token: 0x04005789 RID: 22409
			EMailAddressNotFound,
			// Token: 0x0400578A RID: 22410
			DagNetTaskIsManualOnly,
			// Token: 0x0400578B RID: 22411
			DiscoveringAdditionalDomain,
			// Token: 0x0400578C RID: 22412
			ISIntegCorruptionFormat,
			// Token: 0x0400578D RID: 22413
			ErrorWhileFolderSyncForUpdation,
			// Token: 0x0400578E RID: 22414
			IisTasksReadRegistryKeySecurityException,
			// Token: 0x0400578F RID: 22415
			WarningInvalidDedicatedMailboxPlanData,
			// Token: 0x04005790 RID: 22416
			ErrorOrganizationNotUpgradable,
			// Token: 0x04005791 RID: 22417
			ExistingProductConfiguration,
			// Token: 0x04005792 RID: 22418
			ErrorPublicFolderReferralServerIsNotMailboxServer,
			// Token: 0x04005793 RID: 22419
			ErrorRecoveryItemNotFoundByIdentity,
			// Token: 0x04005794 RID: 22420
			DagNetworkDistinctSubnetListError,
			// Token: 0x04005795 RID: 22421
			ErrorNewRemoveRoleAssignmentNeedHierarchicalRoleAssignment,
			// Token: 0x04005796 RID: 22422
			ErrorResultSizeOutOfRange,
			// Token: 0x04005797 RID: 22423
			ErrorVerifyLinkedForest,
			// Token: 0x04005798 RID: 22424
			VerboseSelectedTextStream,
			// Token: 0x04005799 RID: 22425
			SeederPrepareDbSeedRpcBegin,
			// Token: 0x0400579A RID: 22426
			ErrorFolderNotExist,
			// Token: 0x0400579B RID: 22427
			TestSearchServerNoMdbs,
			// Token: 0x0400579C RID: 22428
			ErrorPropertyTypeNotUnique,
			// Token: 0x0400579D RID: 22429
			UnableToGetProcessIdOfService,
			// Token: 0x0400579E RID: 22430
			FailedToSaveCorruptServerException,
			// Token: 0x0400579F RID: 22431
			CatchAllRecipientNotUnique,
			// Token: 0x040057A0 RID: 22432
			ErrorDuplicateActiveOrganizationExists,
			// Token: 0x040057A1 RID: 22433
			InvalidRegex,
			// Token: 0x040057A2 RID: 22434
			SiteMailboxCreatorSet,
			// Token: 0x040057A3 RID: 22435
			ErrorReadDatabaseSecurityDescriptor,
			// Token: 0x040057A4 RID: 22436
			ErrorTeamMailboxCanNotUnLinkSharePointByNonSiteOwner,
			// Token: 0x040057A5 RID: 22437
			ErrorNotificationPhoneNumberAbsent,
			// Token: 0x040057A6 RID: 22438
			ErrorFailToCreateExchangeAdministratorsGroup,
			// Token: 0x040057A7 RID: 22439
			SeedingErrorDirectoryIsFile,
			// Token: 0x040057A8 RID: 22440
			ErrorFailedToCleanupDatabase,
			// Token: 0x040057A9 RID: 22441
			InfoCreateE12DSGroup,
			// Token: 0x040057AA RID: 22442
			ErrorSetVersion4OabToTiServerWithoutSP3,
			// Token: 0x040057AB RID: 22443
			ConfirmationMessageSetThrottlingPolicy,
			// Token: 0x040057AC RID: 22444
			VerboseADReferral,
			// Token: 0x040057AD RID: 22445
			ErrorCannotChangeLocaleProperty,
			// Token: 0x040057AE RID: 22446
			SendConnectorDuplicateSourceServerException,
			// Token: 0x040057AF RID: 22447
			InvalidIPAddress,
			// Token: 0x040057B0 RID: 22448
			UnableToReadDlpPolicy,
			// Token: 0x040057B1 RID: 22449
			ExceptionCannotDelegateEdgeServerAdmin,
			// Token: 0x040057B2 RID: 22450
			ConfirmationMessageSetTeamMailbox,
			// Token: 0x040057B3 RID: 22451
			InitializeServerResponse,
			// Token: 0x040057B4 RID: 22452
			DagMemberNoDatabases,
			// Token: 0x040057B5 RID: 22453
			VerboseFailedSetAccessControl,
			// Token: 0x040057B6 RID: 22454
			ErrorWhileUpdatingBadWordsRules,
			// Token: 0x040057B7 RID: 22455
			ConfirmationMessageNewMSOFullSyncRequest,
			// Token: 0x040057B8 RID: 22456
			ErrorTeamMailboxCanNotLinkSharePointByNonSiteOwner,
			// Token: 0x040057B9 RID: 22457
			ParsingWebRequestorRedirectEndPoint,
			// Token: 0x040057BA RID: 22458
			ReportMovedMailboxMorphedToMailUser,
			// Token: 0x040057BB RID: 22459
			ErrorCannotAssignRoleToPartnerApp,
			// Token: 0x040057BC RID: 22460
			DuplicateTriplet,
			// Token: 0x040057BD RID: 22461
			ConfirmRemovalOfCorruptMoveRequest,
			// Token: 0x040057BE RID: 22462
			ErrorScopeNotFound,
			// Token: 0x040057BF RID: 22463
			ErrorLiveDomainUriNotUnique,
			// Token: 0x040057C0 RID: 22464
			WarningDistributionListJoinApprovalRequired,
			// Token: 0x040057C1 RID: 22465
			CasHealthEasCommandFailedWithError,
			// Token: 0x040057C2 RID: 22466
			VerboseTestUserOrganization,
			// Token: 0x040057C3 RID: 22467
			ConfirmationMessageResumeDatabaseCopyIdentity,
			// Token: 0x040057C4 RID: 22468
			CouldNotRemoveMoveRequest,
			// Token: 0x040057C5 RID: 22469
			ErrorGivingUpWaitingOnMRS,
			// Token: 0x040057C6 RID: 22470
			DagTaskFixedUpIpResources,
			// Token: 0x040057C7 RID: 22471
			ErrorRemoveMailboxWithDiscoveryHold,
			// Token: 0x040057C8 RID: 22472
			SeederAlreadyFailedPrompt,
			// Token: 0x040057C9 RID: 22473
			CannotFindSchemaAttributeException,
			// Token: 0x040057CA RID: 22474
			ConfirmationMessageRemoveRequest,
			// Token: 0x040057CB RID: 22475
			DuplicateContentFilterPhrase,
			// Token: 0x040057CC RID: 22476
			CasHealthOwaBadHttpResponseStream,
			// Token: 0x040057CD RID: 22477
			SearchDuplicateSource,
			// Token: 0x040057CE RID: 22478
			ExceptionWebObjectAlreadyExists,
			// Token: 0x040057CF RID: 22479
			UserFederatedDomainNotInRemoteOrgRelationship,
			// Token: 0x040057D0 RID: 22480
			ConfirmationMessageStartComplianceSearch,
			// Token: 0x040057D1 RID: 22481
			TopologyServiceFailed,
			// Token: 0x040057D2 RID: 22482
			WarningCannotUpgradeInvalidRoleAssignment,
			// Token: 0x040057D3 RID: 22483
			VerboseCheckingAgainstPartnerApplicationMetadataUrl,
			// Token: 0x040057D4 RID: 22484
			ErrorCertificateNotCAPI,
			// Token: 0x040057D5 RID: 22485
			PopImapErrorUnexpectedValue,
			// Token: 0x040057D6 RID: 22486
			RcrConfigString,
			// Token: 0x040057D7 RID: 22487
			CasHealthOwaAuthTypesSupported2,
			// Token: 0x040057D8 RID: 22488
			ConfirmExportExchangeCertificate,
			// Token: 0x040057D9 RID: 22489
			InfoCheckRmsVersion,
			// Token: 0x040057DA RID: 22490
			ErrorTryingToReadPfx,
			// Token: 0x040057DB RID: 22491
			ConfirmationMessageNewMailFlowPartnerConfigWithName,
			// Token: 0x040057DC RID: 22492
			TestMailflowServerWithoutMdbs,
			// Token: 0x040057DD RID: 22493
			ConfirmationMessageMoveMailboxDatabaseMasterAnyServerSourceServer,
			// Token: 0x040057DE RID: 22494
			VerboseDeleteMonitoringMailbox,
			// Token: 0x040057DF RID: 22495
			ErrorMoveVersion4OabToTiServerWithoutSP3,
			// Token: 0x040057E0 RID: 22496
			SmtpConnectivityFailureEvent,
			// Token: 0x040057E1 RID: 22497
			HeaderValues,
			// Token: 0x040057E2 RID: 22498
			MailboxSearchIdentityMustBeFullyQualified,
			// Token: 0x040057E3 RID: 22499
			WritingInformationScript,
			// Token: 0x040057E4 RID: 22500
			ErrorAddressBookPolicyNotUnique,
			// Token: 0x040057E5 RID: 22501
			CafeRoleNotInstalled,
			// Token: 0x040057E6 RID: 22502
			CapabilityDoesNotMatchOthers,
			// Token: 0x040057E7 RID: 22503
			NewFederationTrustAddAppUri,
			// Token: 0x040057E8 RID: 22504
			UMCallAnsweringRuleCallerIdCondition,
			// Token: 0x040057E9 RID: 22505
			ComfirmConnectToMatchingUser,
			// Token: 0x040057EA RID: 22506
			ConfirmationMessageAddAttachmentfilterentry,
			// Token: 0x040057EB RID: 22507
			ErrorTeamMailboxSendNotifications,
			// Token: 0x040057EC RID: 22508
			CertFileNotFound,
			// Token: 0x040057ED RID: 22509
			ConfirmationMessageRemoveClientAccessArray,
			// Token: 0x040057EE RID: 22510
			ExceptionUserObjectNotFound,
			// Token: 0x040057EF RID: 22511
			ErrorThumbprintNotFound,
			// Token: 0x040057F0 RID: 22512
			InvalidAggregateByType,
			// Token: 0x040057F1 RID: 22513
			ClientRequestId,
			// Token: 0x040057F2 RID: 22514
			CreateWkGuidPermissionDeniedException,
			// Token: 0x040057F3 RID: 22515
			MailboxQuotaValues,
			// Token: 0x040057F4 RID: 22516
			SetArchivePermissionException,
			// Token: 0x040057F5 RID: 22517
			VerboseNoAssociatedMRSRequestOnDatabaseCondition,
			// Token: 0x040057F6 RID: 22518
			WarningOABSourceServerDoesNotExist,
			// Token: 0x040057F7 RID: 22519
			ErrorChildObjectTypeNotFound,
			// Token: 0x040057F8 RID: 22520
			CannotSpecifyParameterWithE15OrLaterOab,
			// Token: 0x040057F9 RID: 22521
			VerboseTestOabFromParameter,
			// Token: 0x040057FA RID: 22522
			ErrorIisVersionIsInvalid,
			// Token: 0x040057FB RID: 22523
			ConfirmationMessageSuspendRequest,
			// Token: 0x040057FC RID: 22524
			FailedDeleteOldDatabaseLogFiles,
			// Token: 0x040057FD RID: 22525
			BackSyncObjectExcludedExtended,
			// Token: 0x040057FE RID: 22526
			ConfirmationMessageTestSenderId,
			// Token: 0x040057FF RID: 22527
			ConfirmationMessageRemoveGlobalAddressList,
			// Token: 0x04005800 RID: 22528
			ImportFromPSTShouldImport,
			// Token: 0x04005801 RID: 22529
			PAMRPCError,
			// Token: 0x04005802 RID: 22530
			FileShareWitnessPathDown,
			// Token: 0x04005803 RID: 22531
			ErrorIncorrectInputDag,
			// Token: 0x04005804 RID: 22532
			ErrorRedirectionDuplicateDomainName,
			// Token: 0x04005805 RID: 22533
			MissingHydratedOffer,
			// Token: 0x04005806 RID: 22534
			ReceiveConnectorMappingConflict,
			// Token: 0x04005807 RID: 22535
			VerboseUpdatedServiceEndpoint,
			// Token: 0x04005808 RID: 22536
			ErrorCouldNotRemoveRoleAssignments,
			// Token: 0x04005809 RID: 22537
			TenantNotificationDebugHelpProviderReturnedEmptyUrl,
			// Token: 0x0400580A RID: 22538
			ConfirmationMessageTestMAPIConnectivityServer,
			// Token: 0x0400580B RID: 22539
			UMRoleNotInstalled,
			// Token: 0x0400580C RID: 22540
			ChangesTakeEffectAfterRestartingPopImapService,
			// Token: 0x0400580D RID: 22541
			ResponseMessage,
			// Token: 0x0400580E RID: 22542
			InfoWarning,
			// Token: 0x0400580F RID: 22543
			ConfirmationMessageStartDatabaseAvailabilityGroupADSite,
			// Token: 0x04005810 RID: 22544
			ErrorVerifyLinkedGroupForest,
			// Token: 0x04005811 RID: 22545
			ConfirmationMessageRemoveManagementRole,
			// Token: 0x04005812 RID: 22546
			VerboseRestartWSManAppPool,
			// Token: 0x04005813 RID: 22547
			SendConnectorWrongTargetServerRg,
			// Token: 0x04005814 RID: 22548
			CasHealthEcpServiceRequestException,
			// Token: 0x04005815 RID: 22549
			VerboseSucceededReplicatingObject,
			// Token: 0x04005816 RID: 22550
			AmUnknownRole,
			// Token: 0x04005817 RID: 22551
			ProvisioningAgentTasksOnlyRunOnCas,
			// Token: 0x04005818 RID: 22552
			SetLiveFedDomainReserveResponse,
			// Token: 0x04005819 RID: 22553
			AlsSubjectAdminFailure,
			// Token: 0x0400581A RID: 22554
			FailedToDeleteE14SearchObjectWhenUpgrade,
			// Token: 0x0400581B RID: 22555
			ErrorCertificateNotRSA,
			// Token: 0x0400581C RID: 22556
			AppConfigIOException,
			// Token: 0x0400581D RID: 22557
			CasHealthErrorPopulatingMailbox,
			// Token: 0x0400581E RID: 22558
			WarningOperationOnDBWithJetCircularLogging,
			// Token: 0x0400581F RID: 22559
			RcrDatabaseFailoverOfflineLoss,
			// Token: 0x04005820 RID: 22560
			ErrorCanNotUpgradePolicyWithMailboxSetting,
			// Token: 0x04005821 RID: 22561
			FailedToSortPatches,
			// Token: 0x04005822 RID: 22562
			ConfirmationMessageSetClassificationRuleCollection,
			// Token: 0x04005823 RID: 22563
			ErrorInvalidArchiveRecipientType,
			// Token: 0x04005824 RID: 22564
			WarningChangeOfFederatedIdentitySourceADAttribute,
			// Token: 0x04005825 RID: 22565
			ErrorCannotRetrieveServer,
			// Token: 0x04005826 RID: 22566
			ErrorServicePlanMailboxPlanInvalidSkuCapability,
			// Token: 0x04005827 RID: 22567
			ErrorNonEndUserRoleCannoBeAssignedToPolicy,
			// Token: 0x04005828 RID: 22568
			LoadedParameters,
			// Token: 0x04005829 RID: 22569
			ElcMdbNotFound,
			// Token: 0x0400582A RID: 22570
			ErrorMaxNumberOfCallerIds,
			// Token: 0x0400582B RID: 22571
			ConfirmationMessageRemoveManagedFolderMailboxPolicy,
			// Token: 0x0400582C RID: 22572
			IllegalResumptionException,
			// Token: 0x0400582D RID: 22573
			AdminAuditLogSearchOutOfRangeStartIndex,
			// Token: 0x0400582E RID: 22574
			SeederAlreadyCancelledPrompt,
			// Token: 0x0400582F RID: 22575
			SchemaVersionDataValidationException,
			// Token: 0x04005830 RID: 22576
			ExceptionRunProcessFailed,
			// Token: 0x04005831 RID: 22577
			MRSProxyIsRespondingtoPing,
			// Token: 0x04005832 RID: 22578
			CannotFindPKConfigFile,
			// Token: 0x04005833 RID: 22579
			UMCallAnsweringRuleFindMeWithContextAndWithSecondNumber,
			// Token: 0x04005834 RID: 22580
			ConfirmationMessageRemoveELCContentSettings,
			// Token: 0x04005835 RID: 22581
			MRSExpectedDiagnosticsElementMissing,
			// Token: 0x04005836 RID: 22582
			ConfirmationMessageGetTeamMailboxDiagnostics,
			// Token: 0x04005837 RID: 22583
			ErrorFailedToGetDatabaseProcessInfo,
			// Token: 0x04005838 RID: 22584
			ErrorMoveRequestIsProtected,
			// Token: 0x04005839 RID: 22585
			RemoveDagNeedsZeroServersException,
			// Token: 0x0400583A RID: 22586
			ErrorInvalidAuthScheme,
			// Token: 0x0400583B RID: 22587
			VerboseIgnoringAssignment,
			// Token: 0x0400583C RID: 22588
			WarningLPDirectoryNotFound,
			// Token: 0x0400583D RID: 22589
			ErrorCannotMoveLitigationHoldToPreE14,
			// Token: 0x0400583E RID: 22590
			ConfirmEnableCertForUM,
			// Token: 0x0400583F RID: 22591
			ConfirmationMessageUpdateDistributionGroupMember,
			// Token: 0x04005840 RID: 22592
			ErrorAmbiguousRetentionPolicyTagId,
			// Token: 0x04005841 RID: 22593
			ErrorInvalidRecipientTypeDetails,
			// Token: 0x04005842 RID: 22594
			ErrorRelocationStateRequestedIsNotAllowed,
			// Token: 0x04005843 RID: 22595
			WarningSystemAddressListNotFound,
			// Token: 0x04005844 RID: 22596
			ErrorServicePlanDoesntAllowHydration,
			// Token: 0x04005845 RID: 22597
			VerboseCreatePublicFolderTree,
			// Token: 0x04005846 RID: 22598
			NoDomainInTheRemoteOrganizationRelationshipIsFederatedLocally,
			// Token: 0x04005847 RID: 22599
			TestSearchErrorEvent,
			// Token: 0x04005848 RID: 22600
			VerboseRemovingRoleGroup,
			// Token: 0x04005849 RID: 22601
			ServerNotFound,
			// Token: 0x0400584A RID: 22602
			ErrorRemoveUserFailed,
			// Token: 0x0400584B RID: 22603
			ErrorCouldNotAddGroupMember,
			// Token: 0x0400584C RID: 22604
			WarningFailedCreateDirectory,
			// Token: 0x0400584D RID: 22605
			ConfirmationMessageRemoveMailboxDatabase,
			// Token: 0x0400584E RID: 22606
			MaxDevicesReached,
			// Token: 0x0400584F RID: 22607
			ConfirmationMessageRemoveEdgeSyncSendConnector,
			// Token: 0x04005850 RID: 22608
			ConfirmationMessageRemoveInboundConnector,
			// Token: 0x04005851 RID: 22609
			ConfirmationMessageNewRetentionPolicy,
			// Token: 0x04005852 RID: 22610
			DagFswServerNotAccessibleException,
			// Token: 0x04005853 RID: 22611
			ErrorParameterInvalidForFederatedTenant,
			// Token: 0x04005854 RID: 22612
			RemoveDagServerDatabaseIsReplicatedException,
			// Token: 0x04005855 RID: 22613
			WarningSetAdminAuditLogOnPreE15,
			// Token: 0x04005856 RID: 22614
			EnableConversationsPreProcessing,
			// Token: 0x04005857 RID: 22615
			SetDatabaseRequestedSchemaVersion,
			// Token: 0x04005858 RID: 22616
			ConfirmationMessageNewMailboxLinkedWithSyncMailbox,
			// Token: 0x04005859 RID: 22617
			ErrorMailboxExceedsTargetQuota,
			// Token: 0x0400585A RID: 22618
			UnknownFederationDomainAuthenticationType,
			// Token: 0x0400585B RID: 22619
			InformationSqlStatement,
			// Token: 0x0400585C RID: 22620
			InvalidLicenseName,
			// Token: 0x0400585D RID: 22621
			MailForestContactFound,
			// Token: 0x0400585E RID: 22622
			RunCmdletOnSite,
			// Token: 0x0400585F RID: 22623
			DeleteVirtualDirectoryFail,
			// Token: 0x04005860 RID: 22624
			MobileDeviceLogException,
			// Token: 0x04005861 RID: 22625
			ConfirmationMessageSetWorkloadManagementPolicy,
			// Token: 0x04005862 RID: 22626
			ConfirmationMessageRemoveAddressBookPolicy,
			// Token: 0x04005863 RID: 22627
			CasHealthConfirmTestActiveSyncWithServer,
			// Token: 0x04005864 RID: 22628
			TraceCannotCreateXmlReportFile,
			// Token: 0x04005865 RID: 22629
			ConfirmationMessageRemoveSyncServiceInstance,
			// Token: 0x04005866 RID: 22630
			OutlookProtectionRuleNameIsNotUnique,
			// Token: 0x04005867 RID: 22631
			ErrorCanRetargetOnlyQueuedMoves,
			// Token: 0x04005868 RID: 22632
			WarningClusterNodeNotFoundInDag,
			// Token: 0x04005869 RID: 22633
			SetServiceInstanceMapResultFormat,
			// Token: 0x0400586A RID: 22634
			ErrorCannotGetDomainStatusFromPartnerSTS,
			// Token: 0x0400586B RID: 22635
			CommentsHaveInvalidChars,
			// Token: 0x0400586C RID: 22636
			ConfirmationMessageNewManagementRole,
			// Token: 0x0400586D RID: 22637
			ConfirmationMessageNewEdgeSyncServiceConfigWithSiteSpecified,
			// Token: 0x0400586E RID: 22638
			LogMigrationBeforeApplyRUS,
			// Token: 0x0400586F RID: 22639
			ConfirmationMessageSetMalwareFilteringServer,
			// Token: 0x04005870 RID: 22640
			NoExchangeRoleInstalled,
			// Token: 0x04005871 RID: 22641
			CalendarLogFileDoesNotExist,
			// Token: 0x04005872 RID: 22642
			ErrorEmptyForestUrl,
			// Token: 0x04005873 RID: 22643
			WarningPossibleDataLossWithGlsRollback,
			// Token: 0x04005874 RID: 22644
			VerboseFailedToMemberNameToNetId,
			// Token: 0x04005875 RID: 22645
			TPDWithoutPrivateKey,
			// Token: 0x04005876 RID: 22646
			ResubmitRequestGenericRpcError,
			// Token: 0x04005877 RID: 22647
			CouldNotCreateMSOOnboardingService,
			// Token: 0x04005878 RID: 22648
			ConfirmationMessageNewPowerShellVirtualDirectory,
			// Token: 0x04005879 RID: 22649
			RegistryKeyDoesNotExist,
			// Token: 0x0400587A RID: 22650
			ConfirmationMessageNewSyncGroup,
			// Token: 0x0400587B RID: 22651
			ErrorIncompatibleParameters,
			// Token: 0x0400587C RID: 22652
			ConfirmationMessageCompleteMigrationBatch,
			// Token: 0x0400587D RID: 22653
			BadPublicFoldersParameterException,
			// Token: 0x0400587E RID: 22654
			ErrorTenantInLockdown,
			// Token: 0x0400587F RID: 22655
			CheckPointNotProgressed,
			// Token: 0x04005880 RID: 22656
			ConfirmationMessageRemoveFederationTrust,
			// Token: 0x04005881 RID: 22657
			InfoAceNotPresent,
			// Token: 0x04005882 RID: 22658
			ConfirmationMessageAuthNewInProgressReplace,
			// Token: 0x04005883 RID: 22659
			ErrorArbitrationMbxCrossOrg,
			// Token: 0x04005884 RID: 22660
			FailedLoadRegistryKey,
			// Token: 0x04005885 RID: 22661
			WarningDismountDatabaseToContinue,
			// Token: 0x04005886 RID: 22662
			ConfirmationMessageReleaseQuarantineMessage,
			// Token: 0x04005887 RID: 22663
			InfoAceAlreadyPresent,
			// Token: 0x04005888 RID: 22664
			MissingMailboxId,
			// Token: 0x04005889 RID: 22665
			ConfirmationMessageSetMailboxServer,
			// Token: 0x0400588A RID: 22666
			VerboseUpdateDatabaseResource,
			// Token: 0x0400588B RID: 22667
			ParameterValueIsAlreadySet,
			// Token: 0x0400588C RID: 22668
			FailureToCallAutodiscoverService,
			// Token: 0x0400588D RID: 22669
			ClassificationRuleCollectionPatternTooLong,
			// Token: 0x0400588E RID: 22670
			VerboseServiceValidatorRequestTrace,
			// Token: 0x0400588F RID: 22671
			WarningFailedToDeleteSourceNTAccount,
			// Token: 0x04005890 RID: 22672
			ConfirmationMessageEnableInboxRule,
			// Token: 0x04005891 RID: 22673
			ConfirmationMessageDisableReplayLag,
			// Token: 0x04005892 RID: 22674
			SearchStoppedCannotBeResumed,
			// Token: 0x04005893 RID: 22675
			ErrorSecondaryDomainNotFound,
			// Token: 0x04005894 RID: 22676
			ConfirmationMonitoringItemNotFound,
			// Token: 0x04005895 RID: 22677
			CertFileIsNotPfx,
			// Token: 0x04005896 RID: 22678
			ErrorCannotRemoveAllCookies,
			// Token: 0x04005897 RID: 22679
			SendConnectorWrongTargetServerRole,
			// Token: 0x04005898 RID: 22680
			ErrorRulesSizeOverLimit,
			// Token: 0x04005899 RID: 22681
			ErrorTooManyItems,
			// Token: 0x0400589A RID: 22682
			ErrorMailboxNotFound,
			// Token: 0x0400589B RID: 22683
			ErrorCannotRemoveAccountNamespace,
			// Token: 0x0400589C RID: 22684
			ErrorUnableToLogonGroupMailbox,
			// Token: 0x0400589D RID: 22685
			AOGroupNotFoundException,
			// Token: 0x0400589E RID: 22686
			ConfirmationMessageSetRpcHttp,
			// Token: 0x0400589F RID: 22687
			ErrorVerificationCodeSentTooManyTimes,
			// Token: 0x040058A0 RID: 22688
			ErrorPatternIsTooLong,
			// Token: 0x040058A1 RID: 22689
			ExchangeSettingsWarningMaximumSize,
			// Token: 0x040058A2 RID: 22690
			WarningRemovePolicyWithAssociatedUsers,
			// Token: 0x040058A3 RID: 22691
			FoundConflictingWKObjectException,
			// Token: 0x040058A4 RID: 22692
			ExForeignForestSGroupNotFoundException,
			// Token: 0x040058A5 RID: 22693
			ErrorResourceSearchPropertyInvalid,
			// Token: 0x040058A6 RID: 22694
			MigrationTypeDoesntSupportConnectionSettings,
			// Token: 0x040058A7 RID: 22695
			CasHealthOwaTestFailed,
			// Token: 0x040058A8 RID: 22696
			ConfirmationMessageNewWorkloadPolicy,
			// Token: 0x040058A9 RID: 22697
			ErrorArchiveExceedsTargetQuota,
			// Token: 0x040058AA RID: 22698
			VerboseSetAccessControl,
			// Token: 0x040058AB RID: 22699
			ErrorWKObjectExists,
			// Token: 0x040058AC RID: 22700
			WarningCancelSourceCleanupDueToApplyingPolicyFailed,
			// Token: 0x040058AD RID: 22701
			InvalidQueryException,
			// Token: 0x040058AE RID: 22702
			DuplicateOrganizationRelationshipDomain,
			// Token: 0x040058AF RID: 22703
			ErrorAssigneeSecurityGroupNotFound,
			// Token: 0x040058B0 RID: 22704
			PartnerFilterMustBeValid,
			// Token: 0x040058B1 RID: 22705
			GetDbcsOverridingServer,
			// Token: 0x040058B2 RID: 22706
			MailboxAssistantsServiceNotRunning,
			// Token: 0x040058B3 RID: 22707
			MigrationMaxConcurrentMigrationsVerificationFailed,
			// Token: 0x040058B4 RID: 22708
			ConfirmationMessageDisableCmdletExtensionAgent,
			// Token: 0x040058B5 RID: 22709
			ErrorZeroOrLessValueForShadowRetry,
			// Token: 0x040058B6 RID: 22710
			ErrorCannotMovePublicFolderMailboxesDownlevel,
			// Token: 0x040058B7 RID: 22711
			ContainerNotFoundException,
			// Token: 0x040058B8 RID: 22712
			AceTypeHasUnsupportedValueException,
			// Token: 0x040058B9 RID: 22713
			MobileDeviceNotExistException,
			// Token: 0x040058BA RID: 22714
			CouldNotSelectArchiveDatabase,
			// Token: 0x040058BB RID: 22715
			DuplicateAcceptedDomain,
			// Token: 0x040058BC RID: 22716
			ErrorPublicFolderUserNotFound,
			// Token: 0x040058BD RID: 22717
			ConfirmationMessageNewGls,
			// Token: 0x040058BE RID: 22718
			MapiTransactionShortErrorMsgFromExceptionWithInnerException,
			// Token: 0x040058BF RID: 22719
			ConfirmationMessageRemoveActiveSyncMailboxPolicy,
			// Token: 0x040058C0 RID: 22720
			DagFswSharePointsToWrongDirectoryException,
			// Token: 0x040058C1 RID: 22721
			DataClassificationRequiresHigherServerVersion,
			// Token: 0x040058C2 RID: 22722
			WarningRetentionPolicyTagNotFoundForApproval,
			// Token: 0x040058C3 RID: 22723
			ErrorRollbackGlsExpectsPostGlsState,
			// Token: 0x040058C4 RID: 22724
			ConfirmationMessageSetPartnerApplication,
			// Token: 0x040058C5 RID: 22725
			InterceptorErrorTimeIntervalInvalid,
			// Token: 0x040058C6 RID: 22726
			SetServerComponentStateServerUnreachable,
			// Token: 0x040058C7 RID: 22727
			CalendarDiagnosticLogsNotFound,
			// Token: 0x040058C8 RID: 22728
			CasHealthPowerShellConnectionUserCredential,
			// Token: 0x040058C9 RID: 22729
			OwaAttachmentInvalidStringLengthException,
			// Token: 0x040058CA RID: 22730
			ClassificationRuleCollectionResourceNotFoundViolation,
			// Token: 0x040058CB RID: 22731
			LogSourceAccountRemoved,
			// Token: 0x040058CC RID: 22732
			ErrorRemoveArbitrationMailboxWithOABsAssigned,
			// Token: 0x040058CD RID: 22733
			InstalledRoles,
			// Token: 0x040058CE RID: 22734
			WarningCustomRoleCreatedDuringUpgrade,
			// Token: 0x040058CF RID: 22735
			VerboseFoundValidAlternateServiceAccountCredential,
			// Token: 0x040058D0 RID: 22736
			MigrationRemoteServerTooLongException,
			// Token: 0x040058D1 RID: 22737
			ErrorEvictLiveIdMemberNotExists,
			// Token: 0x040058D2 RID: 22738
			SeedingPathErrorException,
			// Token: 0x040058D3 RID: 22739
			TestMailflowFailed,
			// Token: 0x040058D4 RID: 22740
			InvalidMonitorIdentity,
			// Token: 0x040058D5 RID: 22741
			BadDefaultsParameterException,
			// Token: 0x040058D6 RID: 22742
			ErrorMaxKeyMappings,
			// Token: 0x040058D7 RID: 22743
			ErrorCertificateAlreadyinPublish,
			// Token: 0x040058D8 RID: 22744
			ConfirmationMessageCleanMailboxDatabase,
			// Token: 0x040058D9 RID: 22745
			UnpackedDatacenterRoles,
			// Token: 0x040058DA RID: 22746
			CasHealthCalendarCheckError,
			// Token: 0x040058DB RID: 22747
			ConfirmationMessageCompleteMoveRequest,
			// Token: 0x040058DC RID: 22748
			ConfirmationMessageSetCmdletExtensionAgent,
			// Token: 0x040058DD RID: 22749
			ErrorCannotContactServerForCert,
			// Token: 0x040058DE RID: 22750
			FormsAuthenticationDeleteMarksIfUnusedCheckMarkAccessDeniedException,
			// Token: 0x040058DF RID: 22751
			ErrorChildObjectTypeNotUnique,
			// Token: 0x040058E0 RID: 22752
			ErrorRoleEntryParameterExistOnChildren,
			// Token: 0x040058E1 RID: 22753
			ConfirmationMessageNewHostedContentFilterConfig,
			// Token: 0x040058E2 RID: 22754
			ErrorNotMailboxServer,
			// Token: 0x040058E3 RID: 22755
			CasHealthShortErrorMsgFromExceptionWithInnerException,
			// Token: 0x040058E4 RID: 22756
			RecipientFromFirstOrganization,
			// Token: 0x040058E5 RID: 22757
			VerboseInstallWSManModule,
			// Token: 0x040058E6 RID: 22758
			ErrorLiveIdDoesNotExist,
			// Token: 0x040058E7 RID: 22759
			FailedToCheckDiscoveryHoldStatusException,
			// Token: 0x040058E8 RID: 22760
			ConfirmationMessageEnableMailboxDiscovery,
			// Token: 0x040058E9 RID: 22761
			VerboseFailedReadObjectFromDC,
			// Token: 0x040058EA RID: 22762
			ErrorRemoveOlderVirtualDirectory,
			// Token: 0x040058EB RID: 22763
			WarningCloseGroupMemberDepartForNoArbitrationMbx,
			// Token: 0x040058EC RID: 22764
			SaveChangesFailedForTraining,
			// Token: 0x040058ED RID: 22765
			ConfirmationMessageSetDatabaseAvailabilityGroupNetwork,
			// Token: 0x040058EE RID: 22766
			ConfirmationMessageRemoveWorkloadManagementPolicy,
			// Token: 0x040058EF RID: 22767
			ConfirmationMessageSetFederatedOrganizationIdentifier1,
			// Token: 0x040058F0 RID: 22768
			MoveMailboxShouldMove,
			// Token: 0x040058F1 RID: 22769
			ClassificationRuleCollectionSharingViolationSetOperationVerbose,
			// Token: 0x040058F2 RID: 22770
			VerboseCreateDirectory,
			// Token: 0x040058F3 RID: 22771
			ErrorCorruptedPartition,
			// Token: 0x040058F4 RID: 22772
			IISGeneralCOMException,
			// Token: 0x040058F5 RID: 22773
			ConfirmationMessageDisableArchive,
			// Token: 0x040058F6 RID: 22774
			FormsAuthenticationIsEnabledPathNotFoundException,
			// Token: 0x040058F7 RID: 22775
			ConfirmationMessageNewOfflineAddressBook,
			// Token: 0x040058F8 RID: 22776
			ErrorMapiHttpAlreadyEnabled,
			// Token: 0x040058F9 RID: 22777
			InvalidParameterForE12TargetDatabase,
			// Token: 0x040058FA RID: 22778
			ErrorInvalidMandatoryParameterForPublicFolderTasks,
			// Token: 0x040058FB RID: 22779
			LogMigrationRegistryKeyDefaultValue,
			// Token: 0x040058FC RID: 22780
			FailedToDeleteMailboxDatabase,
			// Token: 0x040058FD RID: 22781
			ConfirmationMessageRemoveMailuserAndNotLiveId,
			// Token: 0x040058FE RID: 22782
			InfoCreatedGroup,
			// Token: 0x040058FF RID: 22783
			ErrorInvalidInternalUserId,
			// Token: 0x04005900 RID: 22784
			ErrorWebSiteNotExists,
			// Token: 0x04005901 RID: 22785
			CopyingFile,
			// Token: 0x04005902 RID: 22786
			AutoGroupDepartMessageSubject,
			// Token: 0x04005903 RID: 22787
			ErrorInvalidOperationOnAddDBCopyForPublicFolder,
			// Token: 0x04005904 RID: 22788
			NewDagServerIsNotMailboxServerException,
			// Token: 0x04005905 RID: 22789
			InfoSetObjectVersion,
			// Token: 0x04005906 RID: 22790
			VerboseCannotReadObject,
			// Token: 0x04005907 RID: 22791
			ErrorParameterValueNotAllowed,
			// Token: 0x04005908 RID: 22792
			VerboseUnableToCreateAdminAuditFolder,
			// Token: 0x04005909 RID: 22793
			VerboseDoubleWriteADChangeOnDC,
			// Token: 0x0400590A RID: 22794
			WarningSharedConfigurationAlreadyExists,
			// Token: 0x0400590B RID: 22795
			ServerComponentStateInvalidRequester,
			// Token: 0x0400590C RID: 22796
			ErrorParameterRequiredButNotProvisioned,
			// Token: 0x0400590D RID: 22797
			ExportDestinationInvalid,
			// Token: 0x0400590E RID: 22798
			RegistryAccessServicesKeyDoesNotExistException,
			// Token: 0x0400590F RID: 22799
			ConfirmationMessageEnableConfigCustomizations,
			// Token: 0x04005910 RID: 22800
			ConfirmationMessageEnableCallAnsweringRule,
			// Token: 0x04005911 RID: 22801
			ConfirmationMessageRemoveMailboxIdentityAndLiveId,
			// Token: 0x04005912 RID: 22802
			ErrorModifyRoleNeedHierarchicalParentRoleWithoutScopeRestriction,
			// Token: 0x04005913 RID: 22803
			PAMCouldNotBeDeterminedException,
			// Token: 0x04005914 RID: 22804
			TestSearchGetMapiStore,
			// Token: 0x04005915 RID: 22805
			FailedToStartClusSvc,
			// Token: 0x04005916 RID: 22806
			DagFswUnableToUpdateWitnessShareException,
			// Token: 0x04005917 RID: 22807
			ConfirmationMessageRemoveAuthRedirect,
			// Token: 0x04005918 RID: 22808
			ErrorDefaultWebSiteNotExist,
			// Token: 0x04005919 RID: 22809
			ConfirmationMessageNewOrganizationNoPath,
			// Token: 0x0400591A RID: 22810
			FormsAuthenticationDeleteMarksIfUnusedUnknownCheckErrorException,
			// Token: 0x0400591B RID: 22811
			ErrorPasswordIncludesMemberName,
			// Token: 0x0400591C RID: 22812
			ErrorVirtualDirectoryADObjectAlreadyExists,
			// Token: 0x0400591D RID: 22813
			WarnCertificateWillNotBeUsed,
			// Token: 0x0400591E RID: 22814
			ConfirmRemovalOfCorruptRequest,
			// Token: 0x0400591F RID: 22815
			ErrorLiveIdDomainTemporarilyUnavailable,
			// Token: 0x04005920 RID: 22816
			MsiIsNotInstalled,
			// Token: 0x04005921 RID: 22817
			ConfirmationMessageRemoveDefaultELCFolder,
			// Token: 0x04005922 RID: 22818
			ConfirmationMessageDisableDistributionGroup,
			// Token: 0x04005923 RID: 22819
			ErrorTooManyMailboxesInSingleHold,
			// Token: 0x04005924 RID: 22820
			FailedToFindTPDForRefresh,
			// Token: 0x04005925 RID: 22821
			ErrorUserIsNotMailBoxEnabled,
			// Token: 0x04005926 RID: 22822
			ErrorMailboxInNonMailboxServer,
			// Token: 0x04005927 RID: 22823
			ExceptionWhileReadingInputFile,
			// Token: 0x04005928 RID: 22824
			ConfirmSharedConfiguration,
			// Token: 0x04005929 RID: 22825
			VerboseFindClosestPublicFolderDatabaseFromServer,
			// Token: 0x0400592A RID: 22826
			ConfirmationMessageNewFederationTrust,
			// Token: 0x0400592B RID: 22827
			ConfirmationMessageNewReceiveConnector,
			// Token: 0x0400592C RID: 22828
			TestSearchMapiStoreError,
			// Token: 0x0400592D RID: 22829
			GetQueueDigestInvalidFilter,
			// Token: 0x0400592E RID: 22830
			ExchangeSettingsInvalidSchema,
			// Token: 0x0400592F RID: 22831
			ClassificationRuleCollectionReservedFingerprintRulePackIdViolation,
			// Token: 0x04005930 RID: 22832
			ProgressStartClussvc,
			// Token: 0x04005931 RID: 22833
			ImportMultiplePSTToOneMailbox,
			// Token: 0x04005932 RID: 22834
			OnPremisesOrganizationOutboundConnectorNotExists,
			// Token: 0x04005933 RID: 22835
			AccessMismatchRemoteLocal,
			// Token: 0x04005934 RID: 22836
			WarningFixTheInvalidRecipientFilterMetadata,
			// Token: 0x04005935 RID: 22837
			MsiCouldNotRemoveProduct,
			// Token: 0x04005936 RID: 22838
			ErrorServerNotCAS,
			// Token: 0x04005937 RID: 22839
			DataClassificationAmbiguousIdentity,
			// Token: 0x04005938 RID: 22840
			WarningFswNotPrimaryOrAlternate,
			// Token: 0x04005939 RID: 22841
			WarningGeneratingMissingAlias,
			// Token: 0x0400593A RID: 22842
			InvalidIdentityTypeForRemoveCmdletException,
			// Token: 0x0400593B RID: 22843
			CasHealthAutoDiscoveryBadUri,
			// Token: 0x0400593C RID: 22844
			RuleNotFound,
			// Token: 0x0400593D RID: 22845
			ServerComponentStateNoLocalOnly,
			// Token: 0x0400593E RID: 22846
			IPv6AddressesAreNotAllowedInGatewayIPAddressesId,
			// Token: 0x0400593F RID: 22847
			ServerVersionNotSupportedException,
			// Token: 0x04005940 RID: 22848
			ErrorMailboxResidesInRDB,
			// Token: 0x04005941 RID: 22849
			ErrorInvalidRecipientPreviewFilter,
			// Token: 0x04005942 RID: 22850
			ErrorIsUniversalGroupAlready,
			// Token: 0x04005943 RID: 22851
			ConfirmationMessageSetEcpVirtualDirectory,
			// Token: 0x04005944 RID: 22852
			ErrorRootFolderInvalid,
			// Token: 0x04005945 RID: 22853
			WarningServerIsNotInCasRole,
			// Token: 0x04005946 RID: 22854
			WarnInvalidCertificateForProtocol,
			// Token: 0x04005947 RID: 22855
			ConfirmationMessageSetAddressBookPolicy,
			// Token: 0x04005948 RID: 22856
			ErrorCannotBeExOWithoutDatacenter,
			// Token: 0x04005949 RID: 22857
			ErrorInvalidPartnerId,
			// Token: 0x0400594A RID: 22858
			InterceptorErrorInvalidConditionTypeValue,
			// Token: 0x0400594B RID: 22859
			ExceptionLogFileInvalid,
			// Token: 0x0400594C RID: 22860
			SmtpConnectivitySuccesses,
			// Token: 0x0400594D RID: 22861
			ErrorUserNotInSecurityGroups,
			// Token: 0x0400594E RID: 22862
			WarningCmdletIsDeprecated,
			// Token: 0x0400594F RID: 22863
			GenericRpcError,
			// Token: 0x04005950 RID: 22864
			UnexpectedRoleTypeException,
			// Token: 0x04005951 RID: 22865
			DoNotMoveImmediately,
			// Token: 0x04005952 RID: 22866
			ErrorDistributionListDepartClosed,
			// Token: 0x04005953 RID: 22867
			ConfirmationMessageEnableMailPublicFolder,
			// Token: 0x04005954 RID: 22868
			OutlookProviderAlreadyExists,
			// Token: 0x04005955 RID: 22869
			InvalidMessageDataClassification,
			// Token: 0x04005956 RID: 22870
			LogRunningCommand,
			// Token: 0x04005957 RID: 22871
			DagTaskRevertingFsw,
			// Token: 0x04005958 RID: 22872
			CustomizedDsnLanguageNotAvailable,
			// Token: 0x04005959 RID: 22873
			ConfirmationMessageSetOutlookProvider,
			// Token: 0x0400595A RID: 22874
			NodeEvictedAlready,
			// Token: 0x0400595B RID: 22875
			CouldNotCreateMsoSyncService,
			// Token: 0x0400595C RID: 22876
			MapiTransactionFailedSummary,
			// Token: 0x0400595D RID: 22877
			LogMigrationOutlookVersion,
			// Token: 0x0400595E RID: 22878
			SuspendSgcUseState,
			// Token: 0x0400595F RID: 22879
			ErrorDataClassificationIsInUse,
			// Token: 0x04005960 RID: 22880
			ErrorRecipientViewRootDuplicatedUnderScope,
			// Token: 0x04005961 RID: 22881
			RpcUnavailable,
			// Token: 0x04005962 RID: 22882
			ConfirmationMessageSetMigrationBatch,
			// Token: 0x04005963 RID: 22883
			FormsAuthenticationIsEnabledUnknownErrorException,
			// Token: 0x04005964 RID: 22884
			ErrorLinkedSidParameterNotAllowed,
			// Token: 0x04005965 RID: 22885
			ErrorRemoveNotDisconnectedStoreMailbox,
			// Token: 0x04005966 RID: 22886
			TSNotAMailboxServer,
			// Token: 0x04005967 RID: 22887
			ErrorMultipleSCTsLinked,
			// Token: 0x04005968 RID: 22888
			InvalidVersion,
			// Token: 0x04005969 RID: 22889
			CasHealthAutodiscoverIncorrectResult,
			// Token: 0x0400596A RID: 22890
			ErrorCannotRemoveMailboxSearchWithMailboxOnHold,
			// Token: 0x0400596B RID: 22891
			TransportServerCmdletDeprecated,
			// Token: 0x0400596C RID: 22892
			CasHealthWebAppNoVirtualDirectories,
			// Token: 0x0400596D RID: 22893
			ErrorInvalidOperationOnDefaultGAL,
			// Token: 0x0400596E RID: 22894
			FederationCertificateExpired,
			// Token: 0x0400596F RID: 22895
			InvalidIPv4AddressesAreNotAllowedInGatewayIPAddressesId,
			// Token: 0x04005970 RID: 22896
			ConfirmationMessageSetMailuserWithWindowsLiveID,
			// Token: 0x04005971 RID: 22897
			ConfirmationMessageDisableMailContact,
			// Token: 0x04005972 RID: 22898
			ExRBACSaveAddRoleEntry,
			// Token: 0x04005973 RID: 22899
			TenantNotificationTestConfirmationPrompt,
			// Token: 0x04005974 RID: 22900
			AmMoveRpcRequestedSourceServer,
			// Token: 0x04005975 RID: 22901
			ErrorFailedToSetMemberPassword,
			// Token: 0x04005976 RID: 22902
			ConfirmationMessageRemoveCompletedRequest,
			// Token: 0x04005977 RID: 22903
			RunCmdletOnUser,
			// Token: 0x04005978 RID: 22904
			NoSmtpAddressForRecipientId,
			// Token: 0x04005979 RID: 22905
			ErrorLastPublicFolderDatabaseWithPreE12,
			// Token: 0x0400597A RID: 22906
			CouldNotRemoveCompletedMoveRequest,
			// Token: 0x0400597B RID: 22907
			VerboseMailboxDelegateNotExits,
			// Token: 0x0400597C RID: 22908
			ConfirmationMessageRemoveTransportRule,
			// Token: 0x0400597D RID: 22909
			ErrorCouldNotAddCrossDomainGroupMember,
			// Token: 0x0400597E RID: 22910
			ErrorFailedToValidateCertificate,
			// Token: 0x0400597F RID: 22911
			ErrorWAAGNotExists,
			// Token: 0x04005980 RID: 22912
			UserFederatedDomainDoesNotMatchAccountNamespace,
			// Token: 0x04005981 RID: 22913
			ErrorInvalidOperationOnContainer,
			// Token: 0x04005982 RID: 22914
			CasHealthOwaAuthFailDetails,
			// Token: 0x04005983 RID: 22915
			DagTaskServerWrongOsVersionException,
			// Token: 0x04005984 RID: 22916
			ErrorHydrationDisabled,
			// Token: 0x04005985 RID: 22917
			VerboseVerifyingRootObject,
			// Token: 0x04005986 RID: 22918
			GetFederationInformationTokenIssuerDoesntMatchAny,
			// Token: 0x04005987 RID: 22919
			CasHealthDataValidationError,
			// Token: 0x04005988 RID: 22920
			FailedToDeletePublicFolderProxy,
			// Token: 0x04005989 RID: 22921
			ReportArchiveUpdated,
			// Token: 0x0400598A RID: 22922
			DlpPolicyNotSupportedCmdlet,
			// Token: 0x0400598B RID: 22923
			ErrorSetPublicFolderMailRecipientGuidLongTermIdNotMatch,
			// Token: 0x0400598C RID: 22924
			MtrtMessageSpamNonProvisionedDomain,
			// Token: 0x0400598D RID: 22925
			DagTaskCnoNotOnline,
			// Token: 0x0400598E RID: 22926
			ErrorSetScopeAddPermission,
			// Token: 0x0400598F RID: 22927
			PrintPatchOrderInfo,
			// Token: 0x04005990 RID: 22928
			ConfirmationMessageSetSystemMessage,
			// Token: 0x04005991 RID: 22929
			ErrorThrottlingPolicyNotUnique,
			// Token: 0x04005992 RID: 22930
			DisableWindowsLiveIdSpecifiedWithoutLiveID,
			// Token: 0x04005993 RID: 22931
			FailedDocumentsNoResultsServer,
			// Token: 0x04005994 RID: 22932
			ErrorMoreThanOneMailboxPlanWithSKUCapability,
			// Token: 0x04005995 RID: 22933
			SupportedToolsDataMultipleToolEntries,
			// Token: 0x04005996 RID: 22934
			ErrorIncrementalSyncIntervalRange,
			// Token: 0x04005997 RID: 22935
			TopologyServiceNoServersReturned,
			// Token: 0x04005998 RID: 22936
			AutoTaggingDisabled,
			// Token: 0x04005999 RID: 22937
			ErrorElcPolicyNotFound,
			// Token: 0x0400599A RID: 22938
			ConfirmationMessageSetMailbox,
			// Token: 0x0400599B RID: 22939
			MobileDeviceLogPathInvalid,
			// Token: 0x0400599C RID: 22940
			CasHealthWebAppTestStepStarted,
			// Token: 0x0400599D RID: 22941
			DagFswNotInitializedException,
			// Token: 0x0400599E RID: 22942
			AmMoveRpcRequestedAnyServerSourceServer,
			// Token: 0x0400599F RID: 22943
			UsingProbeIdentity,
			// Token: 0x040059A0 RID: 22944
			ConfirmationMessageNewThrottlingPolicy,
			// Token: 0x040059A1 RID: 22945
			ConfirmationMessageSetFederationTrust5,
			// Token: 0x040059A2 RID: 22946
			ClassificationRuleCollectionInvalidCompressedData,
			// Token: 0x040059A3 RID: 22947
			OutlookProbeIdentityNotFound,
			// Token: 0x040059A4 RID: 22948
			ErrorDefaultLocaleClassificationDoesNotExist,
			// Token: 0x040059A5 RID: 22949
			ConfirmationMessageDisableOutlookProtectionRule,
			// Token: 0x040059A6 RID: 22950
			ErrorRemoveMailboxPlanWithAssociatedRecipents,
			// Token: 0x040059A7 RID: 22951
			ConfirmationMessageSetFrontendTransportServer,
			// Token: 0x040059A8 RID: 22952
			GetQueueDigestQuotaExceeded,
			// Token: 0x040059A9 RID: 22953
			NeedManuallyRemoveEOA,
			// Token: 0x040059AA RID: 22954
			ErrorParametersThatMustBeDefinedIfNeitherTemplateNorTemplateDataAreDefined,
			// Token: 0x040059AB RID: 22955
			MigrationStartAfterIncorrectState,
			// Token: 0x040059AC RID: 22956
			RemoveComplianceSearchConfirmation,
			// Token: 0x040059AD RID: 22957
			SeederEndDbSeedRpcBegin,
			// Token: 0x040059AE RID: 22958
			LocalFederationConfigurationError,
			// Token: 0x040059AF RID: 22959
			ExternalScopeInvalidInDc,
			// Token: 0x040059B0 RID: 22960
			ErrorApproversNotSet,
			// Token: 0x040059B1 RID: 22961
			TestProtocolConnectivity,
			// Token: 0x040059B2 RID: 22962
			FailedToStopClusSvc,
			// Token: 0x040059B3 RID: 22963
			MesoContainerNotFoundException,
			// Token: 0x040059B4 RID: 22964
			VerbosePropertyProblem,
			// Token: 0x040059B5 RID: 22965
			VerboseValidateScopeAgainstExistingAssignments,
			// Token: 0x040059B6 RID: 22966
			ErrorServicePlanInconsistent2,
			// Token: 0x040059B7 RID: 22967
			RemovedDeviceFilter,
			// Token: 0x040059B8 RID: 22968
			ErrorOrganizationalUnitNotFound,
			// Token: 0x040059B9 RID: 22969
			GetMsoDiagnosticsLastCommittedCookieBeingUsed,
			// Token: 0x040059BA RID: 22970
			ExceptionServiceDoesNotExist,
			// Token: 0x040059BB RID: 22971
			ErrorInvalidSortProperty,
			// Token: 0x040059BC RID: 22972
			ErrorDagNotUnique,
			// Token: 0x040059BD RID: 22973
			RecoveryMailboxDatabaseNotMonitored,
			// Token: 0x040059BE RID: 22974
			ErrorConnectorNotTransportRuleScoped,
			// Token: 0x040059BF RID: 22975
			ComplianceSearchIsInProgress,
			// Token: 0x040059C0 RID: 22976
			ErrorRemoveNewerObject,
			// Token: 0x040059C1 RID: 22977
			InterceptorErrorModifyingNewerVersion,
			// Token: 0x040059C2 RID: 22978
			ErrorFailedToRetrieveMailboxDatabase,
			// Token: 0x040059C3 RID: 22979
			WarningForStillSuspended,
			// Token: 0x040059C4 RID: 22980
			ValueTooLargeException,
			// Token: 0x040059C5 RID: 22981
			VerboseValidatingAlternateServiceAccountCredential,
			// Token: 0x040059C6 RID: 22982
			CasHealthPowerShellServiceNotRunning,
			// Token: 0x040059C7 RID: 22983
			VerboseFixingRecipient,
			// Token: 0x040059C8 RID: 22984
			SearchSourceTargetTheSame,
			// Token: 0x040059C9 RID: 22985
			ErrorInvalidModerator,
			// Token: 0x040059CA RID: 22986
			DiscoveryMailboxQuotaLimitExceeded,
			// Token: 0x040059CB RID: 22987
			ConfirmationMessageSetManagementScope,
			// Token: 0x040059CC RID: 22988
			ConfirmationMessageSetUser,
			// Token: 0x040059CD RID: 22989
			SetComplianceSearchConfirmation,
			// Token: 0x040059CE RID: 22990
			ServerListMustBeValid,
			// Token: 0x040059CF RID: 22991
			ErrorSetMailPublicFolderEntryIdNotExist,
			// Token: 0x040059D0 RID: 22992
			InvalidIdentityException,
			// Token: 0x040059D1 RID: 22993
			ConfirmationMessageSetPublicFolderIdentity,
			// Token: 0x040059D2 RID: 22994
			RecipientTypeNotValid,
			// Token: 0x040059D3 RID: 22995
			WarningChangingUserSuppliedName,
			// Token: 0x040059D4 RID: 22996
			ErrorMovingOabAlreadyThere,
			// Token: 0x040059D5 RID: 22997
			ComplianceBindingInvalidRecipientType,
			// Token: 0x040059D6 RID: 22998
			VerboseDeprecatingRoleBecauseNoEntriesLeft,
			// Token: 0x040059D7 RID: 22999
			ConfirmationMessageStartProvisioningRequest,
			// Token: 0x040059D8 RID: 23000
			VerboseRPCConnectionCreated,
			// Token: 0x040059D9 RID: 23001
			VerboseAllPropertiesAreRead,
			// Token: 0x040059DA RID: 23002
			LiveIdAuthenticationFailed,
			// Token: 0x040059DB RID: 23003
			NoDomainsDefinedOnOrgRelationship,
			// Token: 0x040059DC RID: 23004
			CasActiveSyncServiceProblemMessage,
			// Token: 0x040059DD RID: 23005
			ErrorTooManyJournalRules,
			// Token: 0x040059DE RID: 23006
			ErrorInvalidFilterForAddressBook,
			// Token: 0x040059DF RID: 23007
			ErrorLiveIdAlreadyExists,
			// Token: 0x040059E0 RID: 23008
			WillSaveResourcePropertySchemaValue,
			// Token: 0x040059E1 RID: 23009
			SiteRedirectionTemplateVerbose,
			// Token: 0x040059E2 RID: 23010
			ErrorRemoteArchiveNoStats,
			// Token: 0x040059E3 RID: 23011
			MtrtMessageMalware,
			// Token: 0x040059E4 RID: 23012
			VerboseSettingPreferredServer,
			// Token: 0x040059E5 RID: 23013
			ConfirmationMessageTestMAPIConnectivityDatabase,
			// Token: 0x040059E6 RID: 23014
			ConfigurationSynchronized,
			// Token: 0x040059E7 RID: 23015
			BadwordsLengthTooLongId,
			// Token: 0x040059E8 RID: 23016
			CasHealthTestUserNotAccessible,
			// Token: 0x040059E9 RID: 23017
			IPv6AddressesAreNotAllowedInInternalServerIPAddressesId,
			// Token: 0x040059EA RID: 23018
			DagTaskSleepAfterNodeRemoval,
			// Token: 0x040059EB RID: 23019
			TestTeamMailboxSharepointCallUnderOauthSuccess,
			// Token: 0x040059EC RID: 23020
			ErrorRemoveNonLinkededUser,
			// Token: 0x040059ED RID: 23021
			ConfirmationMessageDisableConversations,
			// Token: 0x040059EE RID: 23022
			ConfirmationMessageSetOrganizationRelationship,
			// Token: 0x040059EF RID: 23023
			ComponentSection,
			// Token: 0x040059F0 RID: 23024
			ExceptionRunProcessExitIgnored,
			// Token: 0x040059F1 RID: 23025
			CasHealthIncorrectHttpResponseCode,
			// Token: 0x040059F2 RID: 23026
			AuditLogSearchInvalidSearchType,
			// Token: 0x040059F3 RID: 23027
			messagePassiveCopyUnexpectedSuccessException,
			// Token: 0x040059F4 RID: 23028
			RegistryAccessSecurityExceptionDelete,
			// Token: 0x040059F5 RID: 23029
			ErrorAddressBookMailboxPolicyNotFound,
			// Token: 0x040059F6 RID: 23030
			MissingMandatoryFieldException,
			// Token: 0x040059F7 RID: 23031
			WarningEnableEnabledRoleAssignment,
			// Token: 0x040059F8 RID: 23032
			VerboseCheckDatabaseStatus,
			// Token: 0x040059F9 RID: 23033
			NoLogsFound,
			// Token: 0x040059FA RID: 23034
			CutoverMigrationNotAllowed,
			// Token: 0x040059FB RID: 23035
			SupervisionListEntryAdded,
			// Token: 0x040059FC RID: 23036
			ErrorMaxMembershipLimit,
			// Token: 0x040059FD RID: 23037
			ToplogyserviceTopologyVersion,
			// Token: 0x040059FE RID: 23038
			TSResolutionFailed,
			// Token: 0x040059FF RID: 23039
			ConfirmationMessageNewMailboxWithRemoteArchive,
			// Token: 0x04005A00 RID: 23040
			DkmProvisioningException,
			// Token: 0x04005A01 RID: 23041
			MigrationSkipStepNotSupported,
			// Token: 0x04005A02 RID: 23042
			ConfirmationMessageNewRemoteDomain,
			// Token: 0x04005A03 RID: 23043
			ConfirmationMessageNewIntraOrganizationConnector,
			// Token: 0x04005A04 RID: 23044
			TestSearchGetCatalogStatusError,
			// Token: 0x04005A05 RID: 23045
			ErrorDatabaseHasLocalReplicas,
			// Token: 0x04005A06 RID: 23046
			ConfirmationMessageNewCountryList,
			// Token: 0x04005A07 RID: 23047
			VerboseWillStartOrganizationUpgrade,
			// Token: 0x04005A08 RID: 23048
			ErrorTeamMailboxRemoveWhenActive,
			// Token: 0x04005A09 RID: 23049
			ErrorGetServerNameFromMailbox,
			// Token: 0x04005A0A RID: 23050
			ConfirmationMessageDismountDatabase,
			// Token: 0x04005A0B RID: 23051
			InformationSqlConnection,
			// Token: 0x04005A0C RID: 23052
			ErrorMailboxFolderNotFound,
			// Token: 0x04005A0D RID: 23053
			ConfirmationMessageNewWorkloadManagementPolicy,
			// Token: 0x04005A0E RID: 23054
			ConfirmationMessageNewActiveSyncMailboxDefaultPolicy,
			// Token: 0x04005A0F RID: 23055
			ParsingFederationMetadata,
			// Token: 0x04005A10 RID: 23056
			FormsAuthenticationDeleteMarksIfUnusedPathNotFoundException,
			// Token: 0x04005A11 RID: 23057
			ComAdminComponentInstallFailedException,
			// Token: 0x04005A12 RID: 23058
			ExceptionCannotGetServiceHandle,
			// Token: 0x04005A13 RID: 23059
			ErrorRuleXmlTooBig,
			// Token: 0x04005A14 RID: 23060
			ConfirmationMessageRemoveMobileSyncVirtualDirectory,
			// Token: 0x04005A15 RID: 23061
			CopyDirectoriesException,
			// Token: 0x04005A16 RID: 23062
			ErrorOrganizationNotFound,
			// Token: 0x04005A17 RID: 23063
			ErrorSpecifiedPropertyOfRecoveryMailboxDatabaseCannotChange,
			// Token: 0x04005A18 RID: 23064
			CasHealthCouldNotLogUserDataCenter,
			// Token: 0x04005A19 RID: 23065
			ConfirmationMessageSetOabVirtualDirectory,
			// Token: 0x04005A1A RID: 23066
			ErrorObjectNotUnique,
			// Token: 0x04005A1B RID: 23067
			ConfirmationMessageAddIPAllowListEntryIPRange,
			// Token: 0x04005A1C RID: 23068
			ConfirmationMessageNewJournalrule,
			// Token: 0x04005A1D RID: 23069
			DomainIgnoredBecauseUnableToDiscover,
			// Token: 0x04005A1E RID: 23070
			CertificateRequestMissingGenerateRequest,
			// Token: 0x04005A1F RID: 23071
			ConfirmationMessageNewOutlookProvider,
			// Token: 0x04005A20 RID: 23072
			ScomMayNotBeInstalled,
			// Token: 0x04005A21 RID: 23073
			VerboseRemovingManagementWebServiceVDir,
			// Token: 0x04005A22 RID: 23074
			ErrorExchangeConfigurationContainerNotFound,
			// Token: 0x04005A23 RID: 23075
			AddingUniqueComponent,
			// Token: 0x04005A24 RID: 23076
			ErrorInvalidMailboxStatisticsFilter,
			// Token: 0x04005A25 RID: 23077
			ErrorBPARoleNotFound,
			// Token: 0x04005A26 RID: 23078
			ConfirmationMessageRemoveSharingPolicy,
			// Token: 0x04005A27 RID: 23079
			DagTaskServerDifferentExchangeVersion,
			// Token: 0x04005A28 RID: 23080
			TSMinServerVersion,
			// Token: 0x04005A29 RID: 23081
			VerboseDeleteMDB,
			// Token: 0x04005A2A RID: 23082
			TaskCanOnlyRunOnDac,
			// Token: 0x04005A2B RID: 23083
			IgnoringExpiredCertificate,
			// Token: 0x04005A2C RID: 23084
			ExchangeRecipientNotFound,
			// Token: 0x04005A2D RID: 23085
			TlsSenderCertificateNameMatchesServiceProviderCertificateId,
			// Token: 0x04005A2E RID: 23086
			ConfirmationMessageRemoveRetentionPolicyTag,
			// Token: 0x04005A2F RID: 23087
			ErrorPreferredServerUnavailable,
			// Token: 0x04005A30 RID: 23088
			ErrorTrustedPublishingDomainNotFound,
			// Token: 0x04005A31 RID: 23089
			ResettingPolicyIsNotSupported,
			// Token: 0x04005A32 RID: 23090
			ErrorFailedToQueryActiveServerForDatabase,
			// Token: 0x04005A33 RID: 23091
			WarningDistributionListDepartApprovalRequired,
			// Token: 0x04005A34 RID: 23092
			ErrorFailedToConnectToServer,
			// Token: 0x04005A35 RID: 23093
			ConfirmationMessageSetExchangeSettings,
			// Token: 0x04005A36 RID: 23094
			OwaInvalidIntegerFieldException,
			// Token: 0x04005A37 RID: 23095
			AgentNameTooLong,
			// Token: 0x04005A38 RID: 23096
			ErrorMustWriteToRidMaster,
			// Token: 0x04005A39 RID: 23097
			RemovedDeviceFilterRule,
			// Token: 0x04005A3A RID: 23098
			ErrorStringContainsTrailingSpace,
			// Token: 0x04005A3B RID: 23099
			ReceiveConnectorRoleConflict,
			// Token: 0x04005A3C RID: 23100
			VerboseServiceValidatorCredential,
			// Token: 0x04005A3D RID: 23101
			RuleCollectionNotFoundDuringExport,
			// Token: 0x04005A3E RID: 23102
			GetQueueDigestFailedToConnectTo,
			// Token: 0x04005A3F RID: 23103
			MailFlowPartnerNotExists,
			// Token: 0x04005A40 RID: 23104
			MoveMailboxDatabaseOffline,
			// Token: 0x04005A41 RID: 23105
			AlsEmailBodyEndDate,
			// Token: 0x04005A42 RID: 23106
			ConfirmationMessageTestArchiveConnectivityIdentity,
			// Token: 0x04005A43 RID: 23107
			ExtensionNotPST,
			// Token: 0x04005A44 RID: 23108
			CasHealthWebAppSendingRequest,
			// Token: 0x04005A45 RID: 23109
			ErrorMoveOabToNoMailboxServer,
			// Token: 0x04005A46 RID: 23110
			MoveMailboxUnexpectedReportingError,
			// Token: 0x04005A47 RID: 23111
			TransportServiceProblemMessage,
			// Token: 0x04005A48 RID: 23112
			ErrorMobileMailboxPolicyNotFound,
			// Token: 0x04005A49 RID: 23113
			ErrorSipUriInNonSipDialPlan,
			// Token: 0x04005A4A RID: 23114
			RecipientTypeInvalidException,
			// Token: 0x04005A4B RID: 23115
			ErrorInvalidExtension,
			// Token: 0x04005A4C RID: 23116
			SetCurrentOrganizationConfirmation,
			// Token: 0x04005A4D RID: 23117
			ErrorUserOrphaned,
			// Token: 0x04005A4E RID: 23118
			ErrorAcceptedDomainsWithSubdomains,
			// Token: 0x04005A4F RID: 23119
			ErrorAdminAuditLogConfig,
			// Token: 0x04005A50 RID: 23120
			ErrorOabVirtualDirectoryADObjectAlreadyExists,
			// Token: 0x04005A51 RID: 23121
			ExceptionWebObjectNotFound,
			// Token: 0x04005A52 RID: 23122
			ErrorRemoveArbitrationMailbox,
			// Token: 0x04005A53 RID: 23123
			ProtocolTransactionsFailed,
			// Token: 0x04005A54 RID: 23124
			ConfirmationMessageDisableMailboxQuarantine,
			// Token: 0x04005A55 RID: 23125
			RegistryAccessCouldNotCreateKeyException,
			// Token: 0x04005A56 RID: 23126
			InstallFreeBusyFolderAlreadyExistsInDatabase,
			// Token: 0x04005A57 RID: 23127
			ExServerSGroupLinkNotSetException,
			// Token: 0x04005A58 RID: 23128
			ErrorNoE12AttributeFound,
			// Token: 0x04005A59 RID: 23129
			MailboxSearchScopeException,
			// Token: 0x04005A5A RID: 23130
			ConfirmationMessageUpdateDatabaseCopyCancel,
			// Token: 0x04005A5B RID: 23131
			FailedMailboxQuarantine,
			// Token: 0x04005A5C RID: 23132
			ConfirmationMessageRemovePowerShellVirtualDirectory,
			// Token: 0x04005A5D RID: 23133
			NoneValidationDivergenceMustBeRetriable,
			// Token: 0x04005A5E RID: 23134
			ErrorCleanupRequestedNoRollback,
			// Token: 0x04005A5F RID: 23135
			ComplianceBindingNotFound,
			// Token: 0x04005A60 RID: 23136
			ErrorSupervisionTagNotValid,
			// Token: 0x04005A61 RID: 23137
			CreateMailboxSessionDetail,
			// Token: 0x04005A62 RID: 23138
			InvalidDlpPolicy,
			// Token: 0x04005A63 RID: 23139
			SharedConfigurationInfoNotPresent,
			// Token: 0x04005A64 RID: 23140
			ExchVirtualDirectoryCannotFindIdentity,
			// Token: 0x04005A65 RID: 23141
			WarningDisableDisabledRoleAssignment,
			// Token: 0x04005A66 RID: 23142
			ResumeSgcRpcRequest,
			// Token: 0x04005A67 RID: 23143
			USGContainerNotFoundException,
			// Token: 0x04005A68 RID: 23144
			WarningClientAccessArrayFqdnChanged,
			// Token: 0x04005A69 RID: 23145
			ErrorUnknownRole,
			// Token: 0x04005A6A RID: 23146
			DagTaskUpdatingAdDagMembership,
			// Token: 0x04005A6B RID: 23147
			ErrorInboundConnectorAlreadyExists,
			// Token: 0x04005A6C RID: 23148
			ErrorReadingServiceState,
			// Token: 0x04005A6D RID: 23149
			AIMDBWatermarksAreTooLow,
			// Token: 0x04005A6E RID: 23150
			CreateVirtualDirectoryADObjectFailure,
			// Token: 0x04005A6F RID: 23151
			ErrorTenantRelocationInProgress,
			// Token: 0x04005A70 RID: 23152
			ErrorPasswordBlank,
			// Token: 0x04005A71 RID: 23153
			NeedRemoveCopyLogFileManuallyAfterCopyDisabledRcr,
			// Token: 0x04005A72 RID: 23154
			AtatchmentExtensionMatchesWordsParameterContainsWordsThatStartWithDot,
			// Token: 0x04005A73 RID: 23155
			ConfirmationMessageDisableRemoteArchive,
			// Token: 0x04005A74 RID: 23156
			ConfirmSearchMailboxTask,
			// Token: 0x04005A75 RID: 23157
			CasHealthWebAppLiveIdResponseReceived,
			// Token: 0x04005A76 RID: 23158
			LogExsetdataReinstallingAtom,
			// Token: 0x04005A77 RID: 23159
			MemberAlreadyExistsException,
			// Token: 0x04005A78 RID: 23160
			ErrorAlsTooManyLogResults,
			// Token: 0x04005A79 RID: 23161
			SmtpConnectivityIncompleteEvent,
			// Token: 0x04005A7A RID: 23162
			ProtocolLogSubject,
			// Token: 0x04005A7B RID: 23163
			MtrtMessageRecieve,
			// Token: 0x04005A7C RID: 23164
			CannotBeBothValidationDivergenceAndTenantWideDivergence,
			// Token: 0x04005A7D RID: 23165
			ExchangeUpgradeBucketVersionsAreEqual,
			// Token: 0x04005A7E RID: 23166
			ErrorArchiveUserVersionTooOld,
			// Token: 0x04005A7F RID: 23167
			RestoreNeedsWitnessServer,
			// Token: 0x04005A80 RID: 23168
			ErrorSiteNotUnique,
			// Token: 0x04005A81 RID: 23169
			ConfirmationMessageRemoveOrganization,
			// Token: 0x04005A82 RID: 23170
			CasHealthCalendarResponseError,
			// Token: 0x04005A83 RID: 23171
			ConfirmationMessageRemoveFailedMSOSyncObject,
			// Token: 0x04005A84 RID: 23172
			CasHealthOwaTestPassed,
			// Token: 0x04005A85 RID: 23173
			ClassificationRuleCollectionIncorrectNumberOfDefaultInRuleResources,
			// Token: 0x04005A86 RID: 23174
			VerboseBuildAutoDiscoverUrl,
			// Token: 0x04005A87 RID: 23175
			ErrorCloudArchiveNeedsTargetIsArchiveSwitchForRestore,
			// Token: 0x04005A88 RID: 23176
			ErrorInvalidArbitrationMailbox,
			// Token: 0x04005A89 RID: 23177
			ErrorCannotMoveToTargetDatabaseAsConstraintsAreNotMet,
			// Token: 0x04005A8A RID: 23178
			ErrorRecipientViewRootNotFound,
			// Token: 0x04005A8B RID: 23179
			AppcmdNotFoundInPath,
			// Token: 0x04005A8C RID: 23180
			CrossPremiseProbeNdred,
			// Token: 0x04005A8D RID: 23181
			OutputDirectoryNotExist,
			// Token: 0x04005A8E RID: 23182
			TenantServiceInstanceNotSet,
			// Token: 0x04005A8F RID: 23183
			ConfirmationMessageNewMoveRequest,
			// Token: 0x04005A90 RID: 23184
			WarningNonZeroItemLimitMove,
			// Token: 0x04005A91 RID: 23185
			VerboseSettingViewEntireForest,
			// Token: 0x04005A92 RID: 23186
			AddDatabaseCopyNewCopyMustBeInDagException,
			// Token: 0x04005A93 RID: 23187
			ErrorBasicAndLiveIdBasicNotAllowedVDir,
			// Token: 0x04005A94 RID: 23188
			Error_InvalidLegacyRegionCode,
			// Token: 0x04005A95 RID: 23189
			CasHealthOwaErrorPageExceptionMessage,
			// Token: 0x04005A96 RID: 23190
			ConfirmationMessageRemoveCallAnsweringRule,
			// Token: 0x04005A97 RID: 23191
			AIMDBLastEventPollingThreadHung,
			// Token: 0x04005A98 RID: 23192
			ServiceHealthWmiFailure,
			// Token: 0x04005A99 RID: 23193
			ExchangeSettingsNotFoundForGroup,
			// Token: 0x04005A9A RID: 23194
			VerboseFoundAssigneeInConfigNC,
			// Token: 0x04005A9B RID: 23195
			ErrorDuplicatePartnerApplication,
			// Token: 0x04005A9C RID: 23196
			ADDUMInvalidLanguagePack,
			// Token: 0x04005A9D RID: 23197
			ErrorCannotRemoveUnorphanedMoveRequest,
			// Token: 0x04005A9E RID: 23198
			SetArbitrationMailboxConfirmationMessage,
			// Token: 0x04005A9F RID: 23199
			ConfirmationMessageStopDatabaseAvailabilityGroupServer,
			// Token: 0x04005AA0 RID: 23200
			AssemblyFileNotExist,
			// Token: 0x04005AA1 RID: 23201
			LanguagePackPerfCounterDeleteError,
			// Token: 0x04005AA2 RID: 23202
			FailedBecauseofDefaultAdministrativeGroupNotFoundException,
			// Token: 0x04005AA3 RID: 23203
			VerboseDeleteDBCopy,
			// Token: 0x04005AA4 RID: 23204
			WebProxy,
			// Token: 0x04005AA5 RID: 23205
			ServerNamesMustBeValid,
			// Token: 0x04005AA6 RID: 23206
			ErrorCannotMoveDiscoveryMailboxesCrossForest,
			// Token: 0x04005AA7 RID: 23207
			ErrorNotE14Server,
			// Token: 0x04005AA8 RID: 23208
			MobileDevicePolicyApplicationListTooLong,
			// Token: 0x04005AA9 RID: 23209
			ErrorManagedByAlreadyExisted,
			// Token: 0x04005AAA RID: 23210
			SeederAlreadyCompletedPrompt,
			// Token: 0x04005AAB RID: 23211
			InvalidCharacterInScriptFileName,
			// Token: 0x04005AAC RID: 23212
			ServerSchemaVersionRange,
			// Token: 0x04005AAD RID: 23213
			ErrorRemovedMailboxNotUnique,
			// Token: 0x04005AAE RID: 23214
			ErrorWillNotPerformOnInheritedAccessRight,
			// Token: 0x04005AAF RID: 23215
			MailboxSearchIsInProgress,
			// Token: 0x04005AB0 RID: 23216
			RemoveLiveFedUriReserveRequest,
			// Token: 0x04005AB1 RID: 23217
			MsiCouldNotGetProdcutProperty,
			// Token: 0x04005AB2 RID: 23218
			VerboseCreatingRoleAssignment,
			// Token: 0x04005AB3 RID: 23219
			ConfirmationMessageNewDatabaseAvailabilityGroupNetwork,
			// Token: 0x04005AB4 RID: 23220
			WarningInvalidParameterOrModifiedPropertyInAdminAuditLog,
			// Token: 0x04005AB5 RID: 23221
			ConfirmationMessageUploadUserPhoto,
			// Token: 0x04005AB6 RID: 23222
			ConfirmationMessageRemovePublicFolderClientPermission,
			// Token: 0x04005AB7 RID: 23223
			SendConnectorUndefinedServerRg,
			// Token: 0x04005AB8 RID: 23224
			ExportMigrationBatchStartingRowIndexOutOfBoundException,
			// Token: 0x04005AB9 RID: 23225
			FailedDocumentsResultsDatabase,
			// Token: 0x04005ABA RID: 23226
			ConfirmationMessageNewSyncRequest,
			// Token: 0x04005ABB RID: 23227
			messageDataCorruptionException,
			// Token: 0x04005ABC RID: 23228
			OnPremisesOrganizationInboundConnectorNotUnique,
			// Token: 0x04005ABD RID: 23229
			IisTasksCouldNotFindSetupRegistryValue,
			// Token: 0x04005ABE RID: 23230
			ConfirmationMessageSetRMSTPD,
			// Token: 0x04005ABF RID: 23231
			AlsEmailBodySubmitted,
			// Token: 0x04005AC0 RID: 23232
			DagMemberNoDatabasesString,
			// Token: 0x04005AC1 RID: 23233
			ErrorArchiveRecoveryArchiveNotFoundInStore,
			// Token: 0x04005AC2 RID: 23234
			InterceptorErrorExpireTimePassed,
			// Token: 0x04005AC3 RID: 23235
			ErrorExchangeUpgradeBucketNotUnique,
			// Token: 0x04005AC4 RID: 23236
			ErrorTargetMailboxNotFound,
			// Token: 0x04005AC5 RID: 23237
			ConfirmationMessageRecoveringSoftDeletedObject,
			// Token: 0x04005AC6 RID: 23238
			FailedToReEnrollTPD,
			// Token: 0x04005AC7 RID: 23239
			ErrorMailboxPlanNotFound,
			// Token: 0x04005AC8 RID: 23240
			ServerDatabaseAndPartnerScopesAreOnlyAllowedInTopOrg,
			// Token: 0x04005AC9 RID: 23241
			ErrorWMIException2,
			// Token: 0x04005ACA RID: 23242
			ConfirmationMessageNewAddressList,
			// Token: 0x04005ACB RID: 23243
			ExportNothingDeleteOnlyShouldExport,
			// Token: 0x04005ACC RID: 23244
			ADInitializationException,
			// Token: 0x04005ACD RID: 23245
			ErrorRecipientDoesNotHaveSpokenName,
			// Token: 0x04005ACE RID: 23246
			VerboseAddWSManConfigSection,
			// Token: 0x04005ACF RID: 23247
			WarningInvalidRuleCollectionADObject,
			// Token: 0x04005AD0 RID: 23248
			PreviousQueryTime,
			// Token: 0x04005AD1 RID: 23249
			ComAdminUnableToCreateApplicationException,
			// Token: 0x04005AD2 RID: 23250
			EdgeSubscriptionRequiresCAPICert,
			// Token: 0x04005AD3 RID: 23251
			ErrorDefaultPolicyCannotHaveRule,
			// Token: 0x04005AD4 RID: 23252
			VerboseTestUserIdentity,
			// Token: 0x04005AD5 RID: 23253
			ScopeIsNotAllowedForRole,
			// Token: 0x04005AD6 RID: 23254
			ConfirmationMessageSetIPAllowListProvider,
			// Token: 0x04005AD7 RID: 23255
			ResumeSgcUseRpc,
			// Token: 0x04005AD8 RID: 23256
			HostedSGContainerNotFoundException,
			// Token: 0x04005AD9 RID: 23257
			VerboseRestoreIISConfig,
			// Token: 0x04005ADA RID: 23258
			ErrorTeamMailFailedUnlinkSharePointSite,
			// Token: 0x04005ADB RID: 23259
			CasHealthWebAppSomeTransactionsFailed,
			// Token: 0x04005ADC RID: 23260
			ErrorFailedToMountReplicatedDbWithMissingEdbFile,
			// Token: 0x04005ADD RID: 23261
			ConfirmationMessageUpdateServicePlan,
			// Token: 0x04005ADE RID: 23262
			TowsDomainNotSsl,
			// Token: 0x04005ADF RID: 23263
			ErrorConnectSystemMailbox,
			// Token: 0x04005AE0 RID: 23264
			VerboseNoAssociatedUserMailboxOnDatabaseCondition,
			// Token: 0x04005AE1 RID: 23265
			ErrorInvalidEndpointParameter,
			// Token: 0x04005AE2 RID: 23266
			FederationCertificateHasNoPrivateKey,
			// Token: 0x04005AE3 RID: 23267
			InterceptorErrorCustomResponseCodeInvalid,
			// Token: 0x04005AE4 RID: 23268
			VerboseFixingVersion,
			// Token: 0x04005AE5 RID: 23269
			StopDagFailedException,
			// Token: 0x04005AE6 RID: 23270
			CannotLocateServer,
			// Token: 0x04005AE7 RID: 23271
			MailboxServerNotHostingMdbException,
			// Token: 0x04005AE8 RID: 23272
			InternalErrorException,
			// Token: 0x04005AE9 RID: 23273
			WarningJobIsPoisoned,
			// Token: 0x04005AEA RID: 23274
			VerboseOABVdirFound,
			// Token: 0x04005AEB RID: 23275
			TargetSharingEprNotSet,
			// Token: 0x04005AEC RID: 23276
			MtrtMessageTransportRule,
			// Token: 0x04005AED RID: 23277
			ConfirmationMessageRemoveMalwareFilterConfig,
			// Token: 0x04005AEE RID: 23278
			RemoveADServerMetadataServerNotFoundNative,
			// Token: 0x04005AEF RID: 23279
			RemovingPackageByProductCode,
			// Token: 0x04005AF0 RID: 23280
			TestRHUseCopyStatusRpc,
			// Token: 0x04005AF1 RID: 23281
			DisableConversationsRunning,
			// Token: 0x04005AF2 RID: 23282
			DuplicateTPDKeyId,
			// Token: 0x04005AF3 RID: 23283
			ConfirmationMessageNewEdgeSubscriptionWarnConfigObjectsWillBeDeleted,
			// Token: 0x04005AF4 RID: 23284
			ConfirmationMessageNewInterceptorRule,
			// Token: 0x04005AF5 RID: 23285
			ErrorE14TenantRulesNeedUpdateBeforeMigratingToE15,
			// Token: 0x04005AF6 RID: 23286
			ConfirmationMessageSetMailboxFolderPermission,
			// Token: 0x04005AF7 RID: 23287
			VerboseSetScopeValidateNewScopedAssignment,
			// Token: 0x04005AF8 RID: 23288
			ErrorDlpPolicyTemplateAlreadyInstalled,
			// Token: 0x04005AF9 RID: 23289
			ConfirmationMessageUpdateEmailAddressPolicy,
			// Token: 0x04005AFA RID: 23290
			ConfirmationMessageRemoveDatabaseAvailabilityGroupNetwork,
			// Token: 0x04005AFB RID: 23291
			MRSDiagnosticXmlParsingError,
			// Token: 0x04005AFC RID: 23292
			InvalidOrganizationGuid,
			// Token: 0x04005AFD RID: 23293
			VerboseMailboxDelegateSkipNotADUser,
			// Token: 0x04005AFE RID: 23294
			ErrorRecipientNotUnique,
			// Token: 0x04005AFF RID: 23295
			InPlaceHoldScopeException,
			// Token: 0x04005B00 RID: 23296
			ConfirmationMessageSetEdgeSyncEhfConnector,
			// Token: 0x04005B01 RID: 23297
			ConfirmationMessageAddAdminAuditLog,
			// Token: 0x04005B02 RID: 23298
			DurationShouldBeLessThan1Year,
			// Token: 0x04005B03 RID: 23299
			WarningSetMailboxSingleItemRecoveryDelay,
			// Token: 0x04005B04 RID: 23300
			MailboxReplicationServiceNotScanningForJobs,
			// Token: 0x04005B05 RID: 23301
			ErrorInvalidTenantGlsRecord,
			// Token: 0x04005B06 RID: 23302
			ErrorRecipientInSentToConditionCannotBeDistributionGroup,
			// Token: 0x04005B07 RID: 23303
			RestoreMailboxNotRecoveryDatabase,
			// Token: 0x04005B08 RID: 23304
			SchemaImportProcessFailure,
			// Token: 0x04005B09 RID: 23305
			GetFederationInformationShouldUseUnsecureRedirect,
			// Token: 0x04005B0A RID: 23306
			InvalidKeySize,
			// Token: 0x04005B0B RID: 23307
			VerboseDomainControllerIsNotGlobalCatelog,
			// Token: 0x04005B0C RID: 23308
			ConfirmationMessageRestoreDatabaseAvailabilityGroupADSite,
			// Token: 0x04005B0D RID: 23309
			VerboseDefaultOABIsOlderThanVersionE12,
			// Token: 0x04005B0E RID: 23310
			ErrorCannotDeleteGroupRoleAssignmentConstraint,
			// Token: 0x04005B0F RID: 23311
			ConfirmationMessageRemovePolicyTipConfig,
			// Token: 0x04005B10 RID: 23312
			VerboseCreatingChildVDir,
			// Token: 0x04005B11 RID: 23313
			ErrorObjectAlreadyExists,
			// Token: 0x04005B12 RID: 23314
			InvalidWKObjectTargetException,
			// Token: 0x04005B13 RID: 23315
			RegistryKeyNotFound,
			// Token: 0x04005B14 RID: 23316
			GlobalLocatorServiceExceptionThrown,
			// Token: 0x04005B15 RID: 23317
			ErrorNoGlobalGatalogFound,
			// Token: 0x04005B16 RID: 23318
			ClassificationRuleCollectionNonUniqueLangCodesInRuleDescription,
			// Token: 0x04005B17 RID: 23319
			ErrorMaxParameterLengthExceeded,
			// Token: 0x04005B18 RID: 23320
			ConfirmationChangePartitionTrust,
			// Token: 0x04005B19 RID: 23321
			ErrorADTopologyServiceNotAvailable,
			// Token: 0x04005B1A RID: 23322
			DagFswServerNotAccessibleToDeleteFswException,
			// Token: 0x04005B1B RID: 23323
			ErrorPermissionCheckFailure,
			// Token: 0x04005B1C RID: 23324
			ErrorUnknownAccessRights,
			// Token: 0x04005B1D RID: 23325
			FolderNameInvalidPathChars,
			// Token: 0x04005B1E RID: 23326
			InvalidAgentName,
			// Token: 0x04005B1F RID: 23327
			ConfirmationMessageEnableMailboxQuarantine,
			// Token: 0x04005B20 RID: 23328
			ConfirmationMessageRemoveJournalrule,
			// Token: 0x04005B21 RID: 23329
			TowsXForest,
			// Token: 0x04005B22 RID: 23330
			OwaAttachmentFileTypeInvalidCharacterException,
			// Token: 0x04005B23 RID: 23331
			FailedToRetrieveFederationMetadata,
			// Token: 0x04005B24 RID: 23332
			ConfirmationMessageRemoveActiveSyncDeviceClass,
			// Token: 0x04005B25 RID: 23333
			ConfirmationMessageRemoveADPermissionAccessRights,
			// Token: 0x04005B26 RID: 23334
			ErrorVdirNotExisted,
			// Token: 0x04005B27 RID: 23335
			ErrorUserOrSecurityGroupNotUnique,
			// Token: 0x04005B28 RID: 23336
			MailboxNotJunkRuleCapable,
			// Token: 0x04005B29 RID: 23337
			ServiceFailedToStop,
			// Token: 0x04005B2A RID: 23338
			ErrorVerificationCodeUnmatch,
			// Token: 0x04005B2B RID: 23339
			AgentLogNoLogsAtLocation,
			// Token: 0x04005B2C RID: 23340
			CasHealthOwaGetLogonPageStart,
			// Token: 0x04005B2D RID: 23341
			DagTaskNodeNotFoundTryConfigOnlyException,
			// Token: 0x04005B2E RID: 23342
			RunningAlwaysToRunComponent,
			// Token: 0x04005B2F RID: 23343
			NoPermissionToReadFile,
			// Token: 0x04005B30 RID: 23344
			ExchangeUpgradeBucketNotEnoughCapacity,
			// Token: 0x04005B31 RID: 23345
			VerboseRemovingRoleAssignment,
			// Token: 0x04005B32 RID: 23346
			ConfirmationMessageSetCountryList,
			// Token: 0x04005B33 RID: 23347
			ErrorDisableArbitrationMailboxWithOABsAssigned,
			// Token: 0x04005B34 RID: 23348
			VerboseResetAdministrativeGroup,
			// Token: 0x04005B35 RID: 23349
			ErrorMailboxDatabaseNotOnE14Sp1Server,
			// Token: 0x04005B36 RID: 23350
			AllAlternateServiceAccountCredentialsAreInvalidOnCleanup,
			// Token: 0x04005B37 RID: 23351
			TestSearchRunning,
			// Token: 0x04005B38 RID: 23352
			EnableConversationsProcessingConversations,
			// Token: 0x04005B39 RID: 23353
			ErrorMailboxNotUnique,
			// Token: 0x04005B3A RID: 23354
			ErrorCannotUpdateLegacyMailbox,
			// Token: 0x04005B3B RID: 23355
			RegistryValueMissingOrInvalidException,
			// Token: 0x04005B3C RID: 23356
			FailedToDeSerializeImportedTrustedPublishingDomain,
			// Token: 0x04005B3D RID: 23357
			TenantAlreadyHasMigrationDifferentProtocol,
			// Token: 0x04005B3E RID: 23358
			ErrorMailuserWithMultipleJournalArchive,
			// Token: 0x04005B3F RID: 23359
			ErrorUserOrContactNotFound,
			// Token: 0x04005B40 RID: 23360
			ConfirmationMessageNewDatabaseAvailabilityGroupConfiguration,
			// Token: 0x04005B41 RID: 23361
			CheckReportingServerDatabaseParameters,
			// Token: 0x04005B42 RID: 23362
			ErrorNoAutoGroupApprovalApplicationInOrg,
			// Token: 0x04005B43 RID: 23363
			WaitingForClusterServiceToStart,
			// Token: 0x04005B44 RID: 23364
			WarningApplyingTransitionWhileRelocationStatusNotReachedStateRequested,
			// Token: 0x04005B45 RID: 23365
			SeederCancelDbSeedRpcFailedException,
			// Token: 0x04005B46 RID: 23366
			ConfirmationMessageSetManagementRoleEntry,
			// Token: 0x04005B47 RID: 23367
			MailboxIsDownlevel,
			// Token: 0x04005B48 RID: 23368
			ConfirmationMessageNewGlobalAddressList,
			// Token: 0x04005B49 RID: 23369
			MoveFailedValidation,
			// Token: 0x04005B4A RID: 23370
			ErrorMoveActiveCopyNotFoundException,
			// Token: 0x04005B4B RID: 23371
			ExpirationTimeTooSoon,
			// Token: 0x04005B4C RID: 23372
			ConfirmationMessageNewRBACDefaultPolicy,
			// Token: 0x04005B4D RID: 23373
			RoleTaskCount,
			// Token: 0x04005B4E RID: 23374
			ErrorCannotFindDCForDomain,
			// Token: 0x04005B4F RID: 23375
			VerboseCheckLogFileExistingInPath,
			// Token: 0x04005B50 RID: 23376
			AlsEmailBodyStartDate,
			// Token: 0x04005B51 RID: 23377
			SearchCompletedCannotBeResumed,
			// Token: 0x04005B52 RID: 23378
			ErrorNoRemoteGlobalCatalogSettingForLocalMove,
			// Token: 0x04005B53 RID: 23379
			VerboseDefaultOABFound,
			// Token: 0x04005B54 RID: 23380
			InfoPreLIndividual,
			// Token: 0x04005B55 RID: 23381
			OnPremisesOrganizationOrganizationRelationshipNotExists,
			// Token: 0x04005B56 RID: 23382
			InvalidIntegrityCheckJobIdentity,
			// Token: 0x04005B57 RID: 23383
			ErrorAutomaticProvisioningFailedToFindDatabase,
			// Token: 0x04005B58 RID: 23384
			ErrorPartitionNotEnabledForProvisioning,
			// Token: 0x04005B59 RID: 23385
			RequiredDecryptionCertificate,
			// Token: 0x04005B5A RID: 23386
			ConfirmationMessageRemoveUser,
			// Token: 0x04005B5B RID: 23387
			InvalidReportingStartDate,
			// Token: 0x04005B5C RID: 23388
			ErrorReHomeTargetDatabaseLocationNotFound,
			// Token: 0x04005B5D RID: 23389
			GetQueueDigestSiteNotFound,
			// Token: 0x04005B5E RID: 23390
			ConfirmationMessageNewTopLevelManagementRole,
			// Token: 0x04005B5F RID: 23391
			PopImapSearchForTestMsg,
			// Token: 0x04005B60 RID: 23392
			ErrorDlpPolicyNotFound,
			// Token: 0x04005B61 RID: 23393
			ConfirmationMessageDisableTransportRule,
			// Token: 0x04005B62 RID: 23394
			LookupExtendedRightFailedException,
			// Token: 0x04005B63 RID: 23395
			ErrorRecipientViewRootNotFoundUnderScope,
			// Token: 0x04005B64 RID: 23396
			ErrorCannotChangeMailboxOutOfWriteScope,
			// Token: 0x04005B65 RID: 23397
			ConfirmationMessageRemoveDelegate,
			// Token: 0x04005B66 RID: 23398
			ErrorMailboxServerNotUnique,
			// Token: 0x04005B67 RID: 23399
			LogMigrationAfterApplyRUS,
			// Token: 0x04005B68 RID: 23400
			ErrorCannotCreateRoleAcrossOrganizations,
			// Token: 0x04005B69 RID: 23401
			ErrorAuthNewCertificateExpire,
			// Token: 0x04005B6A RID: 23402
			ExchangeCertificateUpdatedForUM,
			// Token: 0x04005B6B RID: 23403
			UnableToRemoveUserPhotoException,
			// Token: 0x04005B6C RID: 23404
			ErrorUnsupportedAssignmentMethod,
			// Token: 0x04005B6D RID: 23405
			ErrorGroupMembersCannotContainItself,
			// Token: 0x04005B6E RID: 23406
			ErrorPasswordTooShort,
			// Token: 0x04005B6F RID: 23407
			ErrorRequestIsProtected,
			// Token: 0x04005B70 RID: 23408
			ConfirmationMessageSetFederationTrust1,
			// Token: 0x04005B71 RID: 23409
			UserFederatedDomainInMultipleRemoteOrgRelationship,
			// Token: 0x04005B72 RID: 23410
			ConfirmationMessageAddMailboxFolderPermission,
			// Token: 0x04005B73 RID: 23411
			InfoWroteObjectToDC,
			// Token: 0x04005B74 RID: 23412
			ErrorOwaMailboxPolicyNotFound,
			// Token: 0x04005B75 RID: 23413
			NewFederationTrustSuccessAppId,
			// Token: 0x04005B76 RID: 23414
			ErrorCannotUpdateRecipientOfDomain,
			// Token: 0x04005B77 RID: 23415
			MapiTransactionDiagnosticStoreStateCheckFailure,
			// Token: 0x04005B78 RID: 23416
			ErrorDbCopyHostServerInvalid,
			// Token: 0x04005B79 RID: 23417
			ErrorInvalidMoveRequest,
			// Token: 0x04005B7A RID: 23418
			ConfirmationMessageRemoveMailContact,
			// Token: 0x04005B7B RID: 23419
			ConfirmationMessageStartMsoFullSync,
			// Token: 0x04005B7C RID: 23420
			ExceptionParameterSourceForestGlobalCatalog,
			// Token: 0x04005B7D RID: 23421
			ConfirmationMessageSetExchangeAssistanceId,
			// Token: 0x04005B7E RID: 23422
			OverrideNotFound,
			// Token: 0x04005B7F RID: 23423
			CreateUsgPermissionDeniedException,
			// Token: 0x04005B80 RID: 23424
			VerboseSettingWriteShadowProperties,
			// Token: 0x04005B81 RID: 23425
			ConfirmationMessageUpdateFDS,
			// Token: 0x04005B82 RID: 23426
			ErrorIISPathInvalid,
			// Token: 0x04005B83 RID: 23427
			CasHealthWebAppOrphanVirtualDirectory,
			// Token: 0x04005B84 RID: 23428
			ErrorOriginalEdbFilePathMissed,
			// Token: 0x04005B85 RID: 23429
			ErrorCannotCleanupSecondaryDomain,
			// Token: 0x04005B86 RID: 23430
			ErrorRemoveMailboxWithLitigationHold,
			// Token: 0x04005B87 RID: 23431
			ErrorCannotSetToOldClientAccessArray,
			// Token: 0x04005B88 RID: 23432
			ErrorUnableToUpdateGroupMailbox,
			// Token: 0x04005B89 RID: 23433
			ErrorNotActiveOrganization,
			// Token: 0x04005B8A RID: 23434
			ExceptionOccured,
			// Token: 0x04005B8B RID: 23435
			ErrorAssigneeComputerNotFound,
			// Token: 0x04005B8C RID: 23436
			ExportingMailbox,
			// Token: 0x04005B8D RID: 23437
			ConfirmationMessageAddRoleGroupMember,
			// Token: 0x04005B8E RID: 23438
			ErrorServicePlanDoesNotSupportPilot,
			// Token: 0x04005B8F RID: 23439
			ConfirmationMessageRemoveHostedContentFilterRule,
			// Token: 0x04005B90 RID: 23440
			ArchiveDatabaseDifferentFromRawValueError,
			// Token: 0x04005B91 RID: 23441
			ExportMailboxDiagnosticLogsComponentNotFound,
			// Token: 0x04005B92 RID: 23442
			TestMailflowSucceededNoDatabaseOnTargetServer,
			// Token: 0x04005B93 RID: 23443
			DirectoryMustBeEmpty,
			// Token: 0x04005B94 RID: 23444
			MailboxDatabaseCasImap4CasPop3CasWebServicesServiceProblemMessage,
			// Token: 0x04005B95 RID: 23445
			ConfirmationMessageNewSyncUser,
			// Token: 0x04005B96 RID: 23446
			SuspendSgcRpcRequest,
			// Token: 0x04005B97 RID: 23447
			ConfirmationMessageRemoveRBACPolicy,
			// Token: 0x04005B98 RID: 23448
			ErrorArrayRemovalMembership,
			// Token: 0x04005B99 RID: 23449
			AceIsUnsupportedTypeException,
			// Token: 0x04005B9A RID: 23450
			InvalidDateParameterException,
			// Token: 0x04005B9B RID: 23451
			ErrorSupervisionEntryNotPresent,
			// Token: 0x04005B9C RID: 23452
			DomainNotReachableException,
			// Token: 0x04005B9D RID: 23453
			ErrorNoArchiveForTeamMailbox,
			// Token: 0x04005B9E RID: 23454
			UnSupportedUMLanguageException,
			// Token: 0x04005B9F RID: 23455
			ErrorUnableToReleaseDomain,
			// Token: 0x04005BA0 RID: 23456
			ErrorActivateOnServerMustbeSpecifiedIfSkipChecksRequested,
			// Token: 0x04005BA1 RID: 23457
			ConfirmationMessageRemoveOwaVirtualDirectory,
			// Token: 0x04005BA2 RID: 23458
			WarningMailboxFolderPermissionUnchanged,
			// Token: 0x04005BA3 RID: 23459
			SetPublicFolderMailboxRehomeDatabaseConfirmationMessage,
			// Token: 0x04005BA4 RID: 23460
			AmbiguousOutlookProbeIdentity,
			// Token: 0x04005BA5 RID: 23461
			ProtocolConnectivityScenario,
			// Token: 0x04005BA6 RID: 23462
			RuleVersionIncompatible,
			// Token: 0x04005BA7 RID: 23463
			GetQueueDigestFailedToRetrieveADTopology,
			// Token: 0x04005BA8 RID: 23464
			ConfirmationMessageSetMservEntry,
			// Token: 0x04005BA9 RID: 23465
			ExchangeTracingProviderInstallFailed,
			// Token: 0x04005BAA RID: 23466
			ExceptionLogEntryLineInvalidFile,
			// Token: 0x04005BAB RID: 23467
			GetDagHealthInfoRequestTimedOut,
			// Token: 0x04005BAC RID: 23468
			VerboseUsingAssignmentAsTemplate,
			// Token: 0x04005BAD RID: 23469
			ErrorCreateRoomListSecurityGroup,
			// Token: 0x04005BAE RID: 23470
			ErrorCannotForceRusResetConfiguration,
			// Token: 0x04005BAF RID: 23471
			ErrorSpecifiedMailboxShouldBeAuditLogMailbox,
			// Token: 0x04005BB0 RID: 23472
			SendConnectorDuplicateTargetServerException,
			// Token: 0x04005BB1 RID: 23473
			ErrorFailedToRestoreDatabaseStatus,
			// Token: 0x04005BB2 RID: 23474
			WarningTooManyDefaultGALs,
			// Token: 0x04005BB3 RID: 23475
			InvalidSubscription,
			// Token: 0x04005BB4 RID: 23476
			InvalidRuleSearchFilter,
			// Token: 0x04005BB5 RID: 23477
			ConfirmationMessageAddIPBlockListEntryIPAddress,
			// Token: 0x04005BB6 RID: 23478
			OutlookProtectionRuleRmsTemplateNotUnique,
			// Token: 0x04005BB7 RID: 23479
			ConfirmationMessageNewRetentionTag,
			// Token: 0x04005BB8 RID: 23480
			ConfirmationMessageDisableMailbox,
			// Token: 0x04005BB9 RID: 23481
			ConfirmationMessageRemoveMailboxIdentity,
			// Token: 0x04005BBA RID: 23482
			ErrorUnsupportedRecipientScopeType,
			// Token: 0x04005BBB RID: 23483
			ConfirmRemoveIndexEntryMissingADData,
			// Token: 0x04005BBC RID: 23484
			ErrorTeamMailboxChangeByNonMember,
			// Token: 0x04005BBD RID: 23485
			FailedToGetLogs,
			// Token: 0x04005BBE RID: 23486
			WarningMultipleStreamForFingerprint,
			// Token: 0x04005BBF RID: 23487
			WarningNoMonitoringTenant,
			// Token: 0x04005BC0 RID: 23488
			ConfirmationMessageSetAutoTagging,
			// Token: 0x04005BC1 RID: 23489
			ErrorTenantRetentionTagLimitReached,
			// Token: 0x04005BC2 RID: 23490
			ConfirmationMessageMailboxSpellingConfiguration,
			// Token: 0x04005BC3 RID: 23491
			ErrorScopeExclusive,
			// Token: 0x04005BC4 RID: 23492
			VerboseSetScopeValidateRemoveOriginalScopedAssignment,
			// Token: 0x04005BC5 RID: 23493
			VerboseRemoveWorkloadManagementPolicy,
			// Token: 0x04005BC6 RID: 23494
			ErrorSimilarWorkloadPolicyExist,
			// Token: 0x04005BC7 RID: 23495
			DagFswInsufficientPermissionsToDeleteFswException,
			// Token: 0x04005BC8 RID: 23496
			ConfirmationMessageSetRoleGroup,
			// Token: 0x04005BC9 RID: 23497
			ConfirmationTurnOffLitigationHold,
			// Token: 0x04005BCA RID: 23498
			ConfirmationMessageSetHostedConnectionFilterRule,
			// Token: 0x04005BCB RID: 23499
			CasHealthEcpTestWebService,
			// Token: 0x04005BCC RID: 23500
			MigrationUserLimitExceeded,
			// Token: 0x04005BCD RID: 23501
			CasHealthOwaHttpGetNonOkayForPing,
			// Token: 0x04005BCE RID: 23502
			ConfirmationMessageDisableRpcHttp,
			// Token: 0x04005BCF RID: 23503
			ErrorIncrementalMergesRequireSuspendWhenReadyToComplete,
			// Token: 0x04005BD0 RID: 23504
			ErrorFailedToMoveDatabaseSystemFiles,
			// Token: 0x04005BD1 RID: 23505
			WritableServerNotFound,
			// Token: 0x04005BD2 RID: 23506
			AddAccessRuleCryptographic,
			// Token: 0x04005BD3 RID: 23507
			ErrorCannotRetargetArchiveForPrimaryOnlyMoves,
			// Token: 0x04005BD4 RID: 23508
			ErrorCannotDeleteReplayState,
			// Token: 0x04005BD5 RID: 23509
			InvalidRecipientForModerationAction,
			// Token: 0x04005BD6 RID: 23510
			ErrorFolderFilterInvalid,
			// Token: 0x04005BD7 RID: 23511
			TestSearchADError,
			// Token: 0x04005BD8 RID: 23512
			SeederServerLevelBeginCalled,
			// Token: 0x04005BD9 RID: 23513
			ErrorEdbFilePathOccupiedByDirectory,
			// Token: 0x04005BDA RID: 23514
			ErrorAcceptedDomainsInvalidType,
			// Token: 0x04005BDB RID: 23515
			messageMailboxNotFoundException,
			// Token: 0x04005BDC RID: 23516
			EdgeAndHubSharingSameDirectTrustCertNotAllowed,
			// Token: 0x04005BDD RID: 23517
			FailedToReadDatabaseSchemaVersionInformationForServer,
			// Token: 0x04005BDE RID: 23518
			IncompleteParameterGroup,
			// Token: 0x04005BDF RID: 23519
			ConfirmationMessageRemoveHostedConnectionFilterPolicy,
			// Token: 0x04005BE0 RID: 23520
			ErrorInvalidEapSetPriority,
			// Token: 0x04005BE1 RID: 23521
			ConfirmationMessageDisableMalwareFilterRule,
			// Token: 0x04005BE2 RID: 23522
			CookieVersionUnsupportedException,
			// Token: 0x04005BE3 RID: 23523
			DagTaskClusteringShouldBeEnabledException,
			// Token: 0x04005BE4 RID: 23524
			InfoGetUL,
			// Token: 0x04005BE5 RID: 23525
			UMCallAnsweringRuleScheduleStatus,
			// Token: 0x04005BE6 RID: 23526
			ErrorNotSupportedFolderClass,
			// Token: 0x04005BE7 RID: 23527
			MoreThanOneObjects,
			// Token: 0x04005BE8 RID: 23528
			ErrorTestMailboxPasswordNotFound,
			// Token: 0x04005BE9 RID: 23529
			IisUtilityWebObjectNotCreatedException,
			// Token: 0x04005BEA RID: 23530
			ClassificationRuleCollectionSharingViolationRemoveOperationVerbose,
			// Token: 0x04005BEB RID: 23531
			ConstraintUpgrade,
			// Token: 0x04005BEC RID: 23532
			ConfirmationMessageEnableRemoteMailbox,
			// Token: 0x04005BED RID: 23533
			OwaFbaConfigurationPublicTimeoutMustBeLessThanOrEqualToPrivateTimeoutException,
			// Token: 0x04005BEE RID: 23534
			ErrorOrgsStillUsingThisTrust,
			// Token: 0x04005BEF RID: 23535
			ErrorWinRMCmdNotFound,
			// Token: 0x04005BF0 RID: 23536
			WarningFswNotFound,
			// Token: 0x04005BF1 RID: 23537
			ErrorSecondaryPartitionNotEnabledForProvisioning,
			// Token: 0x04005BF2 RID: 23538
			ErrorLiveIdError,
			// Token: 0x04005BF3 RID: 23539
			ConversationsItemWithoutConversationId,
			// Token: 0x04005BF4 RID: 23540
			ErrorSetTeamMailboxUserPermissions,
			// Token: 0x04005BF5 RID: 23541
			ErrorAuthSchemeExists,
			// Token: 0x04005BF6 RID: 23542
			ProcessStandardOutput,
			// Token: 0x04005BF7 RID: 23543
			ErrorCannotRetargetOutboundMoves,
			// Token: 0x04005BF8 RID: 23544
			SmtpConnectivitySuccessEvent,
			// Token: 0x04005BF9 RID: 23545
			DagTaskClusterNameIsNotDagNameException,
			// Token: 0x04005BFA RID: 23546
			ConfirmationMessageNewRemoteAccountPolicy,
			// Token: 0x04005BFB RID: 23547
			AdminAuditLogsLocationNotFound,
			// Token: 0x04005BFC RID: 23548
			ErrorMailboxIsConnected,
			// Token: 0x04005BFD RID: 23549
			ErrorDefaultDomainNotFound,
			// Token: 0x04005BFE RID: 23550
			VerboseReadADSecurityDescriptor,
			// Token: 0x04005BFF RID: 23551
			InvalidIntegerFieldException,
			// Token: 0x04005C00 RID: 23552
			ConfirmationMessageSetSyncConfig,
			// Token: 0x04005C01 RID: 23553
			ErrorEntryNotInRecipientOrg,
			// Token: 0x04005C02 RID: 23554
			MemberNotFoundException,
			// Token: 0x04005C03 RID: 23555
			VerboseResetRecoveryDatabase,
			// Token: 0x04005C04 RID: 23556
			ErrorExchangeAdministratorsGroupNotFound,
			// Token: 0x04005C05 RID: 23557
			ConfirmationMessageConnectMailboxResource,
			// Token: 0x04005C06 RID: 23558
			DomainIsParameterInvalid,
			// Token: 0x04005C07 RID: 23559
			InvalidUMProxyAddressException,
			// Token: 0x04005C08 RID: 23560
			ConfirmationMessageSetOrganization,
			// Token: 0x04005C09 RID: 23561
			ErrorTenantRetentionPolicyLimitReached,
			// Token: 0x04005C0A RID: 23562
			ConfirmationMessageRemoveMobileMailboxPolicy,
			// Token: 0x04005C0B RID: 23563
			ErrorUserNotUnique,
			// Token: 0x04005C0C RID: 23564
			ErrorEmptyManagementSiteLink,
			// Token: 0x04005C0D RID: 23565
			InvalidArgumentForServerRoleException,
			// Token: 0x04005C0E RID: 23566
			ConfirmationMessageEnableJournalrule,
			// Token: 0x04005C0F RID: 23567
			ConfirmationMessageRemoveRoleGroup,
			// Token: 0x04005C10 RID: 23568
			ConfirmationMessageSetThrottlingPolicyAssociationToNull,
			// Token: 0x04005C11 RID: 23569
			WarningMonitoringTenantNotActive,
			// Token: 0x04005C12 RID: 23570
			SmtpConnectivityEndPointResult,
			// Token: 0x04005C13 RID: 23571
			ClassificationRuleCollectionNumberExceedLimit,
			// Token: 0x04005C14 RID: 23572
			ExRBACSaveRemoveRoleEntry,
			// Token: 0x04005C15 RID: 23573
			UMCallAnsweringRuleFindMeWithoutContext,
			// Token: 0x04005C16 RID: 23574
			VerboseFailedRemoveGalDNInExchangeContainer,
			// Token: 0x04005C17 RID: 23575
			ClassificationRuleCollectionNonUniqueLangCodesInRuleName,
			// Token: 0x04005C18 RID: 23576
			ConfirmationMessageRestoreDatabaseAvailabilityGroup,
			// Token: 0x04005C19 RID: 23577
			RemoveOwaVirtualDirectoryCannotDisambiguateException,
			// Token: 0x04005C1A RID: 23578
			ConfirmationMessageClearMobileDevice,
			// Token: 0x04005C1B RID: 23579
			ErrorScopeOutOfRoleScope,
			// Token: 0x04005C1C RID: 23580
			CannotEditLegacySearchObjectWithoutUpgrade,
			// Token: 0x04005C1D RID: 23581
			WarningNewAdminAuditLogSearchOnPreR5,
			// Token: 0x04005C1E RID: 23582
			ConfirmationMessageRemoveHostedContentFilterConfig,
			// Token: 0x04005C1F RID: 23583
			ErrorNullParameter,
			// Token: 0x04005C20 RID: 23584
			AlsSubjectAdmin,
			// Token: 0x04005C21 RID: 23585
			ConfirmationMessageNewEmailAddressPolicyAllTemplatesWithPrecannedFilter,
			// Token: 0x04005C22 RID: 23586
			ErrorFailedToCreateExchangeOabFolder,
			// Token: 0x04005C23 RID: 23587
			ErrorEmailTextBig,
			// Token: 0x04005C24 RID: 23588
			ExceptionLogEntryLineInvalid,
			// Token: 0x04005C25 RID: 23589
			ConfirmationMessageSetFederatedDomain,
			// Token: 0x04005C26 RID: 23590
			WarningShouldWriteToRidMaster,
			// Token: 0x04005C27 RID: 23591
			ConflictingAcceptedDomain,
			// Token: 0x04005C28 RID: 23592
			InterceptorConfirmEntireForestRule,
			// Token: 0x04005C29 RID: 23593
			GenericError,
			// Token: 0x04005C2A RID: 23594
			ConfirmationMessageRemoveMailboxDatabaseCopy,
			// Token: 0x04005C2B RID: 23595
			TaskNotSupportedOnVersionException,
			// Token: 0x04005C2C RID: 23596
			ConfirmationMessageNewSystemMessageDsn,
			// Token: 0x04005C2D RID: 23597
			EnableConversationsRunning,
			// Token: 0x04005C2E RID: 23598
			InfoIsNotMemberOfGroup,
			// Token: 0x04005C2F RID: 23599
			ErrorNoCASServersInSite,
			// Token: 0x04005C30 RID: 23600
			ExceptionWhileWritingOutputFile,
			// Token: 0x04005C31 RID: 23601
			StandaloneMailboxString,
			// Token: 0x04005C32 RID: 23602
			ErrorDuringTaskExecution,
			// Token: 0x04005C33 RID: 23603
			ErrorOnlyOneProvisioningPolicyAllowed,
			// Token: 0x04005C34 RID: 23604
			ErrorSetGroupRoleAssignment,
			// Token: 0x04005C35 RID: 23605
			ConfirmationMessageEnableLiveId,
			// Token: 0x04005C36 RID: 23606
			ErrorPublicFolderReferralServerHasNoPublicFolderDatabase,
			// Token: 0x04005C37 RID: 23607
			ErrorConflictingRestrictionParameters,
			// Token: 0x04005C38 RID: 23608
			VerboseRemovingRoleAssignmentPolicy,
			// Token: 0x04005C39 RID: 23609
			ErrorIndividualRecipientNeeded,
			// Token: 0x04005C3A RID: 23610
			ErrorWrongRoleAssignmentUserType,
			// Token: 0x04005C3B RID: 23611
			MsiCouldNotRemoveProductDetailed,
			// Token: 0x04005C3C RID: 23612
			TenantScopedInboundConnectorRequiredForCMCConnector,
			// Token: 0x04005C3D RID: 23613
			CorruptRuleCollection,
			// Token: 0x04005C3E RID: 23614
			RequestAlreadySuspended,
			// Token: 0x04005C3F RID: 23615
			ErrorTargetPartitionHasTenantWithSameId,
			// Token: 0x04005C40 RID: 23616
			ConfirmationMessageMailboxCalendarFolder,
			// Token: 0x04005C41 RID: 23617
			InvalidAdSite,
			// Token: 0x04005C42 RID: 23618
			ErrorTenantRelocationNotAllowed,
			// Token: 0x04005C43 RID: 23619
			CasHealthShortErrorMsgFromException,
			// Token: 0x04005C44 RID: 23620
			ConfirmationMessageSetMailContact,
			// Token: 0x04005C45 RID: 23621
			ConfirmRetentionPolicyAllowed,
			// Token: 0x04005C46 RID: 23622
			FailedToDeleteTempEdbFile,
			// Token: 0x04005C47 RID: 23623
			UnableToAddCertificateToRootStore,
			// Token: 0x04005C48 RID: 23624
			ExceptionExsetdataGetMessageError,
			// Token: 0x04005C49 RID: 23625
			WarningOabSiteFolderCheckNotRun,
			// Token: 0x04005C4A RID: 23626
			ConfirmationMessageAddDistributionGroupMember,
			// Token: 0x04005C4B RID: 23627
			ErrorResourceRoomOrEquipmentOnly,
			// Token: 0x04005C4C RID: 23628
			OnlineIsIntegQueryJobException,
			// Token: 0x04005C4D RID: 23629
			ConfirmationMessageSetRequest,
			// Token: 0x04005C4E RID: 23630
			WarningParametersIgnored,
			// Token: 0x04005C4F RID: 23631
			RemovingIndexEntry,
			// Token: 0x04005C50 RID: 23632
			ProtocolSettingsFullDetails,
			// Token: 0x04005C51 RID: 23633
			WarningCannotUpgradeRole,
			// Token: 0x04005C52 RID: 23634
			CasConnectivityTaskTimeout,
			// Token: 0x04005C53 RID: 23635
			ErrorInvalidAddOperationOnDBCopyForCircularLoggingEnabledDB,
			// Token: 0x04005C54 RID: 23636
			ConfirmationMessageNewMailboxRestoreRequest,
			// Token: 0x04005C55 RID: 23637
			ErrorInvalidOperationOnMoveMasterForPublicFolder,
			// Token: 0x04005C56 RID: 23638
			WarningLinkingWLMPolicyToLocalServerFailed,
			// Token: 0x04005C57 RID: 23639
			ErrorCannotStartPilotFOrOrgBeingUpgraded,
			// Token: 0x04005C58 RID: 23640
			SearchingForCertificateBySubject,
			// Token: 0x04005C59 RID: 23641
			ConfirmationMessageRestoreDetailsTemplate,
			// Token: 0x04005C5A RID: 23642
			ErrorCannotUpdateInvalidRecipient,
			// Token: 0x04005C5B RID: 23643
			VerificationOfRemoteOrganizationRelationshipFailed,
			// Token: 0x04005C5C RID: 23644
			CasHealthTestUserInDataCenterNotAccessible,
			// Token: 0x04005C5D RID: 23645
			ConfirmationMessageSetMessageClassification,
			// Token: 0x04005C5E RID: 23646
			ErrorFileNotFound,
			// Token: 0x04005C5F RID: 23647
			ErrorRemoveMailboxIsJournalReportNdrTo,
			// Token: 0x04005C60 RID: 23648
			ErrorInvalidFilterForLowestEap,
			// Token: 0x04005C61 RID: 23649
			IPListProviderNameExists,
			// Token: 0x04005C62 RID: 23650
			ErrorRoleEntryNotExistOnParent,
			// Token: 0x04005C63 RID: 23651
			ConfirmationMessageStopMailboxSearch,
			// Token: 0x04005C64 RID: 23652
			WarningSearchAdminAuditLogOnPreR5,
			// Token: 0x04005C65 RID: 23653
			WarningRetentionTagIdChange,
			// Token: 0x04005C66 RID: 23654
			TestSearchCreateMessage,
			// Token: 0x04005C67 RID: 23655
			SgcFailedToSuspendRpc,
			// Token: 0x04005C68 RID: 23656
			ErrorSupervisionEntryAlreadyPresent,
			// Token: 0x04005C69 RID: 23657
			WrongNumberOfTokens,
			// Token: 0x04005C6A RID: 23658
			TTNameWithNonTTServiceplan,
			// Token: 0x04005C6B RID: 23659
			WritableDatabaseNotUnique,
			// Token: 0x04005C6C RID: 23660
			ErrorInvalidFilterForDefaultGlobalAddressList,
			// Token: 0x04005C6D RID: 23661
			ConfirmationMessageSetOfflineAddressBook,
			// Token: 0x04005C6E RID: 23662
			ErrorNoMailboxPlanWithSKUCapability,
			// Token: 0x04005C6F RID: 23663
			MobileDeviceLogPath,
			// Token: 0x04005C70 RID: 23664
			PerfCounterDefinition,
			// Token: 0x04005C71 RID: 23665
			CasHealthWebServicesException,
			// Token: 0x04005C72 RID: 23666
			OnPremisesOrganizationOrganizationRelationshipNotUnique,
			// Token: 0x04005C73 RID: 23667
			CasHealthCouldNotLogUserDataCenterNoDetailedInfo,
			// Token: 0x04005C74 RID: 23668
			ConfirmationMessageStopMigrationBatch,
			// Token: 0x04005C75 RID: 23669
			OriginalUriVerbose,
			// Token: 0x04005C76 RID: 23670
			PromptFileNotFoundException,
			// Token: 0x04005C77 RID: 23671
			ExceptionTargetMailboxNotFound,
			// Token: 0x04005C78 RID: 23672
			IdentityWasNotInValidFormat,
			// Token: 0x04005C79 RID: 23673
			CannotStartRunningSearch,
			// Token: 0x04005C7A RID: 23674
			ErrorManagedMemberNotExists,
			// Token: 0x04005C7B RID: 23675
			MonitoringItemAlreadyHasGlobalOverride,
			// Token: 0x04005C7C RID: 23676
			ErrorReadingUpdatedUserFromAD,
			// Token: 0x04005C7D RID: 23677
			CasHealthTestUserOnIncorrectServer,
			// Token: 0x04005C7E RID: 23678
			CrossPremiseServerNotSelected,
			// Token: 0x04005C7F RID: 23679
			ErrorRemovedMailboxCannotBeUsedWithDatabaseParameter,
			// Token: 0x04005C80 RID: 23680
			ConfirmationMessageNewDynamicDistributionGroupCustomFilter,
			// Token: 0x04005C81 RID: 23681
			ServiceNotInstalled,
			// Token: 0x04005C82 RID: 23682
			MultipleDefaultPoliciesExist,
			// Token: 0x04005C83 RID: 23683
			ConfirmationMessageNewPublicFolderMailboxMigrationRequest,
			// Token: 0x04005C84 RID: 23684
			TestSearchCIIsDisabled,
			// Token: 0x04005C85 RID: 23685
			SafeRecipientsNotUpdated,
			// Token: 0x04005C86 RID: 23686
			InstructResetCredentials,
			// Token: 0x04005C87 RID: 23687
			ErrorExchangeConfigurationContainerNotUnique,
			// Token: 0x04005C88 RID: 23688
			VerboseArchiveNotExistInStore,
			// Token: 0x04005C89 RID: 23689
			ErrorAmbiguousElcFolderId,
			// Token: 0x04005C8A RID: 23690
			SendConnectorWrongSourceServerRole,
			// Token: 0x04005C8B RID: 23691
			ClassificationRuleCollectionFingerprintsExceedLimit,
			// Token: 0x04005C8C RID: 23692
			ErrorInvalidAddOperationDatabaseIsNotMounted,
			// Token: 0x04005C8D RID: 23693
			ConfirmationMessageRemoveTeamMailboxProvisioningPolicy,
			// Token: 0x04005C8E RID: 23694
			RequestingFederationMetadataFromEndPoint,
			// Token: 0x04005C8F RID: 23695
			VerboseDeleteFile,
			// Token: 0x04005C90 RID: 23696
			MRSProxyPingSkipped,
			// Token: 0x04005C91 RID: 23697
			StampExistingResponsePassThroughOnVirtualDirectoryFailure,
			// Token: 0x04005C92 RID: 23698
			ConfirmationMessageNewPublicFolder,
			// Token: 0x04005C93 RID: 23699
			ConfirmationMessageImportRecipientDataProperty,
			// Token: 0x04005C94 RID: 23700
			ErrorPreE12TargetConfigurationOnly,
			// Token: 0x04005C95 RID: 23701
			ConfirmationMessageAddRecipientPermission,
			// Token: 0x04005C96 RID: 23702
			RegistryAccessSecurityExceptionWrite,
			// Token: 0x04005C97 RID: 23703
			CasHealthWebAppRequestException,
			// Token: 0x04005C98 RID: 23704
			MoveMailboxShouldMoveE14ToLowerVersion,
			// Token: 0x04005C99 RID: 23705
			TlsSenderCertificateNameMatchesFfoFDSmtpCertificateId,
			// Token: 0x04005C9A RID: 23706
			PerfCounterFileInUse,
			// Token: 0x04005C9B RID: 23707
			ErrorFailToDeleteDueToSubFolders,
			// Token: 0x04005C9C RID: 23708
			ErrorPrimaryTargetIsNotAnMEU,
			// Token: 0x04005C9D RID: 23709
			EtrHasRmsAction,
			// Token: 0x04005C9E RID: 23710
			ErrorSubmitCommandInvalid,
			// Token: 0x04005C9F RID: 23711
			ConfirmationMessageNewRoleGroup,
			// Token: 0x04005CA0 RID: 23712
			DagTaskRemovingNodeToCluster,
			// Token: 0x04005CA1 RID: 23713
			WarningEdbFileLocationNotExists,
			// Token: 0x04005CA2 RID: 23714
			RequestNotSuspended,
			// Token: 0x04005CA3 RID: 23715
			InvalidForeignForestGroupException,
			// Token: 0x04005CA4 RID: 23716
			VerboseServiceValidatorResponseTrace,
			// Token: 0x04005CA5 RID: 23717
			ElcUserConfigurationException,
			// Token: 0x04005CA6 RID: 23718
			ErrorTenantNotInActiveOrgState,
			// Token: 0x04005CA7 RID: 23719
			MoveMailboxConfigurationOnlyShouldMove,
			// Token: 0x04005CA8 RID: 23720
			ConfirmationMessageEnableMailboxLinkedAndResource,
			// Token: 0x04005CA9 RID: 23721
			ErrorFailedToGetDatabaseStatus,
			// Token: 0x04005CAA RID: 23722
			ErrorCannotModifyCompletedRequest,
			// Token: 0x04005CAB RID: 23723
			ErrorMobileMailboxPolicyNotUnique,
			// Token: 0x04005CAC RID: 23724
			VerboseCheckDirectoryExistenceCondition,
			// Token: 0x04005CAD RID: 23725
			ErrorBadEmailAddressTemplate,
			// Token: 0x04005CAE RID: 23726
			MismatchedUser,
			// Token: 0x04005CAF RID: 23727
			AuditLogSearchNonUniqueArbitrationMailbox,
			// Token: 0x04005CB0 RID: 23728
			RemoveLiveFedDomainReserveRequest,
			// Token: 0x04005CB1 RID: 23729
			ConfirmationMessageNewRoutingGroupConnector,
			// Token: 0x04005CB2 RID: 23730
			ErrorSiteNotFound,
			// Token: 0x04005CB3 RID: 23731
			ErrorUniversalGroupCannotHaveLocalGroup,
			// Token: 0x04005CB4 RID: 23732
			ErrorExternalEmailAddressNotSmtpAddress,
			// Token: 0x04005CB5 RID: 23733
			ErrorTeamMailboxTooManyOwnersAndMembers,
			// Token: 0x04005CB6 RID: 23734
			DataClassificationFingerprintsDescriptionMissing,
			// Token: 0x04005CB7 RID: 23735
			ErrorPSTFileIsDirectory,
			// Token: 0x04005CB8 RID: 23736
			ConfirmManagedFolderMailboxPolicyAllowed,
			// Token: 0x04005CB9 RID: 23737
			MailFlowPartnerNotUnique,
			// Token: 0x04005CBA RID: 23738
			FailedToForceCleanupNode,
			// Token: 0x04005CBB RID: 23739
			ClassificationRuleCollectionCustomTermsCountExceedLimit,
			// Token: 0x04005CBC RID: 23740
			ErrorInvalidServerLegacyDistinguishName,
			// Token: 0x04005CBD RID: 23741
			ConfirmationMessageRemoveReceiveConnector,
			// Token: 0x04005CBE RID: 23742
			GetFederationInformationTokenIssuerDoesntMatch,
			// Token: 0x04005CBF RID: 23743
			InterceptorWarningArchivedItemsLifeTime,
			// Token: 0x04005CC0 RID: 23744
			ConfirmationMessageRemoveAcceptedDomain,
			// Token: 0x04005CC1 RID: 23745
			ParameterNotAllowedWithTopLevelRole,
			// Token: 0x04005CC2 RID: 23746
			CasHealthWebAppLiveIdSendingRequest,
			// Token: 0x04005CC3 RID: 23747
			VerboseFixingObjectsUnderRootIdFilter,
			// Token: 0x04005CC4 RID: 23748
			IisUtilityCannotDisambiguateWebSiteException,
			// Token: 0x04005CC5 RID: 23749
			GetMsoDiagnosticsProgressBatch,
			// Token: 0x04005CC6 RID: 23750
			ErrorTooManyTransportRules,
			// Token: 0x04005CC7 RID: 23751
			ConfirmationMessageEnableMailboxResource,
			// Token: 0x04005CC8 RID: 23752
			ErrorRelocationStateRequestedIsTooLow,
			// Token: 0x04005CC9 RID: 23753
			ExchangeSettingsDefaultScopeNotFound,
			// Token: 0x04005CCA RID: 23754
			ErrorWindowsLiveIdRequired,
			// Token: 0x04005CCB RID: 23755
			MesoVersionInvalidException,
			// Token: 0x04005CCC RID: 23756
			ErrorAutoDiscoverValidatorRequiresRedirection,
			// Token: 0x04005CCD RID: 23757
			ExecutingScriptNonFatal,
			// Token: 0x04005CCE RID: 23758
			PSTExportComplete,
			// Token: 0x04005CCF RID: 23759
			ErrorNameMustBeUniquePerMailbox,
			// Token: 0x04005CD0 RID: 23760
			WritableServerNotUnique,
			// Token: 0x04005CD1 RID: 23761
			ErrorCannotFindFingerprintDataClassification,
			// Token: 0x04005CD2 RID: 23762
			WarningCannotGetGlsTenantFromOrgId,
			// Token: 0x04005CD3 RID: 23763
			ServerConfigurationException,
			// Token: 0x04005CD4 RID: 23764
			UMCallAnsweringRuleFindMeWithoutContextWithSecondNumber,
			// Token: 0x04005CD5 RID: 23765
			TestSearchCreateTestFolderError,
			// Token: 0x04005CD6 RID: 23766
			ConfirmationMessageRemoveMoveRequest,
			// Token: 0x04005CD7 RID: 23767
			ErrorInvalidBatchParameter,
			// Token: 0x04005CD8 RID: 23768
			ConfirmationMessageRemoveMailboxPermanentAndLiveId,
			// Token: 0x04005CD9 RID: 23769
			ConfirmationMessageExportMigrationReport,
			// Token: 0x04005CDA RID: 23770
			ConfirmationMessageStopDatabaseAvailabilityGroupADSite,
			// Token: 0x04005CDB RID: 23771
			ConfirmationMessageAuthNewDateTooShort,
			// Token: 0x04005CDC RID: 23772
			ErrorPathNotUniqueAmongExistingDbCopies,
			// Token: 0x04005CDD RID: 23773
			ErrorSharingPolicyNotFound,
			// Token: 0x04005CDE RID: 23774
			RmsSharedIdentityBeingLinkedToComputer,
			// Token: 0x04005CDF RID: 23775
			ConfirmationMessageAddMailboxPermissionOwner,
			// Token: 0x04005CE0 RID: 23776
			ErrorNoAuditLogForArchive,
			// Token: 0x04005CE1 RID: 23777
			ConfirmationMessageRemoveManagementRoleEntry,
			// Token: 0x04005CE2 RID: 23778
			SupportedToolsDataInvalidToolVersionRange,
			// Token: 0x04005CE3 RID: 23779
			ErrorWebsiteAmbiguousInIIS,
			// Token: 0x04005CE4 RID: 23780
			ErrorCannotSeparatePrimaryFromArchiveBecauseServerIsDownlevel,
			// Token: 0x04005CE5 RID: 23781
			ConfirmationMessageSetEdgeSyncMservConnector,
			// Token: 0x04005CE6 RID: 23782
			NewPolicyMustBeInTheSameDialPlanAsOldPolicy,
			// Token: 0x04005CE7 RID: 23783
			VerboseEdbFileLocationUniqueUnderDAGCondition,
			// Token: 0x04005CE8 RID: 23784
			ConfirmGenerateExchangeCertificateRequest,
			// Token: 0x04005CE9 RID: 23785
			ProgressJoinNode,
			// Token: 0x04005CEA RID: 23786
			FormsAuthenticationMarkPathUnknownSetError,
			// Token: 0x04005CEB RID: 23787
			VerboseCheckFileExistenceCondition,
			// Token: 0x04005CEC RID: 23788
			MigrationNotEnabledForTenant,
			// Token: 0x04005CED RID: 23789
			ErrorReHomeOriginalDatabaseLocationNotFound,
			// Token: 0x04005CEE RID: 23790
			WarningCannedRoleGroupCreateWithoutManager,
			// Token: 0x04005CEF RID: 23791
			ErrorUnknownRequestIndex,
			// Token: 0x04005CF0 RID: 23792
			WebServicesTestEventDetail,
			// Token: 0x04005CF1 RID: 23793
			RmsTemplateNotFound,
			// Token: 0x04005CF2 RID: 23794
			VerboseSyncTaskDomainControllerMismatch,
			// Token: 0x04005CF3 RID: 23795
			ErrorParsingCSV,
			// Token: 0x04005CF4 RID: 23796
			ErrorStartWinrm,
			// Token: 0x04005CF5 RID: 23797
			ErrorOabVirtualDirectoryAlreadyExistsWithRecovery,
			// Token: 0x04005CF6 RID: 23798
			CasHealthWebAppTransactionWarnings,
			// Token: 0x04005CF7 RID: 23799
			CreatedJunkEmailRule,
			// Token: 0x04005CF8 RID: 23800
			ConfirmationMessageInstallDlpPolicy,
			// Token: 0x04005CF9 RID: 23801
			ErrorCanNotRemoveMailboxToWellKnownHostedMailboxSG,
			// Token: 0x04005CFA RID: 23802
			SuccessAddServerMonitoringOverride,
			// Token: 0x04005CFB RID: 23803
			VerboseRemovedRoleAssignment,
			// Token: 0x04005CFC RID: 23804
			VerboseMdbLinkedToPfdb,
			// Token: 0x04005CFD RID: 23805
			ConfirmationMessageNewMailboxUser,
			// Token: 0x04005CFE RID: 23806
			MoveMailboxNotOnDomainController,
			// Token: 0x04005CFF RID: 23807
			ErrorInvalidFederationMetadata,
			// Token: 0x04005D00 RID: 23808
			CasHealthAirSyncHeaderNotFound,
			// Token: 0x04005D01 RID: 23809
			ErrorCasArrayNotFound,
			// Token: 0x04005D02 RID: 23810
			SendConnectorCreatingOppositeConnector,
			// Token: 0x04005D03 RID: 23811
			LogonUserIsNotAValidADRecipient,
			// Token: 0x04005D04 RID: 23812
			ErrorPatternIsTooExpensive,
			// Token: 0x04005D05 RID: 23813
			ErrorMailboxLacksDatabase,
			// Token: 0x04005D06 RID: 23814
			ConfirmDisableLastSharedConfiguration,
			// Token: 0x04005D07 RID: 23815
			ErrorCannotOpenLegacyMailbox,
			// Token: 0x04005D08 RID: 23816
			InfoImportingTpdFromRmsOnlineCheckedWithTemplates,
			// Token: 0x04005D09 RID: 23817
			ErrorInvalidCharacterInVirtualDirectoryName,
			// Token: 0x04005D0A RID: 23818
			ConfirmationMessageNewMailboxAuditLog,
			// Token: 0x04005D0B RID: 23819
			InvalidMsoSyncServiceResponse,
			// Token: 0x04005D0C RID: 23820
			ErrorNonActiveOrganizationFound,
			// Token: 0x04005D0D RID: 23821
			InstallFreeBusyFolderCreatedFolder,
			// Token: 0x04005D0E RID: 23822
			ErrorServicePlanDoesntAllowSharedConfiguration,
			// Token: 0x04005D0F RID: 23823
			ErrorObjectNotManagableFromCurrentConsole,
			// Token: 0x04005D10 RID: 23824
			ErrorSystemFileNotFound,
			// Token: 0x04005D11 RID: 23825
			ConfirmationMessageRemoveMalwareFilterRule,
			// Token: 0x04005D12 RID: 23826
			WarningChangeTemplateState,
			// Token: 0x04005D13 RID: 23827
			VerboseApplyingAuthenticationSettingForVDir,
			// Token: 0x04005D14 RID: 23828
			ErrorUserOrContactNotUnique,
			// Token: 0x04005D15 RID: 23829
			ConfirmationMessageRemoveMobileDevice,
			// Token: 0x04005D16 RID: 23830
			ErrorDCNotAvailable,
			// Token: 0x04005D17 RID: 23831
			ErrorGetSiteMailboxDiagnostics,
			// Token: 0x04005D18 RID: 23832
			ConfirmationMessageCompleteOrganizationUpgrade,
			// Token: 0x04005D19 RID: 23833
			ConfirmationMessageNewMailContact,
			// Token: 0x04005D1A RID: 23834
			ConfirmationMessageEnableRpcHttpExternalAndInternal,
			// Token: 0x04005D1B RID: 23835
			InvalidMobileDeviceIdentity,
			// Token: 0x04005D1C RID: 23836
			ProgressStatusReadingManagementRoleTree,
			// Token: 0x04005D1D RID: 23837
			ErrorCannotMoveArbitrationMailboxesCrossForest,
			// Token: 0x04005D1E RID: 23838
			ErrorNoAvailablePublicFolderDatabaseInDatacenter,
			// Token: 0x04005D1F RID: 23839
			FailedDocumentsNoResultsDatabase,
			// Token: 0x04005D20 RID: 23840
			SuccessRemoveServerMonitoringOverride,
			// Token: 0x04005D21 RID: 23841
			ProgressActivityRemovingWorkloadManagementPolicyTree,
			// Token: 0x04005D22 RID: 23842
			ErrorArchiveLegacyDNDoesNotMatchUser,
			// Token: 0x04005D23 RID: 23843
			ErrorCannotRetrieveCASServer,
			// Token: 0x04005D24 RID: 23844
			CasHealthCouldNotLogUserForAutodiscover,
			// Token: 0x04005D25 RID: 23845
			AcceptedDomainIsReferencedByAddressTemplate,
			// Token: 0x04005D26 RID: 23846
			ErrorManagedFolderMailboxPolicyNotFound,
			// Token: 0x04005D27 RID: 23847
			AddAccessRuleUnauthorizedAccess,
			// Token: 0x04005D28 RID: 23848
			SiteMailboxPolicySet,
			// Token: 0x04005D29 RID: 23849
			DataClassificationFingerprintsMissing,
			// Token: 0x04005D2A RID: 23850
			CorruptionTypeParameterIncompatible,
			// Token: 0x04005D2B RID: 23851
			ConfirmationMessageTestIPBlockListProvider,
			// Token: 0x04005D2C RID: 23852
			ClassificationRuleCollectionOobRulePackIdViolation,
			// Token: 0x04005D2D RID: 23853
			ErrorCertificateNotFound,
			// Token: 0x04005D2E RID: 23854
			WarningScheduledTimeIsUnchanged,
			// Token: 0x04005D2F RID: 23855
			DagTaskCouldNotFindMatchingNetwork,
			// Token: 0x04005D30 RID: 23856
			TemplateTypeNotValid,
			// Token: 0x04005D31 RID: 23857
			InfoChangingGroupType,
			// Token: 0x04005D32 RID: 23858
			VerboseMountDatabaseStillOnlined,
			// Token: 0x04005D33 RID: 23859
			ConfirmationMessageNewCallAnsweringRule,
			// Token: 0x04005D34 RID: 23860
			ConfirmationAddSupervisionListEntry,
			// Token: 0x04005D35 RID: 23861
			DomainNameIsNotValidForCertificate,
			// Token: 0x04005D36 RID: 23862
			ConfirmationMessageDisableServiceEmailChannel,
			// Token: 0x04005D37 RID: 23863
			CasHealthLogon,
			// Token: 0x04005D38 RID: 23864
			ExRbacRoleGroupInMultiTenantException,
			// Token: 0x04005D39 RID: 23865
			ErrorNonExistentDirectoryUser,
			// Token: 0x04005D3A RID: 23866
			ErrorDuplicateNonActiveOrganizationExists,
			// Token: 0x04005D3B RID: 23867
			TowsException,
			// Token: 0x04005D3C RID: 23868
			ExportDestinationIsReadonly,
			// Token: 0x04005D3D RID: 23869
			TcpListenerRequestFailed,
			// Token: 0x04005D3E RID: 23870
			ErrorSetGroupMailboxUserPermissions,
			// Token: 0x04005D3F RID: 23871
			ConfirmationMessageSuspendOfflineMoveRequest,
			// Token: 0x04005D40 RID: 23872
			FailedBecauseofADDataValidationException,
			// Token: 0x04005D41 RID: 23873
			ErrorDisableMailboxWithLitigationHold,
			// Token: 0x04005D42 RID: 23874
			TestSearchGetNonIpmSubTreeFolder,
			// Token: 0x04005D43 RID: 23875
			FolderNotExistsOnRemoteServer,
			// Token: 0x04005D44 RID: 23876
			ConfirmationMessageNewAccountPartition,
			// Token: 0x04005D45 RID: 23877
			VerboseNoAssociatedMoveRequestOnDatabaseCondition,
			// Token: 0x04005D46 RID: 23878
			ConfirmationMessageMailboxRegionalConfiguration,
			// Token: 0x04005D47 RID: 23879
			InfoSuccess,
			// Token: 0x04005D48 RID: 23880
			FailedToGetCopyEdbFileStatus,
			// Token: 0x04005D49 RID: 23881
			InvalidMobileDeviceIdType,
			// Token: 0x04005D4A RID: 23882
			ConfirmationMessageNewHostedConnectionFilterPolicy,
			// Token: 0x04005D4B RID: 23883
			DlpPolicyMultipleCommandsNotSupported,
			// Token: 0x04005D4C RID: 23884
			VerboseFoundAssigneeInDomainNC,
			// Token: 0x04005D4D RID: 23885
			TooManyEmbeddedExpressions,
			// Token: 0x04005D4E RID: 23886
			ErrorDuplicateAuthServer,
			// Token: 0x04005D4F RID: 23887
			TestSearchCatalogErrorMessage,
			// Token: 0x04005D50 RID: 23888
			VerboseInSiteOABVdirFound,
			// Token: 0x04005D51 RID: 23889
			ErrorMailboxRelocationJoinTargetNotContainerOwner,
			// Token: 0x04005D52 RID: 23890
			NoSystemProbeEventFound,
			// Token: 0x04005D53 RID: 23891
			ConfirmationMessageSetPublicFolderLocalReplicaAgeLimit,
			// Token: 0x04005D54 RID: 23892
			SomeEssentialServicesForTheRoleNotRunning,
			// Token: 0x04005D55 RID: 23893
			ConfirmationMessageSetUMMailbox,
			// Token: 0x04005D56 RID: 23894
			ConfirmationMessageNewELCContentSettings,
			// Token: 0x04005D57 RID: 23895
			ErrorCasArrayAlreadyExistsInSite,
			// Token: 0x04005D58 RID: 23896
			ErrorCannotUpdateInvalidMailbox,
			// Token: 0x04005D59 RID: 23897
			ConfirmationMessageNewEdgeSyncMservConnectorWithSiteSpecified,
			// Token: 0x04005D5A RID: 23898
			ErrorCannotScopeEsnPolicy,
			// Token: 0x04005D5B RID: 23899
			ConfirmationMessageSetActiveSyncDeviceAccessRule,
			// Token: 0x04005D5C RID: 23900
			ErrorSuspendWhenReadyToCompleteCannotBeUsedDuringCompletion,
			// Token: 0x04005D5D RID: 23901
			ServerToContactMustBeInSameDagException,
			// Token: 0x04005D5E RID: 23902
			CouldNotFindLocalAdministratorGroup,
			// Token: 0x04005D5F RID: 23903
			ConfirmationMessageRemoveAddressListRecursively,
			// Token: 0x04005D60 RID: 23904
			EADCInsufficientRights,
			// Token: 0x04005D61 RID: 23905
			ErrorNonMatchingLegacyDNs,
			// Token: 0x04005D62 RID: 23906
			FailedBecauseofADTransientException,
			// Token: 0x04005D63 RID: 23907
			ErrorExceededTextScanLimit,
			// Token: 0x04005D64 RID: 23908
			CreateVirtualDirectoryMetabaseFailure,
			// Token: 0x04005D65 RID: 23909
			ErrorCertificateNotYetValid,
			// Token: 0x04005D66 RID: 23910
			NewFederationTrustSuccess,
			// Token: 0x04005D67 RID: 23911
			ErrorInvalidRequest,
			// Token: 0x04005D68 RID: 23912
			AboutToExportCertificateToFile,
			// Token: 0x04005D69 RID: 23913
			IisTasksValidationInvalidVirtualDirectoryCharException,
			// Token: 0x04005D6A RID: 23914
			VerboseCreatingManagementWebServiceVDir,
			// Token: 0x04005D6B RID: 23915
			DagTaskErrorServerWrongVersion,
			// Token: 0x04005D6C RID: 23916
			TestSearchDeleteFolders,
			// Token: 0x04005D6D RID: 23917
			ErrorPSTFolderPathNotExist,
			// Token: 0x04005D6E RID: 23918
			CasHealthOwaUnsecureAccess,
			// Token: 0x04005D6F RID: 23919
			FailedToRunServerMonitoringOverride,
			// Token: 0x04005D70 RID: 23920
			CannotChangeServiceInstanceNameError,
			// Token: 0x04005D71 RID: 23921
			HttpWebRequestFailure,
			// Token: 0x04005D72 RID: 23922
			DagTaskNoServersAreStartedException,
			// Token: 0x04005D73 RID: 23923
			MtrtMessageFailureReason,
			// Token: 0x04005D74 RID: 23924
			ErrorPublicFolderStatisticsNotFound,
			// Token: 0x04005D75 RID: 23925
			UnifiedMessagingMailboxPolicyHasProtectUnauthenticatedVoiceMailSetTo,
			// Token: 0x04005D76 RID: 23926
			ErrorFailedToReadRecipientForUpdate,
			// Token: 0x04005D77 RID: 23927
			ErrorRecipientViewRootDuplicated,
			// Token: 0x04005D78 RID: 23928
			ErrorTooManyModerators,
			// Token: 0x04005D79 RID: 23929
			ConfirmationMessageSetAcceptedDomain,
			// Token: 0x04005D7A RID: 23930
			InfoAttributeAceNotPresent,
			// Token: 0x04005D7B RID: 23931
			NoDeviceFilterRuleByName,
			// Token: 0x04005D7C RID: 23932
			VerboseApprovalRequestSubmitted,
			// Token: 0x04005D7D RID: 23933
			LogMigrationRegistryKeyNotExist,
			// Token: 0x04005D7E RID: 23934
			ConfirmationMessageRemovePublicFolder,
			// Token: 0x04005D7F RID: 23935
			VerbosePublicFolderAdminsUsgCreationRollingbackFailed,
			// Token: 0x04005D80 RID: 23936
			SearchWorkerError,
			// Token: 0x04005D81 RID: 23937
			InvalidLegacyExchangeDnParameterValue,
			// Token: 0x04005D82 RID: 23938
			ErrorInvalidRoleRenaming,
			// Token: 0x04005D83 RID: 23939
			BadEncodingParameterException,
			// Token: 0x04005D84 RID: 23940
			GetOwaAdminTaskInvalidExpressionComponentCharacterException,
			// Token: 0x04005D85 RID: 23941
			ClassificationRuleCollectionRegexPerformanceValidationFailure,
			// Token: 0x04005D86 RID: 23942
			ConfirmationMessageAddIPAllowListProvider,
			// Token: 0x04005D87 RID: 23943
			ConfirmationMessageSetMailboxDatabaseCopy,
			// Token: 0x04005D88 RID: 23944
			DagTaskErrorTooManyServers,
			// Token: 0x04005D89 RID: 23945
			TotalFolderCount,
			// Token: 0x04005D8A RID: 23946
			ErrorOrgStillUsingThisMailFlowPartner,
			// Token: 0x04005D8B RID: 23947
			PopImapErrorIOTimeout,
			// Token: 0x04005D8C RID: 23948
			ErrorCredentialNotSupportedForEndpointType,
			// Token: 0x04005D8D RID: 23949
			LogLocationError,
			// Token: 0x04005D8E RID: 23950
			ClassificationRuleCollectionInvalidLangCodesInRuleDescription,
			// Token: 0x04005D8F RID: 23951
			TenantNotificationBody,
			// Token: 0x04005D90 RID: 23952
			ErrorMailboxDatabaseNotOnCurrentCmdletVersion,
			// Token: 0x04005D91 RID: 23953
			DagTaskServerIPAddressSameAsStaticIPAddress,
			// Token: 0x04005D92 RID: 23954
			DagTaskCheckingClusterNodesForDagMembership,
			// Token: 0x04005D93 RID: 23955
			ErrorInvalidRemoveOperationOnDBCopyForCircularLoggingEnabledDB,
			// Token: 0x04005D94 RID: 23956
			CompletedWithWarningMoveHistoryEntry,
			// Token: 0x04005D95 RID: 23957
			ConfirmationMessageAddADPermissionOwner,
			// Token: 0x04005D96 RID: 23958
			InvalidIdentityTypeForClearCmdletException,
			// Token: 0x04005D97 RID: 23959
			ConfirmationMessageRemovePswsVirtualDirectory,
			// Token: 0x04005D98 RID: 23960
			ActiveSyncPolicyApplicationListTooLong,
			// Token: 0x04005D99 RID: 23961
			ErrorCannotRetargetToDifferentVersionArchiveServerThanOriginal,
			// Token: 0x04005D9A RID: 23962
			CannotLoadScript,
			// Token: 0x04005D9B RID: 23963
			TestSearchMailboxNotArchived,
			// Token: 0x04005D9C RID: 23964
			CurrentRoles,
			// Token: 0x04005D9D RID: 23965
			DisableMailboxQuarantineWarningMessage,
			// Token: 0x04005D9E RID: 23966
			CasHealthOwaAuthTypesSupported3,
			// Token: 0x04005D9F RID: 23967
			ExtractingLang,
			// Token: 0x04005DA0 RID: 23968
			InterceptorErrorInvalidEventConditionPair,
			// Token: 0x04005DA1 RID: 23969
			ConstraintFallback,
			// Token: 0x04005DA2 RID: 23970
			RpsFileCreated,
			// Token: 0x04005DA3 RID: 23971
			ConfirmationMessageSetReceiveConnector,
			// Token: 0x04005DA4 RID: 23972
			ErrorArbitrationMailboxDatabase,
			// Token: 0x04005DA5 RID: 23973
			VerboseMountDatabaseForcely,
			// Token: 0x04005DA6 RID: 23974
			VerboseRemoveWSManConfigSection,
			// Token: 0x04005DA7 RID: 23975
			CasHealthWebAppAuthenticationVerificationError,
			// Token: 0x04005DA8 RID: 23976
			InsufficientEmailsForAutoTagging,
			// Token: 0x04005DA9 RID: 23977
			ErrorChangeWindowsLiveID,
			// Token: 0x04005DAA RID: 23978
			DlpPolicyMissingLocaleAttribute,
			// Token: 0x04005DAB RID: 23979
			DagTaskComputerAccountExistsAndIsEnabledException,
			// Token: 0x04005DAC RID: 23980
			VerboseNoAssociatedUserMailboxOrMoveRequestOnDatabaseCondition,
			// Token: 0x04005DAD RID: 23981
			MsiProductCode,
			// Token: 0x04005DAE RID: 23982
			ErrorOrganizationalUnitNotUnique,
			// Token: 0x04005DAF RID: 23983
			ProgressMoveDatabasePath,
			// Token: 0x04005DB0 RID: 23984
			InvalidPKConfigFormat,
			// Token: 0x04005DB1 RID: 23985
			BadFastMessageRetrievalParameterException,
			// Token: 0x04005DB2 RID: 23986
			ErrorTeamMailboxUserTypeUnqualified,
			// Token: 0x04005DB3 RID: 23987
			ConfirmationDisablingPartitionFromProvisioning,
			// Token: 0x04005DB4 RID: 23988
			ConfirmationMessageRemoveRemoteAccountPolicy,
			// Token: 0x04005DB5 RID: 23989
			InterceptorErrorConditionInvalidRegex,
			// Token: 0x04005DB6 RID: 23990
			SiteIdMustBePositive,
			// Token: 0x04005DB7 RID: 23991
			SuspendSgcOnHostServer,
			// Token: 0x04005DB8 RID: 23992
			RequestQueueIdentified,
			// Token: 0x04005DB9 RID: 23993
			ConfirmationMessageRemoveHostedConnectionFilterRule,
			// Token: 0x04005DBA RID: 23994
			ErrorSourceArchiveMailboxDoesNotExist,
			// Token: 0x04005DBB RID: 23995
			CopyingOABFiles,
			// Token: 0x04005DBC RID: 23996
			ErrorMailPublicFolderNotFoundInDirectory,
			// Token: 0x04005DBD RID: 23997
			AgentLogInvalidSmtpResponse,
			// Token: 0x04005DBE RID: 23998
			TestSearchGetServerFromActiveManager,
			// Token: 0x04005DBF RID: 23999
			InfoError,
			// Token: 0x04005DC0 RID: 24000
			FormsAuthenticationMarkPathCannotMarkSecureAttributeException,
			// Token: 0x04005DC1 RID: 24001
			ServerMustBeInDagException,
			// Token: 0x04005DC2 RID: 24002
			MailboxFolderStatisticsException,
			// Token: 0x04005DC3 RID: 24003
			ErrorUnmanagedMemberExists,
			// Token: 0x04005DC4 RID: 24004
			ErrorUnmanagedMemberNotExists,
			// Token: 0x04005DC5 RID: 24005
			ErrorUnsupportedBlockLanguage,
			// Token: 0x04005DC6 RID: 24006
			ConfirmationMessageRemoveMailboxPermanentAndNotLiveId,
			// Token: 0x04005DC7 RID: 24007
			TenantNotificationSubject,
			// Token: 0x04005DC8 RID: 24008
			ErrorLiveIdDomainNameInvalid,
			// Token: 0x04005DC9 RID: 24009
			VerboseSettingPreferredServerForDomain,
			// Token: 0x04005DCA RID: 24010
			ErrorRequestAlreadyCanceled,
			// Token: 0x04005DCB RID: 24011
			FormsAuthenticationMarkPathAccessDeniedException,
			// Token: 0x04005DCC RID: 24012
			ErrorUMInvalidAddressFormat,
			// Token: 0x04005DCD RID: 24013
			ErrorParameterInvalidForManagedTenant,
			// Token: 0x04005DCE RID: 24014
			DagTaskProblemChangingQuorumExceptionBadNetPath,
			// Token: 0x04005DCF RID: 24015
			VerbosePropertiesRead,
			// Token: 0x04005DD0 RID: 24016
			CannotRemoveMailUserCatchAllRecipient,
			// Token: 0x04005DD1 RID: 24017
			TSNoProblemsDetected,
			// Token: 0x04005DD2 RID: 24018
			ConfirmationMessageUpdateDatabaseCopyBegin,
			// Token: 0x04005DD3 RID: 24019
			ErrorUserHasAlternateMailboxes,
			// Token: 0x04005DD4 RID: 24020
			UnexpectedError,
			// Token: 0x04005DD5 RID: 24021
			ErrorServicePlanInconsistent,
			// Token: 0x04005DD6 RID: 24022
			InvalidDuration,
			// Token: 0x04005DD7 RID: 24023
			OwaAdOrphanFound,
			// Token: 0x04005DD8 RID: 24024
			ErrorDirectoryNotExist,
			// Token: 0x04005DD9 RID: 24025
			FailedToSetRequestedDatabaseSchemaVersion,
			// Token: 0x04005DDA RID: 24026
			ConfirmationMessageNewDynamicDistributionGroupPrecannedFilter,
			// Token: 0x04005DDB RID: 24027
			AlsSubjectMailboxFailure,
			// Token: 0x04005DDC RID: 24028
			FailedToValidateSLCCertChain,
			// Token: 0x04005DDD RID: 24029
			CouldNotUpgradeSpecificContentSetting,
			// Token: 0x04005DDE RID: 24030
			GetMsoDiagnosticsProgressIteration,
			// Token: 0x04005DDF RID: 24031
			TestRHRpcQueryAllDone,
			// Token: 0x04005DE0 RID: 24032
			ConfirmationMessageRemoveMailboxPermissionAccessRights,
			// Token: 0x04005DE1 RID: 24033
			VerboseSyncTaskCookieCurrentWatermarksMissingCurrentDC,
			// Token: 0x04005DE2 RID: 24034
			ResetAutoBlockedDevicesException,
			// Token: 0x04005DE3 RID: 24035
			ErrorReadMailboxSecurityDescriptor,
			// Token: 0x04005DE4 RID: 24036
			TopologyServiceOperation,
			// Token: 0x04005DE5 RID: 24037
			ProtocolTransactionShortErrorMsgFromExceptionWithInnerException,
			// Token: 0x04005DE6 RID: 24038
			ConfirmationMessageOutlookProtectionRuleWithEmptyCondition,
			// Token: 0x04005DE7 RID: 24039
			VerboseSettingWriteOriginatingChangeTimestamp,
			// Token: 0x04005DE8 RID: 24040
			ErrorCannotDetermineIisVersion,
			// Token: 0x04005DE9 RID: 24041
			ConfirmationMessageDisableMailUser,
			// Token: 0x04005DEA RID: 24042
			UpdatingLegDnForDatabaseCopy,
			// Token: 0x04005DEB RID: 24043
			DatabaseCopyDisconnectedCheck,
			// Token: 0x04005DEC RID: 24044
			MigrationUserNotFound,
			// Token: 0x04005DED RID: 24045
			TestSearchFailed,
			// Token: 0x04005DEE RID: 24046
			IgnoringException,
			// Token: 0x04005DEF RID: 24047
			ConfirmRemoveExchangeCertificate,
			// Token: 0x04005DF0 RID: 24048
			VerboseCannedAddressListAlreadyExists,
			// Token: 0x04005DF1 RID: 24049
			DagTaskErrorEncounteredMoreDetailsInLog,
			// Token: 0x04005DF2 RID: 24050
			ExceptionRunProcessFailedRetry,
			// Token: 0x04005DF3 RID: 24051
			ErrorUnableToFindFqdnForHostADErrorException,
			// Token: 0x04005DF4 RID: 24052
			WarningSearchUserNotFound,
			// Token: 0x04005DF5 RID: 24053
			ErrorAllRoomListNotUnique,
			// Token: 0x04005DF6 RID: 24054
			NewProductInstallation,
			// Token: 0x04005DF7 RID: 24055
			ConfirmationMessageNewInboundConnector,
			// Token: 0x04005DF8 RID: 24056
			OutlookConnectivityErrorUserNotFound,
			// Token: 0x04005DF9 RID: 24057
			ErrorGroupNotFoundOnDomainController,
			// Token: 0x04005DFA RID: 24058
			ConfirmationDumpProvisioningCache,
			// Token: 0x04005DFB RID: 24059
			ConversationsFailedToProcessMailbox,
			// Token: 0x04005DFC RID: 24060
			WarningArbitrationRetentionPolicyNotAvailable,
			// Token: 0x04005DFD RID: 24061
			ExchangeSettingsCannotChangeScopeOnScopeFilteredGroup,
			// Token: 0x04005DFE RID: 24062
			CertificateInformation,
			// Token: 0x04005DFF RID: 24063
			ConfirmationMessageSetMailboxAuditLogAgeLimitSmaller,
			// Token: 0x04005E00 RID: 24064
			CannotFindRPSInstallLocation,
			// Token: 0x04005E01 RID: 24065
			ErrorParameterValueRequired,
			// Token: 0x04005E02 RID: 24066
			ProgressStatusReadingAddressListTree,
			// Token: 0x04005E03 RID: 24067
			ConfirmationMessageSetRemoteDomain,
			// Token: 0x04005E04 RID: 24068
			VerboseStartToSubmitApprovalRequest,
			// Token: 0x04005E05 RID: 24069
			ErrorELCFolderIsDestination,
			// Token: 0x04005E06 RID: 24070
			VerboseTryingToParseOPathFilter,
			// Token: 0x04005E07 RID: 24071
			CasHealthCalendarWebRequestException,
			// Token: 0x04005E08 RID: 24072
			ConfirmOrphanUserMissingADData,
			// Token: 0x04005E09 RID: 24073
			ErrorInvalidResponseXml,
			// Token: 0x04005E0A RID: 24074
			ConfirmationMessageNewMergeRequest,
			// Token: 0x04005E0B RID: 24075
			DagNicDown,
			// Token: 0x04005E0C RID: 24076
			CannotOpenRegistryKey,
			// Token: 0x04005E0D RID: 24077
			WarningNewAdminAuditLogSearchOnPreE15,
			// Token: 0x04005E0E RID: 24078
			ConfirmationMessageAddAvailabilityAddressSpace,
			// Token: 0x04005E0F RID: 24079
			ConfirmationMessageSetManagedFolderMailboxPolicy,
			// Token: 0x04005E10 RID: 24080
			ErrorOabGenFailedE14,
			// Token: 0x04005E11 RID: 24081
			ErrorAdUserNotFound,
			// Token: 0x04005E12 RID: 24082
			FailedToResetAdministrativeGroupLinkedToPfdb,
			// Token: 0x04005E13 RID: 24083
			ConfirmationMessageSetFederationTrust4,
			// Token: 0x04005E14 RID: 24084
			TestSearchRecoveryMdb,
			// Token: 0x04005E15 RID: 24085
			MailboxSearchObjectExist,
			// Token: 0x04005E16 RID: 24086
			VerboseCreateMember,
			// Token: 0x04005E17 RID: 24087
			DagTaskCouldNotDisableAccountName,
			// Token: 0x04005E18 RID: 24088
			ConfirmationMessageNewDatabaseAvailabilityGroup,
			// Token: 0x04005E19 RID: 24089
			ErrorNameValueStringTooLong,
			// Token: 0x04005E1A RID: 24090
			ErrorApplicationNotExist,
			// Token: 0x04005E1B RID: 24091
			AgentLogInvalidLocation,
			// Token: 0x04005E1C RID: 24092
			ErrorAddCertificateOnEdge,
			// Token: 0x04005E1D RID: 24093
			ErrorMountPreventedByRecordedErr,
			// Token: 0x04005E1E RID: 24094
			ErrorCheckHasLocalReplicas,
			// Token: 0x04005E1F RID: 24095
			SomeActiveSyncTransactionsFailed,
			// Token: 0x04005E20 RID: 24096
			CheckDatabaseStatus,
			// Token: 0x04005E21 RID: 24097
			SystemContainerNotFoundException,
			// Token: 0x04005E22 RID: 24098
			E2k3InteropGroupNotFoundException,
			// Token: 0x04005E23 RID: 24099
			DlpPolicyFieldLengthsExceedsLimit,
			// Token: 0x04005E24 RID: 24100
			ConfirmationMessageNewMailboxDatabaseNonRecovery,
			// Token: 0x04005E25 RID: 24101
			ErrorVirtualDirectoryAlreadyExists,
			// Token: 0x04005E26 RID: 24102
			ConfirmationMessageSetELCContentSettings,
			// Token: 0x04005E27 RID: 24103
			CannotConvertAqsToKql,
			// Token: 0x04005E28 RID: 24104
			MoveMailboxErrorFromCom,
			// Token: 0x04005E29 RID: 24105
			GetFederationInformationTrustedHostnames,
			// Token: 0x04005E2A RID: 24106
			RegistryAccessSecurityExceptionReadValue,
			// Token: 0x04005E2B RID: 24107
			AddDagServerMailboxServerIsInDifferentClusterException,
			// Token: 0x04005E2C RID: 24108
			ConfirmationMessageNewAuthRedirect,
			// Token: 0x04005E2D RID: 24109
			WarningDedicatedMailboxPlanDataNotFound,
			// Token: 0x04005E2E RID: 24110
			IsapiFilterNotRemovedException,
			// Token: 0x04005E2F RID: 24111
			CannotAssignCertificateToUMCR,
			// Token: 0x04005E30 RID: 24112
			SenderIPAddressOverlapsServiceProviderIPAddressesId,
			// Token: 0x04005E31 RID: 24113
			VoiceMessageOriginatorAlreadyExists,
			// Token: 0x04005E32 RID: 24114
			ConfirmationMessageRemoveMailFlowPartnerConfigWithName,
			// Token: 0x04005E33 RID: 24115
			ErrorInvalidEndpointType,
			// Token: 0x04005E34 RID: 24116
			UceContentFilterAlreadyExists,
			// Token: 0x04005E35 RID: 24117
			ErrorInheritedObjectTypeNotUnique,
			// Token: 0x04005E36 RID: 24118
			LaunchSubTask,
			// Token: 0x04005E37 RID: 24119
			AdminGroupNotFoundException,
			// Token: 0x04005E38 RID: 24120
			ConfirmationMessageSetOutboundConnector,
			// Token: 0x04005E39 RID: 24121
			SearchMaxResultCountWarning,
			// Token: 0x04005E3A RID: 24122
			RpcHttpAvailability,
			// Token: 0x04005E3B RID: 24123
			LogSourceServerRusUnavaliable,
			// Token: 0x04005E3C RID: 24124
			ErrorLiveDomainReservationError,
			// Token: 0x04005E3D RID: 24125
			OabFilesLeft,
			// Token: 0x04005E3E RID: 24126
			ErrorMoveAddressListToChildOrSelf,
			// Token: 0x04005E3F RID: 24127
			BPAConfigurationErrorFound,
			// Token: 0x04005E40 RID: 24128
			MacroNameNotSpecified,
			// Token: 0x04005E41 RID: 24129
			MRSCorruptDataInDiagnostics,
			// Token: 0x04005E42 RID: 24130
			ClassificationRuleCollectionNonUniqueRuleIdViolation,
			// Token: 0x04005E43 RID: 24131
			ConfirmationMessageNewAdminAuditLogSearch,
			// Token: 0x04005E44 RID: 24132
			ErrorOOBUpgradeInProgress,
			// Token: 0x04005E45 RID: 24133
			ShouldContinueMoreMailboxesThanMaxSearch,
			// Token: 0x04005E46 RID: 24134
			ErrorCannotDisableRemotePowershelForLastDelegatingOrgAdmin,
			// Token: 0x04005E47 RID: 24135
			ImplicitPartitionIdSupplied,
			// Token: 0x04005E48 RID: 24136
			AddResubmitRequestConfirmation,
			// Token: 0x04005E49 RID: 24137
			RemoveADServerMetadataUsingDC,
			// Token: 0x04005E4A RID: 24138
			ConfirmationMessageSetEventLogLevel,
			// Token: 0x04005E4B RID: 24139
			WarningDeprovisioningCoexistenceDomain,
			// Token: 0x04005E4C RID: 24140
			ConfirmationMessageNewEdgeSubscriptionWarnEdgeFQDNMustbeResolvable,
			// Token: 0x04005E4D RID: 24141
			ConfirmationMessageRemoveEcpVirtualDirectory,
			// Token: 0x04005E4E RID: 24142
			ConfirmationMessageDisableHostedContentFilterRule,
			// Token: 0x04005E4F RID: 24143
			ConfirmationMessageSwitchMobileMailboxDefaultPolicy,
			// Token: 0x04005E50 RID: 24144
			ErrorSharingPolicyNotUnique,
			// Token: 0x04005E51 RID: 24145
			ErrorNotAuthorizedForParameter,
			// Token: 0x04005E52 RID: 24146
			ConfirmationMessageNewCmdletExtensionAgent,
			// Token: 0x04005E53 RID: 24147
			ConfirmationMessageSetAutoAcceptMailboxSettings,
			// Token: 0x04005E54 RID: 24148
			ConfirmationMessageEnableAddressListPaging,
			// Token: 0x04005E55 RID: 24149
			ExecutingScript,
			// Token: 0x04005E56 RID: 24150
			ConfirmationMessageRemoveMailUser,
			// Token: 0x04005E57 RID: 24151
			DagTaskClusteringShouldBeDisabledException,
			// Token: 0x04005E58 RID: 24152
			ComponentEmpty,
			// Token: 0x04005E59 RID: 24153
			ErrorInvalidConfigScopeOnNonHosterRoleAssignment,
			// Token: 0x04005E5A RID: 24154
			VerboseDeletePFTree,
			// Token: 0x04005E5B RID: 24155
			ConfirmationMessageNewMigrationEndpoint,
			// Token: 0x04005E5C RID: 24156
			WarningMarkNewTemplatesAsDistributedForCreatingProtectionRules,
			// Token: 0x04005E5D RID: 24157
			ConfirmationMessageSetPswsVirtualDirectory,
			// Token: 0x04005E5E RID: 24158
			ErrorLogDirectoryNotExist,
			// Token: 0x04005E5F RID: 24159
			WarningTemplateNotModified,
			// Token: 0x04005E60 RID: 24160
			ConfirmationMessageSetFederationTrust2,
			// Token: 0x04005E61 RID: 24161
			VerboseSettingPassword,
			// Token: 0x04005E62 RID: 24162
			CasHealthOwaAuthTypesSupported1,
			// Token: 0x04005E63 RID: 24163
			CompletedMoveHistoryEntry,
			// Token: 0x04005E64 RID: 24164
			DagNetworkHasNoNicForNode,
			// Token: 0x04005E65 RID: 24165
			MigrationBatchIsCorrupt,
			// Token: 0x04005E66 RID: 24166
			ConfirmationProcessInputLog,
			// Token: 0x04005E67 RID: 24167
			MailboxAssistantsServiceCouldNotBeStarted,
			// Token: 0x04005E68 RID: 24168
			ConfirmationMessageSetExchangeRpcClientAccessServer,
			// Token: 0x04005E69 RID: 24169
			VerboseDefaultOABWebDistributionEnabled,
			// Token: 0x04005E6A RID: 24170
			SmtpAddressMissingForAutocopy,
			// Token: 0x04005E6B RID: 24171
			AmMoveRpcCompletedSourceServer,
			// Token: 0x04005E6C RID: 24172
			EnabledEhfConnectorAlreadyExists,
			// Token: 0x04005E6D RID: 24173
			InfoCouldNotFindMAPITLHInAdminGroup,
			// Token: 0x04005E6E RID: 24174
			ExchangeUpgradeBucketSourceIncludedInTarget,
			// Token: 0x04005E6F RID: 24175
			ErrorPublicFolderNotFound,
			// Token: 0x04005E70 RID: 24176
			ConfirmationMessageClearTextMessagingAccount,
			// Token: 0x04005E71 RID: 24177
			ErrorCannotRemoveAssociatedThrottlingPolicy,
			// Token: 0x04005E72 RID: 24178
			ConfirmationMessageNewMalwareFilterPolicy,
			// Token: 0x04005E73 RID: 24179
			OrganizationDataValidationException,
			// Token: 0x04005E74 RID: 24180
			ExchangeSettingsBadFormatOfConfigPair,
			// Token: 0x04005E75 RID: 24181
			ErrorHttpsBindingNotExist,
			// Token: 0x04005E76 RID: 24182
			ExceptionPerfCounterLodctrFailed,
			// Token: 0x04005E77 RID: 24183
			ConfirmationMessageSetAccountPartition,
			// Token: 0x04005E78 RID: 24184
			ConfirmSearchMailboxDeleteContent,
			// Token: 0x04005E79 RID: 24185
			ErrorRollbackGlsExpected,
			// Token: 0x04005E7A RID: 24186
			WarningSetMailboxLitigationOwnerSMTP,
			// Token: 0x04005E7B RID: 24187
			ActiveDirectoryConnectivityTestFailed,
			// Token: 0x04005E7C RID: 24188
			ConfirmationMessageSetMailboxWithWindowsLiveID,
			// Token: 0x04005E7D RID: 24189
			ErrorSharedConfigurationNotFound,
			// Token: 0x04005E7E RID: 24190
			ProgressEvictNode,
			// Token: 0x04005E7F RID: 24191
			DatabaseCopyInitializingCheck,
			// Token: 0x04005E80 RID: 24192
			RmsSharedIdentityUserNotFound,
			// Token: 0x04005E81 RID: 24193
			InterceptorErrorConditionConjunctionNotSupported,
			// Token: 0x04005E82 RID: 24194
			MtrtMessageDLPRule,
			// Token: 0x04005E83 RID: 24195
			ConfirmationMessageSendTextMessagingVerificationCode,
			// Token: 0x04005E84 RID: 24196
			ErrorNoAuditLogForNonUserMailbox,
			// Token: 0x04005E85 RID: 24197
			ErrorRequiredMigrationFeatureNotEnabled,
			// Token: 0x04005E86 RID: 24198
			FoundDefaultSharingPolicy,
			// Token: 0x04005E87 RID: 24199
			SendConnectorWrongSourceServerRg,
			// Token: 0x04005E88 RID: 24200
			ErrorDatabaseNotUnique,
			// Token: 0x04005E89 RID: 24201
			ConfirmationMessageRemoveAddressrewriteentry,
			// Token: 0x04005E8A RID: 24202
			StartingToRunChecks,
			// Token: 0x04005E8B RID: 24203
			ErrorEdbFileLocationNotUniqueUnderSameDAG,
			// Token: 0x04005E8C RID: 24204
			UnknownEntityLinkedToTenantInReportingDB,
			// Token: 0x04005E8D RID: 24205
			ErrorAutoDiscoverEndpointNotFound,
			// Token: 0x04005E8E RID: 24206
			ErrorOuOutOfOrganization,
			// Token: 0x04005E8F RID: 24207
			ConfirmationMessageSetHostedEncryptionVirtualDirectory,
			// Token: 0x04005E90 RID: 24208
			ErrorLogFileCannotOpen,
			// Token: 0x04005E91 RID: 24209
			ErrorCouldNotFindMoveRequest,
			// Token: 0x04005E92 RID: 24210
			InstallFreeBusyFolderUnableToCheckDatabase,
			// Token: 0x04005E93 RID: 24211
			SimilarScopeFound,
			// Token: 0x04005E94 RID: 24212
			HeaderNameNotAllowed,
			// Token: 0x04005E95 RID: 24213
			ConfirmationMessageNewAcceptedDomain,
			// Token: 0x04005E96 RID: 24214
			TooManyServicesContainers,
			// Token: 0x04005E97 RID: 24215
			AuditLogSearchStartDateIsLaterThanEndDate,
			// Token: 0x04005E98 RID: 24216
			ErrorUserNotFoundInPermissionEntry,
			// Token: 0x04005E99 RID: 24217
			ConfirmationMessageSetMigrationConfig,
			// Token: 0x04005E9A RID: 24218
			ExchangeCertificateUpdatedForUMCR,
			// Token: 0x04005E9B RID: 24219
			ConfirmationMessageMoveAddressList,
			// Token: 0x04005E9C RID: 24220
			MoveNotSuspended,
			// Token: 0x04005E9D RID: 24221
			ConfirmationMessageNewExchangeUpgradeBucket,
			// Token: 0x04005E9E RID: 24222
			ConfirmationMessageRemoveExchangeRpcClientAccess,
			// Token: 0x04005E9F RID: 24223
			ErrorUnknown,
			// Token: 0x04005EA0 RID: 24224
			FoundAppId,
			// Token: 0x04005EA1 RID: 24225
			ConfirmationMessageSetHostedOutboundSpamFilterPolicy,
			// Token: 0x04005EA2 RID: 24226
			FailedToDeleteSystemMailbox,
			// Token: 0x04005EA3 RID: 24227
			DagTaskStoreMustBeRunningOnMachineException,
			// Token: 0x04005EA4 RID: 24228
			ErrorInvalidAsyncNotificationProcessType,
			// Token: 0x04005EA5 RID: 24229
			messageAutodiscoverTaskException,
			// Token: 0x04005EA6 RID: 24230
			ComAdminOtherOwnerException,
			// Token: 0x04005EA7 RID: 24231
			TargetSharingEprDoesNotMatchAnyExternalURI,
			// Token: 0x04005EA8 RID: 24232
			ErrorCannotRetargetToDifferentVersionServerThanOriginal,
			// Token: 0x04005EA9 RID: 24233
			AutodiscoverUsingUrl,
			// Token: 0x04005EAA RID: 24234
			ConfirmationMessageUpdateRoleGroupMember,
			// Token: 0x04005EAB RID: 24235
			ExchangePartnerDoesntOwnDomain,
			// Token: 0x04005EAC RID: 24236
			MapiTransactionResultCaseNotHandled,
			// Token: 0x04005EAD RID: 24237
			ErrorMultiReferenceParameter,
			// Token: 0x04005EAE RID: 24238
			ErrorSourceFileNotFound,
			// Token: 0x04005EAF RID: 24239
			ConfirmationMessageStartDatabaseAvailabilityGroupServer,
			// Token: 0x04005EB0 RID: 24240
			ConfirmationMessageAuthEffectiveDateNotReached,
			// Token: 0x04005EB1 RID: 24241
			SkipReadEmptyTemplateGuid,
			// Token: 0x04005EB2 RID: 24242
			CrossValidationAlgorithmError,
			// Token: 0x04005EB3 RID: 24243
			DirectoryDoesNotExist,
			// Token: 0x04005EB4 RID: 24244
			ConfirmationMessageNewLinkedUser,
			// Token: 0x04005EB5 RID: 24245
			DagTaskServerMailboxServerAlsoServesAsFswNodeException,
			// Token: 0x04005EB6 RID: 24246
			ErrorCouldNotFindIndexEntriesForRequest,
			// Token: 0x04005EB7 RID: 24247
			RestoreNeedsAlternateWitnessServer,
			// Token: 0x04005EB8 RID: 24248
			ValueIsEmptyException,
			// Token: 0x04005EB9 RID: 24249
			ErrorCheckingTPRListener,
			// Token: 0x04005EBA RID: 24250
			messageMissingParameterException,
			// Token: 0x04005EBB RID: 24251
			ErrorTooManyDatabaseCopies,
			// Token: 0x04005EBC RID: 24252
			ConfirmationMessageNewFederationTrustWithMetadata,
			// Token: 0x04005EBD RID: 24253
			OwaPropertySetableOnlyOnOwaVirtualDirectory,
			// Token: 0x04005EBE RID: 24254
			WillNotRemoveFromLocalAdministratorGroup,
			// Token: 0x04005EBF RID: 24255
			ServerSiteInformationAlreadySet,
			// Token: 0x04005EC0 RID: 24256
			ConfirmationMessageUpdateAddressList,
			// Token: 0x04005EC1 RID: 24257
			CannotManipulateAlternateServiceAccountsRemotely,
			// Token: 0x04005EC2 RID: 24258
			ErrorPSTFileNameIncorrect,
			// Token: 0x04005EC3 RID: 24259
			ConfirmationMessageNewRpcClientAccess,
			// Token: 0x04005EC4 RID: 24260
			VerboseSyncTaskPopulateCookie,
			// Token: 0x04005EC5 RID: 24261
			ErrorRecipientNotFound,
			// Token: 0x04005EC6 RID: 24262
			ErrorReadingAMRole,
			// Token: 0x04005EC7 RID: 24263
			ErrorDuplicateCertificateSubject,
			// Token: 0x04005EC8 RID: 24264
			WarningInvalidRoleAssignmentNotCloned,
			// Token: 0x04005EC9 RID: 24265
			ConfirmationMessageRemoveRecipientPermission,
			// Token: 0x04005ECA RID: 24266
			MapiTransactionErrorMsgTimeout,
			// Token: 0x04005ECB RID: 24267
			ConfirmationMessageNewFolderMoveRequest,
			// Token: 0x04005ECC RID: 24268
			InfoProcessAddMember,
			// Token: 0x04005ECD RID: 24269
			ErrorInvalidNetId,
			// Token: 0x04005ECE RID: 24270
			ErrorRoleEntryExistOnChildren,
			// Token: 0x04005ECF RID: 24271
			ErrorDlpInconsistentStateAndEnabledParameters,
			// Token: 0x04005ED0 RID: 24272
			ErrorMailboxDatabaseNotUnique,
			// Token: 0x04005ED1 RID: 24273
			RecipientTenantNotFound,
			// Token: 0x04005ED2 RID: 24274
			ErrorNetIDValuesDoNotMatch,
			// Token: 0x04005ED3 RID: 24275
			IisTasksValidationInvalidUnicodeException,
			// Token: 0x04005ED4 RID: 24276
			InterceptorErrorCustomResponseCodeMustMatchRejectAction,
			// Token: 0x04005ED5 RID: 24277
			ConfirmationMessageAddPublicFolderClientPermission,
			// Token: 0x04005ED6 RID: 24278
			SelectedConnectionType,
			// Token: 0x04005ED7 RID: 24279
			FormsAuthenticationDeleteMarksIfUnusedUnknownErrorException,
			// Token: 0x04005ED8 RID: 24280
			RpcNotRegistered,
			// Token: 0x04005ED9 RID: 24281
			ExportDestinationAccessDenied,
			// Token: 0x04005EDA RID: 24282
			ErrorCannotFindComputerObjectByServerFqdnNeedManualAdd,
			// Token: 0x04005EDB RID: 24283
			RequestCertificateFileInvalid,
			// Token: 0x04005EDC RID: 24284
			ConfirmationMessageRemoveSendConnector,
			// Token: 0x04005EDD RID: 24285
			ErrorRusServiceUnavaliable,
			// Token: 0x04005EDE RID: 24286
			ErrorEdbFilePathMissed,
			// Token: 0x04005EDF RID: 24287
			ErrorMailboxAuditLogSearchStartDateIsLaterThanEndDate,
			// Token: 0x04005EE0 RID: 24288
			MapiTransactionServerWithoutMdbs,
			// Token: 0x04005EE1 RID: 24289
			InfoCreatePasswordSettings,
			// Token: 0x04005EE2 RID: 24290
			TryingCertificate,
			// Token: 0x04005EE3 RID: 24291
			ConfirmationMessageRemoveOabVirtualDirectory,
			// Token: 0x04005EE4 RID: 24292
			CannotContinue,
			// Token: 0x04005EE5 RID: 24293
			NotEnoughFreePrioritiesAvailable,
			// Token: 0x04005EE6 RID: 24294
			ElcExpirationServiceUnavailable,
			// Token: 0x04005EE7 RID: 24295
			MoveMailboxOnlineShouldMove,
			// Token: 0x04005EE8 RID: 24296
			InfoProcessAddRight,
			// Token: 0x04005EE9 RID: 24297
			CasHealthOwaLogonAuthenticationMethod,
			// Token: 0x04005EEA RID: 24298
			InvalidMessageClassification,
			// Token: 0x04005EEB RID: 24299
			ConfirmationMessageSetOrganizationFlags,
			// Token: 0x04005EEC RID: 24300
			ConfirmationMessageSetWorkloadPolicy,
			// Token: 0x04005EED RID: 24301
			DuplicateItemInGatewayIpAddressListId,
			// Token: 0x04005EEE RID: 24302
			ErrorAdUserNotUnique,
			// Token: 0x04005EEF RID: 24303
			ConfirmationMessageNewClassificationRuleCollection,
			// Token: 0x04005EF0 RID: 24304
			ClearingHostServerForDatabaseCopy,
			// Token: 0x04005EF1 RID: 24305
			ConfirmationMessageSetHostedContentFilterRule,
			// Token: 0x04005EF2 RID: 24306
			WarningProvisionedServerAlreadyAssigned,
			// Token: 0x04005EF3 RID: 24307
			ExportToPSTShouldExport,
			// Token: 0x04005EF4 RID: 24308
			VerboseWillBeLookingForAssignee,
			// Token: 0x04005EF5 RID: 24309
			SetMailboxSearchConfirmation,
			// Token: 0x04005EF6 RID: 24310
			FailedToReadAirSyncDebugLogging,
			// Token: 0x04005EF7 RID: 24311
			ErrorCannotSetVirtualDirectoryOutOfWriteScope,
			// Token: 0x04005EF8 RID: 24312
			ExportMigrationBatchRowCountOutOfBoundsException,
			// Token: 0x04005EF9 RID: 24313
			VerboseDefaultGALFound,
			// Token: 0x04005EFA RID: 24314
			ConfirmationMessageRemoveExchangeSettings,
			// Token: 0x04005EFB RID: 24315
			InfoReadObjectFromDC,
			// Token: 0x04005EFC RID: 24316
			TasksRpcListenerRpcFailed,
			// Token: 0x04005EFD RID: 24317
			ErrorRemoteEndpointsCannotBeUsedOnLocalBatches,
			// Token: 0x04005EFE RID: 24318
			ExportIOFailure,
			// Token: 0x04005EFF RID: 24319
			DeleteClusterDBKey,
			// Token: 0x04005F00 RID: 24320
			ConfirmationMessageSetDeliveryAgentConnector,
			// Token: 0x04005F01 RID: 24321
			MRSProxyNotResponding,
			// Token: 0x04005F02 RID: 24322
			CorruptedRoleNeedsCleanupException,
			// Token: 0x04005F03 RID: 24323
			ErrorManagedMemberExists,
			// Token: 0x04005F04 RID: 24324
			InfoMovedGroup,
			// Token: 0x04005F05 RID: 24325
			VerboseFoundInvalidAlternateServiceAccountCredential,
			// Token: 0x04005F06 RID: 24326
			CannotProvisionNonCoexistenceDomain,
			// Token: 0x04005F07 RID: 24327
			VerboseRereadRecipient,
			// Token: 0x04005F08 RID: 24328
			ConfirmationMessageSetInboundConnector,
			// Token: 0x04005F09 RID: 24329
			TestMailflowSucceeded,
			// Token: 0x04005F0A RID: 24330
			ErrorAdministratorNotInDomainError,
			// Token: 0x04005F0B RID: 24331
			ErrorOabALAlreadyAssigned,
			// Token: 0x04005F0C RID: 24332
			CommitMetabaseChangesException,
			// Token: 0x04005F0D RID: 24333
			ErrorAssociatedMRSRequestExists,
			// Token: 0x04005F0E RID: 24334
			ClassificationRuleCollectionExistingRuleIdViolation,
			// Token: 0x04005F0F RID: 24335
			ConfirmationMessageRemoveRoutingGroupConnector,
			// Token: 0x04005F10 RID: 24336
			ErrorOriginalLogFolderPathIsMissed,
			// Token: 0x04005F11 RID: 24337
			VerboseFailedToPrepopulateCache,
			// Token: 0x04005F12 RID: 24338
			ConfirmationMessageEnableRpcHttpExternalOnly,
			// Token: 0x04005F13 RID: 24339
			messageClientAccessArrayNotFoundException,
			// Token: 0x04005F14 RID: 24340
			UnwillingToPerformException,
			// Token: 0x04005F15 RID: 24341
			ErrorTestMailboxNotFound,
			// Token: 0x04005F16 RID: 24342
			RequiredColumnEmpty,
			// Token: 0x04005F17 RID: 24343
			ErrorCannotDisablePrimaryPublicFolderMailbox,
			// Token: 0x04005F18 RID: 24344
			ErrorRootContainerNotExist,
			// Token: 0x04005F19 RID: 24345
			DagTaskServerCanNotContactClusterException,
			// Token: 0x04005F1A RID: 24346
			ErrorCannotUpgradeManagedFolder,
			// Token: 0x04005F1B RID: 24347
			WriteScopeGreaterThanRoleScope,
			// Token: 0x04005F1C RID: 24348
			RemoveADServerMetadataConfirmationMessage,
			// Token: 0x04005F1D RID: 24349
			ConfirmationMessageEnableMailboxAuditLog,
			// Token: 0x04005F1E RID: 24350
			Error_InvalidAddress,
			// Token: 0x04005F1F RID: 24351
			UnifiedMessagingMailboxPolicyHasProtectAuthenticatedVoiceMailSetTo,
			// Token: 0x04005F20 RID: 24352
			ErrorManagedByCrossTenant,
			// Token: 0x04005F21 RID: 24353
			MigrationPartitionMailboxInvalid,
			// Token: 0x04005F22 RID: 24354
			AttemptingToManageRole,
			// Token: 0x04005F23 RID: 24355
			RmsOnlineFailedToGetTpd,
			// Token: 0x04005F24 RID: 24356
			ErrorCannotModifyRehomingRequest,
			// Token: 0x04005F25 RID: 24357
			VerboseBeginTextExtraction,
			// Token: 0x04005F26 RID: 24358
			CasHealthOwaErrorPageRequestUrl,
			// Token: 0x04005F27 RID: 24359
			ConfirmationMessageNewTeamMailbox,
			// Token: 0x04005F28 RID: 24360
			DagMemberUpCheckFailed,
			// Token: 0x04005F29 RID: 24361
			MailboxAssistantsServiceCouldNotBeStopped,
			// Token: 0x04005F2A RID: 24362
			ConfirmationMessageRemoveHostedEncryptionVirtualDirectory,
			// Token: 0x04005F2B RID: 24363
			UnableToGetProcessForService,
			// Token: 0x04005F2C RID: 24364
			ConfirmationMessageConnectMailboxShared,
			// Token: 0x04005F2D RID: 24365
			CasHealthOwaUrlColon,
			// Token: 0x04005F2E RID: 24366
			ErrorDuplicateKey,
			// Token: 0x04005F2F RID: 24367
			ConfirmationMessageSwitchMailboxPolicy,
			// Token: 0x04005F30 RID: 24368
			InfoCreateMESOContainer,
			// Token: 0x04005F31 RID: 24369
			ErrorNoDefaultAcceptedDomainFound,
			// Token: 0x04005F32 RID: 24370
			IPRangeInConnectorContainsReservedIPAddressesId,
			// Token: 0x04005F33 RID: 24371
			HostedContentFilterActionDescription,
			// Token: 0x04005F34 RID: 24372
			DomainIgnoredBecauseApplicationUriInconsitent,
			// Token: 0x04005F35 RID: 24373
			TestSearchServiceNotRunning,
			// Token: 0x04005F36 RID: 24374
			Error_NoDatabaseAttributesMatchingMailboxProvisioningConstraint,
			// Token: 0x04005F37 RID: 24375
			ConfirmationMessageNewAuthServer,
			// Token: 0x04005F38 RID: 24376
			ErrorCannotUMEnableInTarget,
			// Token: 0x04005F39 RID: 24377
			TPRListenerNotHealthy,
			// Token: 0x04005F3A RID: 24378
			ErrorNoTenantGlsRecord,
			// Token: 0x04005F3B RID: 24379
			ConfirmationMessageSetDistributionGroup,
			// Token: 0x04005F3C RID: 24380
			ErrorDBOwningServerNotFound,
			// Token: 0x04005F3D RID: 24381
			WarningDismountDatabaseToDoConfigurationOnly,
			// Token: 0x04005F3E RID: 24382
			DuplicateRemoteDomain,
			// Token: 0x04005F3F RID: 24383
			ConfirmationMessageInterceptorRuleForestWide,
			// Token: 0x04005F40 RID: 24384
			ErrorRemoveMailboxPlanRoleAssignment
		}
	}
}
