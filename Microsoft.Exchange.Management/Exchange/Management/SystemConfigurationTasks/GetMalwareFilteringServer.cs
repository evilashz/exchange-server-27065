using System;
using System.Management.Automation;
using Microsoft.Exchange.Configuration.Tasks;
using Microsoft.Exchange.Data;
using Microsoft.Exchange.Data.Directory.Management;
using Microsoft.Exchange.Data.Directory.SystemConfiguration;

namespace Microsoft.Exchange.Management.SystemConfigurationTasks
{
	// Token: 0x020009B5 RID: 2485
	[Cmdlet("Get", "MalwareFilteringServer", DefaultParameterSetName = "Identity")]
	public sealed class GetMalwareFilteringServer : GetSystemConfigurationObjectTask<MalwareFilteringServerIdParameter, Server>
	{
		// Token: 0x17001A73 RID: 6771
		// (get) Token: 0x060058A6 RID: 22694 RVA: 0x00172070 File Offset: 0x00170270
		protected override QueryFilter InternalFilter
		{
			get
			{
				return new BitMaskOrFilter(ServerSchema.CurrentServerRole, 32UL);
			}
		}

		// Token: 0x17001A74 RID: 6772
		// (get) Token: 0x060058A7 RID: 22695 RVA: 0x0017207F File Offset: 0x0017027F
		protected override bool DeepSearch
		{
			get
			{
				return true;
			}
		}

		// Token: 0x060058A8 RID: 22696 RVA: 0x00172084 File Offset: 0x00170284
		protected override void WriteResult(IConfigurable dataObject)
		{
			TaskLogger.LogEnter(new object[]
			{
				dataObject.Identity,
				dataObject
			});
			base.WriteResult(new MalwareFilteringServer((Server)dataObject));
			TaskLogger.LogExit();
		}
	}
}
