using System;
using System.Management.Automation;
using Microsoft.Exchange.Configuration.Tasks;
using Microsoft.Exchange.Data;
using Microsoft.Exchange.Data.Common;
using Microsoft.Exchange.Data.Directory;
using Microsoft.Exchange.Data.Directory.SystemConfiguration;
using Microsoft.Exchange.Management.Tasks;

namespace Microsoft.Exchange.Management.SystemConfigurationTasks
{
	// Token: 0x02000A84 RID: 2692
	[Cmdlet("New", "MalwareFilterPolicy", SupportsShouldProcess = true)]
	public sealed class NewMalwareFilterPolicy : NewMultitenancySystemConfigurationObjectTask<MalwareFilterPolicy>
	{
		// Token: 0x17001CDB RID: 7387
		// (get) Token: 0x06005F9F RID: 24479 RVA: 0x00190262 File Offset: 0x0018E462
		// (set) Token: 0x06005FA0 RID: 24480 RVA: 0x0019026A File Offset: 0x0018E46A
		[Parameter]
		public override SwitchParameter IgnoreDehydratedFlag { get; set; }

		// Token: 0x17001CDC RID: 7388
		// (get) Token: 0x06005FA1 RID: 24481 RVA: 0x00190273 File Offset: 0x0018E473
		// (set) Token: 0x06005FA2 RID: 24482 RVA: 0x0019027B File Offset: 0x0018E47B
		[Parameter(Mandatory = true, Position = 0)]
		public new string Name
		{
			get
			{
				return base.Name;
			}
			set
			{
				base.Name = value;
			}
		}

		// Token: 0x17001CDD RID: 7389
		// (get) Token: 0x06005FA3 RID: 24483 RVA: 0x00190284 File Offset: 0x0018E484
		// (set) Token: 0x06005FA4 RID: 24484 RVA: 0x00190291 File Offset: 0x0018E491
		[Parameter]
		public string AdminDisplayName
		{
			get
			{
				return this.DataObject.AdminDisplayName;
			}
			set
			{
				this.DataObject.AdminDisplayName = value;
			}
		}

		// Token: 0x17001CDE RID: 7390
		// (get) Token: 0x06005FA5 RID: 24485 RVA: 0x0019029F File Offset: 0x0018E49F
		// (set) Token: 0x06005FA6 RID: 24486 RVA: 0x001902AC File Offset: 0x0018E4AC
		[Parameter]
		public string CustomAlertText
		{
			get
			{
				return this.DataObject.CustomAlertText;
			}
			set
			{
				this.DataObject.CustomAlertText = value;
			}
		}

		// Token: 0x17001CDF RID: 7391
		// (get) Token: 0x06005FA7 RID: 24487 RVA: 0x001902BA File Offset: 0x0018E4BA
		// (set) Token: 0x06005FA8 RID: 24488 RVA: 0x001902C7 File Offset: 0x0018E4C7
		[Parameter]
		public string CustomInternalSubject
		{
			get
			{
				return this.DataObject.CustomInternalSubject;
			}
			set
			{
				this.DataObject.CustomInternalSubject = value;
			}
		}

		// Token: 0x17001CE0 RID: 7392
		// (get) Token: 0x06005FA9 RID: 24489 RVA: 0x001902D5 File Offset: 0x0018E4D5
		// (set) Token: 0x06005FAA RID: 24490 RVA: 0x001902E2 File Offset: 0x0018E4E2
		[Parameter]
		public string CustomInternalBody
		{
			get
			{
				return this.DataObject.CustomInternalBody;
			}
			set
			{
				this.DataObject.CustomInternalBody = value;
			}
		}

		// Token: 0x17001CE1 RID: 7393
		// (get) Token: 0x06005FAB RID: 24491 RVA: 0x001902F0 File Offset: 0x0018E4F0
		// (set) Token: 0x06005FAC RID: 24492 RVA: 0x001902FD File Offset: 0x0018E4FD
		[Parameter]
		public string CustomExternalSubject
		{
			get
			{
				return this.DataObject.CustomExternalSubject;
			}
			set
			{
				this.DataObject.CustomExternalSubject = value;
			}
		}

		// Token: 0x17001CE2 RID: 7394
		// (get) Token: 0x06005FAD RID: 24493 RVA: 0x0019030B File Offset: 0x0018E50B
		// (set) Token: 0x06005FAE RID: 24494 RVA: 0x00190318 File Offset: 0x0018E518
		[Parameter]
		public string CustomExternalBody
		{
			get
			{
				return this.DataObject.CustomExternalBody;
			}
			set
			{
				this.DataObject.CustomExternalBody = value;
			}
		}

		// Token: 0x17001CE3 RID: 7395
		// (get) Token: 0x06005FAF RID: 24495 RVA: 0x00190326 File Offset: 0x0018E526
		// (set) Token: 0x06005FB0 RID: 24496 RVA: 0x00190333 File Offset: 0x0018E533
		[Parameter]
		public string CustomFromName
		{
			get
			{
				return this.DataObject.CustomFromName;
			}
			set
			{
				this.DataObject.CustomFromName = value;
			}
		}

		// Token: 0x17001CE4 RID: 7396
		// (get) Token: 0x06005FB1 RID: 24497 RVA: 0x00190341 File Offset: 0x0018E541
		// (set) Token: 0x06005FB2 RID: 24498 RVA: 0x0019034E File Offset: 0x0018E54E
		[Parameter]
		public SmtpAddress CustomFromAddress
		{
			get
			{
				return this.DataObject.CustomFromAddress;
			}
			set
			{
				this.DataObject.CustomFromAddress = value;
			}
		}

		// Token: 0x17001CE5 RID: 7397
		// (get) Token: 0x06005FB3 RID: 24499 RVA: 0x0019035C File Offset: 0x0018E55C
		// (set) Token: 0x06005FB4 RID: 24500 RVA: 0x00190369 File Offset: 0x0018E569
		[Parameter]
		public bool BypassInboundMessages
		{
			get
			{
				return this.DataObject.BypassInboundMessages;
			}
			set
			{
				this.DataObject.BypassInboundMessages = value;
			}
		}

		// Token: 0x17001CE6 RID: 7398
		// (get) Token: 0x06005FB5 RID: 24501 RVA: 0x00190377 File Offset: 0x0018E577
		// (set) Token: 0x06005FB6 RID: 24502 RVA: 0x00190384 File Offset: 0x0018E584
		[Parameter]
		public bool BypassOutboundMessages
		{
			get
			{
				return this.DataObject.BypassOutboundMessages;
			}
			set
			{
				this.DataObject.BypassOutboundMessages = value;
			}
		}

		// Token: 0x17001CE7 RID: 7399
		// (get) Token: 0x06005FB7 RID: 24503 RVA: 0x00190392 File Offset: 0x0018E592
		// (set) Token: 0x06005FB8 RID: 24504 RVA: 0x0019039F File Offset: 0x0018E59F
		[Parameter]
		public MalwareFilteringAction Action
		{
			get
			{
				return this.DataObject.Action;
			}
			set
			{
				this.DataObject.Action = value;
			}
		}

		// Token: 0x17001CE8 RID: 7400
		// (get) Token: 0x06005FB9 RID: 24505 RVA: 0x001903AD File Offset: 0x0018E5AD
		// (set) Token: 0x06005FBA RID: 24506 RVA: 0x001903BA File Offset: 0x0018E5BA
		[Parameter]
		public bool CustomNotifications
		{
			get
			{
				return this.DataObject.CustomNotifications;
			}
			set
			{
				this.DataObject.CustomNotifications = value;
			}
		}

		// Token: 0x17001CE9 RID: 7401
		// (get) Token: 0x06005FBB RID: 24507 RVA: 0x001903C8 File Offset: 0x0018E5C8
		// (set) Token: 0x06005FBC RID: 24508 RVA: 0x001903D5 File Offset: 0x0018E5D5
		[Parameter]
		public bool EnableInternalSenderNotifications
		{
			get
			{
				return this.DataObject.EnableInternalSenderNotifications;
			}
			set
			{
				this.DataObject.EnableInternalSenderNotifications = value;
			}
		}

		// Token: 0x17001CEA RID: 7402
		// (get) Token: 0x06005FBD RID: 24509 RVA: 0x001903E3 File Offset: 0x0018E5E3
		// (set) Token: 0x06005FBE RID: 24510 RVA: 0x001903F0 File Offset: 0x0018E5F0
		[Parameter]
		public bool EnableExternalSenderNotifications
		{
			get
			{
				return this.DataObject.EnableExternalSenderNotifications;
			}
			set
			{
				this.DataObject.EnableExternalSenderNotifications = value;
			}
		}

		// Token: 0x17001CEB RID: 7403
		// (get) Token: 0x06005FBF RID: 24511 RVA: 0x001903FE File Offset: 0x0018E5FE
		// (set) Token: 0x06005FC0 RID: 24512 RVA: 0x0019040B File Offset: 0x0018E60B
		[Parameter]
		public bool EnableInternalSenderAdminNotifications
		{
			get
			{
				return this.DataObject.EnableInternalSenderAdminNotifications;
			}
			set
			{
				this.DataObject.EnableInternalSenderAdminNotifications = value;
			}
		}

		// Token: 0x17001CEC RID: 7404
		// (get) Token: 0x06005FC1 RID: 24513 RVA: 0x00190419 File Offset: 0x0018E619
		// (set) Token: 0x06005FC2 RID: 24514 RVA: 0x00190426 File Offset: 0x0018E626
		[Parameter]
		public bool EnableExternalSenderAdminNotifications
		{
			get
			{
				return this.DataObject.EnableExternalSenderAdminNotifications;
			}
			set
			{
				this.DataObject.EnableExternalSenderAdminNotifications = value;
			}
		}

		// Token: 0x17001CED RID: 7405
		// (get) Token: 0x06005FC3 RID: 24515 RVA: 0x00190434 File Offset: 0x0018E634
		// (set) Token: 0x06005FC4 RID: 24516 RVA: 0x00190441 File Offset: 0x0018E641
		[Parameter]
		public SmtpAddress InternalSenderAdminAddress
		{
			get
			{
				return this.DataObject.InternalSenderAdminAddress;
			}
			set
			{
				this.DataObject.InternalSenderAdminAddress = value;
			}
		}

		// Token: 0x17001CEE RID: 7406
		// (get) Token: 0x06005FC5 RID: 24517 RVA: 0x0019044F File Offset: 0x0018E64F
		// (set) Token: 0x06005FC6 RID: 24518 RVA: 0x0019045C File Offset: 0x0018E65C
		[Parameter]
		public SmtpAddress ExternalSenderAdminAddress
		{
			get
			{
				return this.DataObject.ExternalSenderAdminAddress;
			}
			set
			{
				this.DataObject.ExternalSenderAdminAddress = value;
			}
		}

		// Token: 0x17001CEF RID: 7407
		// (get) Token: 0x06005FC7 RID: 24519 RVA: 0x0019046A File Offset: 0x0018E66A
		protected override LocalizedString ConfirmationMessage
		{
			get
			{
				return Strings.ConfirmationMessageNewMalwareFilterPolicy(this.Name);
			}
		}

		// Token: 0x17001CF0 RID: 7408
		// (get) Token: 0x06005FC8 RID: 24520 RVA: 0x00190477 File Offset: 0x0018E677
		protected override SharedTenantConfigurationMode SharedTenantConfigurationMode
		{
			get
			{
				if (!this.IgnoreDehydratedFlag)
				{
					return SharedTenantConfigurationMode.Dehydrateable;
				}
				return SharedTenantConfigurationMode.NotShared;
			}
		}

		// Token: 0x06005FC9 RID: 24521 RVA: 0x0019048C File Offset: 0x0018E68C
		protected override IConfigurable PrepareDataObject()
		{
			TaskLogger.LogEnter();
			MalwareFilterPolicy malwareFilterPolicy = (MalwareFilterPolicy)base.PrepareDataObject();
			malwareFilterPolicy.SetId((IConfigurationSession)base.DataSession, this.Name);
			if (!this.MalwareFilterPolicyExist())
			{
				this.DataObject.IsDefault = true;
			}
			TaskLogger.LogExit();
			return malwareFilterPolicy;
		}

		// Token: 0x06005FCA RID: 24522 RVA: 0x001904DC File Offset: 0x0018E6DC
		protected override void InternalProcessRecord()
		{
			TaskLogger.LogEnter();
			if (SharedConfiguration.IsSharedConfiguration(this.DataObject.OrganizationId) && !base.ShouldContinue(Strings.ConfirmSharedConfiguration(this.DataObject.OrganizationId.OrganizationalUnit.Name)))
			{
				TaskLogger.LogExit();
				return;
			}
			base.CreateParentContainerIfNeeded(this.DataObject);
			base.InternalProcessRecord();
			TaskLogger.LogExit();
		}

		// Token: 0x06005FCB RID: 24523 RVA: 0x00190540 File Offset: 0x0018E740
		private bool MalwareFilterPolicyExist()
		{
			QueryFilter filter = new ComparisonFilter(ComparisonOperator.Equal, ADObjectSchema.ExchangeVersion, ExchangeObjectVersion.Exchange2012);
			MalwareFilterPolicy[] array = ((IConfigurationSession)base.DataSession).Find<MalwareFilterPolicy>(null, QueryScope.SubTree, filter, null, 1);
			return array.Length != 0;
		}
	}
}
