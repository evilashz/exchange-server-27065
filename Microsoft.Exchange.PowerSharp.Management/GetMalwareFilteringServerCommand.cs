using System;
using System.Management.Automation;
using Microsoft.Exchange.Configuration.Tasks;
using Microsoft.Exchange.Data;
using Microsoft.Exchange.Data.Directory.SystemConfiguration;

namespace Microsoft.Exchange.PowerSharp.Management
{
	// Token: 0x0200063F RID: 1599
	public class GetMalwareFilteringServerCommand : SyntheticCommandWithPipelineInput<Server, Server>
	{
		// Token: 0x060050EB RID: 20715 RVA: 0x00080110 File Offset: 0x0007E310
		private GetMalwareFilteringServerCommand() : base("Get-MalwareFilteringServer")
		{
		}

		// Token: 0x060050EC RID: 20716 RVA: 0x0008011D File Offset: 0x0007E31D
		public GetMalwareFilteringServerCommand(ExchangeManagementSession session) : this()
		{
			base.Session = session;
		}

		// Token: 0x060050ED RID: 20717 RVA: 0x0008012C File Offset: 0x0007E32C
		public virtual GetMalwareFilteringServerCommand SetParameters(GetMalwareFilteringServerCommand.DefaultParameters parameters)
		{
			base.SetParameters(parameters);
			return this;
		}

		// Token: 0x060050EE RID: 20718 RVA: 0x00080136 File Offset: 0x0007E336
		public virtual GetMalwareFilteringServerCommand SetParameters(GetMalwareFilteringServerCommand.IdentityParameters parameters)
		{
			base.SetParameters(parameters);
			return this;
		}

		// Token: 0x02000640 RID: 1600
		public class DefaultParameters : ParametersBase
		{
			// Token: 0x17003026 RID: 12326
			// (set) Token: 0x060050EF RID: 20719 RVA: 0x00080140 File Offset: 0x0007E340
			public virtual Fqdn DomainController
			{
				set
				{
					base.PowerSharpParameters["DomainController"] = value;
				}
			}

			// Token: 0x17003027 RID: 12327
			// (set) Token: 0x060050F0 RID: 20720 RVA: 0x00080153 File Offset: 0x0007E353
			public virtual SwitchParameter Verbose
			{
				set
				{
					base.PowerSharpParameters["Verbose"] = value;
				}
			}

			// Token: 0x17003028 RID: 12328
			// (set) Token: 0x060050F1 RID: 20721 RVA: 0x0008016B File Offset: 0x0007E36B
			public virtual SwitchParameter Debug
			{
				set
				{
					base.PowerSharpParameters["Debug"] = value;
				}
			}

			// Token: 0x17003029 RID: 12329
			// (set) Token: 0x060050F2 RID: 20722 RVA: 0x00080183 File Offset: 0x0007E383
			public virtual ActionPreference ErrorAction
			{
				set
				{
					base.PowerSharpParameters["ErrorAction"] = value;
				}
			}

			// Token: 0x1700302A RID: 12330
			// (set) Token: 0x060050F3 RID: 20723 RVA: 0x0008019B File Offset: 0x0007E39B
			public virtual ActionPreference WarningAction
			{
				set
				{
					base.PowerSharpParameters["WarningAction"] = value;
				}
			}
		}

		// Token: 0x02000641 RID: 1601
		public class IdentityParameters : ParametersBase
		{
			// Token: 0x1700302B RID: 12331
			// (set) Token: 0x060050F5 RID: 20725 RVA: 0x000801BB File Offset: 0x0007E3BB
			public virtual MalwareFilteringServerIdParameter Identity
			{
				set
				{
					base.PowerSharpParameters["Identity"] = value;
				}
			}

			// Token: 0x1700302C RID: 12332
			// (set) Token: 0x060050F6 RID: 20726 RVA: 0x000801CE File Offset: 0x0007E3CE
			public virtual Fqdn DomainController
			{
				set
				{
					base.PowerSharpParameters["DomainController"] = value;
				}
			}

			// Token: 0x1700302D RID: 12333
			// (set) Token: 0x060050F7 RID: 20727 RVA: 0x000801E1 File Offset: 0x0007E3E1
			public virtual SwitchParameter Verbose
			{
				set
				{
					base.PowerSharpParameters["Verbose"] = value;
				}
			}

			// Token: 0x1700302E RID: 12334
			// (set) Token: 0x060050F8 RID: 20728 RVA: 0x000801F9 File Offset: 0x0007E3F9
			public virtual SwitchParameter Debug
			{
				set
				{
					base.PowerSharpParameters["Debug"] = value;
				}
			}

			// Token: 0x1700302F RID: 12335
			// (set) Token: 0x060050F9 RID: 20729 RVA: 0x00080211 File Offset: 0x0007E411
			public virtual ActionPreference ErrorAction
			{
				set
				{
					base.PowerSharpParameters["ErrorAction"] = value;
				}
			}

			// Token: 0x17003030 RID: 12336
			// (set) Token: 0x060050FA RID: 20730 RVA: 0x00080229 File Offset: 0x0007E429
			public virtual ActionPreference WarningAction
			{
				set
				{
					base.PowerSharpParameters["WarningAction"] = value;
				}
			}
		}
	}
}
