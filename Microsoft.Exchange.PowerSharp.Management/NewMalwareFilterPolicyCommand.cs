using System;
using System.Management.Automation;
using Microsoft.Exchange.Configuration.Tasks;
using Microsoft.Exchange.Data;
using Microsoft.Exchange.Data.Directory.SystemConfiguration;

namespace Microsoft.Exchange.PowerSharp.Management
{
	// Token: 0x02000778 RID: 1912
	public class NewMalwareFilterPolicyCommand : SyntheticCommandWithPipelineInput<MalwareFilterPolicy, MalwareFilterPolicy>
	{
		// Token: 0x060060E9 RID: 24809 RVA: 0x0009541F File Offset: 0x0009361F
		private NewMalwareFilterPolicyCommand() : base("New-MalwareFilterPolicy")
		{
		}

		// Token: 0x060060EA RID: 24810 RVA: 0x0009542C File Offset: 0x0009362C
		public NewMalwareFilterPolicyCommand(ExchangeManagementSession session) : this()
		{
			base.Session = session;
		}

		// Token: 0x060060EB RID: 24811 RVA: 0x0009543B File Offset: 0x0009363B
		public virtual NewMalwareFilterPolicyCommand SetParameters(NewMalwareFilterPolicyCommand.DefaultParameters parameters)
		{
			base.SetParameters(parameters);
			return this;
		}

		// Token: 0x02000779 RID: 1913
		public class DefaultParameters : ParametersBase
		{
			// Token: 0x17003DB2 RID: 15794
			// (set) Token: 0x060060EC RID: 24812 RVA: 0x00095445 File Offset: 0x00093645
			public virtual SwitchParameter IgnoreDehydratedFlag
			{
				set
				{
					base.PowerSharpParameters["IgnoreDehydratedFlag"] = value;
				}
			}

			// Token: 0x17003DB3 RID: 15795
			// (set) Token: 0x060060ED RID: 24813 RVA: 0x0009545D File Offset: 0x0009365D
			public virtual string Name
			{
				set
				{
					base.PowerSharpParameters["Name"] = value;
				}
			}

			// Token: 0x17003DB4 RID: 15796
			// (set) Token: 0x060060EE RID: 24814 RVA: 0x00095470 File Offset: 0x00093670
			public virtual string AdminDisplayName
			{
				set
				{
					base.PowerSharpParameters["AdminDisplayName"] = value;
				}
			}

			// Token: 0x17003DB5 RID: 15797
			// (set) Token: 0x060060EF RID: 24815 RVA: 0x00095483 File Offset: 0x00093683
			public virtual string CustomAlertText
			{
				set
				{
					base.PowerSharpParameters["CustomAlertText"] = value;
				}
			}

			// Token: 0x17003DB6 RID: 15798
			// (set) Token: 0x060060F0 RID: 24816 RVA: 0x00095496 File Offset: 0x00093696
			public virtual string CustomInternalSubject
			{
				set
				{
					base.PowerSharpParameters["CustomInternalSubject"] = value;
				}
			}

			// Token: 0x17003DB7 RID: 15799
			// (set) Token: 0x060060F1 RID: 24817 RVA: 0x000954A9 File Offset: 0x000936A9
			public virtual string CustomInternalBody
			{
				set
				{
					base.PowerSharpParameters["CustomInternalBody"] = value;
				}
			}

			// Token: 0x17003DB8 RID: 15800
			// (set) Token: 0x060060F2 RID: 24818 RVA: 0x000954BC File Offset: 0x000936BC
			public virtual string CustomExternalSubject
			{
				set
				{
					base.PowerSharpParameters["CustomExternalSubject"] = value;
				}
			}

			// Token: 0x17003DB9 RID: 15801
			// (set) Token: 0x060060F3 RID: 24819 RVA: 0x000954CF File Offset: 0x000936CF
			public virtual string CustomExternalBody
			{
				set
				{
					base.PowerSharpParameters["CustomExternalBody"] = value;
				}
			}

			// Token: 0x17003DBA RID: 15802
			// (set) Token: 0x060060F4 RID: 24820 RVA: 0x000954E2 File Offset: 0x000936E2
			public virtual string CustomFromName
			{
				set
				{
					base.PowerSharpParameters["CustomFromName"] = value;
				}
			}

			// Token: 0x17003DBB RID: 15803
			// (set) Token: 0x060060F5 RID: 24821 RVA: 0x000954F5 File Offset: 0x000936F5
			public virtual SmtpAddress CustomFromAddress
			{
				set
				{
					base.PowerSharpParameters["CustomFromAddress"] = value;
				}
			}

			// Token: 0x17003DBC RID: 15804
			// (set) Token: 0x060060F6 RID: 24822 RVA: 0x0009550D File Offset: 0x0009370D
			public virtual bool BypassInboundMessages
			{
				set
				{
					base.PowerSharpParameters["BypassInboundMessages"] = value;
				}
			}

			// Token: 0x17003DBD RID: 15805
			// (set) Token: 0x060060F7 RID: 24823 RVA: 0x00095525 File Offset: 0x00093725
			public virtual bool BypassOutboundMessages
			{
				set
				{
					base.PowerSharpParameters["BypassOutboundMessages"] = value;
				}
			}

			// Token: 0x17003DBE RID: 15806
			// (set) Token: 0x060060F8 RID: 24824 RVA: 0x0009553D File Offset: 0x0009373D
			public virtual MalwareFilteringAction Action
			{
				set
				{
					base.PowerSharpParameters["Action"] = value;
				}
			}

			// Token: 0x17003DBF RID: 15807
			// (set) Token: 0x060060F9 RID: 24825 RVA: 0x00095555 File Offset: 0x00093755
			public virtual bool CustomNotifications
			{
				set
				{
					base.PowerSharpParameters["CustomNotifications"] = value;
				}
			}

			// Token: 0x17003DC0 RID: 15808
			// (set) Token: 0x060060FA RID: 24826 RVA: 0x0009556D File Offset: 0x0009376D
			public virtual bool EnableInternalSenderNotifications
			{
				set
				{
					base.PowerSharpParameters["EnableInternalSenderNotifications"] = value;
				}
			}

			// Token: 0x17003DC1 RID: 15809
			// (set) Token: 0x060060FB RID: 24827 RVA: 0x00095585 File Offset: 0x00093785
			public virtual bool EnableExternalSenderNotifications
			{
				set
				{
					base.PowerSharpParameters["EnableExternalSenderNotifications"] = value;
				}
			}

			// Token: 0x17003DC2 RID: 15810
			// (set) Token: 0x060060FC RID: 24828 RVA: 0x0009559D File Offset: 0x0009379D
			public virtual bool EnableInternalSenderAdminNotifications
			{
				set
				{
					base.PowerSharpParameters["EnableInternalSenderAdminNotifications"] = value;
				}
			}

			// Token: 0x17003DC3 RID: 15811
			// (set) Token: 0x060060FD RID: 24829 RVA: 0x000955B5 File Offset: 0x000937B5
			public virtual bool EnableExternalSenderAdminNotifications
			{
				set
				{
					base.PowerSharpParameters["EnableExternalSenderAdminNotifications"] = value;
				}
			}

			// Token: 0x17003DC4 RID: 15812
			// (set) Token: 0x060060FE RID: 24830 RVA: 0x000955CD File Offset: 0x000937CD
			public virtual SmtpAddress InternalSenderAdminAddress
			{
				set
				{
					base.PowerSharpParameters["InternalSenderAdminAddress"] = value;
				}
			}

			// Token: 0x17003DC5 RID: 15813
			// (set) Token: 0x060060FF RID: 24831 RVA: 0x000955E5 File Offset: 0x000937E5
			public virtual SmtpAddress ExternalSenderAdminAddress
			{
				set
				{
					base.PowerSharpParameters["ExternalSenderAdminAddress"] = value;
				}
			}

			// Token: 0x17003DC6 RID: 15814
			// (set) Token: 0x06006100 RID: 24832 RVA: 0x000955FD File Offset: 0x000937FD
			public virtual string Organization
			{
				set
				{
					base.PowerSharpParameters["Organization"] = ((value != null) ? new OrganizationIdParameter(value) : null);
				}
			}

			// Token: 0x17003DC7 RID: 15815
			// (set) Token: 0x06006101 RID: 24833 RVA: 0x0009561B File Offset: 0x0009381B
			public virtual Fqdn DomainController
			{
				set
				{
					base.PowerSharpParameters["DomainController"] = value;
				}
			}

			// Token: 0x17003DC8 RID: 15816
			// (set) Token: 0x06006102 RID: 24834 RVA: 0x0009562E File Offset: 0x0009382E
			public virtual SwitchParameter Verbose
			{
				set
				{
					base.PowerSharpParameters["Verbose"] = value;
				}
			}

			// Token: 0x17003DC9 RID: 15817
			// (set) Token: 0x06006103 RID: 24835 RVA: 0x00095646 File Offset: 0x00093846
			public virtual SwitchParameter Debug
			{
				set
				{
					base.PowerSharpParameters["Debug"] = value;
				}
			}

			// Token: 0x17003DCA RID: 15818
			// (set) Token: 0x06006104 RID: 24836 RVA: 0x0009565E File Offset: 0x0009385E
			public virtual ActionPreference ErrorAction
			{
				set
				{
					base.PowerSharpParameters["ErrorAction"] = value;
				}
			}

			// Token: 0x17003DCB RID: 15819
			// (set) Token: 0x06006105 RID: 24837 RVA: 0x00095676 File Offset: 0x00093876
			public virtual ActionPreference WarningAction
			{
				set
				{
					base.PowerSharpParameters["WarningAction"] = value;
				}
			}

			// Token: 0x17003DCC RID: 15820
			// (set) Token: 0x06006106 RID: 24838 RVA: 0x0009568E File Offset: 0x0009388E
			public virtual SwitchParameter WhatIf
			{
				set
				{
					base.PowerSharpParameters["WhatIf"] = value;
				}
			}
		}
	}
}
