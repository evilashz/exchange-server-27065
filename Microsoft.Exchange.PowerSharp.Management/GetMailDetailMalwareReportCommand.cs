using System;
using System.Linq.Expressions;
using System.Management.Automation;
using Microsoft.Exchange.Configuration.Tasks;
using Microsoft.Exchange.Data;
using Microsoft.Exchange.Management.FfoReporting;

namespace Microsoft.Exchange.PowerSharp.Management
{
	// Token: 0x02000153 RID: 339
	public class GetMailDetailMalwareReportCommand : SyntheticCommandWithPipelineInput<MailDetailMalwareReport, MailDetailMalwareReport>
	{
		// Token: 0x0600215C RID: 8540 RVA: 0x00042E18 File Offset: 0x00041018
		private GetMailDetailMalwareReportCommand() : base("Get-MailDetailMalwareReport")
		{
		}

		// Token: 0x0600215D RID: 8541 RVA: 0x00042E25 File Offset: 0x00041025
		public GetMailDetailMalwareReportCommand(ExchangeManagementSession session) : this()
		{
			base.Session = session;
		}

		// Token: 0x0600215E RID: 8542 RVA: 0x00042E34 File Offset: 0x00041034
		public virtual GetMailDetailMalwareReportCommand SetParameters(GetMailDetailMalwareReportCommand.DefaultParameters parameters)
		{
			base.SetParameters(parameters);
			return this;
		}

		// Token: 0x02000154 RID: 340
		public class DefaultParameters : ParametersBase
		{
			// Token: 0x17000A6F RID: 2671
			// (set) Token: 0x0600215F RID: 8543 RVA: 0x00042E3E File Offset: 0x0004103E
			public virtual MultiValuedProperty<string> MalwareName
			{
				set
				{
					base.PowerSharpParameters["MalwareName"] = value;
				}
			}

			// Token: 0x17000A70 RID: 2672
			// (set) Token: 0x06002160 RID: 8544 RVA: 0x00042E51 File Offset: 0x00041051
			public virtual MultiValuedProperty<string> EventType
			{
				set
				{
					base.PowerSharpParameters["EventType"] = value;
				}
			}

			// Token: 0x17000A71 RID: 2673
			// (set) Token: 0x06002161 RID: 8545 RVA: 0x00042E64 File Offset: 0x00041064
			public virtual MultiValuedProperty<Guid> MessageTraceId
			{
				set
				{
					base.PowerSharpParameters["MessageTraceId"] = value;
				}
			}

			// Token: 0x17000A72 RID: 2674
			// (set) Token: 0x06002162 RID: 8546 RVA: 0x00042E77 File Offset: 0x00041077
			public virtual MultiValuedProperty<Fqdn> Domain
			{
				set
				{
					base.PowerSharpParameters["Domain"] = value;
				}
			}

			// Token: 0x17000A73 RID: 2675
			// (set) Token: 0x06002163 RID: 8547 RVA: 0x00042E8A File Offset: 0x0004108A
			public virtual DateTime? StartDate
			{
				set
				{
					base.PowerSharpParameters["StartDate"] = value;
				}
			}

			// Token: 0x17000A74 RID: 2676
			// (set) Token: 0x06002164 RID: 8548 RVA: 0x00042EA2 File Offset: 0x000410A2
			public virtual DateTime? EndDate
			{
				set
				{
					base.PowerSharpParameters["EndDate"] = value;
				}
			}

			// Token: 0x17000A75 RID: 2677
			// (set) Token: 0x06002165 RID: 8549 RVA: 0x00042EBA File Offset: 0x000410BA
			public virtual MultiValuedProperty<string> Direction
			{
				set
				{
					base.PowerSharpParameters["Direction"] = value;
				}
			}

			// Token: 0x17000A76 RID: 2678
			// (set) Token: 0x06002166 RID: 8550 RVA: 0x00042ECD File Offset: 0x000410CD
			public virtual MultiValuedProperty<string> MessageId
			{
				set
				{
					base.PowerSharpParameters["MessageId"] = value;
				}
			}

			// Token: 0x17000A77 RID: 2679
			// (set) Token: 0x06002167 RID: 8551 RVA: 0x00042EE0 File Offset: 0x000410E0
			public virtual MultiValuedProperty<string> SenderAddress
			{
				set
				{
					base.PowerSharpParameters["SenderAddress"] = value;
				}
			}

			// Token: 0x17000A78 RID: 2680
			// (set) Token: 0x06002168 RID: 8552 RVA: 0x00042EF3 File Offset: 0x000410F3
			public virtual MultiValuedProperty<string> RecipientAddress
			{
				set
				{
					base.PowerSharpParameters["RecipientAddress"] = value;
				}
			}

			// Token: 0x17000A79 RID: 2681
			// (set) Token: 0x06002169 RID: 8553 RVA: 0x00042F06 File Offset: 0x00041106
			public virtual MultiValuedProperty<string> Action
			{
				set
				{
					base.PowerSharpParameters["Action"] = value;
				}
			}

			// Token: 0x17000A7A RID: 2682
			// (set) Token: 0x0600216A RID: 8554 RVA: 0x00042F19 File Offset: 0x00041119
			public virtual int Page
			{
				set
				{
					base.PowerSharpParameters["Page"] = value;
				}
			}

			// Token: 0x17000A7B RID: 2683
			// (set) Token: 0x0600216B RID: 8555 RVA: 0x00042F31 File Offset: 0x00041131
			public virtual int PageSize
			{
				set
				{
					base.PowerSharpParameters["PageSize"] = value;
				}
			}

			// Token: 0x17000A7C RID: 2684
			// (set) Token: 0x0600216C RID: 8556 RVA: 0x00042F49 File Offset: 0x00041149
			public virtual string Organization
			{
				set
				{
					base.PowerSharpParameters["Organization"] = ((value != null) ? new OrganizationIdParameter(value) : null);
				}
			}

			// Token: 0x17000A7D RID: 2685
			// (set) Token: 0x0600216D RID: 8557 RVA: 0x00042F67 File Offset: 0x00041167
			public virtual Expression Expression
			{
				set
				{
					base.PowerSharpParameters["Expression"] = value;
				}
			}

			// Token: 0x17000A7E RID: 2686
			// (set) Token: 0x0600216E RID: 8558 RVA: 0x00042F7A File Offset: 0x0004117A
			public virtual string ProbeTag
			{
				set
				{
					base.PowerSharpParameters["ProbeTag"] = value;
				}
			}

			// Token: 0x17000A7F RID: 2687
			// (set) Token: 0x0600216F RID: 8559 RVA: 0x00042F8D File Offset: 0x0004118D
			public virtual SwitchParameter Verbose
			{
				set
				{
					base.PowerSharpParameters["Verbose"] = value;
				}
			}

			// Token: 0x17000A80 RID: 2688
			// (set) Token: 0x06002170 RID: 8560 RVA: 0x00042FA5 File Offset: 0x000411A5
			public virtual SwitchParameter Debug
			{
				set
				{
					base.PowerSharpParameters["Debug"] = value;
				}
			}

			// Token: 0x17000A81 RID: 2689
			// (set) Token: 0x06002171 RID: 8561 RVA: 0x00042FBD File Offset: 0x000411BD
			public virtual ActionPreference ErrorAction
			{
				set
				{
					base.PowerSharpParameters["ErrorAction"] = value;
				}
			}

			// Token: 0x17000A82 RID: 2690
			// (set) Token: 0x06002172 RID: 8562 RVA: 0x00042FD5 File Offset: 0x000411D5
			public virtual ActionPreference WarningAction
			{
				set
				{
					base.PowerSharpParameters["WarningAction"] = value;
				}
			}
		}
	}
}
