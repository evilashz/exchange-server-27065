using System;
using Microsoft.Exchange.Data;
using Microsoft.Exchange.Data.Directory;

namespace Microsoft.Exchange.Configuration.Tasks
{
	// Token: 0x0200012C RID: 300
	[Serializable]
	public class MalwareFilterPolicyIdParameter : ADIdParameter
	{
		// Token: 0x17000214 RID: 532
		// (get) Token: 0x06000ABC RID: 2748 RVA: 0x00023009 File Offset: 0x00021209
		protected override SharedTenantConfigurationMode SharedTenantConfigurationMode
		{
			get
			{
				return SharedTenantConfigurationMode.Dehydrateable;
			}
		}

		// Token: 0x06000ABD RID: 2749 RVA: 0x0002300C File Offset: 0x0002120C
		public MalwareFilterPolicyIdParameter()
		{
		}

		// Token: 0x06000ABE RID: 2750 RVA: 0x00023014 File Offset: 0x00021214
		public MalwareFilterPolicyIdParameter(ADObjectId adobjectid) : base(adobjectid)
		{
		}

		// Token: 0x06000ABF RID: 2751 RVA: 0x0002301D File Offset: 0x0002121D
		public MalwareFilterPolicyIdParameter(string identity) : base(identity)
		{
		}

		// Token: 0x06000AC0 RID: 2752 RVA: 0x00023026 File Offset: 0x00021226
		public MalwareFilterPolicyIdParameter(INamedIdentity namedIdentity) : base(namedIdentity)
		{
		}

		// Token: 0x17000215 RID: 533
		// (get) Token: 0x06000AC1 RID: 2753 RVA: 0x00023030 File Offset: 0x00021230
		protected override QueryFilter AdditionalQueryFilter
		{
			get
			{
				return QueryFilter.AndTogether(new QueryFilter[]
				{
					base.AdditionalQueryFilter,
					new ComparisonFilter(ComparisonOperator.Equal, ADObjectSchema.ExchangeVersion, ExchangeObjectVersion.Exchange2012)
				});
			}
		}

		// Token: 0x06000AC2 RID: 2754 RVA: 0x00023066 File Offset: 0x00021266
		public static MalwareFilterPolicyIdParameter Parse(string identity)
		{
			return new MalwareFilterPolicyIdParameter(identity);
		}
	}
}
