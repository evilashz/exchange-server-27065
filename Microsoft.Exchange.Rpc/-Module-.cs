using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.ConstrainedExecution;
using System.Runtime.ExceptionServices;
using System.Runtime.InteropServices;
using System.Security;
using System.Security.Permissions;
using System.Security.Principal;
using System.Text;
using System.Threading;
using <CppImplementationDetails>;
using <CrtImplementationDetails>;
using Microsoft.Exchange.Diagnostics;
using Microsoft.Exchange.Diagnostics.Components.ActiveMonitoring;
using Microsoft.Exchange.Diagnostics.Components.Cluster.Replay;
using Microsoft.Exchange.Net;
using Microsoft.Exchange.Nspi;
using Microsoft.Exchange.Nspi.Rfri;
using Microsoft.Exchange.Rpc;
using Microsoft.Exchange.Rpc.ActiveManager;
using Microsoft.Exchange.Rpc.ActiveMonitoring;
using Microsoft.Exchange.Rpc.AdminRpc;
using Microsoft.Exchange.Rpc.Assistants;
using Microsoft.Exchange.Rpc.Cluster;
using Microsoft.Exchange.Rpc.Common;
using Microsoft.Exchange.Rpc.Dar;
using Microsoft.Exchange.Rpc.EdgeSync;
using Microsoft.Exchange.Rpc.ExchangeCertificate;
using Microsoft.Exchange.Rpc.ExchangeServer;
using Microsoft.Exchange.Rpc.IPFilter;
using Microsoft.Exchange.Rpc.JobQueue;
using Microsoft.Exchange.Rpc.LogSearch;
using Microsoft.Exchange.Rpc.MailboxSearch;
using Microsoft.Exchange.Rpc.MailSubmission;
using Microsoft.Exchange.Rpc.MigrationService;
using Microsoft.Exchange.Rpc.NotificationsBroker;
using Microsoft.Exchange.Rpc.NspiServer;
using Microsoft.Exchange.Rpc.OfflineRms;
using Microsoft.Exchange.Rpc.PoolRpc;
using Microsoft.Exchange.Rpc.QueueViewer;
using Microsoft.Exchange.Rpc.RfriServer;
using Microsoft.Exchange.Rpc.RpcHttpConnectionRegistration;
using Microsoft.Exchange.Rpc.Search;
using Microsoft.Exchange.Rpc.SharedCache;
using Microsoft.Exchange.Rpc.SubscriptionCache;
using Microsoft.Exchange.Rpc.SubscriptionCompletion;
using Microsoft.Exchange.Rpc.SubscriptionNotification;
using Microsoft.Exchange.Rpc.SubscriptionSubmission;
using Microsoft.Exchange.Rpc.Throttling;
using Microsoft.Exchange.Rpc.UM;
using Microsoft.Exchange.Rpc.UnifiedPolicyNotification;
using Microsoft.Exchange.Security.Authorization;

// Token: 0x02000001 RID: 1
internal class <Module>
{
	// Token: 0x06000001 RID: 1 RVA: 0x00001B7C File Offset: 0x00000F7C
	[return: MarshalAs(UnmanagedType.U1)]
	internal static bool FromUnmanagedBool(int nativeBool)
	{
		return (nativeBool != 0) ? 1 : 0;
	}

	// Token: 0x06000002 RID: 2 RVA: 0x00001B94 File Offset: 0x00000F94
	internal static int ToUnmanagedBool([MarshalAs(UnmanagedType.U1)] bool boolValue)
	{
		return (!boolValue) ? 0 : 1;
	}

	// Token: 0x06000003 RID: 3 RVA: 0x000029A0 File Offset: 0x00001DA0
	internal unsafe static void InitRpcDbStatusInfo(_AmRpcDbStatusInfo2* rpcDbInfo)
	{
		if (rpcDbInfo != null)
		{
			*(int*)(rpcDbInfo + 8L / (long)sizeof(_AmRpcDbStatusInfo2)) = 0;
			*(long*)rpcDbInfo = 0L;
			*(long*)(rpcDbInfo + 16L / (long)sizeof(_AmRpcDbStatusInfo2)) = 0L;
			*(long*)(rpcDbInfo + 24L / (long)sizeof(_AmRpcDbStatusInfo2)) = 0L;
		}
	}

	// Token: 0x06000004 RID: 4 RVA: 0x000029CC File Offset: 0x00001DCC
	internal unsafe static void InitRpcPamInfo(__MIDL_IActiveManagerRpc_0001* rpcPamInfo)
	{
		if (rpcPamInfo != null)
		{
			*(long*)rpcPamInfo = 0L;
		}
	}

	// Token: 0x06000005 RID: 5 RVA: 0x000029E0 File Offset: 0x00001DE0
	internal unsafe static void FreeRpcDbStatusInfo(_AmRpcDbStatusInfo2* rpcDbStatusInfo)
	{
		if (rpcDbStatusInfo != null)
		{
			ulong num = (ulong)(*(long*)rpcDbStatusInfo);
			if (num != 0UL)
			{
				<Module>.FreeString(num);
				*(long*)rpcDbStatusInfo = 0L;
			}
			ulong num2 = (ulong)(*(long*)(rpcDbStatusInfo + 16L / (long)sizeof(_AmRpcDbStatusInfo2)));
			if (num2 != 0UL)
			{
				<Module>.FreeString(num2);
				*(long*)(rpcDbStatusInfo + 16L / (long)sizeof(_AmRpcDbStatusInfo2)) = 0L;
			}
		}
	}

	// Token: 0x06000006 RID: 6 RVA: 0x00002A18 File Offset: 0x00001E18
	internal unsafe static void FreeRpcPamInfo(__MIDL_IActiveManagerRpc_0001* rpcPamInfo)
	{
		if (rpcPamInfo != null)
		{
			ulong num = (ulong)(*(long*)rpcPamInfo);
			if (num != 0UL)
			{
				<Module>.FreeString(num);
			}
		}
	}

	// Token: 0x06000007 RID: 7 RVA: 0x00002A34 File Offset: 0x00001E34
	internal unsafe static void FreeRpcMountArg2(__MIDL_IActiveManagerRpc_0002* rpcMountArg)
	{
		if (rpcMountArg != null)
		{
			ulong num = (ulong)(*(long*)(rpcMountArg + 8L / (long)sizeof(__MIDL_IActiveManagerRpc_0002)));
			if (num != 0UL)
			{
				<Module>.FreeString(num);
			}
		}
	}

	// Token: 0x06000008 RID: 8 RVA: 0x00002A54 File Offset: 0x00001E54
	internal unsafe static void FreeRpcMountArg3(__MIDL_IActiveManagerRpc_0003* rpcMountArg)
	{
		if (rpcMountArg != null)
		{
			ulong num = (ulong)(*(long*)(rpcMountArg + 8L / (long)sizeof(__MIDL_IActiveManagerRpc_0003)));
			if (num != 0UL)
			{
				<Module>.FreeString(num);
			}
		}
	}

	// Token: 0x06000009 RID: 9 RVA: 0x00002A74 File Offset: 0x00001E74
	internal unsafe static void FreeRpcDismountArg(__MIDL_IActiveManagerRpc_0004* rpcDismountArg)
	{
	}

	// Token: 0x0600000A RID: 10 RVA: 0x00002A84 File Offset: 0x00001E84
	internal unsafe static AmDbStatusInfo2 UToMDbStatusInfo(_AmRpcDbStatusInfo2* rpcDbInfo)
	{
		DateTime mountedTime = DateTime.FromFileTimeUtc(*(long*)(rpcDbInfo + 24L / (long)sizeof(_AmRpcDbStatusInfo2)));
		return new AmDbStatusInfo2(<Module>.UToMString(*(long*)rpcDbInfo), *(int*)(rpcDbInfo + 8L / (long)sizeof(_AmRpcDbStatusInfo2)), <Module>.UToMString(*(long*)(rpcDbInfo + 16L / (long)sizeof(_AmRpcDbStatusInfo2))), mountedTime);
	}

	// Token: 0x0600000B RID: 11 RVA: 0x00002ABC File Offset: 0x00001EBC
	internal unsafe static AmPamInfo UToMPamInfo(__MIDL_IActiveManagerRpc_0001* rpcPamInfo)
	{
		return new AmPamInfo(<Module>.UToMString(*(long*)rpcPamInfo));
	}

	// Token: 0x0600000C RID: 12 RVA: 0x00002AD8 File Offset: 0x00001ED8
	internal unsafe static int MToUMountArg2(AmMountArg mountArg, __MIDL_IActiveManagerRpc_0002* rpcMountArg)
	{
		if (mountArg != null && rpcMountArg != null)
		{
			*(int*)rpcMountArg = mountArg.StoreFlags;
			*(int*)(rpcMountArg + 16L / (long)sizeof(__MIDL_IActiveManagerRpc_0002)) = mountArg.Reason;
			__MIDL_IActiveManagerRpc_0002* ptr = rpcMountArg + 8L / (long)sizeof(__MIDL_IActiveManagerRpc_0002);
			*(long*)ptr = 0L;
			if (!string.IsNullOrEmpty(mountArg.LastMountedServer))
			{
				int num = <Module>.StringToUnmanaged(mountArg.LastMountedServer, (ushort**)ptr);
				if (num < 0)
				{
					ulong num2 = (ulong)(*(long*)ptr);
					if (num2 != 0UL)
					{
						<Module>.FreeString(num2);
					}
					return num;
				}
			}
			return 0;
		}
		return -2147024809;
	}

	// Token: 0x0600000D RID: 13 RVA: 0x00002B3C File Offset: 0x00001F3C
	internal unsafe static int MToUMountArg3(AmMountArg mountArg, __MIDL_IActiveManagerRpc_0003* rpcMountArg)
	{
		if (mountArg != null && rpcMountArg != null)
		{
			*(int*)rpcMountArg = mountArg.StoreFlags;
			*(int*)(rpcMountArg + 20L / (long)sizeof(__MIDL_IActiveManagerRpc_0003)) = mountArg.AmMountFlags;
			*(int*)(rpcMountArg + 16L / (long)sizeof(__MIDL_IActiveManagerRpc_0003)) = mountArg.Reason;
			__MIDL_IActiveManagerRpc_0003* ptr = rpcMountArg + 8L / (long)sizeof(__MIDL_IActiveManagerRpc_0003);
			*(long*)ptr = 0L;
			if (!string.IsNullOrEmpty(mountArg.LastMountedServer))
			{
				int num = <Module>.StringToUnmanaged(mountArg.LastMountedServer, (ushort**)ptr);
				if (num < 0)
				{
					ulong num2 = (ulong)(*(long*)ptr);
					if (num2 != 0UL)
					{
						<Module>.FreeString(num2);
					}
					return num;
				}
			}
			return 0;
		}
		return -2147024809;
	}

	// Token: 0x0600000E RID: 14 RVA: 0x00002BAC File Offset: 0x00001FAC
	internal unsafe static int MToUDismountArg(AmDismountArg dismountArg, __MIDL_IActiveManagerRpc_0004* rpcDismountArg)
	{
		if (dismountArg != null && rpcDismountArg != null)
		{
			*(int*)rpcDismountArg = dismountArg.Flags;
			*(int*)(rpcDismountArg + 4L / (long)sizeof(__MIDL_IActiveManagerRpc_0004)) = dismountArg.Reason;
			return 0;
		}
		return -2147024809;
	}

	// Token: 0x0600000F RID: 15 RVA: 0x000027BC File Offset: 0x00001BBC
	internal static int HRESULT_FROM_WIN32(uint x)
	{
		return (x > 0) ? ((x & 65535) | -2147024896) : x;
	}

	// Token: 0x06000010 RID: 16 RVA: 0x000047A0 File Offset: 0x00003BA0
	[return: MarshalAs(UnmanagedType.U1)]
	internal static bool FromUnmanagedBool(int nativeBool)
	{
		return (nativeBool != 0) ? 1 : 0;
	}

	// Token: 0x06000011 RID: 17 RVA: 0x000047B8 File Offset: 0x00003BB8
	internal static int ToUnmanagedBool([MarshalAs(UnmanagedType.U1)] bool boolValue)
	{
		return (!boolValue) ? 0 : 1;
	}

	// Token: 0x06000012 RID: 18 RVA: 0x00005238 File Offset: 0x00004638
	internal unsafe static int RpcsAmGetServerForDatabase(void* hBinding, _GUID dbGuid, _AmRpcDbStatusInfo2* rpcDbInfo, tagErrorExceptionInfo* pErrorInfo)
	{
		string text = null;
		string text2 = null;
		string text3 = null;
		string text4 = null;
		string text5 = null;
		AmDbStatusInfo2 amDbStatusInfo = null;
		Guid guid = <Module>.FromGUID(ref dbGuid);
		if (Microsoft.Exchange.Diagnostics.Components.Cluster.Replay.ExTraceGlobals.ActiveManagerTracer.IsTraceEnabled(TraceType.DebugTrace))
		{
			RpcServerBase.GetBindingInformation(hBinding, out text5, out text4, out text3, out text2, out text);
			object[] args = new object[]
			{
				text5,
				text4,
				text3,
				text2,
				text,
				guid
			};
			Microsoft.Exchange.Diagnostics.Components.Cluster.Replay.ExTraceGlobals.ActiveManagerTracer.TraceDebug(0L, "RpcsAmGetServerForDatabase() for guid {5}: cl={0},ep={1},sAddr={2},sEp={3},ps={4}", args);
		}
		AmRpcServerBase amRpcServerBase = (AmRpcServerBase)RpcServerBase.GetServerInstance(AmRpcServerBase.RpcIntfHandle);
		if (amRpcServerBase == null)
		{
			return -2147023181;
		}
		amDbStatusInfo = null;
		RpcErrorExceptionInfo rpcErrorExceptionInfo = amRpcServerBase.RpcsGetServerForDatabase(guid, ref amDbStatusInfo);
		int num = <Module>.MToUErrorExceptionInfo(rpcErrorExceptionInfo, pErrorInfo);
		if (num >= 0)
		{
			if (!rpcErrorExceptionInfo.IsFailed() && amDbStatusInfo != null)
			{
				num = <Module>.?A0x3ff91922.MToUDbStatusInfo(amDbStatusInfo, rpcDbInfo);
				if (num < 0)
				{
					goto IL_BF;
				}
			}
			rpcErrorExceptionInfo.IsFailed();
			return 0;
		}
		IL_BF:
		<Module>.FreeErrorExceptionInfo(pErrorInfo);
		<Module>.?A0x3ff91922.FreeRpcDbStatusInfo(rpcDbInfo);
		return num;
	}

	// Token: 0x06000013 RID: 19 RVA: 0x0000531C File Offset: 0x0000471C
	internal unsafe static int AmMountDatabase(void* hBinding, _GUID dbGuid, int storeFlags, int mountDialOverride, tagErrorExceptionInfo* pErrorInfo)
	{
		return <Module>.AmMountDatabase3(hBinding, dbGuid, storeFlags, 0, mountDialOverride, pErrorInfo);
	}

	// Token: 0x06000014 RID: 20 RVA: 0x000047EC File Offset: 0x00003BEC
	internal unsafe static int AmMountDatabase3(void* hBinding, _GUID dbGuid, int storeFlags, int amFlags, int mountDialOverride, tagErrorExceptionInfo* pErrorInfo)
	{
		AmRpcServerBase amRpcServerBase = (AmRpcServerBase)RpcServerBase.GetServerInstance(AmRpcServerBase.RpcIntfHandle);
		if (amRpcServerBase == null)
		{
			return -2147023181;
		}
		Guid guid = <Module>.FromGUID(ref dbGuid);
		return <Module>.MToUErrorExceptionInfo(amRpcServerBase.MountDatabase(guid, storeFlags, amFlags, mountDialOverride), pErrorInfo);
	}

	// Token: 0x06000015 RID: 21 RVA: 0x0000482C File Offset: 0x00003C2C
	internal unsafe static int AmDismountDatabase(void* hBinding, _GUID dbGuid, int flags, tagErrorExceptionInfo* pErrorInfo)
	{
		AmRpcServerBase amRpcServerBase = (AmRpcServerBase)RpcServerBase.GetServerInstance(AmRpcServerBase.RpcIntfHandle);
		if (amRpcServerBase == null)
		{
			return -2147023181;
		}
		Guid guid = <Module>.FromGUID(ref dbGuid);
		return <Module>.MToUErrorExceptionInfo(amRpcServerBase.DismountDatabase(guid, flags), pErrorInfo);
	}

	// Token: 0x06000016 RID: 22 RVA: 0x00004868 File Offset: 0x00003C68
	internal unsafe static int AmMoveDatabaseEx(void* hBinding, _GUID dbGuid, int mountFlags, int dismountFlags, int mountDialOverride, ushort* fromServer, ushort* targetServer, int tryOtherHealthyServers, int skipValidationChecks, int actionCode, tagErrorExceptionInfo* pErrorInfo)
	{
		AmDatabaseMoveResult amDatabaseMoveResult = null;
		AmRpcServerBase amRpcServerBase = (AmRpcServerBase)RpcServerBase.GetServerInstance(AmRpcServerBase.RpcIntfHandle);
		if (amRpcServerBase == null)
		{
			return -2147023181;
		}
		amDatabaseMoveResult = null;
		Guid guid = <Module>.FromGUID(ref dbGuid);
		return <Module>.MToUErrorExceptionInfo(amRpcServerBase.MoveDatabaseEx(guid, mountFlags, dismountFlags, mountDialOverride, <Module>.UToMString(fromServer), <Module>.UToMString(targetServer), Convert.ToBoolean(tryOtherHealthyServers), skipValidationChecks, actionCode, null, ref amDatabaseMoveResult), pErrorInfo);
	}

	// Token: 0x06000017 RID: 23 RVA: 0x00005338 File Offset: 0x00004738
	internal unsafe static int AmMoveDatabaseEx2(void* hBinding, _GUID dbGuid, int mountFlags, int disMountFlags, int mountDialOverride, ushort* fromServer, ushort* targetServer, int tryOtherHealthyServers, int skipValidationChecks, int actionCode, int* pcbMoveResult, byte** ppbMoveResult, tagErrorExceptionInfo* pErrorInfo)
	{
		return <Module>.AmMoveDatabaseEx3(hBinding, dbGuid, mountFlags, disMountFlags, mountDialOverride, fromServer, targetServer, tryOtherHealthyServers, skipValidationChecks, actionCode, null, pcbMoveResult, ppbMoveResult, pErrorInfo);
	}

	// Token: 0x06000018 RID: 24 RVA: 0x000048C8 File Offset: 0x00003CC8
	internal unsafe static int AmMoveDatabaseEx3(void* hBinding, _GUID dbGuid, int mountFlags, int disMountFlags, int mountDialOverride, ushort* fromServer, ushort* targetServer, int tryOtherHealthyServers, int skipValidationChecks, int actionCode, ushort* moveComment, int* pcbMoveResult, byte** ppbMoveResult, tagErrorExceptionInfo* pErrorInfo)
	{
		AmDatabaseMoveResult amDatabaseMoveResult = null;
		int num = 0;
		byte* ptr = null;
		*pcbMoveResult = 0;
		*(long*)ppbMoveResult = 0L;
		AmRpcServerBase amRpcServerBase = (AmRpcServerBase)RpcServerBase.GetServerInstance(AmRpcServerBase.RpcIntfHandle);
		if (amRpcServerBase == null)
		{
			return -2147023181;
		}
		amDatabaseMoveResult = null;
		Guid guid = <Module>.FromGUID(ref dbGuid);
		int num2 = <Module>.MToUErrorExceptionInfo(amRpcServerBase.MoveDatabaseEx(guid, mountFlags, disMountFlags, mountDialOverride, <Module>.UToMString(fromServer), <Module>.UToMString(targetServer), Convert.ToBoolean(tryOtherHealthyServers), skipValidationChecks, actionCode, <Module>.UToMString(moveComment), ref amDatabaseMoveResult), pErrorInfo);
		if (num2 >= 0)
		{
			if (amDatabaseMoveResult == null)
			{
				return num2;
			}
			num2 = SerializationServices.Serialize(amDatabaseMoveResult, &ptr, &num);
			if (num2 >= 0)
			{
				*pcbMoveResult = num;
				*(long*)ppbMoveResult = ptr;
				return num2;
			}
		}
		if (ptr != null)
		{
			<Module>.MIDL_user_free((void*)ptr);
		}
		<Module>.FreeErrorExceptionInfo(pErrorInfo);
		return num2;
	}

	// Token: 0x06000019 RID: 25 RVA: 0x00004974 File Offset: 0x00003D74
	internal unsafe static int AmIsRunning(void* hBinding, tagErrorExceptionInfo* pErrorInfo)
	{
		AmRpcServerBase amRpcServerBase = (AmRpcServerBase)RpcServerBase.GetServerInstance(AmRpcServerBase.RpcIntfHandle);
		if (amRpcServerBase == null)
		{
			return -2147023181;
		}
		return <Module>.MToUErrorExceptionInfo(amRpcServerBase.IsRunning(), pErrorInfo);
	}

	// Token: 0x0600001A RID: 26 RVA: 0x00005364 File Offset: 0x00004764
	internal unsafe static int AmGetPrimaryActiveManager(void* hBinding, __MIDL_IActiveManagerRpc_0001* rpcPamInfo, tagErrorExceptionInfo* pErrorInfo)
	{
		AmPamInfo amPamInfo = null;
		AmRpcServerBase amRpcServerBase = (AmRpcServerBase)RpcServerBase.GetServerInstance(AmRpcServerBase.RpcIntfHandle);
		if (amRpcServerBase == null)
		{
			return -2147023181;
		}
		amPamInfo = null;
		RpcErrorExceptionInfo primaryActiveManager = amRpcServerBase.GetPrimaryActiveManager(ref amPamInfo);
		int num = <Module>.MToUErrorExceptionInfo(primaryActiveManager, pErrorInfo);
		if (num >= 0)
		{
			if (!primaryActiveManager.IsFailed() && amPamInfo != null)
			{
				if (rpcPamInfo == null)
				{
					num = -2147024809;
					goto IL_68;
				}
				*(long*)rpcPamInfo = 0L;
				int num2 = <Module>.StringToUnmanaged(amPamInfo.ServerName, (ushort**)rpcPamInfo);
				if (num2 < 0)
				{
					<Module>.?A0x3ff91922.FreeRpcPamInfo(rpcPamInfo);
					num = num2;
					goto IL_68;
				}
			}
			return 0;
		}
		IL_68:
		<Module>.FreeErrorExceptionInfo(pErrorInfo);
		<Module>.?A0x3ff91922.FreeRpcPamInfo(rpcPamInfo);
		return num;
	}

	// Token: 0x0600001B RID: 27 RVA: 0x000053E8 File Offset: 0x000047E8
	internal unsafe static int AmMountDatabaseDirectEx(void* hBinding, _GUID dbGuid, __MIDL_IActiveManagerRpc_0002* rpcMountArg, int cRpcMountArg, tagErrorExceptionInfo* pErrorInfo)
	{
		AmRpcServerBase amRpcServerBase = (AmRpcServerBase)RpcServerBase.GetServerInstance(AmRpcServerBase.RpcIntfHandle);
		if (amRpcServerBase == null)
		{
			return -2147023181;
		}
		AmMountArg mountArg = <Module>.?A0x3ff91922.UToMMountArg((void*)rpcMountArg, cRpcMountArg);
		Guid guid = <Module>.FromGUID(ref dbGuid);
		return <Module>.MToUErrorExceptionInfo(amRpcServerBase.MountDatabaseDirect(guid, mountArg), pErrorInfo);
	}

	// Token: 0x0600001C RID: 28 RVA: 0x00005430 File Offset: 0x00004830
	internal unsafe static int AmMountDatabaseDirect3(void* hBinding, _GUID dbGuid, __MIDL_IActiveManagerRpc_0003* rpcMountArg, int cRpcMountArg, tagErrorExceptionInfo* pErrorInfo)
	{
		AmRpcServerBase amRpcServerBase = (AmRpcServerBase)RpcServerBase.GetServerInstance(AmRpcServerBase.RpcIntfHandle);
		if (amRpcServerBase == null)
		{
			return -2147023181;
		}
		AmMountArg mountArg = <Module>.?A0x3ff91922.UToMMountArg((void*)rpcMountArg, cRpcMountArg);
		Guid guid = <Module>.FromGUID(ref dbGuid);
		return <Module>.MToUErrorExceptionInfo(amRpcServerBase.MountDatabaseDirect(guid, mountArg), pErrorInfo);
	}

	// Token: 0x0600001D RID: 29 RVA: 0x000049A8 File Offset: 0x00003DA8
	internal unsafe static int AmAttemptCopyLastLogsDirect(void* hBinding, _GUID dbGuid, int mountDialOverride, int numRetries, int e00timeoutMs, int networkIOtimeoutMs, int networkConnecttimeoutMs, ushort* sourceServer, int actionCode, int* pNoLoss, int* pMountAllowed, tagErrorExceptionInfo* pErrorInfo)
	{
		AmAcllReturnStatus amAcllReturnStatus = null;
		*pNoLoss = 0;
		*pMountAllowed = 0;
		AmRpcServerBase amRpcServerBase = (AmRpcServerBase)RpcServerBase.GetServerInstance(AmRpcServerBase.RpcIntfHandle);
		if (amRpcServerBase == null)
		{
			return -2147023181;
		}
		amAcllReturnStatus = null;
		Guid guid = <Module>.FromGUID(ref dbGuid);
		RpcErrorExceptionInfo errorInfo = amRpcServerBase.AttemptCopyLastLogsDirect(guid, mountDialOverride, numRetries, e00timeoutMs, networkIOtimeoutMs, networkConnecttimeoutMs, <Module>.UToMString(sourceServer), actionCode, 0, true, string.Empty, 0, ref amAcllReturnStatus);
		int num = (!amAcllReturnStatus.NoLoss) ? 0 : 1;
		*pNoLoss = num;
		int num2 = (!amAcllReturnStatus.MountAllowed) ? 0 : 1;
		*pMountAllowed = num2;
		return <Module>.MToUErrorExceptionInfo(errorInfo, pErrorInfo);
	}

	// Token: 0x0600001E RID: 30 RVA: 0x00005478 File Offset: 0x00004878
	internal unsafe static int AmAttemptCopyLastLogsDirect2(void* hBinding, _GUID dbGuid, int mountDialOverride, int numRetries, int e00timeoutMs, int networkIOtimeoutMs, int networkConnecttimeoutMs, ushort* sourceServer, int actionCode, int mountPending, ushort* uniqueOperationId, int subactionAttemptNumber, int* pcbAcllStatus, byte** ppbAcllStatus, tagErrorExceptionInfo* pErrorInfo)
	{
		return <Module>.AmAttemptCopyLastLogsDirect3(hBinding, dbGuid, mountDialOverride, numRetries, e00timeoutMs, networkIOtimeoutMs, networkConnecttimeoutMs, sourceServer, actionCode, 0, mountPending, uniqueOperationId, subactionAttemptNumber, pcbAcllStatus, ppbAcllStatus, pErrorInfo);
	}

	// Token: 0x0600001F RID: 31 RVA: 0x00004A34 File Offset: 0x00003E34
	internal unsafe static int AmAttemptCopyLastLogsDirect3(void* hBinding, _GUID dbGuid, int mountDialOverride, int numRetries, int e00timeoutMs, int networkIOtimeoutMs, int networkConnecttimeoutMs, ushort* sourceServer, int actionCode, int skipValidationChecks, int mountPending, ushort* uniqueOperationId, int subactionAttemptNumber, int* pcbAcllStatus, byte** ppbAcllStatus, tagErrorExceptionInfo* pErrorInfo)
	{
		AmAcllReturnStatus amAcllReturnStatus = null;
		byte* ptr = null;
		int num = 0;
		*pcbAcllStatus = 0;
		*(long*)ppbAcllStatus = 0L;
		AmRpcServerBase amRpcServerBase = (AmRpcServerBase)RpcServerBase.GetServerInstance(AmRpcServerBase.RpcIntfHandle);
		if (amRpcServerBase == null)
		{
			return -2147023181;
		}
		amAcllReturnStatus = null;
		Guid guid = <Module>.FromGUID(ref dbGuid);
		int num2 = (mountPending != 0) ? 1 : 0;
		int num3 = <Module>.MToUErrorExceptionInfo(amRpcServerBase.AttemptCopyLastLogsDirect(guid, mountDialOverride, numRetries, e00timeoutMs, networkIOtimeoutMs, networkConnecttimeoutMs, <Module>.UToMString(sourceServer), actionCode, skipValidationChecks, (byte)num2 != 0, <Module>.UToMString(uniqueOperationId), subactionAttemptNumber, ref amAcllReturnStatus), pErrorInfo);
		if (num3 >= 0)
		{
			if (amAcllReturnStatus == null)
			{
				return num3;
			}
			num3 = SerializationServices.Serialize(amAcllReturnStatus, &ptr, &num);
			if (num3 >= 0)
			{
				*pcbAcllStatus = num;
				*(long*)ppbAcllStatus = ptr;
				return num3;
			}
		}
		if (ptr != null)
		{
			<Module>.MIDL_user_free((void*)ptr);
		}
		<Module>.FreeErrorExceptionInfo(pErrorInfo);
		return num3;
	}

	// Token: 0x06000020 RID: 32 RVA: 0x000054A8 File Offset: 0x000048A8
	internal unsafe static int AmDismountDatabaseDirect(void* hBinding, _GUID dbGuid, __MIDL_IActiveManagerRpc_0004* rpcDismountArg, tagErrorExceptionInfo* pErrorInfo)
	{
		AmRpcServerBase amRpcServerBase = (AmRpcServerBase)RpcServerBase.GetServerInstance(AmRpcServerBase.RpcIntfHandle);
		if (amRpcServerBase == null)
		{
			return -2147023181;
		}
		AmDismountArg dismountArg = new AmDismountArg(*(int*)rpcDismountArg, *(int*)(rpcDismountArg + 4L / (long)sizeof(__MIDL_IActiveManagerRpc_0004)));
		Guid guid = <Module>.FromGUID(ref dbGuid);
		return <Module>.MToUErrorExceptionInfo(amRpcServerBase.DismountDatabaseDirect(guid, dismountArg), pErrorInfo);
	}

	// Token: 0x06000021 RID: 33 RVA: 0x00004AE4 File Offset: 0x00003EE4
	internal unsafe static int AmServerSwitchOver(void* hBinding, ushort* sourceServer, tagErrorExceptionInfo* pErrorInfo)
	{
		AmRpcServerBase amRpcServerBase = (AmRpcServerBase)RpcServerBase.GetServerInstance(AmRpcServerBase.RpcIntfHandle);
		if (amRpcServerBase == null)
		{
			return -2147023181;
		}
		return <Module>.MToUErrorExceptionInfo(amRpcServerBase.ServerSwitchOver(<Module>.UToMString(sourceServer)), pErrorInfo);
	}

	// Token: 0x06000022 RID: 34 RVA: 0x00004B1C File Offset: 0x00003F1C
	internal unsafe static int AmGetActiveManagerRole(void* hBinding, int* amRole, ushort** errMsg, tagErrorExceptionInfo* pErrorInfo)
	{
		string @string = null;
		ushort* ptr = null;
		*amRole = 1;
		*(long*)errMsg = 0L;
		AmRpcServerBase amRpcServerBase = (AmRpcServerBase)RpcServerBase.GetServerInstance(AmRpcServerBase.RpcIntfHandle);
		if (amRpcServerBase == null)
		{
			return -2147023181;
		}
		AmRole amRole2 = AmRole.Unknown;
		@string = null;
		int num = <Module>.MToUErrorExceptionInfo(amRpcServerBase.GetActiveManagerRole(ref amRole2, ref @string), pErrorInfo);
		if (num >= 0)
		{
			*amRole = (int)amRole2;
			num = <Module>.StringToUnmanaged(@string, &ptr);
			if (num >= 0)
			{
				*(long*)errMsg = ptr;
				return 0;
			}
		}
		<Module>.FreeErrorExceptionInfo(pErrorInfo);
		<Module>.FreeString(ptr);
		return num;
	}

	// Token: 0x06000023 RID: 35 RVA: 0x00004B8C File Offset: 0x00003F8C
	internal unsafe static int AmCheckThirdPartyListener(void* hBinding, int* healthy, ushort** errMsg, tagErrorExceptionInfo* pErrorInfo)
	{
		string @string = null;
		ushort* ptr = null;
		*(long*)errMsg = 0L;
		*healthy = 0;
		AmRpcServerBase amRpcServerBase = (AmRpcServerBase)RpcServerBase.GetServerInstance(AmRpcServerBase.RpcIntfHandle);
		if (amRpcServerBase == null)
		{
			return -2147023181;
		}
		@string = null;
		bool flag = false;
		int num = <Module>.MToUErrorExceptionInfo(amRpcServerBase.CheckThirdPartyListener(ref flag, ref @string), pErrorInfo);
		if (num >= 0)
		{
			int num2 = (!flag) ? 0 : 1;
			*healthy = num2;
			num = <Module>.StringToUnmanaged(@string, &ptr);
			if (num >= 0)
			{
				*(long*)errMsg = ptr;
				return 0;
			}
		}
		<Module>.FreeErrorExceptionInfo(pErrorInfo);
		<Module>.FreeString(ptr);
		return num;
	}

	// Token: 0x06000024 RID: 36 RVA: 0x00004C08 File Offset: 0x00004008
	internal unsafe static int RpcsAmGetAutomountConsensusState(void* hBinding, int* pAutomountConsensusState, tagErrorExceptionInfo* pErrorInfo)
	{
		*pAutomountConsensusState = 0;
		AmRpcServerBase amRpcServerBase = (AmRpcServerBase)RpcServerBase.GetServerInstance(AmRpcServerBase.RpcIntfHandle);
		if (amRpcServerBase == null)
		{
			return -2147023181;
		}
		int num2;
		int num = <Module>.MToUErrorExceptionInfo(amRpcServerBase.RpcsGetAutomountConsensusState(ref num2), pErrorInfo);
		if (num < 0)
		{
			<Module>.FreeErrorExceptionInfo(pErrorInfo);
			return num;
		}
		*pAutomountConsensusState = num2;
		return 0;
	}

	// Token: 0x06000025 RID: 37 RVA: 0x00004C50 File Offset: 0x00004050
	internal unsafe static int RpcsAmSetAutomountConsensusState(void* hBinding, int automountConsensusState, tagErrorExceptionInfo* pErrorInfo)
	{
		AmRpcServerBase amRpcServerBase = (AmRpcServerBase)RpcServerBase.GetServerInstance(AmRpcServerBase.RpcIntfHandle);
		if (amRpcServerBase == null)
		{
			return -2147023181;
		}
		int num = <Module>.MToUErrorExceptionInfo(amRpcServerBase.RpcsSetAutomountConsensusState(automountConsensusState), pErrorInfo);
		if (num < 0)
		{
			<Module>.FreeErrorExceptionInfo(pErrorInfo);
			return num;
		}
		return 0;
	}

	// Token: 0x06000026 RID: 38 RVA: 0x00004C94 File Offset: 0x00004094
	internal unsafe static int AmReportSystemEvent(void* hBinding, int eventCode, ushort* reportingServer, tagErrorExceptionInfo* pErrorInfo)
	{
		AmRpcServerBase amRpcServerBase = (AmRpcServerBase)RpcServerBase.GetServerInstance(AmRpcServerBase.RpcIntfHandle);
		if (amRpcServerBase == null)
		{
			return -2147023181;
		}
		int num = <Module>.MToUErrorExceptionInfo(amRpcServerBase.ReportSystemEvent(eventCode, <Module>.UToMString(reportingServer)), pErrorInfo);
		if (num < 0)
		{
			<Module>.FreeErrorExceptionInfo(pErrorInfo);
			return num;
		}
		return 0;
	}

	// Token: 0x06000027 RID: 39 RVA: 0x00004CDC File Offset: 0x000040DC
	internal unsafe static int AmRefreshConfiguration(void* hBinding, int refreshFlags, int maxSecondsToWait, tagErrorExceptionInfo* pErrorInfo)
	{
		AmRpcServerBase amRpcServerBase = (AmRpcServerBase)RpcServerBase.GetServerInstance(AmRpcServerBase.RpcIntfHandle);
		if (amRpcServerBase == null)
		{
			return -2147023181;
		}
		int num = <Module>.MToUErrorExceptionInfo(amRpcServerBase.AmRefreshConfiguration(refreshFlags, maxSecondsToWait), pErrorInfo);
		if (num < 0)
		{
			<Module>.FreeErrorExceptionInfo(pErrorInfo);
			return num;
		}
		return 0;
	}

	// Token: 0x06000028 RID: 40 RVA: 0x00004D20 File Offset: 0x00004120
	internal unsafe static int AmRemountDatabase(void* hBinding, _GUID dbGuid, int mountFlags, int mountDialOverride, ushort* fromServer, tagErrorExceptionInfo* pErrorInfo)
	{
		AmRpcServerBase amRpcServerBase = (AmRpcServerBase)RpcServerBase.GetServerInstance(AmRpcServerBase.RpcIntfHandle);
		if (amRpcServerBase == null)
		{
			return -2147023181;
		}
		Guid guid = <Module>.FromGUID(ref dbGuid);
		return <Module>.MToUErrorExceptionInfo(amRpcServerBase.RemountDatabase(guid, mountFlags, mountDialOverride, <Module>.UToMString(fromServer)), pErrorInfo);
	}

	// Token: 0x06000029 RID: 41 RVA: 0x000054F4 File Offset: 0x000048F4
	internal unsafe static int AmServerMoveAllDatabases(void* hBinding, ushort* sourceServer, ushort* targetServer, int mountFlags, int dismountFlags, int mountDialOverride, int tryOtherHealthyServers, int skipValidationChecks, int actionCode, int* pcbMoveResults, byte** ppbMoveResults, int* pcMoveResultsCount, tagErrorExceptionInfo* pErrorInfo)
	{
		return <Module>.AmServerMoveAllDatabases3(hBinding, sourceServer, targetServer, mountFlags, dismountFlags, mountDialOverride, tryOtherHealthyServers, skipValidationChecks, actionCode, null, null, pcbMoveResults, ppbMoveResults, pcMoveResultsCount, pErrorInfo);
	}

	// Token: 0x0600002A RID: 42 RVA: 0x00005520 File Offset: 0x00004920
	internal unsafe static int AmServerMoveAllDatabases2(void* hBinding, ushort* sourceServer, ushort* targetServer, int mountFlags, int dismountFlags, int mountDialOverride, int tryOtherHealthyServers, int skipValidationChecks, int actionCode, ushort* moveComment, int* pcbMoveResults, byte** ppbMoveResults, int* pcMoveResultsCount, tagErrorExceptionInfo* pErrorInfo)
	{
		return <Module>.AmServerMoveAllDatabases3(hBinding, sourceServer, targetServer, mountFlags, dismountFlags, mountDialOverride, tryOtherHealthyServers, skipValidationChecks, actionCode, moveComment, null, pcbMoveResults, ppbMoveResults, pcMoveResultsCount, pErrorInfo);
	}

	// Token: 0x0600002B RID: 43 RVA: 0x00004D68 File Offset: 0x00004168
	internal unsafe static int AmServerMoveAllDatabases3(void* hBinding, ushort* sourceServer, ushort* targetServer, int mountFlags, int dismountFlags, int mountDialOverride, int tryOtherHealthyServers, int skipValidationChecks, int actionCode, ushort* moveComment, ushort* componentName, int* pcbMoveResults, byte** ppbMoveResults, int* pcMoveResultsCount, tagErrorExceptionInfo* pErrorInfo)
	{
		List<AmDatabaseMoveResult> list = null;
		int num = 0;
		byte* ptr = null;
		*pcbMoveResults = 0;
		*(long*)ppbMoveResults = 0L;
		*pcMoveResultsCount = 0;
		AmRpcServerBase amRpcServerBase = (AmRpcServerBase)RpcServerBase.GetServerInstance(AmRpcServerBase.RpcIntfHandle);
		if (amRpcServerBase == null)
		{
			return -2147023181;
		}
		list = null;
		RpcErrorExceptionInfo rpcErrorExceptionInfo = amRpcServerBase.ServerMoveAllDatabases(<Module>.UToMString(sourceServer), <Module>.UToMString(targetServer), mountFlags, dismountFlags, mountDialOverride, tryOtherHealthyServers, skipValidationChecks, actionCode, <Module>.UToMString(moveComment), <Module>.UToMString(componentName), ref list);
		int num2 = <Module>.MToUErrorExceptionInfo(rpcErrorExceptionInfo, pErrorInfo);
		if (num2 >= 0)
		{
			if (rpcErrorExceptionInfo.IsFailed() || list == null || list.Count <= 0)
			{
				return num2;
			}
			num2 = SerializationServices.Serialize(list, &ptr, &num);
			if (num2 >= 0)
			{
				*pcbMoveResults = num;
				*(long*)ppbMoveResults = ptr;
				*pcMoveResultsCount = list.Count;
				return num2;
			}
		}
		if (ptr != null)
		{
			<Module>.MIDL_user_free((void*)ptr);
		}
		<Module>.FreeErrorExceptionInfo(pErrorInfo);
		return num2;
	}

	// Token: 0x0600002C RID: 44 RVA: 0x00004E2C File Offset: 0x0000422C
	internal unsafe static int AmReportServiceKill(void* hBinding, ushort* serviceName, ushort* serverName, ushort* timeStampStrInUtc, tagErrorExceptionInfo* pErrorInfo)
	{
		AmRpcServerBase amRpcServerBase = (AmRpcServerBase)RpcServerBase.GetServerInstance(AmRpcServerBase.RpcIntfHandle);
		if (amRpcServerBase == null)
		{
			return -2147023181;
		}
		int num = <Module>.MToUErrorExceptionInfo(amRpcServerBase.ReportServiceKill(<Module>.UToMString(serviceName), <Module>.UToMString(serverName), <Module>.UToMString(timeStampStrInUtc)), pErrorInfo);
		if (num < 0)
		{
			<Module>.FreeErrorExceptionInfo(pErrorInfo);
		}
		return num;
	}

	// Token: 0x0600002D RID: 45 RVA: 0x00004E80 File Offset: 0x00004280
	internal unsafe static int AmGetDeferredRecoveryEntries(void* hBinding, int* pcbDeferredRecoveryEntries, byte** ppbDeferredRecoveryEntries, int* pcDeferredRecoveryEntriesCount, tagErrorExceptionInfo* pErrorInfo)
	{
		List<AmDeferredRecoveryEntry> list = null;
		Microsoft.Exchange.Diagnostics.Components.Cluster.Replay.ExTraceGlobals.ActiveManagerTracer.TraceDebug(0L, "[Server] AmGetDeferredRecoveryEntries entering");
		int num = 0;
		byte* ptr = null;
		*pcbDeferredRecoveryEntries = 0;
		*(long*)ppbDeferredRecoveryEntries = 0L;
		*pcDeferredRecoveryEntriesCount = 0;
		AmRpcServerBase amRpcServerBase = (AmRpcServerBase)RpcServerBase.GetServerInstance(AmRpcServerBase.RpcIntfHandle);
		if (amRpcServerBase == null)
		{
			return -2147023181;
		}
		list = null;
		Microsoft.Exchange.Diagnostics.Components.Cluster.Replay.ExTraceGlobals.ActiveManagerTracer.TraceDebug(0L, "Calling serverInstance->GetDeferredRecoveryEntries");
		RpcErrorExceptionInfo deferredRecoveryEntries = amRpcServerBase.GetDeferredRecoveryEntries(ref list);
		int num2 = <Module>.MToUErrorExceptionInfo(deferredRecoveryEntries, pErrorInfo);
		if (num2 < 0)
		{
			Microsoft.Exchange.Diagnostics.Components.Cluster.Replay.ExTraceGlobals.ActiveManagerTracer.TraceDebug<int>(0L, "serverInstance->GetDeferredRecoveryEntries returned. (hr={0})", num2);
		}
		else
		{
			if (deferredRecoveryEntries.IsFailed() || list == null || list.Count <= 0)
			{
				goto IL_138;
			}
			Microsoft.Exchange.Diagnostics.Components.Cluster.Replay.ExTraceGlobals.ActiveManagerTracer.TraceDebug<int>(0L, "[Server] AmGetDeferredRecoveryEntries: Calling Serialize (entryCount: {0})", list.Count);
			num2 = SerializationServices.Serialize(list, &ptr, &num);
			if (num2 >= 0)
			{
				Microsoft.Exchange.Diagnostics.Components.Cluster.Replay.ExTraceGlobals.ActiveManagerTracer.TraceDebug<int>(0L, "[Server] AmGetDeferredRecoveryEntries: Serialize success (bytes serialized: {0})", num);
				*pcbDeferredRecoveryEntries = num;
				*(long*)ppbDeferredRecoveryEntries = ptr;
				*pcDeferredRecoveryEntriesCount = list.Count;
				Microsoft.Exchange.Diagnostics.Components.Cluster.Replay.ExTraceGlobals.ActiveManagerTracer.TraceDebug(0L, "[Server] AmGetDeferredRecoveryEntries: Finished populating parameters");
				goto IL_138;
			}
			Microsoft.Exchange.Diagnostics.Components.Cluster.Replay.ExTraceGlobals.ActiveManagerTracer.TraceDebug<int>(0L, "[Server] AmGetDeferredRecoveryEntries: Serialize failed. (hr={0})", num2);
		}
		Microsoft.Exchange.Diagnostics.Components.Cluster.Replay.ExTraceGlobals.ActiveManagerTracer.TraceDebug(0L, "[Server] AmGetDeferredRecoveryEntries - Before cleanup");
		if (ptr != null)
		{
			<Module>.MIDL_user_free((void*)ptr);
		}
		<Module>.FreeErrorExceptionInfo(pErrorInfo);
		Microsoft.Exchange.Diagnostics.Components.Cluster.Replay.ExTraceGlobals.ActiveManagerTracer.TraceDebug(0L, "[Server] AmGetDeferredRecoveryEntries - After cleanup");
		IL_138:
		Microsoft.Exchange.Diagnostics.Components.Cluster.Replay.ExTraceGlobals.ActiveManagerTracer.TraceDebug(0L, "[Server] AmGetDeferredRecoveryEntries: Exiting");
		return num2;
	}

	// Token: 0x0600002E RID: 46 RVA: 0x00004FD8 File Offset: 0x000043D8
	internal unsafe static int AmGenericRequest(void* hBinding, tagGenericRequestInfo* pRequestInfo, tagGenericReplyInfo* pReplyInfo, tagErrorExceptionInfo* pErrorInfo)
	{
		string text = null;
		string text2 = null;
		string text3 = null;
		string text4 = null;
		string text5 = null;
		Microsoft.Exchange.Rpc.Common.RpcGenericReplyInfo rpcGenericReplyInfo = null;
		if (Microsoft.Exchange.Diagnostics.Components.Cluster.Replay.ExTraceGlobals.ActiveManagerTracer.IsTraceEnabled(TraceType.DebugTrace))
		{
			RpcServerBase.GetBindingInformation(hBinding, out text5, out text4, out text3, out text2, out text);
			object[] args = new object[]
			{
				text5,
				text4,
				text3,
				text2,
				text
			};
			Microsoft.Exchange.Diagnostics.Components.Cluster.Replay.ExTraceGlobals.ActiveManagerTracer.TraceDebug(0L, "GenericRequest: cl={0},ep={1},sAddr={2},sEp={3},ps={4}", args);
		}
		AmRpcServerBase amRpcServerBase = (AmRpcServerBase)RpcServerBase.GetServerInstance(AmRpcServerBase.RpcIntfHandle);
		if (amRpcServerBase == null)
		{
			return -2147023181;
		}
		Microsoft.Exchange.Rpc.Common.RpcGenericRequestInfo requestInfo = <Module>.Microsoft.Exchange.Rpc.Common.UToMGenericRequestInfo(pRequestInfo);
		rpcGenericReplyInfo = null;
		RpcErrorExceptionInfo rpcErrorExceptionInfo = amRpcServerBase.GenericRequest(requestInfo, ref rpcGenericReplyInfo);
		int num = <Module>.MToUErrorExceptionInfo(rpcErrorExceptionInfo, pErrorInfo);
		if (num >= 0)
		{
			if (rpcErrorExceptionInfo.IsFailed() || rpcGenericReplyInfo == null)
			{
				return num;
			}
			num = <Module>.Microsoft.Exchange.Rpc.Common.MToUGenericReplyInfo(rpcGenericReplyInfo, pReplyInfo);
			if (num >= 0)
			{
				if (pReplyInfo != null)
				{
					object[] args2 = new object[]
					{
						*(int*)(pReplyInfo + 4L / (long)sizeof(tagGenericReplyInfo)),
						*(int*)(pReplyInfo + 16L / (long)sizeof(tagGenericReplyInfo)),
						*(int*)(pReplyInfo + 8L / (long)sizeof(tagGenericReplyInfo)),
						*(int*)(pReplyInfo + 12L / (long)sizeof(tagGenericReplyInfo)),
						*(int*)pReplyInfo
					};
					Microsoft.Exchange.Diagnostics.Components.Cluster.Replay.ExTraceGlobals.ActiveManagerTracer.TraceDebug(0L, "GenericRequest: Returning ReplyInfo (CommandId: {0} UnmanagedSize: {1} CmdMajor: {2} CmdMinor: {3} ServerVersion: {4}", args2);
					return num;
				}
				return num;
			}
		}
		<Module>.Microsoft.Exchange.Rpc.Common.FreeGenericReplyInfo(pReplyInfo);
		<Module>.FreeErrorExceptionInfo(pErrorInfo);
		return num;
	}

	// Token: 0x0600002F RID: 47 RVA: 0x00005110 File Offset: 0x00004510
	internal unsafe static int MToUDbStatusInfo(AmDbStatusInfo2 dbInfo, _AmRpcDbStatusInfo2* rpcDbInfo)
	{
		if (dbInfo != null && rpcDbInfo != null)
		{
			*(int*)(rpcDbInfo + 8L / (long)sizeof(_AmRpcDbStatusInfo2)) = dbInfo.IsHighlyAvailable;
			*(long*)rpcDbInfo = 0L;
			_AmRpcDbStatusInfo2* ptr = rpcDbInfo + 16L / (long)sizeof(_AmRpcDbStatusInfo2);
			*(long*)ptr = 0L;
			int num = <Module>.StringToUnmanaged(dbInfo.MasterServerFqdn, (ushort**)rpcDbInfo);
			if (num >= 0)
			{
				num = <Module>.StringToUnmanaged(dbInfo.LastMountedServerFqdn, (ushort**)ptr);
				if (num >= 0)
				{
					DateTime mountedTime = dbInfo.MountedTime;
					*(long*)(rpcDbInfo + 24L / (long)sizeof(_AmRpcDbStatusInfo2)) = mountedTime.ToFileTimeUtc();
					return 0;
				}
			}
			<Module>.?A0x3ff91922.FreeRpcDbStatusInfo(rpcDbInfo);
			return num;
		}
		return -2147024809;
	}

	// Token: 0x06000030 RID: 48 RVA: 0x00005184 File Offset: 0x00004584
	internal unsafe static int MToUPamInfo(AmPamInfo pamInfo, __MIDL_IActiveManagerRpc_0001* rpcPamInfo)
	{
		if (pamInfo == null || rpcPamInfo == null)
		{
			return -2147024809;
		}
		*(long*)rpcPamInfo = 0L;
		int num = <Module>.StringToUnmanaged(pamInfo.ServerName, (ushort**)rpcPamInfo);
		if (num < 0)
		{
			<Module>.?A0x3ff91922.FreeRpcPamInfo(rpcPamInfo);
			return num;
		}
		return 0;
	}

	// Token: 0x06000031 RID: 49 RVA: 0x000051BC File Offset: 0x000045BC
	internal unsafe static AmMountArg UToMMountArg(void* rpcMountArg, int cRpcMountArg)
	{
		AmMountArg result = null;
		if (cRpcMountArg == 24)
		{
			new AmMountArg(*(int*)rpcMountArg, 0, <Module>.UToMString(*(long*)((byte*)rpcMountArg + 8L)), *(int*)((byte*)rpcMountArg + 16L));
			result = new AmMountArg(*(int*)rpcMountArg, *(int*)((byte*)rpcMountArg + 20L), <Module>.UToMString(*(long*)((byte*)rpcMountArg + 8L)), *(int*)((byte*)rpcMountArg + 16L));
		}
		return result;
	}

	// Token: 0x06000032 RID: 50 RVA: 0x00005208 File Offset: 0x00004608
	internal unsafe static AmDismountArg UToMDismountArg(__MIDL_IActiveManagerRpc_0004* rpcDismountArg)
	{
		return new AmDismountArg(*(int*)rpcDismountArg, *(int*)(rpcDismountArg + 4L / (long)sizeof(__MIDL_IActiveManagerRpc_0004)));
	}

	// Token: 0x06000033 RID: 51 RVA: 0x0000856C File Offset: 0x0000796C
	internal unsafe static int MToUGenericRequestInfo(Microsoft.Exchange.Rpc.ActiveMonitoring.RpcGenericRequestInfo requestInfo, tagGenericRequestInfo* pRequestInfo)
	{
		int num = 0;
		if (pRequestInfo == null)
		{
			num = -2147024809;
		}
		else
		{
			<Module>.InitGenericRequestInfo(pRequestInfo);
			if (requestInfo == null)
			{
				num = -2147024809;
			}
			else
			{
				*(int*)pRequestInfo = requestInfo.ServerVersion;
				*(int*)(pRequestInfo + 4L / (long)sizeof(tagGenericRequestInfo)) = requestInfo.CommandId;
				*(int*)(pRequestInfo + 8L / (long)sizeof(tagGenericRequestInfo)) = requestInfo.CommandMajorVersion;
				*(int*)(pRequestInfo + 12L / (long)sizeof(tagGenericRequestInfo)) = requestInfo.CommandMinorVersion;
				if (requestInfo.AttachedData == null || requestInfo.AttachedData.Length <= 0)
				{
					return num;
				}
				num = <Module>.GetUnmanagedBytes(requestInfo.AttachedData, (byte**)(pRequestInfo + 24L / (long)sizeof(tagGenericRequestInfo)), (int*)(pRequestInfo + 16L / (long)sizeof(tagGenericRequestInfo)));
				if (num >= 0)
				{
					return num;
				}
			}
		}
		<Module>.FreeGenericRequestInfo(pRequestInfo);
		return num;
	}

	// Token: 0x06000034 RID: 52 RVA: 0x000085F4 File Offset: 0x000079F4
	internal unsafe static int MToUGenericReplyInfo(Microsoft.Exchange.Rpc.ActiveMonitoring.RpcGenericReplyInfo replyInfo, tagGenericReplyInfo* pReplyInfo)
	{
		int num = 0;
		if (pReplyInfo == null)
		{
			num = -2147024809;
		}
		else
		{
			<Module>.InitGenericReplyInfo(pReplyInfo);
			if (replyInfo == null)
			{
				num = -2147024809;
			}
			else
			{
				*(int*)pReplyInfo = replyInfo.ServerVersion;
				*(int*)(pReplyInfo + 4L / (long)sizeof(tagGenericReplyInfo)) = replyInfo.CommandId;
				*(int*)(pReplyInfo + 8L / (long)sizeof(tagGenericReplyInfo)) = replyInfo.CommandMajorVersion;
				*(int*)(pReplyInfo + 12L / (long)sizeof(tagGenericReplyInfo)) = replyInfo.CommandMinorVersion;
				if (replyInfo.AttachedData == null || replyInfo.AttachedData.Length <= 0)
				{
					return num;
				}
				num = <Module>.GetUnmanagedBytes(replyInfo.AttachedData, (byte**)(pReplyInfo + 24L / (long)sizeof(tagGenericReplyInfo)), (int*)(pReplyInfo + 16L / (long)sizeof(tagGenericReplyInfo)));
				if (num >= 0)
				{
					return num;
				}
			}
		}
		<Module>.FreeGenericReplyInfo(pReplyInfo);
		return num;
	}

	// Token: 0x06000035 RID: 53 RVA: 0x0000867C File Offset: 0x00007A7C
	internal unsafe static Microsoft.Exchange.Rpc.ActiveMonitoring.RpcGenericRequestInfo UToMGenericRequestInfo(tagGenericRequestInfo* pRequestInfo)
	{
		byte[] attachedData = null;
		int num = *(pRequestInfo + 16L);
		if (num > 0)
		{
			ulong num2 = (ulong)(*(pRequestInfo + 24L));
			if (num2 != 0UL)
			{
				attachedData = <Module>.MakeManagedBytes(num2, num);
			}
		}
		return new Microsoft.Exchange.Rpc.ActiveMonitoring.RpcGenericRequestInfo(*pRequestInfo, *(pRequestInfo + 4L), *(pRequestInfo + 8L), *(pRequestInfo + 12L), attachedData);
	}

	// Token: 0x06000036 RID: 54 RVA: 0x000086C0 File Offset: 0x00007AC0
	internal unsafe static Microsoft.Exchange.Rpc.ActiveMonitoring.RpcGenericReplyInfo UToMGenericReplyInfo(tagGenericReplyInfo* pReplyInfo)
	{
		byte[] attachedData = null;
		int num = *(pReplyInfo + 16L);
		if (num > 0)
		{
			ulong num2 = (ulong)(*(pReplyInfo + 24L));
			if (num2 != 0UL)
			{
				attachedData = <Module>.MakeManagedBytes(num2, num);
			}
		}
		return new Microsoft.Exchange.Rpc.ActiveMonitoring.RpcGenericReplyInfo(*pReplyInfo, *(pReplyInfo + 4L), *(pReplyInfo + 8L), *(pReplyInfo + 12L), attachedData);
	}

	// Token: 0x06000037 RID: 55 RVA: 0x00008844 File Offset: 0x00007C44
	internal unsafe static int RequestMonitoring(void* hBinding, _GUID mdbGuid)
	{
		ActiveMonitoringRpcServerBase activeMonitoringRpcServerBase = (ActiveMonitoringRpcServerBase)RpcServerBase.GetServerInstance(ActiveMonitoringRpcServerBase.RpcIntfHandle);
		if (activeMonitoringRpcServerBase == null)
		{
			return -2147023181;
		}
		Guid mdbGuid2 = <Module>.Microsoft.Exchange.Rpc.?A0x10827eaf.GuidFromGUID(ref mdbGuid);
		return activeMonitoringRpcServerBase.RequestMonitoring(mdbGuid2);
	}

	// Token: 0x06000038 RID: 56 RVA: 0x0000887C File Offset: 0x00007C7C
	internal unsafe static int CancelMonitoring(void* hBinding, _GUID mdbGuid)
	{
		ActiveMonitoringRpcServerBase activeMonitoringRpcServerBase = (ActiveMonitoringRpcServerBase)RpcServerBase.GetServerInstance(ActiveMonitoringRpcServerBase.RpcIntfHandle);
		if (activeMonitoringRpcServerBase == null)
		{
			return -2147023181;
		}
		Guid mdbGuid2 = <Module>.Microsoft.Exchange.Rpc.?A0x10827eaf.GuidFromGUID(ref mdbGuid);
		activeMonitoringRpcServerBase.CancelMonitoring(mdbGuid2);
		return 0;
	}

	// Token: 0x06000039 RID: 57 RVA: 0x000088B4 File Offset: 0x00007CB4
	internal unsafe static int RequestCredential(void* hBinding, ushort* serverName, _GUID mdbGuid, ushort* upn, ushort** credential)
	{
		string text = null;
		ActiveMonitoringRpcServerBase activeMonitoringRpcServerBase = (ActiveMonitoringRpcServerBase)RpcServerBase.GetServerInstance(ActiveMonitoringRpcServerBase.RpcIntfHandle);
		if (activeMonitoringRpcServerBase == null)
		{
			return -2147023181;
		}
		if (credential != null && serverName != null)
		{
			text = null;
			Guid mdbGuid2 = <Module>.Microsoft.Exchange.Rpc.?A0x10827eaf.GuidFromGUID(ref mdbGuid);
			int result = activeMonitoringRpcServerBase.RequestCredential(<Module>.UToMString(serverName), mdbGuid2, <Module>.UToMString(upn), ref text);
			if (text != null)
			{
				*(long*)credential = <Module>.StringToUnmanaged(text);
			}
			return result;
		}
		return -2147024809;
	}

	// Token: 0x0600003A RID: 58 RVA: 0x0000891C File Offset: 0x00007D1C
	internal unsafe static int Heartbeat(void* hBinding, ushort* serverName, _GUID mdbGuid)
	{
		ActiveMonitoringRpcServerBase activeMonitoringRpcServerBase = (ActiveMonitoringRpcServerBase)RpcServerBase.GetServerInstance(ActiveMonitoringRpcServerBase.RpcIntfHandle);
		if (activeMonitoringRpcServerBase == null)
		{
			return -2147023181;
		}
		if (serverName == null)
		{
			return -2147024809;
		}
		Guid mdbGuid2 = <Module>.Microsoft.Exchange.Rpc.?A0x10827eaf.GuidFromGUID(ref mdbGuid);
		return activeMonitoringRpcServerBase.Heartbeat(<Module>.UToMString(serverName), mdbGuid2);
	}

	// Token: 0x0600003B RID: 59 RVA: 0x00008960 File Offset: 0x00007D60
	internal unsafe static int GenericRequest(void* hBinding, tagGenericRequestInfo* pRequestInfo, tagGenericReplyInfo* pReplyInfo, tagErrorExceptionInfo* pErrorInfo)
	{
		string text = null;
		string text2 = null;
		string text3 = null;
		string text4 = null;
		string text5 = null;
		Microsoft.Exchange.Rpc.ActiveMonitoring.RpcGenericReplyInfo rpcGenericReplyInfo = null;
		if (Microsoft.Exchange.Diagnostics.Components.ActiveMonitoring.ExTraceGlobals.ActiveMonitoringRpcTracer.IsTraceEnabled(TraceType.DebugTrace))
		{
			RpcServerBase.GetBindingInformation(hBinding, out text5, out text4, out text3, out text2, out text);
			object[] args = new object[]
			{
				text5,
				text4,
				text3,
				text2,
				text
			};
			Microsoft.Exchange.Diagnostics.Components.ActiveMonitoring.ExTraceGlobals.ActiveMonitoringRpcTracer.TraceDebug(0L, "GenericRequest: cl={0},ep={1},sAddr={2},sEp={3},ps={4}", args);
		}
		ActiveMonitoringRpcServerBase activeMonitoringRpcServerBase = (ActiveMonitoringRpcServerBase)RpcServerBase.GetServerInstance(ActiveMonitoringRpcServerBase.RpcIntfHandle);
		if (activeMonitoringRpcServerBase == null)
		{
			return -2147023181;
		}
		Microsoft.Exchange.Rpc.ActiveMonitoring.RpcGenericRequestInfo requestInfo = <Module>.UToMGenericRequestInfo(pRequestInfo);
		rpcGenericReplyInfo = null;
		RpcErrorExceptionInfo rpcErrorExceptionInfo = activeMonitoringRpcServerBase.GenericRequest(requestInfo, ref rpcGenericReplyInfo);
		int num = <Module>.MToUErrorExceptionInfo(rpcErrorExceptionInfo, pErrorInfo);
		if (num >= 0)
		{
			if (rpcErrorExceptionInfo.IsFailed() || rpcGenericReplyInfo == null)
			{
				return num;
			}
			num = <Module>.MToUGenericReplyInfo(rpcGenericReplyInfo, pReplyInfo);
			if (num >= 0)
			{
				if (pReplyInfo != null)
				{
					object[] args2 = new object[]
					{
						*(int*)(pReplyInfo + 4L / (long)sizeof(tagGenericReplyInfo)),
						*(int*)(pReplyInfo + 16L / (long)sizeof(tagGenericReplyInfo)),
						*(int*)(pReplyInfo + 8L / (long)sizeof(tagGenericReplyInfo)),
						*(int*)(pReplyInfo + 12L / (long)sizeof(tagGenericReplyInfo)),
						*(int*)pReplyInfo
					};
					Microsoft.Exchange.Diagnostics.Components.ActiveMonitoring.ExTraceGlobals.ActiveMonitoringRpcTracer.TraceDebug(0L, "GenericRequest: Returning ReplyInfo (CommandId: {0} UnmanagedSize: {1} CmdMajor: {2} CmdMinor: {3} ServerVersion: {4}", args2);
					return num;
				}
				return num;
			}
		}
		<Module>.FreeGenericReplyInfo(pReplyInfo);
		<Module>.FreeErrorExceptionInfo(pErrorInfo);
		return num;
	}

	// Token: 0x0600003C RID: 60 RVA: 0x00008A98 File Offset: 0x00007E98
	internal unsafe static int CreateMonitoringMailbox(void* hBinding, ushort* displayName, _GUID mdbGuid)
	{
		ActiveMonitoringRpcServerBase activeMonitoringRpcServerBase = (ActiveMonitoringRpcServerBase)RpcServerBase.GetServerInstance(ActiveMonitoringRpcServerBase.RpcIntfHandle);
		if (activeMonitoringRpcServerBase == null)
		{
			return -2147023181;
		}
		if (displayName == null)
		{
			return -2147024809;
		}
		Guid mdbGuid2 = <Module>.Microsoft.Exchange.Rpc.?A0x10827eaf.GuidFromGUID(ref mdbGuid);
		return activeMonitoringRpcServerBase.CreateMonitoringMailbox(<Module>.UToMString(displayName), mdbGuid2);
	}

	// Token: 0x0600003D RID: 61 RVA: 0x000087AC File Offset: 0x00007BAC
	internal unsafe static Guid GuidFromGUID(_GUID* guid)
	{
		Guid result = new Guid((uint)(*guid), *(guid + 4L), *(guid + 6L), *(guid + 8L), *(guid + 9L), *(guid + 10L), *(guid + 11L), *(guid + 12L), *(guid + 13L), *(guid + 14L), *(guid + 15L));
		return result;
	}

	// Token: 0x0600003E RID: 62 RVA: 0x00008B60 File Offset: 0x00007F60
	internal unsafe static int EcValidateParameters(AdminRpcServer_Wrapper* A_0)
	{
		return 0;
	}

	// Token: 0x0600003F RID: 63 RVA: 0x00008F90 File Offset: 0x00008390
	internal unsafe static AdminRpcServer_Wrapper* {ctor}(AdminRpcServer_Wrapper* A_0, IntPtr intfHandle, void* hBinding, uint cbAuxIn, byte* rgbAuxIn, uint* pcbAuxOut, byte** prgbAuxOut)
	{
		*A_0 = ref <Module>.??_7AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 40L) = intfHandle;
		*(A_0 + 48L) = hBinding;
		*(A_0 + 8L) = cbAuxIn;
		*(A_0 + 16L) = rgbAuxIn;
		*(A_0 + 24L) = pcbAuxOut;
		*(A_0 + 32L) = prgbAuxOut;
		return A_0;
	}

	// Token: 0x06000040 RID: 64 RVA: 0x00008B70 File Offset: 0x00007F70
	internal unsafe static ManagedExceptionCrashWrapper* {ctor}(ManagedExceptionCrashWrapper* A_0)
	{
		*A_0 = ref <Module>.??_7ManagedExceptionCrashWrapper@Rpc@Exchange@Microsoft@@6B@;
		return A_0;
	}

	// Token: 0x06000041 RID: 65 RVA: 0x00008FD8 File Offset: 0x000083D8
	internal unsafe static AdminGetIFVersionRpc* {ctor}(AdminGetIFVersionRpc* A_0, void* hBinding, int lParam, ushort* pwMajor, ushort* pwMinor, uint cbAuxIn, byte* rgbAuxIn, uint* pcbAuxOut, byte** prgbAuxOut)
	{
		IntPtr admin20IntfHandle = AdminRpcServerBase.Admin20IntfHandle;
		*A_0 = ref <Module>.??_7AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 40L) = admin20IntfHandle;
		*(A_0 + 48L) = hBinding;
		*(A_0 + 8L) = cbAuxIn;
		*(A_0 + 16L) = rgbAuxIn;
		*(A_0 + 24L) = pcbAuxOut;
		*(A_0 + 32L) = prgbAuxOut;
		*A_0 = ref <Module>.??_7AdminGetIFVersionRpc@@6B@ + 8;
		*(A_0 + 56L) = lParam;
		*(A_0 + 64L) = pwMajor;
		*(A_0 + 72L) = pwMinor;
		return A_0;
	}

	// Token: 0x06000042 RID: 66 RVA: 0x00008B88 File Offset: 0x00007F88
	internal unsafe static int EcValidateParameters(AdminGetIFVersionRpc* A_0)
	{
		int result = 0;
		if (*(A_0 + 64L) == 0L || *(A_0 + 72L) == 0L)
		{
			result = -2147024809;
		}
		return result;
	}

	// Token: 0x06000043 RID: 67 RVA: 0x00008BB0 File Offset: 0x00007FB0
	internal unsafe static int EcDispatchCall(AdminGetIFVersionRpc* A_0, IAdminRpcServer server, ClientSecurityContext callerSecurityContext, byte[] auxiliaryIn, out byte[] auxiliaryOut)
	{
		*(*(A_0 + 64L)) = 0;
		*(*(A_0 + 72L)) = 0;
		ushort num;
		ushort num2;
		server.AdminGetIFVersion(callerSecurityContext, out num, out num2);
		*(*(A_0 + 64L)) = (short)num;
		*(*(A_0 + 72L)) = (short)num2;
		return 0;
	}

	// Token: 0x06000044 RID: 68 RVA: 0x00009048 File Offset: 0x00008448
	internal unsafe static void AdminGetIFVersion_Managed(void* hBinding, int lParam, ushort* pwMajor, ushort* pwMinor)
	{
		uint num = 0;
		byte* ptr = null;
		IntPtr admin20IntfHandle = AdminRpcServerBase.Admin20IntfHandle;
		AdminGetIFVersionRpc adminGetIFVersionRpc;
		*(ref adminGetIFVersionRpc + 40) = admin20IntfHandle;
		*(ref adminGetIFVersionRpc + 48) = hBinding;
		*(ref adminGetIFVersionRpc + 8) = 0;
		*(ref adminGetIFVersionRpc + 16) = 0L;
		*(ref adminGetIFVersionRpc + 24) = ref num;
		*(ref adminGetIFVersionRpc + 32) = ref ptr;
		adminGetIFVersionRpc = ref <Module>.??_7AdminGetIFVersionRpc@@6B@ + 8;
		*(ref adminGetIFVersionRpc + 56) = lParam;
		*(ref adminGetIFVersionRpc + 64) = pwMajor;
		*(ref adminGetIFVersionRpc + 72) = pwMinor;
		<Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.Execute(ref adminGetIFVersionRpc);
	}

	// Token: 0x06000045 RID: 69 RVA: 0x000680CC File Offset: 0x000674CC
	internal unsafe static void ??__E??_7AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@6B@@@YMXXZ()
	{
		<Module>.??_7AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@6B@ = ref <Module>.??_R4AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@6B@;
		*(ref <Module>.??_7AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@6B@ + 8) = <Module>.__unep@?InternalExecute@AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@$$FUEAAJXZ;
		*(ref <Module>.??_7AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@6B@ + 16) = <Module>.__unep@?EcValidateParameters@AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@$$FMEAAJXZ;
		*(ref <Module>.??_7AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@6B@ + 24) = (long)ldftn(_purecall);
	}

	// Token: 0x06000046 RID: 70 RVA: 0x00068110 File Offset: 0x00067510
	internal unsafe static void ??__E??_7AdminGetIFVersionRpc@@6B@@@YMXXZ()
	{
		<Module>.??_7AdminGetIFVersionRpc@@6B@ = ref <Module>.??_R4AdminGetIFVersionRpc@@6B@;
		*(ref <Module>.??_7AdminGetIFVersionRpc@@6B@ + 8) = <Module>.__unep@?InternalExecute@AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@$$FUEAAJXZ;
		*(ref <Module>.??_7AdminGetIFVersionRpc@@6B@ + 16) = <Module>.__unep@?EcValidateParameters@AdminGetIFVersionRpc@@$$FUEAAJXZ;
		*(ref <Module>.??_7AdminGetIFVersionRpc@@6B@ + 24) = (long)ldftn(AdminGetIFVersionRpc.EcDispatchCall);
	}

	// Token: 0x06000047 RID: 71 RVA: 0x00008CF8 File Offset: 0x000080F8
	internal unsafe static _GUID GUIDFromGuid(ValueType guid)
	{
		byte[] array = ((Guid)guid).ToByteArray();
		int num = 0;
		int num2 = array.Length;
		_GUID result;
		if (0 < num2)
		{
			_GUID* ptr = &result;
			do
			{
				*(byte*)ptr = array[num];
				num++;
				ptr += 1L / (long)sizeof(_GUID);
			}
			while (num < num2);
		}
		return result;
	}

	// Token: 0x06000048 RID: 72 RVA: 0x000090D8 File Offset: 0x000084D8
	internal unsafe static int EcListAllMdbStatus_Managed(void* hBinding, int fBasicInformation, uint* pcMdbs, uint* pCbOut, byte** ppMdbStatus)
	{
		uint num = 0;
		byte* ptr = null;
		EcListAllMdbStatusRpc ecListAllMdbStatusRpc;
		<Module>.EcListAllMdbStatusRpc.{ctor}(ref ecListAllMdbStatusRpc, AdminRpcServerBase.Admin40IntfHandle, hBinding, fBasicInformation, pcMdbs, pCbOut, ppMdbStatus, 0, null, &num, &ptr);
		return <Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.Execute(ref ecListAllMdbStatusRpc);
	}

	// Token: 0x06000049 RID: 73 RVA: 0x0000910C File Offset: 0x0000850C
	internal unsafe static int EcListMdbStatus40_Managed(void* hBinding, uint ulMdbs, _GUID* rgguidMdb, uint* rgulMdbStatus)
	{
		uint num = 0;
		byte* ptr = null;
		EcListMdbStatusRpc ecListMdbStatusRpc;
		<Module>.EcListMdbStatusRpc.{ctor}(ref ecListMdbStatusRpc, AdminRpcServerBase.Admin40IntfHandle, hBinding, ulMdbs, rgguidMdb, rgulMdbStatus, 0, null, &num, &ptr);
		return <Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.Execute(ref ecListMdbStatusRpc);
	}

	// Token: 0x0600004A RID: 74 RVA: 0x00009140 File Offset: 0x00008540
	internal unsafe static int EcAdminGetCnctTable40_Managed(void* hBinding, _GUID* pguidMdb, int lParam, byte** ppbResult, uint* pulSize, uint* rgptag, uint cptag, uint cpid, uint* pcrow)
	{
		uint num = 0;
		byte* ptr = null;
		EcAdminGetCnctTableRpc ecAdminGetCnctTableRpc;
		<Module>.EcAdminGetCnctTableRpc.{ctor}(ref ecAdminGetCnctTableRpc, AdminRpcServerBase.Admin40IntfHandle, hBinding, pguidMdb, lParam, ppbResult, pulSize, rgptag, cptag, cpid, pcrow, 0, null, &num, &ptr);
		return <Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.Execute(ref ecAdminGetCnctTableRpc);
	}

	// Token: 0x0600004B RID: 75 RVA: 0x0000917C File Offset: 0x0000857C
	internal unsafe static int EcGetLastBackupTimes50_Managed(void* hBinding, _GUID* pguidMdb, _FILETIME* pLastCompleteBackupTime, _FILETIME* pLastIncrementalBackupTime)
	{
		uint num = 0;
		byte* ptr = null;
		EcGetLastBackupTimesRpc ecGetLastBackupTimesRpc;
		<Module>.EcGetLastBackupTimesRpc.{ctor}(ref ecGetLastBackupTimesRpc, AdminRpcServerBase.Admin40IntfHandle, hBinding, pguidMdb, pLastCompleteBackupTime, pLastIncrementalBackupTime, 0, null, &num, &ptr);
		return <Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.Execute(ref ecGetLastBackupTimesRpc);
	}

	// Token: 0x0600004C RID: 76 RVA: 0x000091B0 File Offset: 0x000085B0
	internal unsafe static int EcClearAbsentInDsFlagOnMailbox40_Managed(void* hBinding, _GUID* pguidMdb, _GUID* pguidMailbox)
	{
		uint num = 0;
		byte* ptr = null;
		EcClearAbsentInDsFlagOnMailboxRpc ecClearAbsentInDsFlagOnMailboxRpc;
		<Module>.EcClearAbsentInDsFlagOnMailboxRpc.{ctor}(ref ecClearAbsentInDsFlagOnMailboxRpc, AdminRpcServerBase.Admin40IntfHandle, hBinding, pguidMdb, pguidMailbox, 0, null, &num, &ptr);
		return <Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.Execute(ref ecClearAbsentInDsFlagOnMailboxRpc);
	}

	// Token: 0x0600004D RID: 77 RVA: 0x000091E0 File Offset: 0x000085E0
	internal unsafe static int EcPurgeCachedMailboxObject40_Managed(void* hBinding, _GUID* pguidMailbox)
	{
		uint num = 0;
		byte* ptr = null;
		EcPurgeCachedMailboxObjectRpc ecPurgeCachedMailboxObjectRpc;
		<Module>.EcPurgeCachedMailboxObjectRpc.{ctor}(ref ecPurgeCachedMailboxObjectRpc, AdminRpcServerBase.Admin40IntfHandle, hBinding, pguidMailbox, 0, null, &num, &ptr);
		return <Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.Execute(ref ecPurgeCachedMailboxObjectRpc);
	}

	// Token: 0x0600004E RID: 78 RVA: 0x00009210 File Offset: 0x00008610
	internal unsafe static int EcSyncMailboxesWithDS40_Managed(void* hBinding, _GUID* pguidMdb)
	{
		uint num = 0;
		byte* ptr = null;
		EcSyncMailboxesWithDSRpc ecSyncMailboxesWithDSRpc;
		<Module>.EcSyncMailboxesWithDSRpc.{ctor}(ref ecSyncMailboxesWithDSRpc, AdminRpcServerBase.Admin40IntfHandle, hBinding, pguidMdb, 0, null, &num, &ptr);
		return <Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.Execute(ref ecSyncMailboxesWithDSRpc);
	}

	// Token: 0x0600004F RID: 79 RVA: 0x00009240 File Offset: 0x00008640
	internal unsafe static int EcAdminDeletePrivateMailbox40_Managed(void* hBinding, _GUID* pguidMdb, _GUID* pguidMailbox, uint ulFlags)
	{
		uint num = 0;
		byte* ptr = null;
		EcAdminDeletePrivateMailboxRpc ecAdminDeletePrivateMailboxRpc;
		<Module>.EcAdminDeletePrivateMailboxRpc.{ctor}(ref ecAdminDeletePrivateMailboxRpc, AdminRpcServerBase.Admin40IntfHandle, hBinding, pguidMdb, pguidMailbox, ulFlags, 0, null, &num, &ptr);
		return <Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.Execute(ref ecAdminDeletePrivateMailboxRpc);
	}

	// Token: 0x06000050 RID: 80 RVA: 0x00009274 File Offset: 0x00008674
	internal unsafe static int EcSetMailboxSecurityDescriptor40_Managed(void* hBinding, _GUID* pguidMdb, _GUID* pguidMailbox, byte* pntsd, uint cbSD)
	{
		uint num = 0;
		byte* ptr = null;
		EcSetMailboxSecurityDescriptorRpc ecSetMailboxSecurityDescriptorRpc;
		<Module>.EcSetMailboxSecurityDescriptorRpc.{ctor}(ref ecSetMailboxSecurityDescriptorRpc, AdminRpcServerBase.Admin40IntfHandle, hBinding, pguidMdb, pguidMailbox, pntsd, cbSD, 0, null, &num, &ptr);
		return <Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.Execute(ref ecSetMailboxSecurityDescriptorRpc);
	}

	// Token: 0x06000051 RID: 81 RVA: 0x000092A8 File Offset: 0x000086A8
	internal unsafe static int EcGetMailboxSecurityDescriptor40_Managed(void* hBinding, _GUID* pguidMdb, _GUID* pguidMailbox, byte** ppntsd, uint* pcbSD)
	{
		uint num = 0;
		byte* ptr = null;
		EcGetMailboxSecurityDescriptorRpc ecGetMailboxSecurityDescriptorRpc;
		<Module>.EcGetMailboxSecurityDescriptorRpc.{ctor}(ref ecGetMailboxSecurityDescriptorRpc, AdminRpcServerBase.Admin40IntfHandle, hBinding, pguidMdb, pguidMailbox, ppntsd, pcbSD, 0, null, &num, &ptr);
		return <Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.Execute(ref ecGetMailboxSecurityDescriptorRpc);
	}

	// Token: 0x06000052 RID: 82 RVA: 0x000092DC File Offset: 0x000086DC
	internal unsafe static int EcAdminGetLogonTable40_Managed(void* hBinding, _GUID* pguidMdb, int lParam, byte** ppbResult, uint* pulSize, uint* rgptag, uint cptag, uint cpid, uint* pcrow)
	{
		uint num = 0;
		byte* ptr = null;
		EcAdminGetLogonTableRpc ecAdminGetLogonTableRpc;
		<Module>.EcAdminGetLogonTableRpc.{ctor}(ref ecAdminGetLogonTableRpc, AdminRpcServerBase.Admin40IntfHandle, hBinding, pguidMdb, lParam, ppbResult, pulSize, rgptag, cptag, cpid, pcrow, 0, null, &num, &ptr);
		return <Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.Execute(ref ecAdminGetLogonTableRpc);
	}

	// Token: 0x06000053 RID: 83 RVA: 0x00009318 File Offset: 0x00008718
	internal unsafe static int EcMountDatabase40_Managed(void* hBinding, _GUID* pguidStorageGroup, _GUID* pguidMdb, uint ulFlags)
	{
		uint num = 0;
		byte* ptr = null;
		EcMountDatabaseRpc ecMountDatabaseRpc;
		<Module>.EcMountDatabaseRpc.{ctor}(ref ecMountDatabaseRpc, AdminRpcServerBase.Admin40IntfHandle, hBinding, pguidStorageGroup, pguidMdb, ulFlags, 0, null, &num, &ptr);
		return <Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.Execute(ref ecMountDatabaseRpc);
	}

	// Token: 0x06000054 RID: 84 RVA: 0x0000934C File Offset: 0x0000874C
	internal unsafe static int EcUnmountDatabase40_Managed(void* hBinding, _GUID* pguidStorageGroup, _GUID* pguidMdb, int grfFlags)
	{
		uint num = 0;
		byte* ptr = null;
		EcUnmountDatabaseRpc ecUnmountDatabaseRpc;
		<Module>.EcUnmountDatabaseRpc.{ctor}(ref ecUnmountDatabaseRpc, AdminRpcServerBase.Admin40IntfHandle, hBinding, pguidStorageGroup, pguidMdb, grfFlags, 0, null, &num, &ptr);
		return <Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.Execute(ref ecUnmountDatabaseRpc);
	}

	// Token: 0x06000055 RID: 85 RVA: 0x00009380 File Offset: 0x00008780
	internal unsafe static int EcAdminSetMailboxBasicInfo40_Managed(void* hBinding, _GUID* pguidMdb, _GUID* pguidMailbox, sbyte* rgbMailInfo, uint ulSize)
	{
		uint num = 0;
		byte* ptr = null;
		EcAdminSetMailboxBasicInfoRpc ecAdminSetMailboxBasicInfoRpc;
		<Module>.EcAdminSetMailboxBasicInfoRpc.{ctor}(ref ecAdminSetMailboxBasicInfoRpc, AdminRpcServerBase.Admin40IntfHandle, hBinding, pguidMdb, pguidMailbox, rgbMailInfo, ulSize, 0, null, &num, &ptr);
		return <Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.Execute(ref ecAdminSetMailboxBasicInfoRpc);
	}

	// Token: 0x06000056 RID: 86 RVA: 0x000093B4 File Offset: 0x000087B4
	internal unsafe static int EcPurgeCachedMdbObject40_Managed(void* hBinding, _GUID* pguidMdb)
	{
		uint num = 0;
		byte* ptr = null;
		EcPurgeCachedMdbObjectRpc ecPurgeCachedMdbObjectRpc;
		<Module>.EcPurgeCachedMdbObjectRpc.{ctor}(ref ecPurgeCachedMdbObjectRpc, AdminRpcServerBase.Admin40IntfHandle, hBinding, pguidMdb, 0, null, &num, &ptr);
		return <Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.Execute(ref ecPurgeCachedMdbObjectRpc);
	}

	// Token: 0x06000057 RID: 87 RVA: 0x000093E4 File Offset: 0x000087E4
	internal unsafe static int EcAdminGetMailboxTable40_Managed(void* hBinding, _GUID* pguidMdb, int lParam, byte** ppbResult, uint* pulSize, uint* rgptag, uint cptag, uint cpid, uint* pcrow)
	{
		uint num = 0;
		byte* ptr = null;
		EcAdminGetMailboxTableRpc ecAdminGetMailboxTableRpc;
		<Module>.EcAdminGetMailboxTableRpc.{ctor}(ref ecAdminGetMailboxTableRpc, AdminRpcServerBase.Admin40IntfHandle, hBinding, pguidMdb, lParam, ppbResult, pulSize, rgptag, cptag, cpid, pcrow, 0, null, &num, &ptr);
		return <Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.Execute(ref ecAdminGetMailboxTableRpc);
	}

	// Token: 0x06000058 RID: 88 RVA: 0x00009420 File Offset: 0x00008820
	internal unsafe static int EcAdminNotifyOnDSChange40_Managed(void* hBinding, _GUID* pguidMdb, _GUID* pguidMailbox, uint ulObject)
	{
		uint num = 0;
		byte* ptr = null;
		EcAdminNotifyOnDSChangeRpc ecAdminNotifyOnDSChangeRpc;
		<Module>.EcAdminNotifyOnDSChangeRpc.{ctor}(ref ecAdminNotifyOnDSChangeRpc, AdminRpcServerBase.Admin40IntfHandle, hBinding, pguidMdb, pguidMailbox, ulObject, 0, null, &num, &ptr);
		return <Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.Execute(ref ecAdminNotifyOnDSChangeRpc);
	}

	// Token: 0x06000059 RID: 89 RVA: 0x00009454 File Offset: 0x00008854
	internal unsafe static int EcLogReplayRequest2_Managed(void* hBinding, _GUID* pmdbGuid, uint ulgenLogReplayMax, uint* pulgenLogReplayNext, uint* pCbOut, byte** ppDbinfo, uint* ppatchPageNumber, uint* pcbPatchToken, byte** ppbPatchToken, uint* pcbPatchData, byte** ppbPatchData, uint* pcpgnoCorrupt, uint** ppgnoCorrupt)
	{
		uint num = 0;
		byte* ptr = null;
		EcLogReplayRequestRpc ecLogReplayRequestRpc;
		<Module>.EcLogReplayRequestRpc.{ctor}(ref ecLogReplayRequestRpc, AdminRpcServerBase.Admin40IntfHandle, hBinding, pmdbGuid, ulgenLogReplayMax, 0, pulgenLogReplayNext, pCbOut, ppDbinfo, ppatchPageNumber, pcbPatchToken, ppbPatchToken, pcbPatchData, ppbPatchData, pcpgnoCorrupt, ppgnoCorrupt, 0, null, &num, &ptr);
		return <Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.Execute(ref ecLogReplayRequestRpc);
	}

	// Token: 0x0600005A RID: 90 RVA: 0x00068154 File Offset: 0x00067554
	internal unsafe static void ??__E??_7AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@6B@@@YMXXZ()
	{
		<Module>.??_7AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@6B@ = ref <Module>.??_R4AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@6B@;
		*(ref <Module>.??_7AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@6B@ + 8) = <Module>.__unep@?InternalExecute@AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@$$FUEAAJXZ;
		*(ref <Module>.??_7AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@6B@ + 16) = <Module>.__unep@?EcValidateParameters@AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@$$FMEAAJXZ;
		*(ref <Module>.??_7AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@6B@ + 24) = (long)ldftn(_purecall);
	}

	// Token: 0x0600005B RID: 91 RVA: 0x00009B18 File Offset: 0x00008F18
	internal unsafe static _GUID GUIDFromGuid(ValueType guid)
	{
		byte[] array = ((Guid)guid).ToByteArray();
		int num = 0;
		int num2 = array.Length;
		_GUID result;
		if (0 < num2)
		{
			_GUID* ptr = &result;
			do
			{
				*(byte*)ptr = array[num];
				num++;
				ptr += 1L / (long)sizeof(_GUID);
			}
			while (num < num2);
		}
		return result;
	}

	// Token: 0x0600005C RID: 92 RVA: 0x0000D440 File Offset: 0x0000C840
	internal unsafe static EcReadMdbEvents50Rpc* {ctor}(EcReadMdbEvents50Rpc* A_0, void* hBinding, _GUID* pguidMdb, _GUID* pguidMdbVer, uint cbRequest, byte* pbRequest, uint* pcbResponse, byte** ppbResponse, uint cbAuxIn, byte* rgbAuxIn, uint* pcbAuxOut, byte** prgbAuxOut)
	{
		IntPtr admin50IntfHandle = AdminRpcServerBase.Admin50IntfHandle;
		*A_0 = ref <Module>.??_7AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 40L) = admin50IntfHandle;
		*(A_0 + 48L) = hBinding;
		*(A_0 + 8L) = cbAuxIn;
		*(A_0 + 16L) = rgbAuxIn;
		*(A_0 + 24L) = pcbAuxOut;
		*(A_0 + 32L) = prgbAuxOut;
		*A_0 = ref <Module>.??_7EcReadMdbEvents50Rpc@@6B@ + 8;
		*(A_0 + 56L) = pguidMdb;
		*(A_0 + 64L) = pguidMdbVer;
		*(A_0 + 72L) = cbRequest;
		*(A_0 + 80L) = pbRequest;
		*(A_0 + 88L) = pcbResponse;
		*(A_0 + 96L) = ppbResponse;
		return A_0;
	}

	// Token: 0x0600005D RID: 93 RVA: 0x0000A824 File Offset: 0x00009C24
	internal unsafe static int EcValidateParameters(EcReadMdbEvents50Rpc* A_0)
	{
		int result = 0;
		if (*(A_0 + 56L) == 0L || *(A_0 + 64L) == 0L || *(A_0 + 72L) == 0 || *(A_0 + 80L) == 0L || *(A_0 + 88L) == 0L || *(A_0 + 96L) == 0L)
		{
			result = -2147024809;
		}
		return result;
	}

	// Token: 0x0600005E RID: 94 RVA: 0x0000A86C File Offset: 0x00009C6C
	internal unsafe static int EcDispatchCall(EcReadMdbEvents50Rpc* A_0, IAdminRpcServer server, ClientSecurityContext callerSecurityContext, byte[] auxiliaryIn, out byte[] auxiliaryOut)
	{
		byte[] mByteArray = null;
		int num = 0;
		bool flag = false;
		EcReadMdbEvents50Rpc* ptr = A_0 + 88L;
		*(*ptr) = 0;
		EcReadMdbEvents50Rpc* ptr2 = A_0 + 96L;
		*(*ptr2) = 0L;
		try
		{
			EcReadMdbEvents50Rpc* ptr3 = A_0 + 64L;
			Guid guid = <Module>.FromGUID(*ptr3);
			byte[] request = <Module>.UToMBytes(*(A_0 + 72L), *(A_0 + 80L));
			mByteArray = null;
			Guid mdbGuid = <Module>.FromGUID(*(A_0 + 56L));
			num = server.EcReadMdbEvents50(callerSecurityContext, mdbGuid, ref guid, request, out mByteArray, auxiliaryIn, out auxiliaryOut);
			if (num == null)
			{
				num = <Module>.MToUBytes(mByteArray, *ptr, *ptr2);
				if (0 != num)
				{
					return num;
				}
				_GUID guid2 = <Module>.ToGUID(ref guid);
				cpblk(*ptr3, ref guid2, 16);
			}
			flag = true;
		}
		finally
		{
			if (!flag)
			{
				*(*(A_0 + 88L)) = 0;
				ptr2 = A_0 + 96L;
				ulong num2 = (ulong)(*(*ptr2));
				if (0UL != num2)
				{
					<Module>.MIDL_user_free(num2);
					*(*ptr2) = 0L;
				}
			}
		}
		return num;
	}

	// Token: 0x0600005F RID: 95 RVA: 0x0000D4C8 File Offset: 0x0000C8C8
	internal unsafe static int EcReadMdbEvents50_Managed(void* hBinding, _GUID* pguidMdb, _GUID* pguidMdbVer, uint cbRequest, byte* pbRequest, uint* pcbResponse, byte** ppbResponse, uint cbAuxIn, byte* rgbAuxIn, uint* pcbAuxOut, byte** prgbAuxOut)
	{
		IntPtr admin50IntfHandle = AdminRpcServerBase.Admin50IntfHandle;
		EcReadMdbEvents50Rpc ecReadMdbEvents50Rpc;
		*(ref ecReadMdbEvents50Rpc + 40) = admin50IntfHandle;
		*(ref ecReadMdbEvents50Rpc + 48) = hBinding;
		*(ref ecReadMdbEvents50Rpc + 8) = cbAuxIn;
		*(ref ecReadMdbEvents50Rpc + 16) = rgbAuxIn;
		*(ref ecReadMdbEvents50Rpc + 24) = pcbAuxOut;
		*(ref ecReadMdbEvents50Rpc + 32) = prgbAuxOut;
		ecReadMdbEvents50Rpc = ref <Module>.??_7EcReadMdbEvents50Rpc@@6B@ + 8;
		*(ref ecReadMdbEvents50Rpc + 56) = pguidMdb;
		*(ref ecReadMdbEvents50Rpc + 64) = pguidMdbVer;
		*(ref ecReadMdbEvents50Rpc + 72) = cbRequest;
		*(ref ecReadMdbEvents50Rpc + 80) = pbRequest;
		*(ref ecReadMdbEvents50Rpc + 88) = pcbResponse;
		*(ref ecReadMdbEvents50Rpc + 96) = ppbResponse;
		return <Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.Execute(ref ecReadMdbEvents50Rpc);
	}

	// Token: 0x06000060 RID: 96 RVA: 0x0000D54C File Offset: 0x0000C94C
	internal unsafe static EcSyncMailboxWithDS50Rpc* {ctor}(EcSyncMailboxWithDS50Rpc* A_0, void* hBinding, _GUID* pguidMdb, _GUID* pguidMailbox, uint cbAuxIn, byte* rgbAuxIn, uint* pcbAuxOut, byte** prgbAuxOut)
	{
		IntPtr admin50IntfHandle = AdminRpcServerBase.Admin50IntfHandle;
		*A_0 = ref <Module>.??_7AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 40L) = admin50IntfHandle;
		*(A_0 + 48L) = hBinding;
		*(A_0 + 8L) = cbAuxIn;
		*(A_0 + 16L) = rgbAuxIn;
		*(A_0 + 24L) = pcbAuxOut;
		*(A_0 + 32L) = prgbAuxOut;
		*A_0 = ref <Module>.??_7EcSyncMailboxWithDS50Rpc@@6B@ + 8;
		*(A_0 + 56L) = pguidMdb;
		*(A_0 + 64L) = pguidMailbox;
		return A_0;
	}

	// Token: 0x06000061 RID: 97 RVA: 0x0000A958 File Offset: 0x00009D58
	internal unsafe static int EcValidateParameters(EcSyncMailboxWithDS50Rpc* A_0)
	{
		int result = 0;
		if (*(A_0 + 56L) == 0L || *(A_0 + 64L) == 0L)
		{
			result = -2147024809;
		}
		return result;
	}

	// Token: 0x06000062 RID: 98 RVA: 0x0000A980 File Offset: 0x00009D80
	internal unsafe static int EcDispatchCall(EcSyncMailboxWithDS50Rpc* A_0, IAdminRpcServer server, ClientSecurityContext callerSecurityContext, byte[] auxiliaryIn, out byte[] auxiliaryOut)
	{
		int result = 0;
		try
		{
			Guid mailboxGuid = <Module>.FromGUID(*(A_0 + 64L));
			Guid mdbGuid = <Module>.FromGUID(*(A_0 + 56L));
			result = server.EcSyncMailboxWithDS50(callerSecurityContext, mdbGuid, mailboxGuid, auxiliaryIn, out auxiliaryOut);
		}
		finally
		{
		}
		return result;
	}

	// Token: 0x06000063 RID: 99 RVA: 0x0000D5B4 File Offset: 0x0000C9B4
	internal unsafe static int EcSyncMailboxWithDS50_Managed(void* hBinding, _GUID* pguidMdb, _GUID* pguidMailbox, uint cbAuxIn, byte* rgbAuxIn, uint* pcbAuxOut, byte** prgbAuxOut)
	{
		IntPtr admin50IntfHandle = AdminRpcServerBase.Admin50IntfHandle;
		EcSyncMailboxWithDS50Rpc ecSyncMailboxWithDS50Rpc;
		*(ref ecSyncMailboxWithDS50Rpc + 40) = admin50IntfHandle;
		*(ref ecSyncMailboxWithDS50Rpc + 48) = hBinding;
		*(ref ecSyncMailboxWithDS50Rpc + 8) = cbAuxIn;
		*(ref ecSyncMailboxWithDS50Rpc + 16) = rgbAuxIn;
		*(ref ecSyncMailboxWithDS50Rpc + 24) = pcbAuxOut;
		*(ref ecSyncMailboxWithDS50Rpc + 32) = prgbAuxOut;
		ecSyncMailboxWithDS50Rpc = ref <Module>.??_7EcSyncMailboxWithDS50Rpc@@6B@ + 8;
		*(ref ecSyncMailboxWithDS50Rpc + 56) = pguidMdb;
		*(ref ecSyncMailboxWithDS50Rpc + 64) = pguidMailbox;
		return <Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.Execute(ref ecSyncMailboxWithDS50Rpc);
	}

	// Token: 0x06000064 RID: 100 RVA: 0x0000D618 File Offset: 0x0000CA18
	internal unsafe static EcDeleteMdbWatermarksForConsumer50Rpc* {ctor}(EcDeleteMdbWatermarksForConsumer50Rpc* A_0, void* hBinding, _GUID* pguidMdb, _GUID* pguidMdbVer, _GUID* pguidMailboxDS, _GUID* pguidConsumer, uint* pcDel, uint cbAuxIn, byte* rgbAuxIn, uint* pcbAuxOut, byte** prgbAuxOut)
	{
		IntPtr admin50IntfHandle = AdminRpcServerBase.Admin50IntfHandle;
		*A_0 = ref <Module>.??_7AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 40L) = admin50IntfHandle;
		*(A_0 + 48L) = hBinding;
		*(A_0 + 8L) = cbAuxIn;
		*(A_0 + 16L) = rgbAuxIn;
		*(A_0 + 24L) = pcbAuxOut;
		*(A_0 + 32L) = prgbAuxOut;
		*A_0 = ref <Module>.??_7EcDeleteMdbWatermarksForConsumer50Rpc@@6B@ + 8;
		*(A_0 + 56L) = pguidMdb;
		*(A_0 + 64L) = pguidMdbVer;
		*(A_0 + 72L) = pguidMailboxDS;
		*(A_0 + 80L) = pguidConsumer;
		*(A_0 + 88L) = pcDel;
		return A_0;
	}

	// Token: 0x06000065 RID: 101 RVA: 0x0000A9D8 File Offset: 0x00009DD8
	internal unsafe static int EcValidateParameters(EcDeleteMdbWatermarksForConsumer50Rpc* A_0)
	{
		int result = 0;
		if (*(A_0 + 56L) == 0L || *(A_0 + 64L) == 0L || *(A_0 + 80L) == 0L || *(A_0 + 88L) == 0L)
		{
			result = -2147024809;
		}
		return result;
	}

	// Token: 0x06000066 RID: 102 RVA: 0x0000AA10 File Offset: 0x00009E10
	internal unsafe static int EcDispatchCall(EcDeleteMdbWatermarksForConsumer50Rpc* A_0, IAdminRpcServer server, ClientSecurityContext callerSecurityContext, byte[] auxiliaryIn, out byte[] auxiliaryOut)
	{
		int num = 0;
		*(*(A_0 + 88L)) = 0;
		try
		{
			Guid guid = <Module>.FromGUID(*(A_0 + 64L));
			Guid? mailboxDsGuid = <Module>.NullableGuidFromPGUID(*(A_0 + 72L));
			uint num2 = 0U;
			Guid consumerGuid = <Module>.FromGUID(*(A_0 + 80L));
			Guid mdbGuid = <Module>.FromGUID(*(A_0 + 56L));
			num = server.EcDeleteMdbWatermarksForConsumer50(callerSecurityContext, mdbGuid, ref guid, mailboxDsGuid, consumerGuid, out num2, auxiliaryIn, out auxiliaryOut);
			if (num == null)
			{
				_GUID guid2 = <Module>.ToGUID(ref guid);
				cpblk(*(A_0 + 64L), ref guid2, 16);
				*(*(A_0 + 88L)) = (int)num2;
			}
		}
		finally
		{
		}
		return num;
	}

	// Token: 0x06000067 RID: 103 RVA: 0x0000D698 File Offset: 0x0000CA98
	internal unsafe static int EcDeleteMdbWatermarksForConsumer50_Managed(void* hBinding, _GUID* pguidMdb, _GUID* pguidMdbVer, _GUID* pguidMailboxDS, _GUID* pguidConsumer, uint* pcDel, uint cbAuxIn, byte* rgbAuxIn, uint* pcbAuxOut, byte** prgbAuxOut)
	{
		IntPtr admin50IntfHandle = AdminRpcServerBase.Admin50IntfHandle;
		EcDeleteMdbWatermarksForConsumer50Rpc ecDeleteMdbWatermarksForConsumer50Rpc;
		*(ref ecDeleteMdbWatermarksForConsumer50Rpc + 40) = admin50IntfHandle;
		*(ref ecDeleteMdbWatermarksForConsumer50Rpc + 48) = hBinding;
		*(ref ecDeleteMdbWatermarksForConsumer50Rpc + 8) = cbAuxIn;
		*(ref ecDeleteMdbWatermarksForConsumer50Rpc + 16) = rgbAuxIn;
		*(ref ecDeleteMdbWatermarksForConsumer50Rpc + 24) = pcbAuxOut;
		*(ref ecDeleteMdbWatermarksForConsumer50Rpc + 32) = prgbAuxOut;
		ecDeleteMdbWatermarksForConsumer50Rpc = ref <Module>.??_7EcDeleteMdbWatermarksForConsumer50Rpc@@6B@ + 8;
		*(ref ecDeleteMdbWatermarksForConsumer50Rpc + 56) = pguidMdb;
		*(ref ecDeleteMdbWatermarksForConsumer50Rpc + 64) = pguidMdbVer;
		*(ref ecDeleteMdbWatermarksForConsumer50Rpc + 72) = pguidMailboxDS;
		*(ref ecDeleteMdbWatermarksForConsumer50Rpc + 80) = pguidConsumer;
		*(ref ecDeleteMdbWatermarksForConsumer50Rpc + 88) = pcDel;
		return <Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.Execute(ref ecDeleteMdbWatermarksForConsumer50Rpc);
	}

	// Token: 0x06000068 RID: 104 RVA: 0x0000D714 File Offset: 0x0000CB14
	internal unsafe static EcDeleteMdbWatermarksForMailbox50Rpc* {ctor}(EcDeleteMdbWatermarksForMailbox50Rpc* A_0, void* hBinding, _GUID* pguidMdb, _GUID* pguidMdbVer, _GUID* pguidMailboxDS, uint* pcDel, uint cbAuxIn, byte* rgbAuxIn, uint* pcbAuxOut, byte** prgbAuxOut)
	{
		IntPtr admin50IntfHandle = AdminRpcServerBase.Admin50IntfHandle;
		*A_0 = ref <Module>.??_7AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 40L) = admin50IntfHandle;
		*(A_0 + 48L) = hBinding;
		*(A_0 + 8L) = cbAuxIn;
		*(A_0 + 16L) = rgbAuxIn;
		*(A_0 + 24L) = pcbAuxOut;
		*(A_0 + 32L) = prgbAuxOut;
		*A_0 = ref <Module>.??_7EcDeleteMdbWatermarksForMailbox50Rpc@@6B@ + 8;
		*(A_0 + 56L) = pguidMdb;
		*(A_0 + 64L) = pguidMdbVer;
		*(A_0 + 72L) = pguidMailboxDS;
		*(A_0 + 80L) = pcDel;
		return A_0;
	}

	// Token: 0x06000069 RID: 105 RVA: 0x0000AAF4 File Offset: 0x00009EF4
	internal unsafe static int EcValidateParameters(EcDeleteMdbWatermarksForMailbox50Rpc* A_0)
	{
		int result = 0;
		if (*(A_0 + 56L) == 0L || *(A_0 + 64L) == 0L || *(A_0 + 72L) == 0L || *(A_0 + 80L) == 0L)
		{
			result = -2147024809;
		}
		return result;
	}

	// Token: 0x0600006A RID: 106 RVA: 0x0000AB2C File Offset: 0x00009F2C
	internal unsafe static int EcDispatchCall(EcDeleteMdbWatermarksForMailbox50Rpc* A_0, IAdminRpcServer server, ClientSecurityContext callerSecurityContext, byte[] auxiliaryIn, out byte[] auxiliaryOut)
	{
		int num = 0;
		*(*(A_0 + 80L)) = 0;
		try
		{
			Guid guid = <Module>.FromGUID(*(A_0 + 64L));
			uint num2 = 0U;
			Guid mailboxDsGuid = <Module>.FromGUID(*(A_0 + 72L));
			Guid mdbGuid = <Module>.FromGUID(*(A_0 + 56L));
			num = server.EcDeleteMdbWatermarksForMailbox50(callerSecurityContext, mdbGuid, ref guid, mailboxDsGuid, out num2, auxiliaryIn, out auxiliaryOut);
			if (num == null)
			{
				_GUID guid2 = <Module>.ToGUID(ref guid);
				cpblk(*(A_0 + 64L), ref guid2, 16);
				*(*(A_0 + 80L)) = (int)num2;
			}
		}
		finally
		{
		}
		return num;
	}

	// Token: 0x0600006B RID: 107 RVA: 0x0000D78C File Offset: 0x0000CB8C
	internal unsafe static int EcDeleteMdbWatermarksForMailbox50_Managed(void* hBinding, _GUID* pguidMdb, _GUID* pguidMdbVer, _GUID* pguidMailboxDS, uint* pcDel, uint cbAuxIn, byte* rgbAuxIn, uint* pcbAuxOut, byte** prgbAuxOut)
	{
		IntPtr admin50IntfHandle = AdminRpcServerBase.Admin50IntfHandle;
		EcDeleteMdbWatermarksForMailbox50Rpc ecDeleteMdbWatermarksForMailbox50Rpc;
		*(ref ecDeleteMdbWatermarksForMailbox50Rpc + 40) = admin50IntfHandle;
		*(ref ecDeleteMdbWatermarksForMailbox50Rpc + 48) = hBinding;
		*(ref ecDeleteMdbWatermarksForMailbox50Rpc + 8) = cbAuxIn;
		*(ref ecDeleteMdbWatermarksForMailbox50Rpc + 16) = rgbAuxIn;
		*(ref ecDeleteMdbWatermarksForMailbox50Rpc + 24) = pcbAuxOut;
		*(ref ecDeleteMdbWatermarksForMailbox50Rpc + 32) = prgbAuxOut;
		ecDeleteMdbWatermarksForMailbox50Rpc = ref <Module>.??_7EcDeleteMdbWatermarksForMailbox50Rpc@@6B@ + 8;
		*(ref ecDeleteMdbWatermarksForMailbox50Rpc + 56) = pguidMdb;
		*(ref ecDeleteMdbWatermarksForMailbox50Rpc + 64) = pguidMdbVer;
		*(ref ecDeleteMdbWatermarksForMailbox50Rpc + 72) = pguidMailboxDS;
		*(ref ecDeleteMdbWatermarksForMailbox50Rpc + 80) = pcDel;
		return <Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.Execute(ref ecDeleteMdbWatermarksForMailbox50Rpc);
	}

	// Token: 0x0600006C RID: 108 RVA: 0x0000D800 File Offset: 0x0000CC00
	internal unsafe static EcSaveMdbWatermarks50Rpc* {ctor}(EcSaveMdbWatermarks50Rpc* A_0, void* hBinding, _GUID* pguidMdb, _GUID* pguidMdbVer, uint cWMs, __MIDL_mdbadmin50_0002* pWMs, uint cbAuxIn, byte* rgbAuxIn, uint* pcbAuxOut, byte** prgbAuxOut)
	{
		IntPtr admin50IntfHandle = AdminRpcServerBase.Admin50IntfHandle;
		*A_0 = ref <Module>.??_7AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 40L) = admin50IntfHandle;
		*(A_0 + 48L) = hBinding;
		*(A_0 + 8L) = cbAuxIn;
		*(A_0 + 16L) = rgbAuxIn;
		*(A_0 + 24L) = pcbAuxOut;
		*(A_0 + 32L) = prgbAuxOut;
		*A_0 = ref <Module>.??_7EcSaveMdbWatermarks50Rpc@@6B@ + 8;
		*(A_0 + 56L) = pguidMdb;
		*(A_0 + 64L) = pguidMdbVer;
		*(A_0 + 72L) = cWMs;
		*(A_0 + 80L) = pWMs;
		return A_0;
	}

	// Token: 0x0600006D RID: 109 RVA: 0x0000ABC4 File Offset: 0x00009FC4
	internal unsafe static int EcValidateParameters(EcSaveMdbWatermarks50Rpc* A_0)
	{
		int result = 0;
		if (*(A_0 + 56L) == 0L || *(A_0 + 64L) == 0L || *(A_0 + 80L) == 0L)
		{
			result = -2147024809;
		}
		return result;
	}

	// Token: 0x0600006E RID: 110 RVA: 0x0000ABF4 File Offset: 0x00009FF4
	internal unsafe static int EcDispatchCall(EcSaveMdbWatermarks50Rpc* A_0, IAdminRpcServer server, ClientSecurityContext callerSecurityContext, byte[] auxiliaryIn, out byte[] auxiliaryOut)
	{
		int num = 0;
		try
		{
			Guid guid = <Module>.FromGUID(*(A_0 + 64L));
			MDBEVENTWM[] array = new MDBEVENTWM[*(A_0 + 72L)];
			for (uint num2 = 0; num2 < *(A_0 + 72L); num2++)
			{
				long num3 = (long)(num2 * 40UL);
				Guid mailboxGuid = <Module>.FromGUID(*(A_0 + 80L) + num3);
				array[num2].MailboxGuid = mailboxGuid;
				Guid consumerGuid = <Module>.FromGUID(num3 + *(A_0 + 80L) + 16L);
				array[num2].ConsumerGuid = consumerGuid;
				array[num2].EventCounter = *(num3 + *(A_0 + 80L) + 32L);
			}
			Guid mdbGuid = <Module>.FromGUID(*(A_0 + 56L));
			num = server.EcSaveMdbWatermarks50(callerSecurityContext, mdbGuid, ref guid, array, auxiliaryIn, out auxiliaryOut);
			if (num == null)
			{
				_GUID guid2 = <Module>.ToGUID(ref guid);
				cpblk(*(A_0 + 64L), ref guid2, 16);
			}
		}
		finally
		{
		}
		return num;
	}

	// Token: 0x0600006F RID: 111 RVA: 0x0000D878 File Offset: 0x0000CC78
	internal unsafe static int EcSaveMdbWatermarks50_Managed(void* hBinding, _GUID* pguidMdb, _GUID* pguidMdbVer, uint cWMs, __MIDL_mdbadmin50_0002* pWMs, uint cbAuxIn, byte* rgbAuxIn, uint* pcbAuxOut, byte** prgbAuxOut)
	{
		IntPtr admin50IntfHandle = AdminRpcServerBase.Admin50IntfHandle;
		EcSaveMdbWatermarks50Rpc ecSaveMdbWatermarks50Rpc;
		*(ref ecSaveMdbWatermarks50Rpc + 40) = admin50IntfHandle;
		*(ref ecSaveMdbWatermarks50Rpc + 48) = hBinding;
		*(ref ecSaveMdbWatermarks50Rpc + 8) = cbAuxIn;
		*(ref ecSaveMdbWatermarks50Rpc + 16) = rgbAuxIn;
		*(ref ecSaveMdbWatermarks50Rpc + 24) = pcbAuxOut;
		*(ref ecSaveMdbWatermarks50Rpc + 32) = prgbAuxOut;
		ecSaveMdbWatermarks50Rpc = ref <Module>.??_7EcSaveMdbWatermarks50Rpc@@6B@ + 8;
		*(ref ecSaveMdbWatermarks50Rpc + 56) = pguidMdb;
		*(ref ecSaveMdbWatermarks50Rpc + 64) = pguidMdbVer;
		*(ref ecSaveMdbWatermarks50Rpc + 72) = cWMs;
		*(ref ecSaveMdbWatermarks50Rpc + 80) = pWMs;
		return <Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.Execute(ref ecSaveMdbWatermarks50Rpc);
	}

	// Token: 0x06000070 RID: 112 RVA: 0x0000D8EC File Offset: 0x0000CCEC
	internal unsafe static EcGetMdbWatermarksForConsumer50Rpc* {ctor}(EcGetMdbWatermarksForConsumer50Rpc* A_0, void* hBinding, _GUID* pguidMdb, _GUID* pguidMdbVer, _GUID* pguidMailboxDS, _GUID* pguidConsumer, uint* pcWMs, __MIDL_mdbadmin50_0002** ppWMs, uint cbAuxIn, byte* rgbAuxIn, uint* pcbAuxOut, byte** prgbAuxOut)
	{
		IntPtr admin50IntfHandle = AdminRpcServerBase.Admin50IntfHandle;
		*A_0 = ref <Module>.??_7AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 40L) = admin50IntfHandle;
		*(A_0 + 48L) = hBinding;
		*(A_0 + 8L) = cbAuxIn;
		*(A_0 + 16L) = rgbAuxIn;
		*(A_0 + 24L) = pcbAuxOut;
		*(A_0 + 32L) = prgbAuxOut;
		*A_0 = ref <Module>.??_7EcGetMdbWatermarksForConsumer50Rpc@@6B@ + 8;
		*(A_0 + 56L) = pguidMdb;
		*(A_0 + 64L) = pguidMdbVer;
		*(A_0 + 72L) = pguidMailboxDS;
		*(A_0 + 80L) = pguidConsumer;
		*(A_0 + 88L) = pcWMs;
		*(A_0 + 96L) = ppWMs;
		return A_0;
	}

	// Token: 0x06000071 RID: 113 RVA: 0x0000ACE8 File Offset: 0x0000A0E8
	internal unsafe static int EcValidateParameters(EcGetMdbWatermarksForConsumer50Rpc* A_0)
	{
		int result = 0;
		if (*(A_0 + 56L) == 0L || *(A_0 + 64L) == 0L || *(A_0 + 80L) == 0L || *(A_0 + 88L) == 0L || *(A_0 + 96L) == 0L)
		{
			result = -2147024809;
		}
		return result;
	}

	// Token: 0x06000072 RID: 114 RVA: 0x0000AD28 File Offset: 0x0000A128
	internal unsafe static int EcDispatchCall(EcGetMdbWatermarksForConsumer50Rpc* A_0, IAdminRpcServer server, ClientSecurityContext callerSecurityContext, byte[] auxiliaryIn, out byte[] auxiliaryOut)
	{
		MDBEVENTWM[] array = null;
		int num = 0;
		bool flag = false;
		*(*(A_0 + 88L)) = 0;
		EcGetMdbWatermarksForConsumer50Rpc* ptr = A_0 + 96L;
		*(*ptr) = 0L;
		try
		{
			EcGetMdbWatermarksForConsumer50Rpc* ptr2 = A_0 + 64L;
			Guid guid = <Module>.FromGUID(*ptr2);
			array = null;
			Guid consumerGuid = <Module>.FromGUID(*(A_0 + 80L));
			Guid? mailboxDsGuid = <Module>.NullableGuidFromPGUID(*(A_0 + 72L));
			Guid mdbGuid = <Module>.FromGUID(*(A_0 + 56L));
			num = server.EcGetMdbWatermarksForConsumer50(callerSecurityContext, mdbGuid, ref guid, mailboxDsGuid, consumerGuid, out array, auxiliaryIn, out auxiliaryOut);
			if (num == null)
			{
				_GUID guid2 = <Module>.ToGUID(ref guid);
				cpblk(*ptr2, ref guid2, 16);
				if (array != null)
				{
					*(*ptr) = <Module>.MIDL_user_allocate((ulong)((long)array.Length * 40L));
					if (*(*ptr) == 0L)
					{
						return -2147024882;
					}
					for (int i = 0; i < array.Length; i++)
					{
						MDBEVENTWM mdbeventwm = array[i];
						_GUID guid3 = <Module>.ToGUID(ref mdbeventwm.MailboxGuid);
						long num2 = (long)i * 40L;
						cpblk(*(*ptr) + num2, ref guid3, 16);
						_GUID guid4 = <Module>.ToGUID(ref mdbeventwm.ConsumerGuid);
						cpblk(num2 + *(*ptr) + 16L, ref guid4, 16);
						*(num2 + *(*ptr) + 32L) = mdbeventwm.EventCounter;
					}
					*(*(A_0 + 88L)) = array.Length;
				}
			}
			flag = true;
		}
		finally
		{
			if (!flag)
			{
				*(*(A_0 + 88L)) = 0;
				ptr = A_0 + 96L;
				ulong num3 = (ulong)(*(*ptr));
				if (num3 != 0UL)
				{
					<Module>.MIDL_user_free(num3);
					*ptr = 0L;
				}
			}
		}
		return num;
	}

	// Token: 0x06000073 RID: 115 RVA: 0x0000D974 File Offset: 0x0000CD74
	internal unsafe static int EcGetMdbWatermarksForConsumer50_Managed(void* hBinding, _GUID* pguidMdb, _GUID* pguidMdbVer, _GUID* pguidMailboxDS, _GUID* pguidConsumer, uint* pcWMs, __MIDL_mdbadmin50_0002** ppWMs, uint cbAuxIn, byte* rgbAuxIn, uint* pcbAuxOut, byte** prgbAuxOut)
	{
		IntPtr admin50IntfHandle = AdminRpcServerBase.Admin50IntfHandle;
		EcGetMdbWatermarksForConsumer50Rpc ecGetMdbWatermarksForConsumer50Rpc;
		*(ref ecGetMdbWatermarksForConsumer50Rpc + 40) = admin50IntfHandle;
		*(ref ecGetMdbWatermarksForConsumer50Rpc + 48) = hBinding;
		*(ref ecGetMdbWatermarksForConsumer50Rpc + 8) = cbAuxIn;
		*(ref ecGetMdbWatermarksForConsumer50Rpc + 16) = rgbAuxIn;
		*(ref ecGetMdbWatermarksForConsumer50Rpc + 24) = pcbAuxOut;
		*(ref ecGetMdbWatermarksForConsumer50Rpc + 32) = prgbAuxOut;
		ecGetMdbWatermarksForConsumer50Rpc = ref <Module>.??_7EcGetMdbWatermarksForConsumer50Rpc@@6B@ + 8;
		*(ref ecGetMdbWatermarksForConsumer50Rpc + 56) = pguidMdb;
		*(ref ecGetMdbWatermarksForConsumer50Rpc + 64) = pguidMdbVer;
		*(ref ecGetMdbWatermarksForConsumer50Rpc + 72) = pguidMailboxDS;
		*(ref ecGetMdbWatermarksForConsumer50Rpc + 80) = pguidConsumer;
		*(ref ecGetMdbWatermarksForConsumer50Rpc + 88) = pcWMs;
		*(ref ecGetMdbWatermarksForConsumer50Rpc + 96) = ppWMs;
		return <Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.Execute(ref ecGetMdbWatermarksForConsumer50Rpc);
	}

	// Token: 0x06000074 RID: 116 RVA: 0x0000D9F8 File Offset: 0x0000CDF8
	internal unsafe static EcWriteMdbEvents50Rpc* {ctor}(EcWriteMdbEvents50Rpc* A_0, void* hBinding, _GUID* pguidMdb, _GUID* pguidMdbVer, uint cbRequest, byte* pbRequest, uint* pcbResponse, byte** ppbResponse, uint cbAuxIn, byte* rgbAuxIn, uint* pcbAuxOut, byte** prgbAuxOut)
	{
		IntPtr admin50IntfHandle = AdminRpcServerBase.Admin50IntfHandle;
		*A_0 = ref <Module>.??_7AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 40L) = admin50IntfHandle;
		*(A_0 + 48L) = hBinding;
		*(A_0 + 8L) = cbAuxIn;
		*(A_0 + 16L) = rgbAuxIn;
		*(A_0 + 24L) = pcbAuxOut;
		*(A_0 + 32L) = prgbAuxOut;
		*A_0 = ref <Module>.??_7EcWriteMdbEvents50Rpc@@6B@ + 8;
		*(A_0 + 56L) = pguidMdb;
		*(A_0 + 64L) = pguidMdbVer;
		*(A_0 + 72L) = cbRequest;
		*(A_0 + 80L) = pbRequest;
		*(A_0 + 88L) = pcbResponse;
		*(A_0 + 96L) = ppbResponse;
		return A_0;
	}

	// Token: 0x06000075 RID: 117 RVA: 0x0000AEA8 File Offset: 0x0000A2A8
	internal unsafe static int EcValidateParameters(EcWriteMdbEvents50Rpc* A_0)
	{
		int result = 0;
		if (*(A_0 + 56L) == 0L || *(A_0 + 64L) == 0L || *(A_0 + 80L) == 0L || *(A_0 + 88L) == 0L || *(A_0 + 96L) == 0L)
		{
			result = -2147024809;
		}
		return result;
	}

	// Token: 0x06000076 RID: 118 RVA: 0x0000AEE8 File Offset: 0x0000A2E8
	internal unsafe static int EcDispatchCall(EcWriteMdbEvents50Rpc* A_0, IAdminRpcServer server, ClientSecurityContext callerSecurityContext, byte[] auxiliaryIn, out byte[] auxiliaryOut)
	{
		byte[] mByteArray = null;
		int num = 0;
		bool flag = false;
		EcWriteMdbEvents50Rpc* ptr = A_0 + 88L;
		*(*ptr) = 0;
		EcWriteMdbEvents50Rpc* ptr2 = A_0 + 96L;
		*(*ptr2) = 0L;
		try
		{
			EcWriteMdbEvents50Rpc* ptr3 = A_0 + 64L;
			Guid guid = <Module>.FromGUID(*ptr3);
			byte[] request = <Module>.UToMBytes(*(A_0 + 72L), *(A_0 + 80L));
			mByteArray = null;
			Guid mdbGuid = <Module>.FromGUID(*(A_0 + 56L));
			num = server.EcWriteMdbEvents50(callerSecurityContext, mdbGuid, ref guid, request, out mByteArray, auxiliaryIn, out auxiliaryOut);
			if (num == null)
			{
				_GUID guid2 = <Module>.ToGUID(ref guid);
				cpblk(*ptr3, ref guid2, 16);
				num = <Module>.MToUBytes(mByteArray, *ptr, *ptr2);
				if (0 != num)
				{
					return num;
				}
			}
			flag = true;
		}
		finally
		{
			if (!flag)
			{
				*(*(A_0 + 88L)) = 0;
				ptr2 = A_0 + 96L;
				ulong num2 = (ulong)(*(*ptr2));
				if (num2 != 0UL)
				{
					<Module>.MIDL_user_free(num2);
					*(*ptr2) = 0L;
				}
			}
		}
		return num;
	}

	// Token: 0x06000077 RID: 119 RVA: 0x0000DA80 File Offset: 0x0000CE80
	internal unsafe static int EcWriteMdbEvents50_Managed(void* hBinding, _GUID* pguidMdb, _GUID* pguidMdbVer, uint cbRequest, byte* pbRequest, uint* pcbResponse, byte** ppbResponse, uint cbAuxIn, byte* rgbAuxIn, uint* pcbAuxOut, byte** prgbAuxOut)
	{
		IntPtr admin50IntfHandle = AdminRpcServerBase.Admin50IntfHandle;
		EcWriteMdbEvents50Rpc ecWriteMdbEvents50Rpc;
		*(ref ecWriteMdbEvents50Rpc + 40) = admin50IntfHandle;
		*(ref ecWriteMdbEvents50Rpc + 48) = hBinding;
		*(ref ecWriteMdbEvents50Rpc + 8) = cbAuxIn;
		*(ref ecWriteMdbEvents50Rpc + 16) = rgbAuxIn;
		*(ref ecWriteMdbEvents50Rpc + 24) = pcbAuxOut;
		*(ref ecWriteMdbEvents50Rpc + 32) = prgbAuxOut;
		ecWriteMdbEvents50Rpc = ref <Module>.??_7EcWriteMdbEvents50Rpc@@6B@ + 8;
		*(ref ecWriteMdbEvents50Rpc + 56) = pguidMdb;
		*(ref ecWriteMdbEvents50Rpc + 64) = pguidMdbVer;
		*(ref ecWriteMdbEvents50Rpc + 72) = cbRequest;
		*(ref ecWriteMdbEvents50Rpc + 80) = pbRequest;
		*(ref ecWriteMdbEvents50Rpc + 88) = pcbResponse;
		*(ref ecWriteMdbEvents50Rpc + 96) = ppbResponse;
		return <Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.Execute(ref ecWriteMdbEvents50Rpc);
	}

	// Token: 0x06000078 RID: 120 RVA: 0x0000DB04 File Offset: 0x0000CF04
	internal unsafe static EcGetMdbWatermarksForMailbox50Rpc* {ctor}(EcGetMdbWatermarksForMailbox50Rpc* A_0, void* hBinding, _GUID* pguidMdb, _GUID* pguidMdbVer, _GUID* pguidMailboxDS, uint* pcWMs, __MIDL_mdbadmin50_0002** ppWMs, uint cbAuxIn, byte* rgbAuxIn, uint* pcbAuxOut, byte** prgbAuxOut)
	{
		IntPtr admin50IntfHandle = AdminRpcServerBase.Admin50IntfHandle;
		*A_0 = ref <Module>.??_7AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 40L) = admin50IntfHandle;
		*(A_0 + 48L) = hBinding;
		*(A_0 + 8L) = cbAuxIn;
		*(A_0 + 16L) = rgbAuxIn;
		*(A_0 + 24L) = pcbAuxOut;
		*(A_0 + 32L) = prgbAuxOut;
		*A_0 = ref <Module>.??_7EcGetMdbWatermarksForMailbox50Rpc@@6B@ + 8;
		*(A_0 + 56L) = pguidMdb;
		*(A_0 + 64L) = pguidMdbVer;
		*(A_0 + 72L) = pguidMailboxDS;
		*(A_0 + 80L) = pcWMs;
		*(A_0 + 88L) = ppWMs;
		return A_0;
	}

	// Token: 0x06000079 RID: 121 RVA: 0x0000AFD0 File Offset: 0x0000A3D0
	internal unsafe static int EcValidateParameters(EcGetMdbWatermarksForMailbox50Rpc* A_0)
	{
		int result = 0;
		if (*(A_0 + 56L) == 0L || *(A_0 + 64L) == 0L || *(A_0 + 72L) == 0L || *(A_0 + 80L) == 0L || *(A_0 + 88L) == 0L)
		{
			result = -2147024809;
		}
		return result;
	}

	// Token: 0x0600007A RID: 122 RVA: 0x0000B010 File Offset: 0x0000A410
	internal unsafe static int EcDispatchCall(EcGetMdbWatermarksForMailbox50Rpc* A_0, IAdminRpcServer server, ClientSecurityContext callerSecurityContext, byte[] auxiliaryIn, out byte[] auxiliaryOut)
	{
		MDBEVENTWM[] array = null;
		int num = 0;
		bool flag = false;
		*(*(A_0 + 80L)) = 0;
		EcGetMdbWatermarksForMailbox50Rpc* ptr = A_0 + 88L;
		*(*ptr) = 0L;
		try
		{
			EcGetMdbWatermarksForMailbox50Rpc* ptr2 = A_0 + 64L;
			Guid guid = <Module>.FromGUID(*ptr2);
			array = null;
			Guid mailboxDsGuid = <Module>.FromGUID(*(A_0 + 72L));
			Guid mdbGuid = <Module>.FromGUID(*(A_0 + 56L));
			num = server.EcGetMdbWatermarksForMailbox50(callerSecurityContext, mdbGuid, ref guid, mailboxDsGuid, out array, auxiliaryIn, out auxiliaryOut);
			if (num == null)
			{
				_GUID guid2 = <Module>.ToGUID(ref guid);
				cpblk(*ptr2, ref guid2, 16);
				if (array != null)
				{
					*(*ptr) = <Module>.MIDL_user_allocate((ulong)((long)array.Length * 40L));
					if (*(*ptr) == 0L)
					{
						return -2147024882;
					}
					for (int i = 0; i < array.Length; i++)
					{
						MDBEVENTWM mdbeventwm = array[i];
						_GUID guid3 = <Module>.ToGUID(ref mdbeventwm.MailboxGuid);
						long num2 = (long)i * 40L;
						cpblk(*(*ptr) + num2, ref guid3, 16);
						_GUID guid4 = <Module>.ToGUID(ref mdbeventwm.ConsumerGuid);
						cpblk(num2 + *(*ptr) + 16L, ref guid4, 16);
						*(num2 + *(*ptr) + 32L) = mdbeventwm.EventCounter;
					}
					*(*(A_0 + 80L)) = array.Length;
				}
			}
			flag = true;
		}
		finally
		{
			if (!flag)
			{
				*(*(A_0 + 80L)) = 0;
				ptr = A_0 + 88L;
				ulong num3 = (ulong)(*(*ptr));
				if (num3 != 0UL)
				{
					<Module>.MIDL_user_free(num3);
					*ptr = 0L;
				}
			}
		}
		return num;
	}

	// Token: 0x0600007B RID: 123 RVA: 0x0000DB84 File Offset: 0x0000CF84
	internal unsafe static int EcGetMdbWatermarksForMailbox50_Managed(void* hBinding, _GUID* pguidMdb, _GUID* pguidMdbVer, _GUID* pguidMailboxDS, uint* pcWMs, __MIDL_mdbadmin50_0002** ppWMs, uint cbAuxIn, byte* rgbAuxIn, uint* pcbAuxOut, byte** prgbAuxOut)
	{
		IntPtr admin50IntfHandle = AdminRpcServerBase.Admin50IntfHandle;
		EcGetMdbWatermarksForMailbox50Rpc ecGetMdbWatermarksForMailbox50Rpc;
		*(ref ecGetMdbWatermarksForMailbox50Rpc + 40) = admin50IntfHandle;
		*(ref ecGetMdbWatermarksForMailbox50Rpc + 48) = hBinding;
		*(ref ecGetMdbWatermarksForMailbox50Rpc + 8) = cbAuxIn;
		*(ref ecGetMdbWatermarksForMailbox50Rpc + 16) = rgbAuxIn;
		*(ref ecGetMdbWatermarksForMailbox50Rpc + 24) = pcbAuxOut;
		*(ref ecGetMdbWatermarksForMailbox50Rpc + 32) = prgbAuxOut;
		ecGetMdbWatermarksForMailbox50Rpc = ref <Module>.??_7EcGetMdbWatermarksForMailbox50Rpc@@6B@ + 8;
		*(ref ecGetMdbWatermarksForMailbox50Rpc + 56) = pguidMdb;
		*(ref ecGetMdbWatermarksForMailbox50Rpc + 64) = pguidMdbVer;
		*(ref ecGetMdbWatermarksForMailbox50Rpc + 72) = pguidMailboxDS;
		*(ref ecGetMdbWatermarksForMailbox50Rpc + 80) = pcWMs;
		*(ref ecGetMdbWatermarksForMailbox50Rpc + 88) = ppWMs;
		return <Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.Execute(ref ecGetMdbWatermarksForMailbox50Rpc);
	}

	// Token: 0x0600007C RID: 124 RVA: 0x0000DC00 File Offset: 0x0000D000
	internal unsafe static EcDoMaintenanceTask50Rpc* {ctor}(EcDoMaintenanceTask50Rpc* A_0, void* hBinding, _GUID* pguidMdb, uint ulTask, uint cbAuxIn, byte* rgbAuxIn, uint* pcbAuxOut, byte** prgbAuxOut)
	{
		IntPtr admin50IntfHandle = AdminRpcServerBase.Admin50IntfHandle;
		*A_0 = ref <Module>.??_7AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 40L) = admin50IntfHandle;
		*(A_0 + 48L) = hBinding;
		*(A_0 + 8L) = cbAuxIn;
		*(A_0 + 16L) = rgbAuxIn;
		*(A_0 + 24L) = pcbAuxOut;
		*(A_0 + 32L) = prgbAuxOut;
		*A_0 = ref <Module>.??_7EcDoMaintenanceTask50Rpc@@6B@ + 8;
		*(A_0 + 56L) = pguidMdb;
		*(A_0 + 64L) = ulTask;
		return A_0;
	}

	// Token: 0x0600007D RID: 125 RVA: 0x0000B180 File Offset: 0x0000A580
	internal unsafe static int EcValidateParameters(EcDoMaintenanceTask50Rpc* A_0)
	{
		int num = 0;
		return (*(A_0 + 56L) == 0L) ? -2147024809 : num;
	}

	// Token: 0x0600007E RID: 126 RVA: 0x0000B1A4 File Offset: 0x0000A5A4
	internal unsafe static int EcDispatchCall(EcDoMaintenanceTask50Rpc* A_0, IAdminRpcServer server, ClientSecurityContext callerSecurityContext, byte[] auxiliaryIn, out byte[] auxiliaryOut)
	{
		int result = 0;
		try
		{
			Guid mdbGuid = <Module>.FromGUID(*(A_0 + 56L));
			result = server.EcDoMaintenanceTask50(callerSecurityContext, mdbGuid, (uint)(*(A_0 + 64L)), auxiliaryIn, out auxiliaryOut);
		}
		finally
		{
		}
		return result;
	}

	// Token: 0x0600007F RID: 127 RVA: 0x0000DC68 File Offset: 0x0000D068
	internal unsafe static int EcDoMaintenanceTask50_Managed(void* hBinding, _GUID* pguidMdb, uint ulTask, uint cbAuxIn, byte* rgbAuxIn, uint* pcbAuxOut, byte** prgbAuxOut)
	{
		IntPtr admin50IntfHandle = AdminRpcServerBase.Admin50IntfHandle;
		EcDoMaintenanceTask50Rpc ecDoMaintenanceTask50Rpc;
		*(ref ecDoMaintenanceTask50Rpc + 40) = admin50IntfHandle;
		*(ref ecDoMaintenanceTask50Rpc + 48) = hBinding;
		*(ref ecDoMaintenanceTask50Rpc + 8) = cbAuxIn;
		*(ref ecDoMaintenanceTask50Rpc + 16) = rgbAuxIn;
		*(ref ecDoMaintenanceTask50Rpc + 24) = pcbAuxOut;
		*(ref ecDoMaintenanceTask50Rpc + 32) = prgbAuxOut;
		ecDoMaintenanceTask50Rpc = ref <Module>.??_7EcDoMaintenanceTask50Rpc@@6B@ + 8;
		*(ref ecDoMaintenanceTask50Rpc + 56) = pguidMdb;
		*(ref ecDoMaintenanceTask50Rpc + 64) = ulTask;
		return <Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.Execute(ref ecDoMaintenanceTask50Rpc);
	}

	// Token: 0x06000080 RID: 128 RVA: 0x0000DCCC File Offset: 0x0000D0CC
	internal unsafe static EcGetLastBackupInfo50Rpc* {ctor}(EcGetLastBackupInfo50Rpc* A_0, void* hBinding, _GUID* pguidMdb, _FILETIME* pLastCompleteBackupTime, _FILETIME* pLastIncrementalBackupTime, _FILETIME* pLastDifferentialBackupTime, _FILETIME* pLastCopyBackupTime, int* plSnapFull, int* plSnapIncremental, int* plSnapDifferential, int* plSnapCopy, uint cbAuxIn, byte* rgbAuxIn, uint* pcbAuxOut, byte** prgbAuxOut)
	{
		IntPtr admin50IntfHandle = AdminRpcServerBase.Admin50IntfHandle;
		*A_0 = ref <Module>.??_7AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 40L) = admin50IntfHandle;
		*(A_0 + 48L) = hBinding;
		*(A_0 + 8L) = cbAuxIn;
		*(A_0 + 16L) = rgbAuxIn;
		*(A_0 + 24L) = pcbAuxOut;
		*(A_0 + 32L) = prgbAuxOut;
		*A_0 = ref <Module>.??_7EcGetLastBackupInfo50Rpc@@6B@ + 8;
		*(A_0 + 56L) = pguidMdb;
		*(A_0 + 64L) = pLastCompleteBackupTime;
		*(A_0 + 72L) = pLastIncrementalBackupTime;
		*(A_0 + 80L) = pLastDifferentialBackupTime;
		*(A_0 + 88L) = pLastCopyBackupTime;
		*(A_0 + 96L) = plSnapFull;
		*(A_0 + 104L) = plSnapIncremental;
		*(A_0 + 112L) = plSnapDifferential;
		*(A_0 + 120L) = plSnapCopy;
		return A_0;
	}

	// Token: 0x06000081 RID: 129 RVA: 0x0000B1F4 File Offset: 0x0000A5F4
	internal unsafe static int EcValidateParameters(EcGetLastBackupInfo50Rpc* A_0)
	{
		int result = 0;
		if (*(A_0 + 56L) == 0L || *(A_0 + 64L) == 0L || *(A_0 + 72L) == 0L || *(A_0 + 80L) == 0L || *(A_0 + 88L) == 0L || *(A_0 + 96L) == 0L || *(A_0 + 104L) == 0L || *(A_0 + 112L) == 0L || *(A_0 + 120L) == 0L)
		{
			result = -2147024809;
		}
		return result;
	}

	// Token: 0x06000082 RID: 130 RVA: 0x0000B254 File Offset: 0x0000A654
	internal unsafe static int EcDispatchCall(EcGetLastBackupInfo50Rpc* A_0, IAdminRpcServer server, ClientSecurityContext callerSecurityContext, byte[] auxiliaryIn, out byte[] auxiliaryOut)
	{
		*(*(A_0 + 64L)) = 0L;
		*(*(A_0 + 72L)) = 0L;
		*(*(A_0 + 80L)) = 0L;
		*(*(A_0 + 88L)) = 0L;
		*(*(A_0 + 96L)) = 0;
		*(*(A_0 + 104L)) = 0;
		*(*(A_0 + 112L)) = 0;
		*(*(A_0 + 120L)) = 0;
		long num = 0L;
		long num2 = 0L;
		long num3 = 0L;
		long num4 = 0L;
		int num5 = 0;
		int num6 = 0;
		int num7 = 0;
		int num8 = 0;
		Guid mdbGuid = <Module>.FromGUID(*(A_0 + 56L));
		int num9 = server.EcGetLastBackupInfo50(callerSecurityContext, mdbGuid, out num, out num2, out num3, out num4, out num5, out num6, out num7, out num8, auxiliaryIn, out auxiliaryOut);
		if (num9 == null)
		{
			*(*(A_0 + 64L)) = num;
			*(*(A_0 + 72L)) = num2;
			*(*(A_0 + 80L)) = num3;
			*(*(A_0 + 88L)) = num4;
			*(*(A_0 + 96L)) = num5;
			*(*(A_0 + 104L)) = num6;
			*(*(A_0 + 112L)) = num7;
			*(*(A_0 + 120L)) = num8;
		}
		return num9;
	}

	// Token: 0x06000083 RID: 131 RVA: 0x0000DD6C File Offset: 0x0000D16C
	internal unsafe static int EcGetLastBackupInfo50_Managed(void* hBinding, _GUID* pguidMdb, _FILETIME* pLastCompleteBackupTime, _FILETIME* pLastIncrementalBackupTime, _FILETIME* pLastDifferentialBackupTime, _FILETIME* pLastCopyBackupTime, int* plSnapFull, int* plSnapIncremental, int* plSnapDifferential, int* plSnapCopy)
	{
		uint num = 0;
		byte* ptr = null;
		IntPtr admin50IntfHandle = AdminRpcServerBase.Admin50IntfHandle;
		EcGetLastBackupInfo50Rpc ecGetLastBackupInfo50Rpc;
		*(ref ecGetLastBackupInfo50Rpc + 40) = admin50IntfHandle;
		*(ref ecGetLastBackupInfo50Rpc + 48) = hBinding;
		*(ref ecGetLastBackupInfo50Rpc + 8) = 0;
		*(ref ecGetLastBackupInfo50Rpc + 16) = 0L;
		*(ref ecGetLastBackupInfo50Rpc + 24) = ref num;
		*(ref ecGetLastBackupInfo50Rpc + 32) = ref ptr;
		ecGetLastBackupInfo50Rpc = ref <Module>.??_7EcGetLastBackupInfo50Rpc@@6B@ + 8;
		*(ref ecGetLastBackupInfo50Rpc + 56) = pguidMdb;
		*(ref ecGetLastBackupInfo50Rpc + 64) = pLastCompleteBackupTime;
		*(ref ecGetLastBackupInfo50Rpc + 72) = pLastIncrementalBackupTime;
		*(ref ecGetLastBackupInfo50Rpc + 80) = pLastDifferentialBackupTime;
		*(ref ecGetLastBackupInfo50Rpc + 88) = pLastCopyBackupTime;
		*(ref ecGetLastBackupInfo50Rpc + 96) = plSnapFull;
		*(ref ecGetLastBackupInfo50Rpc + 104) = plSnapIncremental;
		*(ref ecGetLastBackupInfo50Rpc + 112) = plSnapDifferential;
		*(ref ecGetLastBackupInfo50Rpc + 120) = plSnapCopy;
		return <Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.Execute(ref ecGetLastBackupInfo50Rpc);
	}

	// Token: 0x06000084 RID: 132 RVA: 0x0000DE0C File Offset: 0x0000D20C
	internal unsafe static int EcGetLastBackupInfoEx50_Managed(void* hBinding, _GUID* pguidMdb, _FILETIME* pLastCompleteBackupTime, _FILETIME* pLastIncrementalBackupTime, _FILETIME* pLastDifferentialBackupTime, _FILETIME* pLastCopyBackupTime, int* plSnapFull, int* plSnapIncremental, int* plSnapDifferential, int* plSnapCopy, uint cbAuxIn, byte* rgbAuxIn, uint* pcbAuxOut, byte** prgbAuxOut)
	{
		IntPtr admin50IntfHandle = AdminRpcServerBase.Admin50IntfHandle;
		EcGetLastBackupInfo50Rpc ecGetLastBackupInfo50Rpc;
		*(ref ecGetLastBackupInfo50Rpc + 40) = admin50IntfHandle;
		*(ref ecGetLastBackupInfo50Rpc + 48) = hBinding;
		*(ref ecGetLastBackupInfo50Rpc + 8) = cbAuxIn;
		*(ref ecGetLastBackupInfo50Rpc + 16) = rgbAuxIn;
		*(ref ecGetLastBackupInfo50Rpc + 24) = pcbAuxOut;
		*(ref ecGetLastBackupInfo50Rpc + 32) = prgbAuxOut;
		ecGetLastBackupInfo50Rpc = ref <Module>.??_7EcGetLastBackupInfo50Rpc@@6B@ + 8;
		*(ref ecGetLastBackupInfo50Rpc + 56) = pguidMdb;
		*(ref ecGetLastBackupInfo50Rpc + 64) = pLastCompleteBackupTime;
		*(ref ecGetLastBackupInfo50Rpc + 72) = pLastIncrementalBackupTime;
		*(ref ecGetLastBackupInfo50Rpc + 80) = pLastDifferentialBackupTime;
		*(ref ecGetLastBackupInfo50Rpc + 88) = pLastCopyBackupTime;
		*(ref ecGetLastBackupInfo50Rpc + 96) = plSnapFull;
		*(ref ecGetLastBackupInfo50Rpc + 104) = plSnapIncremental;
		*(ref ecGetLastBackupInfo50Rpc + 112) = plSnapDifferential;
		*(ref ecGetLastBackupInfo50Rpc + 120) = plSnapCopy;
		return <Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.Execute(ref ecGetLastBackupInfo50Rpc);
	}

	// Token: 0x06000085 RID: 133 RVA: 0x0000DEA8 File Offset: 0x0000D2A8
	internal unsafe static EcAdminGetMailboxTableEntry* {ctor}(EcAdminGetMailboxTableEntry* A_0, void* hBinding, _GUID* pguidMdb, _GUID* pguidMailbox, byte** ppbResult, uint* pulSize, uint* rgptag, uint cptag, uint cpid, uint* pcrow, uint cbAuxIn, byte* rgbAuxIn, uint* pcbAuxOut, byte** prgbAuxOut)
	{
		IntPtr admin50IntfHandle = AdminRpcServerBase.Admin50IntfHandle;
		*A_0 = ref <Module>.??_7AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 40L) = admin50IntfHandle;
		*(A_0 + 48L) = hBinding;
		*(A_0 + 8L) = cbAuxIn;
		*(A_0 + 16L) = rgbAuxIn;
		*(A_0 + 24L) = pcbAuxOut;
		*(A_0 + 32L) = prgbAuxOut;
		*A_0 = ref <Module>.??_7EcAdminGetMailboxTableEntry@@6B@ + 8;
		*(A_0 + 56L) = pguidMdb;
		*(A_0 + 64L) = pguidMailbox;
		*(A_0 + 72L) = ppbResult;
		*(A_0 + 80L) = pulSize;
		*(A_0 + 88L) = rgptag;
		*(A_0 + 96L) = cptag;
		*(A_0 + 100L) = cpid;
		*(A_0 + 104L) = pcrow;
		return A_0;
	}

	// Token: 0x06000086 RID: 134 RVA: 0x0000B334 File Offset: 0x0000A734
	internal unsafe static int EcValidateParameters(EcAdminGetMailboxTableEntry* A_0)
	{
		int result = 0;
		if (*(A_0 + 56L) == 0L || *(A_0 + 64L) == 0L || *(A_0 + 72L) == 0L || *(A_0 + 80L) == 0L || *(A_0 + 88L) == 0L || *(A_0 + 104L) == 0L)
		{
			result = -2147024809;
		}
		return result;
	}

	// Token: 0x06000087 RID: 135 RVA: 0x0000DF40 File Offset: 0x0000D340
	internal unsafe static EcAdminGetMailboxTableEntry50Rpc* {ctor}(EcAdminGetMailboxTableEntry50Rpc* A_0, void* hBinding, _GUID* pguidMdb, _GUID* pguidMailbox, byte** ppbResult, uint* pulSize, uint* rgptag, uint cptag, uint cpid, uint* pcrow, uint cbAuxIn, byte* rgbAuxIn, uint* pcbAuxOut, byte** prgbAuxOut)
	{
		IntPtr admin50IntfHandle = AdminRpcServerBase.Admin50IntfHandle;
		*A_0 = ref <Module>.??_7AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 40L) = admin50IntfHandle;
		*(A_0 + 48L) = hBinding;
		*(A_0 + 8L) = cbAuxIn;
		*(A_0 + 16L) = rgbAuxIn;
		*(A_0 + 24L) = pcbAuxOut;
		*(A_0 + 32L) = prgbAuxOut;
		*(A_0 + 56L) = pguidMdb;
		*(A_0 + 64L) = pguidMailbox;
		*(A_0 + 72L) = ppbResult;
		*(A_0 + 80L) = pulSize;
		*(A_0 + 88L) = rgptag;
		*(A_0 + 96L) = cptag;
		*(A_0 + 100L) = cpid;
		*(A_0 + 104L) = pcrow;
		*A_0 = ref <Module>.??_7EcAdminGetMailboxTableEntry50Rpc@@6B@ + 8;
		return A_0;
	}

	// Token: 0x06000088 RID: 136 RVA: 0x0000B37C File Offset: 0x0000A77C
	internal unsafe static int EcDispatchCall(EcAdminGetMailboxTableEntry50Rpc* A_0, IAdminRpcServer server, ClientSecurityContext callerSecurityContext, byte[] auxiliaryIn, out byte[] auxiliaryOut)
	{
		byte[] mByteArray = null;
		int num = 0;
		bool flag = false;
		EcAdminGetMailboxTableEntry50Rpc* ptr = A_0 + 72L;
		*(*ptr) = 0L;
		EcAdminGetMailboxTableEntry50Rpc* ptr2 = A_0 + 80L;
		*(*ptr2) = 0;
		EcAdminGetMailboxTableEntry50Rpc* ptr3 = A_0 + 104L;
		*(*ptr3) = 0;
		try
		{
			uint[] propTags = <Module>.UToMUInt32s((uint)(*(A_0 + 96L)), *(A_0 + 88L));
			mByteArray = null;
			uint num2 = 0U;
			Guid mailboxGuid = <Module>.FromGUID(*(A_0 + 64L));
			Guid mdbGuid = <Module>.FromGUID(*(A_0 + 56L));
			num = server.EcAdminGetMailboxTableEntry50(callerSecurityContext, mdbGuid, mailboxGuid, propTags, (uint)(*(A_0 + 100L)), out mByteArray, out num2, auxiliaryIn, out auxiliaryOut);
			if (num == null)
			{
				num = <Module>.MToUBytes(mByteArray, *ptr2, *ptr);
				if (0 != num)
				{
					return num;
				}
				*(*ptr3) = (int)num2;
			}
			flag = true;
		}
		finally
		{
			if (!flag)
			{
				*(*(A_0 + 80L)) = 0;
				*(*(A_0 + 104L)) = 0;
				ptr = A_0 + 72L;
				ulong num3 = (ulong)(*(*ptr));
				if (0UL != num3)
				{
					<Module>.MIDL_user_free(num3);
					*(*ptr) = 0L;
				}
			}
		}
		return num;
	}

	// Token: 0x06000089 RID: 137 RVA: 0x0000DFD8 File Offset: 0x0000D3D8
	internal unsafe static int EcAdminGetMailboxTableEntry50_Managed(void* hBinding, _GUID* pguidMdb, _GUID* pguidMailbox, byte** ppbResult, uint* pulSize, uint* rgptag, uint cptag, uint cpid, uint* pcrow, uint cbAuxIn, byte* rgbAuxIn, uint* pcbAuxOut, byte** prgbAuxOut)
	{
		IntPtr admin50IntfHandle = AdminRpcServerBase.Admin50IntfHandle;
		EcAdminGetMailboxTableEntry50Rpc ecAdminGetMailboxTableEntry50Rpc;
		*(ref ecAdminGetMailboxTableEntry50Rpc + 40) = admin50IntfHandle;
		*(ref ecAdminGetMailboxTableEntry50Rpc + 48) = hBinding;
		*(ref ecAdminGetMailboxTableEntry50Rpc + 8) = cbAuxIn;
		*(ref ecAdminGetMailboxTableEntry50Rpc + 16) = rgbAuxIn;
		*(ref ecAdminGetMailboxTableEntry50Rpc + 24) = pcbAuxOut;
		*(ref ecAdminGetMailboxTableEntry50Rpc + 32) = prgbAuxOut;
		*(ref ecAdminGetMailboxTableEntry50Rpc + 56) = pguidMdb;
		*(ref ecAdminGetMailboxTableEntry50Rpc + 64) = pguidMailbox;
		*(ref ecAdminGetMailboxTableEntry50Rpc + 72) = ppbResult;
		*(ref ecAdminGetMailboxTableEntry50Rpc + 80) = pulSize;
		*(ref ecAdminGetMailboxTableEntry50Rpc + 88) = rgptag;
		*(ref ecAdminGetMailboxTableEntry50Rpc + 96) = cptag;
		*(ref ecAdminGetMailboxTableEntry50Rpc + 100) = cpid;
		*(ref ecAdminGetMailboxTableEntry50Rpc + 104) = pcrow;
		ecAdminGetMailboxTableEntry50Rpc = ref <Module>.??_7EcAdminGetMailboxTableEntry50Rpc@@6B@ + 8;
		return <Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.Execute(ref ecAdminGetMailboxTableEntry50Rpc);
	}

	// Token: 0x0600008A RID: 138 RVA: 0x0000E06C File Offset: 0x0000D46C
	internal unsafe static EcAdminGetMailboxTableEntryFlags50Rpc* {ctor}(EcAdminGetMailboxTableEntryFlags50Rpc* A_0, void* hBinding, _GUID* pguidMdb, _GUID* pguidMailbox, uint ulFlags, byte** ppbResult, uint* pulSize, uint* rgptag, uint cptag, uint cpid, uint* pcrow, uint cbAuxIn, byte* rgbAuxIn, uint* pcbAuxOut, byte** prgbAuxOut)
	{
		IntPtr admin50IntfHandle = AdminRpcServerBase.Admin50IntfHandle;
		*A_0 = ref <Module>.??_7AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 40L) = admin50IntfHandle;
		*(A_0 + 48L) = hBinding;
		*(A_0 + 8L) = cbAuxIn;
		*(A_0 + 16L) = rgbAuxIn;
		*(A_0 + 24L) = pcbAuxOut;
		*(A_0 + 32L) = prgbAuxOut;
		*(A_0 + 56L) = pguidMdb;
		*(A_0 + 64L) = pguidMailbox;
		*(A_0 + 72L) = ppbResult;
		*(A_0 + 80L) = pulSize;
		*(A_0 + 88L) = rgptag;
		*(A_0 + 96L) = cptag;
		*(A_0 + 100L) = cpid;
		*(A_0 + 104L) = pcrow;
		*A_0 = ref <Module>.??_7EcAdminGetMailboxTableEntryFlags50Rpc@@6B@ + 8;
		*(A_0 + 112L) = ulFlags;
		return A_0;
	}

	// Token: 0x0600008B RID: 139 RVA: 0x0000B474 File Offset: 0x0000A874
	internal unsafe static int EcDispatchCall(EcAdminGetMailboxTableEntryFlags50Rpc* A_0, IAdminRpcServer server, ClientSecurityContext callerSecurityContext, byte[] auxiliaryIn, out byte[] auxiliaryOut)
	{
		byte[] mByteArray = null;
		int num = 0;
		bool flag = false;
		EcAdminGetMailboxTableEntryFlags50Rpc* ptr = A_0 + 72L;
		*(*ptr) = 0L;
		EcAdminGetMailboxTableEntryFlags50Rpc* ptr2 = A_0 + 80L;
		*(*ptr2) = 0;
		EcAdminGetMailboxTableEntryFlags50Rpc* ptr3 = A_0 + 104L;
		*(*ptr3) = 0;
		try
		{
			uint[] propTags = <Module>.UToMUInt32s((uint)(*(A_0 + 96L)), *(A_0 + 88L));
			mByteArray = null;
			uint num2 = 0U;
			Guid mailboxGuid = <Module>.FromGUID(*(A_0 + 64L));
			Guid mdbGuid = <Module>.FromGUID(*(A_0 + 56L));
			num = server.EcAdminGetMailboxTableEntryFlags50(callerSecurityContext, mdbGuid, mailboxGuid, (uint)(*(A_0 + 112L)), propTags, (uint)(*(A_0 + 100L)), out mByteArray, out num2, auxiliaryIn, out auxiliaryOut);
			if (num == null)
			{
				num = <Module>.MToUBytes(mByteArray, *ptr2, *ptr);
				if (0 != num)
				{
					return num;
				}
				*(*ptr3) = (int)num2;
			}
			flag = true;
		}
		finally
		{
			if (!flag)
			{
				*(*(A_0 + 80L)) = 0;
				*(*(A_0 + 104L)) = 0;
				ptr = A_0 + 72L;
				ulong num3 = (ulong)(*(*ptr));
				if (0UL != num3)
				{
					<Module>.MIDL_user_free(num3);
					*(*ptr) = 0L;
				}
			}
		}
		return num;
	}

	// Token: 0x0600008C RID: 140 RVA: 0x0000E10C File Offset: 0x0000D50C
	internal unsafe static int EcAdminGetMailboxTableEntryFlags50_Managed(void* hBinding, _GUID* pguidMdb, _GUID* pguidMailbox, uint ulFlags, byte** ppbResult, uint* pulSize, uint* rgptag, uint cptag, uint cpid, uint* pcrow, uint cbAuxIn, byte* rgbAuxIn, uint* pcbAuxOut, byte** prgbAuxOut)
	{
		IntPtr admin50IntfHandle = AdminRpcServerBase.Admin50IntfHandle;
		EcAdminGetMailboxTableEntryFlags50Rpc ecAdminGetMailboxTableEntryFlags50Rpc;
		*(ref ecAdminGetMailboxTableEntryFlags50Rpc + 40) = admin50IntfHandle;
		*(ref ecAdminGetMailboxTableEntryFlags50Rpc + 48) = hBinding;
		*(ref ecAdminGetMailboxTableEntryFlags50Rpc + 8) = cbAuxIn;
		*(ref ecAdminGetMailboxTableEntryFlags50Rpc + 16) = rgbAuxIn;
		*(ref ecAdminGetMailboxTableEntryFlags50Rpc + 24) = pcbAuxOut;
		*(ref ecAdminGetMailboxTableEntryFlags50Rpc + 32) = prgbAuxOut;
		*(ref ecAdminGetMailboxTableEntryFlags50Rpc + 56) = pguidMdb;
		*(ref ecAdminGetMailboxTableEntryFlags50Rpc + 64) = pguidMailbox;
		*(ref ecAdminGetMailboxTableEntryFlags50Rpc + 72) = ppbResult;
		*(ref ecAdminGetMailboxTableEntryFlags50Rpc + 80) = pulSize;
		*(ref ecAdminGetMailboxTableEntryFlags50Rpc + 88) = rgptag;
		*(ref ecAdminGetMailboxTableEntryFlags50Rpc + 96) = cptag;
		*(ref ecAdminGetMailboxTableEntryFlags50Rpc + 100) = cpid;
		*(ref ecAdminGetMailboxTableEntryFlags50Rpc + 104) = pcrow;
		ecAdminGetMailboxTableEntryFlags50Rpc = ref <Module>.??_7EcAdminGetMailboxTableEntryFlags50Rpc@@6B@ + 8;
		*(ref ecAdminGetMailboxTableEntryFlags50Rpc + 112) = ulFlags;
		return <Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.Execute(ref ecAdminGetMailboxTableEntryFlags50Rpc);
	}

	// Token: 0x0600008D RID: 141 RVA: 0x0000E1A8 File Offset: 0x0000D5A8
	internal unsafe static EcAdminGetFeatureVersion50Rpc* {ctor}(EcAdminGetFeatureVersion50Rpc* A_0, void* hBinding, uint ulVersionedFeature, uint* pulFeatureVersion, uint cbAuxIn, byte* rgbAuxIn, uint* pcbAuxOut, byte** prgbAuxOut)
	{
		IntPtr admin50IntfHandle = AdminRpcServerBase.Admin50IntfHandle;
		*A_0 = ref <Module>.??_7AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 40L) = admin50IntfHandle;
		*(A_0 + 48L) = hBinding;
		*(A_0 + 8L) = cbAuxIn;
		*(A_0 + 16L) = rgbAuxIn;
		*(A_0 + 24L) = pcbAuxOut;
		*(A_0 + 32L) = prgbAuxOut;
		*A_0 = ref <Module>.??_7EcAdminGetFeatureVersion50Rpc@@6B@ + 8;
		*(A_0 + 56L) = ulVersionedFeature;
		*(A_0 + 64L) = pulFeatureVersion;
		return A_0;
	}

	// Token: 0x0600008E RID: 142 RVA: 0x0000B570 File Offset: 0x0000A970
	internal unsafe static int EcValidateParameters(EcAdminGetFeatureVersion50Rpc* A_0)
	{
		int num = 0;
		return (0L == *(A_0 + 64L)) ? -2147024809 : num;
	}

	// Token: 0x0600008F RID: 143 RVA: 0x0000B594 File Offset: 0x0000A994
	internal unsafe static int EcDispatchCall(EcAdminGetFeatureVersion50Rpc* A_0, IAdminRpcServer server, ClientSecurityContext callerSecurityContext, byte[] auxiliaryIn, out byte[] auxiliaryOut)
	{
		uint num;
		int result = server.EcAdminGetFeatureVersion50(callerSecurityContext, (uint)(*(A_0 + 56L)), out num, auxiliaryIn, out auxiliaryOut);
		*(*(A_0 + 64L)) = (int)num;
		return result;
	}

	// Token: 0x06000090 RID: 144 RVA: 0x0000E210 File Offset: 0x0000D610
	internal unsafe static int EcAdminGetFeatureVersion50_Managed(void* hBinding, uint ulVersionedFeature, uint* pulFeatureVersion)
	{
		uint num = 0;
		byte* ptr = null;
		IntPtr admin50IntfHandle = AdminRpcServerBase.Admin50IntfHandle;
		EcAdminGetFeatureVersion50Rpc ecAdminGetFeatureVersion50Rpc;
		*(ref ecAdminGetFeatureVersion50Rpc + 40) = admin50IntfHandle;
		*(ref ecAdminGetFeatureVersion50Rpc + 48) = hBinding;
		*(ref ecAdminGetFeatureVersion50Rpc + 8) = 0;
		*(ref ecAdminGetFeatureVersion50Rpc + 16) = 0L;
		*(ref ecAdminGetFeatureVersion50Rpc + 24) = ref num;
		*(ref ecAdminGetFeatureVersion50Rpc + 32) = ref ptr;
		ecAdminGetFeatureVersion50Rpc = ref <Module>.??_7EcAdminGetFeatureVersion50Rpc@@6B@ + 8;
		*(ref ecAdminGetFeatureVersion50Rpc + 56) = ulVersionedFeature;
		*(ref ecAdminGetFeatureVersion50Rpc + 64) = pulFeatureVersion;
		return <Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.Execute(ref ecAdminGetFeatureVersion50Rpc);
	}

	// Token: 0x06000091 RID: 145 RVA: 0x0000E278 File Offset: 0x0000D678
	internal unsafe static int EcAdminGetFeatureVersionEx50_Managed(void* hBinding, uint ulVersionedFeature, uint* pulFeatureVersion, uint cbAuxIn, byte* rgbAuxIn, uint* pcbAuxOut, byte** prgbAuxOut)
	{
		IntPtr admin50IntfHandle = AdminRpcServerBase.Admin50IntfHandle;
		EcAdminGetFeatureVersion50Rpc ecAdminGetFeatureVersion50Rpc;
		*(ref ecAdminGetFeatureVersion50Rpc + 40) = admin50IntfHandle;
		*(ref ecAdminGetFeatureVersion50Rpc + 48) = hBinding;
		*(ref ecAdminGetFeatureVersion50Rpc + 8) = cbAuxIn;
		*(ref ecAdminGetFeatureVersion50Rpc + 16) = rgbAuxIn;
		*(ref ecAdminGetFeatureVersion50Rpc + 24) = pcbAuxOut;
		*(ref ecAdminGetFeatureVersion50Rpc + 32) = prgbAuxOut;
		ecAdminGetFeatureVersion50Rpc = ref <Module>.??_7EcAdminGetFeatureVersion50Rpc@@6B@ + 8;
		*(ref ecAdminGetFeatureVersion50Rpc + 56) = ulVersionedFeature;
		*(ref ecAdminGetFeatureVersion50Rpc + 64) = pulFeatureVersion;
		return <Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.Execute(ref ecAdminGetFeatureVersion50Rpc);
	}

	// Token: 0x06000092 RID: 146 RVA: 0x0000E2DC File Offset: 0x0000D6DC
	internal unsafe static EcAdminGetMailboxSignatureBasicInfo50Rpc* {ctor}(EcAdminGetMailboxSignatureBasicInfo50Rpc* A_0, void* hBinding, _GUID* pguidMdb, _GUID* pguidMailbox, uint ulFlags, uint* pcbMailboxSignature, byte** ppbMailboxSignature, uint cbAuxIn, byte* rgbAuxIn, uint* pcbAuxOut, byte** prgbAuxOut)
	{
		IntPtr admin50IntfHandle = AdminRpcServerBase.Admin50IntfHandle;
		*A_0 = ref <Module>.??_7AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 40L) = admin50IntfHandle;
		*(A_0 + 48L) = hBinding;
		*(A_0 + 8L) = cbAuxIn;
		*(A_0 + 16L) = rgbAuxIn;
		*(A_0 + 24L) = pcbAuxOut;
		*(A_0 + 32L) = prgbAuxOut;
		*A_0 = ref <Module>.??_7EcAdminGetMailboxSignatureBasicInfo50Rpc@@6B@ + 8;
		*(A_0 + 56L) = pguidMdb;
		*(A_0 + 64L) = pguidMailbox;
		*(A_0 + 72L) = ulFlags;
		*(A_0 + 80L) = pcbMailboxSignature;
		*(A_0 + 88L) = ppbMailboxSignature;
		return A_0;
	}

	// Token: 0x06000093 RID: 147 RVA: 0x0000B5BC File Offset: 0x0000A9BC
	internal unsafe static int EcDispatchCall(EcAdminGetMailboxSignatureBasicInfo50Rpc* A_0, IAdminRpcServer server, ClientSecurityContext callerSecurityContext, byte[] auxiliaryIn, out byte[] auxiliaryOut)
	{
		byte[] mByteArray = null;
		int num = 0;
		bool flag = false;
		EcAdminGetMailboxSignatureBasicInfo50Rpc* ptr = A_0 + 80L;
		*(*ptr) = 0;
		EcAdminGetMailboxSignatureBasicInfo50Rpc* ptr2 = A_0 + 88L;
		*(*ptr2) = 0L;
		try
		{
			mByteArray = null;
			Guid mailboxGuid = <Module>.FromGUID(*(A_0 + 64L));
			Guid mdbGuid = <Module>.FromGUID(*(A_0 + 56L));
			num = server.EcAdminGetMailboxSignature50(callerSecurityContext, mdbGuid, mailboxGuid, (uint)(*(A_0 + 72L)), out mByteArray, auxiliaryIn, out auxiliaryOut);
			if (num == null)
			{
				num = <Module>.MToUBytes(mByteArray, *ptr, *ptr2);
				if (0 != num)
				{
					return num;
				}
			}
			flag = true;
		}
		finally
		{
			if (!flag)
			{
				*(*(A_0 + 80L)) = 0;
				ptr2 = A_0 + 88L;
				ulong num2 = (ulong)(*(*ptr2));
				if (0UL != num2)
				{
					<Module>.MIDL_user_free(num2);
					*(*ptr2) = 0L;
				}
			}
		}
		return num;
	}

	// Token: 0x06000094 RID: 148 RVA: 0x0000B680 File Offset: 0x0000AA80
	internal unsafe static int EcValidateParameters(EcAdminGetMailboxSignatureBasicInfo50Rpc* A_0)
	{
		int result = 0;
		if (*(A_0 + 56L) == 0L || *(A_0 + 64L) == 0L || *(A_0 + 80L) == 0L || *(A_0 + 88L) == 0L)
		{
			result = -2147024809;
		}
		return result;
	}

	// Token: 0x06000095 RID: 149 RVA: 0x0000E35C File Offset: 0x0000D75C
	internal unsafe static int EcAdminGetMailboxSignatureBasicInfo50_Managed(void* hBinding, _GUID* pguidMdb, _GUID* pguidMailbox, uint ulFlags, uint* pcbMailboxSignature, byte** ppbMailboxSignature, uint cbAuxIn, byte* rgbAuxIn, uint* pcbAuxOut, byte** prgbAuxOut)
	{
		IntPtr admin50IntfHandle = AdminRpcServerBase.Admin50IntfHandle;
		EcAdminGetMailboxSignatureBasicInfo50Rpc ecAdminGetMailboxSignatureBasicInfo50Rpc;
		*(ref ecAdminGetMailboxSignatureBasicInfo50Rpc + 40) = admin50IntfHandle;
		*(ref ecAdminGetMailboxSignatureBasicInfo50Rpc + 48) = hBinding;
		*(ref ecAdminGetMailboxSignatureBasicInfo50Rpc + 8) = cbAuxIn;
		*(ref ecAdminGetMailboxSignatureBasicInfo50Rpc + 16) = rgbAuxIn;
		*(ref ecAdminGetMailboxSignatureBasicInfo50Rpc + 24) = pcbAuxOut;
		*(ref ecAdminGetMailboxSignatureBasicInfo50Rpc + 32) = prgbAuxOut;
		ecAdminGetMailboxSignatureBasicInfo50Rpc = ref <Module>.??_7EcAdminGetMailboxSignatureBasicInfo50Rpc@@6B@ + 8;
		*(ref ecAdminGetMailboxSignatureBasicInfo50Rpc + 56) = pguidMdb;
		*(ref ecAdminGetMailboxSignatureBasicInfo50Rpc + 64) = pguidMailbox;
		*(ref ecAdminGetMailboxSignatureBasicInfo50Rpc + 72) = ulFlags;
		*(ref ecAdminGetMailboxSignatureBasicInfo50Rpc + 80) = pcbMailboxSignature;
		*(ref ecAdminGetMailboxSignatureBasicInfo50Rpc + 88) = ppbMailboxSignature;
		return <Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.Execute(ref ecAdminGetMailboxSignatureBasicInfo50Rpc);
	}

	// Token: 0x06000096 RID: 150 RVA: 0x0000E3D8 File Offset: 0x0000D7D8
	internal unsafe static EcAdminGetResourceMonitorDigest50Rpc* {ctor}(EcAdminGetResourceMonitorDigest50Rpc* A_0, void* hBinding, _GUID* pguidMdb, byte** ppbResult, uint* pulSize, uint* rgptag, uint cptag, uint* pcrow, uint cbAuxIn, byte* rgbAuxIn, uint* pcbAuxOut, byte** prgbAuxOut)
	{
		IntPtr admin50IntfHandle = AdminRpcServerBase.Admin50IntfHandle;
		*A_0 = ref <Module>.??_7AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 40L) = admin50IntfHandle;
		*(A_0 + 48L) = hBinding;
		*(A_0 + 8L) = cbAuxIn;
		*(A_0 + 16L) = rgbAuxIn;
		*(A_0 + 24L) = pcbAuxOut;
		*(A_0 + 32L) = prgbAuxOut;
		*A_0 = ref <Module>.??_7EcAdminGetResourceMonitorDigest50Rpc@@6B@ + 8;
		*(A_0 + 56L) = pguidMdb;
		*(A_0 + 64L) = ppbResult;
		*(A_0 + 72L) = pulSize;
		*(A_0 + 80L) = rgptag;
		*(A_0 + 88L) = cptag;
		*(A_0 + 96L) = pcrow;
		return A_0;
	}

	// Token: 0x06000097 RID: 151 RVA: 0x0000B6B8 File Offset: 0x0000AAB8
	internal unsafe static int EcDispatchCall(EcAdminGetResourceMonitorDigest50Rpc* A_0, IAdminRpcServer server, ClientSecurityContext callerSecurityContext, byte[] auxiliaryIn, out byte[] auxiliaryOut)
	{
		byte[] mByteArray = null;
		int num = 0;
		bool flag = false;
		EcAdminGetResourceMonitorDigest50Rpc* ptr = A_0 + 72L;
		*(*ptr) = 0;
		EcAdminGetResourceMonitorDigest50Rpc* ptr2 = A_0 + 64L;
		*(*ptr2) = 0L;
		EcAdminGetResourceMonitorDigest50Rpc* ptr3 = A_0 + 96L;
		*(*ptr3) = 0;
		try
		{
			uint[] propertyTags = <Module>.UToMUInt32s((uint)(*(A_0 + 88L)), *(A_0 + 80L));
			Guid mdbGuid = <Module>.FromGUID(*(A_0 + 56L));
			uint num2;
			num = server.EcAdminGetResourceMonitorDigest50(callerSecurityContext, mdbGuid, propertyTags, out mByteArray, out num2, auxiliaryIn, out auxiliaryOut);
			if (num == null)
			{
				num = <Module>.MToUBytes(mByteArray, *ptr, *ptr2);
				if (0 != num)
				{
					return num;
				}
				*(*ptr3) = (int)num2;
			}
			flag = true;
		}
		finally
		{
			if (!flag)
			{
				*(*(A_0 + 72L)) = 0;
				ptr2 = A_0 + 64L;
				ulong num3 = (ulong)(*(*ptr2));
				if (0UL != num3)
				{
					<Module>.MIDL_user_free(num3);
					*(*ptr2) = 0L;
				}
				*(*(A_0 + 96L)) = 0;
			}
		}
		return num;
	}

	// Token: 0x06000098 RID: 152 RVA: 0x0000B794 File Offset: 0x0000AB94
	internal unsafe static int EcValidateParameters(EcAdminGetResourceMonitorDigest50Rpc* A_0)
	{
		int result = 0;
		if (*(A_0 + 56L) == 0L || *(A_0 + 72L) == 0L || *(A_0 + 64L) == 0L || *(A_0 + 96L) == 0L)
		{
			result = -2147024809;
		}
		return result;
	}

	// Token: 0x06000099 RID: 153 RVA: 0x0000E460 File Offset: 0x0000D860
	internal unsafe static int EcAdminGetResourceMonitorDigest50_Managed(void* hBinding, _GUID* pguidMdb, byte** ppbResult, uint* pulSize, uint* rgptag, uint cptag, uint* pcrow, uint cbAuxIn, byte* rgbAuxIn, uint* pcbAuxOut, byte** prgbAuxOut)
	{
		IntPtr admin50IntfHandle = AdminRpcServerBase.Admin50IntfHandle;
		EcAdminGetResourceMonitorDigest50Rpc ecAdminGetResourceMonitorDigest50Rpc;
		*(ref ecAdminGetResourceMonitorDigest50Rpc + 40) = admin50IntfHandle;
		*(ref ecAdminGetResourceMonitorDigest50Rpc + 48) = hBinding;
		*(ref ecAdminGetResourceMonitorDigest50Rpc + 8) = cbAuxIn;
		*(ref ecAdminGetResourceMonitorDigest50Rpc + 16) = rgbAuxIn;
		*(ref ecAdminGetResourceMonitorDigest50Rpc + 24) = pcbAuxOut;
		*(ref ecAdminGetResourceMonitorDigest50Rpc + 32) = prgbAuxOut;
		ecAdminGetResourceMonitorDigest50Rpc = ref <Module>.??_7EcAdminGetResourceMonitorDigest50Rpc@@6B@ + 8;
		*(ref ecAdminGetResourceMonitorDigest50Rpc + 56) = pguidMdb;
		*(ref ecAdminGetResourceMonitorDigest50Rpc + 64) = ppbResult;
		*(ref ecAdminGetResourceMonitorDigest50Rpc + 72) = pulSize;
		*(ref ecAdminGetResourceMonitorDigest50Rpc + 80) = rgptag;
		*(ref ecAdminGetResourceMonitorDigest50Rpc + 88) = cptag;
		*(ref ecAdminGetResourceMonitorDigest50Rpc + 96) = pcrow;
		return <Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.Execute(ref ecAdminGetResourceMonitorDigest50Rpc);
	}

	// Token: 0x0600009A RID: 154 RVA: 0x0000E4E4 File Offset: 0x0000D8E4
	internal unsafe static EcGetDatabaseSizeEx50Rpc* {ctor}(EcGetDatabaseSizeEx50Rpc* A_0, void* hBinding, _GUID* pguidMdb, uint* pulDbTotalPages, uint* pulDbAvailablePages, uint* pulPageSize, uint cbAuxIn, byte* rgbAuxIn, uint* pcbAuxOut, byte** prgbAuxOut)
	{
		IntPtr admin50IntfHandle = AdminRpcServerBase.Admin50IntfHandle;
		*A_0 = ref <Module>.??_7AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 40L) = admin50IntfHandle;
		*(A_0 + 48L) = hBinding;
		*(A_0 + 8L) = cbAuxIn;
		*(A_0 + 16L) = rgbAuxIn;
		*(A_0 + 24L) = pcbAuxOut;
		*(A_0 + 32L) = prgbAuxOut;
		*A_0 = ref <Module>.??_7EcGetDatabaseSizeEx50Rpc@@6B@ + 8;
		*(A_0 + 56L) = pguidMdb;
		*(A_0 + 64L) = pulDbTotalPages;
		*(A_0 + 72L) = pulDbAvailablePages;
		*(A_0 + 80L) = pulPageSize;
		return A_0;
	}

	// Token: 0x0600009B RID: 155 RVA: 0x0000B7CC File Offset: 0x0000ABCC
	internal unsafe static int EcValidateParameters(EcGetDatabaseSizeEx50Rpc* A_0)
	{
		int result = 0;
		if (*(A_0 + 56L) == 0L || *(A_0 + 64L) == 0L || *(A_0 + 72L) == 0L || *(A_0 + 80L) == 0L)
		{
			result = -2147024809;
		}
		return result;
	}

	// Token: 0x0600009C RID: 156 RVA: 0x0000B804 File Offset: 0x0000AC04
	internal unsafe static int EcDispatchCall(EcGetDatabaseSizeEx50Rpc* A_0, IAdminRpcServer server, ClientSecurityContext callerSecurityContext, byte[] auxiliaryIn, out byte[] auxiliaryOut)
	{
		*(*(A_0 + 64L)) = 0;
		*(*(A_0 + 72L)) = 0;
		*(*(A_0 + 80L)) = 0;
		uint num = 0U;
		uint num2 = 0U;
		uint num3 = 0U;
		Guid mdbGuid = <Module>.FromGUID(*(A_0 + 56L));
		int num4 = server.EcGetDatabaseSizeEx50(callerSecurityContext, mdbGuid, out num, out num2, out num3, auxiliaryIn, out auxiliaryOut);
		if (num4 == null)
		{
			*(*(A_0 + 64L)) = (int)num;
			*(*(A_0 + 72L)) = (int)num2;
			*(*(A_0 + 80L)) = (int)num3;
		}
		return num4;
	}

	// Token: 0x0600009D RID: 157 RVA: 0x0000E55C File Offset: 0x0000D95C
	internal unsafe static int EcGetDatabaseSizeEx50_Managed(void* hBinding, _GUID* pguidMdb, uint* pulDbTotalPages, uint* pulDbAvailablePages, uint* pulPageSize, uint cbAuxIn, byte* rgbAuxIn, uint* pcbAuxOut, byte** prgbAuxOut)
	{
		IntPtr admin50IntfHandle = AdminRpcServerBase.Admin50IntfHandle;
		EcGetDatabaseSizeEx50Rpc ecGetDatabaseSizeEx50Rpc;
		*(ref ecGetDatabaseSizeEx50Rpc + 40) = admin50IntfHandle;
		*(ref ecGetDatabaseSizeEx50Rpc + 48) = hBinding;
		*(ref ecGetDatabaseSizeEx50Rpc + 8) = cbAuxIn;
		*(ref ecGetDatabaseSizeEx50Rpc + 16) = rgbAuxIn;
		*(ref ecGetDatabaseSizeEx50Rpc + 24) = pcbAuxOut;
		*(ref ecGetDatabaseSizeEx50Rpc + 32) = prgbAuxOut;
		ecGetDatabaseSizeEx50Rpc = ref <Module>.??_7EcGetDatabaseSizeEx50Rpc@@6B@ + 8;
		*(ref ecGetDatabaseSizeEx50Rpc + 56) = pguidMdb;
		*(ref ecGetDatabaseSizeEx50Rpc + 64) = pulDbTotalPages;
		*(ref ecGetDatabaseSizeEx50Rpc + 72) = pulDbAvailablePages;
		*(ref ecGetDatabaseSizeEx50Rpc + 80) = pulPageSize;
		return <Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.Execute(ref ecGetDatabaseSizeEx50Rpc);
	}

	// Token: 0x0600009E RID: 158 RVA: 0x0000E5D0 File Offset: 0x0000D9D0
	internal unsafe static EcAdminISIntegCheck50Rpc* {ctor}(EcAdminISIntegCheck50Rpc* A_0, void* hBinding, _GUID* pguidMdb, _GUID* pguidMailbox, uint ulFlags, uint cTaskIds, uint* rgulTaskIds, byte** szRequestId, uint cbAuxIn, byte* rgbAuxIn, uint* pcbAuxOut, byte** prgbAuxOut)
	{
		IntPtr admin50IntfHandle = AdminRpcServerBase.Admin50IntfHandle;
		*A_0 = ref <Module>.??_7AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 40L) = admin50IntfHandle;
		*(A_0 + 48L) = hBinding;
		*(A_0 + 8L) = cbAuxIn;
		*(A_0 + 16L) = rgbAuxIn;
		*(A_0 + 24L) = pcbAuxOut;
		*(A_0 + 32L) = prgbAuxOut;
		*A_0 = ref <Module>.??_7EcAdminISIntegCheck50Rpc@@6B@ + 8;
		*(A_0 + 56L) = pguidMdb;
		*(A_0 + 64L) = pguidMailbox;
		*(A_0 + 72L) = ulFlags;
		*(A_0 + 76L) = cTaskIds;
		*(A_0 + 80L) = rgulTaskIds;
		*(A_0 + 88L) = szRequestId;
		return A_0;
	}

	// Token: 0x0600009F RID: 159 RVA: 0x0000B86C File Offset: 0x0000AC6C
	internal unsafe static int EcDispatchCall(EcAdminISIntegCheck50Rpc* A_0, IAdminRpcServer server, ClientSecurityContext callerSecurityContext, byte[] auxiliaryIn, out byte[] auxiliaryOut)
	{
		string @string = null;
		Guid mdbGuid = <Module>.FromGUID(*(A_0 + 56L));
		ulong num = (ulong)(*(A_0 + 64L));
		Guid mailboxGuid;
		if (0UL == num)
		{
			mailboxGuid = Guid.Empty;
		}
		else
		{
			mailboxGuid = <Module>.FromGUID(num);
		}
		uint[] taskIds = <Module>.UToMUInt32s((uint)(*(A_0 + 76L)), *(A_0 + 80L));
		int num2 = server.EcAdminISIntegCheck50(callerSecurityContext, mdbGuid, mailboxGuid, (uint)(*(A_0 + 72L)), taskIds, out @string, auxiliaryIn, out auxiliaryOut);
		if (0 == num2 && 0L != *(A_0 + 88L))
		{
			*(*(A_0 + 88L)) = <Module>.StringToUnmanagedMultiByte(@string, 0U);
		}
		return num2;
	}

	// Token: 0x060000A0 RID: 160 RVA: 0x0000B8EC File Offset: 0x0000ACEC
	internal unsafe static int EcValidateParameters(EcAdminISIntegCheck50Rpc* A_0)
	{
		int result = 0;
		if (*(A_0 + 56L) == 0L || *(A_0 + 76L) == 0 || *(A_0 + 80L) == 0L)
		{
			result = -2147024809;
		}
		return result;
	}

	// Token: 0x060000A1 RID: 161 RVA: 0x0000E658 File Offset: 0x0000DA58
	internal unsafe static int EcAdminISIntegCheck50_Managed(void* hBinding, _GUID* pguidMdb, _GUID* pguidMailbox, uint ulFlags, uint cTaskIds, uint* rgulTaskIds, byte** szRequestId, uint cbAuxIn, byte* rgbAuxIn, uint* pcbAuxOut, byte** prgbAuxOut)
	{
		IntPtr admin50IntfHandle = AdminRpcServerBase.Admin50IntfHandle;
		EcAdminISIntegCheck50Rpc ecAdminISIntegCheck50Rpc;
		*(ref ecAdminISIntegCheck50Rpc + 40) = admin50IntfHandle;
		*(ref ecAdminISIntegCheck50Rpc + 48) = hBinding;
		*(ref ecAdminISIntegCheck50Rpc + 8) = cbAuxIn;
		*(ref ecAdminISIntegCheck50Rpc + 16) = rgbAuxIn;
		*(ref ecAdminISIntegCheck50Rpc + 24) = pcbAuxOut;
		*(ref ecAdminISIntegCheck50Rpc + 32) = prgbAuxOut;
		ecAdminISIntegCheck50Rpc = ref <Module>.??_7EcAdminISIntegCheck50Rpc@@6B@ + 8;
		*(ref ecAdminISIntegCheck50Rpc + 56) = pguidMdb;
		*(ref ecAdminISIntegCheck50Rpc + 64) = pguidMailbox;
		*(ref ecAdminISIntegCheck50Rpc + 72) = ulFlags;
		*(ref ecAdminISIntegCheck50Rpc + 76) = cTaskIds;
		*(ref ecAdminISIntegCheck50Rpc + 80) = rgulTaskIds;
		*(ref ecAdminISIntegCheck50Rpc + 88) = szRequestId;
		return <Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.Execute(ref ecAdminISIntegCheck50Rpc);
	}

	// Token: 0x060000A2 RID: 162 RVA: 0x0000E6DC File Offset: 0x0000DADC
	internal unsafe static EcAdminGetViewsTableEx50Rpc* {ctor}(EcAdminGetViewsTableEx50Rpc* A_0, void* hBinding, _GUID* pguidMdb, _GUID* pguidMailbox, byte** ppbResult, uint* pulSize, _ltid folderLTID, uint* rgptag, uint cptag, uint* pcrow, uint cbAuxIn, byte* rgbAuxIn, uint* pcbAuxOut, byte** prgbAuxOut)
	{
		IntPtr admin50IntfHandle = AdminRpcServerBase.Admin50IntfHandle;
		*A_0 = ref <Module>.??_7AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 40L) = admin50IntfHandle;
		*(A_0 + 48L) = hBinding;
		*(A_0 + 8L) = cbAuxIn;
		*(A_0 + 16L) = rgbAuxIn;
		*(A_0 + 24L) = pcbAuxOut;
		*(A_0 + 32L) = prgbAuxOut;
		*A_0 = ref <Module>.??_7EcAdminGetViewsTableEx50Rpc@@6B@ + 8;
		*(A_0 + 56L) = pguidMdb;
		*(A_0 + 64L) = pguidMailbox;
		*(A_0 + 72L) = ppbResult;
		*(A_0 + 80L) = pulSize;
		cpblk(A_0 + 88L, ref folderLTID, 24);
		*(A_0 + 112L) = rgptag;
		*(A_0 + 120L) = cptag;
		*(A_0 + 128L) = pcrow;
		return A_0;
	}

	// Token: 0x060000A3 RID: 163 RVA: 0x0000B91C File Offset: 0x0000AD1C
	internal unsafe static int EcValidateParameters(EcAdminGetViewsTableEx50Rpc* A_0)
	{
		int result = 0;
		if (*(A_0 + 56L) == 0L || *(A_0 + 64L) == 0L || *(A_0 + 72L) == 0L || *(A_0 + 80L) == 0L || *(A_0 + 112L) == 0L || *(A_0 + 128L) == 0L)
		{
			result = -2147024809;
		}
		return result;
	}

	// Token: 0x060000A4 RID: 164 RVA: 0x0000B968 File Offset: 0x0000AD68
	internal unsafe static int EcDispatchCall(EcAdminGetViewsTableEx50Rpc* A_0, IAdminRpcServer server, ClientSecurityContext callerSecurityContext, byte[] auxiliaryIn, out byte[] auxiliaryOut)
	{
		byte[] mByteArray = null;
		int num = 0;
		bool flag = false;
		EcAdminGetViewsTableEx50Rpc* ptr = A_0 + 72L;
		*(*ptr) = 0L;
		EcAdminGetViewsTableEx50Rpc* ptr2 = A_0 + 80L;
		*(*ptr2) = 0;
		EcAdminGetViewsTableEx50Rpc* ptr3 = A_0 + 128L;
		*(*ptr3) = 0;
		try
		{
			uint[] propTags = <Module>.UToMUInt32s((uint)(*(A_0 + 120L)), *(A_0 + 112L));
			LTID folderLTID = default(LTID);
			Guid guid = <Module>.FromGUID(A_0 + 88L);
			folderLTID.guid = guid;
			folderLTID.globCount = ((((((ulong)(*(A_0 + 104L)) << 8 | (ulong)(*(A_0 + 105L))) << 8 | (ulong)(*(A_0 + 106L))) << 8 | (ulong)(*(A_0 + 107L))) << 8 | (ulong)(*(A_0 + 108L))) << 8 | (ulong)(*(A_0 + 109L)));
			mByteArray = null;
			uint num2 = 0U;
			Guid mailboxGuid = <Module>.FromGUID(*(A_0 + 64L));
			Guid mdbGuid = <Module>.FromGUID(*(A_0 + 56L));
			num = server.EcAdminGetViewsTableEx50(callerSecurityContext, mdbGuid, mailboxGuid, folderLTID, propTags, out mByteArray, out num2, auxiliaryIn, out auxiliaryOut);
			if (num == null)
			{
				num = <Module>.MToUBytes(mByteArray, *ptr2, *ptr);
				if (0 != num)
				{
					return num;
				}
				*(*ptr3) = (int)num2;
			}
			flag = true;
		}
		finally
		{
			if (!flag)
			{
				*(*(A_0 + 80L)) = 0;
				*(*(A_0 + 128L)) = 0;
				ptr = A_0 + 72L;
				ulong num3 = (ulong)(*(*ptr));
				if (0UL != num3)
				{
					<Module>.MIDL_user_free(num3);
					*(*ptr) = 0L;
				}
			}
		}
		return num;
	}

	// Token: 0x060000A5 RID: 165 RVA: 0x0000E77C File Offset: 0x0000DB7C
	internal unsafe static int EcAdminGetViewsTableEx50_Managed(void* hBinding, _GUID* pguidMdb, _GUID* pguidMailbox, int lParam, _ltid folderLTID, byte** ppbResult, uint* pulSize, uint* rgptag, uint cptag, uint* pcrow, uint cbAuxIn, byte* rgbAuxIn, uint* pcbAuxOut, byte** prgbAuxOut)
	{
		IntPtr admin50IntfHandle = AdminRpcServerBase.Admin50IntfHandle;
		EcAdminGetViewsTableEx50Rpc ecAdminGetViewsTableEx50Rpc;
		*(ref ecAdminGetViewsTableEx50Rpc + 40) = admin50IntfHandle;
		*(ref ecAdminGetViewsTableEx50Rpc + 48) = hBinding;
		*(ref ecAdminGetViewsTableEx50Rpc + 8) = cbAuxIn;
		*(ref ecAdminGetViewsTableEx50Rpc + 16) = rgbAuxIn;
		*(ref ecAdminGetViewsTableEx50Rpc + 24) = pcbAuxOut;
		*(ref ecAdminGetViewsTableEx50Rpc + 32) = prgbAuxOut;
		ecAdminGetViewsTableEx50Rpc = ref <Module>.??_7EcAdminGetViewsTableEx50Rpc@@6B@ + 8;
		*(ref ecAdminGetViewsTableEx50Rpc + 56) = pguidMdb;
		*(ref ecAdminGetViewsTableEx50Rpc + 64) = pguidMailbox;
		*(ref ecAdminGetViewsTableEx50Rpc + 72) = ppbResult;
		*(ref ecAdminGetViewsTableEx50Rpc + 80) = pulSize;
		cpblk(ref ecAdminGetViewsTableEx50Rpc + 88, ref folderLTID, 24);
		*(ref ecAdminGetViewsTableEx50Rpc + 112) = rgptag;
		*(ref ecAdminGetViewsTableEx50Rpc + 120) = cptag;
		*(ref ecAdminGetViewsTableEx50Rpc + 128) = pcrow;
		return <Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.Execute(ref ecAdminGetViewsTableEx50Rpc);
	}

	// Token: 0x060000A6 RID: 166 RVA: 0x0000E818 File Offset: 0x0000DC18
	internal unsafe static EcAdminGetRestrictionTableEx50Rpc* {ctor}(EcAdminGetRestrictionTableEx50Rpc* A_0, void* hBinding, _GUID* pguidMdb, _GUID* pguidMailbox, byte** ppbResult, uint* pulSize, _ltid folderLTID, uint* rgptag, uint cptag, uint* pcrow, uint cbAuxIn, byte* rgbAuxIn, uint* pcbAuxOut, byte** prgbAuxOut)
	{
		IntPtr admin50IntfHandle = AdminRpcServerBase.Admin50IntfHandle;
		*A_0 = ref <Module>.??_7AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 40L) = admin50IntfHandle;
		*(A_0 + 48L) = hBinding;
		*(A_0 + 8L) = cbAuxIn;
		*(A_0 + 16L) = rgbAuxIn;
		*(A_0 + 24L) = pcbAuxOut;
		*(A_0 + 32L) = prgbAuxOut;
		*A_0 = ref <Module>.??_7EcAdminGetRestrictionTableEx50Rpc@@6B@ + 8;
		*(A_0 + 56L) = pguidMdb;
		*(A_0 + 64L) = pguidMailbox;
		*(A_0 + 72L) = ppbResult;
		*(A_0 + 80L) = pulSize;
		cpblk(A_0 + 88L, ref folderLTID, 24);
		*(A_0 + 112L) = rgptag;
		*(A_0 + 120L) = cptag;
		*(A_0 + 128L) = pcrow;
		return A_0;
	}

	// Token: 0x060000A7 RID: 167 RVA: 0x0000BAC0 File Offset: 0x0000AEC0
	internal unsafe static int EcValidateParameters(EcAdminGetRestrictionTableEx50Rpc* A_0)
	{
		int result = 0;
		if (*(A_0 + 56L) == 0L || *(A_0 + 64L) == 0L || *(A_0 + 72L) == 0L || *(A_0 + 80L) == 0L || *(A_0 + 112L) == 0L || *(A_0 + 128L) == 0L)
		{
			result = -2147024809;
		}
		return result;
	}

	// Token: 0x060000A8 RID: 168 RVA: 0x0000BB0C File Offset: 0x0000AF0C
	internal unsafe static int EcDispatchCall(EcAdminGetRestrictionTableEx50Rpc* A_0, IAdminRpcServer server, ClientSecurityContext callerSecurityContext, byte[] auxiliaryIn, out byte[] auxiliaryOut)
	{
		byte[] mByteArray = null;
		int num = 0;
		bool flag = false;
		EcAdminGetRestrictionTableEx50Rpc* ptr = A_0 + 72L;
		*(*ptr) = 0L;
		EcAdminGetRestrictionTableEx50Rpc* ptr2 = A_0 + 80L;
		*(*ptr2) = 0;
		EcAdminGetRestrictionTableEx50Rpc* ptr3 = A_0 + 128L;
		*(*ptr3) = 0;
		try
		{
			uint[] propTags = <Module>.UToMUInt32s((uint)(*(A_0 + 120L)), *(A_0 + 112L));
			LTID folderLTID = default(LTID);
			Guid guid = <Module>.FromGUID(A_0 + 88L);
			folderLTID.guid = guid;
			folderLTID.globCount = ((((((ulong)(*(A_0 + 104L)) << 8 | (ulong)(*(A_0 + 105L))) << 8 | (ulong)(*(A_0 + 106L))) << 8 | (ulong)(*(A_0 + 107L))) << 8 | (ulong)(*(A_0 + 108L))) << 8 | (ulong)(*(A_0 + 109L)));
			mByteArray = null;
			uint num2 = 0U;
			Guid mailboxGuid = <Module>.FromGUID(*(A_0 + 64L));
			Guid mdbGuid = <Module>.FromGUID(*(A_0 + 56L));
			num = server.EcAdminGetRestrictionTableEx50(callerSecurityContext, mdbGuid, mailboxGuid, folderLTID, propTags, out mByteArray, out num2, auxiliaryIn, out auxiliaryOut);
			if (num == null)
			{
				num = <Module>.MToUBytes(mByteArray, *ptr2, *ptr);
				if (0 != num)
				{
					return num;
				}
				*(*ptr3) = (int)num2;
			}
			flag = true;
		}
		finally
		{
			if (!flag)
			{
				*(*(A_0 + 80L)) = 0;
				*(*(A_0 + 128L)) = 0;
				ptr = A_0 + 72L;
				ulong num3 = (ulong)(*(*ptr));
				if (0UL != num3)
				{
					<Module>.MIDL_user_free(num3);
					*(*ptr) = 0L;
				}
			}
		}
		return num;
	}

	// Token: 0x060000A9 RID: 169 RVA: 0x0000E8B8 File Offset: 0x0000DCB8
	internal unsafe static int EcAdminGetRestrictionTableEx50_Managed(void* hBinding, _GUID* pguidMdb, _GUID* pguidMailbox, int lParam, _ltid folderLTID, byte** ppbResult, uint* pulSize, uint* rgptag, uint cptag, uint* pcrow, uint cbAuxIn, byte* rgbAuxIn, uint* pcbAuxOut, byte** prgbAuxOut)
	{
		IntPtr admin50IntfHandle = AdminRpcServerBase.Admin50IntfHandle;
		EcAdminGetRestrictionTableEx50Rpc ecAdminGetRestrictionTableEx50Rpc;
		*(ref ecAdminGetRestrictionTableEx50Rpc + 40) = admin50IntfHandle;
		*(ref ecAdminGetRestrictionTableEx50Rpc + 48) = hBinding;
		*(ref ecAdminGetRestrictionTableEx50Rpc + 8) = cbAuxIn;
		*(ref ecAdminGetRestrictionTableEx50Rpc + 16) = rgbAuxIn;
		*(ref ecAdminGetRestrictionTableEx50Rpc + 24) = pcbAuxOut;
		*(ref ecAdminGetRestrictionTableEx50Rpc + 32) = prgbAuxOut;
		ecAdminGetRestrictionTableEx50Rpc = ref <Module>.??_7EcAdminGetRestrictionTableEx50Rpc@@6B@ + 8;
		*(ref ecAdminGetRestrictionTableEx50Rpc + 56) = pguidMdb;
		*(ref ecAdminGetRestrictionTableEx50Rpc + 64) = pguidMailbox;
		*(ref ecAdminGetRestrictionTableEx50Rpc + 72) = ppbResult;
		*(ref ecAdminGetRestrictionTableEx50Rpc + 80) = pulSize;
		cpblk(ref ecAdminGetRestrictionTableEx50Rpc + 88, ref folderLTID, 24);
		*(ref ecAdminGetRestrictionTableEx50Rpc + 112) = rgptag;
		*(ref ecAdminGetRestrictionTableEx50Rpc + 120) = cptag;
		*(ref ecAdminGetRestrictionTableEx50Rpc + 128) = pcrow;
		return <Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.Execute(ref ecAdminGetRestrictionTableEx50Rpc);
	}

	// Token: 0x060000AA RID: 170 RVA: 0x0000E954 File Offset: 0x0000DD54
	internal unsafe static EcAdminExecuteTask50Rpc* {ctor}(EcAdminExecuteTask50Rpc* A_0, void* hBinding, _GUID* pguidMdb, _GUID* pguidTaskClass, int lTaskId, uint cbAuxIn, byte* rgbAuxIn, uint* pcbAuxOut, byte** prgbAuxOut)
	{
		IntPtr admin50IntfHandle = AdminRpcServerBase.Admin50IntfHandle;
		*A_0 = ref <Module>.??_7AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 40L) = admin50IntfHandle;
		*(A_0 + 48L) = hBinding;
		*(A_0 + 8L) = cbAuxIn;
		*(A_0 + 16L) = rgbAuxIn;
		*(A_0 + 24L) = pcbAuxOut;
		*(A_0 + 32L) = prgbAuxOut;
		*A_0 = ref <Module>.??_7EcAdminExecuteTask50Rpc@@6B@ + 8;
		*(A_0 + 56L) = pguidMdb;
		*(A_0 + 64L) = pguidTaskClass;
		*(A_0 + 72L) = lTaskId;
		return A_0;
	}

	// Token: 0x060000AB RID: 171 RVA: 0x0000BC64 File Offset: 0x0000B064
	internal unsafe static int EcValidateParameters(EcAdminExecuteTask50Rpc* A_0)
	{
		int result = 0;
		if (*(A_0 + 56L) == 0L || *(A_0 + 64L) == 0L)
		{
			result = -2147024809;
		}
		return result;
	}

	// Token: 0x060000AC RID: 172 RVA: 0x0000BC8C File Offset: 0x0000B08C
	internal unsafe static int EcDispatchCall(EcAdminExecuteTask50Rpc* A_0, IAdminRpcServer server, ClientSecurityContext callerSecurityContext, byte[] auxiliaryIn, out byte[] auxiliaryOut)
	{
		int result = 0;
		try
		{
			Guid taskClass = <Module>.FromGUID(*(A_0 + 64L));
			Guid mdbGuid = <Module>.FromGUID(*(A_0 + 56L));
			result = server.EcAdminExecuteTask50(callerSecurityContext, mdbGuid, taskClass, *(A_0 + 72L), auxiliaryIn, out auxiliaryOut);
		}
		finally
		{
		}
		return result;
	}

	// Token: 0x060000AD RID: 173 RVA: 0x0000E9C4 File Offset: 0x0000DDC4
	internal unsafe static int EcAdminExecuteTask50_Managed(void* hBinding, _GUID* pguidMdb, _GUID* pguidTaskClass, int lTaskId, int lParam, uint cbAuxIn, byte* rgbAuxIn, uint* pcbAuxOut, byte** prgbAuxOut)
	{
		IntPtr admin50IntfHandle = AdminRpcServerBase.Admin50IntfHandle;
		EcAdminExecuteTask50Rpc ecAdminExecuteTask50Rpc;
		*(ref ecAdminExecuteTask50Rpc + 40) = admin50IntfHandle;
		*(ref ecAdminExecuteTask50Rpc + 48) = hBinding;
		*(ref ecAdminExecuteTask50Rpc + 8) = cbAuxIn;
		*(ref ecAdminExecuteTask50Rpc + 16) = rgbAuxIn;
		*(ref ecAdminExecuteTask50Rpc + 24) = pcbAuxOut;
		*(ref ecAdminExecuteTask50Rpc + 32) = prgbAuxOut;
		ecAdminExecuteTask50Rpc = ref <Module>.??_7EcAdminExecuteTask50Rpc@@6B@ + 8;
		*(ref ecAdminExecuteTask50Rpc + 56) = pguidMdb;
		*(ref ecAdminExecuteTask50Rpc + 64) = pguidTaskClass;
		*(ref ecAdminExecuteTask50Rpc + 72) = lTaskId;
		return <Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.Execute(ref ecAdminExecuteTask50Rpc);
	}

	// Token: 0x060000AE RID: 174 RVA: 0x0000BCE8 File Offset: 0x0000B0E8
	internal unsafe static void EcListAllMdbStatus50_Managed(_RPC_ASYNC_STATE* pAsyncState, void* hBinding, int fBasicInformation, uint* pcMdbs, uint* pCbOut, byte** ppMdbStatus, uint cbAuxIn, byte* rgbAuxIn, uint* pcbAuxOut, byte** prgbAuxOut)
	{
		EcListAllMdbStatusRpc ecListAllMdbStatusRpc;
		<Module>.EcListAllMdbStatusRpc.{ctor}(ref ecListAllMdbStatusRpc, AdminRpcServerBase.Admin50IntfHandle, hBinding, fBasicInformation, pcMdbs, pCbOut, ppMdbStatus, cbAuxIn, rgbAuxIn, pcbAuxOut, prgbAuxOut);
		int num = <Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.Execute(ref ecListAllMdbStatusRpc);
		<Module>.RpcAsyncCompleteCall(pAsyncState, (void*)(&num));
	}

	// Token: 0x060000AF RID: 175 RVA: 0x0000BD24 File Offset: 0x0000B124
	internal unsafe static int EcListMdbStatus50_Managed(void* hBinding, uint ulMdbs, _GUID* rgguidMdb, uint* rgulMdbStatus, uint cbAuxIn, byte* rgbAuxIn, uint* pcbAuxOut, byte** prgbAuxOut)
	{
		EcListMdbStatusRpc ecListMdbStatusRpc;
		<Module>.EcListMdbStatusRpc.{ctor}(ref ecListMdbStatusRpc, AdminRpcServerBase.Admin50IntfHandle, hBinding, ulMdbs, rgguidMdb, rgulMdbStatus, cbAuxIn, rgbAuxIn, pcbAuxOut, prgbAuxOut);
		return <Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.Execute(ref ecListMdbStatusRpc);
	}

	// Token: 0x060000B0 RID: 176 RVA: 0x0000BD54 File Offset: 0x0000B154
	internal unsafe static int EcAdminGetCnctTable50_Managed(void* hBinding, _GUID* pguidMdb, int lParam, byte** ppbResult, uint* pulSize, uint* rgptag, uint cptag, uint cpid, uint* pcrow, uint cbAuxIn, byte* rgbAuxIn, uint* pcbAuxOut, byte** prgbAuxOut)
	{
		EcAdminGetCnctTableRpc ecAdminGetCnctTableRpc;
		<Module>.EcAdminGetCnctTableRpc.{ctor}(ref ecAdminGetCnctTableRpc, AdminRpcServerBase.Admin50IntfHandle, hBinding, pguidMdb, lParam, ppbResult, pulSize, rgptag, cptag, cpid, pcrow, cbAuxIn, rgbAuxIn, pcbAuxOut, prgbAuxOut);
		return <Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.Execute(ref ecAdminGetCnctTableRpc);
	}

	// Token: 0x060000B1 RID: 177 RVA: 0x0000BD8C File Offset: 0x0000B18C
	internal unsafe static int EcGetLastBackupTimesEx50_Managed(void* hBinding, _GUID* pguidMdb, _FILETIME* pLastCompleteBackupTime, _FILETIME* pLastIncrementalBackupTime, uint cbAuxIn, byte* rgbAuxIn, uint* pcbAuxOut, byte** prgbAuxOut)
	{
		EcGetLastBackupTimesRpc ecGetLastBackupTimesRpc;
		<Module>.EcGetLastBackupTimesRpc.{ctor}(ref ecGetLastBackupTimesRpc, AdminRpcServerBase.Admin50IntfHandle, hBinding, pguidMdb, pLastCompleteBackupTime, pLastIncrementalBackupTime, cbAuxIn, rgbAuxIn, pcbAuxOut, prgbAuxOut);
		return <Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.Execute(ref ecGetLastBackupTimesRpc);
	}

	// Token: 0x060000B2 RID: 178 RVA: 0x0000BDBC File Offset: 0x0000B1BC
	internal unsafe static int EcClearAbsentInDsFlagOnMailbox50_Managed(void* hBinding, _GUID* pguidMdb, _GUID* pguidMailbox, uint cbAuxIn, byte* rgbAuxIn, uint* pcbAuxOut, byte** prgbAuxOut)
	{
		EcClearAbsentInDsFlagOnMailboxRpc ecClearAbsentInDsFlagOnMailboxRpc;
		<Module>.EcClearAbsentInDsFlagOnMailboxRpc.{ctor}(ref ecClearAbsentInDsFlagOnMailboxRpc, AdminRpcServerBase.Admin50IntfHandle, hBinding, pguidMdb, pguidMailbox, cbAuxIn, rgbAuxIn, pcbAuxOut, prgbAuxOut);
		return <Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.Execute(ref ecClearAbsentInDsFlagOnMailboxRpc);
	}

	// Token: 0x060000B3 RID: 179 RVA: 0x0000BDE8 File Offset: 0x0000B1E8
	internal unsafe static int EcPurgeCachedMailboxObject50_Managed(void* hBinding, _GUID* pguidMailbox, uint cbAuxIn, byte* rgbAuxIn, uint* pcbAuxOut, byte** prgbAuxOut)
	{
		EcPurgeCachedMailboxObjectRpc ecPurgeCachedMailboxObjectRpc;
		<Module>.EcPurgeCachedMailboxObjectRpc.{ctor}(ref ecPurgeCachedMailboxObjectRpc, AdminRpcServerBase.Admin50IntfHandle, hBinding, pguidMailbox, cbAuxIn, rgbAuxIn, pcbAuxOut, prgbAuxOut);
		return <Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.Execute(ref ecPurgeCachedMailboxObjectRpc);
	}

	// Token: 0x060000B4 RID: 180 RVA: 0x0000BE14 File Offset: 0x0000B214
	internal unsafe static int EcSyncMailboxesWithDS50_Managed(void* hBinding, _GUID* pguidMdb, uint cbAuxIn, byte* rgbAuxIn, uint* pcbAuxOut, byte** prgbAuxOut)
	{
		EcSyncMailboxesWithDSRpc ecSyncMailboxesWithDSRpc;
		<Module>.EcSyncMailboxesWithDSRpc.{ctor}(ref ecSyncMailboxesWithDSRpc, AdminRpcServerBase.Admin50IntfHandle, hBinding, pguidMdb, cbAuxIn, rgbAuxIn, pcbAuxOut, prgbAuxOut);
		return <Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.Execute(ref ecSyncMailboxesWithDSRpc);
	}

	// Token: 0x060000B5 RID: 181 RVA: 0x0000BE40 File Offset: 0x0000B240
	internal unsafe static int EcAdminDeletePrivateMailbox50_Managed(void* hBinding, _GUID* pguidMdb, _GUID* pguidMailbox, uint ulFlags, uint cbAuxIn, byte* rgbAuxIn, uint* pcbAuxOut, byte** prgbAuxOut)
	{
		EcAdminDeletePrivateMailboxRpc ecAdminDeletePrivateMailboxRpc;
		<Module>.EcAdminDeletePrivateMailboxRpc.{ctor}(ref ecAdminDeletePrivateMailboxRpc, AdminRpcServerBase.Admin50IntfHandle, hBinding, pguidMdb, pguidMailbox, ulFlags, cbAuxIn, rgbAuxIn, pcbAuxOut, prgbAuxOut);
		return <Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.Execute(ref ecAdminDeletePrivateMailboxRpc);
	}

	// Token: 0x060000B6 RID: 182 RVA: 0x0000BE70 File Offset: 0x0000B270
	internal unsafe static int EcSetMailboxSecurityDescriptor50_Managed(void* hBinding, _GUID* pguidMdb, _GUID* pguidMailbox, byte* pntsd, uint cbSD, uint cbAuxIn, byte* rgbAuxIn, uint* pcbAuxOut, byte** prgbAuxOut)
	{
		EcSetMailboxSecurityDescriptorRpc ecSetMailboxSecurityDescriptorRpc;
		<Module>.EcSetMailboxSecurityDescriptorRpc.{ctor}(ref ecSetMailboxSecurityDescriptorRpc, AdminRpcServerBase.Admin50IntfHandle, hBinding, pguidMdb, pguidMailbox, pntsd, cbSD, cbAuxIn, rgbAuxIn, pcbAuxOut, prgbAuxOut);
		return <Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.Execute(ref ecSetMailboxSecurityDescriptorRpc);
	}

	// Token: 0x060000B7 RID: 183 RVA: 0x0000BEA0 File Offset: 0x0000B2A0
	internal unsafe static int EcGetMailboxSecurityDescriptor50_Managed(void* hBinding, _GUID* pguidMdb, _GUID* pguidMailbox, byte** ppntsd, uint* pcbSD, uint cbAuxIn, byte* rgbAuxIn, uint* pcbAuxOut, byte** prgbAuxOut)
	{
		EcGetMailboxSecurityDescriptorRpc ecGetMailboxSecurityDescriptorRpc;
		<Module>.EcGetMailboxSecurityDescriptorRpc.{ctor}(ref ecGetMailboxSecurityDescriptorRpc, AdminRpcServerBase.Admin50IntfHandle, hBinding, pguidMdb, pguidMailbox, ppntsd, pcbSD, cbAuxIn, rgbAuxIn, pcbAuxOut, prgbAuxOut);
		return <Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.Execute(ref ecGetMailboxSecurityDescriptorRpc);
	}

	// Token: 0x060000B8 RID: 184 RVA: 0x0000BED0 File Offset: 0x0000B2D0
	internal unsafe static int EcAdminGetLogonTable50_Managed(void* hBinding, _GUID* pguidMdb, int lParam, byte** ppbResult, uint* pulSize, uint* rgptag, uint cptag, uint cpid, uint* pcrow, uint cbAuxIn, byte* rgbAuxIn, uint* pcbAuxOut, byte** prgbAuxOut)
	{
		EcAdminGetLogonTableRpc ecAdminGetLogonTableRpc;
		<Module>.EcAdminGetLogonTableRpc.{ctor}(ref ecAdminGetLogonTableRpc, AdminRpcServerBase.Admin50IntfHandle, hBinding, pguidMdb, lParam, ppbResult, pulSize, rgptag, cptag, cpid, pcrow, cbAuxIn, rgbAuxIn, pcbAuxOut, prgbAuxOut);
		return <Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.Execute(ref ecAdminGetLogonTableRpc);
	}

	// Token: 0x060000B9 RID: 185 RVA: 0x0000BF08 File Offset: 0x0000B308
	internal unsafe static int EcMountDatabase50_Managed(void* hBinding, _GUID* pguidStorageGroup, _GUID* pguidMdb, uint ulFlags, uint cbAuxIn, byte* rgbAuxIn, uint* pcbAuxOut, byte** prgbAuxOut)
	{
		EcMountDatabaseRpc ecMountDatabaseRpc;
		<Module>.EcMountDatabaseRpc.{ctor}(ref ecMountDatabaseRpc, AdminRpcServerBase.Admin50IntfHandle, hBinding, pguidStorageGroup, pguidMdb, ulFlags, cbAuxIn, rgbAuxIn, pcbAuxOut, prgbAuxOut);
		return <Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.Execute(ref ecMountDatabaseRpc);
	}

	// Token: 0x060000BA RID: 186 RVA: 0x0000BF38 File Offset: 0x0000B338
	internal unsafe static int EcUnmountDatabase50_Managed(void* hBinding, _GUID* pguidStorageGroup, _GUID* pguidMdb, int grfFlags, uint cbAuxIn, byte* rgbAuxIn, uint* pcbAuxOut, byte** prgbAuxOut)
	{
		EcUnmountDatabaseRpc ecUnmountDatabaseRpc;
		<Module>.EcUnmountDatabaseRpc.{ctor}(ref ecUnmountDatabaseRpc, AdminRpcServerBase.Admin50IntfHandle, hBinding, pguidStorageGroup, pguidMdb, grfFlags, cbAuxIn, rgbAuxIn, pcbAuxOut, prgbAuxOut);
		return <Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.Execute(ref ecUnmountDatabaseRpc);
	}

	// Token: 0x060000BB RID: 187 RVA: 0x0000EA30 File Offset: 0x0000DE30
	internal unsafe static EcStartBlockModeReplicationToPassive50Rpc* {ctor}(EcStartBlockModeReplicationToPassive50Rpc* A_0, void* hBinding, _GUID* pguidMdb, ushort* pPassiveName, uint ulFirstGenToSend, uint cbAuxIn, byte* rgbAuxIn, uint* pcbAuxOut, byte** prgbAuxOut)
	{
		IntPtr admin50IntfHandle = AdminRpcServerBase.Admin50IntfHandle;
		*A_0 = ref <Module>.??_7AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 40L) = admin50IntfHandle;
		*(A_0 + 48L) = hBinding;
		*(A_0 + 8L) = cbAuxIn;
		*(A_0 + 16L) = rgbAuxIn;
		*(A_0 + 24L) = pcbAuxOut;
		*(A_0 + 32L) = prgbAuxOut;
		*A_0 = ref <Module>.??_7EcStartBlockModeReplicationToPassive50Rpc@@6B@ + 8;
		*(A_0 + 56L) = pguidMdb;
		*(A_0 + 64L) = pPassiveName;
		*(A_0 + 72L) = ulFirstGenToSend;
		return A_0;
	}

	// Token: 0x060000BC RID: 188 RVA: 0x0000BF68 File Offset: 0x0000B368
	internal unsafe static int EcValidateParameters(EcStartBlockModeReplicationToPassive50Rpc* A_0)
	{
		int result = 0;
		if (*(A_0 + 56L) == 0L || *(A_0 + 64L) == 0L)
		{
			result = -2147024809;
		}
		return result;
	}

	// Token: 0x060000BD RID: 189 RVA: 0x0000BF90 File Offset: 0x0000B390
	internal unsafe static int EcDispatchCall(EcStartBlockModeReplicationToPassive50Rpc* A_0, IAdminRpcServer server, ClientSecurityContext callerSecurityContext, byte[] auxiliaryIn, out byte[] auxiliaryOut)
	{
		int result = 0;
		try
		{
			Guid mdbGuid = <Module>.FromGUID(*(A_0 + 56L));
			result = server.EcStartBlockModeReplicationToPassive50(callerSecurityContext, mdbGuid, <Module>.UToMString(*(A_0 + 64L)), (uint)(*(A_0 + 72L)), auxiliaryIn, out auxiliaryOut);
		}
		finally
		{
		}
		return result;
	}

	// Token: 0x060000BE RID: 190 RVA: 0x0000EAA0 File Offset: 0x0000DEA0
	internal unsafe static int EcStartBlockModeReplicationToPassive50_Managed(void* hBinding, _GUID* pguidMdb, ushort* pPassiveName, uint ulFirstGenToSend, uint cbAuxIn, byte* rgbAuxIn, uint* pcbAuxOut, byte** prgbAuxOut)
	{
		IntPtr admin50IntfHandle = AdminRpcServerBase.Admin50IntfHandle;
		EcStartBlockModeReplicationToPassive50Rpc ecStartBlockModeReplicationToPassive50Rpc;
		*(ref ecStartBlockModeReplicationToPassive50Rpc + 40) = admin50IntfHandle;
		*(ref ecStartBlockModeReplicationToPassive50Rpc + 48) = hBinding;
		*(ref ecStartBlockModeReplicationToPassive50Rpc + 8) = cbAuxIn;
		*(ref ecStartBlockModeReplicationToPassive50Rpc + 16) = rgbAuxIn;
		*(ref ecStartBlockModeReplicationToPassive50Rpc + 24) = pcbAuxOut;
		*(ref ecStartBlockModeReplicationToPassive50Rpc + 32) = prgbAuxOut;
		ecStartBlockModeReplicationToPassive50Rpc = ref <Module>.??_7EcStartBlockModeReplicationToPassive50Rpc@@6B@ + 8;
		*(ref ecStartBlockModeReplicationToPassive50Rpc + 56) = pguidMdb;
		*(ref ecStartBlockModeReplicationToPassive50Rpc + 64) = pPassiveName;
		*(ref ecStartBlockModeReplicationToPassive50Rpc + 72) = ulFirstGenToSend;
		return <Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.Execute(ref ecStartBlockModeReplicationToPassive50Rpc);
	}

	// Token: 0x060000BF RID: 191 RVA: 0x0000BFEC File Offset: 0x0000B3EC
	internal unsafe static int EcAdminSetMailboxBasicInfo50_Managed(void* hBinding, _GUID* pguidMdb, _GUID* pguidMailbox, sbyte* rgbMailInfo, uint ulSize, uint cbAuxIn, byte* rgbAuxIn, uint* pcbAuxOut, byte** prgbAuxOut)
	{
		EcAdminSetMailboxBasicInfoRpc ecAdminSetMailboxBasicInfoRpc;
		<Module>.EcAdminSetMailboxBasicInfoRpc.{ctor}(ref ecAdminSetMailboxBasicInfoRpc, AdminRpcServerBase.Admin50IntfHandle, hBinding, pguidMdb, pguidMailbox, rgbMailInfo, ulSize, cbAuxIn, rgbAuxIn, pcbAuxOut, prgbAuxOut);
		return <Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.Execute(ref ecAdminSetMailboxBasicInfoRpc);
	}

	// Token: 0x060000C0 RID: 192 RVA: 0x0000C01C File Offset: 0x0000B41C
	internal unsafe static int EcPurgeCachedMdbObject50_Managed(void* hBinding, _GUID* pguidMdb, uint cbAuxIn, byte* rgbAuxIn, uint* pcbAuxOut, byte** prgbAuxOut)
	{
		EcPurgeCachedMdbObjectRpc ecPurgeCachedMdbObjectRpc;
		<Module>.EcPurgeCachedMdbObjectRpc.{ctor}(ref ecPurgeCachedMdbObjectRpc, AdminRpcServerBase.Admin50IntfHandle, hBinding, pguidMdb, cbAuxIn, rgbAuxIn, pcbAuxOut, prgbAuxOut);
		return <Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.Execute(ref ecPurgeCachedMdbObjectRpc);
	}

	// Token: 0x060000C1 RID: 193 RVA: 0x0000C048 File Offset: 0x0000B448
	internal unsafe static int EcAdminGetMailboxTable50_Managed(void* hBinding, _GUID* pguidMdb, int lParam, byte** ppbResult, uint* pulSize, uint* rgptag, uint cptag, uint cpid, uint* pcrow, uint cbAuxIn, byte* rgbAuxIn, uint* pcbAuxOut, byte** prgbAuxOut)
	{
		EcAdminGetMailboxTableRpc ecAdminGetMailboxTableRpc;
		<Module>.EcAdminGetMailboxTableRpc.{ctor}(ref ecAdminGetMailboxTableRpc, AdminRpcServerBase.Admin50IntfHandle, hBinding, pguidMdb, lParam, ppbResult, pulSize, rgptag, cptag, cpid, pcrow, cbAuxIn, rgbAuxIn, pcbAuxOut, prgbAuxOut);
		return <Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.Execute(ref ecAdminGetMailboxTableRpc);
	}

	// Token: 0x060000C2 RID: 194 RVA: 0x0000C080 File Offset: 0x0000B480
	internal unsafe static int EcAdminNotifyOnDSChange50_Managed(void* hBinding, _GUID* pguidMdb, _GUID* pguidMailbox, uint ulObject, uint cbAuxIn, byte* rgbAuxIn, uint* pcbAuxOut, byte** prgbAuxOut)
	{
		EcAdminNotifyOnDSChangeRpc ecAdminNotifyOnDSChangeRpc;
		<Module>.EcAdminNotifyOnDSChangeRpc.{ctor}(ref ecAdminNotifyOnDSChangeRpc, AdminRpcServerBase.Admin50IntfHandle, hBinding, pguidMdb, pguidMailbox, ulObject, cbAuxIn, rgbAuxIn, pcbAuxOut, prgbAuxOut);
		return <Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.Execute(ref ecAdminNotifyOnDSChangeRpc);
	}

	// Token: 0x060000C3 RID: 195 RVA: 0x0000C0B0 File Offset: 0x0000B4B0
	internal unsafe static int EcLogReplayRequestEx2_Managed(void* hBinding, _GUID* pmdbGuid, uint ulgenLogReplayMax, uint ulLogReplayFlags, uint* pulgenLogReplayNext, uint* pCbOut, byte** ppDbinfo, uint* ppatchPageNumber, uint* pcbPatchToken, byte** ppbPatchToken, uint* pcbPatchData, byte** ppbPatchData, uint* pcpgnoCorrupt, uint** ppgnoCorrupt, uint cbAuxIn, byte* rgbAuxIn, uint* pcbAuxOut, byte** prgbAuxOut)
	{
		EcLogReplayRequestRpc ecLogReplayRequestRpc;
		<Module>.EcLogReplayRequestRpc.{ctor}(ref ecLogReplayRequestRpc, AdminRpcServerBase.Admin50IntfHandle, hBinding, pmdbGuid, ulgenLogReplayMax, ulLogReplayFlags, pulgenLogReplayNext, pCbOut, ppDbinfo, ppatchPageNumber, pcbPatchToken, ppbPatchToken, pcbPatchData, ppbPatchData, pcpgnoCorrupt, ppgnoCorrupt, cbAuxIn, rgbAuxIn, pcbAuxOut, prgbAuxOut);
		return <Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.Execute(ref ecLogReplayRequestRpc);
	}

	// Token: 0x060000C4 RID: 196 RVA: 0x0000EB0C File Offset: 0x0000DF0C
	internal unsafe static EcMultiMailboxSearchRpc* {ctor}(EcMultiMailboxSearchRpc* A_0, void* hBinding, _GUID* pguidMdb, uint searchRequestSize, byte* searchRequest, uint cbAuxIn, byte* rgbAuxIn, uint* searchResponseSize, byte** searchResponse, uint* pcbAuxOut, byte** prgbAuxOut)
	{
		IntPtr admin50IntfHandle = AdminRpcServerBase.Admin50IntfHandle;
		*A_0 = ref <Module>.??_7AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 40L) = admin50IntfHandle;
		*(A_0 + 48L) = hBinding;
		*(A_0 + 8L) = cbAuxIn;
		*(A_0 + 16L) = rgbAuxIn;
		*(A_0 + 24L) = pcbAuxOut;
		*(A_0 + 32L) = prgbAuxOut;
		*A_0 = ref <Module>.??_7EcMultiMailboxSearchRpc@@6B@ + 8;
		*(A_0 + 56L) = pguidMdb;
		*(A_0 + 72L) = searchRequest;
		*(A_0 + 64L) = searchRequestSize;
		*(A_0 + 80L) = searchResponseSize;
		*(A_0 + 88L) = searchResponse;
		return A_0;
	}

	// Token: 0x060000C5 RID: 197 RVA: 0x0000C0F4 File Offset: 0x0000B4F4
	internal unsafe static int EcValidateParameters(EcMultiMailboxSearchRpc* A_0)
	{
		int result = 0;
		if (*(A_0 + 56L) == 0L || *(A_0 + 64L) == 0 || *(A_0 + 72L) == 0L || *(A_0 + 80L) == 0L || *(A_0 + 88L) == 0L)
		{
			result = -2147024809;
		}
		return result;
	}

	// Token: 0x060000C6 RID: 198 RVA: 0x0000C134 File Offset: 0x0000B534
	internal unsafe static int EcDispatchCall(EcMultiMailboxSearchRpc* A_0, IAdminRpcServer server, ClientSecurityContext callerSecurityContext, byte[] auxiliaryIn, out byte[] auxiliaryOut)
	{
		byte[] mByteArray = null;
		int num = 0;
		bool flag = false;
		EcMultiMailboxSearchRpc* ptr = A_0 + 88L;
		*(*ptr) = 0L;
		try
		{
			mByteArray = null;
			byte[] searchRequest = <Module>.UToMBytes(*(A_0 + 64L), *(A_0 + 72L));
			Guid mdbGuid = <Module>.FromGUID(*(A_0 + 56L));
			num = server.EcMultiMailboxSearch(callerSecurityContext, mdbGuid, searchRequest, out mByteArray, auxiliaryIn, out auxiliaryOut);
			if (num == null)
			{
				num = <Module>.MToUBytes(mByteArray, *(A_0 + 80L), *ptr);
				if (0 != num)
				{
					return num;
				}
			}
			flag = true;
		}
		finally
		{
			if (!flag)
			{
				ptr = A_0 + 88L;
				ulong num2 = (ulong)(*(*ptr));
				if (0UL != num2)
				{
					<Module>.MIDL_user_free(num2);
					*(*ptr) = 0L;
				}
			}
		}
		return num;
	}

	// Token: 0x060000C7 RID: 199 RVA: 0x0000EB8C File Offset: 0x0000DF8C
	internal unsafe static int EcMultiMailboxSearch_Managed(void* hBinding, _GUID* pguidMdb, uint cbSearchRequest, byte* rgbSearchRequest, uint* pcbSearchResponse, byte** prgbSearchResponse, uint cbAuxIn, byte* rgbAuxIn, uint* pcbAuxOut, byte** prgbAuxOut)
	{
		IntPtr admin50IntfHandle = AdminRpcServerBase.Admin50IntfHandle;
		EcMultiMailboxSearchRpc ecMultiMailboxSearchRpc;
		*(ref ecMultiMailboxSearchRpc + 40) = admin50IntfHandle;
		*(ref ecMultiMailboxSearchRpc + 48) = hBinding;
		*(ref ecMultiMailboxSearchRpc + 8) = cbAuxIn;
		*(ref ecMultiMailboxSearchRpc + 16) = rgbAuxIn;
		*(ref ecMultiMailboxSearchRpc + 24) = pcbAuxOut;
		*(ref ecMultiMailboxSearchRpc + 32) = prgbAuxOut;
		ecMultiMailboxSearchRpc = ref <Module>.??_7EcMultiMailboxSearchRpc@@6B@ + 8;
		*(ref ecMultiMailboxSearchRpc + 56) = pguidMdb;
		*(ref ecMultiMailboxSearchRpc + 72) = rgbSearchRequest;
		*(ref ecMultiMailboxSearchRpc + 64) = cbSearchRequest;
		*(ref ecMultiMailboxSearchRpc + 80) = pcbSearchResponse;
		*(ref ecMultiMailboxSearchRpc + 88) = prgbSearchResponse;
		return <Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.Execute(ref ecMultiMailboxSearchRpc);
	}

	// Token: 0x060000C8 RID: 200 RVA: 0x0000EC08 File Offset: 0x0000E008
	internal unsafe static EcGetMultiMailboxSearchKeywordStatsRpc* {ctor}(EcGetMultiMailboxSearchKeywordStatsRpc* A_0, void* hBinding, _GUID* pguidMdb, uint searchRequestSize, byte* searchRequest, uint cbAuxIn, byte* rgbAuxIn, uint* searchResponseSize, byte** searchResponse, uint* pcbAuxOut, byte** prgbAuxOut)
	{
		IntPtr admin50IntfHandle = AdminRpcServerBase.Admin50IntfHandle;
		*A_0 = ref <Module>.??_7AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 40L) = admin50IntfHandle;
		*(A_0 + 48L) = hBinding;
		*(A_0 + 8L) = cbAuxIn;
		*(A_0 + 16L) = rgbAuxIn;
		*(A_0 + 24L) = pcbAuxOut;
		*(A_0 + 32L) = prgbAuxOut;
		*A_0 = ref <Module>.??_7EcGetMultiMailboxSearchKeywordStatsRpc@@6B@ + 8;
		*(A_0 + 56L) = pguidMdb;
		*(A_0 + 80L) = searchRequest;
		*(A_0 + 72L) = searchRequestSize;
		*(A_0 + 88L) = searchResponseSize;
		*(A_0 + 96L) = searchResponse;
		return A_0;
	}

	// Token: 0x060000C9 RID: 201 RVA: 0x0000C1E8 File Offset: 0x0000B5E8
	internal unsafe static int EcValidateParameters(EcGetMultiMailboxSearchKeywordStatsRpc* A_0)
	{
		int result = 0;
		if (*(A_0 + 56L) == 0L || *(A_0 + 72L) == 0 || *(A_0 + 80L) == 0L || *(A_0 + 88L) == 0L || *(A_0 + 96L) == 0L)
		{
			result = -2147024809;
		}
		return result;
	}

	// Token: 0x060000CA RID: 202 RVA: 0x0000C228 File Offset: 0x0000B628
	internal unsafe static int EcDispatchCall(EcGetMultiMailboxSearchKeywordStatsRpc* A_0, IAdminRpcServer server, ClientSecurityContext callerSecurityContext, byte[] auxiliaryIn, out byte[] auxiliaryOut)
	{
		byte[] mByteArray = null;
		int num = 0;
		bool flag = false;
		EcGetMultiMailboxSearchKeywordStatsRpc* ptr = A_0 + 96L;
		*(*ptr) = 0L;
		try
		{
			byte[] keywordStatRequest = <Module>.UToMBytes(*(A_0 + 72L), *(A_0 + 80L));
			Guid mdbGuid = <Module>.FromGUID(*(A_0 + 56L));
			num = server.EcGetMultiMailboxSearchKeywordStats(callerSecurityContext, mdbGuid, keywordStatRequest, out mByteArray, auxiliaryIn, out auxiliaryOut);
			if (num == null)
			{
				num = <Module>.MToUBytes(mByteArray, *(A_0 + 88L), *ptr);
				if (0 != num)
				{
					return num;
				}
			}
			flag = true;
		}
		finally
		{
			if (!flag)
			{
				ptr = A_0 + 96L;
				ulong num2 = (ulong)(*(*ptr));
				if (0UL != num2)
				{
					<Module>.MIDL_user_free(num2);
					*(*ptr) = 0L;
				}
			}
		}
		return num;
	}

	// Token: 0x060000CB RID: 203 RVA: 0x0000EC88 File Offset: 0x0000E088
	internal unsafe static int EcGetMultiMailboxSearchKeywordStats_Managed(void* hBinding, _GUID* pguidMdb, uint cbSearchRequest, byte* rgbSearchRequest, uint* pcbSearchResponse, byte** prgbSearchResponse, uint cbAuxIn, byte* rgbAuxIn, uint* pcbAuxOut, byte** prgbAuxOut)
	{
		IntPtr admin50IntfHandle = AdminRpcServerBase.Admin50IntfHandle;
		EcGetMultiMailboxSearchKeywordStatsRpc ecGetMultiMailboxSearchKeywordStatsRpc;
		*(ref ecGetMultiMailboxSearchKeywordStatsRpc + 40) = admin50IntfHandle;
		*(ref ecGetMultiMailboxSearchKeywordStatsRpc + 48) = hBinding;
		*(ref ecGetMultiMailboxSearchKeywordStatsRpc + 8) = cbAuxIn;
		*(ref ecGetMultiMailboxSearchKeywordStatsRpc + 16) = rgbAuxIn;
		*(ref ecGetMultiMailboxSearchKeywordStatsRpc + 24) = pcbAuxOut;
		*(ref ecGetMultiMailboxSearchKeywordStatsRpc + 32) = prgbAuxOut;
		ecGetMultiMailboxSearchKeywordStatsRpc = ref <Module>.??_7EcGetMultiMailboxSearchKeywordStatsRpc@@6B@ + 8;
		*(ref ecGetMultiMailboxSearchKeywordStatsRpc + 56) = pguidMdb;
		*(ref ecGetMultiMailboxSearchKeywordStatsRpc + 80) = rgbSearchRequest;
		*(ref ecGetMultiMailboxSearchKeywordStatsRpc + 72) = cbSearchRequest;
		*(ref ecGetMultiMailboxSearchKeywordStatsRpc + 88) = pcbSearchResponse;
		*(ref ecGetMultiMailboxSearchKeywordStatsRpc + 96) = prgbSearchResponse;
		return <Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.Execute(ref ecGetMultiMailboxSearchKeywordStatsRpc);
	}

	// Token: 0x060000CC RID: 204 RVA: 0x0000ED04 File Offset: 0x0000E104
	internal unsafe static EcAdminGetDatabaseProcessInfo50Rpc* {ctor}(EcAdminGetDatabaseProcessInfo50Rpc* A_0, void* hBinding, _GUID* pMdbGuid, uint ulTags, uint* rgPropTags, byte** ppbResult, uint* pulSize, uint* pcRowCount, uint cbAuxIn, byte* rgbAuxIn, uint* pcbAuxOut, byte** prgbAuxOut)
	{
		IntPtr admin50IntfHandle = AdminRpcServerBase.Admin50IntfHandle;
		*A_0 = ref <Module>.??_7AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 40L) = admin50IntfHandle;
		*(A_0 + 48L) = hBinding;
		*(A_0 + 8L) = cbAuxIn;
		*(A_0 + 16L) = rgbAuxIn;
		*(A_0 + 24L) = pcbAuxOut;
		*(A_0 + 32L) = prgbAuxOut;
		*A_0 = ref <Module>.??_7EcAdminGetDatabaseProcessInfo50Rpc@@6B@ + 8;
		*(A_0 + 56L) = pMdbGuid;
		*(A_0 + 64L) = ulTags;
		*(A_0 + 72L) = rgPropTags;
		*(A_0 + 80L) = ppbResult;
		*(A_0 + 88L) = pulSize;
		*(A_0 + 96L) = pcRowCount;
		return A_0;
	}

	// Token: 0x060000CD RID: 205 RVA: 0x0000C2D8 File Offset: 0x0000B6D8
	internal unsafe static int EcValidateParameters(EcAdminGetDatabaseProcessInfo50Rpc* A_0)
	{
		int result = 0;
		if (*(A_0 + 64L) == 0 || *(A_0 + 72L) == 0L || *(A_0 + 80L) == 0L || *(A_0 + 88L) == 0L || *(A_0 + 96L) == 0L)
		{
			result = -2147024809;
		}
		return result;
	}

	// Token: 0x060000CE RID: 206 RVA: 0x0000C318 File Offset: 0x0000B718
	internal unsafe static int EcDispatchCall(EcAdminGetDatabaseProcessInfo50Rpc* A_0, IAdminRpcServer server, ClientSecurityContext callerSecurityContext, byte[] auxiliaryIn, out byte[] auxiliaryOut)
	{
		byte[] mByteArray = null;
		int num = 0;
		bool flag = false;
		EcAdminGetDatabaseProcessInfo50Rpc* ptr = A_0 + 80L;
		*(*ptr) = 0L;
		EcAdminGetDatabaseProcessInfo50Rpc* ptr2 = A_0 + 88L;
		*(*ptr2) = 0;
		EcAdminGetDatabaseProcessInfo50Rpc* ptr3 = A_0 + 96L;
		*(*ptr3) = 0;
		uint[] propTags = <Module>.UToMUInt32s((uint)(*(A_0 + 64L)), *(A_0 + 72L));
		try
		{
			mByteArray = null;
			uint num2 = 0U;
			Guid mdbGuid = <Module>.FromGUID(*(A_0 + 56L));
			num = server.EcAdminGetDatabaseProcessInfo50(callerSecurityContext, mdbGuid, propTags, out mByteArray, out num2, auxiliaryIn, out auxiliaryOut);
			if (num == null)
			{
				num = <Module>.MToUBytes(mByteArray, *ptr2, *ptr);
				if (0 != num)
				{
					return num;
				}
				*(*ptr3) = (int)num2;
			}
			flag = true;
		}
		finally
		{
			if (!flag)
			{
				*(*(A_0 + 88L)) = 0;
				*(*(A_0 + 96L)) = 0;
				ptr = A_0 + 80L;
				ulong num3 = (ulong)(*(*ptr));
				if (0UL != num3)
				{
					<Module>.MIDL_user_free(num3);
					*(*ptr) = 0L;
				}
			}
		}
		return num;
	}

	// Token: 0x060000CF RID: 207 RVA: 0x0000ED8C File Offset: 0x0000E18C
	internal unsafe static int EcAdminGetDatabaseProcessInfo50_Managed(void* hBinding, _GUID* pMdbGuid, uint ulTags, uint* rgPropTags, byte** ppbResult, uint* pulSize, uint* pcRowCount, uint cbAuxIn, byte* rgbAuxIn, uint* pcbAuxOut, byte** prgbAuxOut)
	{
		IntPtr admin50IntfHandle = AdminRpcServerBase.Admin50IntfHandle;
		EcAdminGetDatabaseProcessInfo50Rpc ecAdminGetDatabaseProcessInfo50Rpc;
		*(ref ecAdminGetDatabaseProcessInfo50Rpc + 40) = admin50IntfHandle;
		*(ref ecAdminGetDatabaseProcessInfo50Rpc + 48) = hBinding;
		*(ref ecAdminGetDatabaseProcessInfo50Rpc + 8) = cbAuxIn;
		*(ref ecAdminGetDatabaseProcessInfo50Rpc + 16) = rgbAuxIn;
		*(ref ecAdminGetDatabaseProcessInfo50Rpc + 24) = pcbAuxOut;
		*(ref ecAdminGetDatabaseProcessInfo50Rpc + 32) = prgbAuxOut;
		ecAdminGetDatabaseProcessInfo50Rpc = ref <Module>.??_7EcAdminGetDatabaseProcessInfo50Rpc@@6B@ + 8;
		*(ref ecAdminGetDatabaseProcessInfo50Rpc + 56) = pMdbGuid;
		*(ref ecAdminGetDatabaseProcessInfo50Rpc + 64) = ulTags;
		*(ref ecAdminGetDatabaseProcessInfo50Rpc + 72) = rgPropTags;
		*(ref ecAdminGetDatabaseProcessInfo50Rpc + 80) = ppbResult;
		*(ref ecAdminGetDatabaseProcessInfo50Rpc + 88) = pulSize;
		*(ref ecAdminGetDatabaseProcessInfo50Rpc + 96) = pcRowCount;
		return <Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.Execute(ref ecAdminGetDatabaseProcessInfo50Rpc);
	}

	// Token: 0x060000D0 RID: 208 RVA: 0x0000EE10 File Offset: 0x0000E210
	internal unsafe static EcAdminProcessSnapshotOperation50Rpc* {ctor}(EcAdminProcessSnapshotOperation50Rpc* A_0, void* hBinding, _GUID* pMdbGuid, uint ulOpCode, uint ulFlags, uint cbAuxIn, byte* rgbAuxIn, uint* pcbAuxOut, byte** prgbAuxOut)
	{
		IntPtr admin50IntfHandle = AdminRpcServerBase.Admin50IntfHandle;
		*A_0 = ref <Module>.??_7AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 40L) = admin50IntfHandle;
		*(A_0 + 48L) = hBinding;
		*(A_0 + 8L) = cbAuxIn;
		*(A_0 + 16L) = rgbAuxIn;
		*(A_0 + 24L) = pcbAuxOut;
		*(A_0 + 32L) = prgbAuxOut;
		*A_0 = ref <Module>.??_7EcAdminProcessSnapshotOperation50Rpc@@6B@ + 8;
		*(A_0 + 56L) = pMdbGuid;
		*(A_0 + 64L) = ulOpCode;
		*(A_0 + 68L) = ulFlags;
		return A_0;
	}

	// Token: 0x060000D1 RID: 209 RVA: 0x0000C3FC File Offset: 0x0000B7FC
	internal unsafe static int EcValidateParameters(EcAdminProcessSnapshotOperation50Rpc* A_0)
	{
		int result = 0;
		if (*(A_0 + 56L) == 0L || *(A_0 + 64L) == 0)
		{
			result = -2147024809;
		}
		return result;
	}

	// Token: 0x060000D2 RID: 210 RVA: 0x0000C424 File Offset: 0x0000B824
	internal unsafe static int EcDispatchCall(EcAdminProcessSnapshotOperation50Rpc* A_0, IAdminRpcServer server, ClientSecurityContext callerSecurityContext, byte[] auxiliaryIn, out byte[] auxiliaryOut)
	{
		int result = 0;
		try
		{
			Guid mdbGuid = <Module>.FromGUID(*(A_0 + 56L));
			result = server.EcAdminProcessSnapshotOperation50(callerSecurityContext, mdbGuid, (uint)(*(A_0 + 64L)), (uint)(*(A_0 + 68L)), auxiliaryIn, out auxiliaryOut);
		}
		finally
		{
		}
		return result;
	}

	// Token: 0x060000D3 RID: 211 RVA: 0x0000EE80 File Offset: 0x0000E280
	internal unsafe static int EcAdminProcessSnapshotOperation50_Managed(void* hBinding, _GUID* pMdbGuid, uint ulOpCode, uint ulFlags, uint cbAuxIn, byte* rgbAuxIn, uint* pcbAuxOut, byte** prgbAuxOut)
	{
		IntPtr admin50IntfHandle = AdminRpcServerBase.Admin50IntfHandle;
		EcAdminProcessSnapshotOperation50Rpc ecAdminProcessSnapshotOperation50Rpc;
		*(ref ecAdminProcessSnapshotOperation50Rpc + 40) = admin50IntfHandle;
		*(ref ecAdminProcessSnapshotOperation50Rpc + 48) = hBinding;
		*(ref ecAdminProcessSnapshotOperation50Rpc + 8) = cbAuxIn;
		*(ref ecAdminProcessSnapshotOperation50Rpc + 16) = rgbAuxIn;
		*(ref ecAdminProcessSnapshotOperation50Rpc + 24) = pcbAuxOut;
		*(ref ecAdminProcessSnapshotOperation50Rpc + 32) = prgbAuxOut;
		ecAdminProcessSnapshotOperation50Rpc = ref <Module>.??_7EcAdminProcessSnapshotOperation50Rpc@@6B@ + 8;
		*(ref ecAdminProcessSnapshotOperation50Rpc + 56) = pMdbGuid;
		*(ref ecAdminProcessSnapshotOperation50Rpc + 64) = ulOpCode;
		*(ref ecAdminProcessSnapshotOperation50Rpc + 68) = ulFlags;
		return <Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.Execute(ref ecAdminProcessSnapshotOperation50Rpc);
	}

	// Token: 0x060000D4 RID: 212 RVA: 0x0000EEEC File Offset: 0x0000E2EC
	internal unsafe static EcAdminGetPhysicalDatabaseInformation50Rpc* {ctor}(EcAdminGetPhysicalDatabaseInformation50Rpc* A_0, void* hBinding, _GUID* pguidMdb, uint* pCbOut, byte** ppDbinfo, uint cbAuxIn, byte* rgbAuxIn, uint* pcbAuxOut, byte** prgbAuxOut)
	{
		IntPtr admin50IntfHandle = AdminRpcServerBase.Admin50IntfHandle;
		*A_0 = ref <Module>.??_7AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 40L) = admin50IntfHandle;
		*(A_0 + 48L) = hBinding;
		*(A_0 + 8L) = cbAuxIn;
		*(A_0 + 16L) = rgbAuxIn;
		*(A_0 + 24L) = pcbAuxOut;
		*(A_0 + 32L) = prgbAuxOut;
		*A_0 = ref <Module>.??_7EcAdminGetPhysicalDatabaseInformation50Rpc@@6B@ + 8;
		*(A_0 + 56L) = pguidMdb;
		*(A_0 + 64L) = pCbOut;
		*(A_0 + 72L) = ppDbinfo;
		return A_0;
	}

	// Token: 0x060000D5 RID: 213 RVA: 0x0000C47C File Offset: 0x0000B87C
	internal unsafe static int EcValidateParameters(EcAdminGetPhysicalDatabaseInformation50Rpc* A_0)
	{
		int result = 0;
		if (*(A_0 + 56L) == 0L || *(A_0 + 64L) == 0L || *(A_0 + 72L) == 0L)
		{
			result = -2147024809;
		}
		return result;
	}

	// Token: 0x060000D6 RID: 214 RVA: 0x0000C4AC File Offset: 0x0000B8AC
	internal unsafe static int EcDispatchCall(EcAdminGetPhysicalDatabaseInformation50Rpc* A_0, IAdminRpcServer server, ClientSecurityContext callerSecurityContext, byte[] auxiliaryIn, out byte[] auxiliaryOut)
	{
		byte[] mByteArray = null;
		bool flag = false;
		EcAdminGetPhysicalDatabaseInformation50Rpc* ptr = A_0 + 64L;
		*(*ptr) = 0;
		EcAdminGetPhysicalDatabaseInformation50Rpc* ptr2 = A_0 + 72L;
		*(*ptr2) = 0L;
		int result;
		try
		{
			mByteArray = null;
			Guid mdbGuid = <Module>.FromGUID(*(A_0 + 56L));
			int num = server.EcAdminGetPhysicalDatabaseInformation50(callerSecurityContext, mdbGuid, out mByteArray, auxiliaryIn, out auxiliaryOut);
			if (num != null)
			{
				result = num;
			}
			else
			{
				int num2 = <Module>.MToUBytes(mByteArray, *ptr, *ptr2);
				if (num2 != null)
				{
					result = num2;
				}
				else
				{
					flag = true;
					result = 0;
				}
			}
		}
		finally
		{
			if (!flag)
			{
				*(*(A_0 + 64L)) = 0;
				ptr2 = A_0 + 72L;
				ulong num3 = (ulong)(*(*ptr2));
				if (0UL != num3)
				{
					<Module>.MIDL_user_free(num3);
					*(*ptr2) = 0L;
				}
			}
		}
		return result;
	}

	// Token: 0x060000D7 RID: 215 RVA: 0x0000EF5C File Offset: 0x0000E35C
	internal unsafe static int EcAdminGetPhysicalDatabaseInformation50_Managed(void* hBinding, _GUID* pguidMdb, uint* pCbOut, byte** ppDbinfo, uint cbAuxIn, byte* rgbAuxIn, uint* pcbAuxOut, byte** prgbAuxOut)
	{
		IntPtr admin50IntfHandle = AdminRpcServerBase.Admin50IntfHandle;
		EcAdminGetPhysicalDatabaseInformation50Rpc ecAdminGetPhysicalDatabaseInformation50Rpc;
		*(ref ecAdminGetPhysicalDatabaseInformation50Rpc + 40) = admin50IntfHandle;
		*(ref ecAdminGetPhysicalDatabaseInformation50Rpc + 48) = hBinding;
		*(ref ecAdminGetPhysicalDatabaseInformation50Rpc + 8) = cbAuxIn;
		*(ref ecAdminGetPhysicalDatabaseInformation50Rpc + 16) = rgbAuxIn;
		*(ref ecAdminGetPhysicalDatabaseInformation50Rpc + 24) = pcbAuxOut;
		*(ref ecAdminGetPhysicalDatabaseInformation50Rpc + 32) = prgbAuxOut;
		ecAdminGetPhysicalDatabaseInformation50Rpc = ref <Module>.??_7EcAdminGetPhysicalDatabaseInformation50Rpc@@6B@ + 8;
		*(ref ecAdminGetPhysicalDatabaseInformation50Rpc + 56) = pguidMdb;
		*(ref ecAdminGetPhysicalDatabaseInformation50Rpc + 64) = pCbOut;
		*(ref ecAdminGetPhysicalDatabaseInformation50Rpc + 72) = ppDbinfo;
		return <Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.Execute(ref ecAdminGetPhysicalDatabaseInformation50Rpc);
	}

	// Token: 0x060000D8 RID: 216 RVA: 0x0000EFC8 File Offset: 0x0000E3C8
	internal unsafe static EcAdminPrePopulateCacheEx50Rpc* {ctor}(EcAdminPrePopulateCacheEx50Rpc* A_0, void* hBinding, _GUID* pguidMdb, _GUID* pguidMailbox, uint cbPartitionHint, byte* pbPartitionHint, byte* szDCName, uint cbAuxIn, byte* rgbAuxIn, uint* pcbAuxOut, byte** prgbAuxOut)
	{
		IntPtr admin50IntfHandle = AdminRpcServerBase.Admin50IntfHandle;
		*A_0 = ref <Module>.??_7AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 40L) = admin50IntfHandle;
		*(A_0 + 48L) = hBinding;
		*(A_0 + 8L) = cbAuxIn;
		*(A_0 + 16L) = rgbAuxIn;
		*(A_0 + 24L) = pcbAuxOut;
		*(A_0 + 32L) = prgbAuxOut;
		*A_0 = ref <Module>.??_7EcAdminPrePopulateCacheEx50Rpc@@6B@ + 8;
		*(A_0 + 56L) = pguidMdb;
		*(A_0 + 64L) = pguidMailbox;
		*(A_0 + 72L) = cbPartitionHint;
		*(A_0 + 80L) = pbPartitionHint;
		*(A_0 + 88L) = szDCName;
		return A_0;
	}

	// Token: 0x060000D9 RID: 217 RVA: 0x0000C560 File Offset: 0x0000B960
	internal unsafe static int EcValidateParameters(EcAdminPrePopulateCacheEx50Rpc* A_0)
	{
		int result = 0;
		if (*(A_0 + 56L) == 0L || *(A_0 + 64L) == 0L || *(A_0 + 88L) == 0L || (*(A_0 + 80L) == 0L && *(A_0 + 72L) != 0))
		{
			result = -2147024809;
		}
		return result;
	}

	// Token: 0x060000DA RID: 218 RVA: 0x0000C5A0 File Offset: 0x0000B9A0
	internal unsafe static int EcDispatchCall(EcAdminPrePopulateCacheEx50Rpc* A_0, IAdminRpcServer server, ClientSecurityContext callerSecurityContext, byte[] auxiliaryIn, out byte[] auxiliaryOut)
	{
		IntPtr ptr = new IntPtr(*(A_0 + 88L));
		Guid mailboxGuid = <Module>.FromGUID(*(A_0 + 64L));
		Guid mdbGuid = <Module>.FromGUID(*(A_0 + 56L));
		return server.EcAdminPrePopulateCacheEx50(callerSecurityContext, mdbGuid, mailboxGuid, <Module>.UToMBytes(*(A_0 + 72L), *(A_0 + 80L)), Marshal.PtrToStringAnsi(ptr), auxiliaryIn, out auxiliaryOut);
	}

	// Token: 0x060000DB RID: 219 RVA: 0x0000F048 File Offset: 0x0000E448
	internal unsafe static int EcAdminPrePopulateCacheEx50_Managed(void* hBinding, _GUID* pguidMdb, _GUID* pguidMailbox, uint cbPartitionHint, byte* pbPartitionHint, byte* szDCName, uint cbAuxIn, byte* rgbAuxIn, uint* pcbAuxOut, byte** prgbAuxOut)
	{
		IntPtr admin50IntfHandle = AdminRpcServerBase.Admin50IntfHandle;
		EcAdminPrePopulateCacheEx50Rpc ecAdminPrePopulateCacheEx50Rpc;
		*(ref ecAdminPrePopulateCacheEx50Rpc + 40) = admin50IntfHandle;
		*(ref ecAdminPrePopulateCacheEx50Rpc + 48) = hBinding;
		*(ref ecAdminPrePopulateCacheEx50Rpc + 8) = cbAuxIn;
		*(ref ecAdminPrePopulateCacheEx50Rpc + 16) = rgbAuxIn;
		*(ref ecAdminPrePopulateCacheEx50Rpc + 24) = pcbAuxOut;
		*(ref ecAdminPrePopulateCacheEx50Rpc + 32) = prgbAuxOut;
		ecAdminPrePopulateCacheEx50Rpc = ref <Module>.??_7EcAdminPrePopulateCacheEx50Rpc@@6B@ + 8;
		*(ref ecAdminPrePopulateCacheEx50Rpc + 56) = pguidMdb;
		*(ref ecAdminPrePopulateCacheEx50Rpc + 64) = pguidMailbox;
		*(ref ecAdminPrePopulateCacheEx50Rpc + 72) = cbPartitionHint;
		*(ref ecAdminPrePopulateCacheEx50Rpc + 80) = pbPartitionHint;
		*(ref ecAdminPrePopulateCacheEx50Rpc + 88) = szDCName;
		return <Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.Execute(ref ecAdminPrePopulateCacheEx50Rpc);
	}

	// Token: 0x060000DC RID: 220 RVA: 0x0000F0C4 File Offset: 0x0000E4C4
	internal unsafe static EcForceNewLog50Rpc* {ctor}(EcForceNewLog50Rpc* A_0, void* hBinding, _GUID* pguidMdb, uint cbAuxIn, byte* rgbAuxIn, uint* pcbAuxOut, byte** prgbAuxOut)
	{
		IntPtr admin50IntfHandle = AdminRpcServerBase.Admin50IntfHandle;
		*A_0 = ref <Module>.??_7AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 40L) = admin50IntfHandle;
		*(A_0 + 48L) = hBinding;
		*(A_0 + 8L) = cbAuxIn;
		*(A_0 + 16L) = rgbAuxIn;
		*(A_0 + 24L) = pcbAuxOut;
		*(A_0 + 32L) = prgbAuxOut;
		*A_0 = ref <Module>.??_7EcForceNewLog50Rpc@@6B@ + 8;
		*(A_0 + 56L) = pguidMdb;
		return A_0;
	}

	// Token: 0x060000DD RID: 221 RVA: 0x0000C5F8 File Offset: 0x0000B9F8
	internal unsafe static int EcValidateParameters(EcForceNewLog50Rpc* A_0)
	{
		int num = 0;
		return (*(A_0 + 56L) == 0L) ? -2147024809 : num;
	}

	// Token: 0x060000DE RID: 222 RVA: 0x0000C61C File Offset: 0x0000BA1C
	internal unsafe static int EcDispatchCall(EcForceNewLog50Rpc* A_0, IAdminRpcServer server, ClientSecurityContext callerSecurityContext, byte[] auxiliaryIn, out byte[] auxiliaryOut)
	{
		Guid mdbGuid = <Module>.FromGUID(*(A_0 + 56L));
		return server.EcForceNewLog50(callerSecurityContext, mdbGuid, auxiliaryIn, out auxiliaryOut);
	}

	// Token: 0x060000DF RID: 223 RVA: 0x0000F124 File Offset: 0x0000E524
	internal unsafe static int EcForceNewLog50_Managed(void* hBinding, _GUID* pguidMdb, uint cbAuxIn, byte* rgbAuxIn, uint* pcbAuxOut, byte** prgbAuxOut)
	{
		IntPtr admin50IntfHandle = AdminRpcServerBase.Admin50IntfHandle;
		EcForceNewLog50Rpc ecForceNewLog50Rpc;
		*(ref ecForceNewLog50Rpc + 40) = admin50IntfHandle;
		*(ref ecForceNewLog50Rpc + 48) = hBinding;
		*(ref ecForceNewLog50Rpc + 8) = cbAuxIn;
		*(ref ecForceNewLog50Rpc + 16) = rgbAuxIn;
		*(ref ecForceNewLog50Rpc + 24) = pcbAuxOut;
		*(ref ecForceNewLog50Rpc + 32) = prgbAuxOut;
		ecForceNewLog50Rpc = ref <Module>.??_7EcForceNewLog50Rpc@@6B@ + 8;
		*(ref ecForceNewLog50Rpc + 56) = pguidMdb;
		return <Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.Execute(ref ecForceNewLog50Rpc);
	}

	// Token: 0x060000E0 RID: 224 RVA: 0x0000F180 File Offset: 0x0000E580
	internal unsafe static EcAdminIntegrityCheckEx50Rpc* {ctor}(EcAdminIntegrityCheckEx50Rpc* A_0, void* hBinding, _GUID* pguidMdb, _GUID* pguidMailbox, uint ulOperation, uint cbRequest, byte* rgbRequest, uint* pcbResponse, byte** prgbResponse, uint cbAuxIn, byte* rgbAuxIn, uint* pcbAuxOut, byte** prgbAuxOut)
	{
		IntPtr admin50IntfHandle = AdminRpcServerBase.Admin50IntfHandle;
		*A_0 = ref <Module>.??_7AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 40L) = admin50IntfHandle;
		*(A_0 + 48L) = hBinding;
		*(A_0 + 8L) = cbAuxIn;
		*(A_0 + 16L) = rgbAuxIn;
		*(A_0 + 24L) = pcbAuxOut;
		*(A_0 + 32L) = prgbAuxOut;
		*A_0 = ref <Module>.??_7EcAdminIntegrityCheckEx50Rpc@@6B@ + 8;
		*(A_0 + 56L) = pguidMdb;
		*(A_0 + 64L) = pguidMailbox;
		*(A_0 + 72L) = ulOperation;
		*(A_0 + 76L) = cbRequest;
		*(A_0 + 80L) = rgbRequest;
		*(A_0 + 88L) = pcbResponse;
		*(A_0 + 96L) = prgbResponse;
		return A_0;
	}

	// Token: 0x060000E1 RID: 225 RVA: 0x0000C640 File Offset: 0x0000BA40
	internal unsafe static int EcDispatchCall(EcAdminIntegrityCheckEx50Rpc* A_0, IAdminRpcServer server, ClientSecurityContext callerSecurityContext, byte[] auxiliaryIn, out byte[] auxiliaryOut)
	{
		byte[] mByteArray = null;
		int num = 0;
		bool flag = false;
		try
		{
			Guid mdbGuid = <Module>.FromGUID(*(A_0 + 56L));
			ulong num2 = (ulong)(*(A_0 + 64L));
			Guid mailboxGuid;
			if (0UL == num2)
			{
				mailboxGuid = Guid.Empty;
			}
			else
			{
				mailboxGuid = <Module>.FromGUID(num2);
			}
			byte[] request = <Module>.UToMBytes(*(A_0 + 76L), *(A_0 + 80L));
			mByteArray = null;
			num = server.EcAdminIntegrityCheckEx50(callerSecurityContext, mdbGuid, mailboxGuid, (uint)(*(A_0 + 72L)), request, out mByteArray, auxiliaryIn, out auxiliaryOut);
			if (0 == num)
			{
				num = <Module>.MToUBytes(mByteArray, *(A_0 + 88L), *(A_0 + 96L));
				if (0 != num)
				{
					return num;
				}
				flag = true;
			}
		}
		finally
		{
			if (!flag)
			{
				*(*(A_0 + 88L)) = 0;
				EcAdminIntegrityCheckEx50Rpc* ptr = A_0 + 96L;
				ulong num3 = (ulong)(*(*ptr));
				if (0UL != num3)
				{
					<Module>.MIDL_user_free(num3);
					*(*ptr) = 0L;
				}
			}
		}
		return num;
	}

	// Token: 0x060000E2 RID: 226 RVA: 0x0000C724 File Offset: 0x0000BB24
	internal unsafe static int EcValidateParameters(EcAdminIntegrityCheckEx50Rpc* A_0)
	{
		int num = 0;
		return (*(A_0 + 56L) == 0L) ? -2147024809 : num;
	}

	// Token: 0x060000E3 RID: 227 RVA: 0x0000F210 File Offset: 0x0000E610
	internal unsafe static int EcAdminIntegrityCheckEx50_Managed(void* hBinding, _GUID* pguidMdb, _GUID* pguidMailbox, uint ulOperation, uint cbRequest, byte* rgbRequest, uint* pcbResponse, byte** prgbResponse, uint cbAuxIn, byte* rgbAuxIn, uint* pcbAuxOut, byte** prgbAuxOut)
	{
		IntPtr admin50IntfHandle = AdminRpcServerBase.Admin50IntfHandle;
		EcAdminIntegrityCheckEx50Rpc ecAdminIntegrityCheckEx50Rpc;
		*(ref ecAdminIntegrityCheckEx50Rpc + 40) = admin50IntfHandle;
		*(ref ecAdminIntegrityCheckEx50Rpc + 48) = hBinding;
		*(ref ecAdminIntegrityCheckEx50Rpc + 8) = cbAuxIn;
		*(ref ecAdminIntegrityCheckEx50Rpc + 16) = rgbAuxIn;
		*(ref ecAdminIntegrityCheckEx50Rpc + 24) = pcbAuxOut;
		*(ref ecAdminIntegrityCheckEx50Rpc + 32) = prgbAuxOut;
		ecAdminIntegrityCheckEx50Rpc = ref <Module>.??_7EcAdminIntegrityCheckEx50Rpc@@6B@ + 8;
		*(ref ecAdminIntegrityCheckEx50Rpc + 56) = pguidMdb;
		*(ref ecAdminIntegrityCheckEx50Rpc + 64) = pguidMailbox;
		*(ref ecAdminIntegrityCheckEx50Rpc + 72) = ulOperation;
		*(ref ecAdminIntegrityCheckEx50Rpc + 76) = cbRequest;
		*(ref ecAdminIntegrityCheckEx50Rpc + 80) = rgbRequest;
		*(ref ecAdminIntegrityCheckEx50Rpc + 88) = pcbResponse;
		*(ref ecAdminIntegrityCheckEx50Rpc + 96) = prgbResponse;
		return <Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.Execute(ref ecAdminIntegrityCheckEx50Rpc);
	}

	// Token: 0x060000E4 RID: 228 RVA: 0x0000F29C File Offset: 0x0000E69C
	internal unsafe static EcCreateUserInfo50Rpc* {ctor}(EcCreateUserInfo50Rpc* A_0, void* hBinding, _GUID* pguidMdb, _GUID* pguidUserInfo, uint ulFlags, uint cbProperties, byte* rgbProperties, uint cbAuxIn, byte* rgbAuxIn, uint* pcbAuxOut, byte** prgbAuxOut)
	{
		IntPtr admin50IntfHandle = AdminRpcServerBase.Admin50IntfHandle;
		*A_0 = ref <Module>.??_7AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 40L) = admin50IntfHandle;
		*(A_0 + 48L) = hBinding;
		*(A_0 + 8L) = cbAuxIn;
		*(A_0 + 16L) = rgbAuxIn;
		*(A_0 + 24L) = pcbAuxOut;
		*(A_0 + 32L) = prgbAuxOut;
		*A_0 = ref <Module>.??_7EcCreateUserInfo50Rpc@@6B@ + 8;
		*(A_0 + 56L) = pguidMdb;
		*(A_0 + 64L) = pguidUserInfo;
		*(A_0 + 72L) = ulFlags;
		*(A_0 + 76L) = cbProperties;
		*(A_0 + 80L) = rgbProperties;
		return A_0;
	}

	// Token: 0x060000E5 RID: 229 RVA: 0x0000C748 File Offset: 0x0000BB48
	internal unsafe static int EcDispatchCall(EcCreateUserInfo50Rpc* A_0, IAdminRpcServer server, ClientSecurityContext callerSecurityContext, byte[] auxiliaryIn, out byte[] auxiliaryOut)
	{
		Guid mdbGuid = <Module>.FromGUID(*(A_0 + 56L));
		Guid userInfoGuid = <Module>.FromGUID(*(A_0 + 64L));
		byte[] properties = <Module>.UToMBytes(*(A_0 + 76L), *(A_0 + 80L));
		return server.EcCreateUserInfo50(callerSecurityContext, mdbGuid, userInfoGuid, (uint)(*(A_0 + 72L)), properties, auxiliaryIn, out auxiliaryOut);
	}

	// Token: 0x060000E6 RID: 230 RVA: 0x0000C794 File Offset: 0x0000BB94
	internal unsafe static int EcValidateParameters(EcCreateUserInfo50Rpc* A_0)
	{
		int result = 0;
		if (*(A_0 + 56L) == 0L || *(A_0 + 64L) == 0L)
		{
			result = -2147024809;
		}
		return result;
	}

	// Token: 0x060000E7 RID: 231 RVA: 0x0000F31C File Offset: 0x0000E71C
	internal unsafe static int EcCreateUserInfo50_Managed(void* hBinding, _GUID* pguidMdb, _GUID* pguidUserInfo, uint ulFlags, uint cbProperties, byte* rgbProperties, uint cbAuxIn, byte* rgbAuxIn, uint* pcbAuxOut, byte** prgbAuxOut)
	{
		IntPtr admin50IntfHandle = AdminRpcServerBase.Admin50IntfHandle;
		EcCreateUserInfo50Rpc ecCreateUserInfo50Rpc;
		*(ref ecCreateUserInfo50Rpc + 40) = admin50IntfHandle;
		*(ref ecCreateUserInfo50Rpc + 48) = hBinding;
		*(ref ecCreateUserInfo50Rpc + 8) = cbAuxIn;
		*(ref ecCreateUserInfo50Rpc + 16) = rgbAuxIn;
		*(ref ecCreateUserInfo50Rpc + 24) = pcbAuxOut;
		*(ref ecCreateUserInfo50Rpc + 32) = prgbAuxOut;
		ecCreateUserInfo50Rpc = ref <Module>.??_7EcCreateUserInfo50Rpc@@6B@ + 8;
		*(ref ecCreateUserInfo50Rpc + 56) = pguidMdb;
		*(ref ecCreateUserInfo50Rpc + 64) = pguidUserInfo;
		*(ref ecCreateUserInfo50Rpc + 72) = ulFlags;
		*(ref ecCreateUserInfo50Rpc + 76) = cbProperties;
		*(ref ecCreateUserInfo50Rpc + 80) = rgbProperties;
		return <Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.Execute(ref ecCreateUserInfo50Rpc);
	}

	// Token: 0x060000E8 RID: 232 RVA: 0x0000F398 File Offset: 0x0000E798
	internal unsafe static EcReadUserInfo50Rpc* {ctor}(EcReadUserInfo50Rpc* A_0, void* hBinding, _GUID* pguidMdb, _GUID* pguidUserInfo, uint ulFlags, uint cptag, uint* rgptag, uint* pcbResult, byte** prgbResult, uint cbAuxIn, byte* rgbAuxIn, uint* pcbAuxOut, byte** prgbAuxOut)
	{
		IntPtr admin50IntfHandle = AdminRpcServerBase.Admin50IntfHandle;
		*A_0 = ref <Module>.??_7AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 40L) = admin50IntfHandle;
		*(A_0 + 48L) = hBinding;
		*(A_0 + 8L) = cbAuxIn;
		*(A_0 + 16L) = rgbAuxIn;
		*(A_0 + 24L) = pcbAuxOut;
		*(A_0 + 32L) = prgbAuxOut;
		*A_0 = ref <Module>.??_7EcReadUserInfo50Rpc@@6B@ + 8;
		*(A_0 + 56L) = pguidMdb;
		*(A_0 + 64L) = pguidUserInfo;
		*(A_0 + 72L) = ulFlags;
		*(A_0 + 76L) = cptag;
		*(A_0 + 80L) = rgptag;
		*(A_0 + 88L) = pcbResult;
		*(A_0 + 96L) = prgbResult;
		return A_0;
	}

	// Token: 0x060000E9 RID: 233 RVA: 0x0000C7BC File Offset: 0x0000BBBC
	internal unsafe static int EcDispatchCall(EcReadUserInfo50Rpc* A_0, IAdminRpcServer server, ClientSecurityContext callerSecurityContext, byte[] auxiliaryIn, out byte[] auxiliaryOut)
	{
		int num = 0;
		bool flag = false;
		try
		{
			Guid mdbGuid = <Module>.FromGUID(*(A_0 + 56L));
			Guid userInfoGuid = <Module>.FromGUID(*(A_0 + 64L));
			uint[] propertyTags = <Module>.UToMUInt32s((uint)(*(A_0 + 76L)), *(A_0 + 80L));
			ArraySegment<byte> arraySegment = default(ArraySegment<byte>);
			num = server.EcReadUserInfo50(callerSecurityContext, mdbGuid, userInfoGuid, (uint)(*(A_0 + 72L)), propertyTags, out arraySegment, auxiliaryIn, out auxiliaryOut);
			if (0 == num)
			{
				num = <Module>.MToUBytesN(arraySegment.Array, arraySegment.Count, *(A_0 + 96L));
				if (0 != num)
				{
					return num;
				}
				int count = arraySegment.Count;
				*(*(A_0 + 88L)) = count;
				BufferPoolCollection.BufferSize bufferSize;
				if (BufferPoolCollection.AutoCleanupCollection.TryMatchBufferSize(arraySegment.Array.Length, out bufferSize))
				{
					BufferPool bufferPool = BufferPoolCollection.AutoCleanupCollection.Acquire(bufferSize);
					int num2 = arraySegment.Array.Length;
					if (bufferPool.BufferSize == num2)
					{
						bufferPool.Release(arraySegment.Array);
					}
				}
				flag = true;
			}
		}
		finally
		{
			if (!flag)
			{
				*(*(A_0 + 88L)) = 0;
				EcReadUserInfo50Rpc* ptr = A_0 + 96L;
				ulong num3 = (ulong)(*(*ptr));
				if (0UL != num3)
				{
					<Module>.MIDL_user_free(num3);
					*(*ptr) = 0L;
				}
			}
		}
		return num;
	}

	// Token: 0x060000EA RID: 234 RVA: 0x0000C8F4 File Offset: 0x0000BCF4
	internal unsafe static int EcValidateParameters(EcReadUserInfo50Rpc* A_0)
	{
		int result = 0;
		if (*(A_0 + 56L) == 0L || *(A_0 + 64L) == 0L || *(A_0 + 76L) == 0 || *(A_0 + 80L) == 0L || *(A_0 + 88L) == 0L || *(A_0 + 96L) == 0L)
		{
			result = -2147024809;
		}
		return result;
	}

	// Token: 0x060000EB RID: 235 RVA: 0x0000F428 File Offset: 0x0000E828
	internal unsafe static int EcReadUserInfo50_Managed(void* hBinding, _GUID* pguidMdb, _GUID* pguidUserInfo, uint ulFlags, uint cptag, uint* rgptag, uint* pcbResult, byte** prgbResult, uint cbAuxIn, byte* rgbAuxIn, uint* pcbAuxOut, byte** prgbAuxOut)
	{
		IntPtr admin50IntfHandle = AdminRpcServerBase.Admin50IntfHandle;
		EcReadUserInfo50Rpc ecReadUserInfo50Rpc;
		*(ref ecReadUserInfo50Rpc + 40) = admin50IntfHandle;
		*(ref ecReadUserInfo50Rpc + 48) = hBinding;
		*(ref ecReadUserInfo50Rpc + 8) = cbAuxIn;
		*(ref ecReadUserInfo50Rpc + 16) = rgbAuxIn;
		*(ref ecReadUserInfo50Rpc + 24) = pcbAuxOut;
		*(ref ecReadUserInfo50Rpc + 32) = prgbAuxOut;
		ecReadUserInfo50Rpc = ref <Module>.??_7EcReadUserInfo50Rpc@@6B@ + 8;
		*(ref ecReadUserInfo50Rpc + 56) = pguidMdb;
		*(ref ecReadUserInfo50Rpc + 64) = pguidUserInfo;
		*(ref ecReadUserInfo50Rpc + 72) = ulFlags;
		*(ref ecReadUserInfo50Rpc + 76) = cptag;
		*(ref ecReadUserInfo50Rpc + 80) = rgptag;
		*(ref ecReadUserInfo50Rpc + 88) = pcbResult;
		*(ref ecReadUserInfo50Rpc + 96) = prgbResult;
		return <Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.Execute(ref ecReadUserInfo50Rpc);
	}

	// Token: 0x060000EC RID: 236 RVA: 0x0000F4B4 File Offset: 0x0000E8B4
	internal unsafe static EcUpdateUserInfo50Rpc* {ctor}(EcUpdateUserInfo50Rpc* A_0, void* hBinding, _GUID* pguidMdb, _GUID* pguidUserInfo, uint ulFlags, uint cbProperties, byte* rgbProperties, uint cptagDelete, uint* rgptagDelete, uint cbAuxIn, byte* rgbAuxIn, uint* pcbAuxOut, byte** prgbAuxOut)
	{
		IntPtr admin50IntfHandle = AdminRpcServerBase.Admin50IntfHandle;
		*A_0 = ref <Module>.??_7AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 40L) = admin50IntfHandle;
		*(A_0 + 48L) = hBinding;
		*(A_0 + 8L) = cbAuxIn;
		*(A_0 + 16L) = rgbAuxIn;
		*(A_0 + 24L) = pcbAuxOut;
		*(A_0 + 32L) = prgbAuxOut;
		*A_0 = ref <Module>.??_7EcUpdateUserInfo50Rpc@@6B@ + 8;
		*(A_0 + 56L) = pguidMdb;
		*(A_0 + 64L) = pguidUserInfo;
		*(A_0 + 72L) = ulFlags;
		*(A_0 + 76L) = cbProperties;
		*(A_0 + 80L) = rgbProperties;
		*(A_0 + 88L) = cptagDelete;
		*(A_0 + 96L) = rgptagDelete;
		return A_0;
	}

	// Token: 0x060000ED RID: 237 RVA: 0x0000C93C File Offset: 0x0000BD3C
	internal unsafe static int EcDispatchCall(EcUpdateUserInfo50Rpc* A_0, IAdminRpcServer server, ClientSecurityContext callerSecurityContext, byte[] auxiliaryIn, out byte[] auxiliaryOut)
	{
		Guid mdbGuid = <Module>.FromGUID(*(A_0 + 56L));
		Guid userInfoGuid = <Module>.FromGUID(*(A_0 + 64L));
		byte[] properties = <Module>.UToMBytes(*(A_0 + 76L), *(A_0 + 80L));
		uint[] deletePropertyTags = <Module>.UToMUInt32s((uint)(*(A_0 + 88L)), *(A_0 + 96L));
		return server.EcUpdateUserInfo50(callerSecurityContext, mdbGuid, userInfoGuid, (uint)(*(A_0 + 72L)), properties, deletePropertyTags, auxiliaryIn, out auxiliaryOut);
	}

	// Token: 0x060000EE RID: 238 RVA: 0x0000C99C File Offset: 0x0000BD9C
	internal unsafe static int EcValidateParameters(EcUpdateUserInfo50Rpc* A_0)
	{
		int result = 0;
		if (*(A_0 + 56L) == 0L || *(A_0 + 64L) == 0L)
		{
			result = -2147024809;
		}
		return result;
	}

	// Token: 0x060000EF RID: 239 RVA: 0x0000F544 File Offset: 0x0000E944
	internal unsafe static int EcUpdateUserInfo50_Managed(void* hBinding, _GUID* pguidMdb, _GUID* pguidUserInfo, uint ulFlags, uint cbProperties, byte* rgbProperties, uint cptagDelete, uint* rgptagDelete, uint cbAuxIn, byte* rgbAuxIn, uint* pcbAuxOut, byte** prgbAuxOut)
	{
		IntPtr admin50IntfHandle = AdminRpcServerBase.Admin50IntfHandle;
		EcUpdateUserInfo50Rpc ecUpdateUserInfo50Rpc;
		*(ref ecUpdateUserInfo50Rpc + 40) = admin50IntfHandle;
		*(ref ecUpdateUserInfo50Rpc + 48) = hBinding;
		*(ref ecUpdateUserInfo50Rpc + 8) = cbAuxIn;
		*(ref ecUpdateUserInfo50Rpc + 16) = rgbAuxIn;
		*(ref ecUpdateUserInfo50Rpc + 24) = pcbAuxOut;
		*(ref ecUpdateUserInfo50Rpc + 32) = prgbAuxOut;
		ecUpdateUserInfo50Rpc = ref <Module>.??_7EcUpdateUserInfo50Rpc@@6B@ + 8;
		*(ref ecUpdateUserInfo50Rpc + 56) = pguidMdb;
		*(ref ecUpdateUserInfo50Rpc + 64) = pguidUserInfo;
		*(ref ecUpdateUserInfo50Rpc + 72) = ulFlags;
		*(ref ecUpdateUserInfo50Rpc + 76) = cbProperties;
		*(ref ecUpdateUserInfo50Rpc + 80) = rgbProperties;
		*(ref ecUpdateUserInfo50Rpc + 88) = cptagDelete;
		*(ref ecUpdateUserInfo50Rpc + 96) = rgptagDelete;
		return <Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.Execute(ref ecUpdateUserInfo50Rpc);
	}

	// Token: 0x060000F0 RID: 240 RVA: 0x0000F5D0 File Offset: 0x0000E9D0
	internal unsafe static EcDeleteUserInfo50Rpc* {ctor}(EcDeleteUserInfo50Rpc* A_0, void* hBinding, _GUID* pguidMdb, _GUID* pguidUserInfo, uint ulFlags, uint cbAuxIn, byte* rgbAuxIn, uint* pcbAuxOut, byte** prgbAuxOut)
	{
		IntPtr admin50IntfHandle = AdminRpcServerBase.Admin50IntfHandle;
		*A_0 = ref <Module>.??_7AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 40L) = admin50IntfHandle;
		*(A_0 + 48L) = hBinding;
		*(A_0 + 8L) = cbAuxIn;
		*(A_0 + 16L) = rgbAuxIn;
		*(A_0 + 24L) = pcbAuxOut;
		*(A_0 + 32L) = prgbAuxOut;
		*A_0 = ref <Module>.??_7EcDeleteUserInfo50Rpc@@6B@ + 8;
		*(A_0 + 56L) = pguidMdb;
		*(A_0 + 64L) = pguidUserInfo;
		*(A_0 + 72L) = ulFlags;
		return A_0;
	}

	// Token: 0x060000F1 RID: 241 RVA: 0x0000C9C4 File Offset: 0x0000BDC4
	internal unsafe static int EcDispatchCall(EcDeleteUserInfo50Rpc* A_0, IAdminRpcServer server, ClientSecurityContext callerSecurityContext, byte[] auxiliaryIn, out byte[] auxiliaryOut)
	{
		Guid mdbGuid = <Module>.FromGUID(*(A_0 + 56L));
		Guid userInfoGuid = <Module>.FromGUID(*(A_0 + 64L));
		return server.EcDeleteUserInfo50(callerSecurityContext, mdbGuid, userInfoGuid, (uint)(*(A_0 + 72L)), auxiliaryIn, out auxiliaryOut);
	}

	// Token: 0x060000F2 RID: 242 RVA: 0x0000C9FC File Offset: 0x0000BDFC
	internal unsafe static int EcValidateParameters(EcDeleteUserInfo50Rpc* A_0)
	{
		int result = 0;
		if (*(A_0 + 56L) == 0L || *(A_0 + 64L) == 0L)
		{
			result = -2147024809;
		}
		return result;
	}

	// Token: 0x060000F3 RID: 243 RVA: 0x0000F640 File Offset: 0x0000EA40
	internal unsafe static int EcDeleteUserInfo50_Managed(void* hBinding, _GUID* pguidMdb, _GUID* pguidUserInfo, uint ulFlags, uint cbAuxIn, byte* rgbAuxIn, uint* pcbAuxOut, byte** prgbAuxOut)
	{
		IntPtr admin50IntfHandle = AdminRpcServerBase.Admin50IntfHandle;
		EcDeleteUserInfo50Rpc ecDeleteUserInfo50Rpc;
		*(ref ecDeleteUserInfo50Rpc + 40) = admin50IntfHandle;
		*(ref ecDeleteUserInfo50Rpc + 48) = hBinding;
		*(ref ecDeleteUserInfo50Rpc + 8) = cbAuxIn;
		*(ref ecDeleteUserInfo50Rpc + 16) = rgbAuxIn;
		*(ref ecDeleteUserInfo50Rpc + 24) = pcbAuxOut;
		*(ref ecDeleteUserInfo50Rpc + 32) = prgbAuxOut;
		ecDeleteUserInfo50Rpc = ref <Module>.??_7EcDeleteUserInfo50Rpc@@6B@ + 8;
		*(ref ecDeleteUserInfo50Rpc + 56) = pguidMdb;
		*(ref ecDeleteUserInfo50Rpc + 64) = pguidUserInfo;
		*(ref ecDeleteUserInfo50Rpc + 72) = ulFlags;
		return <Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.Execute(ref ecDeleteUserInfo50Rpc);
	}

	// Token: 0x060000F4 RID: 244 RVA: 0x00068198 File Offset: 0x00067598
	internal unsafe static void ??__E??_7AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@6B@@@YMXXZ()
	{
		<Module>.??_7AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@6B@ = ref <Module>.??_R4AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@6B@;
		*(ref <Module>.??_7AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@6B@ + 8) = <Module>.__unep@?InternalExecute@AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@$$FUEAAJXZ;
		*(ref <Module>.??_7AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@6B@ + 16) = <Module>.__unep@?EcValidateParameters@AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@$$FMEAAJXZ;
		*(ref <Module>.??_7AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@6B@ + 24) = (long)ldftn(_purecall);
	}

	// Token: 0x060000F5 RID: 245 RVA: 0x000681DC File Offset: 0x000675DC
	internal unsafe static void ??__E??_7EcReadMdbEvents50Rpc@@6B@@@YMXXZ()
	{
		<Module>.??_7EcReadMdbEvents50Rpc@@6B@ = ref <Module>.??_R4EcReadMdbEvents50Rpc@@6B@;
		*(ref <Module>.??_7EcReadMdbEvents50Rpc@@6B@ + 8) = <Module>.__unep@?InternalExecute@AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcReadMdbEvents50Rpc@@6B@ + 16) = <Module>.__unep@?EcValidateParameters@EcReadMdbEvents50Rpc@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcReadMdbEvents50Rpc@@6B@ + 24) = (long)ldftn(EcReadMdbEvents50Rpc.EcDispatchCall);
	}

	// Token: 0x060000F6 RID: 246 RVA: 0x00068220 File Offset: 0x00067620
	internal unsafe static void ??__E??_7EcSyncMailboxWithDS50Rpc@@6B@@@YMXXZ()
	{
		<Module>.??_7EcSyncMailboxWithDS50Rpc@@6B@ = ref <Module>.??_R4EcSyncMailboxWithDS50Rpc@@6B@;
		*(ref <Module>.??_7EcSyncMailboxWithDS50Rpc@@6B@ + 8) = <Module>.__unep@?InternalExecute@AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcSyncMailboxWithDS50Rpc@@6B@ + 16) = <Module>.__unep@?EcValidateParameters@EcSyncMailboxWithDS50Rpc@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcSyncMailboxWithDS50Rpc@@6B@ + 24) = (long)ldftn(EcSyncMailboxWithDS50Rpc.EcDispatchCall);
	}

	// Token: 0x060000F7 RID: 247 RVA: 0x00068264 File Offset: 0x00067664
	internal unsafe static void ??__E??_7EcDeleteMdbWatermarksForConsumer50Rpc@@6B@@@YMXXZ()
	{
		<Module>.??_7EcDeleteMdbWatermarksForConsumer50Rpc@@6B@ = ref <Module>.??_R4EcDeleteMdbWatermarksForConsumer50Rpc@@6B@;
		*(ref <Module>.??_7EcDeleteMdbWatermarksForConsumer50Rpc@@6B@ + 8) = <Module>.__unep@?InternalExecute@AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcDeleteMdbWatermarksForConsumer50Rpc@@6B@ + 16) = <Module>.__unep@?EcValidateParameters@EcDeleteMdbWatermarksForConsumer50Rpc@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcDeleteMdbWatermarksForConsumer50Rpc@@6B@ + 24) = (long)ldftn(EcDeleteMdbWatermarksForConsumer50Rpc.EcDispatchCall);
	}

	// Token: 0x060000F8 RID: 248 RVA: 0x000682A8 File Offset: 0x000676A8
	internal unsafe static void ??__E??_7EcDeleteMdbWatermarksForMailbox50Rpc@@6B@@@YMXXZ()
	{
		<Module>.??_7EcDeleteMdbWatermarksForMailbox50Rpc@@6B@ = ref <Module>.??_R4EcDeleteMdbWatermarksForMailbox50Rpc@@6B@;
		*(ref <Module>.??_7EcDeleteMdbWatermarksForMailbox50Rpc@@6B@ + 8) = <Module>.__unep@?InternalExecute@AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcDeleteMdbWatermarksForMailbox50Rpc@@6B@ + 16) = <Module>.__unep@?EcValidateParameters@EcDeleteMdbWatermarksForMailbox50Rpc@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcDeleteMdbWatermarksForMailbox50Rpc@@6B@ + 24) = (long)ldftn(EcDeleteMdbWatermarksForMailbox50Rpc.EcDispatchCall);
	}

	// Token: 0x060000F9 RID: 249 RVA: 0x000682EC File Offset: 0x000676EC
	internal unsafe static void ??__E??_7EcSaveMdbWatermarks50Rpc@@6B@@@YMXXZ()
	{
		<Module>.??_7EcSaveMdbWatermarks50Rpc@@6B@ = ref <Module>.??_R4EcSaveMdbWatermarks50Rpc@@6B@;
		*(ref <Module>.??_7EcSaveMdbWatermarks50Rpc@@6B@ + 8) = <Module>.__unep@?InternalExecute@AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcSaveMdbWatermarks50Rpc@@6B@ + 16) = <Module>.__unep@?EcValidateParameters@EcSaveMdbWatermarks50Rpc@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcSaveMdbWatermarks50Rpc@@6B@ + 24) = (long)ldftn(EcSaveMdbWatermarks50Rpc.EcDispatchCall);
	}

	// Token: 0x060000FA RID: 250 RVA: 0x00068330 File Offset: 0x00067730
	internal unsafe static void ??__E??_7EcGetMdbWatermarksForConsumer50Rpc@@6B@@@YMXXZ()
	{
		<Module>.??_7EcGetMdbWatermarksForConsumer50Rpc@@6B@ = ref <Module>.??_R4EcGetMdbWatermarksForConsumer50Rpc@@6B@;
		*(ref <Module>.??_7EcGetMdbWatermarksForConsumer50Rpc@@6B@ + 8) = <Module>.__unep@?InternalExecute@AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcGetMdbWatermarksForConsumer50Rpc@@6B@ + 16) = <Module>.__unep@?EcValidateParameters@EcGetMdbWatermarksForConsumer50Rpc@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcGetMdbWatermarksForConsumer50Rpc@@6B@ + 24) = (long)ldftn(EcGetMdbWatermarksForConsumer50Rpc.EcDispatchCall);
	}

	// Token: 0x060000FB RID: 251 RVA: 0x00068374 File Offset: 0x00067774
	internal unsafe static void ??__E??_7EcWriteMdbEvents50Rpc@@6B@@@YMXXZ()
	{
		<Module>.??_7EcWriteMdbEvents50Rpc@@6B@ = ref <Module>.??_R4EcWriteMdbEvents50Rpc@@6B@;
		*(ref <Module>.??_7EcWriteMdbEvents50Rpc@@6B@ + 8) = <Module>.__unep@?InternalExecute@AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcWriteMdbEvents50Rpc@@6B@ + 16) = <Module>.__unep@?EcValidateParameters@EcWriteMdbEvents50Rpc@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcWriteMdbEvents50Rpc@@6B@ + 24) = (long)ldftn(EcWriteMdbEvents50Rpc.EcDispatchCall);
	}

	// Token: 0x060000FC RID: 252 RVA: 0x000683B8 File Offset: 0x000677B8
	internal unsafe static void ??__E??_7EcGetMdbWatermarksForMailbox50Rpc@@6B@@@YMXXZ()
	{
		<Module>.??_7EcGetMdbWatermarksForMailbox50Rpc@@6B@ = ref <Module>.??_R4EcGetMdbWatermarksForMailbox50Rpc@@6B@;
		*(ref <Module>.??_7EcGetMdbWatermarksForMailbox50Rpc@@6B@ + 8) = <Module>.__unep@?InternalExecute@AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcGetMdbWatermarksForMailbox50Rpc@@6B@ + 16) = <Module>.__unep@?EcValidateParameters@EcGetMdbWatermarksForMailbox50Rpc@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcGetMdbWatermarksForMailbox50Rpc@@6B@ + 24) = (long)ldftn(EcGetMdbWatermarksForMailbox50Rpc.EcDispatchCall);
	}

	// Token: 0x060000FD RID: 253 RVA: 0x000683FC File Offset: 0x000677FC
	internal unsafe static void ??__E??_7EcDoMaintenanceTask50Rpc@@6B@@@YMXXZ()
	{
		<Module>.??_7EcDoMaintenanceTask50Rpc@@6B@ = ref <Module>.??_R4EcDoMaintenanceTask50Rpc@@6B@;
		*(ref <Module>.??_7EcDoMaintenanceTask50Rpc@@6B@ + 8) = <Module>.__unep@?InternalExecute@AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcDoMaintenanceTask50Rpc@@6B@ + 16) = <Module>.__unep@?EcValidateParameters@EcDoMaintenanceTask50Rpc@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcDoMaintenanceTask50Rpc@@6B@ + 24) = (long)ldftn(EcDoMaintenanceTask50Rpc.EcDispatchCall);
	}

	// Token: 0x060000FE RID: 254 RVA: 0x00068440 File Offset: 0x00067840
	internal unsafe static void ??__E??_7EcGetLastBackupInfo50Rpc@@6B@@@YMXXZ()
	{
		<Module>.??_7EcGetLastBackupInfo50Rpc@@6B@ = ref <Module>.??_R4EcGetLastBackupInfo50Rpc@@6B@;
		*(ref <Module>.??_7EcGetLastBackupInfo50Rpc@@6B@ + 8) = <Module>.__unep@?InternalExecute@AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcGetLastBackupInfo50Rpc@@6B@ + 16) = <Module>.__unep@?EcValidateParameters@EcGetLastBackupInfo50Rpc@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcGetLastBackupInfo50Rpc@@6B@ + 24) = (long)ldftn(EcGetLastBackupInfo50Rpc.EcDispatchCall);
	}

	// Token: 0x060000FF RID: 255 RVA: 0x00068484 File Offset: 0x00067884
	internal unsafe static void ??__E??_7EcAdminGetMailboxTableEntry@@6B@@@YMXXZ()
	{
		<Module>.??_7EcAdminGetMailboxTableEntry@@6B@ = ref <Module>.??_R4EcAdminGetMailboxTableEntry@@6B@;
		*(ref <Module>.??_7EcAdminGetMailboxTableEntry@@6B@ + 8) = <Module>.__unep@?InternalExecute@AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcAdminGetMailboxTableEntry@@6B@ + 16) = <Module>.__unep@?EcValidateParameters@EcAdminGetMailboxTableEntry@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcAdminGetMailboxTableEntry@@6B@ + 24) = (long)ldftn(_purecall);
	}

	// Token: 0x06000100 RID: 256 RVA: 0x000684C8 File Offset: 0x000678C8
	internal unsafe static void ??__E??_7EcAdminGetMailboxTableEntry50Rpc@@6B@@@YMXXZ()
	{
		<Module>.??_7EcAdminGetMailboxTableEntry50Rpc@@6B@ = ref <Module>.??_R4EcAdminGetMailboxTableEntry50Rpc@@6B@;
		*(ref <Module>.??_7EcAdminGetMailboxTableEntry50Rpc@@6B@ + 8) = <Module>.__unep@?InternalExecute@AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcAdminGetMailboxTableEntry50Rpc@@6B@ + 16) = <Module>.__unep@?EcValidateParameters@EcAdminGetMailboxTableEntry@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcAdminGetMailboxTableEntry50Rpc@@6B@ + 24) = (long)ldftn(EcAdminGetMailboxTableEntry50Rpc.EcDispatchCall);
	}

	// Token: 0x06000101 RID: 257 RVA: 0x0006850C File Offset: 0x0006790C
	internal unsafe static void ??__E??_7EcAdminGetMailboxTableEntryFlags50Rpc@@6B@@@YMXXZ()
	{
		<Module>.??_7EcAdminGetMailboxTableEntryFlags50Rpc@@6B@ = ref <Module>.??_R4EcAdminGetMailboxTableEntryFlags50Rpc@@6B@;
		*(ref <Module>.??_7EcAdminGetMailboxTableEntryFlags50Rpc@@6B@ + 8) = <Module>.__unep@?InternalExecute@AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcAdminGetMailboxTableEntryFlags50Rpc@@6B@ + 16) = <Module>.__unep@?EcValidateParameters@EcAdminGetMailboxTableEntry@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcAdminGetMailboxTableEntryFlags50Rpc@@6B@ + 24) = (long)ldftn(EcAdminGetMailboxTableEntryFlags50Rpc.EcDispatchCall);
	}

	// Token: 0x06000102 RID: 258 RVA: 0x00068550 File Offset: 0x00067950
	internal unsafe static void ??__E??_7EcAdminGetFeatureVersion50Rpc@@6B@@@YMXXZ()
	{
		<Module>.??_7EcAdminGetFeatureVersion50Rpc@@6B@ = ref <Module>.??_R4EcAdminGetFeatureVersion50Rpc@@6B@;
		*(ref <Module>.??_7EcAdminGetFeatureVersion50Rpc@@6B@ + 8) = <Module>.__unep@?InternalExecute@AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcAdminGetFeatureVersion50Rpc@@6B@ + 16) = <Module>.__unep@?EcValidateParameters@EcAdminGetFeatureVersion50Rpc@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcAdminGetFeatureVersion50Rpc@@6B@ + 24) = (long)ldftn(EcAdminGetFeatureVersion50Rpc.EcDispatchCall);
	}

	// Token: 0x06000103 RID: 259 RVA: 0x00068594 File Offset: 0x00067994
	internal unsafe static void ??__E??_7EcAdminGetMailboxSignatureBasicInfo50Rpc@@6B@@@YMXXZ()
	{
		<Module>.??_7EcAdminGetMailboxSignatureBasicInfo50Rpc@@6B@ = ref <Module>.??_R4EcAdminGetMailboxSignatureBasicInfo50Rpc@@6B@;
		*(ref <Module>.??_7EcAdminGetMailboxSignatureBasicInfo50Rpc@@6B@ + 8) = <Module>.__unep@?InternalExecute@AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcAdminGetMailboxSignatureBasicInfo50Rpc@@6B@ + 16) = <Module>.__unep@?EcValidateParameters@EcAdminGetMailboxSignatureBasicInfo50Rpc@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcAdminGetMailboxSignatureBasicInfo50Rpc@@6B@ + 24) = (long)ldftn(EcAdminGetMailboxSignatureBasicInfo50Rpc.EcDispatchCall);
	}

	// Token: 0x06000104 RID: 260 RVA: 0x000685D8 File Offset: 0x000679D8
	internal unsafe static void ??__E??_7EcAdminGetResourceMonitorDigest50Rpc@@6B@@@YMXXZ()
	{
		<Module>.??_7EcAdminGetResourceMonitorDigest50Rpc@@6B@ = ref <Module>.??_R4EcAdminGetResourceMonitorDigest50Rpc@@6B@;
		*(ref <Module>.??_7EcAdminGetResourceMonitorDigest50Rpc@@6B@ + 8) = <Module>.__unep@?InternalExecute@AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcAdminGetResourceMonitorDigest50Rpc@@6B@ + 16) = <Module>.__unep@?EcValidateParameters@EcAdminGetResourceMonitorDigest50Rpc@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcAdminGetResourceMonitorDigest50Rpc@@6B@ + 24) = (long)ldftn(EcAdminGetResourceMonitorDigest50Rpc.EcDispatchCall);
	}

	// Token: 0x06000105 RID: 261 RVA: 0x0006861C File Offset: 0x00067A1C
	internal unsafe static void ??__E??_7EcGetDatabaseSizeEx50Rpc@@6B@@@YMXXZ()
	{
		<Module>.??_7EcGetDatabaseSizeEx50Rpc@@6B@ = ref <Module>.??_R4EcGetDatabaseSizeEx50Rpc@@6B@;
		*(ref <Module>.??_7EcGetDatabaseSizeEx50Rpc@@6B@ + 8) = <Module>.__unep@?InternalExecute@AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcGetDatabaseSizeEx50Rpc@@6B@ + 16) = <Module>.__unep@?EcValidateParameters@EcGetDatabaseSizeEx50Rpc@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcGetDatabaseSizeEx50Rpc@@6B@ + 24) = (long)ldftn(EcGetDatabaseSizeEx50Rpc.EcDispatchCall);
	}

	// Token: 0x06000106 RID: 262 RVA: 0x00068660 File Offset: 0x00067A60
	internal unsafe static void ??__E??_7EcAdminISIntegCheck50Rpc@@6B@@@YMXXZ()
	{
		<Module>.??_7EcAdminISIntegCheck50Rpc@@6B@ = ref <Module>.??_R4EcAdminISIntegCheck50Rpc@@6B@;
		*(ref <Module>.??_7EcAdminISIntegCheck50Rpc@@6B@ + 8) = <Module>.__unep@?InternalExecute@AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcAdminISIntegCheck50Rpc@@6B@ + 16) = <Module>.__unep@?EcValidateParameters@EcAdminISIntegCheck50Rpc@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcAdminISIntegCheck50Rpc@@6B@ + 24) = (long)ldftn(EcAdminISIntegCheck50Rpc.EcDispatchCall);
	}

	// Token: 0x06000107 RID: 263 RVA: 0x000686A4 File Offset: 0x00067AA4
	internal unsafe static void ??__E??_7EcAdminGetViewsTableEx50Rpc@@6B@@@YMXXZ()
	{
		<Module>.??_7EcAdminGetViewsTableEx50Rpc@@6B@ = ref <Module>.??_R4EcAdminGetViewsTableEx50Rpc@@6B@;
		*(ref <Module>.??_7EcAdminGetViewsTableEx50Rpc@@6B@ + 8) = <Module>.__unep@?InternalExecute@AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcAdminGetViewsTableEx50Rpc@@6B@ + 16) = <Module>.__unep@?EcValidateParameters@EcAdminGetViewsTableEx50Rpc@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcAdminGetViewsTableEx50Rpc@@6B@ + 24) = (long)ldftn(EcAdminGetViewsTableEx50Rpc.EcDispatchCall);
	}

	// Token: 0x06000108 RID: 264 RVA: 0x000686E8 File Offset: 0x00067AE8
	internal unsafe static void ??__E??_7EcAdminGetRestrictionTableEx50Rpc@@6B@@@YMXXZ()
	{
		<Module>.??_7EcAdminGetRestrictionTableEx50Rpc@@6B@ = ref <Module>.??_R4EcAdminGetRestrictionTableEx50Rpc@@6B@;
		*(ref <Module>.??_7EcAdminGetRestrictionTableEx50Rpc@@6B@ + 8) = <Module>.__unep@?InternalExecute@AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcAdminGetRestrictionTableEx50Rpc@@6B@ + 16) = <Module>.__unep@?EcValidateParameters@EcAdminGetRestrictionTableEx50Rpc@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcAdminGetRestrictionTableEx50Rpc@@6B@ + 24) = (long)ldftn(EcAdminGetRestrictionTableEx50Rpc.EcDispatchCall);
	}

	// Token: 0x06000109 RID: 265 RVA: 0x0006872C File Offset: 0x00067B2C
	internal unsafe static void ??__E??_7EcAdminExecuteTask50Rpc@@6B@@@YMXXZ()
	{
		<Module>.??_7EcAdminExecuteTask50Rpc@@6B@ = ref <Module>.??_R4EcAdminExecuteTask50Rpc@@6B@;
		*(ref <Module>.??_7EcAdminExecuteTask50Rpc@@6B@ + 8) = <Module>.__unep@?InternalExecute@AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcAdminExecuteTask50Rpc@@6B@ + 16) = <Module>.__unep@?EcValidateParameters@EcAdminExecuteTask50Rpc@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcAdminExecuteTask50Rpc@@6B@ + 24) = (long)ldftn(EcAdminExecuteTask50Rpc.EcDispatchCall);
	}

	// Token: 0x0600010A RID: 266 RVA: 0x00068770 File Offset: 0x00067B70
	internal unsafe static void ??__E??_7EcStartBlockModeReplicationToPassive50Rpc@@6B@@@YMXXZ()
	{
		<Module>.??_7EcStartBlockModeReplicationToPassive50Rpc@@6B@ = ref <Module>.??_R4EcStartBlockModeReplicationToPassive50Rpc@@6B@;
		*(ref <Module>.??_7EcStartBlockModeReplicationToPassive50Rpc@@6B@ + 8) = <Module>.__unep@?InternalExecute@AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcStartBlockModeReplicationToPassive50Rpc@@6B@ + 16) = <Module>.__unep@?EcValidateParameters@EcStartBlockModeReplicationToPassive50Rpc@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcStartBlockModeReplicationToPassive50Rpc@@6B@ + 24) = (long)ldftn(EcStartBlockModeReplicationToPassive50Rpc.EcDispatchCall);
	}

	// Token: 0x0600010B RID: 267 RVA: 0x000687B4 File Offset: 0x00067BB4
	internal unsafe static void ??__E??_7EcMultiMailboxSearchRpc@@6B@@@YMXXZ()
	{
		<Module>.??_7EcMultiMailboxSearchRpc@@6B@ = ref <Module>.??_R4EcMultiMailboxSearchRpc@@6B@;
		*(ref <Module>.??_7EcMultiMailboxSearchRpc@@6B@ + 8) = <Module>.__unep@?InternalExecute@AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcMultiMailboxSearchRpc@@6B@ + 16) = <Module>.__unep@?EcValidateParameters@EcMultiMailboxSearchRpc@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcMultiMailboxSearchRpc@@6B@ + 24) = (long)ldftn(EcMultiMailboxSearchRpc.EcDispatchCall);
	}

	// Token: 0x0600010C RID: 268 RVA: 0x000687F8 File Offset: 0x00067BF8
	internal unsafe static void ??__E??_7EcGetMultiMailboxSearchKeywordStatsRpc@@6B@@@YMXXZ()
	{
		<Module>.??_7EcGetMultiMailboxSearchKeywordStatsRpc@@6B@ = ref <Module>.??_R4EcGetMultiMailboxSearchKeywordStatsRpc@@6B@;
		*(ref <Module>.??_7EcGetMultiMailboxSearchKeywordStatsRpc@@6B@ + 8) = <Module>.__unep@?InternalExecute@AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcGetMultiMailboxSearchKeywordStatsRpc@@6B@ + 16) = <Module>.__unep@?EcValidateParameters@EcGetMultiMailboxSearchKeywordStatsRpc@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcGetMultiMailboxSearchKeywordStatsRpc@@6B@ + 24) = (long)ldftn(EcGetMultiMailboxSearchKeywordStatsRpc.EcDispatchCall);
	}

	// Token: 0x0600010D RID: 269 RVA: 0x0006883C File Offset: 0x00067C3C
	internal unsafe static void ??__E??_7EcAdminGetDatabaseProcessInfo50Rpc@@6B@@@YMXXZ()
	{
		<Module>.??_7EcAdminGetDatabaseProcessInfo50Rpc@@6B@ = ref <Module>.??_R4EcAdminGetDatabaseProcessInfo50Rpc@@6B@;
		*(ref <Module>.??_7EcAdminGetDatabaseProcessInfo50Rpc@@6B@ + 8) = <Module>.__unep@?InternalExecute@AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcAdminGetDatabaseProcessInfo50Rpc@@6B@ + 16) = <Module>.__unep@?EcValidateParameters@EcAdminGetDatabaseProcessInfo50Rpc@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcAdminGetDatabaseProcessInfo50Rpc@@6B@ + 24) = (long)ldftn(EcAdminGetDatabaseProcessInfo50Rpc.EcDispatchCall);
	}

	// Token: 0x0600010E RID: 270 RVA: 0x00068880 File Offset: 0x00067C80
	internal unsafe static void ??__E??_7EcAdminProcessSnapshotOperation50Rpc@@6B@@@YMXXZ()
	{
		<Module>.??_7EcAdminProcessSnapshotOperation50Rpc@@6B@ = ref <Module>.??_R4EcAdminProcessSnapshotOperation50Rpc@@6B@;
		*(ref <Module>.??_7EcAdminProcessSnapshotOperation50Rpc@@6B@ + 8) = <Module>.__unep@?InternalExecute@AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcAdminProcessSnapshotOperation50Rpc@@6B@ + 16) = <Module>.__unep@?EcValidateParameters@EcAdminProcessSnapshotOperation50Rpc@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcAdminProcessSnapshotOperation50Rpc@@6B@ + 24) = (long)ldftn(EcAdminProcessSnapshotOperation50Rpc.EcDispatchCall);
	}

	// Token: 0x0600010F RID: 271 RVA: 0x000688C4 File Offset: 0x00067CC4
	internal unsafe static void ??__E??_7EcAdminGetPhysicalDatabaseInformation50Rpc@@6B@@@YMXXZ()
	{
		<Module>.??_7EcAdminGetPhysicalDatabaseInformation50Rpc@@6B@ = ref <Module>.??_R4EcAdminGetPhysicalDatabaseInformation50Rpc@@6B@;
		*(ref <Module>.??_7EcAdminGetPhysicalDatabaseInformation50Rpc@@6B@ + 8) = <Module>.__unep@?InternalExecute@AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcAdminGetPhysicalDatabaseInformation50Rpc@@6B@ + 16) = <Module>.__unep@?EcValidateParameters@EcAdminGetPhysicalDatabaseInformation50Rpc@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcAdminGetPhysicalDatabaseInformation50Rpc@@6B@ + 24) = (long)ldftn(EcAdminGetPhysicalDatabaseInformation50Rpc.EcDispatchCall);
	}

	// Token: 0x06000110 RID: 272 RVA: 0x00068908 File Offset: 0x00067D08
	internal unsafe static void ??__E??_7EcAdminPrePopulateCacheEx50Rpc@@6B@@@YMXXZ()
	{
		<Module>.??_7EcAdminPrePopulateCacheEx50Rpc@@6B@ = ref <Module>.??_R4EcAdminPrePopulateCacheEx50Rpc@@6B@;
		*(ref <Module>.??_7EcAdminPrePopulateCacheEx50Rpc@@6B@ + 8) = <Module>.__unep@?InternalExecute@AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcAdminPrePopulateCacheEx50Rpc@@6B@ + 16) = <Module>.__unep@?EcValidateParameters@EcAdminPrePopulateCacheEx50Rpc@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcAdminPrePopulateCacheEx50Rpc@@6B@ + 24) = (long)ldftn(EcAdminPrePopulateCacheEx50Rpc.EcDispatchCall);
	}

	// Token: 0x06000111 RID: 273 RVA: 0x0006894C File Offset: 0x00067D4C
	internal unsafe static void ??__E??_7EcForceNewLog50Rpc@@6B@@@YMXXZ()
	{
		<Module>.??_7EcForceNewLog50Rpc@@6B@ = ref <Module>.??_R4EcForceNewLog50Rpc@@6B@;
		*(ref <Module>.??_7EcForceNewLog50Rpc@@6B@ + 8) = <Module>.__unep@?InternalExecute@AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcForceNewLog50Rpc@@6B@ + 16) = <Module>.__unep@?EcValidateParameters@EcForceNewLog50Rpc@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcForceNewLog50Rpc@@6B@ + 24) = (long)ldftn(EcForceNewLog50Rpc.EcDispatchCall);
	}

	// Token: 0x06000112 RID: 274 RVA: 0x00068990 File Offset: 0x00067D90
	internal unsafe static void ??__E??_7EcAdminIntegrityCheckEx50Rpc@@6B@@@YMXXZ()
	{
		<Module>.??_7EcAdminIntegrityCheckEx50Rpc@@6B@ = ref <Module>.??_R4EcAdminIntegrityCheckEx50Rpc@@6B@;
		*(ref <Module>.??_7EcAdminIntegrityCheckEx50Rpc@@6B@ + 8) = <Module>.__unep@?InternalExecute@AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcAdminIntegrityCheckEx50Rpc@@6B@ + 16) = <Module>.__unep@?EcValidateParameters@EcAdminIntegrityCheckEx50Rpc@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcAdminIntegrityCheckEx50Rpc@@6B@ + 24) = (long)ldftn(EcAdminIntegrityCheckEx50Rpc.EcDispatchCall);
	}

	// Token: 0x06000113 RID: 275 RVA: 0x000689D4 File Offset: 0x00067DD4
	internal unsafe static void ??__E??_7EcCreateUserInfo50Rpc@@6B@@@YMXXZ()
	{
		<Module>.??_7EcCreateUserInfo50Rpc@@6B@ = ref <Module>.??_R4EcCreateUserInfo50Rpc@@6B@;
		*(ref <Module>.??_7EcCreateUserInfo50Rpc@@6B@ + 8) = <Module>.__unep@?InternalExecute@AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcCreateUserInfo50Rpc@@6B@ + 16) = <Module>.__unep@?EcValidateParameters@EcCreateUserInfo50Rpc@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcCreateUserInfo50Rpc@@6B@ + 24) = (long)ldftn(EcCreateUserInfo50Rpc.EcDispatchCall);
	}

	// Token: 0x06000114 RID: 276 RVA: 0x00068A18 File Offset: 0x00067E18
	internal unsafe static void ??__E??_7EcReadUserInfo50Rpc@@6B@@@YMXXZ()
	{
		<Module>.??_7EcReadUserInfo50Rpc@@6B@ = ref <Module>.??_R4EcReadUserInfo50Rpc@@6B@;
		*(ref <Module>.??_7EcReadUserInfo50Rpc@@6B@ + 8) = <Module>.__unep@?InternalExecute@AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcReadUserInfo50Rpc@@6B@ + 16) = <Module>.__unep@?EcValidateParameters@EcReadUserInfo50Rpc@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcReadUserInfo50Rpc@@6B@ + 24) = (long)ldftn(EcReadUserInfo50Rpc.EcDispatchCall);
	}

	// Token: 0x06000115 RID: 277 RVA: 0x00068A5C File Offset: 0x00067E5C
	internal unsafe static void ??__E??_7EcUpdateUserInfo50Rpc@@6B@@@YMXXZ()
	{
		<Module>.??_7EcUpdateUserInfo50Rpc@@6B@ = ref <Module>.??_R4EcUpdateUserInfo50Rpc@@6B@;
		*(ref <Module>.??_7EcUpdateUserInfo50Rpc@@6B@ + 8) = <Module>.__unep@?InternalExecute@AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcUpdateUserInfo50Rpc@@6B@ + 16) = <Module>.__unep@?EcValidateParameters@EcUpdateUserInfo50Rpc@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcUpdateUserInfo50Rpc@@6B@ + 24) = (long)ldftn(EcUpdateUserInfo50Rpc.EcDispatchCall);
	}

	// Token: 0x06000116 RID: 278 RVA: 0x00068AA0 File Offset: 0x00067EA0
	internal unsafe static void ??__E??_7EcDeleteUserInfo50Rpc@@6B@@@YMXXZ()
	{
		<Module>.??_7EcDeleteUserInfo50Rpc@@6B@ = ref <Module>.??_R4EcDeleteUserInfo50Rpc@@6B@;
		*(ref <Module>.??_7EcDeleteUserInfo50Rpc@@6B@ + 8) = <Module>.__unep@?InternalExecute@AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcDeleteUserInfo50Rpc@@6B@ + 16) = <Module>.__unep@?EcValidateParameters@EcDeleteUserInfo50Rpc@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcDeleteUserInfo50Rpc@@6B@ + 24) = (long)ldftn(EcDeleteUserInfo50Rpc.EcDispatchCall);
	}

	// Token: 0x06000117 RID: 279 RVA: 0x0000AAB8 File Offset: 0x00009EB8
	internal unsafe static _GUID GUIDFromGuid(ValueType guid)
	{
		byte[] array = ((Guid)guid).ToByteArray();
		int num = 0;
		int num2 = array.Length;
		_GUID result;
		if (0 < num2)
		{
			_GUID* ptr = &result;
			do
			{
				*(byte*)ptr = array[num];
				num++;
				ptr += 1L / (long)sizeof(_GUID);
			}
			while (num < num2);
		}
		return result;
	}

	// Token: 0x06000118 RID: 280 RVA: 0x000105FC File Offset: 0x0000F9FC
	internal unsafe static uint[] UToMUInt32s(uint c, uint* rg)
	{
		if (rg != null && c != 0U)
		{
			uint[] array = new uint[c];
			ref uint uint32& = ref array[0];
			ulong num = (ulong)c * 4UL;
			<Module>.memcpy_s(ref uint32&, num, (void*)rg, num);
			return array;
		}
		return null;
	}

	// Token: 0x06000119 RID: 281 RVA: 0x00010634 File Offset: 0x0000FA34
	internal unsafe static int MToUUint32s(uint[] mArray, int* outLen, uint** ppData)
	{
		*outLen = 0;
		uint* ptr;
		if (mArray == null)
		{
			ptr = <Module>.MIDL_user_allocate(0UL);
			if (ptr == null)
			{
				return -2147024882;
			}
		}
		else
		{
			*outLen = mArray.Length;
			ulong num = (ulong)((long)mArray.Length * 4L);
			ptr = <Module>.MIDL_user_allocate(num);
			if (ptr == null)
			{
				return -2147024882;
			}
			ref uint uint32& = ref mArray[0];
			try
			{
				<Module>.memcpy_s((void*)ptr, num, ref uint32&, num);
			}
			catch
			{
				throw;
			}
		}
		*(long*)ppData = ptr;
		return 0;
	}

	// Token: 0x0600011A RID: 282 RVA: 0x00011378 File Offset: 0x00010778
	internal unsafe static EcListAllMdbStatusRpc* {ctor}(EcListAllMdbStatusRpc* A_0, IntPtr intfHandle, void* hBinding, int fBasicInformation, uint* pcMdbs, uint* pCbOut, byte** ppMdbStatus, uint cbAuxIn, byte* rgbAuxIn, uint* pcbAuxOut, byte** prgbAuxOut)
	{
		IntPtr intPtr = intfHandle;
		*A_0 = ref <Module>.??_7AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 40L) = intPtr;
		*(A_0 + 48L) = hBinding;
		*(A_0 + 8L) = cbAuxIn;
		*(A_0 + 16L) = rgbAuxIn;
		*(A_0 + 24L) = pcbAuxOut;
		*(A_0 + 32L) = prgbAuxOut;
		*A_0 = ref <Module>.??_7EcListAllMdbStatusRpc@@6B@ + 8;
		*(A_0 + 56L) = fBasicInformation;
		*(A_0 + 64L) = pcMdbs;
		*(A_0 + 72L) = pCbOut;
		*(A_0 + 80L) = ppMdbStatus;
		return A_0;
	}

	// Token: 0x0600011B RID: 283 RVA: 0x000106B0 File Offset: 0x0000FAB0
	internal unsafe static int EcValidateParameters(EcListAllMdbStatusRpc* A_0)
	{
		int result = 0;
		if (0L == *(A_0 + 64L) || 0L == *(A_0 + 72L) || 0L == *(A_0 + 80L))
		{
			result = -2147024809;
		}
		return result;
	}

	// Token: 0x0600011C RID: 284 RVA: 0x000106E4 File Offset: 0x0000FAE4
	internal unsafe static int EcDispatchCall(EcListAllMdbStatusRpc* A_0, IAdminRpcServer server, ClientSecurityContext callerSecurityContext, byte[] auxiliaryIn, out byte[] auxiliaryOut)
	{
		byte[] mByteArray = null;
		int num = 0;
		bool flag = false;
		EcListAllMdbStatusRpc* ptr = A_0 + 64L;
		*(*ptr) = 0;
		EcListAllMdbStatusRpc* ptr2 = A_0 + 72L;
		*(*ptr2) = 0;
		EcListAllMdbStatusRpc* ptr3 = A_0 + 80L;
		*(*ptr3) = 0L;
		try
		{
			byte basicInformation = (*(A_0 + 56L) != 0) ? 1 : 0;
			uint num2;
			num = server.EcListAllMdbStatus50(callerSecurityContext, basicInformation != 0, out num2, out mByteArray, auxiliaryIn, out auxiliaryOut);
			if (num == null)
			{
				num = <Module>.MToUBytes(mByteArray, *ptr2, *ptr3);
				if (0 != num)
				{
					return num;
				}
				*(*ptr) = (int)num2;
			}
			flag = true;
		}
		finally
		{
			if (!flag)
			{
				*(*(A_0 + 64L)) = 0;
				*(*(A_0 + 72L)) = 0;
				ptr3 = A_0 + 80L;
				ulong num3 = (ulong)(*(*ptr3));
				if (0UL != num3)
				{
					<Module>.MIDL_user_free(num3);
					*(*ptr3) = 0L;
				}
			}
		}
		return num;
	}

	// Token: 0x0600011D RID: 285 RVA: 0x000113EC File Offset: 0x000107EC
	internal unsafe static EcListMdbStatusRpc* {ctor}(EcListMdbStatusRpc* A_0, IntPtr intfHandle, void* hBinding, uint ulMdbs, _GUID* rgguidMdb, uint* rgulMdbStatus, uint cbAuxIn, byte* rgbAuxIn, uint* pcbAuxOut, byte** prgbAuxOut)
	{
		IntPtr intPtr = intfHandle;
		*A_0 = ref <Module>.??_7AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 40L) = intPtr;
		*(A_0 + 48L) = hBinding;
		*(A_0 + 8L) = cbAuxIn;
		*(A_0 + 16L) = rgbAuxIn;
		*(A_0 + 24L) = pcbAuxOut;
		*(A_0 + 32L) = prgbAuxOut;
		*A_0 = ref <Module>.??_7EcListMdbStatusRpc@@6B@ + 8;
		*(A_0 + 56L) = ulMdbs;
		*(A_0 + 64L) = rgguidMdb;
		*(A_0 + 72L) = rgulMdbStatus;
		return A_0;
	}

	// Token: 0x0600011E RID: 286 RVA: 0x000107AC File Offset: 0x0000FBAC
	internal unsafe static int EcValidateParameters(EcListMdbStatusRpc* A_0)
	{
		int result = 0;
		if (*(A_0 + 56L) == 0 || *(A_0 + 64L) == 0L || *(A_0 + 72L) == 0L)
		{
			result = -2147024809;
		}
		return result;
	}

	// Token: 0x0600011F RID: 287 RVA: 0x000107DC File Offset: 0x0000FBDC
	internal unsafe static int EcDispatchCall(EcListMdbStatusRpc* A_0, IAdminRpcServer server, ClientSecurityContext callerSecurityContext, byte[] auxiliaryIn, out byte[] auxiliaryOut)
	{
		uint[] array = null;
		int num = *(A_0 + 56L);
		Guid[] array2 = new Guid[num];
		uint num2 = 0;
		if (0 < num)
		{
			EcListMdbStatusRpc* ptr = A_0 + 64L;
			do
			{
				Guid guid = <Module>.FromGUID(num2 * 16UL + (ulong)(*ptr));
				array2[num2] = guid;
				num2++;
			}
			while (num2 < *(A_0 + 56L));
		}
		array = null;
		int num3 = server.EcListMdbStatus50(callerSecurityContext, array2, out array, auxiliaryIn, out auxiliaryOut);
		if (num3 == null)
		{
			uint num4 = 0;
			if (0 < *(A_0 + 56L))
			{
				EcListMdbStatusRpc* ptr2 = A_0 + 72L;
				do
				{
					*(num4 * 4UL + (ulong)(*ptr2)) = (int)array[num4];
					num4++;
				}
				while (num4 < *(A_0 + 56L));
			}
		}
		return num3;
	}

	// Token: 0x06000120 RID: 288 RVA: 0x00011458 File Offset: 0x00010858
	internal unsafe static EcAdminGetCnctTableRpc* {ctor}(EcAdminGetCnctTableRpc* A_0, IntPtr intfHandle, void* hBinding, _GUID* pguidMdb, int lParam, byte** ppbResult, uint* pulSize, uint* rgptag, uint cptag, uint cpid, uint* pcrow, uint cbAuxIn, byte* rgbAuxIn, uint* pcbAuxOut, byte** prgbAuxOut)
	{
		IntPtr intPtr = intfHandle;
		*A_0 = ref <Module>.??_7AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 40L) = intPtr;
		*(A_0 + 48L) = hBinding;
		*(A_0 + 8L) = cbAuxIn;
		*(A_0 + 16L) = rgbAuxIn;
		*(A_0 + 24L) = pcbAuxOut;
		*(A_0 + 32L) = prgbAuxOut;
		*A_0 = ref <Module>.??_7EcAdminGetCnctTableRpc@@6B@ + 8;
		*(A_0 + 56L) = pguidMdb;
		*(A_0 + 64L) = lParam;
		*(A_0 + 72L) = ppbResult;
		*(A_0 + 80L) = pulSize;
		*(A_0 + 88L) = rgptag;
		*(A_0 + 96L) = cptag;
		*(A_0 + 100L) = cpid;
		*(A_0 + 104L) = pcrow;
		return A_0;
	}

	// Token: 0x06000121 RID: 289 RVA: 0x00010878 File Offset: 0x0000FC78
	internal unsafe static int EcValidateParameters(EcAdminGetCnctTableRpc* A_0)
	{
		int result = 0;
		if (*(A_0 + 56L) == 0L || *(A_0 + 72L) == 0L || *(A_0 + 80L) == 0L || *(A_0 + 88L) == 0L || *(A_0 + 104L) == 0L)
		{
			result = -2147024809;
		}
		return result;
	}

	// Token: 0x06000122 RID: 290 RVA: 0x000108B8 File Offset: 0x0000FCB8
	internal unsafe static int EcDispatchCall(EcAdminGetCnctTableRpc* A_0, IAdminRpcServer server, ClientSecurityContext callerSecurityContext, byte[] auxiliaryIn, out byte[] auxiliaryOut)
	{
		byte[] mByteArray = null;
		int num = 0;
		bool flag = false;
		EcAdminGetCnctTableRpc* ptr = A_0 + 80L;
		*(*ptr) = 0;
		EcAdminGetCnctTableRpc* ptr2 = A_0 + 72L;
		*(*ptr2) = 0L;
		EcAdminGetCnctTableRpc* ptr3 = A_0 + 104L;
		*(*ptr3) = 0;
		try
		{
			uint[] propTags = <Module>.UToMUInt32s((uint)(*(A_0 + 96L)), *(A_0 + 88L));
			Guid mdbGuid = <Module>.FromGUID(*(A_0 + 56L));
			uint num2;
			num = server.EcAdminGetCnctTable50(callerSecurityContext, mdbGuid, *(A_0 + 64L), out mByteArray, propTags, (uint)(*(A_0 + 100L)), out num2, auxiliaryIn, out auxiliaryOut);
			if (num == null)
			{
				num = <Module>.MToUBytes(mByteArray, *ptr, *ptr2);
				if (0 != num)
				{
					return num;
				}
				*(*ptr3) = (int)num2;
			}
			flag = true;
		}
		finally
		{
			if (!flag)
			{
				*(*(A_0 + 80L)) = 0;
				ptr2 = A_0 + 72L;
				ulong num3 = (ulong)(*(*ptr2));
				if (0UL != num3)
				{
					<Module>.MIDL_user_free(num3);
					*(*ptr2) = 0L;
				}
				*(*(A_0 + 104L)) = 0;
			}
		}
		return num;
	}

	// Token: 0x06000123 RID: 291 RVA: 0x000114EC File Offset: 0x000108EC
	internal unsafe static EcGetLastBackupTimesRpc* {ctor}(EcGetLastBackupTimesRpc* A_0, IntPtr intfHandle, void* hBinding, _GUID* pguidMdb, _FILETIME* pLastCompleteBackupTime, _FILETIME* pLastIncrementalBackupTime, uint cbAuxIn, byte* rgbAuxIn, uint* pcbAuxOut, byte** prgbAuxOut)
	{
		IntPtr intPtr = intfHandle;
		*A_0 = ref <Module>.??_7AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 40L) = intPtr;
		*(A_0 + 48L) = hBinding;
		*(A_0 + 8L) = cbAuxIn;
		*(A_0 + 16L) = rgbAuxIn;
		*(A_0 + 24L) = pcbAuxOut;
		*(A_0 + 32L) = prgbAuxOut;
		*A_0 = ref <Module>.??_7EcGetLastBackupTimesRpc@@6B@ + 8;
		*(A_0 + 56L) = pguidMdb;
		*(A_0 + 64L) = pLastCompleteBackupTime;
		*(A_0 + 72L) = pLastIncrementalBackupTime;
		return A_0;
	}

	// Token: 0x06000124 RID: 292 RVA: 0x000109A0 File Offset: 0x0000FDA0
	internal unsafe static int EcValidateParameters(EcGetLastBackupTimesRpc* A_0)
	{
		int result = 0;
		if (*(A_0 + 56L) == 0L || *(A_0 + 64L) == 0L || *(A_0 + 72L) == 0L)
		{
			result = -2147024809;
		}
		return result;
	}

	// Token: 0x06000125 RID: 293 RVA: 0x000109D0 File Offset: 0x0000FDD0
	internal unsafe static int EcDispatchCall(EcGetLastBackupTimesRpc* A_0, IAdminRpcServer server, ClientSecurityContext callerSecurityContext, byte[] auxiliaryIn, out byte[] auxiliaryOut)
	{
		*(*(A_0 + 64L)) = 0L;
		*(*(A_0 + 72L)) = 0L;
		long num = 0L;
		long num2 = 0L;
		Guid mdbGuid = <Module>.FromGUID(*(A_0 + 56L));
		int num3 = server.EcGetLastBackupTimes50(callerSecurityContext, mdbGuid, out num, out num2, auxiliaryIn, out auxiliaryOut);
		if (num3 == null)
		{
			*(*(A_0 + 64L)) = num;
			*(*(A_0 + 72L)) = num2;
		}
		return num3;
	}

	// Token: 0x06000126 RID: 294 RVA: 0x00011558 File Offset: 0x00010958
	internal unsafe static EcClearAbsentInDsFlagOnMailboxRpc* {ctor}(EcClearAbsentInDsFlagOnMailboxRpc* A_0, IntPtr intfHandle, void* hBinding, _GUID* pguidMdb, _GUID* pguidMailbox, uint cbAuxIn, byte* rgbAuxIn, uint* pcbAuxOut, byte** prgbAuxOut)
	{
		IntPtr intPtr = intfHandle;
		*A_0 = ref <Module>.??_7AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 40L) = intPtr;
		*(A_0 + 48L) = hBinding;
		*(A_0 + 8L) = cbAuxIn;
		*(A_0 + 16L) = rgbAuxIn;
		*(A_0 + 24L) = pcbAuxOut;
		*(A_0 + 32L) = prgbAuxOut;
		*A_0 = ref <Module>.??_7EcClearAbsentInDsFlagOnMailboxRpc@@6B@ + 8;
		*(A_0 + 56L) = pguidMdb;
		*(A_0 + 64L) = pguidMailbox;
		return A_0;
	}

	// Token: 0x06000127 RID: 295 RVA: 0x00010A28 File Offset: 0x0000FE28
	internal unsafe static int EcValidateParameters(EcClearAbsentInDsFlagOnMailboxRpc* A_0)
	{
		int result = 0;
		if (*(A_0 + 56L) == 0L || *(A_0 + 64L) == 0L)
		{
			result = -2147024809;
		}
		return result;
	}

	// Token: 0x06000128 RID: 296 RVA: 0x00010A50 File Offset: 0x0000FE50
	internal unsafe static int EcDispatchCall(EcClearAbsentInDsFlagOnMailboxRpc* A_0, IAdminRpcServer server, ClientSecurityContext callerSecurityContext, byte[] auxiliaryIn, out byte[] auxiliaryOut)
	{
		Guid mailboxGuid = <Module>.FromGUID(*(A_0 + 64L));
		Guid mdbGuid = <Module>.FromGUID(*(A_0 + 56L));
		return server.EcClearAbsentInDsFlagOnMailbox50(callerSecurityContext, mdbGuid, mailboxGuid, auxiliaryIn, out auxiliaryOut);
	}

	// Token: 0x06000129 RID: 297 RVA: 0x000115BC File Offset: 0x000109BC
	internal unsafe static EcPurgeCachedMailboxObjectRpc* {ctor}(EcPurgeCachedMailboxObjectRpc* A_0, IntPtr intfHandle, void* hBinding, _GUID* pguidMailbox, uint cbAuxIn, byte* rgbAuxIn, uint* pcbAuxOut, byte** prgbAuxOut)
	{
		IntPtr intPtr = intfHandle;
		*A_0 = ref <Module>.??_7AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 40L) = intPtr;
		*(A_0 + 48L) = hBinding;
		*(A_0 + 8L) = cbAuxIn;
		*(A_0 + 16L) = rgbAuxIn;
		*(A_0 + 24L) = pcbAuxOut;
		*(A_0 + 32L) = prgbAuxOut;
		*A_0 = ref <Module>.??_7EcPurgeCachedMailboxObjectRpc@@6B@ + 8;
		*(A_0 + 56L) = pguidMailbox;
		return A_0;
	}

	// Token: 0x0600012A RID: 298 RVA: 0x00010A84 File Offset: 0x0000FE84
	internal unsafe static int EcValidateParameters(EcPurgeCachedMailboxObjectRpc* A_0)
	{
		int num = 0;
		return (*(A_0 + 56L) == 0L) ? -2147024809 : num;
	}

	// Token: 0x0600012B RID: 299 RVA: 0x00010AA8 File Offset: 0x0000FEA8
	internal unsafe static int EcDispatchCall(EcPurgeCachedMailboxObjectRpc* A_0, IAdminRpcServer server, ClientSecurityContext callerSecurityContext, byte[] auxiliaryIn, out byte[] auxiliaryOut)
	{
		Guid mailboxGuid = <Module>.FromGUID(*(A_0 + 56L));
		return server.EcPurgeCachedMailboxObject50(callerSecurityContext, mailboxGuid, auxiliaryIn, out auxiliaryOut);
	}

	// Token: 0x0600012C RID: 300 RVA: 0x00011618 File Offset: 0x00010A18
	internal unsafe static EcSyncMailboxesWithDSRpc* {ctor}(EcSyncMailboxesWithDSRpc* A_0, IntPtr intfHandle, void* hBinding, _GUID* pguidMdb, uint cbAuxIn, byte* rgbAuxIn, uint* pcbAuxOut, byte** prgbAuxOut)
	{
		IntPtr intPtr = intfHandle;
		*A_0 = ref <Module>.??_7AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 40L) = intPtr;
		*(A_0 + 48L) = hBinding;
		*(A_0 + 8L) = cbAuxIn;
		*(A_0 + 16L) = rgbAuxIn;
		*(A_0 + 24L) = pcbAuxOut;
		*(A_0 + 32L) = prgbAuxOut;
		*A_0 = ref <Module>.??_7EcSyncMailboxesWithDSRpc@@6B@ + 8;
		*(A_0 + 56L) = pguidMdb;
		return A_0;
	}

	// Token: 0x0600012D RID: 301 RVA: 0x00010ACC File Offset: 0x0000FECC
	internal unsafe static int EcValidateParameters(EcSyncMailboxesWithDSRpc* A_0)
	{
		int num = 0;
		return (*(A_0 + 56L) == 0L) ? -2147024809 : num;
	}

	// Token: 0x0600012E RID: 302 RVA: 0x00010AF0 File Offset: 0x0000FEF0
	internal unsafe static int EcDispatchCall(EcSyncMailboxesWithDSRpc* A_0, IAdminRpcServer server, ClientSecurityContext callerSecurityContext, byte[] auxiliaryIn, out byte[] auxiliaryOut)
	{
		Guid mdbGuid = <Module>.FromGUID(*(A_0 + 56L));
		return server.EcSyncMailboxesWithDS50(callerSecurityContext, mdbGuid, auxiliaryIn, out auxiliaryOut);
	}

	// Token: 0x0600012F RID: 303 RVA: 0x00011674 File Offset: 0x00010A74
	internal unsafe static EcAdminDeletePrivateMailboxRpc* {ctor}(EcAdminDeletePrivateMailboxRpc* A_0, IntPtr intfHandle, void* hBinding, _GUID* pguidMdb, _GUID* pguidMailbox, uint ulFlags, uint cbAuxIn, byte* rgbAuxIn, uint* pcbAuxOut, byte** prgbAuxOut)
	{
		IntPtr intPtr = intfHandle;
		*A_0 = ref <Module>.??_7AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 40L) = intPtr;
		*(A_0 + 48L) = hBinding;
		*(A_0 + 8L) = cbAuxIn;
		*(A_0 + 16L) = rgbAuxIn;
		*(A_0 + 24L) = pcbAuxOut;
		*(A_0 + 32L) = prgbAuxOut;
		*A_0 = ref <Module>.??_7EcAdminDeletePrivateMailboxRpc@@6B@ + 8;
		*(A_0 + 56L) = pguidMdb;
		*(A_0 + 64L) = pguidMailbox;
		*(A_0 + 72L) = ulFlags;
		return A_0;
	}

	// Token: 0x06000130 RID: 304 RVA: 0x00010B14 File Offset: 0x0000FF14
	internal unsafe static int EcValidateParameters(EcAdminDeletePrivateMailboxRpc* A_0)
	{
		int result = 0;
		if (*(A_0 + 56L) == 0L || *(A_0 + 64L) == 0L)
		{
			result = -2147024809;
		}
		return result;
	}

	// Token: 0x06000131 RID: 305 RVA: 0x00010B3C File Offset: 0x0000FF3C
	internal unsafe static int EcDispatchCall(EcAdminDeletePrivateMailboxRpc* A_0, IAdminRpcServer server, ClientSecurityContext callerSecurityContext, byte[] auxiliaryIn, out byte[] auxiliaryOut)
	{
		Guid mailboxGuid = <Module>.FromGUID(*(A_0 + 64L));
		Guid mdbGuid = <Module>.FromGUID(*(A_0 + 56L));
		return server.EcAdminDeletePrivateMailbox50(callerSecurityContext, mdbGuid, mailboxGuid, (uint)(*(A_0 + 72L)), auxiliaryIn, out auxiliaryOut);
	}

	// Token: 0x06000132 RID: 306 RVA: 0x000116E0 File Offset: 0x00010AE0
	internal unsafe static EcSetMailboxSecurityDescriptorRpc* {ctor}(EcSetMailboxSecurityDescriptorRpc* A_0, IntPtr intfHandle, void* hBinding, _GUID* pguidMdb, _GUID* pguidMailbox, byte* pntsd, uint cbSD, uint cbAuxIn, byte* rgbAuxIn, uint* pcbAuxOut, byte** prgbAuxOut)
	{
		IntPtr intPtr = intfHandle;
		*A_0 = ref <Module>.??_7AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 40L) = intPtr;
		*(A_0 + 48L) = hBinding;
		*(A_0 + 8L) = cbAuxIn;
		*(A_0 + 16L) = rgbAuxIn;
		*(A_0 + 24L) = pcbAuxOut;
		*(A_0 + 32L) = prgbAuxOut;
		*A_0 = ref <Module>.??_7EcSetMailboxSecurityDescriptorRpc@@6B@ + 8;
		*(A_0 + 56L) = pguidMdb;
		*(A_0 + 64L) = pguidMailbox;
		*(A_0 + 72L) = pntsd;
		*(A_0 + 80L) = cbSD;
		return A_0;
	}

	// Token: 0x06000133 RID: 307 RVA: 0x00010B74 File Offset: 0x0000FF74
	internal unsafe static int EcValidateParameters(EcSetMailboxSecurityDescriptorRpc* A_0)
	{
		int result = 0;
		if (*(A_0 + 56L) == 0L || *(A_0 + 64L) == 0L || *(A_0 + 72L) == 0L)
		{
			result = -2147024809;
		}
		return result;
	}

	// Token: 0x06000134 RID: 308 RVA: 0x00010BA4 File Offset: 0x0000FFA4
	internal unsafe static int EcDispatchCall(EcSetMailboxSecurityDescriptorRpc* A_0, IAdminRpcServer server, ClientSecurityContext callerSecurityContext, byte[] auxiliaryIn, out byte[] auxiliaryOut)
	{
		Guid mailboxGuid = <Module>.FromGUID(*(A_0 + 64L));
		Guid mdbGuid = <Module>.FromGUID(*(A_0 + 56L));
		return server.EcSetMailboxSecurityDescriptor50(callerSecurityContext, mdbGuid, mailboxGuid, <Module>.UToMBytes(*(A_0 + 80L), *(A_0 + 72L)), auxiliaryIn, out auxiliaryOut);
	}

	// Token: 0x06000135 RID: 309 RVA: 0x00011754 File Offset: 0x00010B54
	internal unsafe static EcGetMailboxSecurityDescriptorRpc* {ctor}(EcGetMailboxSecurityDescriptorRpc* A_0, IntPtr intfHandle, void* hBinding, _GUID* pguidMdb, _GUID* pguidMailbox, byte** ppntsd, uint* pcbSD, uint cbAuxIn, byte* rgbAuxIn, uint* pcbAuxOut, byte** prgbAuxOut)
	{
		IntPtr intPtr = intfHandle;
		*A_0 = ref <Module>.??_7AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 40L) = intPtr;
		*(A_0 + 48L) = hBinding;
		*(A_0 + 8L) = cbAuxIn;
		*(A_0 + 16L) = rgbAuxIn;
		*(A_0 + 24L) = pcbAuxOut;
		*(A_0 + 32L) = prgbAuxOut;
		*A_0 = ref <Module>.??_7EcGetMailboxSecurityDescriptorRpc@@6B@ + 8;
		*(A_0 + 56L) = pguidMdb;
		*(A_0 + 64L) = pguidMailbox;
		*(A_0 + 72L) = ppntsd;
		*(A_0 + 80L) = pcbSD;
		return A_0;
	}

	// Token: 0x06000136 RID: 310 RVA: 0x00010BE8 File Offset: 0x0000FFE8
	internal unsafe static int EcValidateParameters(EcGetMailboxSecurityDescriptorRpc* A_0)
	{
		int result = 0;
		if (*(A_0 + 56L) == 0L || *(A_0 + 64L) == 0L || *(A_0 + 72L) == 0L || *(A_0 + 80L) == 0L)
		{
			result = -2147024809;
		}
		return result;
	}

	// Token: 0x06000137 RID: 311 RVA: 0x00010C20 File Offset: 0x00010020
	internal unsafe static int EcDispatchCall(EcGetMailboxSecurityDescriptorRpc* A_0, IAdminRpcServer server, ClientSecurityContext callerSecurityContext, byte[] auxiliaryIn, out byte[] auxiliaryOut)
	{
		byte[] mByteArray = null;
		int num = 0;
		bool flag = false;
		EcGetMailboxSecurityDescriptorRpc* ptr = A_0 + 72L;
		*(*ptr) = 0L;
		EcGetMailboxSecurityDescriptorRpc* ptr2 = A_0 + 80L;
		*(*ptr2) = 0;
		try
		{
			mByteArray = null;
			Guid mailboxGuid = <Module>.FromGUID(*(A_0 + 64L));
			Guid mdbGuid = <Module>.FromGUID(*(A_0 + 56L));
			num = server.EcGetMailboxSecurityDescriptor50(callerSecurityContext, mdbGuid, mailboxGuid, out mByteArray, auxiliaryIn, out auxiliaryOut);
			if (num == null)
			{
				num = <Module>.MToUBytes(mByteArray, *ptr2, *ptr);
				if (0 != num)
				{
					return num;
				}
			}
			flag = true;
		}
		finally
		{
			if (!flag)
			{
				*(*(A_0 + 80L)) = 0;
				ptr = A_0 + 72L;
				ulong num2 = (ulong)(*(*ptr));
				if (0UL != num2)
				{
					<Module>.MIDL_user_free(num2);
					*(*ptr) = 0L;
				}
			}
		}
		return num;
	}

	// Token: 0x06000138 RID: 312 RVA: 0x000117C8 File Offset: 0x00010BC8
	internal unsafe static EcAdminGetLogonTableRpc* {ctor}(EcAdminGetLogonTableRpc* A_0, IntPtr intfHandle, void* hBinding, _GUID* pguidMdb, int lParam, byte** ppbResult, uint* pulSize, uint* rgptag, uint cptag, uint cpid, uint* pcrow, uint cbAuxIn, byte* rgbAuxIn, uint* pcbAuxOut, byte** prgbAuxOut)
	{
		IntPtr intPtr = intfHandle;
		*A_0 = ref <Module>.??_7AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 40L) = intPtr;
		*(A_0 + 48L) = hBinding;
		*(A_0 + 8L) = cbAuxIn;
		*(A_0 + 16L) = rgbAuxIn;
		*(A_0 + 24L) = pcbAuxOut;
		*(A_0 + 32L) = prgbAuxOut;
		*A_0 = ref <Module>.??_7EcAdminGetLogonTableRpc@@6B@ + 8;
		*(A_0 + 56L) = pguidMdb;
		*(A_0 + 64L) = lParam;
		*(A_0 + 72L) = ppbResult;
		*(A_0 + 80L) = pulSize;
		*(A_0 + 88L) = rgptag;
		*(A_0 + 96L) = cptag;
		*(A_0 + 100L) = cpid;
		*(A_0 + 104L) = pcrow;
		return A_0;
	}

	// Token: 0x06000139 RID: 313 RVA: 0x00010CDC File Offset: 0x000100DC
	internal unsafe static int EcValidateParameters(EcAdminGetLogonTableRpc* A_0)
	{
		int result = 0;
		if (*(A_0 + 56L) == 0L || *(A_0 + 72L) == 0L || *(A_0 + 80L) == 0L || *(A_0 + 88L) == 0L || *(A_0 + 104L) == 0L)
		{
			result = -2147024809;
		}
		return result;
	}

	// Token: 0x0600013A RID: 314 RVA: 0x00010D1C File Offset: 0x0001011C
	internal unsafe static int EcDispatchCall(EcAdminGetLogonTableRpc* A_0, IAdminRpcServer server, ClientSecurityContext callerSecurityContext, byte[] auxiliaryIn, out byte[] auxiliaryOut)
	{
		byte[] mByteArray = null;
		int num = 0;
		bool flag = false;
		EcAdminGetLogonTableRpc* ptr = A_0 + 72L;
		*(*ptr) = 0L;
		EcAdminGetLogonTableRpc* ptr2 = A_0 + 80L;
		*(*ptr2) = 0;
		EcAdminGetLogonTableRpc* ptr3 = A_0 + 104L;
		*(*ptr3) = 0;
		try
		{
			uint[] propTags = <Module>.UToMUInt32s((uint)(*(A_0 + 96L)), *(A_0 + 88L));
			Guid mdbGuid = <Module>.FromGUID(*(A_0 + 56L));
			uint num2;
			num = server.EcAdminGetLogonTable50(callerSecurityContext, mdbGuid, *(A_0 + 64L), out mByteArray, propTags, (uint)(*(A_0 + 100L)), out num2, auxiliaryIn, out auxiliaryOut);
			if (num == null)
			{
				num = <Module>.MToUBytes(mByteArray, *ptr2, *ptr);
				if (0 != num)
				{
					return num;
				}
				*(*ptr3) = (int)num2;
			}
			flag = true;
		}
		finally
		{
			if (!flag)
			{
				*(*(A_0 + 80L)) = 0;
				ptr = A_0 + 72L;
				ulong num3 = (ulong)(*(*ptr));
				if (0UL != num3)
				{
					<Module>.MIDL_user_free(num3);
					*(*ptr) = 0L;
				}
				*(*(A_0 + 104L)) = 0;
			}
		}
		return num;
	}

	// Token: 0x0600013B RID: 315 RVA: 0x0001185C File Offset: 0x00010C5C
	internal unsafe static EcMountDatabaseRpc* {ctor}(EcMountDatabaseRpc* A_0, IntPtr intfHandle, void* hBinding, _GUID* pguidStorageGroup, _GUID* pguidMdb, uint ulFlags, uint cbAuxIn, byte* rgbAuxIn, uint* pcbAuxOut, byte** prgbAuxOut)
	{
		IntPtr intPtr = intfHandle;
		*A_0 = ref <Module>.??_7AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 40L) = intPtr;
		*(A_0 + 48L) = hBinding;
		*(A_0 + 8L) = cbAuxIn;
		*(A_0 + 16L) = rgbAuxIn;
		*(A_0 + 24L) = pcbAuxOut;
		*(A_0 + 32L) = prgbAuxOut;
		*A_0 = ref <Module>.??_7EcMountDatabaseRpc@@6B@ + 8;
		*(A_0 + 56L) = pguidStorageGroup;
		*(A_0 + 64L) = pguidMdb;
		*(A_0 + 72L) = ulFlags;
		return A_0;
	}

	// Token: 0x0600013C RID: 316 RVA: 0x00010E04 File Offset: 0x00010204
	internal unsafe static int EcValidateParameters(EcMountDatabaseRpc* A_0)
	{
		int result = 0;
		if (*(A_0 + 56L) == 0L || *(A_0 + 64L) == 0L)
		{
			result = -2147024809;
		}
		return result;
	}

	// Token: 0x0600013D RID: 317 RVA: 0x00010E2C File Offset: 0x0001022C
	internal unsafe static int EcDispatchCall(EcMountDatabaseRpc* A_0, IAdminRpcServer server, ClientSecurityContext callerSecurityContext, byte[] auxiliaryIn, out byte[] auxiliaryOut)
	{
		Guid mdbGuid = <Module>.FromGUID(*(A_0 + 64L));
		return server.EcMountDatabase50(callerSecurityContext, mdbGuid, (uint)(*(A_0 + 72L)), auxiliaryIn, out auxiliaryOut);
	}

	// Token: 0x0600013E RID: 318 RVA: 0x000118C8 File Offset: 0x00010CC8
	internal unsafe static EcUnmountDatabaseRpc* {ctor}(EcUnmountDatabaseRpc* A_0, IntPtr intfHandle, void* hBinding, _GUID* pguidStorageGroup, _GUID* pguidMdb, int grfFlags, uint cbAuxIn, byte* rgbAuxIn, uint* pcbAuxOut, byte** prgbAuxOut)
	{
		IntPtr intPtr = intfHandle;
		*A_0 = ref <Module>.??_7AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 40L) = intPtr;
		*(A_0 + 48L) = hBinding;
		*(A_0 + 8L) = cbAuxIn;
		*(A_0 + 16L) = rgbAuxIn;
		*(A_0 + 24L) = pcbAuxOut;
		*(A_0 + 32L) = prgbAuxOut;
		*A_0 = ref <Module>.??_7EcUnmountDatabaseRpc@@6B@ + 8;
		*(A_0 + 56L) = pguidStorageGroup;
		*(A_0 + 64L) = pguidMdb;
		*(A_0 + 72L) = grfFlags;
		return A_0;
	}

	// Token: 0x0600013F RID: 319 RVA: 0x00010E58 File Offset: 0x00010258
	internal unsafe static int EcValidateParameters(EcUnmountDatabaseRpc* A_0)
	{
		int result = 0;
		if (*(A_0 + 56L) == 0L || *(A_0 + 64L) == 0L)
		{
			result = -2147024809;
		}
		return result;
	}

	// Token: 0x06000140 RID: 320 RVA: 0x00010E80 File Offset: 0x00010280
	internal unsafe static int EcDispatchCall(EcUnmountDatabaseRpc* A_0, IAdminRpcServer server, ClientSecurityContext callerSecurityContext, byte[] auxiliaryIn, out byte[] auxiliaryOut)
	{
		Guid mdbGuid = <Module>.FromGUID(*(A_0 + 64L));
		return server.EcUnmountDatabase50(callerSecurityContext, mdbGuid, (uint)(*(A_0 + 72L)), auxiliaryIn, out auxiliaryOut);
	}

	// Token: 0x06000141 RID: 321 RVA: 0x00011934 File Offset: 0x00010D34
	internal unsafe static EcAdminSetMailboxBasicInfoRpc* {ctor}(EcAdminSetMailboxBasicInfoRpc* A_0, IntPtr intfHandle, void* hBinding, _GUID* pguidMdb, _GUID* pguidMailbox, sbyte* rgbMailInfo, uint ulSize, uint cbAuxIn, byte* rgbAuxIn, uint* pcbAuxOut, byte** prgbAuxOut)
	{
		IntPtr intPtr = intfHandle;
		*A_0 = ref <Module>.??_7AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 40L) = intPtr;
		*(A_0 + 48L) = hBinding;
		*(A_0 + 8L) = cbAuxIn;
		*(A_0 + 16L) = rgbAuxIn;
		*(A_0 + 24L) = pcbAuxOut;
		*(A_0 + 32L) = prgbAuxOut;
		*A_0 = ref <Module>.??_7EcAdminSetMailboxBasicInfoRpc@@6B@ + 8;
		*(A_0 + 56L) = pguidMdb;
		*(A_0 + 64L) = pguidMailbox;
		*(A_0 + 72L) = rgbMailInfo;
		*(A_0 + 80L) = ulSize;
		return A_0;
	}

	// Token: 0x06000142 RID: 322 RVA: 0x00010EAC File Offset: 0x000102AC
	internal unsafe static int EcValidateParameters(EcAdminSetMailboxBasicInfoRpc* A_0)
	{
		int result = 0;
		if (*(A_0 + 56L) == 0L || *(A_0 + 64L) == 0L || *(A_0 + 72L) == 0L)
		{
			result = -2147024809;
		}
		return result;
	}

	// Token: 0x06000143 RID: 323 RVA: 0x00010EDC File Offset: 0x000102DC
	internal unsafe static int EcDispatchCall(EcAdminSetMailboxBasicInfoRpc* A_0, IAdminRpcServer server, ClientSecurityContext callerSecurityContext, byte[] auxiliaryIn, out byte[] auxiliaryOut)
	{
		Guid mailboxGuid = <Module>.FromGUID(*(A_0 + 64L));
		Guid mdbGuid = <Module>.FromGUID(*(A_0 + 56L));
		return server.EcAdminSetMailboxBasicInfo50(callerSecurityContext, mdbGuid, mailboxGuid, <Module>.UToMBytes(*(A_0 + 80L), *(A_0 + 72L)), auxiliaryIn, out auxiliaryOut);
	}

	// Token: 0x06000144 RID: 324 RVA: 0x000119A8 File Offset: 0x00010DA8
	internal unsafe static EcPurgeCachedMdbObjectRpc* {ctor}(EcPurgeCachedMdbObjectRpc* A_0, IntPtr intfHandle, void* hBinding, _GUID* pguidMdb, uint cbAuxIn, byte* rgbAuxIn, uint* pcbAuxOut, byte** prgbAuxOut)
	{
		IntPtr intPtr = intfHandle;
		*A_0 = ref <Module>.??_7AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 40L) = intPtr;
		*(A_0 + 48L) = hBinding;
		*(A_0 + 8L) = cbAuxIn;
		*(A_0 + 16L) = rgbAuxIn;
		*(A_0 + 24L) = pcbAuxOut;
		*(A_0 + 32L) = prgbAuxOut;
		*A_0 = ref <Module>.??_7EcPurgeCachedMdbObjectRpc@@6B@ + 8;
		*(A_0 + 56L) = pguidMdb;
		return A_0;
	}

	// Token: 0x06000145 RID: 325 RVA: 0x00010F20 File Offset: 0x00010320
	internal unsafe static int EcValidateParameters(EcPurgeCachedMdbObjectRpc* A_0)
	{
		int num = 0;
		return (*(A_0 + 56L) == 0L) ? -2147024809 : num;
	}

	// Token: 0x06000146 RID: 326 RVA: 0x00010F44 File Offset: 0x00010344
	internal unsafe static int EcDispatchCall(EcPurgeCachedMdbObjectRpc* A_0, IAdminRpcServer server, ClientSecurityContext callerSecurityContext, byte[] auxiliaryIn, out byte[] auxiliaryOut)
	{
		Guid mdbGuid = <Module>.FromGUID(*(A_0 + 56L));
		return server.EcPurgeCachedMdbObject50(callerSecurityContext, mdbGuid, auxiliaryIn, out auxiliaryOut);
	}

	// Token: 0x06000147 RID: 327 RVA: 0x00011A04 File Offset: 0x00010E04
	internal unsafe static EcAdminGetMailboxTableRpc* {ctor}(EcAdminGetMailboxTableRpc* A_0, IntPtr intfHandle, void* hBinding, _GUID* pguidMdb, int lParam, byte** ppbResult, uint* pulSize, uint* rgptag, uint cptag, uint cpid, uint* pcrow, uint cbAuxIn, byte* rgbAuxIn, uint* pcbAuxOut, byte** prgbAuxOut)
	{
		IntPtr intPtr = intfHandle;
		*A_0 = ref <Module>.??_7AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 40L) = intPtr;
		*(A_0 + 48L) = hBinding;
		*(A_0 + 8L) = cbAuxIn;
		*(A_0 + 16L) = rgbAuxIn;
		*(A_0 + 24L) = pcbAuxOut;
		*(A_0 + 32L) = prgbAuxOut;
		*A_0 = ref <Module>.??_7EcAdminGetMailboxTableRpc@@6B@ + 8;
		*(A_0 + 56L) = pguidMdb;
		*(A_0 + 64L) = lParam;
		*(A_0 + 72L) = ppbResult;
		*(A_0 + 80L) = pulSize;
		*(A_0 + 88L) = rgptag;
		*(A_0 + 96L) = cptag;
		*(A_0 + 100L) = cpid;
		*(A_0 + 104L) = pcrow;
		return A_0;
	}

	// Token: 0x06000148 RID: 328 RVA: 0x00010F68 File Offset: 0x00010368
	internal unsafe static int EcValidateParameters(EcAdminGetMailboxTableRpc* A_0)
	{
		int result = 0;
		if (*(A_0 + 72L) == 0L || *(A_0 + 80L) == 0L || *(A_0 + 88L) == 0L || *(A_0 + 104L) == 0L)
		{
			result = -2147024809;
		}
		return result;
	}

	// Token: 0x06000149 RID: 329 RVA: 0x00010FA0 File Offset: 0x000103A0
	internal unsafe static int EcDispatchCall(EcAdminGetMailboxTableRpc* A_0, IAdminRpcServer server, ClientSecurityContext callerSecurityContext, byte[] auxiliaryIn, out byte[] auxiliaryOut)
	{
		byte[] mByteArray = null;
		int num = 0;
		bool flag = false;
		EcAdminGetMailboxTableRpc* ptr = A_0 + 72L;
		*(*ptr) = 0L;
		EcAdminGetMailboxTableRpc* ptr2 = A_0 + 80L;
		*(*ptr2) = 0;
		EcAdminGetMailboxTableRpc* ptr3 = A_0 + 104L;
		*(*ptr3) = 0;
		try
		{
			uint[] propTags = <Module>.UToMUInt32s((uint)(*(A_0 + 96L)), *(A_0 + 88L));
			mByteArray = null;
			uint num2 = 0U;
			Guid? mdbGuid = <Module>.NullableGuidFromPGUID(*(A_0 + 56L));
			num = server.EcAdminGetMailboxTable50(callerSecurityContext, mdbGuid, *(A_0 + 64L), out mByteArray, propTags, (uint)(*(A_0 + 100L)), out num2, auxiliaryIn, out auxiliaryOut);
			if (num == null)
			{
				num = <Module>.MToUBytes(mByteArray, *ptr2, *ptr);
				if (0 != num)
				{
					return num;
				}
				*(*ptr3) = (int)num2;
			}
			flag = true;
		}
		finally
		{
			if (!flag)
			{
				*(*(A_0 + 80L)) = 0;
				ptr = A_0 + 72L;
				ulong num3 = (ulong)(*(*ptr));
				if (0UL != num3)
				{
					<Module>.MIDL_user_free(num3);
					*(*ptr) = 0L;
				}
				*(*(A_0 + 104L)) = 0;
			}
		}
		return num;
	}

	// Token: 0x0600014A RID: 330 RVA: 0x00011A98 File Offset: 0x00010E98
	internal unsafe static EcAdminNotifyOnDSChangeRpc* {ctor}(EcAdminNotifyOnDSChangeRpc* A_0, IntPtr intfHandle, void* hBinding, _GUID* pguidMdb, _GUID* pguidMailbox, uint ulObject, uint cbAuxIn, byte* rgbAuxIn, uint* pcbAuxOut, byte** prgbAuxOut)
	{
		IntPtr intPtr = intfHandle;
		*A_0 = ref <Module>.??_7AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 40L) = intPtr;
		*(A_0 + 48L) = hBinding;
		*(A_0 + 8L) = cbAuxIn;
		*(A_0 + 16L) = rgbAuxIn;
		*(A_0 + 24L) = pcbAuxOut;
		*(A_0 + 32L) = prgbAuxOut;
		*A_0 = ref <Module>.??_7EcAdminNotifyOnDSChangeRpc@@6B@ + 8;
		*(A_0 + 56L) = pguidMdb;
		*(A_0 + 64L) = pguidMailbox;
		*(A_0 + 72L) = ulObject;
		return A_0;
	}

	// Token: 0x0600014B RID: 331 RVA: 0x00011090 File Offset: 0x00010490
	internal unsafe static int EcValidateParameters(EcAdminNotifyOnDSChangeRpc* A_0)
	{
		int result = 0;
		if (*(A_0 + 56L) == 0L || *(A_0 + 64L) == 0L)
		{
			result = -2147024809;
		}
		return result;
	}

	// Token: 0x0600014C RID: 332 RVA: 0x000110B8 File Offset: 0x000104B8
	internal unsafe static int EcDispatchCall(EcAdminNotifyOnDSChangeRpc* A_0, IAdminRpcServer server, ClientSecurityContext callerSecurityContext, byte[] auxiliaryIn, out byte[] auxiliaryOut)
	{
		Guid mailboxGuid = <Module>.FromGUID(*(A_0 + 64L));
		Guid mdbGuid = <Module>.FromGUID(*(A_0 + 56L));
		return server.EcAdminNotifyOnDSChange50(callerSecurityContext, mdbGuid, mailboxGuid, (uint)(*(A_0 + 72L)), auxiliaryIn, out auxiliaryOut);
	}

	// Token: 0x0600014D RID: 333 RVA: 0x00011B04 File Offset: 0x00010F04
	internal unsafe static EcLogReplayRequestRpc* {ctor}(EcLogReplayRequestRpc* A_0, IntPtr intfHandle, void* hBinding, _GUID* pmdbGuid, uint ulgenLogReplayMax, uint ulLogReplayFlags, uint* pulgenLogReplayNext, uint* pCbOut, byte** ppDbinfo, uint* ppatchPageNumber, uint* pcbPatchToken, byte** ppbPatchToken, uint* pcbPatchData, byte** ppbPatchData, uint* pcpgnoCorrupt, uint** ppgnoCorrupt, uint cbAuxIn, byte* rgbAuxIn, uint* pcbAuxOut, byte** prgbAuxOut)
	{
		IntPtr intPtr = intfHandle;
		*A_0 = ref <Module>.??_7AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 40L) = intPtr;
		*(A_0 + 48L) = hBinding;
		*(A_0 + 8L) = cbAuxIn;
		*(A_0 + 16L) = rgbAuxIn;
		*(A_0 + 24L) = pcbAuxOut;
		*(A_0 + 32L) = prgbAuxOut;
		*A_0 = ref <Module>.??_7EcLogReplayRequestRpc@@6B@ + 8;
		*(A_0 + 56L) = pmdbGuid;
		*(A_0 + 64L) = ulgenLogReplayMax;
		*(A_0 + 68L) = ulLogReplayFlags;
		*(A_0 + 72L) = pulgenLogReplayNext;
		*(A_0 + 80L) = pCbOut;
		*(A_0 + 88L) = ppDbinfo;
		*(A_0 + 96L) = ppatchPageNumber;
		*(A_0 + 104L) = pcbPatchToken;
		*(A_0 + 112L) = ppbPatchToken;
		*(A_0 + 120L) = pcbPatchData;
		*(A_0 + 128L) = ppbPatchData;
		*(A_0 + 136L) = pcpgnoCorrupt;
		*(A_0 + 144L) = ppgnoCorrupt;
		return A_0;
	}

	// Token: 0x0600014E RID: 334 RVA: 0x000110F0 File Offset: 0x000104F0
	internal unsafe static int EcValidateParameters(EcLogReplayRequestRpc* A_0)
	{
		int num = 0;
		return (*(A_0 + 56L) == 0L) ? -2147024809 : num;
	}

	// Token: 0x0600014F RID: 335 RVA: 0x00011114 File Offset: 0x00010514
	internal unsafe static int EcDispatchCall(EcLogReplayRequestRpc* A_0, IAdminRpcServer server, ClientSecurityContext callerSecurityContext, byte[] auxiliaryIn, out byte[] auxiliaryOut)
	{
		byte[] mByteArray = null;
		byte[] mByteArray2 = null;
		byte[] mByteArray3 = null;
		uint[] mArray = null;
		int num = 0;
		bool flag = false;
		EcLogReplayRequestRpc* ptr = A_0 + 72L;
		*(*ptr) = 0;
		EcLogReplayRequestRpc* ptr2 = A_0 + 80L;
		*(*ptr2) = 0;
		EcLogReplayRequestRpc* ptr3 = A_0 + 88L;
		*(*ptr3) = 0L;
		EcLogReplayRequestRpc* ptr4 = A_0 + 96L;
		*(*ptr4) = 0;
		EcLogReplayRequestRpc* ptr5 = A_0 + 104L;
		*(*ptr5) = 0;
		EcLogReplayRequestRpc* ptr6 = A_0 + 112L;
		*(*ptr6) = 0L;
		EcLogReplayRequestRpc* ptr7 = A_0 + 120L;
		*(*ptr7) = 0;
		EcLogReplayRequestRpc* ptr8 = A_0 + 128L;
		*(*ptr8) = 0L;
		EcLogReplayRequestRpc* ptr9 = A_0 + 136L;
		*(*ptr9) = 0;
		EcLogReplayRequestRpc* ptr10 = A_0 + 144L;
		*(*ptr10) = 0L;
		try
		{
			uint num2 = 0U;
			mByteArray = null;
			uint num3 = 0U;
			mByteArray2 = null;
			mByteArray3 = null;
			mArray = null;
			Guid mdbGuid = <Module>.FromGUID(*(A_0 + 56L));
			num = server.EcLogReplayRequest2(callerSecurityContext, mdbGuid, (uint)(*(A_0 + 64L)), (uint)(*(A_0 + 68L)), out num2, out mByteArray, out num3, out mByteArray2, out mByteArray3, out mArray, auxiliaryIn, out auxiliaryOut);
			if (num == null)
			{
				*(*ptr) = (int)num2;
				*(*ptr4) = (int)num3;
				num = <Module>.MToUBytes(mByteArray, *ptr2, *ptr3);
				if (0 != num)
				{
					return num;
				}
				num = <Module>.MToUBytes(mByteArray2, *ptr5, *ptr6);
				if (0 != num)
				{
					return num;
				}
				num = <Module>.MToUBytes(mByteArray3, *ptr7, *ptr8);
				if (0 != num)
				{
					return num;
				}
				num = <Module>.MToUUint32s(mArray, *ptr9, *ptr10);
				if (0 != num)
				{
					return num;
				}
			}
			flag = true;
		}
		finally
		{
			if (!flag)
			{
				*(*(A_0 + 80L)) = 0;
				ptr3 = A_0 + 88L;
				ulong num4 = (ulong)(*(*ptr3));
				if (0UL != num4)
				{
					<Module>.MIDL_user_free(num4);
					*(*ptr3) = 0L;
				}
				*(*(A_0 + 104L)) = 0;
				ptr6 = A_0 + 112L;
				ulong num5 = (ulong)(*(*ptr6));
				if (0UL != num5)
				{
					<Module>.MIDL_user_free(num5);
					*(*ptr6) = 0L;
				}
				*(*(A_0 + 120L)) = 0;
				ptr8 = A_0 + 128L;
				ulong num6 = (ulong)(*(*ptr8));
				if (0UL != num6)
				{
					<Module>.MIDL_user_free(num6);
					*(*ptr8) = 0L;
				}
				*(*(A_0 + 136L)) = 0;
				ptr10 = A_0 + 144L;
				ulong num7 = (ulong)(*(*ptr10));
				if (0UL != num7)
				{
					<Module>.MIDL_user_free(num7);
					*(*ptr10) = 0L;
				}
			}
		}
		return num;
	}

	// Token: 0x06000150 RID: 336 RVA: 0x00068AE4 File Offset: 0x00067EE4
	internal unsafe static void ??__E??_7AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@6B@@@YMXXZ()
	{
		<Module>.??_7AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@6B@ = ref <Module>.??_R4AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@6B@;
		*(ref <Module>.??_7AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@6B@ + 8) = <Module>.__unep@?InternalExecute@AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@$$FUEAAJXZ;
		*(ref <Module>.??_7AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@6B@ + 16) = <Module>.__unep@?EcValidateParameters@AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@$$FMEAAJXZ;
		*(ref <Module>.??_7AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@6B@ + 24) = (long)ldftn(_purecall);
	}

	// Token: 0x06000151 RID: 337 RVA: 0x00068B28 File Offset: 0x00067F28
	internal unsafe static void ??__E??_7EcListAllMdbStatusRpc@@6B@@@YMXXZ()
	{
		<Module>.??_7EcListAllMdbStatusRpc@@6B@ = ref <Module>.??_R4EcListAllMdbStatusRpc@@6B@;
		*(ref <Module>.??_7EcListAllMdbStatusRpc@@6B@ + 8) = <Module>.__unep@?InternalExecute@AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcListAllMdbStatusRpc@@6B@ + 16) = <Module>.__unep@?EcValidateParameters@EcListAllMdbStatusRpc@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcListAllMdbStatusRpc@@6B@ + 24) = (long)ldftn(EcListAllMdbStatusRpc.EcDispatchCall);
	}

	// Token: 0x06000152 RID: 338 RVA: 0x00068B6C File Offset: 0x00067F6C
	internal unsafe static void ??__E??_7EcListMdbStatusRpc@@6B@@@YMXXZ()
	{
		<Module>.??_7EcListMdbStatusRpc@@6B@ = ref <Module>.??_R4EcListMdbStatusRpc@@6B@;
		*(ref <Module>.??_7EcListMdbStatusRpc@@6B@ + 8) = <Module>.__unep@?InternalExecute@AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcListMdbStatusRpc@@6B@ + 16) = <Module>.__unep@?EcValidateParameters@EcListMdbStatusRpc@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcListMdbStatusRpc@@6B@ + 24) = (long)ldftn(EcListMdbStatusRpc.EcDispatchCall);
	}

	// Token: 0x06000153 RID: 339 RVA: 0x00068BB0 File Offset: 0x00067FB0
	internal unsafe static void ??__E??_7EcAdminGetCnctTableRpc@@6B@@@YMXXZ()
	{
		<Module>.??_7EcAdminGetCnctTableRpc@@6B@ = ref <Module>.??_R4EcAdminGetCnctTableRpc@@6B@;
		*(ref <Module>.??_7EcAdminGetCnctTableRpc@@6B@ + 8) = <Module>.__unep@?InternalExecute@AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcAdminGetCnctTableRpc@@6B@ + 16) = <Module>.__unep@?EcValidateParameters@EcAdminGetCnctTableRpc@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcAdminGetCnctTableRpc@@6B@ + 24) = (long)ldftn(EcAdminGetCnctTableRpc.EcDispatchCall);
	}

	// Token: 0x06000154 RID: 340 RVA: 0x00068BF4 File Offset: 0x00067FF4
	internal unsafe static void ??__E??_7EcGetLastBackupTimesRpc@@6B@@@YMXXZ()
	{
		<Module>.??_7EcGetLastBackupTimesRpc@@6B@ = ref <Module>.??_R4EcGetLastBackupTimesRpc@@6B@;
		*(ref <Module>.??_7EcGetLastBackupTimesRpc@@6B@ + 8) = <Module>.__unep@?InternalExecute@AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcGetLastBackupTimesRpc@@6B@ + 16) = <Module>.__unep@?EcValidateParameters@EcGetLastBackupTimesRpc@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcGetLastBackupTimesRpc@@6B@ + 24) = (long)ldftn(EcGetLastBackupTimesRpc.EcDispatchCall);
	}

	// Token: 0x06000155 RID: 341 RVA: 0x00068C38 File Offset: 0x00068038
	internal unsafe static void ??__E??_7EcClearAbsentInDsFlagOnMailboxRpc@@6B@@@YMXXZ()
	{
		<Module>.??_7EcClearAbsentInDsFlagOnMailboxRpc@@6B@ = ref <Module>.??_R4EcClearAbsentInDsFlagOnMailboxRpc@@6B@;
		*(ref <Module>.??_7EcClearAbsentInDsFlagOnMailboxRpc@@6B@ + 8) = <Module>.__unep@?InternalExecute@AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcClearAbsentInDsFlagOnMailboxRpc@@6B@ + 16) = <Module>.__unep@?EcValidateParameters@EcClearAbsentInDsFlagOnMailboxRpc@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcClearAbsentInDsFlagOnMailboxRpc@@6B@ + 24) = (long)ldftn(EcClearAbsentInDsFlagOnMailboxRpc.EcDispatchCall);
	}

	// Token: 0x06000156 RID: 342 RVA: 0x00068C7C File Offset: 0x0006807C
	internal unsafe static void ??__E??_7EcPurgeCachedMailboxObjectRpc@@6B@@@YMXXZ()
	{
		<Module>.??_7EcPurgeCachedMailboxObjectRpc@@6B@ = ref <Module>.??_R4EcPurgeCachedMailboxObjectRpc@@6B@;
		*(ref <Module>.??_7EcPurgeCachedMailboxObjectRpc@@6B@ + 8) = <Module>.__unep@?InternalExecute@AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcPurgeCachedMailboxObjectRpc@@6B@ + 16) = <Module>.__unep@?EcValidateParameters@EcPurgeCachedMailboxObjectRpc@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcPurgeCachedMailboxObjectRpc@@6B@ + 24) = (long)ldftn(EcPurgeCachedMailboxObjectRpc.EcDispatchCall);
	}

	// Token: 0x06000157 RID: 343 RVA: 0x00068CC0 File Offset: 0x000680C0
	internal unsafe static void ??__E??_7EcSyncMailboxesWithDSRpc@@6B@@@YMXXZ()
	{
		<Module>.??_7EcSyncMailboxesWithDSRpc@@6B@ = ref <Module>.??_R4EcSyncMailboxesWithDSRpc@@6B@;
		*(ref <Module>.??_7EcSyncMailboxesWithDSRpc@@6B@ + 8) = <Module>.__unep@?InternalExecute@AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcSyncMailboxesWithDSRpc@@6B@ + 16) = <Module>.__unep@?EcValidateParameters@EcSyncMailboxesWithDSRpc@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcSyncMailboxesWithDSRpc@@6B@ + 24) = (long)ldftn(EcSyncMailboxesWithDSRpc.EcDispatchCall);
	}

	// Token: 0x06000158 RID: 344 RVA: 0x00068D04 File Offset: 0x00068104
	internal unsafe static void ??__E??_7EcAdminDeletePrivateMailboxRpc@@6B@@@YMXXZ()
	{
		<Module>.??_7EcAdminDeletePrivateMailboxRpc@@6B@ = ref <Module>.??_R4EcAdminDeletePrivateMailboxRpc@@6B@;
		*(ref <Module>.??_7EcAdminDeletePrivateMailboxRpc@@6B@ + 8) = <Module>.__unep@?InternalExecute@AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcAdminDeletePrivateMailboxRpc@@6B@ + 16) = <Module>.__unep@?EcValidateParameters@EcAdminDeletePrivateMailboxRpc@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcAdminDeletePrivateMailboxRpc@@6B@ + 24) = (long)ldftn(EcAdminDeletePrivateMailboxRpc.EcDispatchCall);
	}

	// Token: 0x06000159 RID: 345 RVA: 0x00068D48 File Offset: 0x00068148
	internal unsafe static void ??__E??_7EcSetMailboxSecurityDescriptorRpc@@6B@@@YMXXZ()
	{
		<Module>.??_7EcSetMailboxSecurityDescriptorRpc@@6B@ = ref <Module>.??_R4EcSetMailboxSecurityDescriptorRpc@@6B@;
		*(ref <Module>.??_7EcSetMailboxSecurityDescriptorRpc@@6B@ + 8) = <Module>.__unep@?InternalExecute@AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcSetMailboxSecurityDescriptorRpc@@6B@ + 16) = <Module>.__unep@?EcValidateParameters@EcSetMailboxSecurityDescriptorRpc@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcSetMailboxSecurityDescriptorRpc@@6B@ + 24) = (long)ldftn(EcSetMailboxSecurityDescriptorRpc.EcDispatchCall);
	}

	// Token: 0x0600015A RID: 346 RVA: 0x00068D8C File Offset: 0x0006818C
	internal unsafe static void ??__E??_7EcGetMailboxSecurityDescriptorRpc@@6B@@@YMXXZ()
	{
		<Module>.??_7EcGetMailboxSecurityDescriptorRpc@@6B@ = ref <Module>.??_R4EcGetMailboxSecurityDescriptorRpc@@6B@;
		*(ref <Module>.??_7EcGetMailboxSecurityDescriptorRpc@@6B@ + 8) = <Module>.__unep@?InternalExecute@AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcGetMailboxSecurityDescriptorRpc@@6B@ + 16) = <Module>.__unep@?EcValidateParameters@EcGetMailboxSecurityDescriptorRpc@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcGetMailboxSecurityDescriptorRpc@@6B@ + 24) = (long)ldftn(EcGetMailboxSecurityDescriptorRpc.EcDispatchCall);
	}

	// Token: 0x0600015B RID: 347 RVA: 0x00068DD0 File Offset: 0x000681D0
	internal unsafe static void ??__E??_7EcAdminGetLogonTableRpc@@6B@@@YMXXZ()
	{
		<Module>.??_7EcAdminGetLogonTableRpc@@6B@ = ref <Module>.??_R4EcAdminGetLogonTableRpc@@6B@;
		*(ref <Module>.??_7EcAdminGetLogonTableRpc@@6B@ + 8) = <Module>.__unep@?InternalExecute@AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcAdminGetLogonTableRpc@@6B@ + 16) = <Module>.__unep@?EcValidateParameters@EcAdminGetLogonTableRpc@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcAdminGetLogonTableRpc@@6B@ + 24) = (long)ldftn(EcAdminGetLogonTableRpc.EcDispatchCall);
	}

	// Token: 0x0600015C RID: 348 RVA: 0x00068E14 File Offset: 0x00068214
	internal unsafe static void ??__E??_7EcMountDatabaseRpc@@6B@@@YMXXZ()
	{
		<Module>.??_7EcMountDatabaseRpc@@6B@ = ref <Module>.??_R4EcMountDatabaseRpc@@6B@;
		*(ref <Module>.??_7EcMountDatabaseRpc@@6B@ + 8) = <Module>.__unep@?InternalExecute@AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcMountDatabaseRpc@@6B@ + 16) = <Module>.__unep@?EcValidateParameters@EcMountDatabaseRpc@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcMountDatabaseRpc@@6B@ + 24) = (long)ldftn(EcMountDatabaseRpc.EcDispatchCall);
	}

	// Token: 0x0600015D RID: 349 RVA: 0x00068E58 File Offset: 0x00068258
	internal unsafe static void ??__E??_7EcUnmountDatabaseRpc@@6B@@@YMXXZ()
	{
		<Module>.??_7EcUnmountDatabaseRpc@@6B@ = ref <Module>.??_R4EcUnmountDatabaseRpc@@6B@;
		*(ref <Module>.??_7EcUnmountDatabaseRpc@@6B@ + 8) = <Module>.__unep@?InternalExecute@AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcUnmountDatabaseRpc@@6B@ + 16) = <Module>.__unep@?EcValidateParameters@EcUnmountDatabaseRpc@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcUnmountDatabaseRpc@@6B@ + 24) = (long)ldftn(EcUnmountDatabaseRpc.EcDispatchCall);
	}

	// Token: 0x0600015E RID: 350 RVA: 0x00068E9C File Offset: 0x0006829C
	internal unsafe static void ??__E??_7EcAdminSetMailboxBasicInfoRpc@@6B@@@YMXXZ()
	{
		<Module>.??_7EcAdminSetMailboxBasicInfoRpc@@6B@ = ref <Module>.??_R4EcAdminSetMailboxBasicInfoRpc@@6B@;
		*(ref <Module>.??_7EcAdminSetMailboxBasicInfoRpc@@6B@ + 8) = <Module>.__unep@?InternalExecute@AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcAdminSetMailboxBasicInfoRpc@@6B@ + 16) = <Module>.__unep@?EcValidateParameters@EcAdminSetMailboxBasicInfoRpc@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcAdminSetMailboxBasicInfoRpc@@6B@ + 24) = (long)ldftn(EcAdminSetMailboxBasicInfoRpc.EcDispatchCall);
	}

	// Token: 0x0600015F RID: 351 RVA: 0x00068EE0 File Offset: 0x000682E0
	internal unsafe static void ??__E??_7EcPurgeCachedMdbObjectRpc@@6B@@@YMXXZ()
	{
		<Module>.??_7EcPurgeCachedMdbObjectRpc@@6B@ = ref <Module>.??_R4EcPurgeCachedMdbObjectRpc@@6B@;
		*(ref <Module>.??_7EcPurgeCachedMdbObjectRpc@@6B@ + 8) = <Module>.__unep@?InternalExecute@AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcPurgeCachedMdbObjectRpc@@6B@ + 16) = <Module>.__unep@?EcValidateParameters@EcPurgeCachedMdbObjectRpc@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcPurgeCachedMdbObjectRpc@@6B@ + 24) = (long)ldftn(EcPurgeCachedMdbObjectRpc.EcDispatchCall);
	}

	// Token: 0x06000160 RID: 352 RVA: 0x00068F24 File Offset: 0x00068324
	internal unsafe static void ??__E??_7EcAdminGetMailboxTableRpc@@6B@@@YMXXZ()
	{
		<Module>.??_7EcAdminGetMailboxTableRpc@@6B@ = ref <Module>.??_R4EcAdminGetMailboxTableRpc@@6B@;
		*(ref <Module>.??_7EcAdminGetMailboxTableRpc@@6B@ + 8) = <Module>.__unep@?InternalExecute@AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcAdminGetMailboxTableRpc@@6B@ + 16) = <Module>.__unep@?EcValidateParameters@EcAdminGetMailboxTableRpc@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcAdminGetMailboxTableRpc@@6B@ + 24) = (long)ldftn(EcAdminGetMailboxTableRpc.EcDispatchCall);
	}

	// Token: 0x06000161 RID: 353 RVA: 0x00068F68 File Offset: 0x00068368
	internal unsafe static void ??__E??_7EcAdminNotifyOnDSChangeRpc@@6B@@@YMXXZ()
	{
		<Module>.??_7EcAdminNotifyOnDSChangeRpc@@6B@ = ref <Module>.??_R4EcAdminNotifyOnDSChangeRpc@@6B@;
		*(ref <Module>.??_7EcAdminNotifyOnDSChangeRpc@@6B@ + 8) = <Module>.__unep@?InternalExecute@AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcAdminNotifyOnDSChangeRpc@@6B@ + 16) = <Module>.__unep@?EcValidateParameters@EcAdminNotifyOnDSChangeRpc@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcAdminNotifyOnDSChangeRpc@@6B@ + 24) = (long)ldftn(EcAdminNotifyOnDSChangeRpc.EcDispatchCall);
	}

	// Token: 0x06000162 RID: 354 RVA: 0x00068FAC File Offset: 0x000683AC
	internal unsafe static void ??__E??_7EcLogReplayRequestRpc@@6B@@@YMXXZ()
	{
		<Module>.??_7EcLogReplayRequestRpc@@6B@ = ref <Module>.??_R4EcLogReplayRequestRpc@@6B@;
		*(ref <Module>.??_7EcLogReplayRequestRpc@@6B@ + 8) = <Module>.__unep@?InternalExecute@AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcLogReplayRequestRpc@@6B@ + 16) = <Module>.__unep@?EcValidateParameters@EcLogReplayRequestRpc@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcLogReplayRequestRpc@@6B@ + 24) = (long)ldftn(EcLogReplayRequestRpc.EcDispatchCall);
	}

	// Token: 0x06000163 RID: 355 RVA: 0x0001133C File Offset: 0x0001073C
	internal unsafe static _GUID GUIDFromGuid(ValueType guid)
	{
		byte[] array = ((Guid)guid).ToByteArray();
		int num = 0;
		int num2 = array.Length;
		_GUID result;
		if (0 < num2)
		{
			_GUID* ptr = &result;
			do
			{
				*(byte*)ptr = array[num];
				num++;
				ptr += 1L / (long)sizeof(_GUID);
			}
			while (num < num2);
		}
		return result;
	}

	// Token: 0x06000164 RID: 356 RVA: 0x00011BC8 File Offset: 0x00010FC8
	internal unsafe static uint[] UToMUInt32(int cul, uint* pul)
	{
		if (pul != null && cul != 0)
		{
			uint[] array = new uint[cul];
			ref uint uint32& = ref array[0];
			try
			{
				ulong num = (ulong)((long)cul * 4L);
				<Module>.memcpy_s(ref uint32&, num, (void*)pul, num);
			}
			catch
			{
				throw;
			}
			return array;
		}
		return null;
	}

	// Token: 0x06000165 RID: 357 RVA: 0x00011C24 File Offset: 0x00011024
	internal unsafe static int MToUUint32(uint[] mArray, int* outLen, uint** ppData)
	{
		*outLen = 0;
		uint* ptr;
		if (mArray == null)
		{
			ptr = <Module>.MIDL_user_allocate(0UL);
			if (ptr == null)
			{
				throw new OutOfMemoryException();
			}
		}
		else
		{
			ulong num = (ulong)((long)mArray.Length * 4L);
			ptr = <Module>.MIDL_user_allocate(num);
			if (ptr == null)
			{
				throw new OutOfMemoryException();
			}
			*outLen = mArray.Length;
			ref uint uint32& = ref mArray[0];
			try
			{
				<Module>.memcpy_s((void*)ptr, num, ref uint32&, num);
			}
			catch
			{
				throw;
			}
		}
		*(long*)ppData = ptr;
		return 0;
	}

	// Token: 0x06000166 RID: 358 RVA: 0x00011CA0 File Offset: 0x000110A0
	internal unsafe static EcListAllMdbStatus50AsyncState* {ctor}(EcListAllMdbStatus50AsyncState* A_0)
	{
		*(A_0 + 112L) = 0;
		*(A_0 + 116L) = 0;
		*(A_0 + 120L) = 0L;
		*(A_0 + 128L) = 0;
		*(A_0 + 136L) = 0L;
		return A_0;
	}

	// Token: 0x06000167 RID: 359 RVA: 0x00011CDC File Offset: 0x000110DC
	internal unsafe static void {dtor}(EcListAllMdbStatus50AsyncState* A_0)
	{
		ulong num = (ulong)(*(A_0 + 120L));
		if (num != 0UL)
		{
			<Module>.MIDL_user_free(num);
		}
		ulong num2 = (ulong)(*(A_0 + 136L));
		if (num2 != 0UL)
		{
			<Module>.MIDL_user_free(num2);
		}
	}

	// Token: 0x06000168 RID: 360 RVA: 0x00011D3C File Offset: 0x0001113C
	internal unsafe static void* __delDtor(EcListAllMdbStatus50AsyncState* A_0, uint A_0)
	{
		ulong num = (ulong)(*(A_0 + 120L));
		if (num != 0UL)
		{
			<Module>.MIDL_user_free(num);
		}
		ulong num2 = (ulong)(*(A_0 + 136L));
		if (num2 != 0UL)
		{
			<Module>.MIDL_user_free(num2);
		}
		if ((A_0 & 1U) != 0U)
		{
			<Module>.delete(A_0);
		}
		return A_0;
	}

	// Token: 0x06000169 RID: 361 RVA: 0x00068FF0 File Offset: 0x000683F0
	internal unsafe static void ??__E??_7AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@6B@@@YMXXZ()
	{
		<Module>.??_7AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@6B@ = ref <Module>.??_R4AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@6B@;
		*(ref <Module>.??_7AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@6B@ + 8) = <Module>.__unep@?InternalExecute@AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@$$FUEAAJXZ;
		*(ref <Module>.??_7AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@6B@ + 16) = <Module>.__unep@?EcValidateParameters@AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@$$FMEAAJXZ;
		*(ref <Module>.??_7AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@6B@ + 24) = (long)ldftn(_purecall);
	}

	// Token: 0x0600016A RID: 362 RVA: 0x00011D78 File Offset: 0x00011178
	internal unsafe static _GUID GUIDFromGuid(ValueType guid)
	{
		byte[] array = ((Guid)guid).ToByteArray();
		int num = 0;
		int num2 = array.Length;
		_GUID result;
		if (0 < num2)
		{
			_GUID* ptr = &result;
			do
			{
				*(byte*)ptr = array[num];
				num++;
				ptr += 1L / (long)sizeof(_GUID);
			}
			while (num < num2);
		}
		return result;
	}

	// Token: 0x0600016B RID: 363 RVA: 0x00015DE8 File Offset: 0x000151E8
	internal unsafe static int InternalExecute(AdminRpcServer_Wrapper* A_0)
	{
		IAdminRpcServer adminRpcServer = null;
		byte[] mByteArray = null;
		ClientSecurityContext clientSecurityContext = null;
		AdminRpcServerBase adminRpcServerBase = (AdminRpcServerBase)RpcServerBase.GetServerInstance(*(A_0 + 40L));
		if (adminRpcServerBase == null)
		{
			return -2147221227;
		}
		_GUID guid = 0;
		initblk(ref guid + 4, 0, 12L);
		AdminRpcServer_Wrapper* ptr = A_0 + 48L;
		int num = <Module>.RpcBindingInqObject(*ptr, &guid);
		if (0 != num)
		{
			return -2147221227;
		}
		bool flag = false;
		int result;
		try
		{
			adminRpcServer = null;
			Guid instanceGuid = <Module>.FromGUID(ref guid);
			int interfaceInstance = adminRpcServerBase.GetInterfaceInstance(instanceGuid, out adminRpcServer);
			if (0 != interfaceInstance)
			{
				result = interfaceInstance;
			}
			else
			{
				byte condition = (null != adminRpcServer) ? 1 : 0;
				ExAssert.Assert(condition != 0, "NULL interface returned.");
				AdminRpcServer_Wrapper* ptr2 = A_0 + 24L;
				if (*ptr2 != 0L)
				{
					AdminRpcServer_Wrapper* ptr3 = A_0 + 32L;
					if (*ptr3 != 0L)
					{
						int num2 = calli(System.Int32 modopt(System.Runtime.CompilerServices.IsLong) modopt(System.Runtime.CompilerServices.CallConvCdecl)(System.IntPtr), A_0, *(*A_0 + 8L));
						if (0 != num2)
						{
							return num2;
						}
						clientSecurityContext = RpcServerBase.GetClientSecurityContext(*ptr);
						if (clientSecurityContext != null && !clientSecurityContext.IsAnonymous && clientSecurityContext.IsAuthenticated && !clientSecurityContext.IsGuest)
						{
							byte[] array = <Module>.UToMBytes(*(A_0 + 8L), *(A_0 + 16L));
							mByteArray = null;
							int result2 = calli(System.Int32 modopt(System.Runtime.CompilerServices.IsLong)(System.IntPtr,Microsoft.Exchange.Rpc.AdminRpc.IAdminRpcServer,Microsoft.Exchange.Security.Authorization.ClientSecurityContext,System.Byte[],System.Byte[]&), A_0, adminRpcServer, clientSecurityContext, array, ref mByteArray, *(*A_0 + 16L));
							<Module>.MToUBytes(mByteArray, *ptr2, *ptr3);
							flag = true;
							return result2;
						}
						return -2147024891;
					}
				}
				result = -2147024809;
			}
		}
		finally
		{
			if (!flag)
			{
				*(*(A_0 + 24L)) = 0;
				AdminRpcServer_Wrapper* ptr4 = A_0 + 32L;
				ulong num3 = (ulong)(*(*ptr4));
				if (0UL != num3)
				{
					<Module>.MIDL_user_free(num3);
					*(*ptr4) = 0L;
				}
			}
			if (clientSecurityContext != null)
			{
				((IDisposable)clientSecurityContext).Dispose();
			}
		}
		return result;
	}

	// Token: 0x0600016C RID: 364 RVA: 0x00069034 File Offset: 0x00068434
	internal unsafe static void ??__E??_7AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@6B@@@YMXXZ()
	{
		<Module>.??_7AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@6B@ = ref <Module>.??_R4AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@6B@;
		*(ref <Module>.??_7AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@6B@ + 8) = <Module>.__unep@?InternalExecute@AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@$$FUEAAJXZ;
		*(ref <Module>.??_7AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@6B@ + 16) = <Module>.__unep@?EcValidateParameters@AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@$$FMEAAJXZ;
		*(ref <Module>.??_7AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@6B@ + 24) = (long)ldftn(_purecall);
	}

	// Token: 0x0600016D RID: 365 RVA: 0x00015F84 File Offset: 0x00015384
	internal unsafe static _GUID GUIDFromGuid(ValueType guid)
	{
		byte[] array = ((Guid)guid).ToByteArray();
		int num = 0;
		int num2 = array.Length;
		_GUID result;
		if (0 < num2)
		{
			_GUID* ptr = &result;
			do
			{
				*(byte*)ptr = array[num];
				num++;
				ptr += 1L / (long)sizeof(_GUID);
			}
			while (num < num2);
		}
		return result;
	}

	// Token: 0x0600016E RID: 366 RVA: 0x00015FC0 File Offset: 0x000153C0
	internal unsafe static _GUID GUIDFromGuid(ValueType guid)
	{
		byte[] array = ((Guid)guid).ToByteArray();
		int num = 0;
		int num2 = array.Length;
		_GUID result;
		if (0 < num2)
		{
			_GUID* ptr = &result;
			do
			{
				*(byte*)ptr = array[num];
				num++;
				ptr += 1L / (long)sizeof(_GUID);
			}
			while (num < num2);
		}
		return result;
	}

	// Token: 0x0600016F RID: 367 RVA: 0x00016404 File Offset: 0x00015804
	internal unsafe static void RunNow(void* hBinding, sbyte* assistantName, _GUID mailboxGuid, _GUID mdbGuid)
	{
		<Module>.RunNowHR(hBinding, assistantName, mailboxGuid, mdbGuid);
	}

	// Token: 0x06000170 RID: 368 RVA: 0x000162FC File Offset: 0x000156FC
	internal unsafe static void Halt(void* hBinding, sbyte* assistantName)
	{
		<Module>.HaltHR(hBinding, assistantName);
	}

	// Token: 0x06000171 RID: 369 RVA: 0x00016314 File Offset: 0x00015714
	internal unsafe static int RunNowWithParamsHR(void* hBinding, sbyte* assistantName, _GUID mailboxGuid, _GUID mdbGuid, sbyte* parameters)
	{
		AssistantsRpcServerBase assistantsRpcServerBase = (AssistantsRpcServerBase)RpcServerBase.GetServerInstance(AssistantsRpcServerBase.RpcIntfHandle);
		sbyte* ptr = assistantName;
		if (*(sbyte*)assistantName != 0)
		{
			do
			{
				ptr += 1L / (long)sizeof(sbyte);
			}
			while (*(sbyte*)ptr != 0);
		}
		long num = (long)(ptr - assistantName);
		string assistantName2 = new string((sbyte*)assistantName, 0, (int)num);
		sbyte* ptr2 = parameters;
		if (*(sbyte*)parameters != 0)
		{
			do
			{
				ptr2 += 1L / (long)sizeof(sbyte);
			}
			while (*(sbyte*)ptr2 != 0);
		}
		long num2 = (long)(ptr2 - parameters);
		string parameters2 = new string((sbyte*)parameters, 0, (int)num2);
		Guid guid = <Module>.Microsoft.Exchange.Rpc.?A0x1aeca6b5.GuidFromGUID(ref mdbGuid);
		Guid guid2 = <Module>.Microsoft.Exchange.Rpc.?A0x1aeca6b5.GuidFromGUID(ref mailboxGuid);
		return assistantsRpcServerBase.RunNowWithParamsHR(assistantName2, guid2, guid, parameters2);
	}

	// Token: 0x06000172 RID: 370 RVA: 0x000163A0 File Offset: 0x000157A0
	internal unsafe static int RunNowHR(void* hBinding, sbyte* assistantName, _GUID mailboxGuid, _GUID mdbGuid)
	{
		AssistantsRpcServerBase assistantsRpcServerBase = (AssistantsRpcServerBase)RpcServerBase.GetServerInstance(AssistantsRpcServerBase.RpcIntfHandle);
		sbyte* ptr = assistantName;
		if (*(sbyte*)assistantName != 0)
		{
			do
			{
				ptr += 1L / (long)sizeof(sbyte);
			}
			while (*(sbyte*)ptr != 0);
		}
		long num = (long)(ptr - assistantName);
		string assistantName2 = new string((sbyte*)assistantName, 0, (int)num);
		Guid guid = <Module>.Microsoft.Exchange.Rpc.?A0x1aeca6b5.GuidFromGUID(ref mdbGuid);
		Guid guid2 = <Module>.Microsoft.Exchange.Rpc.?A0x1aeca6b5.GuidFromGUID(ref mailboxGuid);
		return assistantsRpcServerBase.RunNowHR(assistantName2, guid2, guid);
	}

	// Token: 0x06000173 RID: 371 RVA: 0x00016254 File Offset: 0x00015654
	internal unsafe static int HaltHR(void* hBinding, sbyte* assistantName)
	{
		AssistantsRpcServerBase assistantsRpcServerBase = (AssistantsRpcServerBase)RpcServerBase.GetServerInstance(AssistantsRpcServerBase.RpcIntfHandle);
		sbyte* ptr = assistantName;
		if (*(sbyte*)assistantName != 0)
		{
			do
			{
				ptr += 1L / (long)sizeof(sbyte);
			}
			while (*(sbyte*)ptr != 0);
		}
		long num = (long)(ptr - assistantName);
		string assistantName2 = new string((sbyte*)assistantName, 0, (int)num);
		return assistantsRpcServerBase.HaltHR(assistantName2);
	}

	// Token: 0x06000174 RID: 372 RVA: 0x00016298 File Offset: 0x00015698
	internal unsafe static Guid GuidFromGUID(_GUID* guid)
	{
		Guid result = new Guid((uint)(*guid), *(guid + 4L), *(guid + 6L), *(guid + 8L), *(guid + 9L), *(guid + 10L), *(guid + 11L), *(guid + 12L), *(guid + 13L), *(guid + 14L), *(guid + 15L));
		return result;
	}

	// Token: 0x06000175 RID: 373 RVA: 0x0001641C File Offset: 0x0001581C
	internal static int ToUnmanagedBool([MarshalAs(UnmanagedType.U1)] bool boolValue)
	{
		return (!boolValue) ? 0 : 1;
	}

	// Token: 0x06000176 RID: 374 RVA: 0x00016448 File Offset: 0x00015848
	internal unsafe static RpcSeederStatus UToMSeederStatus(tagSeederStatus2* pSeederStatus)
	{
		if (pSeederStatus == null)
		{
			return null;
		}
		return new RpcSeederStatus
		{
			BytesRead = *(pSeederStatus + 8L),
			BytesWritten = *(pSeederStatus + 16L),
			BytesTotal = *(pSeederStatus + 24L),
			FileFullPath = <Module>.UToMString(*(pSeederStatus + 32L)),
			AddressForData = <Module>.UToMString(*(pSeederStatus + 40L)),
			State = (SeederState)(*pSeederStatus),
			ErrorInfo = <Module>.UToMErrorExceptionInfo(*(pSeederStatus + 48L)),
			FileNumber = (uint)(*(pSeederStatus + 56L)),
			FileCount = (uint)(*(pSeederStatus + 60L)),
			BytesTotalDirectory = *(pSeederStatus + 64L)
		};
	}

	// Token: 0x06000177 RID: 375 RVA: 0x000164E4 File Offset: 0x000158E4
	internal unsafe static _GUID* FromGuidArray(Guid[] pGuid, int* size)
	{
		if (pGuid != null)
		{
			int num = pGuid.Length;
			if (num >= 1)
			{
				_GUID* ptr = <Module>.MIDL_user_allocate((ulong)((long)num * 16L));
				if (ptr == null)
				{
					throw new OutOfMemoryException();
				}
				int num2 = pGuid.Length;
				*size = num2;
				int num3 = 0;
				if (0 < num2)
				{
					_GUID* ptr2 = ptr;
					do
					{
						Guid guid = pGuid[num3];
						_GUID guid2 = <Module>.ToGUID(ref guid);
						cpblk(ptr2, ref guid2, 16);
						num3++;
						ptr2 += 16L / (long)sizeof(_GUID);
					}
					while (num3 < *size);
				}
				return ptr;
			}
		}
		*size = 0;
		return null;
	}

	// Token: 0x06000178 RID: 376 RVA: 0x00016558 File Offset: 0x00015958
	internal unsafe static void InitSeederArgs(tagSeederArgs3* pSeederArgs)
	{
		if (pSeederArgs != null)
		{
			initblk(pSeederArgs, 0, 88L);
		}
	}

	// Token: 0x06000179 RID: 377 RVA: 0x00016570 File Offset: 0x00015970
	internal unsafe static void InitSeederArgs(tagSeederArgs4* pSeederArgs)
	{
		if (pSeederArgs != null)
		{
			initblk(pSeederArgs, 0, 96L);
		}
	}

	// Token: 0x0600017A RID: 378 RVA: 0x00016588 File Offset: 0x00015988
	internal unsafe static void InitSeederArgs(tagSeederArgs5* pSeederArgs)
	{
		if (pSeederArgs != null)
		{
			initblk(pSeederArgs, 0, 104L);
		}
	}

	// Token: 0x0600017B RID: 379 RVA: 0x000165A0 File Offset: 0x000159A0
	internal unsafe static void FreeSeederArgs(tagSeederArgs3* pSeederArgs)
	{
		if (pSeederArgs != null)
		{
			<Module>.FreeString(*(long*)(pSeederArgs + 40L / (long)sizeof(tagSeederArgs3)));
			*(long*)(pSeederArgs + 40L / (long)sizeof(tagSeederArgs3)) = 0L;
			<Module>.FreeString(*(long*)(pSeederArgs + 48L / (long)sizeof(tagSeederArgs3)));
			*(long*)(pSeederArgs + 48L / (long)sizeof(tagSeederArgs3)) = 0L;
			<Module>.FreeString(*(long*)(pSeederArgs + 56L / (long)sizeof(tagSeederArgs3)));
			*(long*)(pSeederArgs + 56L / (long)sizeof(tagSeederArgs3)) = 0L;
			<Module>.FreeString(*(long*)(pSeederArgs + 64L / (long)sizeof(tagSeederArgs3)));
			*(long*)(pSeederArgs + 64L / (long)sizeof(tagSeederArgs3)) = 0L;
			<Module>.FreeString(*(long*)(pSeederArgs + 72L / (long)sizeof(tagSeederArgs3)));
			*(long*)(pSeederArgs + 72L / (long)sizeof(tagSeederArgs3)) = 0L;
		}
	}

	// Token: 0x0600017C RID: 380 RVA: 0x00016610 File Offset: 0x00015A10
	internal unsafe static void FreeSeederArgs(tagSeederArgs4* pSeederArgs)
	{
		if (pSeederArgs != null)
		{
			<Module>.Microsoft.Exchange.Rpc.Cluster.?A0x5763173e.FreeSeederArgs((tagSeederArgs3*)pSeederArgs);
		}
	}

	// Token: 0x0600017D RID: 381 RVA: 0x00016628 File Offset: 0x00015A28
	internal unsafe static void FreeSeederArgs(tagSeederArgs5* pSeederArgs)
	{
		if (pSeederArgs != null)
		{
			<Module>.Microsoft.Exchange.Rpc.Cluster.?A0x5763173e.FreeSeederArgs((tagSeederArgs3*)pSeederArgs);
		}
	}

	// Token: 0x0600017E RID: 382 RVA: 0x00016640 File Offset: 0x00015A40
	internal unsafe static int MToUSeederArgs(RpcSeederArgs seederArgs, tagSeederArgs3* pSeederArgs)
	{
		if (seederArgs != null && pSeederArgs != null)
		{
			initblk(pSeederArgs, 0, 88L);
			Guid instanceGuid = seederArgs.InstanceGuid;
			_GUID guid = <Module>.ToGUID(ref instanceGuid);
			cpblk(pSeederArgs, ref guid, 16);
			int num = (!seederArgs.DeleteExistingFiles) ? 0 : 1;
			*(int*)(pSeederArgs + 16L / (long)sizeof(tagSeederArgs3)) = num;
			int num2 = (!seederArgs.AutoSuspend) ? 0 : 1;
			*(int*)(pSeederArgs + 20L / (long)sizeof(tagSeederArgs3)) = num2;
			int num3 = (!seederArgs.StreamingBackup) ? 0 : 1;
			*(int*)(pSeederArgs + 24L / (long)sizeof(tagSeederArgs3)) = num3;
			int num4 = (!seederArgs.ManualResume) ? 0 : 1;
			*(int*)(pSeederArgs + 28L / (long)sizeof(tagSeederArgs3)) = num4;
			int num5 = (!seederArgs.SeedDatabase) ? 0 : 1;
			*(int*)(pSeederArgs + 32L / (long)sizeof(tagSeederArgs3)) = num5;
			int num6 = (!seederArgs.SeedCiFiles) ? 0 : 1;
			*(int*)(pSeederArgs + 36L / (long)sizeof(tagSeederArgs3)) = num6;
			int num7 = <Module>.StringToUnmanaged(seederArgs.SeedingPath, (ushort**)(pSeederArgs + 40L / (long)sizeof(tagSeederArgs3)));
			if (num7 >= 0)
			{
				num7 = <Module>.StringToUnmanaged(seederArgs.LogFolderPath, (ushort**)(pSeederArgs + 48L / (long)sizeof(tagSeederArgs3)));
				if (num7 >= 0)
				{
					num7 = <Module>.StringToUnmanaged(seederArgs.SourceMachineName, (ushort**)(pSeederArgs + 56L / (long)sizeof(tagSeederArgs3)));
					if (num7 >= 0)
					{
						num7 = <Module>.StringToUnmanaged(seederArgs.DatabaseName, (ushort**)(pSeederArgs + 64L / (long)sizeof(tagSeederArgs3)));
						if (num7 >= 0)
						{
							num7 = <Module>.StringToUnmanaged(seederArgs.NetworkId, (ushort**)(pSeederArgs + 72L / (long)sizeof(tagSeederArgs3)));
							if (num7 >= 0)
							{
								bool? compressOverride = seederArgs.CompressOverride;
								*(int*)(pSeederArgs + 80L / (long)sizeof(tagSeederArgs3)) = <Module>.NullableBoolToInt(ref compressOverride);
								bool? encryptOverride = seederArgs.EncryptOverride;
								*(int*)(pSeederArgs + 84L / (long)sizeof(tagSeederArgs3)) = <Module>.NullableBoolToInt(ref encryptOverride);
								return 0;
							}
						}
					}
				}
			}
			<Module>.Microsoft.Exchange.Rpc.Cluster.?A0x5763173e.FreeSeederArgs(pSeederArgs);
			return num7;
		}
		return -2147024809;
	}

	// Token: 0x0600017F RID: 383 RVA: 0x000167A8 File Offset: 0x00015BA8
	internal unsafe static int MToUSeederArgs(RpcSeederArgs seederArgs, tagSeederArgs4* pSeederArgs)
	{
		if (seederArgs == null || pSeederArgs == null)
		{
			return -2147024809;
		}
		initblk(pSeederArgs, 0, 96L);
		int num = <Module>.Microsoft.Exchange.Rpc.Cluster.?A0x5763173e.MToUSeederArgs(seederArgs, (tagSeederArgs3*)pSeederArgs);
		if (num < 0)
		{
			<Module>.Microsoft.Exchange.Rpc.Cluster.?A0x5763173e.FreeSeederArgs((tagSeederArgs3*)pSeederArgs);
			return num;
		}
		*(int*)(pSeederArgs + 88L / (long)sizeof(tagSeederArgs4)) = seederArgs.MaxSeedsInParallel;
		int num2 = (!seederArgs.SafeDeleteExistingFiles) ? 0 : 1;
		*(int*)(pSeederArgs + 92L / (long)sizeof(tagSeederArgs4)) = num2;
		return 0;
	}

	// Token: 0x06000180 RID: 384 RVA: 0x00016800 File Offset: 0x00015C00
	internal unsafe static int MToUSeederArgs(RpcSeederArgs seederArgs, tagSeederArgs5* pSeederArgs)
	{
		if (seederArgs == null || pSeederArgs == null)
		{
			return -2147024809;
		}
		initblk(pSeederArgs, 0, 104L);
		int num = <Module>.Microsoft.Exchange.Rpc.Cluster.?A0x5763173e.MToUSeederArgs(seederArgs, (tagSeederArgs4*)pSeederArgs);
		if (num < 0)
		{
			<Module>.Microsoft.Exchange.Rpc.Cluster.?A0x5763173e.FreeSeederArgs((tagSeederArgs3*)pSeederArgs);
			return num;
		}
		*(int*)(pSeederArgs + 96L / (long)sizeof(tagSeederArgs5)) = (int)seederArgs.Flags;
		return 0;
	}

	// Token: 0x06000181 RID: 385 RVA: 0x0001864C File Offset: 0x00017A4C
	[return: MarshalAs(UnmanagedType.U1)]
	internal static bool IsValidDateTime(DateTime dateTime)
	{
		DateTime t = DateTime.FromFileTimeUtc(0L);
		int num;
		if (dateTime > t && dateTime < DateTime.MaxValue)
		{
			num = 1;
		}
		else
		{
			num = 0;
		}
		return (byte)num != 0;
	}

	// Token: 0x06000182 RID: 386 RVA: 0x00019844 File Offset: 0x00018C44
	[return: MarshalAs(UnmanagedType.U1)]
	internal static bool FromUnmanagedBool(int nativeBool)
	{
		return (nativeBool != 0) ? 1 : 0;
	}

	// Token: 0x06000183 RID: 387 RVA: 0x0001A100 File Offset: 0x00019500
	internal unsafe static int StringCchCopyW(ushort* pszDest, ulong cchDest, ushort* pszSrc)
	{
		int num = 0;
		if (cchDest == 0UL || cchDest > 2147483647UL)
		{
			num = -2147024809;
		}
		int result = num;
		if (num >= 0)
		{
			result = <Module>.?A0x0d7fa5bc.StringCopyWorkerW(pszDest, cchDest, null, pszSrc, 2147483646UL);
		}
		else if (cchDest > 0UL)
		{
			*pszDest = 0;
		}
		return result;
	}

	// Token: 0x06000184 RID: 388 RVA: 0x0001985C File Offset: 0x00018C5C
	internal unsafe static int StringValidateDestW(ushort* pszDest, ulong cchDest, ulong cchMax)
	{
		int result = 0;
		if (cchDest == 0UL || cchDest > cchMax)
		{
			result = -2147024809;
		}
		return result;
	}

	// Token: 0x06000185 RID: 389 RVA: 0x0001987C File Offset: 0x00018C7C
	internal unsafe static int StringCopyWorkerW(ushort* pszDest, ulong cchDest, ulong* pcchNewDestLength, ushort* pszSrc, ulong cchToCopy)
	{
		int result = 0;
		ulong num = 0UL;
		if (cchDest != 0UL)
		{
			ulong num2 = cchToCopy;
			long num3 = (long)(pszSrc - pszDest);
			while (num2 != 0UL)
			{
				ushort num4 = (num3 / 2L)[pszDest];
				if (num4 == 0)
				{
					break;
				}
				*pszDest = num4;
				pszDest += 2L / 2L;
				cchDest -= 1UL;
				num2 -= 1UL;
				num += 1UL;
				if (cchDest == 0UL)
				{
					goto IL_3D;
				}
			}
			if (cchDest != 0UL)
			{
				goto IL_4E;
			}
		}
		IL_3D:
		pszDest -= 2L / 2L;
		num -= 1UL;
		result = -2147024774;
		IL_4E:
		*pszDest = 0;
		if (pcchNewDestLength != null)
		{
			*pcchNewDestLength = num;
		}
		return result;
	}

	// Token: 0x06000186 RID: 390 RVA: 0x0001A144 File Offset: 0x00019544
	internal unsafe static RpcSeederArgs UToMSeederArgs(tagSeederArgs3* _pseederArgs)
	{
		if (_pseederArgs == null)
		{
			return null;
		}
		bool? encryptOverride = <Module>.IntToNullableBool(*(_pseederArgs + 84L));
		bool? compressOverride = <Module>.IntToNullableBool(*(_pseederArgs + 80L));
		Guid instanceGuid = <Module>.FromGUID(_pseederArgs);
		int num = (*(_pseederArgs + 36L) != 0) ? 1 : 0;
		int num2 = (*(_pseederArgs + 32L) != 0) ? 1 : 0;
		int num3 = (*(_pseederArgs + 28L) != 0) ? 1 : 0;
		int num4 = (*(_pseederArgs + 24L) != 0) ? 1 : 0;
		int num5 = (*(_pseederArgs + 20L) != 0) ? 1 : 0;
		int num6 = (*(_pseederArgs + 16L) != 0) ? 1 : 0;
		return new RpcSeederArgs(instanceGuid, (byte)num6 != 0, (byte)num5 != 0, <Module>.UToMString(*(_pseederArgs + 40L)), <Module>.UToMString(*(_pseederArgs + 48L)), <Module>.UToMString(*(_pseederArgs + 72L)), (byte)num4 != 0, <Module>.UToMString(*(_pseederArgs + 56L)), <Module>.UToMString(*(_pseederArgs + 64L)), (byte)num3 != 0, (byte)num2 != 0, (byte)num != 0, compressOverride, encryptOverride, 0, false, SeederRpcFlags.None);
	}

	// Token: 0x06000187 RID: 391 RVA: 0x0001A220 File Offset: 0x00019620
	internal unsafe static RpcSeederArgs UToMSeederArgs(tagSeederArgs4* _pseederArgs)
	{
		if (_pseederArgs == null)
		{
			return null;
		}
		bool? encryptOverride = <Module>.IntToNullableBool(*(_pseederArgs + 84L));
		bool? compressOverride = <Module>.IntToNullableBool(*(_pseederArgs + 80L));
		Guid instanceGuid = <Module>.FromGUID(_pseederArgs);
		int num = (*(_pseederArgs + 92L) != 0) ? 1 : 0;
		int num2 = (*(_pseederArgs + 36L) != 0) ? 1 : 0;
		int num3 = (*(_pseederArgs + 32L) != 0) ? 1 : 0;
		int num4 = (*(_pseederArgs + 28L) != 0) ? 1 : 0;
		int num5 = (*(_pseederArgs + 24L) != 0) ? 1 : 0;
		int num6 = (*(_pseederArgs + 20L) != 0) ? 1 : 0;
		int num7 = (*(_pseederArgs + 16L) != 0) ? 1 : 0;
		return new RpcSeederArgs(instanceGuid, (byte)num7 != 0, (byte)num6 != 0, <Module>.UToMString(*(_pseederArgs + 40L)), <Module>.UToMString(*(_pseederArgs + 48L)), <Module>.UToMString(*(_pseederArgs + 72L)), (byte)num5 != 0, <Module>.UToMString(*(_pseederArgs + 56L)), <Module>.UToMString(*(_pseederArgs + 64L)), (byte)num4 != 0, (byte)num3 != 0, (byte)num2 != 0, compressOverride, encryptOverride, *(_pseederArgs + 88L), (byte)num != 0, SeederRpcFlags.None);
	}

	// Token: 0x06000188 RID: 392 RVA: 0x0001A310 File Offset: 0x00019710
	internal unsafe static RpcSeederArgs UToMSeederArgs(tagSeederArgs5* _pseederArgs)
	{
		if (_pseederArgs == null)
		{
			return null;
		}
		bool? encryptOverride = <Module>.IntToNullableBool(*(_pseederArgs + 84L));
		bool? compressOverride = <Module>.IntToNullableBool(*(_pseederArgs + 80L));
		Guid instanceGuid = <Module>.FromGUID(_pseederArgs);
		int num = (*(_pseederArgs + 92L) != 0) ? 1 : 0;
		int num2 = (*(_pseederArgs + 36L) != 0) ? 1 : 0;
		int num3 = (*(_pseederArgs + 32L) != 0) ? 1 : 0;
		int num4 = (*(_pseederArgs + 28L) != 0) ? 1 : 0;
		int num5 = (*(_pseederArgs + 24L) != 0) ? 1 : 0;
		int num6 = (*(_pseederArgs + 20L) != 0) ? 1 : 0;
		int num7 = (*(_pseederArgs + 16L) != 0) ? 1 : 0;
		return new RpcSeederArgs(instanceGuid, (byte)num7 != 0, (byte)num6 != 0, <Module>.UToMString(*(_pseederArgs + 40L)), <Module>.UToMString(*(_pseederArgs + 48L)), <Module>.UToMString(*(_pseederArgs + 72L)), (byte)num5 != 0, <Module>.UToMString(*(_pseederArgs + 56L)), <Module>.UToMString(*(_pseederArgs + 64L)), (byte)num4 != 0, (byte)num3 != 0, (byte)num2 != 0, compressOverride, encryptOverride, *(_pseederArgs + 88L), (byte)num != 0, (SeederRpcFlags)(*(_pseederArgs + 96L)));
	}

	// Token: 0x06000189 RID: 393 RVA: 0x00019914 File Offset: 0x00018D14
	[return: MarshalAs(UnmanagedType.U1)]
	internal unsafe static bool BaseSecurityCheck(ReplayRpcServerBase serverInstance, void* hBinding)
	{
		byte[] sdBaseSystemBinaryForm = serverInstance.m_sdBaseSystemBinaryForm;
		return sdBaseSystemBinaryForm != null && RpcServerBase.CheckObjectSecurity(sdBaseSystemBinaryForm, 1, hBinding) == 0;
	}

	// Token: 0x0600018A RID: 394 RVA: 0x0001A404 File Offset: 0x00019804
	internal unsafe static ushort* ManagedStringToRpcOutputWsz(string managedString)
	{
		ushort* ptr = <Module>.StringToUnmanaged(managedString);
		ulong num = (ulong)((long)(managedString.Length + 1));
		ushort* ptr2 = <Module>.MIDL_user_allocate(num * 2UL);
		if (ptr2 != null)
		{
			if (num != 0UL && num <= 2147483647UL)
			{
				<Module>.?A0x0d7fa5bc.StringCopyWorkerW(ptr2, num, null, (ushort*)ptr, 2147483646UL);
			}
			else if (num > 0UL)
			{
				*ptr2 = 0;
			}
		}
		<Module>.FreeString(ptr);
		return ptr2;
	}

	// Token: 0x0600018B RID: 395 RVA: 0x0001993C File Offset: 0x00018D3C
	internal unsafe static int RequestSuspend(void* hBinding, _GUID dbGuid, ushort* suspendComment, tagErrorExceptionInfo* pErrorInfo)
	{
		ReplayRpcServerBase replayRpcServerBase = (ReplayRpcServerBase)RpcServerBase.GetServerInstance(ReplayRpcServerBase.RpcIntfHandle);
		if (replayRpcServerBase == null)
		{
			return -2147023181;
		}
		if (!<Module>.BaseSecurityCheck(replayRpcServerBase, hBinding))
		{
			return -2147024891;
		}
		Guid guid = <Module>.FromGUID(ref dbGuid);
		return <Module>.MToUErrorExceptionInfo(replayRpcServerBase.RequestSuspend(guid, <Module>.UToMString(suspendComment)), pErrorInfo);
	}

	// Token: 0x0600018C RID: 396 RVA: 0x0001998C File Offset: 0x00018D8C
	internal unsafe static int RequestSuspend2(void* hBinding, _GUID dbGuid, ushort* suspendComment, int flags, tagErrorExceptionInfo* pErrorInfo)
	{
		ReplayRpcServerBase replayRpcServerBase = (ReplayRpcServerBase)RpcServerBase.GetServerInstance(ReplayRpcServerBase.RpcIntfHandle);
		if (replayRpcServerBase == null)
		{
			return -2147023181;
		}
		if (!<Module>.BaseSecurityCheck(replayRpcServerBase, hBinding))
		{
			return -2147024891;
		}
		Guid guid = <Module>.FromGUID(ref dbGuid);
		return <Module>.MToUErrorExceptionInfo(replayRpcServerBase.RequestSuspend2(guid, <Module>.UToMString(suspendComment), (uint)flags), pErrorInfo);
	}

	// Token: 0x0600018D RID: 397 RVA: 0x000199E0 File Offset: 0x00018DE0
	internal unsafe static int RequestSuspend3(void* hBinding, _GUID dbGuid, ushort* suspendComment, int flags, int actionInitiator, tagErrorExceptionInfo* pErrorInfo)
	{
		ReplayRpcServerBase replayRpcServerBase = (ReplayRpcServerBase)RpcServerBase.GetServerInstance(ReplayRpcServerBase.RpcIntfHandle);
		if (replayRpcServerBase == null)
		{
			return -2147023181;
		}
		if (!<Module>.BaseSecurityCheck(replayRpcServerBase, hBinding))
		{
			return -2147024891;
		}
		Guid guid = <Module>.FromGUID(ref dbGuid);
		return <Module>.MToUErrorExceptionInfo(replayRpcServerBase.RequestSuspend3(guid, <Module>.UToMString(suspendComment), (uint)flags, (uint)actionInitiator), pErrorInfo);
	}

	// Token: 0x0600018E RID: 398 RVA: 0x00019A34 File Offset: 0x00018E34
	internal unsafe static int RequestResume(void* hBinding, _GUID dbGuid, tagErrorExceptionInfo* pErrorInfo)
	{
		ReplayRpcServerBase replayRpcServerBase = (ReplayRpcServerBase)RpcServerBase.GetServerInstance(ReplayRpcServerBase.RpcIntfHandle);
		if (replayRpcServerBase == null)
		{
			return -2147023181;
		}
		if (!<Module>.BaseSecurityCheck(replayRpcServerBase, hBinding))
		{
			return -2147024891;
		}
		Guid guid = <Module>.FromGUID(ref dbGuid);
		return <Module>.MToUErrorExceptionInfo(replayRpcServerBase.RequestResume(guid), pErrorInfo);
	}

	// Token: 0x0600018F RID: 399 RVA: 0x00019A80 File Offset: 0x00018E80
	internal unsafe static int RequestResume2(void* hBinding, _GUID dbGuid, int flags, tagErrorExceptionInfo* pErrorInfo)
	{
		ReplayRpcServerBase replayRpcServerBase = (ReplayRpcServerBase)RpcServerBase.GetServerInstance(ReplayRpcServerBase.RpcIntfHandle);
		if (replayRpcServerBase == null)
		{
			return -2147023181;
		}
		if (!<Module>.BaseSecurityCheck(replayRpcServerBase, hBinding))
		{
			return -2147024891;
		}
		Guid guid = <Module>.FromGUID(ref dbGuid);
		return <Module>.MToUErrorExceptionInfo(replayRpcServerBase.RequestResume2(guid, (uint)flags), pErrorInfo);
	}

	// Token: 0x06000190 RID: 400 RVA: 0x00019ACC File Offset: 0x00018ECC
	internal unsafe static int RpcsDisableReplayLag(void* hBinding, _GUID dbGuid, ushort* disableReason, tagErrorExceptionInfo* pErrorInfo)
	{
		ReplayRpcServerBase replayRpcServerBase = (ReplayRpcServerBase)RpcServerBase.GetServerInstance(ReplayRpcServerBase.RpcIntfHandle);
		if (replayRpcServerBase == null)
		{
			return -2147023181;
		}
		if (!<Module>.BaseSecurityCheck(replayRpcServerBase, hBinding))
		{
			return -2147024891;
		}
		Guid dbGuid2 = <Module>.FromGUID(ref dbGuid);
		return <Module>.MToUErrorExceptionInfo(replayRpcServerBase.RpcsDisableReplayLag2(dbGuid2, <Module>.UToMString(disableReason), ActionInitiatorType.Administrator), pErrorInfo);
	}

	// Token: 0x06000191 RID: 401 RVA: 0x00019B20 File Offset: 0x00018F20
	internal unsafe static int RpcsEnableReplayLag(void* hBinding, _GUID dbGuid, tagErrorExceptionInfo* pErrorInfo)
	{
		ReplayRpcServerBase replayRpcServerBase = (ReplayRpcServerBase)RpcServerBase.GetServerInstance(ReplayRpcServerBase.RpcIntfHandle);
		if (replayRpcServerBase == null)
		{
			return -2147023181;
		}
		if (!<Module>.BaseSecurityCheck(replayRpcServerBase, hBinding))
		{
			return -2147024891;
		}
		Guid dbGuid2 = <Module>.FromGUID(ref dbGuid);
		return <Module>.MToUErrorExceptionInfo(replayRpcServerBase.RpcsEnableReplayLag2(dbGuid2, ActionInitiatorType.Administrator), pErrorInfo);
	}

	// Token: 0x06000192 RID: 402 RVA: 0x00019B6C File Offset: 0x00018F6C
	internal unsafe static int RpcsDisableReplayLag2(void* hBinding, _GUID dbGuid, ushort* disableReason, int actionInitiator, tagErrorExceptionInfo* pErrorInfo)
	{
		ReplayRpcServerBase replayRpcServerBase = (ReplayRpcServerBase)RpcServerBase.GetServerInstance(ReplayRpcServerBase.RpcIntfHandle);
		if (replayRpcServerBase == null)
		{
			return -2147023181;
		}
		if (!<Module>.BaseSecurityCheck(replayRpcServerBase, hBinding))
		{
			return -2147024891;
		}
		Guid dbGuid2 = <Module>.FromGUID(ref dbGuid);
		return <Module>.MToUErrorExceptionInfo(replayRpcServerBase.RpcsDisableReplayLag2(dbGuid2, <Module>.UToMString(disableReason), (ActionInitiatorType)actionInitiator), pErrorInfo);
	}

	// Token: 0x06000193 RID: 403 RVA: 0x00019BC0 File Offset: 0x00018FC0
	internal unsafe static int RpcsEnableReplayLag2(void* hBinding, _GUID dbGuid, int actionInitiator, tagErrorExceptionInfo* pErrorInfo)
	{
		ReplayRpcServerBase replayRpcServerBase = (ReplayRpcServerBase)RpcServerBase.GetServerInstance(ReplayRpcServerBase.RpcIntfHandle);
		if (replayRpcServerBase == null)
		{
			return -2147023181;
		}
		if (!<Module>.BaseSecurityCheck(replayRpcServerBase, hBinding))
		{
			return -2147024891;
		}
		Guid dbGuid2 = <Module>.FromGUID(ref dbGuid);
		return <Module>.MToUErrorExceptionInfo(replayRpcServerBase.RpcsEnableReplayLag2(dbGuid2, (ActionInitiatorType)actionInitiator), pErrorInfo);
	}

	// Token: 0x06000194 RID: 404 RVA: 0x0001A460 File Offset: 0x00019860
	internal unsafe static int GetCopyStatusEx2(void* hBinding, uint collectionFlags, int sgSize, _GUID* pSgGuid, int* pcbArraySize, byte** ppSGCStatus, int* pSgSize, tagErrorExceptionInfo* pErrorInfo)
	{
		string text = null;
		string text2 = null;
		string text3 = null;
		string text4 = null;
		string text5 = null;
		RpcDatabaseCopyStatus[] array = null;
		byte* ptr = null;
		int num = 0;
		*(long*)ppSGCStatus = 0L;
		*pSgSize = 0;
		*pcbArraySize = 0;
		if (Microsoft.Exchange.Diagnostics.Components.Cluster.Replay.ExTraceGlobals.ReplayServiceRpcTracer.IsTraceEnabled(TraceType.DebugTrace))
		{
			RpcServerBase.GetBindingInformation(hBinding, out text5, out text4, out text3, out text2, out text);
			object[] args = new object[]
			{
				text5,
				text4,
				text3,
				text2,
				text,
				collectionFlags
			};
			Microsoft.Exchange.Diagnostics.Components.Cluster.Replay.ExTraceGlobals.ReplayServiceRpcTracer.TraceDebug(0L, "GetCopyStatusEx2: flags={5}, cl={0},ep={1},sAddr={2},sEp={3},ps={4}", args);
		}
		ReplayRpcServerBase replayRpcServerBase = (ReplayRpcServerBase)RpcServerBase.GetServerInstance(ReplayRpcServerBase.RpcIntfHandle);
		if (replayRpcServerBase == null)
		{
			return -2147023181;
		}
		Guid[] dbGuids = <Module>.?A0x0d7fa5bc.ToGuidArray(sgSize, pSgGuid);
		array = null;
		RpcErrorExceptionInfo copyStatus = replayRpcServerBase.GetCopyStatus((RpcGetDatabaseCopyStatusFlags)collectionFlags, dbGuids, ref array);
		int num2 = <Module>.MToUErrorExceptionInfo(copyStatus, pErrorInfo);
		if (num2 >= 0)
		{
			if (copyStatus.IsFailed() || array == null || array.Length <= 0)
			{
				return num2;
			}
			num2 = SerializationServices.Serialize(array, &ptr, &num);
			if (num2 >= 0)
			{
				*(long*)ppSGCStatus = ptr;
				*pSgSize = array.Length;
				*pcbArraySize = num;
				return num2;
			}
		}
		if (ptr != null)
		{
			<Module>.MIDL_user_free((void*)ptr);
		}
		<Module>.FreeErrorExceptionInfo(pErrorInfo);
		return num2;
	}

	// Token: 0x06000195 RID: 405 RVA: 0x0001A56C File Offset: 0x0001996C
	internal unsafe static int RpcsGetCopyStatusEx4(void* hBinding, uint collectionFlags2, int dbSize, _GUID* pDbGuid, int* pcbArraySize, byte** ppDBCStatus, int* pDbSize, tagErrorExceptionInfo* pErrorInfo)
	{
		string text = null;
		string text2 = null;
		string text3 = null;
		string text4 = null;
		string text5 = null;
		byte[] array = null;
		byte* ptr = null;
		int num = 0;
		*(long*)ppDBCStatus = 0L;
		*pDbSize = 0;
		*pcbArraySize = 0;
		if (Microsoft.Exchange.Diagnostics.Components.Cluster.Replay.ExTraceGlobals.ReplayServiceRpcTracer.IsTraceEnabled(TraceType.DebugTrace))
		{
			RpcServerBase.GetBindingInformation(hBinding, out text5, out text4, out text3, out text2, out text);
			object[] args = new object[]
			{
				text5,
				text4,
				text3,
				text2,
				text,
				collectionFlags2
			};
			Microsoft.Exchange.Diagnostics.Components.Cluster.Replay.ExTraceGlobals.ReplayServiceRpcTracer.TraceDebug(0L, "RpcsGetCopyStatusEx4: flags={5}, cl={0},ep={1},sAddr={2},sEp={3},ps={4}", args);
		}
		ReplayRpcServerBase replayRpcServerBase = (ReplayRpcServerBase)RpcServerBase.GetServerInstance(ReplayRpcServerBase.RpcIntfHandle);
		if (replayRpcServerBase == null)
		{
			return -2147023181;
		}
		Guid[] dbGuids = <Module>.?A0x0d7fa5bc.ToGuidArray(dbSize, pDbGuid);
		array = null;
		int num2 = 0;
		RpcErrorExceptionInfo copyStatus = replayRpcServerBase.GetCopyStatus2((RpcGetDatabaseCopyStatusFlags2)collectionFlags2, dbGuids, out num2, out array);
		int num3 = <Module>.MToUErrorExceptionInfo(copyStatus, pErrorInfo);
		if (num3 >= 0)
		{
			if (copyStatus.IsFailed() || array == null || array.Length <= 0)
			{
				return num3;
			}
			num3 = <Module>.GetUnmanagedBytes(array, &ptr, &num);
			if (num3 >= 0)
			{
				*(long*)ppDBCStatus = ptr;
				*pDbSize = num2;
				*pcbArraySize = num;
				return num3;
			}
		}
		if (ptr != null)
		{
			<Module>.MIDL_user_free((void*)ptr);
		}
		<Module>.FreeErrorExceptionInfo(pErrorInfo);
		return num3;
	}

	// Token: 0x06000196 RID: 406 RVA: 0x0001A680 File Offset: 0x00019A80
	internal unsafe static int RpcsGetCopyStatusWithHealthState(void* hBinding, uint collectionFlags2, int dbSize, _GUID* pDbGuid, int* pcbOutputDataSize, byte** ppOutputData, tagErrorExceptionInfo* pErrorInfo)
	{
		string text = null;
		string text2 = null;
		string text3 = null;
		string text4 = null;
		string text5 = null;
		RpcCopyStatusContainer rpcCopyStatusContainer = null;
		byte* ptr = null;
		int num = 0;
		*(long*)ppOutputData = 0L;
		*pcbOutputDataSize = 0;
		if (Microsoft.Exchange.Diagnostics.Components.Cluster.Replay.ExTraceGlobals.ReplayServiceRpcTracer.IsTraceEnabled(TraceType.DebugTrace))
		{
			RpcServerBase.GetBindingInformation(hBinding, out text5, out text4, out text3, out text2, out text);
			object[] args = new object[]
			{
				text5,
				text4,
				text3,
				text2,
				text,
				collectionFlags2
			};
			Microsoft.Exchange.Diagnostics.Components.Cluster.Replay.ExTraceGlobals.ReplayServiceRpcTracer.TraceDebug(0L, "RpcsGetCopyStatusWithHealthState: flags={5}, cl={0},ep={1},sAddr={2},sEp={3},ps={4}", args);
		}
		ReplayRpcServerBase replayRpcServerBase = (ReplayRpcServerBase)RpcServerBase.GetServerInstance(ReplayRpcServerBase.RpcIntfHandle);
		if (replayRpcServerBase == null)
		{
			return -2147023181;
		}
		Guid[] dbGuids = <Module>.?A0x0d7fa5bc.ToGuidArray(dbSize, pDbGuid);
		rpcCopyStatusContainer = null;
		RpcErrorExceptionInfo copyStatusWithHealthState = replayRpcServerBase.GetCopyStatusWithHealthState((RpcGetDatabaseCopyStatusFlags2)collectionFlags2, dbGuids, ref rpcCopyStatusContainer);
		int num2 = <Module>.MToUErrorExceptionInfo(copyStatusWithHealthState, pErrorInfo);
		if (num2 >= 0)
		{
			if (copyStatusWithHealthState.IsFailed() || rpcCopyStatusContainer == null)
			{
				return num2;
			}
			num2 = SerializationServices.Serialize(rpcCopyStatusContainer, &ptr, &num);
			if (num2 >= 0)
			{
				*(long*)ppOutputData = ptr;
				*pcbOutputDataSize = num;
				return num2;
			}
		}
		if (ptr != null)
		{
			<Module>.MIDL_user_free((void*)ptr);
		}
		<Module>.FreeErrorExceptionInfo(pErrorInfo);
		return num2;
	}

	// Token: 0x06000197 RID: 407 RVA: 0x0001A780 File Offset: 0x00019B80
	internal unsafe static int RpcsGetCopyStatusBasic(void* hBinding, uint collectionFlags2, int dbSize, _GUID* pDbGuid, int* pcbArraySize, byte** ppDBCStatus, int* pDbSize, tagErrorExceptionInfo* pErrorInfo)
	{
		string text = null;
		string text2 = null;
		string text3 = null;
		string text4 = null;
		string text5 = null;
		RpcDatabaseCopyStatusBasic[] array = null;
		byte* ptr = null;
		int num = 0;
		*(long*)ppDBCStatus = 0L;
		*pDbSize = 0;
		*pcbArraySize = 0;
		if (Microsoft.Exchange.Diagnostics.Components.Cluster.Replay.ExTraceGlobals.ReplayServiceRpcTracer.IsTraceEnabled(TraceType.DebugTrace))
		{
			RpcServerBase.GetBindingInformation(hBinding, out text5, out text4, out text3, out text2, out text);
			object[] args = new object[]
			{
				text5,
				text4,
				text3,
				text2,
				text,
				collectionFlags2
			};
			Microsoft.Exchange.Diagnostics.Components.Cluster.Replay.ExTraceGlobals.ReplayServiceRpcTracer.TraceDebug(0L, "RpcsGetCopyStatusBasic: flags={5}, cl={0},ep={1},sAddr={2},sEp={3},ps={4}", args);
		}
		ReplayRpcServerBase replayRpcServerBase = (ReplayRpcServerBase)RpcServerBase.GetServerInstance(ReplayRpcServerBase.RpcIntfHandle);
		if (replayRpcServerBase == null)
		{
			return -2147023181;
		}
		Guid[] dbGuids = <Module>.?A0x0d7fa5bc.ToGuidArray(dbSize, pDbGuid);
		array = null;
		RpcErrorExceptionInfo copyStatusBasic = replayRpcServerBase.GetCopyStatusBasic((RpcGetDatabaseCopyStatusFlags2)collectionFlags2, dbGuids, ref array);
		int num2 = <Module>.MToUErrorExceptionInfo(copyStatusBasic, pErrorInfo);
		if (num2 >= 0)
		{
			if (copyStatusBasic.IsFailed() || array == null || array.Length <= 0)
			{
				return num2;
			}
			num2 = SerializationServices.Serialize(array, &ptr, &num);
			if (num2 >= 0)
			{
				*(long*)ppDBCStatus = ptr;
				*pDbSize = array.Length;
				*pcbArraySize = num;
				return num2;
			}
		}
		if (ptr != null)
		{
			<Module>.MIDL_user_free((void*)ptr);
		}
		<Module>.FreeErrorExceptionInfo(pErrorInfo);
		return num2;
	}

	// Token: 0x06000198 RID: 408 RVA: 0x00019C0C File Offset: 0x0001900C
	internal unsafe static int GetDagNetworkConfig(void* hBinding, int* pcbResultArraySize, byte** ppResults, tagErrorExceptionInfo* pErrorInfo)
	{
		byte[] array = null;
		byte* ptr = null;
		int num = 0;
		*(long*)ppResults = 0L;
		*pcbResultArraySize = 0;
		ReplayRpcServerBase replayRpcServerBase = (ReplayRpcServerBase)RpcServerBase.GetServerInstance(ReplayRpcServerBase.RpcIntfHandle);
		if (replayRpcServerBase == null)
		{
			return -2147023181;
		}
		array = null;
		RpcErrorExceptionInfo dagNetworkConfig = replayRpcServerBase.GetDagNetworkConfig(ref array);
		int num2 = <Module>.MToUErrorExceptionInfo(dagNetworkConfig, pErrorInfo);
		if (num2 >= 0)
		{
			if (dagNetworkConfig.IsFailed() || array == null || array.Length <= 0)
			{
				return num2;
			}
			num2 = <Module>.GetUnmanagedBytes(array, &ptr, &num);
			if (num2 >= 0)
			{
				*(long*)ppResults = ptr;
				*pcbResultArraySize = num;
				return num2;
			}
		}
		if (ptr != null)
		{
			<Module>.MIDL_user_free((void*)ptr);
		}
		<Module>.FreeErrorExceptionInfo(pErrorInfo);
		return num2;
	}

	// Token: 0x06000199 RID: 409 RVA: 0x00019C94 File Offset: 0x00019094
	internal unsafe static int SetDagNetwork(void* hBinding, int cbSentBytes, byte* pSentBytes, tagErrorExceptionInfo* pErrorInfo)
	{
		ReplayRpcServerBase replayRpcServerBase = (ReplayRpcServerBase)RpcServerBase.GetServerInstance(ReplayRpcServerBase.RpcIntfHandle);
		if (replayRpcServerBase == null)
		{
			return -2147023181;
		}
		if (!<Module>.BaseSecurityCheck(replayRpcServerBase, hBinding))
		{
			return -2147024891;
		}
		byte[] dagNetwork = <Module>.MakeManagedBytes(pSentBytes, cbSentBytes);
		return <Module>.MToUErrorExceptionInfo(replayRpcServerBase.SetDagNetwork(dagNetwork), pErrorInfo);
	}

	// Token: 0x0600019A RID: 410 RVA: 0x00019CE0 File Offset: 0x000190E0
	internal unsafe static int SetDagNetworkConfig(void* hBinding, int cbSentBytes, byte* pSentBytes, tagErrorExceptionInfo* pErrorInfo)
	{
		ReplayRpcServerBase replayRpcServerBase = (ReplayRpcServerBase)RpcServerBase.GetServerInstance(ReplayRpcServerBase.RpcIntfHandle);
		if (replayRpcServerBase == null)
		{
			return -2147023181;
		}
		if (!<Module>.BaseSecurityCheck(replayRpcServerBase, hBinding))
		{
			return -2147024891;
		}
		byte[] dagNetworkConfig = <Module>.MakeManagedBytes(pSentBytes, cbSentBytes);
		return <Module>.MToUErrorExceptionInfo(replayRpcServerBase.SetDagNetworkConfig(dagNetworkConfig), pErrorInfo);
	}

	// Token: 0x0600019B RID: 411 RVA: 0x00019D2C File Offset: 0x0001912C
	internal unsafe static int RemoveDagNetwork(void* hBinding, int cbSentBytes, byte* pSentBytes, tagErrorExceptionInfo* pErrorInfo)
	{
		ReplayRpcServerBase replayRpcServerBase = (ReplayRpcServerBase)RpcServerBase.GetServerInstance(ReplayRpcServerBase.RpcIntfHandle);
		if (replayRpcServerBase == null)
		{
			return -2147023181;
		}
		if (!<Module>.BaseSecurityCheck(replayRpcServerBase, hBinding))
		{
			return -2147024891;
		}
		byte[] deleteRequest = <Module>.MakeManagedBytes(pSentBytes, cbSentBytes);
		return <Module>.MToUErrorExceptionInfo(replayRpcServerBase.RemoveDagNetwork(deleteRequest), pErrorInfo);
	}

	// Token: 0x0600019C RID: 412 RVA: 0x00019D78 File Offset: 0x00019178
	internal unsafe static int RunConfigurationUpdater(void* hBinding, tagErrorExceptionInfo* pErrorInfo)
	{
		ReplayRpcServerBase replayRpcServerBase = (ReplayRpcServerBase)RpcServerBase.GetServerInstance(ReplayRpcServerBase.RpcIntfHandle);
		if (replayRpcServerBase == null)
		{
			return -2147023181;
		}
		if (!<Module>.BaseSecurityCheck(replayRpcServerBase, hBinding))
		{
			return -2147024891;
		}
		return <Module>.MToUErrorExceptionInfo(replayRpcServerBase.RunConfigurationUpdater(), pErrorInfo);
	}

	// Token: 0x0600019D RID: 413 RVA: 0x00019DBC File Offset: 0x000191BC
	internal unsafe static int RpcsNotifyChangedReplayConfiguration(void* hBinding, _GUID dbGuid, int waitForCompletion, int exitAfterEnqueueing, int isHighPriority, int changeHint, tagErrorExceptionInfo* pErrorInfo)
	{
		ReplayRpcServerBase replayRpcServerBase = (ReplayRpcServerBase)RpcServerBase.GetServerInstance(ReplayRpcServerBase.RpcIntfHandle);
		if (replayRpcServerBase == null)
		{
			return -2147023181;
		}
		if (!<Module>.BaseSecurityCheck(replayRpcServerBase, hBinding))
		{
			return -2147024891;
		}
		Guid guid = <Module>.FromGUID(ref dbGuid);
		int num = (isHighPriority != 0) ? 1 : 0;
		int num2 = (exitAfterEnqueueing != 0) ? 1 : 0;
		int num3 = (waitForCompletion != 0) ? 1 : 0;
		return <Module>.MToUErrorExceptionInfo(replayRpcServerBase.RpcsNotifyChangedReplayConfiguration(guid, (byte)num3 != 0, (byte)num2 != 0, (byte)num != 0, changeHint), pErrorInfo);
	}

	// Token: 0x0600019E RID: 414 RVA: 0x0001A88C File Offset: 0x00019C8C
	internal unsafe static int RpcsClusterPrepareDatabaseSeedAndBegin3(void* hBinding, tagSeederArgs3* pSeederArgs, tagErrorExceptionInfo* pErrorExceptionInfo, tagSeederStatus2* pSeederStatus)
	{
		RpcSeederStatus rpcSeederStatus = null;
		ReplayRpcServerBase replayRpcServerBase = (ReplayRpcServerBase)RpcServerBase.GetServerInstance(ReplayRpcServerBase.RpcIntfHandle);
		if (replayRpcServerBase == null)
		{
			return -2147023181;
		}
		if (!<Module>.BaseSecurityCheck(replayRpcServerBase, hBinding))
		{
			return -2147024891;
		}
		RpcSeederArgs seederArgs = <Module>.?A0x0d7fa5bc.UToMSeederArgs(pSeederArgs);
		rpcSeederStatus = null;
		int num = <Module>.MToUErrorExceptionInfo(replayRpcServerBase.RpcsPrepareDatabaseSeedAndBegin(seederArgs, ref rpcSeederStatus), pErrorExceptionInfo);
		if (num >= 0)
		{
			if (rpcSeederStatus != null)
			{
				num = <Module>.?A0x0d7fa5bc.MToUSeederStatus(rpcSeederStatus, pSeederStatus);
				if (num < 0)
				{
					goto IL_56;
				}
			}
			return 0;
		}
		IL_56:
		<Module>.FreeErrorExceptionInfo(pErrorExceptionInfo);
		<Module>.FreeSeederStatus(pSeederStatus);
		return num;
	}

	// Token: 0x0600019F RID: 415 RVA: 0x0001A900 File Offset: 0x00019D00
	internal unsafe static int RpcsClusterPrepareDatabaseSeedAndBegin4(void* hBinding, tagSeederArgs4* pSeederArgs, tagErrorExceptionInfo* pErrorExceptionInfo, tagSeederStatus2* pSeederStatus)
	{
		RpcSeederStatus rpcSeederStatus = null;
		ReplayRpcServerBase replayRpcServerBase = (ReplayRpcServerBase)RpcServerBase.GetServerInstance(ReplayRpcServerBase.RpcIntfHandle);
		if (replayRpcServerBase == null)
		{
			return -2147023181;
		}
		if (!<Module>.BaseSecurityCheck(replayRpcServerBase, hBinding))
		{
			return -2147024891;
		}
		RpcSeederArgs seederArgs = <Module>.?A0x0d7fa5bc.UToMSeederArgs(pSeederArgs);
		rpcSeederStatus = null;
		int num = <Module>.MToUErrorExceptionInfo(replayRpcServerBase.RpcsPrepareDatabaseSeedAndBegin(seederArgs, ref rpcSeederStatus), pErrorExceptionInfo);
		if (num >= 0)
		{
			if (rpcSeederStatus != null)
			{
				num = <Module>.?A0x0d7fa5bc.MToUSeederStatus(rpcSeederStatus, pSeederStatus);
				if (num < 0)
				{
					goto IL_56;
				}
			}
			return 0;
		}
		IL_56:
		<Module>.FreeErrorExceptionInfo(pErrorExceptionInfo);
		<Module>.FreeSeederStatus(pSeederStatus);
		return num;
	}

	// Token: 0x060001A0 RID: 416 RVA: 0x0001A974 File Offset: 0x00019D74
	internal unsafe static int RpcsClusterPrepareDatabaseSeedAndBegin5(void* hBinding, tagSeederArgs5* pSeederArgs, tagErrorExceptionInfo* pErrorExceptionInfo, tagSeederStatus2* pSeederStatus)
	{
		RpcSeederStatus rpcSeederStatus = null;
		ReplayRpcServerBase replayRpcServerBase = (ReplayRpcServerBase)RpcServerBase.GetServerInstance(ReplayRpcServerBase.RpcIntfHandle);
		if (replayRpcServerBase == null)
		{
			return -2147023181;
		}
		if (!<Module>.BaseSecurityCheck(replayRpcServerBase, hBinding))
		{
			return -2147024891;
		}
		RpcSeederArgs seederArgs = <Module>.?A0x0d7fa5bc.UToMSeederArgs(pSeederArgs);
		rpcSeederStatus = null;
		int num = <Module>.MToUErrorExceptionInfo(replayRpcServerBase.RpcsPrepareDatabaseSeedAndBegin(seederArgs, ref rpcSeederStatus), pErrorExceptionInfo);
		if (num >= 0)
		{
			if (rpcSeederStatus != null)
			{
				num = <Module>.?A0x0d7fa5bc.MToUSeederStatus(rpcSeederStatus, pSeederStatus);
				if (num < 0)
				{
					goto IL_56;
				}
			}
			return 0;
		}
		IL_56:
		<Module>.FreeErrorExceptionInfo(pErrorExceptionInfo);
		<Module>.FreeSeederStatus(pSeederStatus);
		return num;
	}

	// Token: 0x060001A1 RID: 417 RVA: 0x00019E30 File Offset: 0x00019230
	internal unsafe static int CancelDbSeed(void* hBinding, _GUID dbGuid, tagErrorExceptionInfo* pErrorInfo)
	{
		ReplayRpcServerBase replayRpcServerBase = (ReplayRpcServerBase)RpcServerBase.GetServerInstance(ReplayRpcServerBase.RpcIntfHandle);
		if (replayRpcServerBase == null)
		{
			return -2147023181;
		}
		if (!<Module>.BaseSecurityCheck(replayRpcServerBase, hBinding))
		{
			return -2147024891;
		}
		Guid dbGuid2 = <Module>.FromGUID(ref dbGuid);
		return <Module>.MToUErrorExceptionInfo(replayRpcServerBase.CancelDbSeed(dbGuid2), pErrorInfo);
	}

	// Token: 0x060001A2 RID: 418 RVA: 0x00019E7C File Offset: 0x0001927C
	internal unsafe static int EndDbSeed(void* hBinding, _GUID dbGuid, tagErrorExceptionInfo* pErrorInfo)
	{
		ReplayRpcServerBase replayRpcServerBase = (ReplayRpcServerBase)RpcServerBase.GetServerInstance(ReplayRpcServerBase.RpcIntfHandle);
		if (replayRpcServerBase == null)
		{
			return -2147023181;
		}
		if (!<Module>.BaseSecurityCheck(replayRpcServerBase, hBinding))
		{
			return -2147024891;
		}
		Guid dbGuid2 = <Module>.FromGUID(ref dbGuid);
		return <Module>.MToUErrorExceptionInfo(replayRpcServerBase.EndDbSeed(dbGuid2), pErrorInfo);
	}

	// Token: 0x060001A3 RID: 419 RVA: 0x0001A9E8 File Offset: 0x00019DE8
	internal unsafe static int RpcsClusterGetDatabaseSeedStatus(void* hBinding, _GUID dbGuid, tagSeederStatus2* pSeederStatus, tagErrorExceptionInfo* pErrorExceptionInfo)
	{
		RpcSeederStatus rpcSeederStatus = null;
		ReplayRpcServerBase replayRpcServerBase = (ReplayRpcServerBase)RpcServerBase.GetServerInstance(ReplayRpcServerBase.RpcIntfHandle);
		if (replayRpcServerBase == null)
		{
			return -2147023181;
		}
		rpcSeederStatus = null;
		Guid dbGuid2 = <Module>.FromGUID(ref dbGuid);
		int num = <Module>.MToUErrorExceptionInfo(replayRpcServerBase.RpcsGetDatabaseSeedStatus(dbGuid2, ref rpcSeederStatus), pErrorExceptionInfo);
		if (num >= 0)
		{
			if (rpcSeederStatus != null)
			{
				num = <Module>.?A0x0d7fa5bc.MToUSeederStatus(rpcSeederStatus, pSeederStatus);
				if (num < 0)
				{
					goto IL_48;
				}
			}
			return 0;
		}
		IL_48:
		<Module>.FreeErrorExceptionInfo(pErrorExceptionInfo);
		<Module>.FreeSeederStatus(pSeederStatus);
		return num;
	}

	// Token: 0x060001A4 RID: 420 RVA: 0x0001AA4C File Offset: 0x00019E4C
	internal unsafe static int RpcsClusterInstallFailoverClustering(void* hBinding, ushort** pverboseLog, tagErrorExceptionInfo* pErrorInfo)
	{
		string managedString = null;
		ReplayRpcServerBase replayRpcServerBase = (ReplayRpcServerBase)RpcServerBase.GetServerInstance(ReplayRpcServerBase.RpcIntfHandle);
		if (replayRpcServerBase == null)
		{
			return -2147023181;
		}
		if (!<Module>.BaseSecurityCheck(replayRpcServerBase, hBinding))
		{
			return -2147024891;
		}
		managedString = null;
		RpcErrorExceptionInfo errorInfo = replayRpcServerBase.RpcsInstallFailoverClustering(ref managedString);
		*(long*)pverboseLog = <Module>.ManagedStringToRpcOutputWsz(managedString);
		return <Module>.MToUErrorExceptionInfo(errorInfo, pErrorInfo);
	}

	// Token: 0x060001A5 RID: 421 RVA: 0x0001AA9C File Offset: 0x00019E9C
	internal unsafe static int RpcsClusterCreateCluster(void* hBinding, ushort* clusterName, ushort* firstNodeName, int cAddresses, ushort** ipAddresses, uint* rgNetMasks, ushort** pverboseLog, tagErrorExceptionInfo* pErrorInfo)
	{
		string managedString = null;
		ReplayRpcServerBase replayRpcServerBase = (ReplayRpcServerBase)RpcServerBase.GetServerInstance(ReplayRpcServerBase.RpcIntfHandle);
		if (replayRpcServerBase == null)
		{
			return -2147023181;
		}
		if (!<Module>.BaseSecurityCheck(replayRpcServerBase, hBinding))
		{
			return -2147024891;
		}
		managedString = null;
		string[] array = new string[cAddresses];
		uint[] array2 = new uint[cAddresses];
		int num = 0;
		if (0 < cAddresses)
		{
			uint* ptr = rgNetMasks;
			ushort** ptr2 = ipAddresses;
			do
			{
				array[num] = <Module>.UToMString(*(long*)ptr2);
				array2[num] = (uint)(*ptr);
				num++;
				ptr2 += 8L / (long)sizeof(ushort*);
				ptr += 4L;
			}
			while (num < cAddresses);
		}
		RpcErrorExceptionInfo errorInfo = replayRpcServerBase.RpcsCreateCluster(<Module>.UToMString(clusterName), <Module>.UToMString(firstNodeName), array, array2, ref managedString);
		*(long*)pverboseLog = <Module>.ManagedStringToRpcOutputWsz(managedString);
		return <Module>.MToUErrorExceptionInfo(errorInfo, pErrorInfo);
	}

	// Token: 0x060001A6 RID: 422 RVA: 0x0001AB40 File Offset: 0x00019F40
	internal unsafe static int RpcsClusterDestroyCluster(void* hBinding, ushort* clusterName, ushort** pverboseLog, tagErrorExceptionInfo* pErrorInfo)
	{
		string managedString = null;
		ReplayRpcServerBase replayRpcServerBase = (ReplayRpcServerBase)RpcServerBase.GetServerInstance(ReplayRpcServerBase.RpcIntfHandle);
		if (replayRpcServerBase == null)
		{
			return -2147023181;
		}
		if (!<Module>.BaseSecurityCheck(replayRpcServerBase, hBinding))
		{
			return -2147024891;
		}
		managedString = null;
		RpcErrorExceptionInfo errorInfo = replayRpcServerBase.RpcsDestroyCluster(<Module>.UToMString(clusterName), ref managedString);
		*(long*)pverboseLog = <Module>.ManagedStringToRpcOutputWsz(managedString);
		return <Module>.MToUErrorExceptionInfo(errorInfo, pErrorInfo);
	}

	// Token: 0x060001A7 RID: 423 RVA: 0x0001AB98 File Offset: 0x00019F98
	internal unsafe static int RpcsClusterAddNodeToCluster(void* hBinding, ushort* newNode, ushort** pverboseLog, tagErrorExceptionInfo* pErrorInfo)
	{
		string managedString = null;
		ReplayRpcServerBase replayRpcServerBase = (ReplayRpcServerBase)RpcServerBase.GetServerInstance(ReplayRpcServerBase.RpcIntfHandle);
		if (replayRpcServerBase == null)
		{
			return -2147023181;
		}
		if (!<Module>.BaseSecurityCheck(replayRpcServerBase, hBinding))
		{
			return -2147024891;
		}
		managedString = null;
		RpcErrorExceptionInfo errorInfo = replayRpcServerBase.RpcsAddNodeToCluster(<Module>.UToMString(newNode), ref managedString);
		*(long*)pverboseLog = <Module>.ManagedStringToRpcOutputWsz(managedString);
		return <Module>.MToUErrorExceptionInfo(errorInfo, pErrorInfo);
	}

	// Token: 0x060001A8 RID: 424 RVA: 0x0001ABF0 File Offset: 0x00019FF0
	internal unsafe static int RpcsClusterEvictNodeFromCluster(void* hBinding, ushort* convictedNode, ushort** pverboseLog, tagErrorExceptionInfo* pErrorInfo)
	{
		string managedString = null;
		ReplayRpcServerBase replayRpcServerBase = (ReplayRpcServerBase)RpcServerBase.GetServerInstance(ReplayRpcServerBase.RpcIntfHandle);
		if (replayRpcServerBase == null)
		{
			return -2147023181;
		}
		if (!<Module>.BaseSecurityCheck(replayRpcServerBase, hBinding))
		{
			return -2147024891;
		}
		managedString = null;
		RpcErrorExceptionInfo errorInfo = replayRpcServerBase.RpcsEvictNodeFromCluster(<Module>.UToMString(convictedNode), ref managedString);
		*(long*)pverboseLog = <Module>.ManagedStringToRpcOutputWsz(managedString);
		return <Module>.MToUErrorExceptionInfo(errorInfo, pErrorInfo);
	}

	// Token: 0x060001A9 RID: 425 RVA: 0x0001AC48 File Offset: 0x0001A048
	internal unsafe static int RpcsClusterForceCleanupNode(void* hBinding, ushort** pverboseLog, tagErrorExceptionInfo* pErrorInfo)
	{
		string managedString = null;
		ReplayRpcServerBase replayRpcServerBase = (ReplayRpcServerBase)RpcServerBase.GetServerInstance(ReplayRpcServerBase.RpcIntfHandle);
		if (replayRpcServerBase == null)
		{
			return -2147023181;
		}
		if (!<Module>.BaseSecurityCheck(replayRpcServerBase, hBinding))
		{
			return -2147024891;
		}
		managedString = null;
		RpcErrorExceptionInfo errorInfo = replayRpcServerBase.RpcsForceCleanupNode(ref managedString);
		*(long*)pverboseLog = <Module>.ManagedStringToRpcOutputWsz(managedString);
		return <Module>.MToUErrorExceptionInfo(errorInfo, pErrorInfo);
	}

	// Token: 0x060001AA RID: 426 RVA: 0x00019F48 File Offset: 0x00019348
	internal unsafe static int MToUSeederStatus(RpcSeederStatus seederStatus, tagSeederStatus2* pSeederStatus)
	{
		if (seederStatus != null && pSeederStatus != null)
		{
			<Module>.InitSeederStatus(pSeederStatus);
			*(int*)pSeederStatus = (int)seederStatus.State;
			*(long*)(pSeederStatus + 8L / (long)sizeof(tagSeederStatus2)) = seederStatus.BytesRead;
			*(long*)(pSeederStatus + 16L / (long)sizeof(tagSeederStatus2)) = seederStatus.BytesWritten;
			*(long*)(pSeederStatus + 24L / (long)sizeof(tagSeederStatus2)) = seederStatus.BytesTotal;
			*(int*)(pSeederStatus + 56L / (long)sizeof(tagSeederStatus2)) = (int)seederStatus.FileNumber;
			*(int*)(pSeederStatus + 60L / (long)sizeof(tagSeederStatus2)) = (int)seederStatus.FileCount;
			*(long*)(pSeederStatus + 64L / (long)sizeof(tagSeederStatus2)) = seederStatus.BytesTotalDirectory;
			int num = <Module>.StringToUnmanaged(seederStatus.FileFullPath, (ushort**)(pSeederStatus + 32L / (long)sizeof(tagSeederStatus2)));
			if (num >= 0)
			{
				num = <Module>.StringToUnmanaged(seederStatus.AddressForData, (ushort**)(pSeederStatus + 40L / (long)sizeof(tagSeederStatus2)));
				if (num >= 0)
				{
					if (seederStatus.ErrorInfo != null)
					{
						tagErrorExceptionInfo* ptr = <Module>.MIDL_user_allocate(32UL);
						if (ptr == null)
						{
							num = -2147024882;
							goto IL_C5;
						}
						<Module>.InitErrorExceptionInfo(ptr);
						*(long*)(pSeederStatus + 48L / (long)sizeof(tagSeederStatus2)) = ptr;
						num = <Module>.MToUErrorExceptionInfo(seederStatus.ErrorInfo, ptr);
						if (num < 0)
						{
							goto IL_C5;
						}
					}
					return 0;
				}
			}
			IL_C5:
			<Module>.FreeSeederStatus(pSeederStatus);
			return num;
		}
		return -2147024809;
	}

	// Token: 0x060001AB RID: 427 RVA: 0x0001A02C File Offset: 0x0001942C
	internal unsafe static Guid[] ToGuidArray(int size, _GUID* pSgGuid)
	{
		if (size >= 1 && pSgGuid != null)
		{
			Guid[] array = new Guid[size];
			int num = 0;
			if (0 < size)
			{
				_GUID* ptr = pSgGuid;
				do
				{
					Guid guid = <Module>.FromGUID(ptr);
					array[num] = guid;
					num++;
					ptr += 16L / (long)sizeof(_GUID);
				}
				while (num < size);
			}
			return array;
		}
		return null;
	}

	// Token: 0x060001AC RID: 428 RVA: 0x0001A078 File Offset: 0x00019478
	internal static int NullableBoolToInt(ref bool? nullableBool)
	{
		if (nullableBool == null)
		{
			return 0;
		}
		return (!nullableBool.Value) ? 1 : 2;
	}

	// Token: 0x060001AD RID: 429 RVA: 0x0001A09C File Offset: 0x0001949C
	internal static string NullableBoolToString(ref bool? nullableBool)
	{
		if (nullableBool == null)
		{
			return "<null>";
		}
		if (!nullableBool.Value)
		{
			return "<false>";
		}
		return "<true>";
	}

	// Token: 0x060001AE RID: 430 RVA: 0x0001A0CC File Offset: 0x000194CC
	internal static bool? IntToNullableBool(int intBool)
	{
		bool? result = null;
		if (intBool != 1)
		{
			if (intBool == 2)
			{
				bool? flag = new bool?(true);
				result = flag;
			}
		}
		else
		{
			bool? flag2 = new bool?(false);
			result = flag2;
		}
		return result;
	}

	// Token: 0x060001AF RID: 431 RVA: 0x0001AC98 File Offset: 0x0001A098
	internal static ref char PtrToStringChars(string s)
	{
		ref byte ptr = s;
		if (ref ptr != null)
		{
			ptr = (ulong)RuntimeHelpers.OffsetToStringData + ref ptr;
		}
		return ref ptr;
	}

	// Token: 0x060001B0 RID: 432 RVA: 0x0001ACB4 File Offset: 0x0001A0B4
	internal unsafe static int MToUBytes(byte[] mByteArray, int* outLen, byte** ppData)
	{
		*outLen = 0;
		byte* ptr;
		if (mByteArray == null)
		{
			ptr = <Module>.MIDL_user_allocate(0UL);
			if (ptr == null)
			{
				return -2147024882;
			}
		}
		else
		{
			*outLen = mByteArray.Length;
			ptr = <Module>.MIDL_user_allocate((ulong)((long)mByteArray.Length));
			if (ptr == null)
			{
				return -2147024882;
			}
			IntPtr destination = new IntPtr((void*)ptr);
			Marshal.Copy(mByteArray, 0, destination, mByteArray.Length);
		}
		*(long*)ppData = ptr;
		return 0;
	}

	// Token: 0x060001B1 RID: 433 RVA: 0x0001AD04 File Offset: 0x0001A104
	internal unsafe static IntPtr MToUBytes(byte[] mByteArray, int* outLen)
	{
		*outLen = 0;
		if (mByteArray == null)
		{
			return Marshal.AllocHGlobal(0);
		}
		*outLen = mByteArray.Length;
		IntPtr intPtr = Marshal.AllocHGlobal(mByteArray.Length);
		Marshal.Copy(mByteArray, 0, intPtr, mByteArray.Length);
		return intPtr;
	}

	// Token: 0x060001B2 RID: 434 RVA: 0x0001AD38 File Offset: 0x0001A138
	internal unsafe static int MToUBytesN(byte[] mByteArray, int count, byte** ppData)
	{
		if (mByteArray == null || count > mByteArray.Length || count < 0)
		{
			return -2147024809;
		}
		byte* ptr = <Module>.MIDL_user_allocate((ulong)((long)count));
		if (ptr == null)
		{
			return -2147024882;
		}
		IntPtr destination = new IntPtr((void*)ptr);
		Marshal.Copy(mByteArray, 0, destination, count);
		*(long*)ppData = ptr;
		return 0;
	}

	// Token: 0x060001B3 RID: 435 RVA: 0x0001AD80 File Offset: 0x0001A180
	internal unsafe static byte* MToUBytesClient(byte[] mByteArray, int* outLen)
	{
		byte* result = null;
		int num = <Module>.MToUBytes(mByteArray, outLen, &result);
		if (num >= 0)
		{
			return result;
		}
		if (num == -2147024882)
		{
			throw new OutOfMemoryException();
		}
		throw new InvalidOperationException("Attempt to marshal byte array failed");
	}

	// Token: 0x060001B4 RID: 436 RVA: 0x0001ADB8 File Offset: 0x0001A1B8
	internal unsafe static byte[] UToMBytes(int cBytes, byte* pData)
	{
		if (pData != null && cBytes != 0)
		{
			byte[] array = new byte[cBytes];
			IntPtr source = new IntPtr((void*)pData);
			Marshal.Copy(source, array, 0, cBytes);
			return array;
		}
		return null;
	}

	// Token: 0x060001B5 RID: 437 RVA: 0x0001ADE8 File Offset: 0x0001A1E8
	internal static byte[] UToMBytes(int cBytes, IntPtr uPtrData)
	{
		if (!(uPtrData == IntPtr.Zero) && cBytes != 0)
		{
			byte[] array = new byte[cBytes];
			Marshal.Copy(uPtrData, array, 0, cBytes);
			return array;
		}
		return null;
	}

	// Token: 0x060001B6 RID: 438 RVA: 0x0001AE18 File Offset: 0x0001A218
	internal unsafe static ushort* StringToUnmanaged(string @string)
	{
		if (@string == null)
		{
			return null;
		}
		int length = @string.Length;
		ushort* ptr = <Module>.MIDL_user_allocate((ulong)((long)(length + 1) * 2L));
		if (ptr == null)
		{
			throw new OutOfMemoryException();
		}
		ref byte ptr2 = @string;
		if (ref ptr2 != null)
		{
			ptr2 = (ulong)RuntimeHelpers.OffsetToStringData + ref ptr2;
		}
		ref ushort uint16_u0020modopt(IsConst)& = ref ptr2;
		ulong num = (ulong)((long)length);
		if (<Module>.wmemcpy_s(ptr, num, ref uint16_u0020modopt(IsConst)&, num) != null)
		{
			<Module>.MIDL_user_free((void*)ptr);
			throw new ArgumentOutOfRangeException();
		}
		((long)length * 2L)[ptr / 2] = 0;
		return ptr;
	}

	// Token: 0x060001B7 RID: 439 RVA: 0x0001AE84 File Offset: 0x0001A284
	internal unsafe static int StringToUnmanaged(string @string, ushort** ptr)
	{
		*(long*)ptr = 0L;
		if (string.IsNullOrEmpty(@string))
		{
			return 0;
		}
		int length = @string.Length;
		ushort* ptr2 = <Module>.MIDL_user_allocate((ulong)((long)(length + 1) * 2L));
		if (ptr2 == null)
		{
			return -2147024882;
		}
		ref byte ptr3 = @string;
		if (ref ptr3 != null)
		{
			ptr3 = (ulong)RuntimeHelpers.OffsetToStringData + ref ptr3;
		}
		ref ushort uint16_u0020modopt(IsConst)& = ref ptr3;
		ulong num = (ulong)((long)length);
		if (<Module>.wmemcpy_s(ptr2, num, ref uint16_u0020modopt(IsConst)&, num) != null)
		{
			<Module>.MIDL_user_free((void*)ptr2);
			return -2147024809;
		}
		((long)length * 2L)[ptr2 / 2] = 0;
		*(long*)ptr = ptr2;
		return 0;
	}

	// Token: 0x060001B8 RID: 440 RVA: 0x0001AEF8 File Offset: 0x0001A2F8
	internal unsafe static sbyte* StringToUnmanagedMultiByte(string @string, uint codePageId)
	{
		ref byte ptr = @string;
		if (ref ptr != null)
		{
			ptr = (ulong)RuntimeHelpers.OffsetToStringData + ref ptr;
		}
		ref ushort uint16_u0020modopt(IsConst)& = ref ptr;
		ulong num = (ulong)<Module>.WideCharToMultiByte(codePageId, 0, ref uint16_u0020modopt(IsConst)&, -1, null, 0, null, null);
		if (num == 0UL)
		{
			throw new ArgumentException(string.Format("Unable to convert Unicode string to code page {0}, error = {1}", codePageId, <Module>.GetLastError()));
		}
		sbyte* ptr2 = <Module>.MIDL_user_allocate(num);
		if (ptr2 == null)
		{
			throw new OutOfMemoryException(string.Format("Unable to allocate {0} byte(s) of memory with midl_user_allocate", num));
		}
		if (<Module>.WideCharToMultiByte(codePageId, 0, ref uint16_u0020modopt(IsConst)&, -1, ptr2, (int)num, null, null) == null)
		{
			<Module>.MIDL_user_free((void*)ptr2);
			throw new ArgumentException(string.Format("Unable to convert Unicode string to code page {0}, error = {1}", codePageId, <Module>.GetLastError()));
		}
		return ptr2;
	}

	// Token: 0x060001B9 RID: 441 RVA: 0x0001AFA4 File Offset: 0x0001A3A4
	internal unsafe static string GetLocalComputerName(_COMPUTER_NAME_FORMAT nameType)
	{
		ushort* ptr = null;
		uint num = 0;
		string result = null;
		try
		{
			<Module>.GetComputerNameExW(nameType, null, &num);
			uint lastError = <Module>.GetLastError();
			if (234 != lastError)
			{
				Console.WriteLine("GetComputerNameEx failed with error {0}. Can't read the length of the requested computer name. File {1} line {2}", lastError, "f:\\15.00.1497\\sources\\dev\\common\\src\\rpc\\dll\\common.cpp", 272);
				return null;
			}
			ptr = <Module>.malloc(num * 2UL);
			if (null == ptr)
			{
				Console.WriteLine("malloc failed to allocate space for the buffer. File {0} line {1}", "f:\\15.00.1497\\sources\\dev\\common\\src\\rpc\\dll\\common.cpp", 280);
				return null;
			}
			if (<Module>.GetComputerNameExW(nameType, ptr, &num) == null)
			{
				uint lastError2 = <Module>.GetLastError();
				Console.WriteLine("GetComputerNameEx failed with error {0}. Can't read the requested computer name. File {1} line {2}", lastError2, "f:\\15.00.1497\\sources\\dev\\common\\src\\rpc\\dll\\common.cpp", 288);
				return null;
			}
			IntPtr ptr2 = new IntPtr((void*)ptr);
			result = Marshal.PtrToStringUni(ptr2);
		}
		finally
		{
			if (ptr != null)
			{
				<Module>.free((void*)ptr);
			}
		}
		return result;
	}

	// Token: 0x060001BA RID: 442 RVA: 0x0001B098 File Offset: 0x0001A498
	internal unsafe static Guid FromGUID(_GUID* guid)
	{
		Guid result = new Guid((uint)(*guid), *(guid + 4L), *(guid + 6L), *(guid + 8L), *(guid + 9L), *(guid + 10L), *(guid + 11L), *(guid + 12L), *(guid + 13L), *(guid + 14L), *(guid + 15L));
		return result;
	}

	// Token: 0x060001BB RID: 443 RVA: 0x0001B0E8 File Offset: 0x0001A4E8
	internal unsafe static _GUID ToGUID(Guid* guid)
	{
		_GUID result;
		cpblk(ref result, guid, 16);
		return result;
	}

	// Token: 0x060001BC RID: 444 RVA: 0x0001B104 File Offset: 0x0001A504
	internal unsafe static string UToMString(ushort* pStr)
	{
		if (pStr == null)
		{
			return null;
		}
		return new string((char*)pStr);
	}

	// Token: 0x060001BD RID: 445 RVA: 0x0001B11C File Offset: 0x0001A51C
	internal unsafe static void FreeString(ushort* pStr)
	{
		if (pStr != null)
		{
			<Module>.MIDL_user_free((void*)pStr);
		}
	}

	// Token: 0x060001BE RID: 446 RVA: 0x0001B134 File Offset: 0x0001A534
	internal unsafe static Guid? NullableGuidFromPGUID(_GUID* pguid)
	{
		Guid? result;
		if (pguid == null)
		{
			result = null;
		}
		else
		{
			Guid value = <Module>.FromGUID(pguid);
			Guid? guid = new Guid?(value);
			result = guid;
		}
		return result;
	}

	// Token: 0x060001BF RID: 447 RVA: 0x0001B2E8 File Offset: 0x0001A6E8
	internal static uint DwExRpcExceptionFilter(uint RpcExceptionCode)
	{
		if (RpcExceptionCode <= -1073741571)
		{
			if (RpcExceptionCode == -1073741571)
			{
				return 0;
			}
			if (RpcExceptionCode <= -1073741795)
			{
				if (RpcExceptionCode == -1073741795)
				{
					return 0;
				}
				if (RpcExceptionCode >= -2147483647)
				{
					if (RpcExceptionCode <= -2147483645)
					{
						return 0;
					}
					if (RpcExceptionCode > -1073741820)
					{
						if (RpcExceptionCode <= -1073741818)
						{
							return 0;
						}
					}
				}
			}
			else if (RpcExceptionCode == -1073741674 || RpcExceptionCode == -1073741654)
			{
				return 0;
			}
		}
		else if (RpcExceptionCode == -1073741420 || RpcExceptionCode == -1073741259 || RpcExceptionCode == -1073740791 || RpcExceptionCode == -1073740768)
		{
			return 0;
		}
		return 1;
	}

	// Token: 0x060001C0 RID: 448 RVA: 0x0001B4C8 File Offset: 0x0001A8C8
	internal unsafe static int StartSyncNow(void* hBinding, ushort* pTargetServer, int forceFullSync, int forceUpdateCookie, int* pfStarted)
	{
		EdgeSyncRpcServer edgeSyncRpcServer = (EdgeSyncRpcServer)RpcServerBase.GetServerInstance(EdgeSyncRpcServer.RpcIntfHandle);
		string targetServer = null;
		if (pTargetServer != null)
		{
			targetServer = Marshal.PtrToStringUni((IntPtr)((void*)pTargetServer));
		}
		byte forceUpdateCookie2 = (forceUpdateCookie == 1) ? 1 : 0;
		byte forceFullSync2 = (forceFullSync == 1) ? 1 : 0;
		*pfStarted = (int)edgeSyncRpcServer.StartSyncNow(targetServer, forceFullSync2 != 0, forceUpdateCookie2 != 0);
		return 0;
	}

	// Token: 0x060001C1 RID: 449 RVA: 0x0001B510 File Offset: 0x0001A910
	internal unsafe static int GetSyncNowResult(void* hBinding, int* pfContinue, int* pcbBytesRead, byte** ppDataBytes)
	{
		*pcbBytesRead = 0;
		*(long*)ppDataBytes = 0L;
		GetResultResults getResultResults;
		int result = <Module>.MToUBytes(((EdgeSyncRpcServer)RpcServerBase.GetServerInstance(EdgeSyncRpcServer.RpcIntfHandle)).GetSyncNowResult(ref getResultResults), pcbBytesRead, ppDataBytes);
		*pfContinue = (int)getResultResults;
		return result;
	}

	// Token: 0x060001C2 RID: 450 RVA: 0x0001DFDC File Offset: 0x0001D3DC
	internal unsafe static RundownQueue_ExCXH* {ctor}(RundownQueue_ExCXH* A_0)
	{
		<Module>.BaseRundownQueue<void\u0020*>.{ctor}(A_0);
		try
		{
			*A_0 = ref <Module>.??_7RundownQueue_ExCXH@@6B@;
		}
		catch
		{
			<Module>.___CxxCallUnwindDtor(ldftn(BaseRundownQueue<void\u0020*>.{dtor}), A_0);
			throw;
		}
		return A_0;
	}

	// Token: 0x060001C3 RID: 451 RVA: 0x0001E08C File Offset: 0x0001D48C
	internal unsafe static RundownQueue_ExACXH* {ctor}(RundownQueue_ExACXH* A_0)
	{
		<Module>.BaseRundownQueue<void\u0020*>.{ctor}(A_0);
		try
		{
			*A_0 = ref <Module>.??_7RundownQueue_ExACXH@@6B@;
		}
		catch
		{
			<Module>.___CxxCallUnwindDtor(ldftn(BaseRundownQueue<void\u0020*>.{dtor}), A_0);
			throw;
		}
		return A_0;
	}

	// Token: 0x060001C4 RID: 452 RVA: 0x00020130 File Offset: 0x0001F530
	internal unsafe static ExCXHRundown_Wrapper* {ctor}(ExCXHRundown_Wrapper* A_0, void* cxh)
	{
		*A_0 = ref <Module>.??_7ExCXHRundown_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@6B@;
		*(A_0 + 8L) = cxh;
		return A_0;
	}

	// Token: 0x060001C5 RID: 453 RVA: 0x00022A88 File Offset: 0x00021E88
	internal unsafe static int InternalExecute(ExCXHRundown_Wrapper* A_0)
	{
		ExchangeAsyncRpcServer_EMSMDB exchangeAsyncRpcServer_EMSMDB = (ExchangeAsyncRpcServer_EMSMDB)RpcServerBase.GetServerInstance(ExchangeAsyncRpcServer_EMSMDB.RpcIntfHandle);
		if (exchangeAsyncRpcServer_EMSMDB != null)
		{
			IntPtr contextHandle = new IntPtr(*(A_0 + 8L));
			exchangeAsyncRpcServer_EMSMDB.ContextHandleRundown(contextHandle);
		}
		return 0;
	}

	// Token: 0x060001C6 RID: 454 RVA: 0x0001E38C File Offset: 0x0001D78C
	internal unsafe static ExACXHRundown_Wrapper* {ctor}(ExACXHRundown_Wrapper* A_0, void* acxh)
	{
		*A_0 = ref <Module>.??_7ExACXHRundown_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@6B@;
		*(A_0 + 8L) = acxh;
		return A_0;
	}

	// Token: 0x060001C7 RID: 455 RVA: 0x00022670 File Offset: 0x00021A70
	internal unsafe static int InternalExecute(ExACXHRundown_Wrapper* A_0)
	{
		ExchangeAsyncRpcServer_AsyncEMSMDB exchangeAsyncRpcServer_AsyncEMSMDB = (ExchangeAsyncRpcServer_AsyncEMSMDB)RpcServerBase.GetServerInstance(ExchangeAsyncRpcServer_AsyncEMSMDB.RpcIntfHandle);
		if (exchangeAsyncRpcServer_AsyncEMSMDB != null)
		{
			IntPtr contextHandle = new IntPtr(*(A_0 + 8L));
			exchangeAsyncRpcServer_AsyncEMSMDB.ContextHandleRundown(contextHandle);
		}
		return 0;
	}

	// Token: 0x060001C8 RID: 456 RVA: 0x00022ED4 File Offset: 0x000222D4
	internal unsafe static ExchangeAsyncRpcCallWrapper_EMSMDB* {ctor}(ExchangeAsyncRpcCallWrapper_EMSMDB* A_0, IntPtr intfHandle)
	{
		IntPtr intPtr = intfHandle;
		*A_0 = ref <Module>.??_7?$BaseAsyncRpcCallWrapper@VExchangeAsyncRpcServer_EMSMDB@ExchangeServer@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 8L) = intPtr;
		*A_0 = ref <Module>.??_7ExchangeAsyncRpcCallWrapper_EMSMDB@ExchangeServer@Rpc@Exchange@Microsoft@@6B@ + 8;
		return A_0;
	}

	// Token: 0x060001C9 RID: 457 RVA: 0x0002319C File Offset: 0x0002259C
	internal unsafe static ExchangeAsyncRpcCallWrapper_AsyncEMSMDB* {ctor}(ExchangeAsyncRpcCallWrapper_AsyncEMSMDB* A_0, IntPtr intfHandle)
	{
		IntPtr intPtr = intfHandle;
		*A_0 = ref <Module>.??_7?$BaseAsyncRpcCallWrapper@VExchangeAsyncRpcServer_AsyncEMSMDB@ExchangeServer@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 8L) = intPtr;
		*A_0 = ref <Module>.??_7ExchangeAsyncRpcCallWrapper_AsyncEMSMDB@ExchangeServer@Rpc@Exchange@Microsoft@@6B@ + 8;
		return A_0;
	}

	// Token: 0x060001CA RID: 458 RVA: 0x00021A7C File Offset: 0x00020E7C
	internal unsafe static void DispatchCall(ExchangeAsyncRpcCallWrapper_EcDoDisconnect* A_0, ExchangeAsyncRpcServer_EMSMDB asyncServer, SafeRpcAsyncStateHandle asyncState)
	{
		ulong num = (ulong)(*(A_0 + 16L));
		if (num == 0UL)
		{
			throw new CallFailedException("Invalid output parameter locations");
		}
		if (*num == 0L)
		{
			throw new InvalidHandleException("Invalid context handle");
		}
		IntPtr pContextHandle = new IntPtr(num);
		ExchangeAsyncRpcState_Disconnect exchangeAsyncRpcState_Disconnect = BaseAsyncRpcState<Microsoft::Exchange::Rpc::ExchangeServer::ExchangeAsyncRpcState_Disconnect,Microsoft::Exchange::Rpc::ExchangeServer::ExchangeAsyncRpcServer_EMSMDB,Microsoft::Exchange::Rpc::IExchangeAsyncDispatch>.CreateFromPool();
		exchangeAsyncRpcState_Disconnect.Initialize(asyncState, asyncServer, pContextHandle);
		exchangeAsyncRpcState_Disconnect.Begin();
	}

	// Token: 0x060001CB RID: 459 RVA: 0x00022E9C File Offset: 0x0002229C
	internal unsafe static ExchangeAsyncRpcCallWrapper_EcDoDisconnect* {ctor}(ExchangeAsyncRpcCallWrapper_EcDoDisconnect* A_0, void** pcxh)
	{
		IntPtr rpcIntfHandle = ExchangeAsyncRpcServer_EMSMDB.RpcIntfHandle;
		*A_0 = ref <Module>.??_7?$BaseAsyncRpcCallWrapper@VExchangeAsyncRpcServer_EMSMDB@ExchangeServer@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 8L) = rpcIntfHandle;
		*A_0 = ref <Module>.??_7ExchangeAsyncRpcCallWrapper_EcDoDisconnect@ExchangeServer@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 16L) = pcxh;
		return A_0;
	}

	// Token: 0x060001CC RID: 460 RVA: 0x00021ACC File Offset: 0x00020ECC
	internal unsafe static void DispatchCall(ExchangeAsyncRpcCallWrapper_EcDoConnectEx* A_0, ExchangeAsyncRpcServer_EMSMDB asyncServer, SafeRpcAsyncStateHandle asyncState)
	{
		if (*(A_0 + 16L) == 0L)
		{
			throw new InvalidHandleException("Invalid binding handle");
		}
		ulong num = (ulong)(*(A_0 + 24L));
		if (num == 0UL || *(A_0 + 72L) == 0L || *(A_0 + 80L) == 0L || *(A_0 + 88L) == 0L || *(A_0 + 96L) == 0L || *(A_0 + 104L) == 0L || *(A_0 + 112L) == 0L || *(A_0 + 128L) == 0L || *(A_0 + 136L) == 0L || *(A_0 + 144L) == 0L || *(A_0 + 168L) == 0L || *(A_0 + 176L) == 0L)
		{
			throw new CallFailedException("Invalid output parameter locations");
		}
		if (*(A_0 + 32L) == 0L || *(A_0 + 120L) == 0L || *(A_0 + 152L) == 0L)
		{
			throw new FailRpcException("Invalid input parameter(s)", -2147024809);
		}
		*num = 0L;
		uint maxAuxOut = (uint)(*(*(A_0 + 176L)));
		*(*(A_0 + 104L)) = 0L;
		*(*(A_0 + 112L)) = 0L;
		*(*(A_0 + 72L)) = 0;
		*(*(A_0 + 80L)) = 0;
		*(*(A_0 + 88L)) = 0;
		*(*(A_0 + 176L)) = 0;
		*(*(A_0 + 128L)) = 3840;
		*(*(A_0 + 128L) + 2L) = (short)34265;
		*(*(A_0 + 128L) + 4L) = 10;
		int num2 = <Module>.EcCriticalVersionCheck(*(A_0 + 120L), *(A_0 + 136L));
		if (num2 != null)
		{
			throw new FailRpcException("Critical version check failed", num2);
		}
		if (*(A_0 + 48L) != 0)
		{
			throw new FailRpcException("m_cbLimit", -2147221246);
		}
		if (*(A_0 + 68L) != 1)
		{
			throw new FailRpcException("m_usFCanConvertCodePages", -2147221246);
		}
		ulong num3 = (ulong)(*(A_0 + 32L));
		if (num3 != 0UL && *num3 != 0)
		{
			if (*(A_0 + 152L) != 0L)
			{
				uint num4 = (uint)(*(A_0 + 160L));
				if (num4 > 0U && num4 < 8U)
				{
					throw new FailRpcException("AuxIn", -2147221227);
				}
			}
			IntPtr bindingHandle = new IntPtr(*(A_0 + 16L));
			IntPtr pContextHandle = new IntPtr(*(A_0 + 24L));
			IntPtr pUserDn = new IntPtr(*(A_0 + 32L));
			IntPtr pPollsMax = new IntPtr(*(A_0 + 72L));
			IntPtr pRetry = new IntPtr(*(A_0 + 80L));
			IntPtr pRetryDelay = new IntPtr(*(A_0 + 88L));
			IntPtr pIcxr = new IntPtr(*(A_0 + 96L));
			IntPtr pDNPrefix = new IntPtr(*(A_0 + 104L));
			IntPtr pDisplayName = new IntPtr(*(A_0 + 112L));
			IntPtr pClientVersion = new IntPtr(*(A_0 + 120L));
			IntPtr pServerVersion = new IntPtr(*(A_0 + 128L));
			IntPtr pTimeStamp = new IntPtr(*(A_0 + 144L));
			IntPtr pAuxIn = new IntPtr(*(A_0 + 152L));
			IntPtr pAuxOut = new IntPtr(*(A_0 + 168L));
			IntPtr pSizeAuxOut = new IntPtr(*(A_0 + 176L));
			ExchangeAsyncRpcState_Connect exchangeAsyncRpcState_Connect = BaseAsyncRpcState<Microsoft::Exchange::Rpc::ExchangeServer::ExchangeAsyncRpcState_Connect,Microsoft::Exchange::Rpc::ExchangeServer::ExchangeAsyncRpcServer_EMSMDB,Microsoft::Exchange::Rpc::IExchangeAsyncDispatch>.CreateFromPool();
			exchangeAsyncRpcState_Connect.Initialize(asyncState, asyncServer, bindingHandle, pContextHandle, pUserDn, (uint)(*(A_0 + 40L)), (uint)(*(A_0 + 44L)), (uint)(*(A_0 + 52L)), (uint)(*(A_0 + 56L)), (uint)(*(A_0 + 60L)), (uint)(*(A_0 + 64L)), pPollsMax, pRetry, pRetryDelay, pIcxr, pDNPrefix, pDisplayName, pClientVersion, pServerVersion, pTimeStamp, pAuxIn, (uint)(*(A_0 + 160L)), pAuxOut, pSizeAuxOut, maxAuxOut);
			exchangeAsyncRpcState_Connect.Begin();
			return;
		}
		throw new FailRpcException("m_szUserDN", -2147024891);
	}

	// Token: 0x060001CD RID: 461 RVA: 0x00022F40 File Offset: 0x00022340
	internal unsafe static ExchangeAsyncRpcCallWrapper_EcDoConnectEx* {ctor}(ExchangeAsyncRpcCallWrapper_EcDoConnectEx* A_0, void* hBinding, void** pcxh, byte* szUserDN, uint ulFlags, uint ulConMod, uint cbLimit, uint ulCpid, uint ulLcidString, uint ulLcidSort, uint ulIcxrLink, ushort usFCanConvertCodePages, uint* pcmsPollsMax, uint* pcRetry, uint* pcmsRetryDelay, ushort* picxr, byte** pszDNPrefix, byte** pszDisplayName, ushort* rgwClientVersion, ushort* rgwServerVersion, ushort* rgwBestVersion, uint* pulTimeStamp, byte* rgbAuxIn, uint cbAuxIn, byte* rgbAuxOut, uint* pcbAuxOut)
	{
		IntPtr rpcIntfHandle = ExchangeAsyncRpcServer_EMSMDB.RpcIntfHandle;
		*A_0 = ref <Module>.??_7?$BaseAsyncRpcCallWrapper@VExchangeAsyncRpcServer_EMSMDB@ExchangeServer@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 8L) = rpcIntfHandle;
		*A_0 = ref <Module>.??_7ExchangeAsyncRpcCallWrapper_EcDoConnectEx@ExchangeServer@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 16L) = hBinding;
		*(A_0 + 24L) = pcxh;
		*(A_0 + 32L) = szUserDN;
		*(A_0 + 40L) = ulFlags;
		*(A_0 + 44L) = ulConMod;
		*(A_0 + 48L) = cbLimit;
		*(A_0 + 52L) = ulCpid;
		*(A_0 + 56L) = ulLcidString;
		*(A_0 + 60L) = ulLcidSort;
		*(A_0 + 64L) = ulIcxrLink;
		*(A_0 + 68L) = (short)usFCanConvertCodePages;
		*(A_0 + 72L) = pcmsPollsMax;
		*(A_0 + 80L) = pcRetry;
		*(A_0 + 88L) = pcmsRetryDelay;
		*(A_0 + 96L) = picxr;
		*(A_0 + 104L) = pszDNPrefix;
		*(A_0 + 112L) = pszDisplayName;
		*(A_0 + 120L) = rgwClientVersion;
		*(A_0 + 128L) = rgwServerVersion;
		*(A_0 + 136L) = rgwBestVersion;
		*(A_0 + 144L) = pulTimeStamp;
		*(A_0 + 152L) = rgbAuxIn;
		*(A_0 + 160L) = cbAuxIn;
		*(A_0 + 168L) = rgbAuxOut;
		*(A_0 + 176L) = pcbAuxOut;
		return A_0;
	}

	// Token: 0x060001CE RID: 462 RVA: 0x00021E14 File Offset: 0x00021214
	internal unsafe static void DispatchCall(ExchangeAsyncRpcCallWrapper_EcDoDummy* A_0, ExchangeAsyncRpcServer_EMSMDB asyncServer, SafeRpcAsyncStateHandle asyncState)
	{
		ulong num = (ulong)(*(A_0 + 16L));
		if (num == 0UL)
		{
			throw new InvalidHandleException("Invalid binding handle");
		}
		IntPtr bindingHandle = new IntPtr(num);
		ExchangeAsyncRpcState_Dummy exchangeAsyncRpcState_Dummy = BaseAsyncRpcState<Microsoft::Exchange::Rpc::ExchangeServer::ExchangeAsyncRpcState_Dummy,Microsoft::Exchange::Rpc::ExchangeServer::ExchangeAsyncRpcServer_EMSMDB,Microsoft::Exchange::Rpc::IExchangeAsyncDispatch>.CreateFromPool();
		exchangeAsyncRpcState_Dummy.Initialize(asyncState, asyncServer, bindingHandle);
		exchangeAsyncRpcState_Dummy.Begin();
	}

	// Token: 0x060001CF RID: 463 RVA: 0x0002304C File Offset: 0x0002244C
	internal unsafe static ExchangeAsyncRpcCallWrapper_EcDoDummy* {ctor}(ExchangeAsyncRpcCallWrapper_EcDoDummy* A_0, void* hBinding)
	{
		IntPtr rpcIntfHandle = ExchangeAsyncRpcServer_EMSMDB.RpcIntfHandle;
		*A_0 = ref <Module>.??_7?$BaseAsyncRpcCallWrapper@VExchangeAsyncRpcServer_EMSMDB@ExchangeServer@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 8L) = rpcIntfHandle;
		*A_0 = ref <Module>.??_7ExchangeAsyncRpcCallWrapper_EcDoDummy@ExchangeServer@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 16L) = hBinding;
		return A_0;
	}

	// Token: 0x060001D0 RID: 464 RVA: 0x00021E54 File Offset: 0x00021254
	internal unsafe static void DispatchCall(ExchangeAsyncRpcCallWrapper_EcDoRpcExt2* A_0, ExchangeAsyncRpcServer_EMSMDB asyncServer, SafeRpcAsyncStateHandle asyncState)
	{
		ulong num = (ulong)(*(A_0 + 16L));
		if (0UL != num)
		{
			ulong num2 = (ulong)(*(A_0 + 24L));
			if (0UL != num2 && 0L != *(A_0 + 48L))
			{
				ulong num3 = (ulong)(*(A_0 + 56L));
				if (0UL != num3 && 0L != *(A_0 + 80L))
				{
					ulong num4 = (ulong)(*(A_0 + 88L));
					if (0UL != num4 && 0L != *(A_0 + 96L))
					{
						if (*num == 0L)
						{
							throw new InvalidHandleException("Invalid context handle");
						}
						if (0L != *(A_0 + 32L) && 8 <= *(A_0 + 40L))
						{
							uint flagsIn = (uint)(*num2);
							uint maxOut = (uint)(*num3);
							uint maxAuxOut = (uint)(*num4);
							*num2 = 0;
							*(*(A_0 + 56L)) = 0;
							*(*(A_0 + 88L)) = 0;
							IntPtr pContextHandle = new IntPtr(*(A_0 + 16L));
							IntPtr pIn = new IntPtr(*(A_0 + 32L));
							IntPtr pOut = new IntPtr(*(A_0 + 48L));
							IntPtr pSizeOut = new IntPtr(*(A_0 + 56L));
							IntPtr pAuxIn = new IntPtr(*(A_0 + 64L));
							IntPtr pAuxOut = new IntPtr(*(A_0 + 80L));
							IntPtr pSizeAuxOut = new IntPtr(*(A_0 + 88L));
							IntPtr pTransTime = new IntPtr(*(A_0 + 96L));
							ExchangeAsyncRpcState_Execute exchangeAsyncRpcState_Execute = BaseAsyncRpcState<Microsoft::Exchange::Rpc::ExchangeServer::ExchangeAsyncRpcState_Execute,Microsoft::Exchange::Rpc::ExchangeServer::ExchangeAsyncRpcServer_EMSMDB,Microsoft::Exchange::Rpc::IExchangeAsyncDispatch>.CreateFromPool();
							exchangeAsyncRpcState_Execute.Initialize(asyncState, asyncServer, pContextHandle, flagsIn, pIn, (uint)(*(A_0 + 40L)), pOut, pSizeOut, maxOut, pAuxIn, (uint)(*(A_0 + 72L)), pAuxOut, pSizeAuxOut, maxAuxOut, pTransTime, (uint)(*(A_0 + 104L)));
							exchangeAsyncRpcState_Execute.Begin();
							return;
						}
						throw new FailRpcException("ROP input buffer too small", -2147221227);
					}
				}
			}
		}
		throw new CallFailedException("Invalid output parameter locations");
	}

	// Token: 0x060001D1 RID: 465 RVA: 0x00023084 File Offset: 0x00022484
	internal unsafe static ExchangeAsyncRpcCallWrapper_EcDoRpcExt2* {ctor}(ExchangeAsyncRpcCallWrapper_EcDoRpcExt2* A_0, void** pcxh, uint* pulFlags, byte* rgbIn, uint cbIn, byte* rgbOut, uint* pcbOut, byte* rgbAuxIn, uint cbAuxIn, byte* rgbAuxOut, uint* pcbAuxOut, uint* pulTransTime, uint ulStartTime)
	{
		IntPtr rpcIntfHandle = ExchangeAsyncRpcServer_EMSMDB.RpcIntfHandle;
		*A_0 = ref <Module>.??_7?$BaseAsyncRpcCallWrapper@VExchangeAsyncRpcServer_EMSMDB@ExchangeServer@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 8L) = rpcIntfHandle;
		*A_0 = ref <Module>.??_7ExchangeAsyncRpcCallWrapper_EcDoRpcExt2@ExchangeServer@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 16L) = pcxh;
		*(A_0 + 24L) = pulFlags;
		*(A_0 + 32L) = rgbIn;
		*(A_0 + 40L) = cbIn;
		*(A_0 + 48L) = rgbOut;
		*(A_0 + 56L) = pcbOut;
		*(A_0 + 64L) = rgbAuxIn;
		*(A_0 + 72L) = cbAuxIn;
		*(A_0 + 80L) = rgbAuxOut;
		*(A_0 + 88L) = pcbAuxOut;
		*(A_0 + 96L) = pulTransTime;
		*(A_0 + 104L) = ulStartTime;
		return A_0;
	}

	// Token: 0x060001D2 RID: 466 RVA: 0x00021FD0 File Offset: 0x000213D0
	internal unsafe static void DispatchCall(ExchangeAsyncRpcCallWrapper_EcDoAsyncConnectEx* A_0, ExchangeAsyncRpcServer_EMSMDB asyncServer, SafeRpcAsyncStateHandle asyncState)
	{
		if (*(A_0 + 16L) == 0L)
		{
			throw new InvalidHandleException("Invalid context handle");
		}
		ulong num = (ulong)(*(A_0 + 24L));
		if (num == 0UL)
		{
			throw new CallFailedException("Invalid output parameter location");
		}
		*num = 0;
		IntPtr contextHandle = new IntPtr(*(A_0 + 16L));
		IntPtr pNotificationContextHandle = new IntPtr(*(A_0 + 24L));
		ExchangeAsyncRpcState_NotificationConnect exchangeAsyncRpcState_NotificationConnect = BaseAsyncRpcState<Microsoft::Exchange::Rpc::ExchangeServer::ExchangeAsyncRpcState_NotificationConnect,Microsoft::Exchange::Rpc::ExchangeServer::ExchangeAsyncRpcServer_EMSMDB,Microsoft::Exchange::Rpc::IExchangeAsyncDispatch>.CreateFromPool();
		exchangeAsyncRpcState_NotificationConnect.Initialize(asyncState, asyncServer, contextHandle, pNotificationContextHandle);
		exchangeAsyncRpcState_NotificationConnect.Begin();
	}

	// Token: 0x060001D3 RID: 467 RVA: 0x00023114 File Offset: 0x00022514
	internal unsafe static ExchangeAsyncRpcCallWrapper_EcDoAsyncConnectEx* {ctor}(ExchangeAsyncRpcCallWrapper_EcDoAsyncConnectEx* A_0, void* cxh, void** pacxh)
	{
		IntPtr rpcIntfHandle = ExchangeAsyncRpcServer_EMSMDB.RpcIntfHandle;
		*A_0 = ref <Module>.??_7?$BaseAsyncRpcCallWrapper@VExchangeAsyncRpcServer_EMSMDB@ExchangeServer@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 8L) = rpcIntfHandle;
		*A_0 = ref <Module>.??_7ExchangeAsyncRpcCallWrapper_EcDoAsyncConnectEx@ExchangeServer@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 16L) = cxh;
		*(A_0 + 24L) = pacxh;
		return A_0;
	}

	// Token: 0x060001D4 RID: 468 RVA: 0x00022038 File Offset: 0x00021438
	internal unsafe static void DispatchCall(ExchangeAsyncRpcCallWrapper_EcDoAsyncWaitEx* A_0, ExchangeAsyncRpcServer_AsyncEMSMDB asyncServer, SafeRpcAsyncStateHandle asyncState)
	{
		ulong num = (ulong)(*(A_0 + 16L));
		if (num == 0UL)
		{
			throw new InvalidHandleException("Invalid asynchronous context handle");
		}
		if (*(A_0 + 32L) == 0L)
		{
			throw new CallFailedException("Invalid output parameter location");
		}
		IntPtr contextHandle = new IntPtr(num);
		IntPtr pFlagsOut = new IntPtr(*(A_0 + 32L));
		ExchangeAsyncRpcState_NotificationWait exchangeAsyncRpcState_NotificationWait = BaseAsyncRpcState<Microsoft::Exchange::Rpc::ExchangeServer::ExchangeAsyncRpcState_NotificationWait,Microsoft::Exchange::Rpc::ExchangeServer::ExchangeAsyncRpcServer_AsyncEMSMDB,Microsoft::Exchange::Rpc::IExchangeAsyncDispatch>.CreateFromPool();
		exchangeAsyncRpcState_NotificationWait.Initialize(asyncState, asyncServer, contextHandle, (uint)(*(A_0 + 24L)), pFlagsOut);
		exchangeAsyncRpcState_NotificationWait.Begin();
	}

	// Token: 0x060001D5 RID: 469 RVA: 0x00023154 File Offset: 0x00022554
	internal unsafe static ExchangeAsyncRpcCallWrapper_EcDoAsyncWaitEx* {ctor}(ExchangeAsyncRpcCallWrapper_EcDoAsyncWaitEx* A_0, void* acxh, uint ulFlagsIn, uint* pulFlagsOut)
	{
		IntPtr rpcIntfHandle = ExchangeAsyncRpcServer_AsyncEMSMDB.RpcIntfHandle;
		*A_0 = ref <Module>.??_7?$BaseAsyncRpcCallWrapper@VExchangeAsyncRpcServer_AsyncEMSMDB@ExchangeServer@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 8L) = rpcIntfHandle;
		*A_0 = ref <Module>.??_7ExchangeAsyncRpcCallWrapper_EcDoAsyncWaitEx@ExchangeServer@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 16L) = acxh;
		*(A_0 + 24L) = ulFlagsIn;
		*(A_0 + 32L) = pulFlagsOut;
		return A_0;
	}

	// Token: 0x060001D6 RID: 470 RVA: 0x00022F04 File Offset: 0x00022304
	internal unsafe static BaseAsyncRpcCallWrapper<Microsoft::Exchange::Rpc::ExchangeServer::ExchangeAsyncRpcServer_EMSMDB>* {ctor}(BaseAsyncRpcCallWrapper<Microsoft::Exchange::Rpc::ExchangeServer::ExchangeAsyncRpcServer_EMSMDB>* A_0, IntPtr intfHandle)
	{
		*A_0 = ref <Module>.??_7?$BaseAsyncRpcCallWrapper@VExchangeAsyncRpcServer_EMSMDB@ExchangeServer@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 8L) = intfHandle;
		return A_0;
	}

	// Token: 0x060001D7 RID: 471 RVA: 0x0001F408 File Offset: 0x0001E808
	internal unsafe static int InternalExecute(BaseAsyncRpcCallWrapper<Microsoft::Exchange::Rpc::ExchangeServer::ExchangeAsyncRpcServer_EMSMDB>* A_0, SafeRpcAsyncStateHandle asyncState)
	{
		ExchangeAsyncRpcServer_EMSMDB exchangeAsyncRpcServer_EMSMDB = (ExchangeAsyncRpcServer_EMSMDB)RpcServerBase.GetServerInstance(*(A_0 + 8L));
		if (exchangeAsyncRpcServer_EMSMDB == null)
		{
			throw new ServerUnavailableException("AsyncServer not initialized");
		}
		calli(System.Void(System.IntPtr,Microsoft.Exchange.Rpc.ExchangeServer.ExchangeAsyncRpcServer_EMSMDB,Microsoft.Exchange.Rpc.SafeRpcAsyncStateHandle), A_0, exchangeAsyncRpcServer_EMSMDB, asyncState, *(*A_0 + 8L));
		return 0;
	}

	// Token: 0x060001D8 RID: 472 RVA: 0x000231CC File Offset: 0x000225CC
	internal unsafe static BaseAsyncRpcCallWrapper<Microsoft::Exchange::Rpc::ExchangeServer::ExchangeAsyncRpcServer_AsyncEMSMDB>* {ctor}(BaseAsyncRpcCallWrapper<Microsoft::Exchange::Rpc::ExchangeServer::ExchangeAsyncRpcServer_AsyncEMSMDB>* A_0, IntPtr intfHandle)
	{
		*A_0 = ref <Module>.??_7?$BaseAsyncRpcCallWrapper@VExchangeAsyncRpcServer_AsyncEMSMDB@ExchangeServer@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 8L) = intfHandle;
		return A_0;
	}

	// Token: 0x060001D9 RID: 473 RVA: 0x0001F448 File Offset: 0x0001E848
	internal unsafe static int InternalExecute(BaseAsyncRpcCallWrapper<Microsoft::Exchange::Rpc::ExchangeServer::ExchangeAsyncRpcServer_AsyncEMSMDB>* A_0, SafeRpcAsyncStateHandle asyncState)
	{
		ExchangeAsyncRpcServer_AsyncEMSMDB exchangeAsyncRpcServer_AsyncEMSMDB = (ExchangeAsyncRpcServer_AsyncEMSMDB)RpcServerBase.GetServerInstance(*(A_0 + 8L));
		if (exchangeAsyncRpcServer_AsyncEMSMDB == null)
		{
			throw new ServerUnavailableException("AsyncServer not initialized");
		}
		calli(System.Void(System.IntPtr,Microsoft.Exchange.Rpc.ExchangeServer.ExchangeAsyncRpcServer_AsyncEMSMDB,Microsoft.Exchange.Rpc.SafeRpcAsyncStateHandle), A_0, exchangeAsyncRpcServer_AsyncEMSMDB, asyncState, *(*A_0 + 8L));
		return 0;
	}

	// Token: 0x060001DA RID: 474 RVA: 0x00022ABC File Offset: 0x00021EBC
	internal unsafe static void* __vecDelDtor(BaseRundownQueue<void\u0020*>* A_0, uint A_0)
	{
		if ((A_0 & 2U) != 0U)
		{
			BaseRundownQueue<void\u0020*>* ptr = A_0 - 8L;
			<Module>.__ehvec_dtor(A_0, 96UL, *ptr, ldftn(BaseRundownQueue<void\u0020*>.{dtor}));
			if ((A_0 & 1U) != 0U)
			{
				<Module>.delete(ptr);
			}
			return ptr;
		}
		<Module>.BaseRundownQueue<void\u0020*>.{dtor}(A_0);
		if ((A_0 & 1U) != 0U)
		{
			<Module>.delete(A_0);
		}
		return A_0;
	}

	// Token: 0x060001DB RID: 475 RVA: 0x00022F28 File Offset: 0x00022328
	internal unsafe static ManagedExceptionAsyncCrashWrapper* {ctor}(ManagedExceptionAsyncCrashWrapper* A_0)
	{
		*A_0 = ref <Module>.??_7ManagedExceptionAsyncCrashWrapper@Rpc@Exchange@Microsoft@@6B@ + 8;
		return A_0;
	}

	// Token: 0x060001DC RID: 476 RVA: 0x00024140 File Offset: 0x00023540
	internal unsafe static void* __vecDelDtor(CRequestQueue<EMSMDB_REQUEST>* A_0, uint A_0)
	{
		if ((A_0 & 2U) != 0U)
		{
			CRequestQueue<EMSMDB_REQUEST>* ptr = A_0 - 8L;
			<Module>.__ehvec_dtor(A_0, 136UL, *ptr, ldftn(CRequestQueue<EMSMDB_REQUEST>.{dtor}));
			if ((A_0 & 1U) != 0U)
			{
				<Module>.delete(ptr);
			}
			return ptr;
		}
		<Module>.CRequestQueue<EMSMDB_REQUEST>.{dtor}(A_0);
		if ((A_0 & 1U) != 0U)
		{
			<Module>.delete(A_0);
		}
		return A_0;
	}

	// Token: 0x060001DD RID: 477 RVA: 0x000226A4 File Offset: 0x00021AA4
	internal unsafe static void* __vecDelDtor(CLazyInitRequestQueue<CEMSMDBRequestQueue,EMSMDB_REQUEST,10000,1>* A_0, uint A_0)
	{
		if ((A_0 & 2U) != 0U)
		{
			CLazyInitRequestQueue<CEMSMDBRequestQueue,EMSMDB_REQUEST,10000,1>* ptr = A_0 - 8L;
			<Module>.__ehvec_dtor(A_0, 16UL, *ptr, ldftn(CLazyInitRequestQueue<CEMSMDBRequestQueue,EMSMDB_REQUEST,10000,1>.{dtor}));
			if ((A_0 & 1U) != 0U)
			{
				<Module>.delete(ptr);
			}
			return ptr;
		}
		<Module>.CLazyInitRequestQueue<CEMSMDBRequestQueue,EMSMDB_REQUEST,10000,1>.{dtor}(A_0);
		if ((A_0 & 1U) != 0U)
		{
			<Module>.delete(A_0);
		}
		return A_0;
	}

	// Token: 0x060001DE RID: 478 RVA: 0x000231F0 File Offset: 0x000225F0
	internal unsafe static void Execute<class\u0020Microsoft::Exchange::Rpc::ExchangeServer::SafeEcDoDisconnectRpcAsyncStateHandle>(ManagedExceptionAsyncCrashWrapper* A_0, _RPC_ASYNC_STATE* pAsyncState)
	{
		SafeEcDoDisconnectRpcAsyncStateHandle safeEcDoDisconnectRpcAsyncStateHandle = null;
		try
		{
			IntPtr handle = new IntPtr((void*)pAsyncState);
			safeEcDoDisconnectRpcAsyncStateHandle = new SafeEcDoDisconnectRpcAsyncStateHandle(handle);
			pAsyncState = null;
			int num = calli(System.Int32 modopt(System.Runtime.CompilerServices.IsLong)(System.IntPtr,Microsoft.Exchange.Rpc.SafeRpcAsyncStateHandle), A_0, safeEcDoDisconnectRpcAsyncStateHandle, *(*A_0));
			if (0 != num)
			{
				safeEcDoDisconnectRpcAsyncStateHandle.CompleteCall(num);
			}
		}
		catch (RpcException ex)
		{
			if (safeEcDoDisconnectRpcAsyncStateHandle != null)
			{
				safeEcDoDisconnectRpcAsyncStateHandle.AbortCall((uint)ex.ErrorCode);
			}
		}
		catch (FailRpcException ex2)
		{
			if (safeEcDoDisconnectRpcAsyncStateHandle != null)
			{
				safeEcDoDisconnectRpcAsyncStateHandle.CompleteCall(ex2.ErrorCode);
			}
		}
		catch (ThreadAbortException)
		{
			if (safeEcDoDisconnectRpcAsyncStateHandle != null)
			{
				safeEcDoDisconnectRpcAsyncStateHandle.AbortCall(1726U);
			}
		}
		catch (OutOfMemoryException)
		{
			if (safeEcDoDisconnectRpcAsyncStateHandle != null)
			{
				safeEcDoDisconnectRpcAsyncStateHandle.AbortCall(1130U);
			}
		}
		catch (System.Exception e)
		{
			<Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.CrashMeNow(e);
		}
		catch (object o)
		{
			<Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.CrashMeNow(o);
		}
		finally
		{
			if (pAsyncState != null)
			{
				<Module>.RpcRaiseException(1130);
			}
		}
	}

	// Token: 0x060001DF RID: 479 RVA: 0x00023348 File Offset: 0x00022748
	internal unsafe static void Execute<class\u0020Microsoft::Exchange::Rpc::ExchangeServer::SafeEcDoConnectExRpcAsyncStateHandle>(ManagedExceptionAsyncCrashWrapper* A_0, _RPC_ASYNC_STATE* pAsyncState)
	{
		SafeEcDoConnectExRpcAsyncStateHandle safeEcDoConnectExRpcAsyncStateHandle = null;
		try
		{
			IntPtr handle = new IntPtr((void*)pAsyncState);
			safeEcDoConnectExRpcAsyncStateHandle = new SafeEcDoConnectExRpcAsyncStateHandle(handle);
			pAsyncState = null;
			int num = calli(System.Int32 modopt(System.Runtime.CompilerServices.IsLong)(System.IntPtr,Microsoft.Exchange.Rpc.SafeRpcAsyncStateHandle), A_0, safeEcDoConnectExRpcAsyncStateHandle, *(*A_0));
			if (0 != num)
			{
				safeEcDoConnectExRpcAsyncStateHandle.CompleteCall(num);
			}
		}
		catch (RpcException ex)
		{
			if (safeEcDoConnectExRpcAsyncStateHandle != null)
			{
				safeEcDoConnectExRpcAsyncStateHandle.AbortCall((uint)ex.ErrorCode);
			}
		}
		catch (FailRpcException ex2)
		{
			if (safeEcDoConnectExRpcAsyncStateHandle != null)
			{
				safeEcDoConnectExRpcAsyncStateHandle.CompleteCall(ex2.ErrorCode);
			}
		}
		catch (ThreadAbortException)
		{
			if (safeEcDoConnectExRpcAsyncStateHandle != null)
			{
				safeEcDoConnectExRpcAsyncStateHandle.AbortCall(1726U);
			}
		}
		catch (OutOfMemoryException)
		{
			if (safeEcDoConnectExRpcAsyncStateHandle != null)
			{
				safeEcDoConnectExRpcAsyncStateHandle.AbortCall(1130U);
			}
		}
		catch (System.Exception e)
		{
			<Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.CrashMeNow(e);
		}
		catch (object o)
		{
			<Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.CrashMeNow(o);
		}
		finally
		{
			if (pAsyncState != null)
			{
				<Module>.RpcRaiseException(1130);
			}
		}
	}

	// Token: 0x060001E0 RID: 480 RVA: 0x000234A0 File Offset: 0x000228A0
	internal unsafe static void Execute<class\u0020Microsoft::Exchange::Rpc::ExchangeServer::SafeEcDoRpcExt2RpcAsyncStateHandle>(ManagedExceptionAsyncCrashWrapper* A_0, _RPC_ASYNC_STATE* pAsyncState)
	{
		SafeEcDoRpcExt2RpcAsyncStateHandle safeEcDoRpcExt2RpcAsyncStateHandle = null;
		try
		{
			IntPtr handle = new IntPtr((void*)pAsyncState);
			safeEcDoRpcExt2RpcAsyncStateHandle = new SafeEcDoRpcExt2RpcAsyncStateHandle(handle);
			pAsyncState = null;
			int num = calli(System.Int32 modopt(System.Runtime.CompilerServices.IsLong)(System.IntPtr,Microsoft.Exchange.Rpc.SafeRpcAsyncStateHandle), A_0, safeEcDoRpcExt2RpcAsyncStateHandle, *(*A_0));
			if (0 != num)
			{
				safeEcDoRpcExt2RpcAsyncStateHandle.CompleteCall(num);
			}
		}
		catch (RpcException ex)
		{
			if (safeEcDoRpcExt2RpcAsyncStateHandle != null)
			{
				safeEcDoRpcExt2RpcAsyncStateHandle.AbortCall((uint)ex.ErrorCode);
			}
		}
		catch (FailRpcException ex2)
		{
			if (safeEcDoRpcExt2RpcAsyncStateHandle != null)
			{
				safeEcDoRpcExt2RpcAsyncStateHandle.CompleteCall(ex2.ErrorCode);
			}
		}
		catch (ThreadAbortException)
		{
			if (safeEcDoRpcExt2RpcAsyncStateHandle != null)
			{
				safeEcDoRpcExt2RpcAsyncStateHandle.AbortCall(1726U);
			}
		}
		catch (OutOfMemoryException)
		{
			if (safeEcDoRpcExt2RpcAsyncStateHandle != null)
			{
				safeEcDoRpcExt2RpcAsyncStateHandle.AbortCall(1130U);
			}
		}
		catch (System.Exception e)
		{
			<Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.CrashMeNow(e);
		}
		catch (object o)
		{
			<Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.CrashMeNow(o);
		}
		finally
		{
			if (pAsyncState != null)
			{
				<Module>.RpcRaiseException(1130);
			}
		}
	}

	// Token: 0x060001E1 RID: 481 RVA: 0x000235F8 File Offset: 0x000229F8
	internal unsafe static void Execute<class\u0020Microsoft::Exchange::Rpc::ExchangeServer::SafeEcDoAsyncConnectExRpcAsyncStateHandle>(ManagedExceptionAsyncCrashWrapper* A_0, _RPC_ASYNC_STATE* pAsyncState)
	{
		SafeEcDoAsyncConnectExRpcAsyncStateHandle safeEcDoAsyncConnectExRpcAsyncStateHandle = null;
		try
		{
			IntPtr handle = new IntPtr((void*)pAsyncState);
			safeEcDoAsyncConnectExRpcAsyncStateHandle = new SafeEcDoAsyncConnectExRpcAsyncStateHandle(handle);
			pAsyncState = null;
			int num = calli(System.Int32 modopt(System.Runtime.CompilerServices.IsLong)(System.IntPtr,Microsoft.Exchange.Rpc.SafeRpcAsyncStateHandle), A_0, safeEcDoAsyncConnectExRpcAsyncStateHandle, *(*A_0));
			if (0 != num)
			{
				safeEcDoAsyncConnectExRpcAsyncStateHandle.CompleteCall(num);
			}
		}
		catch (RpcException ex)
		{
			if (safeEcDoAsyncConnectExRpcAsyncStateHandle != null)
			{
				safeEcDoAsyncConnectExRpcAsyncStateHandle.AbortCall((uint)ex.ErrorCode);
			}
		}
		catch (FailRpcException ex2)
		{
			if (safeEcDoAsyncConnectExRpcAsyncStateHandle != null)
			{
				safeEcDoAsyncConnectExRpcAsyncStateHandle.CompleteCall(ex2.ErrorCode);
			}
		}
		catch (ThreadAbortException)
		{
			if (safeEcDoAsyncConnectExRpcAsyncStateHandle != null)
			{
				safeEcDoAsyncConnectExRpcAsyncStateHandle.AbortCall(1726U);
			}
		}
		catch (OutOfMemoryException)
		{
			if (safeEcDoAsyncConnectExRpcAsyncStateHandle != null)
			{
				safeEcDoAsyncConnectExRpcAsyncStateHandle.AbortCall(1130U);
			}
		}
		catch (System.Exception e)
		{
			<Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.CrashMeNow(e);
		}
		catch (object o)
		{
			<Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.CrashMeNow(o);
		}
		finally
		{
			if (pAsyncState != null)
			{
				<Module>.RpcRaiseException(1130);
			}
		}
	}

	// Token: 0x060001E2 RID: 482 RVA: 0x00023750 File Offset: 0x00022B50
	internal unsafe static void Execute<class\u0020Microsoft::Exchange::Rpc::ExchangeServer::SafeEcDoAsyncWaitExRpcAsyncStateHandle>(ManagedExceptionAsyncCrashWrapper* A_0, _RPC_ASYNC_STATE* pAsyncState)
	{
		SafeEcDoAsyncWaitExRpcAsyncStateHandle safeEcDoAsyncWaitExRpcAsyncStateHandle = null;
		try
		{
			IntPtr handle = new IntPtr((void*)pAsyncState);
			safeEcDoAsyncWaitExRpcAsyncStateHandle = new SafeEcDoAsyncWaitExRpcAsyncStateHandle(handle);
			pAsyncState = null;
			int num = calli(System.Int32 modopt(System.Runtime.CompilerServices.IsLong)(System.IntPtr,Microsoft.Exchange.Rpc.SafeRpcAsyncStateHandle), A_0, safeEcDoAsyncWaitExRpcAsyncStateHandle, *(*A_0));
			if (0 != num)
			{
				safeEcDoAsyncWaitExRpcAsyncStateHandle.CompleteCall(num);
			}
		}
		catch (RpcException ex)
		{
			if (safeEcDoAsyncWaitExRpcAsyncStateHandle != null)
			{
				safeEcDoAsyncWaitExRpcAsyncStateHandle.AbortCall((uint)ex.ErrorCode);
			}
		}
		catch (FailRpcException ex2)
		{
			if (safeEcDoAsyncWaitExRpcAsyncStateHandle != null)
			{
				safeEcDoAsyncWaitExRpcAsyncStateHandle.CompleteCall(ex2.ErrorCode);
			}
		}
		catch (ThreadAbortException)
		{
			if (safeEcDoAsyncWaitExRpcAsyncStateHandle != null)
			{
				safeEcDoAsyncWaitExRpcAsyncStateHandle.AbortCall(1726U);
			}
		}
		catch (OutOfMemoryException)
		{
			if (safeEcDoAsyncWaitExRpcAsyncStateHandle != null)
			{
				safeEcDoAsyncWaitExRpcAsyncStateHandle.AbortCall(1130U);
			}
		}
		catch (System.Exception e)
		{
			<Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.CrashMeNow(e);
		}
		catch (object o)
		{
			<Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.CrashMeNow(o);
		}
		finally
		{
			if (pAsyncState != null)
			{
				<Module>.RpcRaiseException(1130);
			}
		}
	}

	// Token: 0x060001E3 RID: 483 RVA: 0x000238A8 File Offset: 0x00022CA8
	internal unsafe static void Execute<class\u0020Microsoft::Exchange::Rpc::ExchangeServer::SafeEcDoDummyRpcAsyncStateHandle>(ManagedExceptionAsyncCrashWrapper* A_0, _RPC_ASYNC_STATE* pAsyncState)
	{
		SafeEcDoDummyRpcAsyncStateHandle safeEcDoDummyRpcAsyncStateHandle = null;
		try
		{
			IntPtr handle = new IntPtr((void*)pAsyncState);
			safeEcDoDummyRpcAsyncStateHandle = new SafeEcDoDummyRpcAsyncStateHandle(handle);
			pAsyncState = null;
			int num = calli(System.Int32 modopt(System.Runtime.CompilerServices.IsLong)(System.IntPtr,Microsoft.Exchange.Rpc.SafeRpcAsyncStateHandle), A_0, safeEcDoDummyRpcAsyncStateHandle, *(*A_0));
			if (0 != num)
			{
				safeEcDoDummyRpcAsyncStateHandle.CompleteCall(num);
			}
		}
		catch (RpcException ex)
		{
			if (safeEcDoDummyRpcAsyncStateHandle != null)
			{
				safeEcDoDummyRpcAsyncStateHandle.AbortCall((uint)ex.ErrorCode);
			}
		}
		catch (FailRpcException ex2)
		{
			if (safeEcDoDummyRpcAsyncStateHandle != null)
			{
				safeEcDoDummyRpcAsyncStateHandle.CompleteCall(ex2.ErrorCode);
			}
		}
		catch (ThreadAbortException)
		{
			if (safeEcDoDummyRpcAsyncStateHandle != null)
			{
				safeEcDoDummyRpcAsyncStateHandle.AbortCall(1726U);
			}
		}
		catch (OutOfMemoryException)
		{
			if (safeEcDoDummyRpcAsyncStateHandle != null)
			{
				safeEcDoDummyRpcAsyncStateHandle.AbortCall(1130U);
			}
		}
		catch (System.Exception e)
		{
			<Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.CrashMeNow(e);
		}
		catch (object o)
		{
			<Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.CrashMeNow(o);
		}
		finally
		{
			if (pAsyncState != null)
			{
				<Module>.RpcRaiseException(1130);
			}
		}
	}

	// Token: 0x060001E4 RID: 484 RVA: 0x00069078 File Offset: 0x00068478
	internal unsafe static void ??__E??_7ManagedExceptionAsyncCrashWrapper@Rpc@Exchange@Microsoft@@6B@@@YMXXZ()
	{
		<Module>.??_7ManagedExceptionAsyncCrashWrapper@Rpc@Exchange@Microsoft@@6B@ = ref <Module>.??_R4ManagedExceptionAsyncCrashWrapper@Rpc@Exchange@Microsoft@@6B@;
		*(ref <Module>.??_7ManagedExceptionAsyncCrashWrapper@Rpc@Exchange@Microsoft@@6B@ + 8) = (long)ldftn(_purecall);
	}

	// Token: 0x060001E5 RID: 485 RVA: 0x000690A0 File Offset: 0x000684A0
	internal unsafe static void ??__E??_7ExchangeAsyncRpcCallWrapper_EMSMDB@ExchangeServer@Rpc@Exchange@Microsoft@@6B@@@YMXXZ()
	{
		<Module>.??_7ExchangeAsyncRpcCallWrapper_EMSMDB@ExchangeServer@Rpc@Exchange@Microsoft@@6B@ = ref <Module>.??_R4ExchangeAsyncRpcCallWrapper_EMSMDB@ExchangeServer@Rpc@Exchange@Microsoft@@6B@;
		*(ref <Module>.??_7ExchangeAsyncRpcCallWrapper_EMSMDB@ExchangeServer@Rpc@Exchange@Microsoft@@6B@ + 8) = (long)ldftn(Microsoft.Exchange.Rpc.BaseAsyncRpcCallWrapper<Microsoft::Exchange::Rpc::ExchangeServer::ExchangeAsyncRpcServer_EMSMDB>.InternalExecute);
		*(ref <Module>.??_7ExchangeAsyncRpcCallWrapper_EMSMDB@ExchangeServer@Rpc@Exchange@Microsoft@@6B@ + 16) = (long)ldftn(_purecall);
	}

	// Token: 0x060001E6 RID: 486 RVA: 0x000690D8 File Offset: 0x000684D8
	internal unsafe static void ??__E??_7?$BaseAsyncRpcCallWrapper@VExchangeAsyncRpcServer_EMSMDB@ExchangeServer@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@6B@@@YMXXZ()
	{
		<Module>.??_7?$BaseAsyncRpcCallWrapper@VExchangeAsyncRpcServer_EMSMDB@ExchangeServer@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@6B@ = ref <Module>.??_R4?$BaseAsyncRpcCallWrapper@VExchangeAsyncRpcServer_EMSMDB@ExchangeServer@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@6B@;
		*(ref <Module>.??_7?$BaseAsyncRpcCallWrapper@VExchangeAsyncRpcServer_EMSMDB@ExchangeServer@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@6B@ + 8) = (long)ldftn(Microsoft.Exchange.Rpc.BaseAsyncRpcCallWrapper<Microsoft::Exchange::Rpc::ExchangeServer::ExchangeAsyncRpcServer_EMSMDB>.InternalExecute);
		*(ref <Module>.??_7?$BaseAsyncRpcCallWrapper@VExchangeAsyncRpcServer_EMSMDB@ExchangeServer@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@6B@ + 16) = (long)ldftn(_purecall);
	}

	// Token: 0x060001E7 RID: 487 RVA: 0x00069110 File Offset: 0x00068510
	internal unsafe static void ??__E??_7ExchangeAsyncRpcCallWrapper_AsyncEMSMDB@ExchangeServer@Rpc@Exchange@Microsoft@@6B@@@YMXXZ()
	{
		<Module>.??_7ExchangeAsyncRpcCallWrapper_AsyncEMSMDB@ExchangeServer@Rpc@Exchange@Microsoft@@6B@ = ref <Module>.??_R4ExchangeAsyncRpcCallWrapper_AsyncEMSMDB@ExchangeServer@Rpc@Exchange@Microsoft@@6B@;
		*(ref <Module>.??_7ExchangeAsyncRpcCallWrapper_AsyncEMSMDB@ExchangeServer@Rpc@Exchange@Microsoft@@6B@ + 8) = (long)ldftn(Microsoft.Exchange.Rpc.BaseAsyncRpcCallWrapper<Microsoft::Exchange::Rpc::ExchangeServer::ExchangeAsyncRpcServer_AsyncEMSMDB>.InternalExecute);
		*(ref <Module>.??_7ExchangeAsyncRpcCallWrapper_AsyncEMSMDB@ExchangeServer@Rpc@Exchange@Microsoft@@6B@ + 16) = (long)ldftn(_purecall);
	}

	// Token: 0x060001E8 RID: 488 RVA: 0x00069148 File Offset: 0x00068548
	internal unsafe static void ??__E??_7?$BaseAsyncRpcCallWrapper@VExchangeAsyncRpcServer_AsyncEMSMDB@ExchangeServer@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@6B@@@YMXXZ()
	{
		<Module>.??_7?$BaseAsyncRpcCallWrapper@VExchangeAsyncRpcServer_AsyncEMSMDB@ExchangeServer@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@6B@ = ref <Module>.??_R4?$BaseAsyncRpcCallWrapper@VExchangeAsyncRpcServer_AsyncEMSMDB@ExchangeServer@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@6B@;
		*(ref <Module>.??_7?$BaseAsyncRpcCallWrapper@VExchangeAsyncRpcServer_AsyncEMSMDB@ExchangeServer@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@6B@ + 8) = (long)ldftn(Microsoft.Exchange.Rpc.BaseAsyncRpcCallWrapper<Microsoft::Exchange::Rpc::ExchangeServer::ExchangeAsyncRpcServer_AsyncEMSMDB>.InternalExecute);
		*(ref <Module>.??_7?$BaseAsyncRpcCallWrapper@VExchangeAsyncRpcServer_AsyncEMSMDB@ExchangeServer@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@6B@ + 16) = (long)ldftn(_purecall);
	}

	// Token: 0x060001E9 RID: 489 RVA: 0x00069180 File Offset: 0x00068580
	internal unsafe static void ??__E??_7ExchangeAsyncRpcCallWrapper_EcDoDisconnect@ExchangeServer@Rpc@Exchange@Microsoft@@6B@@@YMXXZ()
	{
		<Module>.??_7ExchangeAsyncRpcCallWrapper_EcDoDisconnect@ExchangeServer@Rpc@Exchange@Microsoft@@6B@ = ref <Module>.??_R4ExchangeAsyncRpcCallWrapper_EcDoDisconnect@ExchangeServer@Rpc@Exchange@Microsoft@@6B@;
		*(ref <Module>.??_7ExchangeAsyncRpcCallWrapper_EcDoDisconnect@ExchangeServer@Rpc@Exchange@Microsoft@@6B@ + 8) = (long)ldftn(Microsoft.Exchange.Rpc.BaseAsyncRpcCallWrapper<Microsoft::Exchange::Rpc::ExchangeServer::ExchangeAsyncRpcServer_EMSMDB>.InternalExecute);
		*(ref <Module>.??_7ExchangeAsyncRpcCallWrapper_EcDoDisconnect@ExchangeServer@Rpc@Exchange@Microsoft@@6B@ + 16) = (long)ldftn(Microsoft.Exchange.Rpc.ExchangeServer.ExchangeAsyncRpcCallWrapper_EcDoDisconnect.DispatchCall);
	}

	// Token: 0x060001EA RID: 490 RVA: 0x000691B8 File Offset: 0x000685B8
	internal unsafe static void ??__E??_7ExchangeAsyncRpcCallWrapper_EcDoConnectEx@ExchangeServer@Rpc@Exchange@Microsoft@@6B@@@YMXXZ()
	{
		<Module>.??_7ExchangeAsyncRpcCallWrapper_EcDoConnectEx@ExchangeServer@Rpc@Exchange@Microsoft@@6B@ = ref <Module>.??_R4ExchangeAsyncRpcCallWrapper_EcDoConnectEx@ExchangeServer@Rpc@Exchange@Microsoft@@6B@;
		*(ref <Module>.??_7ExchangeAsyncRpcCallWrapper_EcDoConnectEx@ExchangeServer@Rpc@Exchange@Microsoft@@6B@ + 8) = (long)ldftn(Microsoft.Exchange.Rpc.BaseAsyncRpcCallWrapper<Microsoft::Exchange::Rpc::ExchangeServer::ExchangeAsyncRpcServer_EMSMDB>.InternalExecute);
		*(ref <Module>.??_7ExchangeAsyncRpcCallWrapper_EcDoConnectEx@ExchangeServer@Rpc@Exchange@Microsoft@@6B@ + 16) = (long)ldftn(Microsoft.Exchange.Rpc.ExchangeServer.ExchangeAsyncRpcCallWrapper_EcDoConnectEx.DispatchCall);
	}

	// Token: 0x060001EB RID: 491 RVA: 0x000691F0 File Offset: 0x000685F0
	internal unsafe static void ??__E??_7ExchangeAsyncRpcCallWrapper_EcDoDummy@ExchangeServer@Rpc@Exchange@Microsoft@@6B@@@YMXXZ()
	{
		<Module>.??_7ExchangeAsyncRpcCallWrapper_EcDoDummy@ExchangeServer@Rpc@Exchange@Microsoft@@6B@ = ref <Module>.??_R4ExchangeAsyncRpcCallWrapper_EcDoDummy@ExchangeServer@Rpc@Exchange@Microsoft@@6B@;
		*(ref <Module>.??_7ExchangeAsyncRpcCallWrapper_EcDoDummy@ExchangeServer@Rpc@Exchange@Microsoft@@6B@ + 8) = (long)ldftn(Microsoft.Exchange.Rpc.BaseAsyncRpcCallWrapper<Microsoft::Exchange::Rpc::ExchangeServer::ExchangeAsyncRpcServer_EMSMDB>.InternalExecute);
		*(ref <Module>.??_7ExchangeAsyncRpcCallWrapper_EcDoDummy@ExchangeServer@Rpc@Exchange@Microsoft@@6B@ + 16) = (long)ldftn(Microsoft.Exchange.Rpc.ExchangeServer.ExchangeAsyncRpcCallWrapper_EcDoDummy.DispatchCall);
	}

	// Token: 0x060001EC RID: 492 RVA: 0x00069228 File Offset: 0x00068628
	internal unsafe static void ??__E??_7ExchangeAsyncRpcCallWrapper_EcDoRpcExt2@ExchangeServer@Rpc@Exchange@Microsoft@@6B@@@YMXXZ()
	{
		<Module>.??_7ExchangeAsyncRpcCallWrapper_EcDoRpcExt2@ExchangeServer@Rpc@Exchange@Microsoft@@6B@ = ref <Module>.??_R4ExchangeAsyncRpcCallWrapper_EcDoRpcExt2@ExchangeServer@Rpc@Exchange@Microsoft@@6B@;
		*(ref <Module>.??_7ExchangeAsyncRpcCallWrapper_EcDoRpcExt2@ExchangeServer@Rpc@Exchange@Microsoft@@6B@ + 8) = (long)ldftn(Microsoft.Exchange.Rpc.BaseAsyncRpcCallWrapper<Microsoft::Exchange::Rpc::ExchangeServer::ExchangeAsyncRpcServer_EMSMDB>.InternalExecute);
		*(ref <Module>.??_7ExchangeAsyncRpcCallWrapper_EcDoRpcExt2@ExchangeServer@Rpc@Exchange@Microsoft@@6B@ + 16) = (long)ldftn(Microsoft.Exchange.Rpc.ExchangeServer.ExchangeAsyncRpcCallWrapper_EcDoRpcExt2.DispatchCall);
	}

	// Token: 0x060001ED RID: 493 RVA: 0x00069260 File Offset: 0x00068660
	internal unsafe static void ??__E??_7ExchangeAsyncRpcCallWrapper_EcDoAsyncConnectEx@ExchangeServer@Rpc@Exchange@Microsoft@@6B@@@YMXXZ()
	{
		<Module>.??_7ExchangeAsyncRpcCallWrapper_EcDoAsyncConnectEx@ExchangeServer@Rpc@Exchange@Microsoft@@6B@ = ref <Module>.??_R4ExchangeAsyncRpcCallWrapper_EcDoAsyncConnectEx@ExchangeServer@Rpc@Exchange@Microsoft@@6B@;
		*(ref <Module>.??_7ExchangeAsyncRpcCallWrapper_EcDoAsyncConnectEx@ExchangeServer@Rpc@Exchange@Microsoft@@6B@ + 8) = (long)ldftn(Microsoft.Exchange.Rpc.BaseAsyncRpcCallWrapper<Microsoft::Exchange::Rpc::ExchangeServer::ExchangeAsyncRpcServer_EMSMDB>.InternalExecute);
		*(ref <Module>.??_7ExchangeAsyncRpcCallWrapper_EcDoAsyncConnectEx@ExchangeServer@Rpc@Exchange@Microsoft@@6B@ + 16) = (long)ldftn(Microsoft.Exchange.Rpc.ExchangeServer.ExchangeAsyncRpcCallWrapper_EcDoAsyncConnectEx.DispatchCall);
	}

	// Token: 0x060001EE RID: 494 RVA: 0x00069298 File Offset: 0x00068698
	internal unsafe static void ??__E??_7ExchangeAsyncRpcCallWrapper_EcDoAsyncWaitEx@ExchangeServer@Rpc@Exchange@Microsoft@@6B@@@YMXXZ()
	{
		<Module>.??_7ExchangeAsyncRpcCallWrapper_EcDoAsyncWaitEx@ExchangeServer@Rpc@Exchange@Microsoft@@6B@ = ref <Module>.??_R4ExchangeAsyncRpcCallWrapper_EcDoAsyncWaitEx@ExchangeServer@Rpc@Exchange@Microsoft@@6B@;
		*(ref <Module>.??_7ExchangeAsyncRpcCallWrapper_EcDoAsyncWaitEx@ExchangeServer@Rpc@Exchange@Microsoft@@6B@ + 8) = (long)ldftn(Microsoft.Exchange.Rpc.BaseAsyncRpcCallWrapper<Microsoft::Exchange::Rpc::ExchangeServer::ExchangeAsyncRpcServer_AsyncEMSMDB>.InternalExecute);
		*(ref <Module>.??_7ExchangeAsyncRpcCallWrapper_EcDoAsyncWaitEx@ExchangeServer@Rpc@Exchange@Microsoft@@6B@ + 16) = (long)ldftn(Microsoft.Exchange.Rpc.ExchangeServer.ExchangeAsyncRpcCallWrapper_EcDoAsyncWaitEx.DispatchCall);
	}

	// Token: 0x060001EF RID: 495 RVA: 0x00024FE8 File Offset: 0x000243E8
	internal unsafe static int GetCertificate(void* hBinding, int version, int inBytesLen, byte* pInBytes, int* pOutBytesLen, byte** ppOutBytes)
	{
		*pOutBytesLen = 0;
		*(long*)ppOutBytes = 0L;
		ExchangeCertificateRpcServer exchangeCertificateRpcServer = (ExchangeCertificateRpcServer)RpcServerBase.GetServerInstance(ExchangeCertificateRpcServer.RpcIntfHandle);
		if (exchangeCertificateRpcServer == null)
		{
			return -2147221227;
		}
		byte[] pInBytes2 = <Module>.UToMBytes(inBytesLen, pInBytes);
		return <Module>.MToUBytes(exchangeCertificateRpcServer.GetCertificate(version, pInBytes2), pOutBytesLen, ppOutBytes);
	}

	// Token: 0x060001F0 RID: 496 RVA: 0x00025030 File Offset: 0x00024430
	internal unsafe static int CreateCertificate(void* hBinding, int version, int inBytesLen, byte* pInBytes, int* pOutBytesLen, byte** ppOutBytes)
	{
		*pOutBytesLen = 0;
		*(long*)ppOutBytes = 0L;
		ExchangeCertificateRpcServer exchangeCertificateRpcServer = (ExchangeCertificateRpcServer)RpcServerBase.GetServerInstance(ExchangeCertificateRpcServer.RpcIntfHandle);
		if (exchangeCertificateRpcServer == null)
		{
			return -2147221227;
		}
		byte[] pInBytes2 = <Module>.UToMBytes(inBytesLen, pInBytes);
		return <Module>.MToUBytes(exchangeCertificateRpcServer.CreateCertificate(version, pInBytes2), pOutBytesLen, ppOutBytes);
	}

	// Token: 0x060001F1 RID: 497 RVA: 0x00025078 File Offset: 0x00024478
	internal unsafe static int RemoveCertificate(void* hBinding, int version, int inBytesLen, byte* pInBytes, int* pOutBytesLen, byte** ppOutBytes)
	{
		*pOutBytesLen = 0;
		*(long*)ppOutBytes = 0L;
		ExchangeCertificateRpcServer exchangeCertificateRpcServer = (ExchangeCertificateRpcServer)RpcServerBase.GetServerInstance(ExchangeCertificateRpcServer.RpcIntfHandle);
		if (exchangeCertificateRpcServer == null)
		{
			return -2147221227;
		}
		byte[] pInBytes2 = <Module>.UToMBytes(inBytesLen, pInBytes);
		return <Module>.MToUBytes(exchangeCertificateRpcServer.RemoveCertificate(version, pInBytes2), pOutBytesLen, ppOutBytes);
	}

	// Token: 0x060001F2 RID: 498 RVA: 0x000250C0 File Offset: 0x000244C0
	internal unsafe static int ExportCertificate(void* hBinding, int version, int inBytesLen, byte* pInBytes, ushort* password, int* pOutBytesLen, byte** ppOutBytes)
	{
		*pOutBytesLen = 0;
		*(long*)ppOutBytes = 0L;
		SecureString secureString = new SecureString();
		if (password != null)
		{
			ushort* ptr = password;
			if (*(short*)password != 0)
			{
				do
				{
					ptr += 2L / 2L;
				}
				while (*(short*)ptr != 0);
			}
			int num = (int)(ptr - password >> 1);
			long num2 = 0L;
			long num3 = (long)num;
			if (0L < num3)
			{
				do
				{
					secureString.AppendChar((char)(num2 * 2L / 2L)[password]);
					num2 += 1L;
				}
				while (num2 < num3);
			}
			initblk(password, 0, (long)num * 2L);
		}
		ExchangeCertificateRpcServer exchangeCertificateRpcServer = (ExchangeCertificateRpcServer)RpcServerBase.GetServerInstance(ExchangeCertificateRpcServer.RpcIntfHandle);
		if (exchangeCertificateRpcServer == null)
		{
			return -2147221227;
		}
		byte[] pInBytes2 = <Module>.UToMBytes(inBytesLen, pInBytes);
		return <Module>.MToUBytes(exchangeCertificateRpcServer.ExportCertificate(version, pInBytes2, secureString), pOutBytesLen, ppOutBytes);
	}

	// Token: 0x060001F3 RID: 499 RVA: 0x0002516C File Offset: 0x0002456C
	internal unsafe static int ImportCertificate(void* hBinding, int version, int inBytesLen, byte* pInBytes, ushort* password, int* pOutBytesLen, byte** ppOutBytes)
	{
		*pOutBytesLen = 0;
		*(long*)ppOutBytes = 0L;
		SecureString secureString = new SecureString();
		if (password != null)
		{
			ushort* ptr = password;
			if (*(short*)password != 0)
			{
				do
				{
					ptr += 2L / 2L;
				}
				while (*(short*)ptr != 0);
			}
			int num = (int)(ptr - password >> 1);
			long num2 = 0L;
			long num3 = (long)num;
			if (0L < num3)
			{
				do
				{
					secureString.AppendChar((char)(num2 * 2L / 2L)[password]);
					num2 += 1L;
				}
				while (num2 < num3);
			}
			initblk(password, 0, (long)num * 2L);
		}
		ExchangeCertificateRpcServer exchangeCertificateRpcServer = (ExchangeCertificateRpcServer)RpcServerBase.GetServerInstance(ExchangeCertificateRpcServer.RpcIntfHandle);
		if (exchangeCertificateRpcServer == null)
		{
			return -2147221227;
		}
		byte[] pInBytes2 = <Module>.UToMBytes(inBytesLen, pInBytes);
		return <Module>.MToUBytes(exchangeCertificateRpcServer.ImportCertificate(version, pInBytes2, secureString), pOutBytesLen, ppOutBytes);
	}

	// Token: 0x060001F4 RID: 500 RVA: 0x00025218 File Offset: 0x00024618
	internal unsafe static int EnableCertificate(void* hBinding, int version, int inBytesLen, byte* pInBytes, int* pOutBytesLen, byte** ppOutBytes)
	{
		*pOutBytesLen = 0;
		*(long*)ppOutBytes = 0L;
		ExchangeCertificateRpcServer exchangeCertificateRpcServer = (ExchangeCertificateRpcServer)RpcServerBase.GetServerInstance(ExchangeCertificateRpcServer.RpcIntfHandle);
		if (exchangeCertificateRpcServer == null)
		{
			return -2147221227;
		}
		byte[] pInBytes2 = <Module>.UToMBytes(inBytesLen, pInBytes);
		return <Module>.MToUBytes(exchangeCertificateRpcServer.EnableCertificate(version, pInBytes2), pOutBytesLen, ppOutBytes);
	}

	// Token: 0x060001F5 RID: 501 RVA: 0x00025290 File Offset: 0x00024690
	internal unsafe static int GetCertificate2(void* hBinding, int version, int inBytesLen, byte* pInBytes, int* pOutBytesLen, byte** ppOutBytes)
	{
		*pOutBytesLen = 0;
		*(long*)ppOutBytes = 0L;
		ExchangeCertificateRpcServer2 exchangeCertificateRpcServer = (ExchangeCertificateRpcServer2)RpcServerBase.GetServerInstance(ExchangeCertificateRpcServer2.RpcIntfHandle);
		if (exchangeCertificateRpcServer == null)
		{
			return -2147221227;
		}
		byte[] pInBytes2 = <Module>.UToMBytes(inBytesLen, pInBytes);
		return <Module>.MToUBytes(exchangeCertificateRpcServer.GetCertificate2(version, pInBytes2), pOutBytesLen, ppOutBytes);
	}

	// Token: 0x060001F6 RID: 502 RVA: 0x000252D8 File Offset: 0x000246D8
	internal unsafe static int CreateCertificate2(void* hBinding, int version, int inBytesLen, byte* pInBytes, int* pOutBytesLen, byte** ppOutBytes)
	{
		*pOutBytesLen = 0;
		*(long*)ppOutBytes = 0L;
		ExchangeCertificateRpcServer2 exchangeCertificateRpcServer = (ExchangeCertificateRpcServer2)RpcServerBase.GetServerInstance(ExchangeCertificateRpcServer2.RpcIntfHandle);
		if (exchangeCertificateRpcServer == null)
		{
			return -2147221227;
		}
		byte[] pInBytes2 = <Module>.UToMBytes(inBytesLen, pInBytes);
		return <Module>.MToUBytes(exchangeCertificateRpcServer.CreateCertificate2(version, pInBytes2), pOutBytesLen, ppOutBytes);
	}

	// Token: 0x060001F7 RID: 503 RVA: 0x00025320 File Offset: 0x00024720
	internal unsafe static int RemoveCertificate2(void* hBinding, int version, int inBytesLen, byte* pInBytes, int* pOutBytesLen, byte** ppOutBytes)
	{
		*pOutBytesLen = 0;
		*(long*)ppOutBytes = 0L;
		ExchangeCertificateRpcServer2 exchangeCertificateRpcServer = (ExchangeCertificateRpcServer2)RpcServerBase.GetServerInstance(ExchangeCertificateRpcServer2.RpcIntfHandle);
		if (exchangeCertificateRpcServer == null)
		{
			return -2147221227;
		}
		byte[] pInBytes2 = <Module>.UToMBytes(inBytesLen, pInBytes);
		return <Module>.MToUBytes(exchangeCertificateRpcServer.RemoveCertificate2(version, pInBytes2), pOutBytesLen, ppOutBytes);
	}

	// Token: 0x060001F8 RID: 504 RVA: 0x00025368 File Offset: 0x00024768
	internal unsafe static int ExportCertificate2(void* hBinding, int version, int inBytesLen, byte* pInBytes, ushort* password, int* pOutBytesLen, byte** ppOutBytes)
	{
		*pOutBytesLen = 0;
		*(long*)ppOutBytes = 0L;
		SecureString secureString = new SecureString();
		if (password != null)
		{
			ushort* ptr = password;
			if (*(short*)password != 0)
			{
				do
				{
					ptr += 2L / 2L;
				}
				while (*(short*)ptr != 0);
			}
			int num = (int)(ptr - password >> 1);
			long num2 = 0L;
			long num3 = (long)num;
			if (0L < num3)
			{
				do
				{
					secureString.AppendChar((char)(num2 * 2L / 2L)[password]);
					num2 += 1L;
				}
				while (num2 < num3);
			}
			initblk(password, 0, (long)num * 2L);
		}
		ExchangeCertificateRpcServer2 exchangeCertificateRpcServer = (ExchangeCertificateRpcServer2)RpcServerBase.GetServerInstance(ExchangeCertificateRpcServer2.RpcIntfHandle);
		if (exchangeCertificateRpcServer == null)
		{
			return -2147221227;
		}
		byte[] pInBytes2 = <Module>.UToMBytes(inBytesLen, pInBytes);
		return <Module>.MToUBytes(exchangeCertificateRpcServer.ExportCertificate2(version, pInBytes2, secureString), pOutBytesLen, ppOutBytes);
	}

	// Token: 0x060001F9 RID: 505 RVA: 0x00025414 File Offset: 0x00024814
	internal unsafe static int ImportCertificate2(void* hBinding, int version, int inBytesLen, byte* pInBytes, ushort* password, int* pOutBytesLen, byte** ppOutBytes)
	{
		*pOutBytesLen = 0;
		*(long*)ppOutBytes = 0L;
		SecureString secureString = new SecureString();
		if (password != null)
		{
			ushort* ptr = password;
			if (*(short*)password != 0)
			{
				do
				{
					ptr += 2L / 2L;
				}
				while (*(short*)ptr != 0);
			}
			int num = (int)(ptr - password >> 1);
			long num2 = 0L;
			long num3 = (long)num;
			if (0L < num3)
			{
				do
				{
					secureString.AppendChar((char)(num2 * 2L / 2L)[password]);
					num2 += 1L;
				}
				while (num2 < num3);
			}
			initblk(password, 0, (long)num * 2L);
		}
		ExchangeCertificateRpcServer2 exchangeCertificateRpcServer = (ExchangeCertificateRpcServer2)RpcServerBase.GetServerInstance(ExchangeCertificateRpcServer2.RpcIntfHandle);
		if (exchangeCertificateRpcServer == null)
		{
			return -2147221227;
		}
		byte[] pInBytes2 = <Module>.UToMBytes(inBytesLen, pInBytes);
		return <Module>.MToUBytes(exchangeCertificateRpcServer.ImportCertificate2(version, pInBytes2, secureString), pOutBytesLen, ppOutBytes);
	}

	// Token: 0x060001FA RID: 506 RVA: 0x000254C0 File Offset: 0x000248C0
	internal unsafe static int EnableCertificate2(void* hBinding, int version, int inBytesLen, byte* pInBytes, int* pOutBytesLen, byte** ppOutBytes)
	{
		*pOutBytesLen = 0;
		*(long*)ppOutBytes = 0L;
		ExchangeCertificateRpcServer2 exchangeCertificateRpcServer = (ExchangeCertificateRpcServer2)RpcServerBase.GetServerInstance(ExchangeCertificateRpcServer2.RpcIntfHandle);
		if (exchangeCertificateRpcServer == null)
		{
			return -2147221227;
		}
		byte[] pInBytes2 = <Module>.UToMBytes(inBytesLen, pInBytes);
		return <Module>.MToUBytes(exchangeCertificateRpcServer.EnableCertificate2(version, pInBytes2), pOutBytesLen, ppOutBytes);
	}

	// Token: 0x060001FB RID: 507 RVA: 0x00026780 File Offset: 0x00025B80
	internal unsafe static void* XPRESS_Alloc(void* __unnamed000, int size)
	{
		ulong num = (ulong)((long)size);
		void* ptr = <Module>.MIDL_user_allocate(num);
		if (ptr != null)
		{
			initblk(ptr, 0, num);
		}
		return ptr;
	}

	// Token: 0x060001FC RID: 508 RVA: 0x000267A4 File Offset: 0x00025BA4
	internal unsafe static void XPRESS_Free(void* __unnamed000, void* pv)
	{
		if (pv != null)
		{
			<Module>.MIDL_user_free(pv);
		}
	}

	// Token: 0x060001FD RID: 509 RVA: 0x000267BC File Offset: 0x00025BBC
	internal unsafe static void Compress(byte* pbOrig, uint cbOrig, byte* pbComp, uint* pcbComp)
	{
		<unnamed-type-XpressEncodeStream>* ptr = null;
		if (pbOrig == null)
		{
			throw new ArgumentNullException("pbOrig");
		}
		if (pbComp == null)
		{
			throw new ArgumentNullException("pbComp");
		}
		if (pcbComp == null)
		{
			throw new ArgumentNullException("pcbComp");
		}
		if (cbOrig == null)
		{
			throw new ArgumentException("uncompressed length cbOrig is zero");
		}
		if (cbOrig > *(int*)pcbComp)
		{
			throw new ArgumentException("uncompressed length cbOrig is greater than compressed length *pcbComp");
		}
		try
		{
			ptr = <Module>.XpressEncodeCreate(cbOrig, null, <Module>.__unep@?XPRESS_Alloc@@$$FYAPEAXPEAXH@Z, 0);
			if (ptr == null)
			{
				throw new OutOfMemoryException();
			}
			uint num = <Module>.XpressEncode(ptr, (void*)pbComp, *(int*)pcbComp, (void*)pbOrig, cbOrig, 0L, null, 0);
			if (num > 0 && num < cbOrig)
			{
				*(int*)pcbComp = num;
			}
			else
			{
				ulong num2 = cbOrig;
				<Module>.memcpy_s((void*)pbComp, num2, (void*)pbOrig, num2);
				*(int*)pcbComp = cbOrig;
			}
		}
		finally
		{
			if (ptr != null)
			{
				<Module>.XpressEncodeClose(ptr, null, <Module>.__unep@?XPRESS_Free@@$$FYAXPEAX0@Z);
			}
		}
	}

	// Token: 0x060001FE RID: 510 RVA: 0x0002688C File Offset: 0x00025C8C
	[return: MarshalAs(UnmanagedType.U1)]
	internal unsafe static bool Decompress(byte* pbOrig, uint cbOrig, byte* pbComp, uint cbComp)
	{
		<unnamed-type-XpressDecodeStream>* ptr = null;
		if (pbOrig == null)
		{
			throw new ArgumentNullException("pbOrig");
		}
		if (pbComp == null)
		{
			throw new ArgumentNullException("pbComp");
		}
		if (cbOrig < cbComp)
		{
			throw new ArgumentException("uncompressed size cbOrig is smaller than compressed size cbComp");
		}
		if (cbComp == null)
		{
			throw new ArgumentException("target buffer size cbComp is zero");
		}
		if (cbOrig == cbComp)
		{
			ulong num = cbOrig;
			<Module>.memcpy_s((void*)pbOrig, num, (void*)pbComp, num);
			return 1;
		}
		byte result;
		try
		{
			ptr = <Module>.XpressDecodeCreate(null, <Module>.__unep@?XPRESS_Alloc@@$$FYAPEAXPEAXH@Z);
			if (ptr == null)
			{
				throw new OutOfMemoryException();
			}
			result = ((<Module>.XpressDecode(ptr, (void*)pbOrig, cbOrig, cbOrig, (void*)pbComp, cbComp) == cbOrig) ? 1 : 0);
		}
		finally
		{
			if (ptr != null)
			{
				<Module>.XpressDecodeClose(ptr, null, <Module>.__unep@?XPRESS_Free@@$$FYAXPEAX0@Z);
			}
		}
		return result;
	}

	// Token: 0x060001FF RID: 511 RVA: 0x00026944 File Offset: 0x00025D44
	internal unsafe static void DoCompressibleXorMagic(byte* pb, uint cb)
	{
		if (0 < cb)
		{
			uint num = cb;
			do
			{
				*pb ^= 165;
				pb += 1L;
				num += -1;
			}
			while (num > 0);
		}
	}

	// Token: 0x06000200 RID: 512 RVA: 0x00026970 File Offset: 0x00025D70
	internal unsafe static byte* PackExtBuffer(byte[] buffer, int index, int size, [MarshalAs(UnmanagedType.U1)] bool compressBuffer, [MarshalAs(UnmanagedType.U1)] bool xorBuffer, uint* pcbBuffer, byte* pbDest, uint cbDest, [MarshalAs(UnmanagedType.U1)] bool last)
	{
		byte* result = null;
		if (pcbBuffer == null)
		{
			throw new ArgumentNullException("pcbBuffer");
		}
		*(int*)pcbBuffer = 0;
		if (buffer != null)
		{
			int num = buffer.Length;
			if (num != 0 && size != 0)
			{
				if (size > 32767)
				{
					throw new ArgumentException("buffer length is larger than g_cbMaxBufferSize");
				}
				if (index < 0 || index > num)
				{
					throw new ArgumentOutOfRangeException("index is not valid");
				}
				if (size < 0 || size > num)
				{
					throw new ArgumentOutOfRangeException("size is not valid");
				}
				if (index + size > num)
				{
					throw new ArgumentException("buffer not large enough for index and size values");
				}
				byte* ptr = null;
				try
				{
					byte* ptr2;
					uint num2;
					if (pbDest != null)
					{
						if (cbDest < (ulong)((long)size + 8L))
						{
							throw new ArgumentException("cbDest is too small");
						}
						ptr2 = pbDest;
						num2 = cbDest;
					}
					else
					{
						uint num3 = (uint)((long)size + 8L);
						ptr = <Module>.MIDL_user_allocate(num3);
						if (ptr == null)
						{
							throw new OutOfMemoryException();
						}
						ptr2 = ptr;
						num2 = num3;
					}
					tagRpcHeaderExt* ptr3 = (tagRpcHeaderExt*)ptr2;
					*(short*)ptr2 = 0;
					int num4 = last ? 4 : 0;
					*(short*)(ptr2 + 2L) = (short)num4;
					ushort num5 = (ushort)size;
					*(short*)(ptr2 + 4L) = (short)num5;
					*(short*)(ptr2 + 6L) = (short)num5;
					byte* ptr4;
					if (compressBuffer && size > 1024)
					{
						ref byte pbOrig = ref buffer[index];
						try
						{
							uint num6 = (uint)(num2 - 8UL);
							ptr4 = ptr2 + 8L;
							<Module>.Compress(ref pbOrig, size, ptr4, &num6);
							if (num6 != size)
							{
								*(short*)(ptr2 + 2L) = (short)(*(ushort*)(ptr2 + 2L) | 1);
								*(short*)(ptr2 + 4L) = num6;
							}
						}
						catch
						{
							throw;
						}
					}
					else
					{
						ptr4 = ptr2 + 8L;
						IntPtr destination = new IntPtr((void*)ptr4);
						Marshal.Copy(buffer, index, destination, (int)(*(ushort*)(ptr2 + 4L)));
					}
					if (xorBuffer && (*(ushort*)(ptr2 + 2L) & 1) == 0)
					{
						uint num7 = *(ushort*)(ptr2 + 4L);
						byte* ptr5 = ptr4;
						uint num8 = 0;
						while (num8 < num7)
						{
							*ptr5 ^= 165;
							num8++;
							ptr5 += 1L;
						}
						*(short*)(ptr3 + 2L / (long)sizeof(tagRpcHeaderExt)) = (short)(*(ushort*)(ptr3 + 2L / (long)sizeof(tagRpcHeaderExt)) | 2);
					}
					*(int*)pcbBuffer = (int)((uint)((ulong)(*(ushort*)(ptr3 + 4L / (long)sizeof(tagRpcHeaderExt))) + 8UL));
					result = ptr2;
					ptr = null;
				}
				finally
				{
					if (ptr != null)
					{
						<Module>.MIDL_user_free((void*)ptr);
					}
				}
				return result;
			}
		}
		return null;
	}

	// Token: 0x06000201 RID: 513 RVA: 0x00026E30 File Offset: 0x00026230
	internal unsafe static byte[] UnpackExtBuffer(byte* pbBuffer, uint cbBuffer, out bool compressed, out bool xorMagic, byte** ppbNextBuffer, uint* pcbNextBuffer)
	{
		byte[] result = null;
		byte* ptr = null;
		try
		{
			compressed = false;
			xorMagic = false;
			if (ppbNextBuffer != null)
			{
				*(long*)ppbNextBuffer = 0L;
			}
			if (pcbNextBuffer != null)
			{
				*(int*)pcbNextBuffer = 0;
			}
			if (pbBuffer == null)
			{
				throw new ArgumentNullException("pbBuffer");
			}
			if (cbBuffer == null)
			{
				throw new FailRpcException("cbBuffer is zero length", -2147221227);
			}
			if (cbBuffer < 8)
			{
				throw new FailRpcException("cbBuffer needs to be at least sizeof(RpcHeaderExt)", -2147221227);
			}
			byte* ptr2 = pbBuffer + 8L;
			ushort num = *(ushort*)(pbBuffer + 4L);
			uint num2 = num;
			byte* ptr3 = pbBuffer + 2L;
			byte* ptr4 = ptr3;
			ushort num3 = *(ushort*)ptr3;
			if ((num3 & 1) != 0)
			{
				if (*(ushort*)(pbBuffer + 6L) < num)
				{
					throw new FailRpcException("uncompressed size is smaller than compressed size", -2147221227);
				}
			}
			else if (*(ushort*)(pbBuffer + 6L) != num)
			{
				throw new FailRpcException("no compression but sizes aren't the same", -2147221227);
			}
			ulong num4 = cbBuffer;
			ulong num5 = num4 - 8UL;
			if (num2 > num5)
			{
				if ((num3 & 3) != 0 || (num3 & 4) == 0 || num2 != cbBuffer)
				{
					throw new FailRpcException("extended data larger than size of buffer", -2147221227);
				}
				num2 = (uint)num5;
			}
			if ((num3 & 4) == 0)
			{
				if (ppbNextBuffer != null)
				{
					*(long*)ppbNextBuffer = pbBuffer + num2 + 8L;
				}
				if (pcbNextBuffer != null)
				{
					*(int*)pcbNextBuffer = (int)((uint)(num4 - num2 - 8UL));
				}
			}
			if ((*(ushort*)ptr3 & 2) != 0)
			{
				byte* ptr5 = ptr2;
				uint num6 = 0;
				while (num6 < num2)
				{
					*ptr5 ^= 165;
					num6++;
					ptr5 += 1L;
				}
				ptr4 = pbBuffer + 2L;
				*(ushort*)ptr4 &= 65533;
				xorMagic = true;
			}
			if ((*(ushort*)ptr4 & 1) != 0)
			{
				uint num7 = *(ushort*)(pbBuffer + 6L);
				ptr = <Module>.MIDL_user_allocate(num7);
				if (ptr == null)
				{
					throw new OutOfMemoryException();
				}
				if (<Module>.Decompress(ptr, num7, ptr2, num2) == null)
				{
					throw new FailRpcException("failed to decompress buffer", -2147221227);
				}
				compressed = true;
				ptr2 = ptr;
				num2 = num7;
			}
			byte[] array;
			if (num2 > 0)
			{
				IntPtr uPtrData = new IntPtr((void*)ptr2);
				array = <Module>.UToMBytes(num2, uPtrData);
			}
			else
			{
				array = new byte[0];
			}
			result = array;
		}
		finally
		{
			if (ptr != null)
			{
				<Module>.MIDL_user_free((void*)ptr);
			}
		}
		return result;
	}

	// Token: 0x06000202 RID: 514 RVA: 0x00027FB4 File Offset: 0x000273B4
	internal unsafe static ExchangeRpcServer_Wrapper* {ctor}(ExchangeRpcServer_Wrapper* A_0, IntPtr intfHandle)
	{
		*A_0 = ref <Module>.??_7ExchangeRpcServer_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 8L) = intfHandle;
		return A_0;
	}

	// Token: 0x06000203 RID: 515 RVA: 0x00027364 File Offset: 0x00026764
	internal unsafe static int InternalExecute(ExchangeRpcServer_Wrapper* A_0)
	{
		ExchangeRpcServerBase exchangeRpcServerBase = (ExchangeRpcServerBase)RpcServerBase.GetServerInstance(*(A_0 + 8L));
		if (exchangeRpcServerBase == null)
		{
			return -2147221227;
		}
		IProxyServer proxyServer = exchangeRpcServerBase.GetProxyServer();
		if (proxyServer != null)
		{
			return calli(System.Int32 modopt(System.Runtime.CompilerServices.IsLong)(System.IntPtr,Microsoft.Exchange.Rpc.ExchangeServer.IProxyServer), A_0, proxyServer, *(*A_0 + 8L));
		}
		return -2147221227;
	}

	// Token: 0x06000204 RID: 516 RVA: 0x00027FD8 File Offset: 0x000273D8
	internal unsafe static EcDoDisconnect_Wrapper* {ctor}(EcDoDisconnect_Wrapper* A_0, IntPtr intfHandle, void** pcxh)
	{
		IntPtr intPtr = intfHandle;
		*A_0 = ref <Module>.??_7ExchangeRpcServer_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 8L) = intPtr;
		*A_0 = ref <Module>.??_7EcDoDisconnect_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 16L) = pcxh;
		return A_0;
	}

	// Token: 0x06000205 RID: 517 RVA: 0x0002800C File Offset: 0x0002740C
	internal unsafe static EcDoRpc_Wrapper* {ctor}(EcDoRpc_Wrapper* A_0, IntPtr intfHandle, void** pcxh, byte* rgb, ushort* pusLength, ushort usSize)
	{
		IntPtr intPtr = intfHandle;
		*A_0 = ref <Module>.??_7ExchangeRpcServer_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 8L) = intPtr;
		*A_0 = ref <Module>.??_7EcDoRpc_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 16L) = pcxh;
		*(A_0 + 24L) = rgb;
		*(A_0 + 32L) = pusLength;
		*(A_0 + 40L) = (short)usSize;
		return A_0;
	}

	// Token: 0x06000206 RID: 518 RVA: 0x00028058 File Offset: 0x00027458
	internal unsafe static EcDoConnectEx_Wrapper* {ctor}(EcDoConnectEx_Wrapper* A_0, IntPtr intfHandle, void* hBinding, void** pcxh, byte* szUserDN, uint ulFlags, uint ulConMod, uint cbLimit, uint ulCpid, uint ulLcidString, uint ulLcidSort, uint ulIcxrLink, ushort usFCanConvertCodePages, uint* pcmsPollsMax, uint* pcRetry, uint* pcmsRetryDelay, ushort* picxr, byte** pszDNPrefix, byte** pszDisplayName, ushort* rgwClientVersion, ushort* rgwServerVersion, ushort* rgwBestVersion, uint* pulTimeStamp, byte* rgbAuxIn, uint cbAuxIn, byte* rgbAuxOut, uint* pcbAuxOut)
	{
		IntPtr intPtr = intfHandle;
		*A_0 = ref <Module>.??_7ExchangeRpcServer_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 8L) = intPtr;
		*A_0 = ref <Module>.??_7EcDoConnectEx_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 16L) = hBinding;
		*(A_0 + 24L) = pcxh;
		*(A_0 + 32L) = szUserDN;
		*(A_0 + 40L) = ulFlags;
		*(A_0 + 44L) = ulConMod;
		*(A_0 + 48L) = cbLimit;
		*(A_0 + 52L) = ulCpid;
		*(A_0 + 56L) = ulLcidString;
		*(A_0 + 60L) = ulLcidSort;
		*(A_0 + 64L) = ulIcxrLink;
		*(A_0 + 68L) = (short)usFCanConvertCodePages;
		*(A_0 + 72L) = pcmsPollsMax;
		*(A_0 + 80L) = pcRetry;
		*(A_0 + 88L) = pcmsRetryDelay;
		*(A_0 + 96L) = picxr;
		*(A_0 + 104L) = pszDNPrefix;
		*(A_0 + 112L) = pszDisplayName;
		*(A_0 + 120L) = rgwClientVersion;
		*(A_0 + 128L) = rgwServerVersion;
		*(A_0 + 136L) = rgwBestVersion;
		*(A_0 + 144L) = pulTimeStamp;
		*(A_0 + 152L) = rgbAuxIn;
		*(A_0 + 160L) = cbAuxIn;
		*(A_0 + 168L) = rgbAuxOut;
		*(A_0 + 176L) = pcbAuxOut;
		return A_0;
	}

	// Token: 0x06000207 RID: 519 RVA: 0x00028160 File Offset: 0x00027560
	internal unsafe static EcDoRpcExt2_Wrapper* {ctor}(EcDoRpcExt2_Wrapper* A_0, IntPtr intfHandle, void** pcxh, uint* pulFlags, byte* rgbIn, uint cbIn, byte* rgbOut, uint* pcbOut, byte* rgbAuxIn, uint cbAuxIn, byte* rgbAuxOut, uint* pcbAuxOut)
	{
		IntPtr intPtr = intfHandle;
		*A_0 = ref <Module>.??_7ExchangeRpcServer_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 8L) = intPtr;
		*A_0 = ref <Module>.??_7EcDoRpcExt2_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 16L) = pcxh;
		*(A_0 + 24L) = pulFlags;
		*(A_0 + 32L) = rgbIn;
		*(A_0 + 40L) = cbIn;
		*(A_0 + 48L) = rgbOut;
		*(A_0 + 56L) = pcbOut;
		*(A_0 + 64L) = rgbAuxIn;
		*(A_0 + 72L) = cbAuxIn;
		*(A_0 + 80L) = rgbAuxOut;
		*(A_0 + 88L) = pcbAuxOut;
		return A_0;
	}

	// Token: 0x06000208 RID: 520 RVA: 0x000281DC File Offset: 0x000275DC
	internal unsafe static EcDoAsyncConnectEx_Wrapper* {ctor}(EcDoAsyncConnectEx_Wrapper* A_0, IntPtr intfHandle, void* cxh, void** pacxh)
	{
		IntPtr intPtr = intfHandle;
		*A_0 = ref <Module>.??_7ExchangeRpcServer_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 8L) = intPtr;
		*A_0 = ref <Module>.??_7EcDoAsyncConnectEx_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 16L) = cxh;
		*(A_0 + 24L) = pacxh;
		return A_0;
	}

	// Token: 0x06000209 RID: 521 RVA: 0x00028218 File Offset: 0x00027618
	internal unsafe static ExchangeAsyncRpcServer_Wrapper* {ctor}(ExchangeAsyncRpcServer_Wrapper* A_0, IntPtr intfHandle)
	{
		*A_0 = ref <Module>.??_7ExchangeAsyncRpcServer_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 8L) = intfHandle;
		return A_0;
	}

	// Token: 0x0600020A RID: 522 RVA: 0x000273AC File Offset: 0x000267AC
	internal unsafe static int InternalExecute(ExchangeAsyncRpcServer_Wrapper* A_0, SafeRpcAsyncStateHandle pAsyncState)
	{
		ExchangeRpcServerAsyncBase exchangeRpcServerAsyncBase = (ExchangeRpcServerAsyncBase)RpcServerBase.GetServerInstance(*(A_0 + 8L));
		if (exchangeRpcServerAsyncBase == null)
		{
			return -2147221227;
		}
		IProxyServer proxyServer = exchangeRpcServerAsyncBase.GetProxyServer();
		if (proxyServer != null)
		{
			return calli(System.Int32 modopt(System.Runtime.CompilerServices.IsLong)(System.IntPtr,Microsoft.Exchange.Rpc.ExchangeServer.IProxyServer,Microsoft.Exchange.Rpc.SafeRpcAsyncStateHandle), A_0, proxyServer, pAsyncState, *(*A_0 + 8L));
		}
		return -2147221227;
	}

	// Token: 0x0600020B RID: 523 RVA: 0x0002823C File Offset: 0x0002763C
	internal unsafe static EcDoAsyncWaitEx_Wrapper* {ctor}(EcDoAsyncWaitEx_Wrapper* A_0, IntPtr intfHandle, void* acxh, uint ulFlagsIn, uint* pulFlagsOut)
	{
		IntPtr intPtr = intfHandle;
		*A_0 = ref <Module>.??_7ExchangeAsyncRpcServer_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 8L) = intPtr;
		*A_0 = ref <Module>.??_7EcDoAsyncWaitEx_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 16L) = acxh;
		*(A_0 + 24L) = ulFlagsIn;
		*(A_0 + 32L) = pulFlagsOut;
		return A_0;
	}

	// Token: 0x0600020C RID: 524 RVA: 0x000274B0 File Offset: 0x000268B0
	internal unsafe static void NormalizeVersion(ushort* rgwVersion, short[] rgwNormalized)
	{
		if ((*(rgwVersion + 2L) & 32768) != 0)
		{
			rgwNormalized[0] = (short)(*(rgwVersion + 1L));
			rgwNormalized[1] = (short)(*rgwVersion & 255);
			rgwNormalized[2] = (short)(*(rgwVersion + 2L) & 32767);
			rgwNormalized[3] = (short)(*(rgwVersion + 4L));
		}
		else
		{
			rgwNormalized[0] = (short)(*rgwVersion);
			rgwNormalized[1] = 0;
			rgwNormalized[2] = (short)(*(rgwVersion + 2L));
			rgwNormalized[3] = (short)(*(rgwVersion + 4L));
		}
	}

	// Token: 0x0600020D RID: 525 RVA: 0x00027514 File Offset: 0x00026914
	internal unsafe static int EcCriticalVersionCheck(ushort* rgwVersion, ushort* rgwNeededVersion)
	{
		int result = 0;
		short[] array = new short[4];
		<Module>.NormalizeVersion(rgwVersion, array);
		short num = array[0];
		if (num <= 6 || num > 127)
		{
			if (num == 6)
			{
				short num2 = array[1];
				if (num2 > 0 && num2 <= 255)
				{
					goto IL_57;
				}
				if (num2 == 0)
				{
					short num3 = array[2];
					if (num3 > 0 && num3 <= 32767)
					{
						goto IL_57;
					}
					if (num3 == 0)
					{
						short num4 = array[3];
						if (num4 > 0 || num4 >= 0)
						{
							goto IL_57;
						}
					}
				}
			}
			if (rgwNeededVersion != null)
			{
				*rgwNeededVersion = 6;
				*(rgwNeededVersion + 2L) = 0;
				*(rgwNeededVersion + 4L) = 0;
			}
			return -2147221232;
		}
		IL_57:
		if (rgwNeededVersion != null)
		{
			*rgwNeededVersion = (short)(*rgwVersion);
			*(rgwNeededVersion + 2L) = (short)(*(rgwVersion + 2L));
			*(rgwNeededVersion + 4L) = (short)(*(rgwVersion + 4L));
		}
		return result;
	}

	// Token: 0x0600020E RID: 526 RVA: 0x00028280 File Offset: 0x00027680
	internal unsafe static int EcDoConnect(void* hBinding, void** pcxh, byte* szUserDN, uint ulFlags, uint ulConMod, uint cbLimit, uint ulCpid, uint ulLcidString, uint ulLcidSort, uint ulIcxrLink, ushort usFCanConvertCodePages, uint* pcmsPollsMax, uint* pcRetry, uint* pcmsRetryDelay, ushort* picxr, byte** pszDNPrefix, byte** pszDisplayName, ushort* rgwClientVersion, ushort* rgwServerVersion, ushort* rgwBestVersion, uint* pulTimeStamp)
	{
		return -2147221246;
	}

	// Token: 0x0600020F RID: 527 RVA: 0x000275B0 File Offset: 0x000269B0
	internal unsafe static int EcDoDisconnect(void** pcxh)
	{
		return -2147221246;
	}

	// Token: 0x06000210 RID: 528 RVA: 0x000275C4 File Offset: 0x000269C4
	internal unsafe static int EcDoRpc(void** pcxh, byte* rgb, ushort* pusLength, ushort usSize)
	{
		return -2147221246;
	}

	// Token: 0x06000211 RID: 529 RVA: 0x000275D8 File Offset: 0x000269D8
	internal unsafe static int EcGetMoreRpc(void** pcxh, byte* rgb, ushort* pusLength, ushort usSize)
	{
		if (null != pcxh && 0L != rgb && null != pusLength)
		{
			*pusLength = 0;
			return -2147221246;
		}
		return -2147024809;
	}

	// Token: 0x06000212 RID: 530 RVA: 0x00027604 File Offset: 0x00026A04
	internal unsafe static int EcRRegisterPushNotification(void** pcxh, uint iRpc, byte* rgbContext, ushort cbContext, uint grbitMapiAdviseBits, byte* rgbClientBlob, ushort cbBlob, uint* hNotification)
	{
		return -2147221246;
	}

	// Token: 0x06000213 RID: 531 RVA: 0x00027618 File Offset: 0x00026A18
	internal unsafe static int EcRUnregisterPushNotification(void** pcxh, uint iRpc, uint hNotification)
	{
		return -2147221246;
	}

	// Token: 0x06000214 RID: 532 RVA: 0x0002762C File Offset: 0x00026A2C
	internal unsafe static int EcDummyRpc(void* hBinding)
	{
		return 0;
	}

	// Token: 0x06000215 RID: 533 RVA: 0x0002763C File Offset: 0x00026A3C
	internal unsafe static int EcRGetDCName(void** pcxh, byte* szDomainName, sbyte* rgchDomainController)
	{
		return -2147221246;
	}

	// Token: 0x06000216 RID: 534 RVA: 0x00027650 File Offset: 0x00026A50
	internal unsafe static int EcRNetGetDCName(void* hBinding, byte* szDomainName, sbyte* rgchDomainController)
	{
		return -2147221246;
	}

	// Token: 0x06000217 RID: 535 RVA: 0x00027664 File Offset: 0x00026A64
	internal unsafe static int EcDoRpcExt(void** pcxh, uint* pulFlags, byte* rgbIn, uint cbIn, byte* rgbOut, uint* pcbOut, byte* rgbAux, uint* pcbAux, uint* pulTransTime)
	{
		return -2147221246;
	}

	// Token: 0x06000218 RID: 536 RVA: 0x00027678 File Offset: 0x00026A78
	internal unsafe static int EcDoConnectEx(void* hBinding, void** pcxh, byte* szUserDN, uint ulFlags, uint ulConMod, uint cbLimit, uint ulCpid, uint ulLcidString, uint ulLcidSort, uint ulIcxrLink, ushort usFCanConvertCodePages, uint* pcmsPollsMax, uint* pcRetry, uint* pcmsRetryDelay, ushort* picxr, byte** pszDNPrefix, byte** pszDisplayName, ushort* rgwClientVersion, ushort* rgwServerVersion, ushort* rgwBestVersion, uint* pulTimeStamp, byte* rgbAuxIn, uint cbAuxIn, byte* rgbAuxOut, uint* pcbAuxOut)
	{
		return -2147221246;
	}

	// Token: 0x06000219 RID: 537 RVA: 0x0002768C File Offset: 0x00026A8C
	internal unsafe static int EcDoRpcExt2(void** pcxh, uint* pulFlags, byte* rgbIn, uint cbIn, byte* rgbOut, uint* pcbOut, byte* rgbAuxIn, uint cbAuxIn, byte* rgbAuxOut, uint* pcbAuxOut, uint* pulTransTime)
	{
		return -2147221246;
	}

	// Token: 0x0600021A RID: 538 RVA: 0x000276A0 File Offset: 0x00026AA0
	internal unsafe static int EcDoAsyncConnect(void* cxh, void** pcxh)
	{
		if (null == pcxh)
		{
			return -2147024809;
		}
		*(long*)pcxh = 0L;
		return -2147221246;
	}

	// Token: 0x0600021B RID: 539 RVA: 0x000276C4 File Offset: 0x00026AC4
	internal unsafe static int EcDoAsyncWait(void* cxh, uint ulFlagsIn, uint* pulFlagsOut)
	{
		return -2147221246;
	}

	// Token: 0x0600021C RID: 540 RVA: 0x000276D8 File Offset: 0x00026AD8
	internal unsafe static int EcDoAsyncConnectEx(void* cxh, void** pacxh)
	{
		return -2147221246;
	}

	// Token: 0x0600021D RID: 541 RVA: 0x000276EC File Offset: 0x00026AEC
	internal unsafe static void CXH_rundown(void* cxh)
	{
	}

	// Token: 0x0600021E RID: 542 RVA: 0x000276FC File Offset: 0x00026AFC
	internal unsafe static void EcDoAsyncWaitEx(_RPC_ASYNC_STATE* pAsyncState, void* acxh, uint ulFlagsIn, uint* pulFlagsOut)
	{
		int num = -2147221246;
		<Module>.RpcAsyncCompleteCall(pAsyncState, (void*)(&num));
	}

	// Token: 0x0600021F RID: 543 RVA: 0x00027718 File Offset: 0x00026B18
	internal unsafe static void ACXH_rundown(void* acxh)
	{
	}

	// Token: 0x06000220 RID: 544 RVA: 0x00028294 File Offset: 0x00027694
	internal unsafe static int EcDoDisconnectMT_Managed(void** pcxh)
	{
		IntPtr rpcIntfHandle = ExchangeRpcServerMT.RpcIntfHandle;
		EcDoDisconnect_Wrapper ecDoDisconnect_Wrapper;
		*(ref ecDoDisconnect_Wrapper + 8) = rpcIntfHandle;
		ecDoDisconnect_Wrapper = ref <Module>.??_7EcDoDisconnect_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(ref ecDoDisconnect_Wrapper + 16) = pcxh;
		return <Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.Execute(ref ecDoDisconnect_Wrapper);
	}

	// Token: 0x06000221 RID: 545 RVA: 0x000282CC File Offset: 0x000276CC
	internal unsafe static int EcDoRpcMT_Managed(void** pcxh, byte* rgb, ushort* pusLength, ushort usSize)
	{
		IntPtr rpcIntfHandle = ExchangeRpcServerMT.RpcIntfHandle;
		EcDoRpc_Wrapper ecDoRpc_Wrapper;
		*(ref ecDoRpc_Wrapper + 8) = rpcIntfHandle;
		ecDoRpc_Wrapper = ref <Module>.??_7EcDoRpc_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(ref ecDoRpc_Wrapper + 16) = pcxh;
		*(ref ecDoRpc_Wrapper + 24) = rgb;
		*(ref ecDoRpc_Wrapper + 32) = pusLength;
		*(ref ecDoRpc_Wrapper + 40) = (short)usSize;
		return <Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.Execute(ref ecDoRpc_Wrapper);
	}

	// Token: 0x06000222 RID: 546 RVA: 0x00028318 File Offset: 0x00027718
	internal unsafe static int EcDoConnectExMT_Managed(void* hBinding, void** pcxh, byte* szUserDN, uint ulFlags, uint ulConMod, uint cbLimit, uint ulCpid, uint ulLcidString, uint ulLcidSort, uint ulIcxrLink, ushort usFCanConvertCodePages, uint* pcmsPollsMax, uint* pcRetry, uint* pcmsRetryDelay, ushort* picxr, byte** pszDNPrefix, byte** pszDisplayName, ushort* rgwClientVersion, ushort* rgwServerVersion, ushort* rgwBestVersion, uint* pulTimeStamp, byte* rgbAuxIn, uint cbAuxIn, byte* rgbAuxOut, uint* pcbAuxOut)
	{
		IntPtr rpcIntfHandle = ExchangeRpcServerMT.RpcIntfHandle;
		EcDoConnectEx_Wrapper ecDoConnectEx_Wrapper;
		*(ref ecDoConnectEx_Wrapper + 8) = rpcIntfHandle;
		ecDoConnectEx_Wrapper = ref <Module>.??_7EcDoConnectEx_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(ref ecDoConnectEx_Wrapper + 16) = hBinding;
		*(ref ecDoConnectEx_Wrapper + 24) = pcxh;
		*(ref ecDoConnectEx_Wrapper + 32) = szUserDN;
		*(ref ecDoConnectEx_Wrapper + 40) = ulFlags;
		*(ref ecDoConnectEx_Wrapper + 44) = ulConMod;
		*(ref ecDoConnectEx_Wrapper + 48) = cbLimit;
		*(ref ecDoConnectEx_Wrapper + 52) = ulCpid;
		*(ref ecDoConnectEx_Wrapper + 56) = ulLcidString;
		*(ref ecDoConnectEx_Wrapper + 60) = ulLcidSort;
		*(ref ecDoConnectEx_Wrapper + 64) = ulIcxrLink;
		*(ref ecDoConnectEx_Wrapper + 68) = (short)usFCanConvertCodePages;
		*(ref ecDoConnectEx_Wrapper + 72) = pcmsPollsMax;
		*(ref ecDoConnectEx_Wrapper + 80) = pcRetry;
		*(ref ecDoConnectEx_Wrapper + 88) = pcmsRetryDelay;
		*(ref ecDoConnectEx_Wrapper + 96) = picxr;
		*(ref ecDoConnectEx_Wrapper + 104) = pszDNPrefix;
		*(ref ecDoConnectEx_Wrapper + 112) = pszDisplayName;
		*(ref ecDoConnectEx_Wrapper + 120) = rgwClientVersion;
		*(ref ecDoConnectEx_Wrapper + 128) = rgwServerVersion;
		*(ref ecDoConnectEx_Wrapper + 136) = rgwBestVersion;
		*(ref ecDoConnectEx_Wrapper + 144) = pulTimeStamp;
		*(ref ecDoConnectEx_Wrapper + 152) = rgbAuxIn;
		*(ref ecDoConnectEx_Wrapper + 160) = cbAuxIn;
		*(ref ecDoConnectEx_Wrapper + 168) = rgbAuxOut;
		*(ref ecDoConnectEx_Wrapper + 176) = pcbAuxOut;
		return <Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.Execute(ref ecDoConnectEx_Wrapper);
	}

	// Token: 0x06000223 RID: 547 RVA: 0x00028420 File Offset: 0x00027820
	internal unsafe static int EcDoRpcExt2MT_Managed(void** pcxh, uint* pulFlags, byte* rgbIn, uint cbIn, byte* rgbOut, uint* pcbOut, byte* rgbAuxIn, uint cbAuxIn, byte* rgbAuxOut, uint* pcbAuxOut, uint* pulTransTime)
	{
		uint tickCount = <Module>.GetTickCount();
		IntPtr rpcIntfHandle = ExchangeRpcServerMT.RpcIntfHandle;
		EcDoRpcExt2_Wrapper ecDoRpcExt2_Wrapper;
		*(ref ecDoRpcExt2_Wrapper + 8) = rpcIntfHandle;
		ecDoRpcExt2_Wrapper = ref <Module>.??_7EcDoRpcExt2_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(ref ecDoRpcExt2_Wrapper + 16) = pcxh;
		*(ref ecDoRpcExt2_Wrapper + 24) = pulFlags;
		*(ref ecDoRpcExt2_Wrapper + 32) = rgbIn;
		*(ref ecDoRpcExt2_Wrapper + 40) = cbIn;
		*(ref ecDoRpcExt2_Wrapper + 48) = rgbOut;
		*(ref ecDoRpcExt2_Wrapper + 56) = pcbOut;
		*(ref ecDoRpcExt2_Wrapper + 64) = rgbAuxIn;
		*(ref ecDoRpcExt2_Wrapper + 72) = cbAuxIn;
		*(ref ecDoRpcExt2_Wrapper + 80) = rgbAuxOut;
		*(ref ecDoRpcExt2_Wrapper + 88) = pcbAuxOut;
		int result = <Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.Execute(ref ecDoRpcExt2_Wrapper);
		if (pulTransTime != null)
		{
			*(int*)pulTransTime = <Module>.GetTickCount() - tickCount;
		}
		return result;
	}

	// Token: 0x06000224 RID: 548 RVA: 0x000284B0 File Offset: 0x000278B0
	internal unsafe static int EcDoAsyncConnectExMT_Managed(void* cxh, void** pacxh)
	{
		IntPtr rpcIntfHandle = ExchangeRpcServerMT.RpcIntfHandle;
		EcDoAsyncConnectEx_Wrapper ecDoAsyncConnectEx_Wrapper;
		*(ref ecDoAsyncConnectEx_Wrapper + 8) = rpcIntfHandle;
		ecDoAsyncConnectEx_Wrapper = ref <Module>.??_7EcDoAsyncConnectEx_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(ref ecDoAsyncConnectEx_Wrapper + 16) = cxh;
		*(ref ecDoAsyncConnectEx_Wrapper + 24) = pacxh;
		return <Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.Execute(ref ecDoAsyncConnectEx_Wrapper);
	}

	// Token: 0x06000225 RID: 549 RVA: 0x000284F0 File Offset: 0x000278F0
	internal unsafe static void EcDoAsyncWaitExMT_Managed(_RPC_ASYNC_STATE* pAsyncState, void* acxh, uint ulFlagsIn, uint* pulFlagsOut)
	{
		IntPtr rpcIntfHandle = ExchangeRpcServerMTAsync.RpcIntfHandle;
		EcDoAsyncWaitEx_Wrapper ecDoAsyncWaitEx_Wrapper;
		*(ref ecDoAsyncWaitEx_Wrapper + 8) = rpcIntfHandle;
		ecDoAsyncWaitEx_Wrapper = ref <Module>.??_7EcDoAsyncWaitEx_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(ref ecDoAsyncWaitEx_Wrapper + 16) = acxh;
		*(ref ecDoAsyncWaitEx_Wrapper + 24) = ulFlagsIn;
		*(ref ecDoAsyncWaitEx_Wrapper + 32) = pulFlagsOut;
		<Module>.Microsoft.Exchange.Rpc.ManagedExceptionAsyncCrashWrapper.Execute<class\u0020Microsoft::Exchange::Rpc::ExchangeServer::SafeEcDoAsyncWaitExMTRpcAsyncStateHandle>(ref ecDoAsyncWaitEx_Wrapper, pAsyncState);
	}

	// Token: 0x06000226 RID: 550 RVA: 0x00027728 File Offset: 0x00026B28
	internal unsafe static int EcDispatchProxyCall(EcDoConnectEx_Wrapper* A_0, IProxyServer proxyServer)
	{
		string @string = null;
		byte[] array = null;
		uint num = 0;
		ClientSecurityContext clientSecurityContext = null;
		try
		{
			ulong num2 = (ulong)(*(A_0 + 24L));
			if (0UL == num2 || 0L == *(A_0 + 72L) || 0L == *(A_0 + 80L) || 0L == *(A_0 + 88L) || 0L == *(A_0 + 96L) || 0L == *(A_0 + 104L) || 0L == *(A_0 + 112L) || 0L == *(A_0 + 120L) || 0L == *(A_0 + 128L) || 0L == *(A_0 + 136L) || 0L == *(A_0 + 144L))
			{
				return -2147024809;
			}
			*num2 = 0L;
			ulong num3 = (ulong)(*(A_0 + 176L));
			if (num3 != 0UL)
			{
				num = *num3;
				*num3 = 0;
			}
			*(*(A_0 + 104L)) = 0L;
			*(*(A_0 + 112L)) = 0L;
			*(*(A_0 + 72L)) = 60000;
			*(*(A_0 + 80L)) = 60;
			*(*(A_0 + 88L)) = 1000;
			*(*(A_0 + 128L)) = 3840;
			*(*(A_0 + 128L) + 2L) = (short)34265;
			*(*(A_0 + 128L) + 4L) = (short)(proxyServer.GetVersionDelta() + 10);
			int num4 = <Module>.EcCriticalVersionCheck(*(A_0 + 120L), *(A_0 + 136L));
			if (num4 != null)
			{
				return num4;
			}
			if (*(A_0 + 48L) != 0)
			{
				return -2147221246;
			}
			if (*(A_0 + 68L) != 1)
			{
				return -2147221246;
			}
			ulong num5 = (ulong)(*(A_0 + 32L));
			if (num5 == 0UL || *num5 == 0)
			{
				return -2147024891;
			}
			clientSecurityContext = RpcServerBase.GetClientSecurityContext(*(A_0 + 16L));
			if (clientSecurityContext == null)
			{
				return -2147024891;
			}
			IntPtr zero = IntPtr.Zero;
			IntPtr ptr = new IntPtr(*(A_0 + 32L));
			string userDn = Marshal.PtrToStringAnsi(ptr);
			uint flags = (uint)(*(A_0 + 40L));
			uint conMod = (uint)(*(A_0 + 44L));
			uint cpid = (uint)(*(A_0 + 52L));
			uint lcidString = (uint)(*(A_0 + 56L));
			uint lcidSort = (uint)(*(A_0 + 60L));
			uint num6 = 60000U;
			uint num7 = 60U;
			uint num8 = 1000U;
			string empty = string.Empty;
			@string = null;
			byte[] auxIn = <Module>.UToMBytes(*(A_0 + 160L), *(A_0 + 152L));
			short[] array2 = new short[3];
			array = null;
			array2[0] = (short)(*(*(A_0 + 120L)));
			array2[1] = (short)(*(*(A_0 + 120L) + 2L));
			array2[2] = (short)(*(*(A_0 + 120L) + 4L));
			int num9 = proxyServer.EcDoConnectEx(clientSecurityContext, out zero, userDn, flags, conMod, cpid, lcidString, lcidSort, out num6, out num7, out num8, out @string, array2, auxIn, out array);
			*(*(A_0 + 24L)) = zero.ToPointer();
			ulong num10 = (ulong)(*(A_0 + 168L));
			if (num10 != 0UL && *(A_0 + 176L) != 0L && array != null)
			{
				int num11 = array.Length;
				if (num11 > 0 && num11 <= num)
				{
					IntPtr destination = new IntPtr(num10);
					Marshal.Copy(array, 0, destination, array.Length);
					*(*(A_0 + 176L)) = array.Length;
				}
			}
			if (num9 != null)
			{
				return num9;
			}
			*(*(A_0 + 72L)) = (int)num6;
			*(*(A_0 + 80L)) = (int)num7;
			*(*(A_0 + 88L)) = (int)num8;
			*(*(A_0 + 104L)) = <Module>.StringToUnmanagedMultiByte(empty, 0U);
			*(*(A_0 + 112L)) = <Module>.StringToUnmanagedMultiByte(@string, 0U);
			if (*(A_0 + 64L) == -1)
			{
				DateTime utcNow = DateTime.UtcNow;
				*(*(A_0 + 144L)) = (int)utcNow.ToFileTime();
			}
			*(*(A_0 + 96L)) = (short)((int)zero.ToInt64());
		}
		finally
		{
			if (clientSecurityContext != null)
			{
				((IDisposable)clientSecurityContext).Dispose();
			}
		}
		return 0;
	}

	// Token: 0x06000227 RID: 551 RVA: 0x00027AB8 File Offset: 0x00026EB8
	internal unsafe static int EcDispatchProxyCall(EcDoDisconnect_Wrapper* A_0, IProxyServer proxyServer)
	{
		ulong num = (ulong)(*(A_0 + 16L));
		if (0UL == num)
		{
			return -2147024809;
		}
		IntPtr intPtr = new IntPtr(*num);
		int result = proxyServer.EcDoDisconnect(ref intPtr);
		*(*(A_0 + 16L)) = intPtr.ToPointer();
		return result;
	}

	// Token: 0x06000228 RID: 552 RVA: 0x00027AF8 File Offset: 0x00026EF8
	internal unsafe static int EcDispatchProxyCall(EcDoRpc_Wrapper* A_0, IProxyServer proxyServer)
	{
		ulong num = (ulong)(*(A_0 + 32L));
		if (0UL != num)
		{
			*num = 0;
		}
		return -2147221246;
	}

	// Token: 0x06000229 RID: 553 RVA: 0x00028538 File Offset: 0x00027938
	internal unsafe static int EcDispatchProxyCall(EcDoRpcExt2_Wrapper* A_0, IProxyServer proxyServer)
	{
		if (0L != *(A_0 + 16L) && 0L != *(A_0 + 48L))
		{
			ulong num = (ulong)(*(A_0 + 56L));
			if (0UL != num)
			{
				uint num2 = (uint)(*num);
				if (num2 >= 32775U && num2 <= 262152U && 0L != *(A_0 + 24L))
				{
					int num3 = 0;
					int count = 0;
					int count2 = 0;
					byte[] array = null;
					byte[] array2 = null;
					ArraySegment<byte> arraySegment = new ArraySegment<byte>(RpcBufferPool.GetBuffer(0));
					ArraySegment<byte> arraySegment2 = arraySegment;
					ArraySegment<byte> arraySegment3 = new ArraySegment<byte>(RpcBufferPool.GetBuffer(0));
					ArraySegment<byte> arraySegment4 = arraySegment3;
					try
					{
						byte[] array3 = <Module>.UToMLeasedBuffer(*(A_0 + 40L), *(A_0 + 32L), ref count);
						byte[] array4 = <Module>.UToMLeasedBuffer(*(A_0 + 72L), *(A_0 + 64L), ref count2);
						uint num4 = (uint)(*(*(A_0 + 56L)));
						uint num5 = 0U;
						IntPtr intPtr = new IntPtr(*(*(A_0 + 16L)));
						IntPtr intPtr2 = intPtr;
						uint num6 = (uint)(*(*(A_0 + 24L)));
						ulong num7 = (ulong)(*(A_0 + 88L));
						if (0UL != num7)
						{
							num5 = (uint)(*num7);
							*num7 = 0;
						}
						ArraySegment<byte> auxIn = new ArraySegment<byte>(array4, 0, count2);
						ArraySegment<byte> request = new ArraySegment<byte>(array3, 0, count);
						num3 = proxyServer.EcDoRpcExt2(ref intPtr2, ref num6, request, num4, out arraySegment2, auxIn, out arraySegment4);
						if (arraySegment4.Count > 0 && arraySegment4.Count <= (int)num5)
						{
							IntPtr destination = new IntPtr(*(A_0 + 80L));
							Marshal.Copy(arraySegment4.Array, arraySegment4.Offset, destination, arraySegment4.Count);
							if (0L != *(A_0 + 88L))
							{
								int count3 = arraySegment4.Count;
								*(*(A_0 + 88L)) = count3;
							}
						}
						*(*(A_0 + 16L)) = intPtr2.ToPointer();
						*(*(A_0 + 24L)) = (int)num6;
						if (0 == num3 && arraySegment2.Count > 0)
						{
							if (arraySegment2.Count > (int)num4)
							{
								throw new ArgumentException("Response size is bigger than maximum requested size");
							}
							IntPtr destination2 = new IntPtr(*(A_0 + 48L));
							Marshal.Copy(arraySegment2.Array, arraySegment2.Offset, destination2, arraySegment2.Count);
							int count4 = arraySegment2.Count;
							*(*(A_0 + 56L)) = count4;
						}
						else
						{
							*(*(A_0 + 56L)) = 0;
						}
					}
					finally
					{
						if (array != null)
						{
							RpcBufferPool.ReleaseBuffer(array);
						}
						if (array2 != null)
						{
							RpcBufferPool.ReleaseBuffer(array2);
						}
						RpcBufferPool.ReleaseBuffer(arraySegment2.Array);
						RpcBufferPool.ReleaseBuffer(arraySegment4.Array);
					}
					return num3;
				}
			}
		}
		return -2147024809;
	}

	// Token: 0x0600022A RID: 554 RVA: 0x00027B1C File Offset: 0x00026F1C
	internal unsafe static int EcDispatchProxyCall(EcDoAsyncConnectEx_Wrapper* A_0, IProxyServer proxyServer)
	{
		ulong num = (ulong)(*(A_0 + 24L));
		if (num == 0UL)
		{
			return -2147024809;
		}
		*num = 0;
		IntPtr contextHandle = new IntPtr(*(A_0 + 16L));
		IntPtr intPtr = 0;
		int num2 = proxyServer.EcDoAsyncConnectEx(contextHandle, out intPtr);
		if (num2 == null)
		{
			*(*(A_0 + 24L)) = intPtr.ToPointer();
		}
		return num2;
	}

	// Token: 0x0600022B RID: 555 RVA: 0x00027B70 File Offset: 0x00026F70
	internal unsafe static int EcDispatchProxyCall(EcDoAsyncWaitEx_Wrapper* A_0, IProxyServer proxyServer, SafeRpcAsyncStateHandle pAsyncState)
	{
		ProxyAsyncWaitCompletion completionObject = new ProxyAsyncWaitCompletion(pAsyncState, *(A_0 + 32L));
		IntPtr asynchronousContextHandle = new IntPtr(*(A_0 + 16L));
		return proxyServer.DoAsyncWaitEx(asynchronousContextHandle, (uint)(*(A_0 + 24L)), completionObject);
	}

	// Token: 0x0600022C RID: 556 RVA: 0x00027D58 File Offset: 0x00027158
	internal unsafe static void Execute<class\u0020Microsoft::Exchange::Rpc::ExchangeServer::SafeEcDoAsyncWaitExMTRpcAsyncStateHandle>(ManagedExceptionAsyncCrashWrapper* A_0, _RPC_ASYNC_STATE* pAsyncState)
	{
		SafeEcDoAsyncWaitExMTRpcAsyncStateHandle safeEcDoAsyncWaitExMTRpcAsyncStateHandle = null;
		try
		{
			IntPtr handle = new IntPtr((void*)pAsyncState);
			safeEcDoAsyncWaitExMTRpcAsyncStateHandle = new SafeEcDoAsyncWaitExMTRpcAsyncStateHandle(handle);
			pAsyncState = null;
			int num = calli(System.Int32 modopt(System.Runtime.CompilerServices.IsLong)(System.IntPtr,Microsoft.Exchange.Rpc.SafeRpcAsyncStateHandle), A_0, safeEcDoAsyncWaitExMTRpcAsyncStateHandle, *(*A_0));
			if (0 != num)
			{
				safeEcDoAsyncWaitExMTRpcAsyncStateHandle.CompleteCall(num);
			}
		}
		catch (RpcException ex)
		{
			if (safeEcDoAsyncWaitExMTRpcAsyncStateHandle != null)
			{
				safeEcDoAsyncWaitExMTRpcAsyncStateHandle.AbortCall((uint)ex.ErrorCode);
			}
		}
		catch (FailRpcException ex2)
		{
			if (safeEcDoAsyncWaitExMTRpcAsyncStateHandle != null)
			{
				safeEcDoAsyncWaitExMTRpcAsyncStateHandle.CompleteCall(ex2.ErrorCode);
			}
		}
		catch (ThreadAbortException)
		{
			if (safeEcDoAsyncWaitExMTRpcAsyncStateHandle != null)
			{
				safeEcDoAsyncWaitExMTRpcAsyncStateHandle.AbortCall(1726U);
			}
		}
		catch (OutOfMemoryException)
		{
			if (safeEcDoAsyncWaitExMTRpcAsyncStateHandle != null)
			{
				safeEcDoAsyncWaitExMTRpcAsyncStateHandle.AbortCall(1130U);
			}
		}
		catch (System.Exception e)
		{
			<Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.CrashMeNow(e);
		}
		catch (object o)
		{
			<Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.CrashMeNow(o);
		}
		finally
		{
			if (pAsyncState != null)
			{
				<Module>.RpcRaiseException(1130);
			}
		}
	}

	// Token: 0x0600022D RID: 557 RVA: 0x000692D0 File Offset: 0x000686D0
	internal unsafe static void ??__E??_7ManagedExceptionAsyncCrashWrapper@Rpc@Exchange@Microsoft@@6B@@@YMXXZ()
	{
		<Module>.??_7ManagedExceptionAsyncCrashWrapper@Rpc@Exchange@Microsoft@@6B@ = ref <Module>.??_R4ManagedExceptionAsyncCrashWrapper@Rpc@Exchange@Microsoft@@6B@;
		*(ref <Module>.??_7ManagedExceptionAsyncCrashWrapper@Rpc@Exchange@Microsoft@@6B@ + 8) = (long)ldftn(_purecall);
	}

	// Token: 0x0600022E RID: 558 RVA: 0x000692F8 File Offset: 0x000686F8
	internal unsafe static void ??__E??_7ExchangeRpcServer_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@6B@@@YMXXZ()
	{
		<Module>.??_7ExchangeRpcServer_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@6B@ = ref <Module>.??_R4ExchangeRpcServer_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@6B@;
		*(ref <Module>.??_7ExchangeRpcServer_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@6B@ + 8) = <Module>.__unep@?InternalExecute@ExchangeRpcServer_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@$$FUEAAJXZ;
		*(ref <Module>.??_7ExchangeRpcServer_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@6B@ + 16) = (long)ldftn(_purecall);
	}

	// Token: 0x0600022F RID: 559 RVA: 0x0006932C File Offset: 0x0006872C
	internal unsafe static void ??__E??_7EcDoDisconnect_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@6B@@@YMXXZ()
	{
		<Module>.??_7EcDoDisconnect_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@6B@ = ref <Module>.??_R4EcDoDisconnect_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@6B@;
		*(ref <Module>.??_7EcDoDisconnect_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@6B@ + 8) = <Module>.__unep@?InternalExecute@ExchangeRpcServer_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcDoDisconnect_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@6B@ + 16) = (long)ldftn(Microsoft.Exchange.Rpc.ExchangeServer.EcDoDisconnect_Wrapper.EcDispatchProxyCall);
	}

	// Token: 0x06000230 RID: 560 RVA: 0x00069360 File Offset: 0x00068760
	internal unsafe static void ??__E??_7EcDoRpc_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@6B@@@YMXXZ()
	{
		<Module>.??_7EcDoRpc_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@6B@ = ref <Module>.??_R4EcDoRpc_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@6B@;
		*(ref <Module>.??_7EcDoRpc_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@6B@ + 8) = <Module>.__unep@?InternalExecute@ExchangeRpcServer_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcDoRpc_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@6B@ + 16) = (long)ldftn(Microsoft.Exchange.Rpc.ExchangeServer.EcDoRpc_Wrapper.EcDispatchProxyCall);
	}

	// Token: 0x06000231 RID: 561 RVA: 0x00069394 File Offset: 0x00068794
	internal unsafe static void ??__E??_7EcDoConnectEx_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@6B@@@YMXXZ()
	{
		<Module>.??_7EcDoConnectEx_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@6B@ = ref <Module>.??_R4EcDoConnectEx_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@6B@;
		*(ref <Module>.??_7EcDoConnectEx_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@6B@ + 8) = <Module>.__unep@?InternalExecute@ExchangeRpcServer_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcDoConnectEx_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@6B@ + 16) = (long)ldftn(Microsoft.Exchange.Rpc.ExchangeServer.EcDoConnectEx_Wrapper.EcDispatchProxyCall);
	}

	// Token: 0x06000232 RID: 562 RVA: 0x000693C8 File Offset: 0x000687C8
	internal unsafe static void ??__E??_7EcDoRpcExt2_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@6B@@@YMXXZ()
	{
		<Module>.??_7EcDoRpcExt2_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@6B@ = ref <Module>.??_R4EcDoRpcExt2_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@6B@;
		*(ref <Module>.??_7EcDoRpcExt2_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@6B@ + 8) = <Module>.__unep@?InternalExecute@ExchangeRpcServer_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcDoRpcExt2_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@6B@ + 16) = (long)ldftn(Microsoft.Exchange.Rpc.ExchangeServer.EcDoRpcExt2_Wrapper.EcDispatchProxyCall);
	}

	// Token: 0x06000233 RID: 563 RVA: 0x000693FC File Offset: 0x000687FC
	internal unsafe static void ??__E??_7EcDoAsyncConnectEx_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@6B@@@YMXXZ()
	{
		<Module>.??_7EcDoAsyncConnectEx_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@6B@ = ref <Module>.??_R4EcDoAsyncConnectEx_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@6B@;
		*(ref <Module>.??_7EcDoAsyncConnectEx_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@6B@ + 8) = <Module>.__unep@?InternalExecute@ExchangeRpcServer_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcDoAsyncConnectEx_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@6B@ + 16) = (long)ldftn(Microsoft.Exchange.Rpc.ExchangeServer.EcDoAsyncConnectEx_Wrapper.EcDispatchProxyCall);
	}

	// Token: 0x06000234 RID: 564 RVA: 0x00069430 File Offset: 0x00068830
	internal unsafe static void ??__E??_7ExchangeAsyncRpcServer_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@6B@@@YMXXZ()
	{
		<Module>.??_7ExchangeAsyncRpcServer_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@6B@ = ref <Module>.??_R4ExchangeAsyncRpcServer_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@6B@;
		*(ref <Module>.??_7ExchangeAsyncRpcServer_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@6B@ + 8) = (long)ldftn(Microsoft.Exchange.Rpc.ExchangeServer.ExchangeAsyncRpcServer_Wrapper.InternalExecute);
		*(ref <Module>.??_7ExchangeAsyncRpcServer_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@6B@ + 16) = (long)ldftn(_purecall);
	}

	// Token: 0x06000235 RID: 565 RVA: 0x00069468 File Offset: 0x00068868
	internal unsafe static void ??__E??_7EcDoAsyncWaitEx_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@6B@@@YMXXZ()
	{
		<Module>.??_7EcDoAsyncWaitEx_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@6B@ = ref <Module>.??_R4EcDoAsyncWaitEx_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@6B@;
		*(ref <Module>.??_7EcDoAsyncWaitEx_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@6B@ + 8) = (long)ldftn(Microsoft.Exchange.Rpc.ExchangeServer.ExchangeAsyncRpcServer_Wrapper.InternalExecute);
		*(ref <Module>.??_7EcDoAsyncWaitEx_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@6B@ + 16) = (long)ldftn(Microsoft.Exchange.Rpc.ExchangeServer.EcDoAsyncWaitEx_Wrapper.EcDispatchProxyCall);
	}

	// Token: 0x06000236 RID: 566 RVA: 0x00028F80 File Offset: 0x00028380
	internal unsafe static int MToUErrorExceptionInfo(RpcErrorExceptionInfo errorInfo, tagErrorExceptionInfo* pErrorExceptionInfo)
	{
		int num;
		if (pErrorExceptionInfo == null)
		{
			num = -2147024809;
		}
		else
		{
			<Module>.InitErrorExceptionInfo(pErrorExceptionInfo);
			if (errorInfo == null)
			{
				return 0;
			}
			*(int*)pErrorExceptionInfo = errorInfo.ErrorCode;
			num = <Module>.StringToUnmanaged(errorInfo.ErrorMessage, (ushort**)(pErrorExceptionInfo + 8L / (long)sizeof(tagErrorExceptionInfo)));
			if (num >= 0)
			{
				if (errorInfo.SerializedException == null || errorInfo.SerializedException.Length <= 0)
				{
					return num;
				}
				tagErrorExceptionInfo* ptr = pErrorExceptionInfo + 16L / (long)sizeof(tagErrorExceptionInfo);
				*(int*)ptr = errorInfo.SerializedException.Length;
				num = <Module>.GetUnmanagedBytes(errorInfo.SerializedException, (byte**)(pErrorExceptionInfo + 24L / (long)sizeof(tagErrorExceptionInfo)), (int*)ptr);
				if (num >= 0)
				{
					return num;
				}
			}
		}
		<Module>.FreeErrorExceptionInfo(pErrorExceptionInfo);
		return num;
	}

	// Token: 0x06000237 RID: 567 RVA: 0x00029000 File Offset: 0x00028400
	internal unsafe static RpcErrorExceptionInfo UToMErrorExceptionInfo(tagErrorExceptionInfo* pErrorInfo)
	{
		RpcErrorExceptionInfo rpcErrorExceptionInfo = new RpcErrorExceptionInfo();
		if (pErrorInfo == null)
		{
			return rpcErrorExceptionInfo;
		}
		rpcErrorExceptionInfo.ErrorCode = *pErrorInfo;
		rpcErrorExceptionInfo.ErrorMessage = <Module>.UToMString(*(pErrorInfo + 8L));
		uint num = (uint)(*(pErrorInfo + 16L));
		if (num > 0U)
		{
			ulong num2 = (ulong)(*(pErrorInfo + 24L));
			if (num2 != 0UL)
			{
				int num3 = (int)num;
				byte[] array = new byte[num3];
				if (num3 > 0)
				{
					Marshal.Copy((IntPtr)num2, array, 0, num3);
				}
				rpcErrorExceptionInfo.SerializedException = array;
			}
		}
		return rpcErrorExceptionInfo;
	}

	// Token: 0x06000238 RID: 568 RVA: 0x00028DA8 File Offset: 0x000281A8
	internal unsafe static byte[] MakeManagedBytes(byte* _pb, int _cb)
	{
		byte[] array = new byte[_cb];
		if (_cb > 0)
		{
			Marshal.Copy((IntPtr)((void*)_pb), array, 0, _cb);
		}
		return array;
	}

	// Token: 0x06000239 RID: 569 RVA: 0x00028DD0 File Offset: 0x000281D0
	internal unsafe static int GetUnmanagedBytes(byte[] bytes, byte** _ppb, int* _pcb)
	{
		*(long*)_ppb = 0L;
		*_pcb = 0;
		if (bytes != null)
		{
			int num = bytes.Length;
			if (num > 0)
			{
				int num2 = num;
				void* ptr = <Module>.MIDL_user_allocate((ulong)((long)num2));
				*(long*)_ppb = ptr;
				if (null == ptr)
				{
					return -2147024882;
				}
				*_pcb = num2;
				if (num2 > 0)
				{
					IntPtr destination = (IntPtr)(*(long*)_ppb);
					Marshal.Copy(bytes, 0, destination, num2);
				}
			}
		}
		return 0;
	}

	// Token: 0x0600023A RID: 570 RVA: 0x00028E20 File Offset: 0x00028220
	[return: MarshalAs(UnmanagedType.U1)]
	internal static bool StringEqual(string str1, string str2)
	{
		return (string.IsNullOrEmpty(str1) && string.IsNullOrEmpty(str2)) || str1 == str2;
	}

	// Token: 0x0600023B RID: 571 RVA: 0x00029568 File Offset: 0x00028968
	internal unsafe static int IpFilterAdd(void* hBinding, IPRangeData element, int* pIdentity)
	{
		IPFilterRpcServer ipfilterRpcServer = (IPFilterRpcServer)RpcServerBase.GetServerInstance(IPFilterRpcServer.RpcIntfHandle);
		IPFilterRange ipfilterRange = new IPFilterRange();
		ipfilterRange.SetLowerBound((ulong)(*(ref element + 8)), (ulong)(*(ref element + 16)));
		ipfilterRange.SetUpperBound((ulong)(*(ref element + 24)), (ulong)(*(ref element + 32)));
		ipfilterRange.Flags = *(ref element + 4);
		DateTime expiresOn = DateTime.FromFileTimeUtc(*(ref element + 40));
		ipfilterRange.ExpiresOn = expiresOn;
		if (*(ref element + 48) != 0L)
		{
			ipfilterRange.Comment = new string(*(ref element + 48));
		}
		*pIdentity = ipfilterRpcServer.Add(ipfilterRange);
		return 0;
	}

	// Token: 0x0600023C RID: 572 RVA: 0x000295F0 File Offset: 0x000289F0
	internal unsafe static int IpFilterRemove(void* hBinding, int identity, int filter, int* pCount)
	{
		IPFilterRpcServer ipfilterRpcServer = (IPFilterRpcServer)RpcServerBase.GetServerInstance(IPFilterRpcServer.RpcIntfHandle);
		*pCount = ipfilterRpcServer.Remove(identity, filter);
		return 0;
	}

	// Token: 0x0600023D RID: 573 RVA: 0x000296C0 File Offset: 0x00028AC0
	internal unsafe static int IpFilterGetItems(void* hBinding, int startIdentity, int flags, ExInt128 addressFilter, int celt, IPRangeData** rgElt, int* pceltFetched)
	{
		*(long*)rgElt = 0L;
		*pceltFetched = 0;
		IPFilterRange[] items = ((IPFilterRpcServer)RpcServerBase.GetServerInstance(IPFilterRpcServer.RpcIntfHandle)).GetItems(startIdentity, flags, addressFilter, (ulong)(*(ref addressFilter + 8)), celt);
		int num = items.Length;
		if (num > 0)
		{
			IPRangeData* ptr = <Module>.MIDL_user_allocate((ulong)((long)num * 56L));
			if (ptr == null)
			{
				return -2147024882;
			}
			int num2 = 0;
			if (0 < items.Length)
			{
				int num3;
				do
				{
					num3 = <Module>.?A0x084eb60f.Convert((long)num2 * 56L + ptr / sizeof(IPRangeData), items[num2]);
					if (num3 < 0)
					{
						goto IL_75;
					}
					num2++;
				}
				while (num2 < items.Length);
				goto IL_BF;
				IL_75:
				long num4 = (long)num2;
				long num5 = num4;
				if (num4 >= 0L)
				{
					IPRangeData* ptr2 = ptr + num4 * 56L / (long)sizeof(IPRangeData) + 48L / (long)sizeof(IPRangeData);
					do
					{
						ulong num6 = (ulong)(*(long*)ptr2);
						if (num6 != 0UL)
						{
							<Module>.MIDL_user_free(num6);
							*(long*)ptr2 = 0L;
						}
						num5 -= 1L;
						ptr2 -= 56L / (long)sizeof(IPRangeData);
					}
					while (num5 >= 0L);
				}
				<Module>.MIDL_user_free((void*)ptr);
				return num3;
			}
			IL_BF:
			*pceltFetched = items.Length;
			*(long*)rgElt = ptr;
		}
		return 0;
	}

	// Token: 0x0600023E RID: 574 RVA: 0x00029618 File Offset: 0x00028A18
	internal unsafe static int Convert(IPRangeData* destination, IPFilterRange source)
	{
		*(int*)destination = source.Identity;
		DateTime expiresOn = source.ExpiresOn;
		*(long*)(destination + 40L / (long)sizeof(IPRangeData)) = expiresOn.ToFileTimeUtc();
		source.GetLowerBound((ulong*)(destination + 8L / (long)sizeof(IPRangeData)), (ulong*)(destination + 16L / (long)sizeof(IPRangeData)));
		source.GetUpperBound((ulong*)(destination + 24L / (long)sizeof(IPRangeData)), (ulong*)(destination + 32L / (long)sizeof(IPRangeData)));
		*(int*)(destination + 4L / (long)sizeof(IPRangeData)) = source.Flags;
		int num = <Module>.StringToUnmanaged(source.Comment, (ushort**)(destination + 48L / (long)sizeof(IPRangeData)));
		return (num < 0) ? num : 0;
	}

	// Token: 0x0600023F RID: 575 RVA: 0x00029684 File Offset: 0x00028A84
	internal unsafe static void FreeRecord(IPRangeData* destination)
	{
		ulong num = (ulong)(*(long*)(destination + 48L / (long)sizeof(IPRangeData)));
		if (num != 0UL)
		{
			<Module>.MIDL_user_free(num);
			*(long*)(destination + 48L / (long)sizeof(IPRangeData)) = 0L;
		}
	}

	// Token: 0x06000240 RID: 576 RVA: 0x0002986C File Offset: 0x00028C6C
	internal unsafe static int EnqueueRequest(void* hBinding, int version, int type, int inputParameterLen, byte* pInputParameterBytes, int* pOutputParameterLen, byte** ppOutputParamterBytes)
	{
		JobQueueRpcServer jobQueueRpcServer = (JobQueueRpcServer)RpcServerBase.GetServerInstance(JobQueueRpcServer.RpcIntfHandle);
		byte[] inputParameterBytes = <Module>.UToMBytes(inputParameterLen, pInputParameterBytes);
		byte[] array = jobQueueRpcServer.EnqueueRequest(version, type, inputParameterBytes);
		if (array != null)
		{
			<Module>.MToUBytes(array, pOutputParameterLen, ppOutputParamterBytes);
		}
		return 0;
	}

	// Token: 0x06000241 RID: 577 RVA: 0x00029DA0 File Offset: 0x000291A0
	internal unsafe static int Search(void* hBinding, ushort* pLogName, int queryLen, byte* pQueryData, int continueInBackground, _GUID* pSessionId, int resultLimit, byte** ppResults, int* pResultSize, int* pMore, int* pProgress)
	{
		WindowsIdentity windowsIdentity = null;
		byte[] mByteArray = null;
		*pResultSize = 0;
		LogSearchRpcServer logSearchRpcServer = (LogSearchRpcServer)RpcServerBase.GetServerInstance(LogSearchRpcServer.RpcIntfHandle);
		string logName = Marshal.PtrToStringUni((IntPtr)((void*)pLogName));
		byte[] queryData = <Module>.UToMBytes(queryLen, pQueryData);
		Guid guid = default(Guid);
		windowsIdentity = null;
		if (<Module>.RpcImpersonateClient(null) != null)
		{
			return -2147024891;
		}
		try
		{
			int result;
			try
			{
				windowsIdentity = WindowsIdentity.GetCurrent();
				if (windowsIdentity == null)
				{
					return -2147024891;
				}
				goto IL_74;
			}
			catch (SecurityException)
			{
				result = -2147024891;
			}
			return result;
			IL_74:;
		}
		finally
		{
			<Module>.RpcRevertToSelf();
		}
		int num;
		bool flag;
		try
		{
			int errorCode;
			try
			{
				byte continueInBackground2 = (continueInBackground == 1) ? 1 : 0;
				mByteArray = logSearchRpcServer.Search(logName, queryData, continueInBackground2 != 0, resultLimit, ref num, ref guid, ref flag, ref *pProgress, windowsIdentity.Name);
			}
			catch (LogSearchException ex)
			{
				errorCode = ex.ErrorCode;
				goto IL_B3;
			}
			goto IL_C4;
			IL_B3:
			return errorCode;
		}
		finally
		{
			if (windowsIdentity != null)
			{
				((IDisposable)windowsIdentity).Dispose();
			}
		}
		IL_C4:
		int num2 = flag ? 1 : 0;
		*pMore = num2;
		_GUID guid2 = <Module>.ToGUID(ref guid);
		cpblk(pSessionId, ref guid2, 16);
		*pResultSize = num;
		return <Module>.MToUBytesN(mByteArray, num, ppResults);
	}

	// Token: 0x06000242 RID: 578 RVA: 0x00029F0C File Offset: 0x0002930C
	internal unsafe static int SearchExtensibleSchema(void* hBinding, ushort* pClientVersion, ushort* pLogName, int queryLen, byte* pQueryData, int continueInBackground, _GUID* pSessionId, int resultLimit, byte** ppResults, int* pResultSize, int* pMore, int* pProgress)
	{
		WindowsIdentity windowsIdentity = null;
		byte[] mByteArray = null;
		*pResultSize = 0;
		LogSearchRpcServer logSearchRpcServer = (LogSearchRpcServer)RpcServerBase.GetServerInstance(LogSearchRpcServer.RpcIntfHandle);
		string logName = Marshal.PtrToStringUni((IntPtr)((void*)pLogName));
		string clientVersion = Marshal.PtrToStringUni((IntPtr)((void*)pClientVersion));
		byte[] queryData = <Module>.UToMBytes(queryLen, pQueryData);
		Guid guid = default(Guid);
		windowsIdentity = null;
		if (<Module>.RpcImpersonateClient(null) != null)
		{
			return -2147024891;
		}
		try
		{
			int result;
			try
			{
				windowsIdentity = WindowsIdentity.GetCurrent();
				if (windowsIdentity == null)
				{
					return -2147024891;
				}
				goto IL_82;
			}
			catch (SecurityException)
			{
				result = -2147024891;
			}
			return result;
			IL_82:;
		}
		finally
		{
			<Module>.RpcRevertToSelf();
		}
		int num;
		bool flag;
		try
		{
			int errorCode;
			try
			{
				byte continueInBackground2 = (continueInBackground == 1) ? 1 : 0;
				mByteArray = logSearchRpcServer.SearchExtensibleSchema(clientVersion, logName, queryData, continueInBackground2 != 0, resultLimit, ref num, ref guid, ref flag, ref *pProgress, windowsIdentity.Name);
			}
			catch (LogSearchException ex)
			{
				errorCode = ex.ErrorCode;
				goto IL_C3;
			}
			goto IL_D4;
			IL_C3:
			return errorCode;
		}
		finally
		{
			if (windowsIdentity != null)
			{
				((IDisposable)windowsIdentity).Dispose();
			}
		}
		IL_D4:
		int num2 = flag ? 1 : 0;
		*pMore = num2;
		_GUID guid2 = <Module>.ToGUID(ref guid);
		cpblk(pSessionId, ref guid2, 16);
		*pResultSize = num;
		return <Module>.MToUBytesN(mByteArray, num, ppResults);
	}

	// Token: 0x06000243 RID: 579 RVA: 0x0002A088 File Offset: 0x00029488
	internal unsafe static int Continue(void* hBinding, _GUID sessionId, int continueInBackground, int resultLimit, byte** ppResults, int* pResultSize, int* pMore, int* pProgress)
	{
		byte[] mByteArray = null;
		*pResultSize = 0;
		LogSearchRpcServer logSearchRpcServer = (LogSearchRpcServer)RpcServerBase.GetServerInstance(LogSearchRpcServer.RpcIntfHandle);
		int num;
		bool flag;
		try
		{
			byte continueInBackground2 = (continueInBackground == 1) ? 1 : 0;
			Guid sessionId2 = <Module>.FromGUID(ref sessionId);
			mByteArray = logSearchRpcServer.Continue(sessionId2, continueInBackground2 != 0, resultLimit, ref num, ref flag, ref *pProgress);
		}
		catch (LogSearchException ex)
		{
			return ex.ErrorCode;
		}
		int num2 = flag ? 1 : 0;
		*pMore = num2;
		*pResultSize = num;
		return <Module>.MToUBytesN(mByteArray, num, ppResults);
	}

	// Token: 0x06000244 RID: 580 RVA: 0x0002A118 File Offset: 0x00029518
	internal unsafe static int Cancel(void* hBinding, _GUID sessionId)
	{
		LogSearchRpcServer logSearchRpcServer = (LogSearchRpcServer)RpcServerBase.GetServerInstance(LogSearchRpcServer.RpcIntfHandle);
		try
		{
			Guid sessionId2 = <Module>.FromGUID(ref sessionId);
			logSearchRpcServer.Cancel(sessionId2);
		}
		catch (LogSearchException ex)
		{
			return ex.ErrorCode;
		}
		return 0;
	}

	// Token: 0x06000245 RID: 581 RVA: 0x0002A668 File Offset: 0x00029A68
	internal unsafe static void FreeStringSafe(ushort* str)
	{
		if (str != null)
		{
			<Module>.FreeString(str);
		}
	}

	// Token: 0x06000246 RID: 582 RVA: 0x0002A680 File Offset: 0x00029A80
	internal unsafe static void InitRpcSearchId(__MIDL_IMailboxSearch_0001* rpcSearchId)
	{
		if (rpcSearchId != null)
		{
			*(long*)rpcSearchId = 0L;
			initblk(rpcSearchId + 8L / (long)sizeof(__MIDL_IMailboxSearch_0001), 0, 16L);
			*(long*)(rpcSearchId + 24L / (long)sizeof(__MIDL_IMailboxSearch_0001)) = 0L;
		}
	}

	// Token: 0x06000247 RID: 583 RVA: 0x0002A6AC File Offset: 0x00029AAC
	internal unsafe static void FreeRpcSearchId(__MIDL_IMailboxSearch_0001* rpcSearchId)
	{
		if (rpcSearchId != null)
		{
			ushort* ptr = *(long*)rpcSearchId;
			if (ptr != null)
			{
				<Module>.FreeString(ptr);
			}
			*(long*)rpcSearchId = 0L;
			initblk(rpcSearchId + 8L / (long)sizeof(__MIDL_IMailboxSearch_0001), 0, 16L);
			ushort* ptr2 = *(long*)(rpcSearchId + 24L / (long)sizeof(__MIDL_IMailboxSearch_0001));
			if (ptr2 != null)
			{
				<Module>.FreeString(ptr2);
			}
			*(long*)(rpcSearchId + 24L / (long)sizeof(__MIDL_IMailboxSearch_0001)) = 0L;
		}
	}

	// Token: 0x06000248 RID: 584 RVA: 0x0002A6F4 File Offset: 0x00029AF4
	internal unsafe static SearchId UToMSearchId(__MIDL_IMailboxSearch_0001* rpcSearchId)
	{
		Guid mailboxGuid = <Module>.FromGUID(rpcSearchId + 8L / (long)sizeof(__MIDL_IMailboxSearch_0001));
		return new SearchId(<Module>.UToMString(*(long*)rpcSearchId), mailboxGuid, <Module>.UToMString(*(long*)(rpcSearchId + 24L / (long)sizeof(__MIDL_IMailboxSearch_0001))));
	}

	// Token: 0x06000249 RID: 585 RVA: 0x0002A724 File Offset: 0x00029B24
	internal unsafe static int MToUSearchId(SearchId searchId, __MIDL_IMailboxSearch_0001* rpcSearchId)
	{
		if (searchId != null && rpcSearchId != null)
		{
			int num;
			if (!string.IsNullOrEmpty(searchId.MailboxDsName))
			{
				num = <Module>.StringToUnmanaged(searchId.MailboxDsName, (ushort**)rpcSearchId);
				if (num < 0)
				{
					goto IL_62;
				}
			}
			Guid mailboxGuid = searchId.MailboxGuid;
			_GUID guid = <Module>.ToGUID(ref mailboxGuid);
			cpblk(rpcSearchId + 8L / (long)sizeof(__MIDL_IMailboxSearch_0001), ref guid, 16);
			if (!string.IsNullOrEmpty(searchId.SearchName))
			{
				num = <Module>.StringToUnmanaged(searchId.SearchName, (ushort**)(rpcSearchId + 24L / (long)sizeof(__MIDL_IMailboxSearch_0001)));
				if (num < 0)
				{
					goto IL_62;
				}
			}
			return 0;
			IL_62:
			<Module>.FreeRpcSearchId(rpcSearchId);
			return num;
		}
		return -2147024809;
	}

	// Token: 0x0600024A RID: 586 RVA: 0x0002A7A4 File Offset: 0x00029BA4
	internal unsafe static void InitRpcErrorInfo(__MIDL_IMailboxSearch_0003* rpcErrorInfo)
	{
		if (rpcErrorInfo != null)
		{
			*(int*)rpcErrorInfo = 0;
			*(long*)(rpcErrorInfo + 8L / (long)sizeof(__MIDL_IMailboxSearch_0003)) = 0L;
		}
	}

	// Token: 0x0600024B RID: 587 RVA: 0x0002A7C0 File Offset: 0x00029BC0
	internal unsafe static void FreeRpcErrorInfo(__MIDL_IMailboxSearch_0003* rpcErrorInfo)
	{
		if (rpcErrorInfo != null)
		{
			ushort* ptr = *(long*)(rpcErrorInfo + 8L / (long)sizeof(__MIDL_IMailboxSearch_0003));
			if (ptr != null)
			{
				<Module>.FreeString(ptr);
			}
			*(long*)(rpcErrorInfo + 8L / (long)sizeof(__MIDL_IMailboxSearch_0003)) = 0L;
		}
	}

	// Token: 0x0600024C RID: 588 RVA: 0x0002A7E8 File Offset: 0x00029BE8
	internal unsafe static SearchErrorInfo UToMErrorInfo(__MIDL_IMailboxSearch_0003* rpcErrorInfo)
	{
		return new SearchErrorInfo(*(int*)rpcErrorInfo, <Module>.UToMString(*(long*)(rpcErrorInfo + 8L / (long)sizeof(__MIDL_IMailboxSearch_0003))));
	}

	// Token: 0x0600024D RID: 589 RVA: 0x0002A808 File Offset: 0x00029C08
	internal unsafe static int MToUErrorInfo(SearchErrorInfo errorInfo, __MIDL_IMailboxSearch_0003* rpcErrorInfo)
	{
		if (errorInfo != null && rpcErrorInfo != null)
		{
			*(int*)rpcErrorInfo = errorInfo.ErrorCode;
			if (!string.IsNullOrEmpty(errorInfo.Message))
			{
				__MIDL_IMailboxSearch_0003* ptr = rpcErrorInfo + 8L / (long)sizeof(__MIDL_IMailboxSearch_0003);
				int num = <Module>.StringToUnmanaged(errorInfo.Message, (ushort**)ptr);
				if (num < 0)
				{
					ushort* ptr2 = *(long*)ptr;
					if (ptr2 != null)
					{
						<Module>.FreeString(ptr2);
					}
					*(long*)ptr = 0L;
					return num;
				}
			}
			return 0;
		}
		return -2147024809;
	}

	// Token: 0x0600024E RID: 590 RVA: 0x0002A860 File Offset: 0x00029C60
	internal unsafe static void InitRpcSearchStatus(__MIDL_IMailboxSearch_0002* rpcSearchStatus)
	{
		if (rpcSearchStatus != null)
		{
			*(long*)rpcSearchStatus = 0L;
			*(long*)(rpcSearchStatus + 8L / (long)sizeof(__MIDL_IMailboxSearch_0002)) = 0L;
			*(int*)(rpcSearchStatus + 16L / (long)sizeof(__MIDL_IMailboxSearch_0002)) = 0;
			*(int*)(rpcSearchStatus + 20L / (long)sizeof(__MIDL_IMailboxSearch_0002)) = 0;
			*(long*)(rpcSearchStatus + 24L / (long)sizeof(__MIDL_IMailboxSearch_0002)) = 0L;
			*(long*)(rpcSearchStatus + 32L / (long)sizeof(__MIDL_IMailboxSearch_0002)) = 0L;
			*(long*)(rpcSearchStatus + 40L / (long)sizeof(__MIDL_IMailboxSearch_0002)) = 0L;
			*(long*)(rpcSearchStatus + 48L / (long)sizeof(__MIDL_IMailboxSearch_0002)) = 0L;
			*(long*)(rpcSearchStatus + 56L / (long)sizeof(__MIDL_IMailboxSearch_0002)) = 0L;
		}
	}

	// Token: 0x0600024F RID: 591 RVA: 0x0002A8B4 File Offset: 0x00029CB4
	internal unsafe static void FreeRpcSearchStatus(__MIDL_IMailboxSearch_0002* rpcSearchStatus)
	{
		if (rpcSearchStatus != null)
		{
			ushort* ptr = *(long*)rpcSearchStatus;
			if (ptr != null)
			{
				<Module>.FreeString(ptr);
			}
			ushort* ptr2 = *(long*)(rpcSearchStatus + 8L / (long)sizeof(__MIDL_IMailboxSearch_0002));
			if (ptr2 != null)
			{
				<Module>.FreeString(ptr2);
			}
			ushort* ptr3 = *(long*)(rpcSearchStatus + 56L / (long)sizeof(__MIDL_IMailboxSearch_0002));
			if (ptr3 != null)
			{
				<Module>.FreeString(ptr3);
			}
			*(long*)rpcSearchStatus = 0L;
			*(long*)(rpcSearchStatus + 8L / (long)sizeof(__MIDL_IMailboxSearch_0002)) = 0L;
			*(long*)(rpcSearchStatus + 56L / (long)sizeof(__MIDL_IMailboxSearch_0002)) = 0L;
		}
	}

	// Token: 0x06000250 RID: 592 RVA: 0x0002A904 File Offset: 0x00029D04
	internal unsafe static SearchStatus UToMSearchStatus(__MIDL_IMailboxSearch_0002* rpcSearchStatus)
	{
		return new SearchStatus(<Module>.UToMString(*(long*)rpcSearchStatus), <Module>.UToMString(*(long*)(rpcSearchStatus + 8L / (long)sizeof(__MIDL_IMailboxSearch_0002))), *(int*)(rpcSearchStatus + 16L / (long)sizeof(__MIDL_IMailboxSearch_0002)), *(int*)(rpcSearchStatus + 20L / (long)sizeof(__MIDL_IMailboxSearch_0002)), *(long*)(rpcSearchStatus + 24L / (long)sizeof(__MIDL_IMailboxSearch_0002)), (ulong)(*(long*)(rpcSearchStatus + 32L / (long)sizeof(__MIDL_IMailboxSearch_0002))), *(long*)(rpcSearchStatus + 40L / (long)sizeof(__MIDL_IMailboxSearch_0002)), (ulong)(*(long*)(rpcSearchStatus + 48L / (long)sizeof(__MIDL_IMailboxSearch_0002))), <Module>.UToMString(*(long*)(rpcSearchStatus + 56L / (long)sizeof(__MIDL_IMailboxSearch_0002))));
	}

	// Token: 0x06000251 RID: 593 RVA: 0x0002A958 File Offset: 0x00029D58
	internal unsafe static int MToUSearchStatus(SearchStatus searchStatus, __MIDL_IMailboxSearch_0002* rpcSearchStatus)
	{
		if (searchStatus != null && rpcSearchStatus != null)
		{
			int num;
			if (!string.IsNullOrEmpty(searchStatus.SearchId))
			{
				num = <Module>.StringToUnmanaged(searchStatus.SearchId, (ushort**)rpcSearchStatus);
				if (num < 0)
				{
					goto IL_B8;
				}
			}
			if (!string.IsNullOrEmpty(searchStatus.Owner))
			{
				num = <Module>.StringToUnmanaged(searchStatus.Owner, (ushort**)(rpcSearchStatus + 8L / (long)sizeof(__MIDL_IMailboxSearch_0002)));
				if (num < 0)
				{
					goto IL_B8;
				}
			}
			*(int*)(rpcSearchStatus + 16L / (long)sizeof(__MIDL_IMailboxSearch_0002)) = searchStatus.Status;
			*(int*)(rpcSearchStatus + 20L / (long)sizeof(__MIDL_IMailboxSearch_0002)) = searchStatus.PercentCompleted;
			*(long*)(rpcSearchStatus + 24L / (long)sizeof(__MIDL_IMailboxSearch_0002)) = searchStatus.EstimateResultItems;
			*(long*)(rpcSearchStatus + 32L / (long)sizeof(__MIDL_IMailboxSearch_0002)) = (long)searchStatus.EstimateResultSize;
			*(long*)(rpcSearchStatus + 40L / (long)sizeof(__MIDL_IMailboxSearch_0002)) = searchStatus.ResultItems;
			*(long*)(rpcSearchStatus + 48L / (long)sizeof(__MIDL_IMailboxSearch_0002)) = (long)searchStatus.ResultSize;
			if (!string.IsNullOrEmpty(searchStatus.ResultLink))
			{
				num = <Module>.StringToUnmanaged(searchStatus.ResultLink, (ushort**)(rpcSearchStatus + 56L / (long)sizeof(__MIDL_IMailboxSearch_0002)));
				if (num < 0)
				{
					goto IL_B8;
				}
			}
			return 0;
			IL_B8:
			<Module>.FreeRpcSearchStatus(rpcSearchStatus);
			return num;
		}
		return -2147024809;
	}

	// Token: 0x06000252 RID: 594 RVA: 0x0002B104 File Offset: 0x0002A504
	internal unsafe static int Start(void* hBinding, __MIDL_IMailboxSearch_0001* rpcSearchId, _GUID ownerGuid, __MIDL_IMailboxSearch_0003* rpcErrorInfo)
	{
		MailboxSearchRpcServer mailboxSearchRpcServer = (MailboxSearchRpcServer)RpcServerBase.GetServerInstance(MailboxSearchRpcServer.RpcIntfHandle);
		try
		{
			<Module>.InitRpcErrorInfo(rpcErrorInfo);
			Guid ownerGuid2 = <Module>.FromGUID(ref ownerGuid);
			SearchErrorInfo searchErrorInfo = mailboxSearchRpcServer.Start(<Module>.UToMSearchId(rpcSearchId), ownerGuid2);
			if (searchErrorInfo != null)
			{
				return <Module>.MToUErrorInfo(searchErrorInfo, rpcErrorInfo);
			}
		}
		finally
		{
		}
		return 0;
	}

	// Token: 0x06000253 RID: 595 RVA: 0x0002B16C File Offset: 0x0002A56C
	internal unsafe static int GetStatus(void* hBinding, __MIDL_IMailboxSearch_0001* rpcSearchId, __MIDL_IMailboxSearch_0002* rpcSearchStatus, __MIDL_IMailboxSearch_0003* rpcErrorInfo)
	{
		SearchStatus searchStatus = null;
		MailboxSearchRpcServer mailboxSearchRpcServer = (MailboxSearchRpcServer)RpcServerBase.GetServerInstance(MailboxSearchRpcServer.RpcIntfHandle);
		int num = 0;
		try
		{
			<Module>.InitRpcErrorInfo(rpcErrorInfo);
			searchStatus = null;
			SearchErrorInfo status = mailboxSearchRpcServer.GetStatus(<Module>.UToMSearchId(rpcSearchId), out searchStatus);
			if (status != null)
			{
				num = <Module>.MToUErrorInfo(status, rpcErrorInfo);
				if (num < 0)
				{
					goto IL_56;
				}
				if (!status.Succeeded)
				{
					goto IL_51;
				}
			}
			if (searchStatus != null)
			{
				num = <Module>.MToUSearchStatus(searchStatus, rpcSearchStatus);
			}
			IL_51:
			return num;
		}
		finally
		{
		}
		IL_56:
		<Module>.FreeRpcErrorInfo(rpcErrorInfo);
		<Module>.FreeRpcSearchStatus(rpcSearchStatus);
		return num;
	}

	// Token: 0x06000254 RID: 596 RVA: 0x0002B1FC File Offset: 0x0002A5FC
	internal unsafe static int Abort(void* hBinding, __MIDL_IMailboxSearch_0001* rpcSearchId, _GUID userGuid, __MIDL_IMailboxSearch_0003* rpcErrorInfo)
	{
		MailboxSearchRpcServer mailboxSearchRpcServer = (MailboxSearchRpcServer)RpcServerBase.GetServerInstance(MailboxSearchRpcServer.RpcIntfHandle);
		try
		{
			<Module>.InitRpcErrorInfo(rpcErrorInfo);
			Guid userGuid2 = <Module>.FromGUID(ref userGuid);
			SearchErrorInfo searchErrorInfo = mailboxSearchRpcServer.Abort(<Module>.UToMSearchId(rpcSearchId), userGuid2);
			if (searchErrorInfo != null)
			{
				return <Module>.MToUErrorInfo(searchErrorInfo, rpcErrorInfo);
			}
		}
		finally
		{
		}
		return 0;
	}

	// Token: 0x06000255 RID: 597 RVA: 0x0002B264 File Offset: 0x0002A664
	internal unsafe static int Remove(void* hBinding, __MIDL_IMailboxSearch_0001* rpcSearchId, int removeLogs, __MIDL_IMailboxSearch_0003* rpcErrorInfo)
	{
		MailboxSearchRpcServer mailboxSearchRpcServer = (MailboxSearchRpcServer)RpcServerBase.GetServerInstance(MailboxSearchRpcServer.RpcIntfHandle);
		try
		{
			<Module>.InitRpcErrorInfo(rpcErrorInfo);
			bool removeLogs2 = removeLogs != 0;
			SearchErrorInfo searchErrorInfo = mailboxSearchRpcServer.Remove(<Module>.UToMSearchId(rpcSearchId), removeLogs2);
			if (searchErrorInfo != null)
			{
				return <Module>.MToUErrorInfo(searchErrorInfo, rpcErrorInfo);
			}
		}
		finally
		{
		}
		return 0;
	}

	// Token: 0x06000256 RID: 598 RVA: 0x0002B2D0 File Offset: 0x0002A6D0
	internal unsafe static int StartEx(void* hBinding, __MIDL_IMailboxSearch_0001* rpcSearchId, ushort* ownerId, __MIDL_IMailboxSearch_0003* rpcErrorInfo)
	{
		MailboxSearchRpcServer mailboxSearchRpcServer = (MailboxSearchRpcServer)RpcServerBase.GetServerInstance(MailboxSearchRpcServer.RpcIntfHandle);
		try
		{
			<Module>.InitRpcErrorInfo(rpcErrorInfo);
			SearchErrorInfo searchErrorInfo = mailboxSearchRpcServer.StartEx(<Module>.UToMSearchId(rpcSearchId), <Module>.UToMString(ownerId));
			if (searchErrorInfo != null)
			{
				return <Module>.MToUErrorInfo(searchErrorInfo, rpcErrorInfo);
			}
		}
		finally
		{
		}
		return 0;
	}

	// Token: 0x06000257 RID: 599 RVA: 0x0002B338 File Offset: 0x0002A738
	internal unsafe static int AbortEx(void* hBinding, __MIDL_IMailboxSearch_0001* rpcSearchId, ushort* userId, __MIDL_IMailboxSearch_0003* rpcErrorInfo)
	{
		MailboxSearchRpcServer mailboxSearchRpcServer = (MailboxSearchRpcServer)RpcServerBase.GetServerInstance(MailboxSearchRpcServer.RpcIntfHandle);
		try
		{
			<Module>.InitRpcErrorInfo(rpcErrorInfo);
			SearchErrorInfo searchErrorInfo = mailboxSearchRpcServer.AbortEx(<Module>.UToMSearchId(rpcSearchId), <Module>.UToMString(userId));
			if (searchErrorInfo != null)
			{
				return <Module>.MToUErrorInfo(searchErrorInfo, rpcErrorInfo);
			}
		}
		finally
		{
		}
		return 0;
	}

	// Token: 0x06000258 RID: 600 RVA: 0x0002B3A0 File Offset: 0x0002A7A0
	internal unsafe static int UpdateStatus(void* hBinding, __MIDL_IMailboxSearch_0001* rpcSearchId, __MIDL_IMailboxSearch_0003* rpcErrorInfo)
	{
		MailboxSearchRpcServer mailboxSearchRpcServer = (MailboxSearchRpcServer)RpcServerBase.GetServerInstance(MailboxSearchRpcServer.RpcIntfHandle);
		try
		{
			<Module>.InitRpcErrorInfo(rpcErrorInfo);
			SearchErrorInfo searchErrorInfo = mailboxSearchRpcServer.UpdateStatus(<Module>.UToMSearchId(rpcSearchId));
			if (searchErrorInfo != null)
			{
				return <Module>.MToUErrorInfo(searchErrorInfo, rpcErrorInfo);
			}
		}
		finally
		{
		}
		return 0;
	}

	// Token: 0x06000259 RID: 601 RVA: 0x0002B56C File Offset: 0x0002A96C
	internal unsafe static void IntiailizeMailInfo(_Mail_Info* mailInfo)
	{
		*(long*)mailInfo = 0L;
		*(long*)(mailInfo + 24L / (long)sizeof(_Mail_Info)) = 0L;
		*(long*)(mailInfo + 8L / (long)sizeof(_Mail_Info)) = 0L;
		*(long*)(mailInfo + 16L / (long)sizeof(_Mail_Info)) = 0L;
	}

	// Token: 0x0600025A RID: 602 RVA: 0x0002B5AC File Offset: 0x0002A9AC
	[return: MarshalAs(UnmanagedType.U1)]
	internal unsafe static bool Retry(RpcRetryState* A_0, int rpc_status)
	{
		bool result = false;
		if (rpc_status != 5)
		{
			if ((rpc_status == 1723 || rpc_status == 1727) && *(A_0 + 4L) < 6)
			{
				<Module>.Sleep(250);
				*(A_0 + 4L) = *(A_0 + 4L) + 1;
				result = true;
			}
		}
		else
		{
			int num = *A_0;
			if (num < 1)
			{
				*A_0 = num + 1;
				result = true;
			}
		}
		return result;
	}

	// Token: 0x0600025B RID: 603 RVA: 0x0002B594 File Offset: 0x0002A994
	internal unsafe static RpcRetryState* {ctor}(RpcRetryState* A_0)
	{
		*A_0 = 0;
		*(A_0 + 4L) = 0;
		return A_0;
	}

	// Token: 0x0600025C RID: 604 RVA: 0x0002C230 File Offset: 0x0002B630
	internal unsafe static tagSubmissionStatus SubmitMessage(void* hBinding, ushort* wszMessageClass, ushort* wszServerDN, ushort* wszServerSADN, int mailboxGuidLen, byte* pMailboxGuidBytes, int entryIdLen, byte* pEntryIdBytes, int parentEntryIdLen, byte* pParentEntryIdBytes, int mdbGuidLen, byte* pMdbGuidBytes, int eventCounter, int ipAddressLen, byte* pIpAddressBytes)
	{
		MailSubmissionServiceRpcServer mailSubmissionServiceRpcServer = (MailSubmissionServiceRpcServer)RpcServerBase.GetServerInstance(MailSubmissionServiceRpcServer.RpcIntfHandle);
		byte[] sdLocalSystemBinaryForm = mailSubmissionServiceRpcServer.m_sdLocalSystemBinaryForm;
		if (sdLocalSystemBinaryForm == null)
		{
			return (tagSubmissionStatus)3;
		}
		if (RpcServerBase.CheckObjectSecurity(sdLocalSystemBinaryForm, 1, hBinding) != null)
		{
			return (tagSubmissionStatus)3;
		}
		IntPtr uPtrData = new IntPtr((void*)pMailboxGuidBytes);
		byte[] mailboxGuid = <Module>.UToMBytes(mailboxGuidLen, uPtrData);
		IntPtr uPtrData2 = new IntPtr((void*)pEntryIdBytes);
		byte[] entryId = <Module>.UToMBytes(entryIdLen, uPtrData2);
		IntPtr uPtrData3 = new IntPtr((void*)pParentEntryIdBytes);
		byte[] parentEntryId = <Module>.UToMBytes(parentEntryIdLen, uPtrData3);
		IntPtr uPtrData4 = new IntPtr((void*)pMdbGuidBytes);
		byte[] mdbGuid = <Module>.UToMBytes(mdbGuidLen, uPtrData4);
		IntPtr uPtrData5 = new IntPtr((void*)pIpAddressBytes);
		byte[] ipAddress = <Module>.UToMBytes(ipAddressLen, uPtrData5);
		ushort* ptr = wszMessageClass;
		if (*(short*)wszMessageClass != 0)
		{
			do
			{
				ptr += 2L / 2L;
			}
			while (*(short*)ptr != 0);
		}
		string messageClass = new string((char*)wszMessageClass, 0, (int)(ptr - wszMessageClass >> 1));
		ushort* ptr2 = wszServerDN;
		if (*(short*)wszServerDN != 0)
		{
			do
			{
				ptr2 += 2L / 2L;
			}
			while (*(short*)ptr2 != 0);
		}
		string serverDN = new string((char*)wszServerDN, 0, (int)(ptr2 - wszServerDN >> 1));
		ushort* ptr3 = wszServerSADN;
		if (*(short*)wszServerSADN != 0)
		{
			do
			{
				ptr3 += 2L / 2L;
			}
			while (*(short*)ptr3 != 0);
		}
		string serverSADN = new string((char*)wszServerSADN, 0, (int)(ptr3 - wszServerSADN >> 1));
		return (tagSubmissionStatus)mailSubmissionServiceRpcServer.SubmitMessage(messageClass, serverDN, serverSADN, mailboxGuid, entryId, parentEntryId, mdbGuid, eventCounter, ipAddress);
	}

	// Token: 0x0600025D RID: 605 RVA: 0x0002C350 File Offset: 0x0002B750
	internal unsafe static int SubmitMessage2(void* hBinding, ushort* wszServerDN, _GUID mailboxGuid, _GUID mdbGuid, int eventCounter, int entryIdLen, byte* pEntryIdBytes, int parentEntryIdLen, byte* pParentEntryIdBytes, ushort* wszServerFQDN, int ipAddressLen, byte* pIpAddressBytes, _Mail_Info* mailInfo)
	{
		MailSubmissionServiceRpcServer mailSubmissionServiceRpcServer = (MailSubmissionServiceRpcServer)RpcServerBase.GetServerInstance(MailSubmissionServiceRpcServer.RpcIntfHandle);
		byte[] sdLocalSystemBinaryForm = mailSubmissionServiceRpcServer.m_sdLocalSystemBinaryForm;
		if (sdLocalSystemBinaryForm == null)
		{
			return 3;
		}
		if (RpcServerBase.CheckObjectSecurity(sdLocalSystemBinaryForm, 1, hBinding) != null)
		{
			return 3;
		}
		IntPtr uPtrData = new IntPtr((void*)pEntryIdBytes);
		byte[] entryId = <Module>.UToMBytes(entryIdLen, uPtrData);
		IntPtr uPtrData2 = new IntPtr((void*)pParentEntryIdBytes);
		byte[] parentEntryId = <Module>.UToMBytes(parentEntryIdLen, uPtrData2);
		IntPtr uPtrData3 = new IntPtr((void*)pIpAddressBytes);
		byte[] ipAddress = <Module>.UToMBytes(ipAddressLen, uPtrData3);
		ushort* ptr = wszServerDN;
		if (*(short*)wszServerDN != 0)
		{
			do
			{
				ptr += 2L / 2L;
			}
			while (*(short*)ptr != 0);
		}
		string serverDN = new string((char*)wszServerDN, 0, (int)(ptr - wszServerDN >> 1));
		ushort* ptr2 = wszServerFQDN;
		if (*(short*)wszServerFQDN != 0)
		{
			do
			{
				ptr2 += 2L / 2L;
			}
			while (*(short*)ptr2 != 0);
		}
		string serverFQDN = new string((char*)wszServerFQDN, 0, (int)(ptr2 - wszServerFQDN >> 1));
		Guid mdbGuid2 = <Module>.FromGUID(ref mdbGuid);
		Guid mailboxGuid2 = <Module>.FromGUID(ref mailboxGuid);
		MailSubmissionResult mailSubmissionResult = mailSubmissionServiceRpcServer.SubmitMessage2(serverDN, mailboxGuid2, mdbGuid2, eventCounter, entryId, parentEntryId, serverFQDN, ipAddress);
		*(long*)mailInfo = <Module>.StringToUnmanaged(mailSubmissionResult.Sender);
		*(long*)(mailInfo + 8L / (long)sizeof(_Mail_Info)) = <Module>.StringToUnmanaged(mailSubmissionResult.MessageId);
		*(long*)(mailInfo + 16L / (long)sizeof(_Mail_Info)) = <Module>.StringToUnmanaged(mailSubmissionResult.Subject);
		*(long*)(mailInfo + 24L / (long)sizeof(_Mail_Info)) = <Module>.StringToUnmanaged(mailSubmissionResult.DiagnosticInfo);
		return mailSubmissionResult.ErrorCode;
	}

	// Token: 0x0600025E RID: 606 RVA: 0x0002C484 File Offset: 0x0002B884
	internal unsafe static tagSubmissionStatus SubmitDumpsterMessages(void* hBinding, ushort* wszStorageGroupDN, long startTime, long endTime)
	{
		MailSubmissionServiceRpcServer mailSubmissionServiceRpcServer = (MailSubmissionServiceRpcServer)RpcServerBase.GetServerInstance(MailSubmissionServiceRpcServer.RpcIntfHandle);
		byte[] sdLocalSystemBinaryForm = mailSubmissionServiceRpcServer.m_sdLocalSystemBinaryForm;
		if (sdLocalSystemBinaryForm == null)
		{
			return (tagSubmissionStatus)3;
		}
		if (RpcServerBase.CheckObjectSecurity(sdLocalSystemBinaryForm, 1, hBinding) != null)
		{
			return (tagSubmissionStatus)3;
		}
		ushort* ptr = wszStorageGroupDN;
		if (*(short*)wszStorageGroupDN != 0)
		{
			do
			{
				ptr += 2L / 2L;
			}
			while (*(short*)ptr != 0);
		}
		string storageGroupDN = new string((char*)wszStorageGroupDN, 0, (int)(ptr - wszStorageGroupDN >> 1));
		return (tagSubmissionStatus)mailSubmissionServiceRpcServer.SubmitDumpsterMessages(storageGroupDN, startTime, endTime);
	}

	// Token: 0x0600025F RID: 607 RVA: 0x0002C4E8 File Offset: 0x0002B8E8
	internal unsafe static tagAddResubmitRequestStatus AddMdbResubmitRequest(void* hBinding, _GUID requestGuid, _GUID mdbGuid, long startTime, long endTime, int unresponsivePrimaryServersLen, ushort** ppUnresponsivePrimaryServers, int reservedBytesLen, byte* pReservedBytes)
	{
		MailSubmissionServiceRpcServer mailSubmissionServiceRpcServer = (MailSubmissionServiceRpcServer)RpcServerBase.GetServerInstance(MailSubmissionServiceRpcServer.RpcIntfHandle);
		byte[] sdLocalSystemBinaryForm = mailSubmissionServiceRpcServer.m_sdLocalSystemBinaryForm;
		if (sdLocalSystemBinaryForm == null)
		{
			return (tagAddResubmitRequestStatus)4;
		}
		if (RpcServerBase.CheckObjectSecurity(sdLocalSystemBinaryForm, 1, hBinding) != null)
		{
			return (tagAddResubmitRequestStatus)4;
		}
		string[] array = new string[unresponsivePrimaryServersLen];
		int num = 0;
		if (0 < unresponsivePrimaryServersLen)
		{
			ushort** ptr = ppUnresponsivePrimaryServers;
			do
			{
				ulong num2 = (ulong)(*(long*)ptr);
				string text;
				if (num2 != 0UL)
				{
					IntPtr ptr2 = new IntPtr(num2);
					text = Marshal.PtrToStringUni(ptr2);
				}
				else
				{
					text = string.Empty;
				}
				array[num] = text;
				num++;
				ptr += 8L / (long)sizeof(ushort*);
			}
			while (num < unresponsivePrimaryServersLen);
		}
		IntPtr uPtrData = new IntPtr((void*)pReservedBytes);
		byte[] reservedBytes = <Module>.UToMBytes(reservedBytesLen, uPtrData);
		Guid mdbGuid2 = <Module>.FromGUID(ref mdbGuid);
		Guid requestGuid2 = <Module>.FromGUID(ref requestGuid);
		return (tagAddResubmitRequestStatus)mailSubmissionServiceRpcServer.AddMdbResubmitRequest(requestGuid2, mdbGuid2, startTime, endTime, array, reservedBytes);
	}

	// Token: 0x06000260 RID: 608 RVA: 0x0002C5A0 File Offset: 0x0002B9A0
	internal unsafe static int QueryDumpsterStats(void* hBinding, ushort* wszStorageGroupDN, long* pTicksOfOldestDeliveryTime, long* pQueueSize, int* pNumberOfItems)
	{
		MailSubmissionServiceRpcServer mailSubmissionServiceRpcServer = (MailSubmissionServiceRpcServer)RpcServerBase.GetServerInstance(MailSubmissionServiceRpcServer.RpcIntfHandle);
		ushort* ptr = wszStorageGroupDN;
		if (*(short*)wszStorageGroupDN != 0)
		{
			do
			{
				ptr += 2L / 2L;
			}
			while (*(short*)ptr != 0);
		}
		string storageGroupDN = new string((char*)wszStorageGroupDN, 0, (int)(ptr - wszStorageGroupDN >> 1));
		return mailSubmissionServiceRpcServer.QueryDumpsterStats(storageGroupDN, ref *pTicksOfOldestDeliveryTime, ref *pQueueSize, ref *pNumberOfItems) ? 0 : -2147467259;
	}

	// Token: 0x06000261 RID: 609 RVA: 0x0002C5F8 File Offset: 0x0002B9F8
	internal unsafe static void SubmitMessage3(void* hBinding, int inBytesLen, byte* pInBytes, int* pOutBytesLen, byte** ppOutBytes)
	{
		MailSubmissionServiceRpcServer mailSubmissionServiceRpcServer = (MailSubmissionServiceRpcServer)RpcServerBase.GetServerInstance(MailSubmissionServiceRpcServer.RpcIntfHandle);
		mailSubmissionServiceRpcServer.m_rpcStatus = SubmissionStatus.Success;
		byte[] sdLocalSystemBinaryForm = mailSubmissionServiceRpcServer.m_sdLocalSystemBinaryForm;
		if (sdLocalSystemBinaryForm == null)
		{
			mailSubmissionServiceRpcServer.m_rpcStatus = SubmissionStatus.Error;
		}
		if (RpcServerBase.CheckObjectSecurity(sdLocalSystemBinaryForm, 1, hBinding) != null)
		{
			mailSubmissionServiceRpcServer.m_rpcStatus = SubmissionStatus.Error;
		}
		IntPtr uPtrData = new IntPtr((void*)pInBytes);
		byte[] inBlob = <Module>.UToMBytes(inBytesLen, uPtrData);
		byte[] array = mailSubmissionServiceRpcServer.SubmitMessage(inBlob);
		*pOutBytesLen = array.Length;
		int num = -2147024882;
		byte[] array2 = array;
		if (num == <Module>.MToUBytesN(array2, array2.Length, ppOutBytes))
		{
			throw MailSubmissionServiceRpcServer.Oome;
		}
	}

	// Token: 0x06000262 RID: 610 RVA: 0x0002C674 File Offset: 0x0002BA74
	internal unsafe static void ShadowHeartBeat(void* hBinding, int inBytesLen, byte* pInBytes, int* pOutBytesLen, byte** ppOutBytes)
	{
		MailSubmissionServiceRpcServer mailSubmissionServiceRpcServer = (MailSubmissionServiceRpcServer)RpcServerBase.GetServerInstance(MailSubmissionServiceRpcServer.RpcIntfHandle);
		mailSubmissionServiceRpcServer.m_rpcStatus = SubmissionStatus.Success;
		byte[] sdLocalSystemBinaryForm = mailSubmissionServiceRpcServer.m_sdLocalSystemBinaryForm;
		if (sdLocalSystemBinaryForm == null)
		{
			mailSubmissionServiceRpcServer.m_rpcStatus = SubmissionStatus.Error;
		}
		if (RpcServerBase.CheckObjectSecurity(sdLocalSystemBinaryForm, 1, hBinding) != null)
		{
			mailSubmissionServiceRpcServer.m_rpcStatus = SubmissionStatus.Error;
		}
		IntPtr uPtrData = new IntPtr((void*)pInBytes);
		byte[] inBlob = <Module>.UToMBytes(inBytesLen, uPtrData);
		byte[] array = mailSubmissionServiceRpcServer.ShadowHeartBeat(inBlob);
		*pOutBytesLen = array.Length;
		int num = -2147024882;
		byte[] array2 = array;
		if (num == <Module>.MToUBytesN(array2, array2.Length, ppOutBytes))
		{
			throw MailSubmissionServiceRpcServer.Oome;
		}
	}

	// Token: 0x06000263 RID: 611 RVA: 0x0002C6F0 File Offset: 0x0002BAF0
	internal unsafe static void GetResubmitRequest(void* hBinding, int inBytesLen, byte* pInBytes, int* pOutBytesLen, byte** ppOutBytes)
	{
		MailSubmissionServiceRpcServer mailSubmissionServiceRpcServer = (MailSubmissionServiceRpcServer)RpcServerBase.GetServerInstance(MailSubmissionServiceRpcServer.RpcIntfHandle);
		byte[] sdLocalSystemBinaryForm = mailSubmissionServiceRpcServer.m_sdLocalSystemBinaryForm;
		if (sdLocalSystemBinaryForm == null)
		{
			mailSubmissionServiceRpcServer.m_rpcStatus = SubmissionStatus.Error;
		}
		if (RpcServerBase.CheckObjectSecurity(sdLocalSystemBinaryForm, 1, hBinding) != null)
		{
			mailSubmissionServiceRpcServer.m_rpcStatus = SubmissionStatus.Error;
		}
		IntPtr uPtrData = new IntPtr((void*)pInBytes);
		byte[] inBytes = <Module>.UToMBytes(inBytesLen, uPtrData);
		byte[] resubmitRequest = mailSubmissionServiceRpcServer.GetResubmitRequest(inBytes);
		*pOutBytesLen = resubmitRequest.Length;
		int num = -2147024882;
		byte[] array = resubmitRequest;
		if (num == <Module>.MToUBytesN(array, array.Length, ppOutBytes))
		{
			throw new OutOfMemoryException();
		}
	}

	// Token: 0x06000264 RID: 612 RVA: 0x0002C764 File Offset: 0x0002BB64
	internal unsafe static void SetResubmitRequest(void* hBinding, int inBytesLen, byte* pInBytes, int* pOutBytesLen, byte** ppOutBytes)
	{
		MailSubmissionServiceRpcServer mailSubmissionServiceRpcServer = (MailSubmissionServiceRpcServer)RpcServerBase.GetServerInstance(MailSubmissionServiceRpcServer.RpcIntfHandle);
		byte[] sdLocalSystemBinaryForm = mailSubmissionServiceRpcServer.m_sdLocalSystemBinaryForm;
		if (sdLocalSystemBinaryForm == null)
		{
			mailSubmissionServiceRpcServer.m_rpcStatus = SubmissionStatus.Error;
		}
		if (RpcServerBase.CheckObjectSecurity(sdLocalSystemBinaryForm, 1, hBinding) != null)
		{
			mailSubmissionServiceRpcServer.m_rpcStatus = SubmissionStatus.Error;
		}
		IntPtr uPtrData = new IntPtr((void*)pInBytes);
		byte[] resubmitRequest = <Module>.UToMBytes(inBytesLen, uPtrData);
		byte[] array = mailSubmissionServiceRpcServer.SetResubmitRequest(resubmitRequest);
		*pOutBytesLen = array.Length;
		int num = -2147024882;
		byte[] array2 = array;
		if (num == <Module>.MToUBytesN(array2, array2.Length, ppOutBytes))
		{
			throw new OutOfMemoryException();
		}
	}

	// Token: 0x06000265 RID: 613 RVA: 0x0002C7D8 File Offset: 0x0002BBD8
	internal unsafe static void RemoveResubmitRequest(void* hBinding, int inBytesLen, byte* pInBytes, int* pOutBytesLen, byte** ppOutBytes)
	{
		MailSubmissionServiceRpcServer mailSubmissionServiceRpcServer = (MailSubmissionServiceRpcServer)RpcServerBase.GetServerInstance(MailSubmissionServiceRpcServer.RpcIntfHandle);
		byte[] sdLocalSystemBinaryForm = mailSubmissionServiceRpcServer.m_sdLocalSystemBinaryForm;
		if (sdLocalSystemBinaryForm == null)
		{
			mailSubmissionServiceRpcServer.m_rpcStatus = SubmissionStatus.Error;
		}
		if (RpcServerBase.CheckObjectSecurity(sdLocalSystemBinaryForm, 1, hBinding) != null)
		{
			mailSubmissionServiceRpcServer.m_rpcStatus = SubmissionStatus.Error;
		}
		IntPtr uPtrData = new IntPtr((void*)pInBytes);
		byte[] inBytes = <Module>.UToMBytes(inBytesLen, uPtrData);
		byte[] array = mailSubmissionServiceRpcServer.RemoveResubmitRequest(inBytes);
		*pOutBytesLen = array.Length;
		int num = -2147024882;
		byte[] array2 = array;
		if (num == <Module>.MToUBytesN(array2, array2.Length, ppOutBytes))
		{
			throw new OutOfMemoryException();
		}
	}

	// Token: 0x06000266 RID: 614 RVA: 0x0002C84C File Offset: 0x0002BC4C
	internal unsafe static tagAddResubmitRequestStatus AddConditionalResubmitRequest(void* hBinding, _GUID requestGuid, long startTime, long endTime, ushort* wszConditions, int unresponsivePrimaryServersLen, ushort** ppUnresponsivePrimaryServers, int reservedBytesLen, byte* pReservedBytes)
	{
		MailSubmissionServiceRpcServer mailSubmissionServiceRpcServer = (MailSubmissionServiceRpcServer)RpcServerBase.GetServerInstance(MailSubmissionServiceRpcServer.RpcIntfHandle);
		byte[] sdLocalSystemBinaryForm = mailSubmissionServiceRpcServer.m_sdLocalSystemBinaryForm;
		if (sdLocalSystemBinaryForm == null)
		{
			return (tagAddResubmitRequestStatus)4;
		}
		if (RpcServerBase.CheckObjectSecurity(sdLocalSystemBinaryForm, 1, hBinding) != null)
		{
			return (tagAddResubmitRequestStatus)4;
		}
		string[] array = new string[unresponsivePrimaryServersLen];
		int num = 0;
		if (0 < unresponsivePrimaryServersLen)
		{
			ushort** ptr = ppUnresponsivePrimaryServers;
			do
			{
				ulong num2 = (ulong)(*(long*)ptr);
				string text;
				if (num2 != 0UL)
				{
					IntPtr ptr2 = new IntPtr(num2);
					text = Marshal.PtrToStringUni(ptr2);
				}
				else
				{
					text = string.Empty;
				}
				array[num] = text;
				num++;
				ptr += 8L / (long)sizeof(ushort*);
			}
			while (num < unresponsivePrimaryServersLen);
		}
		IntPtr uPtrData = new IntPtr((void*)pReservedBytes);
		byte[] reservedBytes = <Module>.UToMBytes(reservedBytesLen, uPtrData);
		ushort* ptr3 = wszConditions;
		if (*(short*)wszConditions != 0)
		{
			do
			{
				ptr3 += 2L / 2L;
			}
			while (*(short*)ptr3 != 0);
		}
		string conditions = new string((char*)wszConditions, 0, (int)(ptr3 - wszConditions >> 1));
		Guid requestGuid2 = <Module>.FromGUID(ref requestGuid);
		return (tagAddResubmitRequestStatus)mailSubmissionServiceRpcServer.AddConditionalResubmitRequest(requestGuid2, startTime, endTime, conditions, array, reservedBytes);
	}

	// Token: 0x06000267 RID: 615 RVA: 0x0002CA64 File Offset: 0x0002BE64
	internal unsafe static uint CrashMeNowThreadProc(void* A_0)
	{
		if (0 != <Module>.WaitForSingleObject(<Module>.g_hCrashMeNow, -1) || !<Module>.g_fCrashMeNow)
		{
			<Module>.g_fCrashMeNowExit = true;
			return 0;
		}
		if (ExceptionClass.myException != null)
		{
			throw new System.Exception("Crash in CrashMeNow", ExceptionClass.myException);
		}
		throw new System.Exception("Crash in CrashMeNow");
	}

	// Token: 0x06000268 RID: 616 RVA: 0x0002CAB0 File Offset: 0x0002BEB0
	[return: MarshalAs(UnmanagedType.U1)]
	internal unsafe static bool FInitializeCrashThread()
	{
		bool result = false;
		if (Interlocked.Exchange(ref <Module>.g_dwCrashMeNowLock, 1) == 1)
		{
			do
			{
				<Module>.Sleep(500);
			}
			while (Interlocked.Exchange(ref <Module>.g_dwCrashMeNowLock, 1) == 1);
		}
		if (!<Module>.g_fCrashMeNowInitialized)
		{
			<Module>.g_hCrashMeNow = <Module>.CreateEventW(null, 1, 0, null);
			if (<Module>.g_hCrashMeNow == null)
			{
				goto IL_87;
			}
			void* ptr = <Module>.CreateThread(null, 0UL, <Module>.__unep@?CrashMeNowThreadProc@@$$FYAKPEAX@Z, null, 0, null);
			if (ptr != null)
			{
				<Module>.CloseHandle(ptr);
				<Module>.g_fCrashMeNowInitialized = true;
			}
			else
			{
				if (<Module>.g_hCrashMeNow != null)
				{
					<Module>.CloseHandle(<Module>.g_hCrashMeNow);
					<Module>.g_hCrashMeNow = null;
					goto IL_87;
				}
				goto IL_87;
			}
		}
		result = true;
		IL_87:
		Interlocked.Exchange(ref <Module>.g_dwCrashMeNowLock, 0);
		return result;
	}

	// Token: 0x06000269 RID: 617 RVA: 0x0002CB54 File Offset: 0x0002BF54
	internal static void CrashMeNowX()
	{
		<Module>.UnmanagedCrashMeNow();
	}

	// Token: 0x0600026A RID: 618 RVA: 0x0002CB68 File Offset: 0x0002BF68
	internal static void CrashMeNow(object o)
	{
		ExceptionClass.myObject = o;
		ExceptionClass.myException = null;
		<Module>.UnmanagedCrashMeNow();
	}

	// Token: 0x0600026B RID: 619 RVA: 0x0002CB88 File Offset: 0x0002BF88
	internal static void CrashMeNow(System.Exception e)
	{
		ExceptionClass.myObject = null;
		ExceptionClass.myException = e;
		<Module>.UnmanagedCrashMeNow();
	}

	// Token: 0x0600026C RID: 620 RVA: 0x0002CBA8 File Offset: 0x0002BFA8
	internal unsafe static int Execute(ManagedExceptionCrashWrapper* A_0)
	{
		int errorCode;
		try
		{
			return calli(System.Int32 modopt(System.Runtime.CompilerServices.IsLong) modopt(System.Runtime.CompilerServices.CallConvCdecl)(System.IntPtr), A_0, *(*A_0));
		}
		catch (RpcException ex)
		{
			<Module>.RpcRaiseException(ex.ErrorCode);
			return 0;
		}
		catch (FailRpcException ex2)
		{
			errorCode = ex2.ErrorCode;
		}
		catch (ThreadAbortException)
		{
			<Module>.RpcRaiseException(1726);
			return 0;
		}
		catch (OutOfMemoryException)
		{
			<Module>.RpcRaiseException(1130);
			return 0;
		}
		catch (System.Exception e)
		{
			<Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.CrashMeNow(e);
			return 0;
		}
		catch (object obj)
		{
			ExceptionClass.myObject = obj;
			ExceptionClass.myException = null;
			<Module>.UnmanagedCrashMeNow();
			return 0;
		}
		return errorCode;
	}

	// Token: 0x0600026D RID: 621 RVA: 0x0002CDD8 File Offset: 0x0002C1D8
	internal unsafe static void UpdateMigrationRequest(void* hBinding, int version, int inBytesLen, byte* pInBytes, int* pOutBytesLen, byte** ppOutBytes)
	{
		MigrationNotificationRpcServer migrationNotificationRpcServer = (MigrationNotificationRpcServer)RpcServerBase.GetServerInstance(MigrationNotificationRpcServer.RpcIntfHandle);
		IntPtr uPtrData = new IntPtr((void*)pInBytes);
		byte[] pInBytes2 = <Module>.UToMBytes(inBytesLen, uPtrData);
		byte[] array = migrationNotificationRpcServer.UpdateMigrationRequest(version, pInBytes2);
		*pOutBytesLen = array.Length;
		int num = -2147024882;
		byte[] array2 = array;
		if (num == <Module>.MToUBytesN(array2, array2.Length, ppOutBytes))
		{
			throw new OutOfMemoryException();
		}
	}

	// Token: 0x0600026E RID: 622 RVA: 0x000304C0 File Offset: 0x0002F8C0
	internal unsafe static int ProxyNspiQueryRows(void* hBinding, int version, int inBytesLen, byte* pInBytes, int* pOutBytesLen, byte** ppOutBytes, _SRowSet_r** ppRows)
	{
		SafeRpcMemoryHandle safeRpcMemoryHandle = null;
		byte[] array = null;
		MigrationProxyRpcServer serverInstance = MigrationProxyRpcServer.GetServerInstance();
		if (serverInstance == null)
		{
			return -2147467259;
		}
		IntPtr uPtrData = new IntPtr((void*)pInBytes);
		byte[] inBlob = <Module>.UToMBytes(inBytesLen, uPtrData);
		int num = serverInstance.NspiQueryRows(version, inBlob, out array, out safeRpcMemoryHandle);
		if (safeRpcMemoryHandle != null)
		{
			if (num == null)
			{
				*(long*)ppRows = safeRpcMemoryHandle.Detach().ToPointer();
			}
			else
			{
				((IDisposable)safeRpcMemoryHandle).Dispose();
			}
		}
		*pOutBytesLen = array.Length;
		int num2 = -2147024882;
		byte[] array2 = array;
		if (num2 == <Module>.MToUBytesN(array2, array2.Length, ppOutBytes))
		{
			throw new OutOfMemoryException();
		}
		return num;
	}

	// Token: 0x0600026F RID: 623 RVA: 0x00030540 File Offset: 0x0002F940
	internal unsafe static int ProxyNspiGetRecipient(void* hBinding, int version, int inBytesLen, byte* pInBytes, int* pOutBytesLen, byte** ppOutBytes, _SRowSet_r** ppRows)
	{
		SafeRpcMemoryHandle safeRpcMemoryHandle = null;
		byte[] array = null;
		MigrationProxyRpcServer serverInstance = MigrationProxyRpcServer.GetServerInstance();
		if (serverInstance == null)
		{
			return -2147467259;
		}
		IntPtr uPtrData = new IntPtr((void*)pInBytes);
		byte[] inBlob = <Module>.UToMBytes(inBytesLen, uPtrData);
		int num = serverInstance.NspiGetRecipient(version, inBlob, out array, out safeRpcMemoryHandle);
		if (safeRpcMemoryHandle != null)
		{
			if (num == null)
			{
				*(long*)ppRows = safeRpcMemoryHandle.Detach().ToPointer();
			}
			else
			{
				((IDisposable)safeRpcMemoryHandle).Dispose();
			}
		}
		*pOutBytesLen = array.Length;
		int num2 = -2147024882;
		byte[] array2 = array;
		if (num2 == <Module>.MToUBytesN(array2, array2.Length, ppOutBytes))
		{
			throw new OutOfMemoryException();
		}
		return num;
	}

	// Token: 0x06000270 RID: 624 RVA: 0x000305C0 File Offset: 0x0002F9C0
	internal unsafe static int ProxyNspiSetRecipient(void* hBinding, int version, int inBytesLen, byte* pInBytes, int* pOutBytesLen, byte** ppOutBytes)
	{
		byte[] array = null;
		MigrationProxyRpcServer serverInstance = MigrationProxyRpcServer.GetServerInstance();
		if (serverInstance == null)
		{
			return -2147467259;
		}
		IntPtr uPtrData = new IntPtr((void*)pInBytes);
		byte[] inBlob = <Module>.UToMBytes(inBytesLen, uPtrData);
		int result = serverInstance.NspiSetRecipient(version, inBlob, out array);
		*pOutBytesLen = array.Length;
		int num = -2147024882;
		byte[] array2 = array;
		if (num == <Module>.MToUBytesN(array2, array2.Length, ppOutBytes))
		{
			throw new OutOfMemoryException();
		}
		return result;
	}

	// Token: 0x06000271 RID: 625 RVA: 0x00030614 File Offset: 0x0002FA14
	internal unsafe static int ProxyNspiGetGroupMembers(void* hBinding, int version, int inBytesLen, byte* pInBytes, int* pOutBytesLen, byte** ppOutBytes, _SRowSet_r** ppRows)
	{
		SafeRpcMemoryHandle safeRpcMemoryHandle = null;
		byte[] array = null;
		MigrationProxyRpcServer serverInstance = MigrationProxyRpcServer.GetServerInstance();
		if (serverInstance == null)
		{
			return -2147467259;
		}
		IntPtr uPtrData = new IntPtr((void*)pInBytes);
		byte[] inBlob = <Module>.UToMBytes(inBytesLen, uPtrData);
		int num = serverInstance.NspiGetGroupMembers(version, inBlob, out array, out safeRpcMemoryHandle);
		if (safeRpcMemoryHandle != null)
		{
			if (num == null)
			{
				*(long*)ppRows = safeRpcMemoryHandle.Detach().ToPointer();
			}
			else
			{
				((IDisposable)safeRpcMemoryHandle).Dispose();
			}
		}
		*pOutBytesLen = array.Length;
		int num2 = -2147024882;
		byte[] array2 = array;
		if (num2 == <Module>.MToUBytesN(array2, array2.Length, ppOutBytes))
		{
			throw new OutOfMemoryException();
		}
		return num;
	}

	// Token: 0x06000272 RID: 626 RVA: 0x00030694 File Offset: 0x0002FA94
	internal unsafe static int ProxyNspiRfrGetNewDSA(void* hBinding, int version, int inBytesLen, byte* pInBytes, int* pOutBytesLen, byte** ppOutBytes)
	{
		byte[] array = null;
		MigrationProxyRpcServer serverInstance = MigrationProxyRpcServer.GetServerInstance();
		if (serverInstance == null)
		{
			return -2147467259;
		}
		IntPtr uPtrData = new IntPtr((void*)pInBytes);
		byte[] inBlob = <Module>.UToMBytes(inBytesLen, uPtrData);
		int result = serverInstance.NspiRfrGetNewDSA(version, inBlob, out array);
		*pOutBytesLen = array.Length;
		int num = -2147024882;
		byte[] array2 = array;
		if (num == <Module>.MToUBytesN(array2, array2.Length, ppOutBytes))
		{
			throw new OutOfMemoryException();
		}
		return result;
	}

	// Token: 0x06000273 RID: 627 RVA: 0x000306E8 File Offset: 0x0002FAE8
	internal unsafe static int ProxyAutodiscoverGetUserSettings(void* hBinding, int version, int inBytesLen, byte* pInBytes, int* pOutBytesLen, byte** ppOutBytes)
	{
		byte[] array = null;
		MigrationProxyRpcServer serverInstance = MigrationProxyRpcServer.GetServerInstance();
		if (serverInstance == null)
		{
			return -2147467259;
		}
		IntPtr uPtrData = new IntPtr((void*)pInBytes);
		byte[] inBlob = <Module>.UToMBytes(inBytesLen, uPtrData);
		serverInstance.AutodiscoverGetUserSettings(version, inBlob, out array);
		*pOutBytesLen = array.Length;
		int num = -2147024882;
		byte[] array2 = array;
		if (num == <Module>.MToUBytesN(array2, array2.Length, ppOutBytes))
		{
			throw new OutOfMemoryException();
		}
		return 0;
	}

	// Token: 0x06000274 RID: 628 RVA: 0x00030910 File Offset: 0x0002FD10
	internal unsafe static void InvokeMigrationServiceEndPoint(void* hBinding, int version, int inBytesLen, byte* pInBytes, int* pOutBytesLen, byte** ppOutBytes)
	{
		MigrationServiceRpcServer migrationServiceRpcServer = (MigrationServiceRpcServer)RpcServerBase.GetServerInstance(MigrationServiceRpcServer.RpcIntfHandle);
		IntPtr uPtrData = new IntPtr((void*)pInBytes);
		byte[] pInBytes2 = <Module>.UToMBytes(inBytesLen, uPtrData);
		byte[] array = migrationServiceRpcServer.InvokeMigrationServiceEndPoint(version, pInBytes2);
		*pOutBytesLen = array.Length;
		int num = -2147024882;
		byte[] array2 = array;
		if (num == <Module>.MToUBytesN(array2, array2.Length, ppOutBytes))
		{
			throw new OutOfMemoryException();
		}
	}

	// Token: 0x06000275 RID: 629 RVA: 0x00031190 File Offset: 0x00030590
	internal unsafe static int X_LoadInterfaceDetails(void* Interface, tagInterfaceDetails* pInterfaceDetails)
	{
		int result;
		try
		{
			return RpcServerBase.GetSecurityDetails(Interface, (void*)pInterfaceDetails);
		}
		catch (System.Exception)
		{
			result = 0;
		}
		return result;
	}

	// Token: 0x06000276 RID: 630 RVA: 0x00032EE8 File Offset: 0x000322E8
	internal unsafe static NotificationsBrokerAsyncRpcCallWrapper* {ctor}(NotificationsBrokerAsyncRpcCallWrapper* A_0, IntPtr intfHandle)
	{
		IntPtr intPtr = intfHandle;
		*A_0 = ref <Module>.??_7?$BaseAsyncRpcCallWrapper@VNotificationsBrokerAsyncRpcServer@NotificationsBroker@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 8L) = intPtr;
		*A_0 = ref <Module>.??_7NotificationsBrokerAsyncRpcCallWrapper@NotificationsBroker@Rpc@Exchange@Microsoft@@6B@ + 8;
		return A_0;
	}

	// Token: 0x06000277 RID: 631 RVA: 0x00033990 File Offset: 0x00032D90
	internal unsafe static void DispatchCall(NotificationsBrokerAsyncRpcCallWrapper_Subscribe* A_0, NotificationsBrokerAsyncRpcServer asyncServer, SafeRpcAsyncStateHandle asyncState)
	{
		ulong num = (ulong)(*(A_0 + 16L));
		if (num == 0UL)
		{
			throw new InvalidHandleException("m_hBinding");
		}
		IntPtr bindingHandle = new IntPtr(num);
		IntPtr pSubscription = new IntPtr(*(A_0 + 24L));
		NotificationsBrokerAsyncRpcState_Subscribe notificationsBrokerAsyncRpcState_Subscribe = BaseAsyncRpcState<Microsoft::Exchange::Rpc::NotificationsBroker::NotificationsBrokerAsyncRpcState_Subscribe,Microsoft::Exchange::Rpc::NotificationsBroker::NotificationsBrokerAsyncRpcServer,Microsoft::Exchange::Rpc::INotificationsBrokerAsyncDispatch>.CreateFromPool();
		notificationsBrokerAsyncRpcState_Subscribe.Initialize(asyncState, asyncServer, bindingHandle, pSubscription);
		notificationsBrokerAsyncRpcState_Subscribe.Begin();
	}

	// Token: 0x06000278 RID: 632 RVA: 0x00032F18 File Offset: 0x00032318
	internal unsafe static NotificationsBrokerAsyncRpcCallWrapper_Subscribe* {ctor}(NotificationsBrokerAsyncRpcCallWrapper_Subscribe* A_0, void* hBinding, ushort* szSubscription)
	{
		IntPtr rpcIntfHandle = NotificationsBrokerAsyncRpcServer.RpcIntfHandle;
		*A_0 = ref <Module>.??_7?$BaseAsyncRpcCallWrapper@VNotificationsBrokerAsyncRpcServer@NotificationsBroker@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 8L) = rpcIntfHandle;
		*A_0 = ref <Module>.??_7NotificationsBrokerAsyncRpcCallWrapper_Subscribe@NotificationsBroker@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 16L) = hBinding;
		*(A_0 + 24L) = szSubscription;
		return A_0;
	}

	// Token: 0x06000279 RID: 633 RVA: 0x000339E0 File Offset: 0x00032DE0
	internal unsafe static void DispatchCall(NotificationsBrokerAsyncRpcCallWrapper_Unsubscribe* A_0, NotificationsBrokerAsyncRpcServer asyncServer, SafeRpcAsyncStateHandle asyncState)
	{
		ulong num = (ulong)(*(A_0 + 16L));
		if (num == 0UL)
		{
			throw new InvalidHandleException("m_hBinding");
		}
		IntPtr bindingHandle = new IntPtr(num);
		IntPtr pSubscription = new IntPtr(*(A_0 + 24L));
		NotificationsBrokerAsyncRpcState_Unsubscribe notificationsBrokerAsyncRpcState_Unsubscribe = BaseAsyncRpcState<Microsoft::Exchange::Rpc::NotificationsBroker::NotificationsBrokerAsyncRpcState_Unsubscribe,Microsoft::Exchange::Rpc::NotificationsBroker::NotificationsBrokerAsyncRpcServer,Microsoft::Exchange::Rpc::INotificationsBrokerAsyncDispatch>.CreateFromPool();
		notificationsBrokerAsyncRpcState_Unsubscribe.Initialize(asyncState, asyncServer, bindingHandle, pSubscription);
		notificationsBrokerAsyncRpcState_Unsubscribe.Begin();
	}

	// Token: 0x0600027A RID: 634 RVA: 0x00032F58 File Offset: 0x00032358
	internal unsafe static NotificationsBrokerAsyncRpcCallWrapper_Unsubscribe* {ctor}(NotificationsBrokerAsyncRpcCallWrapper_Unsubscribe* A_0, void* hBinding, ushort* szSubscription)
	{
		IntPtr rpcIntfHandle = NotificationsBrokerAsyncRpcServer.RpcIntfHandle;
		*A_0 = ref <Module>.??_7?$BaseAsyncRpcCallWrapper@VNotificationsBrokerAsyncRpcServer@NotificationsBroker@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 8L) = rpcIntfHandle;
		*A_0 = ref <Module>.??_7NotificationsBrokerAsyncRpcCallWrapper_Unsubscribe@NotificationsBroker@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 16L) = hBinding;
		*(A_0 + 24L) = szSubscription;
		return A_0;
	}

	// Token: 0x0600027B RID: 635 RVA: 0x00033A30 File Offset: 0x00032E30
	internal unsafe static void DispatchCall(NotificationsBrokerAsyncRpcCallWrapper_GetNextNotification* A_0, NotificationsBrokerAsyncRpcServer asyncServer, SafeRpcAsyncStateHandle asyncState)
	{
		ulong num = (ulong)(*(A_0 + 16L));
		if (num == 0UL)
		{
			throw new InvalidHandleException("m_hBinding");
		}
		if (*(A_0 + 48L) == 0L)
		{
			throw new FailRpcException("m_pszNotification is NULL", 1);
		}
		IntPtr bindingHandle = new IntPtr(num);
		IntPtr ppNotification = new IntPtr(*(A_0 + 48L));
		NotificationsBrokerAsyncRpcState_GetNextNotification notificationsBrokerAsyncRpcState_GetNextNotification = BaseAsyncRpcState<Microsoft::Exchange::Rpc::NotificationsBroker::NotificationsBrokerAsyncRpcState_GetNextNotification,Microsoft::Exchange::Rpc::NotificationsBroker::NotificationsBrokerAsyncRpcServer,Microsoft::Exchange::Rpc::INotificationsBrokerAsyncDispatch>.CreateFromPool();
		Guid ackNotificationId = <Module>.FromGUID(A_0 + 28L);
		notificationsBrokerAsyncRpcState_GetNextNotification.Initialize(asyncState, asyncServer, bindingHandle, *(A_0 + 24L), ackNotificationId, ppNotification);
		notificationsBrokerAsyncRpcState_GetNextNotification.Begin();
	}

	// Token: 0x0600027C RID: 636 RVA: 0x00032F98 File Offset: 0x00032398
	internal unsafe static NotificationsBrokerAsyncRpcCallWrapper_GetNextNotification* {ctor}(NotificationsBrokerAsyncRpcCallWrapper_GetNextNotification* A_0, void* hBinding, int consumerId, _GUID ackNotificationId, ushort** pszNotification)
	{
		IntPtr rpcIntfHandle = NotificationsBrokerAsyncRpcServer.RpcIntfHandle;
		*A_0 = ref <Module>.??_7?$BaseAsyncRpcCallWrapper@VNotificationsBrokerAsyncRpcServer@NotificationsBroker@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 8L) = rpcIntfHandle;
		*A_0 = ref <Module>.??_7NotificationsBrokerAsyncRpcCallWrapper_GetNextNotification@NotificationsBroker@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 16L) = hBinding;
		*(A_0 + 24L) = consumerId;
		cpblk(A_0 + 28L, ref ackNotificationId, 16);
		*(A_0 + 48L) = pszNotification;
		return A_0;
	}

	// Token: 0x0600027D RID: 637 RVA: 0x00032AC0 File Offset: 0x00031EC0
	internal unsafe static BaseAsyncRpcCallWrapper<Microsoft::Exchange::Rpc::NotificationsBroker::NotificationsBrokerAsyncRpcServer>* {ctor}(BaseAsyncRpcCallWrapper<Microsoft::Exchange::Rpc::NotificationsBroker::NotificationsBrokerAsyncRpcServer>* A_0, IntPtr intfHandle)
	{
		*A_0 = ref <Module>.??_7?$BaseAsyncRpcCallWrapper@VNotificationsBrokerAsyncRpcServer@NotificationsBroker@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 8L) = intfHandle;
		return A_0;
	}

	// Token: 0x0600027E RID: 638 RVA: 0x00032098 File Offset: 0x00031498
	internal unsafe static int InternalExecute(BaseAsyncRpcCallWrapper<Microsoft::Exchange::Rpc::NotificationsBroker::NotificationsBrokerAsyncRpcServer>* A_0, SafeRpcAsyncStateHandle asyncState)
	{
		NotificationsBrokerAsyncRpcServer notificationsBrokerAsyncRpcServer = (NotificationsBrokerAsyncRpcServer)RpcServerBase.GetServerInstance(*(A_0 + 8L));
		if (notificationsBrokerAsyncRpcServer == null)
		{
			throw new ServerUnavailableException("AsyncServer not initialized");
		}
		calli(System.Void(System.IntPtr,Microsoft.Exchange.Rpc.NotificationsBroker.NotificationsBrokerAsyncRpcServer,Microsoft.Exchange.Rpc.SafeRpcAsyncStateHandle), A_0, notificationsBrokerAsyncRpcServer, asyncState, *(*A_0 + 8L));
		return 0;
	}

	// Token: 0x0600027F RID: 639 RVA: 0x00032324 File Offset: 0x00031724
	internal unsafe static void Execute<class\u0020Microsoft::Exchange::Rpc::NotificationsBroker::SafeNotificationsBrokerSubscribeRpcAsyncStateHandle>(ManagedExceptionAsyncCrashWrapper* A_0, _RPC_ASYNC_STATE* pAsyncState)
	{
		SafeNotificationsBrokerSubscribeRpcAsyncStateHandle safeNotificationsBrokerSubscribeRpcAsyncStateHandle = null;
		try
		{
			IntPtr handle = new IntPtr((void*)pAsyncState);
			safeNotificationsBrokerSubscribeRpcAsyncStateHandle = new SafeNotificationsBrokerSubscribeRpcAsyncStateHandle(handle);
			pAsyncState = null;
			int num = calli(System.Int32 modopt(System.Runtime.CompilerServices.IsLong)(System.IntPtr,Microsoft.Exchange.Rpc.SafeRpcAsyncStateHandle), A_0, safeNotificationsBrokerSubscribeRpcAsyncStateHandle, *(*A_0));
			if (0 != num)
			{
				safeNotificationsBrokerSubscribeRpcAsyncStateHandle.CompleteCall(num);
			}
		}
		catch (RpcException ex)
		{
			if (safeNotificationsBrokerSubscribeRpcAsyncStateHandle != null)
			{
				safeNotificationsBrokerSubscribeRpcAsyncStateHandle.AbortCall((uint)ex.ErrorCode);
			}
		}
		catch (FailRpcException ex2)
		{
			if (safeNotificationsBrokerSubscribeRpcAsyncStateHandle != null)
			{
				safeNotificationsBrokerSubscribeRpcAsyncStateHandle.CompleteCall(ex2.ErrorCode);
			}
		}
		catch (ThreadAbortException)
		{
			if (safeNotificationsBrokerSubscribeRpcAsyncStateHandle != null)
			{
				safeNotificationsBrokerSubscribeRpcAsyncStateHandle.AbortCall(1726U);
			}
		}
		catch (OutOfMemoryException)
		{
			if (safeNotificationsBrokerSubscribeRpcAsyncStateHandle != null)
			{
				safeNotificationsBrokerSubscribeRpcAsyncStateHandle.AbortCall(1130U);
			}
		}
		catch (System.Exception e)
		{
			<Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.CrashMeNow(e);
		}
		catch (object o)
		{
			<Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.CrashMeNow(o);
		}
		finally
		{
			if (pAsyncState != null)
			{
				<Module>.RpcRaiseException(1130);
			}
		}
	}

	// Token: 0x06000280 RID: 640 RVA: 0x0003247C File Offset: 0x0003187C
	internal unsafe static void Execute<class\u0020Microsoft::Exchange::Rpc::NotificationsBroker::SafeNotificationsBrokerUnsubscribeRpcAsyncStateHandle>(ManagedExceptionAsyncCrashWrapper* A_0, _RPC_ASYNC_STATE* pAsyncState)
	{
		SafeNotificationsBrokerUnsubscribeRpcAsyncStateHandle safeNotificationsBrokerUnsubscribeRpcAsyncStateHandle = null;
		try
		{
			IntPtr handle = new IntPtr((void*)pAsyncState);
			safeNotificationsBrokerUnsubscribeRpcAsyncStateHandle = new SafeNotificationsBrokerUnsubscribeRpcAsyncStateHandle(handle);
			pAsyncState = null;
			int num = calli(System.Int32 modopt(System.Runtime.CompilerServices.IsLong)(System.IntPtr,Microsoft.Exchange.Rpc.SafeRpcAsyncStateHandle), A_0, safeNotificationsBrokerUnsubscribeRpcAsyncStateHandle, *(*A_0));
			if (0 != num)
			{
				safeNotificationsBrokerUnsubscribeRpcAsyncStateHandle.CompleteCall(num);
			}
		}
		catch (RpcException ex)
		{
			if (safeNotificationsBrokerUnsubscribeRpcAsyncStateHandle != null)
			{
				safeNotificationsBrokerUnsubscribeRpcAsyncStateHandle.AbortCall((uint)ex.ErrorCode);
			}
		}
		catch (FailRpcException ex2)
		{
			if (safeNotificationsBrokerUnsubscribeRpcAsyncStateHandle != null)
			{
				safeNotificationsBrokerUnsubscribeRpcAsyncStateHandle.CompleteCall(ex2.ErrorCode);
			}
		}
		catch (ThreadAbortException)
		{
			if (safeNotificationsBrokerUnsubscribeRpcAsyncStateHandle != null)
			{
				safeNotificationsBrokerUnsubscribeRpcAsyncStateHandle.AbortCall(1726U);
			}
		}
		catch (OutOfMemoryException)
		{
			if (safeNotificationsBrokerUnsubscribeRpcAsyncStateHandle != null)
			{
				safeNotificationsBrokerUnsubscribeRpcAsyncStateHandle.AbortCall(1130U);
			}
		}
		catch (System.Exception e)
		{
			<Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.CrashMeNow(e);
		}
		catch (object o)
		{
			<Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.CrashMeNow(o);
		}
		finally
		{
			if (pAsyncState != null)
			{
				<Module>.RpcRaiseException(1130);
			}
		}
	}

	// Token: 0x06000281 RID: 641 RVA: 0x000325D4 File Offset: 0x000319D4
	internal unsafe static void Execute<class\u0020Microsoft::Exchange::Rpc::NotificationsBroker::SafeNotificationsBrokerGetNextNotificationRpcAsyncStateHandle>(ManagedExceptionAsyncCrashWrapper* A_0, _RPC_ASYNC_STATE* pAsyncState)
	{
		SafeNotificationsBrokerGetNextNotificationRpcAsyncStateHandle safeNotificationsBrokerGetNextNotificationRpcAsyncStateHandle = null;
		try
		{
			IntPtr handle = new IntPtr((void*)pAsyncState);
			safeNotificationsBrokerGetNextNotificationRpcAsyncStateHandle = new SafeNotificationsBrokerGetNextNotificationRpcAsyncStateHandle(handle);
			pAsyncState = null;
			int num = calli(System.Int32 modopt(System.Runtime.CompilerServices.IsLong)(System.IntPtr,Microsoft.Exchange.Rpc.SafeRpcAsyncStateHandle), A_0, safeNotificationsBrokerGetNextNotificationRpcAsyncStateHandle, *(*A_0));
			if (0 != num)
			{
				safeNotificationsBrokerGetNextNotificationRpcAsyncStateHandle.CompleteCall(num);
			}
		}
		catch (RpcException ex)
		{
			if (safeNotificationsBrokerGetNextNotificationRpcAsyncStateHandle != null)
			{
				safeNotificationsBrokerGetNextNotificationRpcAsyncStateHandle.AbortCall((uint)ex.ErrorCode);
			}
		}
		catch (FailRpcException ex2)
		{
			if (safeNotificationsBrokerGetNextNotificationRpcAsyncStateHandle != null)
			{
				safeNotificationsBrokerGetNextNotificationRpcAsyncStateHandle.CompleteCall(ex2.ErrorCode);
			}
		}
		catch (ThreadAbortException)
		{
			if (safeNotificationsBrokerGetNextNotificationRpcAsyncStateHandle != null)
			{
				safeNotificationsBrokerGetNextNotificationRpcAsyncStateHandle.AbortCall(1726U);
			}
		}
		catch (OutOfMemoryException)
		{
			if (safeNotificationsBrokerGetNextNotificationRpcAsyncStateHandle != null)
			{
				safeNotificationsBrokerGetNextNotificationRpcAsyncStateHandle.AbortCall(1130U);
			}
		}
		catch (System.Exception e)
		{
			<Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.CrashMeNow(e);
		}
		catch (object o)
		{
			<Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.CrashMeNow(o);
		}
		finally
		{
			if (pAsyncState != null)
			{
				<Module>.RpcRaiseException(1130);
			}
		}
	}

	// Token: 0x06000282 RID: 642 RVA: 0x000694A0 File Offset: 0x000688A0
	internal unsafe static void ??__E??_7ManagedExceptionAsyncCrashWrapper@Rpc@Exchange@Microsoft@@6B@@@YMXXZ()
	{
		<Module>.??_7ManagedExceptionAsyncCrashWrapper@Rpc@Exchange@Microsoft@@6B@ = ref <Module>.??_R4ManagedExceptionAsyncCrashWrapper@Rpc@Exchange@Microsoft@@6B@;
		*(ref <Module>.??_7ManagedExceptionAsyncCrashWrapper@Rpc@Exchange@Microsoft@@6B@ + 8) = (long)ldftn(_purecall);
	}

	// Token: 0x06000283 RID: 643 RVA: 0x000694C8 File Offset: 0x000688C8
	internal unsafe static void ??__E??_7NotificationsBrokerAsyncRpcCallWrapper@NotificationsBroker@Rpc@Exchange@Microsoft@@6B@@@YMXXZ()
	{
		<Module>.??_7NotificationsBrokerAsyncRpcCallWrapper@NotificationsBroker@Rpc@Exchange@Microsoft@@6B@ = ref <Module>.??_R4NotificationsBrokerAsyncRpcCallWrapper@NotificationsBroker@Rpc@Exchange@Microsoft@@6B@;
		*(ref <Module>.??_7NotificationsBrokerAsyncRpcCallWrapper@NotificationsBroker@Rpc@Exchange@Microsoft@@6B@ + 8) = (long)ldftn(Microsoft.Exchange.Rpc.BaseAsyncRpcCallWrapper<Microsoft::Exchange::Rpc::NotificationsBroker::NotificationsBrokerAsyncRpcServer>.InternalExecute);
		*(ref <Module>.??_7NotificationsBrokerAsyncRpcCallWrapper@NotificationsBroker@Rpc@Exchange@Microsoft@@6B@ + 16) = (long)ldftn(_purecall);
	}

	// Token: 0x06000284 RID: 644 RVA: 0x00069500 File Offset: 0x00068900
	internal unsafe static void ??__E??_7?$BaseAsyncRpcCallWrapper@VNotificationsBrokerAsyncRpcServer@NotificationsBroker@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@6B@@@YMXXZ()
	{
		<Module>.??_7?$BaseAsyncRpcCallWrapper@VNotificationsBrokerAsyncRpcServer@NotificationsBroker@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@6B@ = ref <Module>.??_R4?$BaseAsyncRpcCallWrapper@VNotificationsBrokerAsyncRpcServer@NotificationsBroker@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@6B@;
		*(ref <Module>.??_7?$BaseAsyncRpcCallWrapper@VNotificationsBrokerAsyncRpcServer@NotificationsBroker@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@6B@ + 8) = (long)ldftn(Microsoft.Exchange.Rpc.BaseAsyncRpcCallWrapper<Microsoft::Exchange::Rpc::NotificationsBroker::NotificationsBrokerAsyncRpcServer>.InternalExecute);
		*(ref <Module>.??_7?$BaseAsyncRpcCallWrapper@VNotificationsBrokerAsyncRpcServer@NotificationsBroker@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@6B@ + 16) = (long)ldftn(_purecall);
	}

	// Token: 0x06000285 RID: 645 RVA: 0x00069538 File Offset: 0x00068938
	internal unsafe static void ??__E??_7NotificationsBrokerAsyncRpcCallWrapper_Subscribe@NotificationsBroker@Rpc@Exchange@Microsoft@@6B@@@YMXXZ()
	{
		<Module>.??_7NotificationsBrokerAsyncRpcCallWrapper_Subscribe@NotificationsBroker@Rpc@Exchange@Microsoft@@6B@ = ref <Module>.??_R4NotificationsBrokerAsyncRpcCallWrapper_Subscribe@NotificationsBroker@Rpc@Exchange@Microsoft@@6B@;
		*(ref <Module>.??_7NotificationsBrokerAsyncRpcCallWrapper_Subscribe@NotificationsBroker@Rpc@Exchange@Microsoft@@6B@ + 8) = (long)ldftn(Microsoft.Exchange.Rpc.BaseAsyncRpcCallWrapper<Microsoft::Exchange::Rpc::NotificationsBroker::NotificationsBrokerAsyncRpcServer>.InternalExecute);
		*(ref <Module>.??_7NotificationsBrokerAsyncRpcCallWrapper_Subscribe@NotificationsBroker@Rpc@Exchange@Microsoft@@6B@ + 16) = (long)ldftn(Microsoft.Exchange.Rpc.NotificationsBroker.NotificationsBrokerAsyncRpcCallWrapper_Subscribe.DispatchCall);
	}

	// Token: 0x06000286 RID: 646 RVA: 0x00069570 File Offset: 0x00068970
	internal unsafe static void ??__E??_7NotificationsBrokerAsyncRpcCallWrapper_Unsubscribe@NotificationsBroker@Rpc@Exchange@Microsoft@@6B@@@YMXXZ()
	{
		<Module>.??_7NotificationsBrokerAsyncRpcCallWrapper_Unsubscribe@NotificationsBroker@Rpc@Exchange@Microsoft@@6B@ = ref <Module>.??_R4NotificationsBrokerAsyncRpcCallWrapper_Unsubscribe@NotificationsBroker@Rpc@Exchange@Microsoft@@6B@;
		*(ref <Module>.??_7NotificationsBrokerAsyncRpcCallWrapper_Unsubscribe@NotificationsBroker@Rpc@Exchange@Microsoft@@6B@ + 8) = (long)ldftn(Microsoft.Exchange.Rpc.BaseAsyncRpcCallWrapper<Microsoft::Exchange::Rpc::NotificationsBroker::NotificationsBrokerAsyncRpcServer>.InternalExecute);
		*(ref <Module>.??_7NotificationsBrokerAsyncRpcCallWrapper_Unsubscribe@NotificationsBroker@Rpc@Exchange@Microsoft@@6B@ + 16) = (long)ldftn(Microsoft.Exchange.Rpc.NotificationsBroker.NotificationsBrokerAsyncRpcCallWrapper_Unsubscribe.DispatchCall);
	}

	// Token: 0x06000287 RID: 647 RVA: 0x000695A8 File Offset: 0x000689A8
	internal unsafe static void ??__E??_7NotificationsBrokerAsyncRpcCallWrapper_GetNextNotification@NotificationsBroker@Rpc@Exchange@Microsoft@@6B@@@YMXXZ()
	{
		<Module>.??_7NotificationsBrokerAsyncRpcCallWrapper_GetNextNotification@NotificationsBroker@Rpc@Exchange@Microsoft@@6B@ = ref <Module>.??_R4NotificationsBrokerAsyncRpcCallWrapper_GetNextNotification@NotificationsBroker@Rpc@Exchange@Microsoft@@6B@;
		*(ref <Module>.??_7NotificationsBrokerAsyncRpcCallWrapper_GetNextNotification@NotificationsBroker@Rpc@Exchange@Microsoft@@6B@ + 8) = (long)ldftn(Microsoft.Exchange.Rpc.BaseAsyncRpcCallWrapper<Microsoft::Exchange::Rpc::NotificationsBroker::NotificationsBrokerAsyncRpcServer>.InternalExecute);
		*(ref <Module>.??_7NotificationsBrokerAsyncRpcCallWrapper_GetNextNotification@NotificationsBroker@Rpc@Exchange@Microsoft@@6B@ + 16) = (long)ldftn(Microsoft.Exchange.Rpc.NotificationsBroker.NotificationsBrokerAsyncRpcCallWrapper_GetNextNotification.DispatchCall);
	}

	// Token: 0x06000288 RID: 648 RVA: 0x00035910 File Offset: 0x00034D10
	internal unsafe static RundownQueue_NSPI_HANDLE* {ctor}(RundownQueue_NSPI_HANDLE* A_0)
	{
		<Module>.BaseRundownQueue<void\u0020*>.{ctor}(A_0);
		try
		{
			*A_0 = ref <Module>.??_7RundownQueue_NSPI_HANDLE@@6B@;
		}
		catch
		{
			<Module>.___CxxCallUnwindDtor(ldftn(BaseRundownQueue<void\u0020*>.{dtor}), A_0);
			throw;
		}
		return A_0;
	}

	// Token: 0x06000289 RID: 649 RVA: 0x00039B54 File Offset: 0x00038F54
	internal unsafe static NSPI_HANDLE_Rundown_Wrapper* {ctor}(NSPI_HANDLE_Rundown_Wrapper* A_0, void* cxh)
	{
		*A_0 = ref <Module>.??_7NSPI_HANDLE_Rundown_Wrapper@NspiServer@Rpc@Exchange@Microsoft@@6B@;
		*(A_0 + 8L) = cxh;
		return A_0;
	}

	// Token: 0x0600028A RID: 650 RVA: 0x00040C94 File Offset: 0x00040094
	internal unsafe static int InternalExecute(NSPI_HANDLE_Rundown_Wrapper* A_0)
	{
		NspiAsyncRpcServer nspiAsyncRpcServer = (NspiAsyncRpcServer)RpcServerBase.GetServerInstance(NspiAsyncRpcServer.RpcIntfHandle);
		if (nspiAsyncRpcServer != null)
		{
			IntPtr contextHandle = new IntPtr(*(A_0 + 8L));
			nspiAsyncRpcServer.ContextHandleRundown(contextHandle);
		}
		return 0;
	}

	// Token: 0x0600028B RID: 651 RVA: 0x00041394 File Offset: 0x00040794
	internal unsafe static NspiAsyncRpcCallWrapper* {ctor}(NspiAsyncRpcCallWrapper* A_0, IntPtr intfHandle)
	{
		IntPtr intPtr = intfHandle;
		*A_0 = ref <Module>.??_7?$BaseAsyncRpcCallWrapper@VNspiAsyncRpcServer@NspiServer@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 8L) = intPtr;
		*A_0 = ref <Module>.??_7NspiAsyncRpcCallWrapper@NspiServer@Rpc@Exchange@Microsoft@@6B@ + 8;
		return A_0;
	}

	// Token: 0x0600028C RID: 652 RVA: 0x0003F434 File Offset: 0x0003E834
	internal unsafe static void DispatchCall(NspiAsyncRpcCallWrapper_Bind* A_0, NspiAsyncRpcServer asyncServer, SafeRpcAsyncStateHandle asyncState)
	{
		if (*(A_0 + 16L) == 0L)
		{
			throw new InvalidHandleException("Invalid binding handle");
		}
		ulong num = (ulong)(*(A_0 + 48L));
		if (num == 0UL)
		{
			throw new CallFailedException("Invalid output parameter location");
		}
		*num = 0L;
		IntPtr bindingHandle = new IntPtr(*(A_0 + 16L));
		NspiBindFlags flags = (NspiBindFlags)(*(A_0 + 24L));
		IntPtr pState = new IntPtr(*(A_0 + 32L));
		IntPtr pServerGuid = new IntPtr(*(A_0 + 40L));
		IntPtr pContextHandle = new IntPtr(*(A_0 + 48L));
		NspiAsyncRpcState_Bind nspiAsyncRpcState_Bind = BaseAsyncRpcState<Microsoft::Exchange::Rpc::NspiServer::NspiAsyncRpcState_Bind,Microsoft::Exchange::Rpc::NspiServer::NspiAsyncRpcServer,Microsoft::Exchange::Rpc::INspiAsyncDispatch>.CreateFromPool();
		nspiAsyncRpcState_Bind.Initialize(asyncState, asyncServer, bindingHandle, flags, pState, pServerGuid, pContextHandle);
		nspiAsyncRpcState_Bind.Begin();
	}

	// Token: 0x0600028D RID: 653 RVA: 0x0004133C File Offset: 0x0004073C
	internal unsafe static NspiAsyncRpcCallWrapper_Bind* {ctor}(NspiAsyncRpcCallWrapper_Bind* A_0, void* hBinding, uint dwFlags, __MIDL_nspi_0002* pStat, __MIDL_nspi_0001* pServerGuid, void** pContextHandle)
	{
		IntPtr rpcIntfHandle = NspiAsyncRpcServer.RpcIntfHandle;
		*A_0 = ref <Module>.??_7?$BaseAsyncRpcCallWrapper@VNspiAsyncRpcServer@NspiServer@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 8L) = rpcIntfHandle;
		*A_0 = ref <Module>.??_7NspiAsyncRpcCallWrapper_Bind@NspiServer@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 16L) = hBinding;
		*(A_0 + 24L) = dwFlags;
		*(A_0 + 32L) = pStat;
		*(A_0 + 40L) = pServerGuid;
		*(A_0 + 48L) = pContextHandle;
		return A_0;
	}

	// Token: 0x0600028E RID: 654 RVA: 0x0003F4C8 File Offset: 0x0003E8C8
	internal unsafe static void DispatchCall(NspiAsyncRpcCallWrapper_Unbind* A_0, NspiAsyncRpcServer asyncServer, SafeRpcAsyncStateHandle asyncState)
	{
		ulong num = (ulong)(*(A_0 + 16L));
		if (num == 0UL)
		{
			throw new CallFailedException("Invalid output parameter location");
		}
		if (*num == 0L)
		{
			throw new InvalidHandleException("Invalid context handle");
		}
		IntPtr pContextHandle = new IntPtr(num);
		NspiUnbindFlags flags = (NspiUnbindFlags)(*(A_0 + 24L));
		NspiAsyncRpcState_Unbind nspiAsyncRpcState_Unbind = BaseAsyncRpcState<Microsoft::Exchange::Rpc::NspiServer::NspiAsyncRpcState_Unbind,Microsoft::Exchange::Rpc::NspiServer::NspiAsyncRpcServer,Microsoft::Exchange::Rpc::INspiAsyncDispatch>.CreateFromPool();
		nspiAsyncRpcState_Unbind.Initialize(asyncState, asyncServer, pContextHandle, flags);
		nspiAsyncRpcState_Unbind.Begin();
	}

	// Token: 0x0600028F RID: 655 RVA: 0x000413E8 File Offset: 0x000407E8
	internal unsafe static NspiAsyncRpcCallWrapper_Unbind* {ctor}(NspiAsyncRpcCallWrapper_Unbind* A_0, void** pContextHandle, uint dwFlags)
	{
		IntPtr rpcIntfHandle = NspiAsyncRpcServer.RpcIntfHandle;
		*A_0 = ref <Module>.??_7?$BaseAsyncRpcCallWrapper@VNspiAsyncRpcServer@NspiServer@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 8L) = rpcIntfHandle;
		*A_0 = ref <Module>.??_7NspiAsyncRpcCallWrapper_Unbind@NspiServer@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 16L) = pContextHandle;
		*(A_0 + 24L) = dwFlags;
		return A_0;
	}

	// Token: 0x06000290 RID: 656 RVA: 0x0003F520 File Offset: 0x0003E920
	internal unsafe static void DispatchCall(NspiAsyncRpcCallWrapper_UpdateStat* A_0, NspiAsyncRpcServer asyncServer, SafeRpcAsyncStateHandle asyncState)
	{
		ulong num = (ulong)(*(A_0 + 16L));
		if (num == 0UL)
		{
			throw new InvalidHandleException("Invalid context handle");
		}
		if (*(A_0 + 32L) == 0L)
		{
			throw new CallFailedException("Invalid output parameter locations");
		}
		IntPtr contextHandle = new IntPtr(num);
		NspiUpdateStatFlags flags = (NspiUpdateStatFlags)(*(A_0 + 24L));
		IntPtr pState = new IntPtr(*(A_0 + 32L));
		IntPtr pDelta = new IntPtr(*(A_0 + 40L));
		NspiAsyncRpcState_UpdateStat nspiAsyncRpcState_UpdateStat = BaseAsyncRpcState<Microsoft::Exchange::Rpc::NspiServer::NspiAsyncRpcState_UpdateStat,Microsoft::Exchange::Rpc::NspiServer::NspiAsyncRpcServer,Microsoft::Exchange::Rpc::INspiAsyncDispatch>.CreateFromPool();
		nspiAsyncRpcState_UpdateStat.Initialize(asyncState, asyncServer, contextHandle, flags, pState, pDelta);
		nspiAsyncRpcState_UpdateStat.Begin();
	}

	// Token: 0x06000291 RID: 657 RVA: 0x00041428 File Offset: 0x00040828
	internal unsafe static NspiAsyncRpcCallWrapper_UpdateStat* {ctor}(NspiAsyncRpcCallWrapper_UpdateStat* A_0, void* hContextHandle, uint dwFlags, __MIDL_nspi_0002* pStat, int* plDelta)
	{
		IntPtr rpcIntfHandle = NspiAsyncRpcServer.RpcIntfHandle;
		*A_0 = ref <Module>.??_7?$BaseAsyncRpcCallWrapper@VNspiAsyncRpcServer@NspiServer@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 8L) = rpcIntfHandle;
		*A_0 = ref <Module>.??_7NspiAsyncRpcCallWrapper_UpdateStat@NspiServer@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 16L) = hContextHandle;
		*(A_0 + 24L) = dwFlags;
		*(A_0 + 32L) = pStat;
		*(A_0 + 40L) = plDelta;
		return A_0;
	}

	// Token: 0x06000292 RID: 658 RVA: 0x0003F59C File Offset: 0x0003E99C
	internal unsafe static void DispatchCall(NspiAsyncRpcCallWrapper_QueryRows* A_0, NspiAsyncRpcServer asyncServer, SafeRpcAsyncStateHandle asyncState)
	{
		ulong num = (ulong)(*(A_0 + 16L));
		if (num == 0UL)
		{
			throw new InvalidHandleException("Invalid context handle");
		}
		if (*(A_0 + 32L) != 0L && *(A_0 + 72L) != 0L)
		{
			IntPtr contextHandle = new IntPtr(num);
			NspiQueryRowsFlags flags = (NspiQueryRowsFlags)(*(A_0 + 24L));
			IntPtr pState = new IntPtr(*(A_0 + 32L));
			IntPtr pMids = new IntPtr(*(A_0 + 48L));
			IntPtr pPropTags = new IntPtr(*(A_0 + 64L));
			IntPtr ppRows = new IntPtr(*(A_0 + 72L));
			NspiAsyncRpcState_QueryRows nspiAsyncRpcState_QueryRows = BaseAsyncRpcState<Microsoft::Exchange::Rpc::NspiServer::NspiAsyncRpcState_QueryRows,Microsoft::Exchange::Rpc::NspiServer::NspiAsyncRpcServer,Microsoft::Exchange::Rpc::INspiAsyncDispatch>.CreateFromPool();
			nspiAsyncRpcState_QueryRows.Initialize(asyncState, asyncServer, contextHandle, flags, pState, *(A_0 + 40L), pMids, *(A_0 + 56L), pPropTags, ppRows);
			nspiAsyncRpcState_QueryRows.Begin();
			return;
		}
		throw new CallFailedException("Invalid output parameter locations");
	}

	// Token: 0x06000293 RID: 659 RVA: 0x00041478 File Offset: 0x00040878
	internal unsafe static NspiAsyncRpcCallWrapper_QueryRows* {ctor}(NspiAsyncRpcCallWrapper_QueryRows* A_0, void* hContextHandle, uint dwFlags, __MIDL_nspi_0002* pStat, uint dwEphsCount, uint* lpdwEphs, uint Count, _SPropTagArray_r* pPropTags, _SRowSet_r** ppRows)
	{
		IntPtr rpcIntfHandle = NspiAsyncRpcServer.RpcIntfHandle;
		*A_0 = ref <Module>.??_7?$BaseAsyncRpcCallWrapper@VNspiAsyncRpcServer@NspiServer@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 8L) = rpcIntfHandle;
		*A_0 = ref <Module>.??_7NspiAsyncRpcCallWrapper_QueryRows@NspiServer@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 16L) = hContextHandle;
		*(A_0 + 24L) = dwFlags;
		*(A_0 + 32L) = pStat;
		*(A_0 + 40L) = dwEphsCount;
		*(A_0 + 48L) = lpdwEphs;
		*(A_0 + 56L) = Count;
		*(A_0 + 64L) = pPropTags;
		*(A_0 + 72L) = ppRows;
		return A_0;
	}

	// Token: 0x06000294 RID: 660 RVA: 0x0003F64C File Offset: 0x0003EA4C
	internal unsafe static void DispatchCall(NspiAsyncRpcCallWrapper_SeekEntries* A_0, NspiAsyncRpcServer asyncServer, SafeRpcAsyncStateHandle asyncState)
	{
		ulong num = (ulong)(*(A_0 + 16L));
		if (num == 0UL)
		{
			throw new InvalidHandleException("Invalid context handle");
		}
		if (*(A_0 + 32L) != 0L && *(A_0 + 64L) != 0L)
		{
			IntPtr contextHandle = new IntPtr(num);
			NspiSeekEntriesFlags flags = (NspiSeekEntriesFlags)(*(A_0 + 24L));
			IntPtr pState = new IntPtr(*(A_0 + 32L));
			IntPtr pTarget = new IntPtr(*(A_0 + 40L));
			IntPtr pRestriction = new IntPtr(*(A_0 + 48L));
			IntPtr pPropTags = new IntPtr(*(A_0 + 56L));
			IntPtr ppRows = new IntPtr(*(A_0 + 64L));
			NspiAsyncRpcState_SeekEntries nspiAsyncRpcState_SeekEntries = BaseAsyncRpcState<Microsoft::Exchange::Rpc::NspiServer::NspiAsyncRpcState_SeekEntries,Microsoft::Exchange::Rpc::NspiServer::NspiAsyncRpcServer,Microsoft::Exchange::Rpc::INspiAsyncDispatch>.CreateFromPool();
			nspiAsyncRpcState_SeekEntries.Initialize(asyncState, asyncServer, contextHandle, flags, pState, pTarget, pRestriction, pPropTags, ppRows);
			nspiAsyncRpcState_SeekEntries.Begin();
			return;
		}
		throw new CallFailedException("Invalid output parameter locations");
	}

	// Token: 0x06000295 RID: 661 RVA: 0x000414E8 File Offset: 0x000408E8
	internal unsafe static NspiAsyncRpcCallWrapper_SeekEntries* {ctor}(NspiAsyncRpcCallWrapper_SeekEntries* A_0, void* hContextHandle, uint dwFlags, __MIDL_nspi_0002* pStat, _SPropValue_r* pTarget, _SPropTagArray_r* Restriction, _SPropTagArray_r* pPropTags, _SRowSet_r** ppRows)
	{
		IntPtr rpcIntfHandle = NspiAsyncRpcServer.RpcIntfHandle;
		*A_0 = ref <Module>.??_7?$BaseAsyncRpcCallWrapper@VNspiAsyncRpcServer@NspiServer@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 8L) = rpcIntfHandle;
		*A_0 = ref <Module>.??_7NspiAsyncRpcCallWrapper_SeekEntries@NspiServer@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 16L) = hContextHandle;
		*(A_0 + 24L) = dwFlags;
		*(A_0 + 32L) = pStat;
		*(A_0 + 40L) = pTarget;
		*(A_0 + 48L) = Restriction;
		*(A_0 + 56L) = pPropTags;
		*(A_0 + 64L) = ppRows;
		return A_0;
	}

	// Token: 0x06000296 RID: 662 RVA: 0x0003F700 File Offset: 0x0003EB00
	internal unsafe static void DispatchCall(NspiAsyncRpcCallWrapper_GetMatches* A_0, NspiAsyncRpcServer asyncServer, SafeRpcAsyncStateHandle asyncState)
	{
		ulong num = (ulong)(*(A_0 + 16L));
		if (num == 0UL)
		{
			throw new InvalidHandleException("Invalid context handle");
		}
		if (*(A_0 + 32L) != 0L && *(A_0 + 80L) != 0L && *(A_0 + 96L) != 0L)
		{
			IntPtr contextHandle = new IntPtr(num);
			NspiGetMatchesFlags flags = (NspiGetMatchesFlags)(*(A_0 + 24L));
			IntPtr pState = new IntPtr(*(A_0 + 32L));
			IntPtr pInDNTList = new IntPtr(*(A_0 + 40L));
			IntPtr pRestriction = new IntPtr(*(A_0 + 56L));
			IntPtr pPropName = new IntPtr(*(A_0 + 64L));
			IntPtr ppDNTList = new IntPtr(*(A_0 + 80L));
			IntPtr pPropTags = new IntPtr(*(A_0 + 88L));
			IntPtr ppRows = new IntPtr(*(A_0 + 96L));
			NspiAsyncRpcState_GetMatches nspiAsyncRpcState_GetMatches = BaseAsyncRpcState<Microsoft::Exchange::Rpc::NspiServer::NspiAsyncRpcState_GetMatches,Microsoft::Exchange::Rpc::NspiServer::NspiAsyncRpcServer,Microsoft::Exchange::Rpc::INspiAsyncDispatch>.CreateFromPool();
			nspiAsyncRpcState_GetMatches.Initialize(asyncState, asyncServer, contextHandle, flags, pState, pInDNTList, *(A_0 + 48L), pRestriction, pPropName, *(A_0 + 72L), ppDNTList, pPropTags, ppRows);
			nspiAsyncRpcState_GetMatches.Begin();
			return;
		}
		throw new CallFailedException("Invalid output parameter locations");
	}

	// Token: 0x06000297 RID: 663 RVA: 0x00041550 File Offset: 0x00040950
	internal unsafe static NspiAsyncRpcCallWrapper_GetMatches* {ctor}(NspiAsyncRpcCallWrapper_GetMatches* A_0, void* hContextHandle, uint dwFlags, __MIDL_nspi_0002* pStat, _SPropTagArray_r* pInDNTList, uint ulInterfaceOptions, _SRestriction_r* Filter, _MAPINAMEID_r* lpPropName, uint ulRequested, _SPropTagArray_r** ppDNTList, _SPropTagArray_r* pPropTags, _SRowSet_r** ppRows)
	{
		IntPtr rpcIntfHandle = NspiAsyncRpcServer.RpcIntfHandle;
		*A_0 = ref <Module>.??_7?$BaseAsyncRpcCallWrapper@VNspiAsyncRpcServer@NspiServer@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 8L) = rpcIntfHandle;
		*A_0 = ref <Module>.??_7NspiAsyncRpcCallWrapper_GetMatches@NspiServer@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 16L) = hContextHandle;
		*(A_0 + 24L) = dwFlags;
		*(A_0 + 32L) = pStat;
		*(A_0 + 40L) = pInDNTList;
		*(A_0 + 48L) = ulInterfaceOptions;
		*(A_0 + 56L) = Filter;
		*(A_0 + 64L) = lpPropName;
		*(A_0 + 72L) = ulRequested;
		*(A_0 + 80L) = ppDNTList;
		*(A_0 + 88L) = pPropTags;
		*(A_0 + 96L) = ppRows;
		return A_0;
	}

	// Token: 0x06000298 RID: 664 RVA: 0x0003F7EC File Offset: 0x0003EBEC
	internal unsafe static void DispatchCall(NspiAsyncRpcCallWrapper_ResortRestriction* A_0, NspiAsyncRpcServer asyncServer, SafeRpcAsyncStateHandle asyncState)
	{
		ulong num = (ulong)(*(A_0 + 16L));
		if (num == 0UL)
		{
			throw new InvalidHandleException("Invalid context handle");
		}
		if (*(A_0 + 32L) != 0L && *(A_0 + 48L) != 0L)
		{
			IntPtr contextHandle = new IntPtr(num);
			NspiResortRestrictionFlags flags = (NspiResortRestrictionFlags)(*(A_0 + 24L));
			IntPtr pState = new IntPtr(*(A_0 + 32L));
			IntPtr pInDNTList = new IntPtr(*(A_0 + 40L));
			IntPtr ppDNTList = new IntPtr(*(A_0 + 48L));
			NspiAsyncRpcState_ResortRestriction nspiAsyncRpcState_ResortRestriction = BaseAsyncRpcState<Microsoft::Exchange::Rpc::NspiServer::NspiAsyncRpcState_ResortRestriction,Microsoft::Exchange::Rpc::NspiServer::NspiAsyncRpcServer,Microsoft::Exchange::Rpc::INspiAsyncDispatch>.CreateFromPool();
			nspiAsyncRpcState_ResortRestriction.Initialize(asyncState, asyncServer, contextHandle, flags, pState, pInDNTList, ppDNTList);
			nspiAsyncRpcState_ResortRestriction.Begin();
			return;
		}
		throw new CallFailedException("Invalid output parameter locations");
	}

	// Token: 0x06000299 RID: 665 RVA: 0x000415D8 File Offset: 0x000409D8
	internal unsafe static NspiAsyncRpcCallWrapper_ResortRestriction* {ctor}(NspiAsyncRpcCallWrapper_ResortRestriction* A_0, void* hContextHandle, uint dwFlags, __MIDL_nspi_0002* pStat, _SPropTagArray_r* pInDNTList, _SPropTagArray_r** ppOutDNTList)
	{
		IntPtr rpcIntfHandle = NspiAsyncRpcServer.RpcIntfHandle;
		*A_0 = ref <Module>.??_7?$BaseAsyncRpcCallWrapper@VNspiAsyncRpcServer@NspiServer@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 8L) = rpcIntfHandle;
		*A_0 = ref <Module>.??_7NspiAsyncRpcCallWrapper_ResortRestriction@NspiServer@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 16L) = hContextHandle;
		*(A_0 + 24L) = dwFlags;
		*(A_0 + 32L) = pStat;
		*(A_0 + 40L) = pInDNTList;
		*(A_0 + 48L) = ppOutDNTList;
		return A_0;
	}

	// Token: 0x0600029A RID: 666 RVA: 0x0003F880 File Offset: 0x0003EC80
	internal unsafe static void DispatchCall(NspiAsyncRpcCallWrapper_DNToEph* A_0, NspiAsyncRpcServer asyncServer, SafeRpcAsyncStateHandle asyncState)
	{
		ulong num = (ulong)(*(A_0 + 16L));
		if (num == 0UL)
		{
			throw new InvalidHandleException("Invalid context handle");
		}
		if (*(A_0 + 40L) == 0L)
		{
			throw new CallFailedException("Invalid output parameter locations");
		}
		IntPtr contextHandle = new IntPtr(num);
		NspiDNToEphFlags flags = (NspiDNToEphFlags)(*(A_0 + 24L));
		IntPtr pNames = new IntPtr(*(A_0 + 32L));
		IntPtr ppEphs = new IntPtr(*(A_0 + 40L));
		NspiAsyncRpcState_DNToEph nspiAsyncRpcState_DNToEph = BaseAsyncRpcState<Microsoft::Exchange::Rpc::NspiServer::NspiAsyncRpcState_DNToEph,Microsoft::Exchange::Rpc::NspiServer::NspiAsyncRpcServer,Microsoft::Exchange::Rpc::INspiAsyncDispatch>.CreateFromPool();
		nspiAsyncRpcState_DNToEph.Initialize(asyncState, asyncServer, contextHandle, flags, pNames, ppEphs);
		nspiAsyncRpcState_DNToEph.Begin();
	}

	// Token: 0x0600029B RID: 667 RVA: 0x00041630 File Offset: 0x00040A30
	internal unsafe static NspiAsyncRpcCallWrapper_DNToEph* {ctor}(NspiAsyncRpcCallWrapper_DNToEph* A_0, void* hContextHandle, uint dwFlags, _StringsArray* pNames, _SPropTagArray_r** ppEphs)
	{
		IntPtr rpcIntfHandle = NspiAsyncRpcServer.RpcIntfHandle;
		*A_0 = ref <Module>.??_7?$BaseAsyncRpcCallWrapper@VNspiAsyncRpcServer@NspiServer@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 8L) = rpcIntfHandle;
		*A_0 = ref <Module>.??_7NspiAsyncRpcCallWrapper_DNToEph@NspiServer@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 16L) = hContextHandle;
		*(A_0 + 24L) = dwFlags;
		*(A_0 + 32L) = pNames;
		*(A_0 + 40L) = ppEphs;
		return A_0;
	}

	// Token: 0x0600029C RID: 668 RVA: 0x0003F8FC File Offset: 0x0003ECFC
	internal unsafe static void DispatchCall(NspiAsyncRpcCallWrapper_GetPropList* A_0, NspiAsyncRpcServer asyncServer, SafeRpcAsyncStateHandle asyncState)
	{
		ulong num = (ulong)(*(A_0 + 16L));
		if (num == 0UL)
		{
			throw new InvalidHandleException("Invalid context handle");
		}
		if (*(A_0 + 40L) == 0L)
		{
			throw new CallFailedException("Invalid output parameter locations");
		}
		IntPtr contextHandle = new IntPtr(num);
		NspiGetPropListFlags flags = (NspiGetPropListFlags)(*(A_0 + 24L));
		IntPtr ppPropTags = new IntPtr(*(A_0 + 40L));
		NspiAsyncRpcState_GetPropList nspiAsyncRpcState_GetPropList = BaseAsyncRpcState<Microsoft::Exchange::Rpc::NspiServer::NspiAsyncRpcState_GetPropList,Microsoft::Exchange::Rpc::NspiServer::NspiAsyncRpcServer,Microsoft::Exchange::Rpc::INspiAsyncDispatch>.CreateFromPool();
		nspiAsyncRpcState_GetPropList.Initialize(asyncState, asyncServer, contextHandle, flags, *(A_0 + 28L), *(A_0 + 32L), ppPropTags);
		nspiAsyncRpcState_GetPropList.Begin();
	}

	// Token: 0x0600029D RID: 669 RVA: 0x00041680 File Offset: 0x00040A80
	internal unsafe static NspiAsyncRpcCallWrapper_GetPropList* {ctor}(NspiAsyncRpcCallWrapper_GetPropList* A_0, void* hContextHandle, uint dwFlags, uint dwEph, uint CodePage, _SPropTagArray_r** ppPropTags)
	{
		IntPtr rpcIntfHandle = NspiAsyncRpcServer.RpcIntfHandle;
		*A_0 = ref <Module>.??_7?$BaseAsyncRpcCallWrapper@VNspiAsyncRpcServer@NspiServer@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 8L) = rpcIntfHandle;
		*A_0 = ref <Module>.??_7NspiAsyncRpcCallWrapper_GetPropList@NspiServer@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 16L) = hContextHandle;
		*(A_0 + 24L) = dwFlags;
		*(A_0 + 28L) = dwEph;
		*(A_0 + 32L) = CodePage;
		*(A_0 + 40L) = ppPropTags;
		return A_0;
	}

	// Token: 0x0600029E RID: 670 RVA: 0x0003F974 File Offset: 0x0003ED74
	internal unsafe static void DispatchCall(NspiAsyncRpcCallWrapper_GetProps* A_0, NspiAsyncRpcServer asyncServer, SafeRpcAsyncStateHandle asyncState)
	{
		ulong num = (ulong)(*(A_0 + 16L));
		if (num == 0UL)
		{
			throw new InvalidHandleException("Invalid context handle");
		}
		if (*(A_0 + 48L) == 0L)
		{
			throw new CallFailedException("Invalid output parameter locations");
		}
		IntPtr contextHandle = new IntPtr(num);
		NspiGetPropsFlags flags = (NspiGetPropsFlags)(*(A_0 + 24L));
		IntPtr pState = new IntPtr(*(A_0 + 32L));
		IntPtr pPropTags = new IntPtr(*(A_0 + 40L));
		IntPtr ppRow = new IntPtr(*(A_0 + 48L));
		NspiAsyncRpcState_GetProps nspiAsyncRpcState_GetProps = BaseAsyncRpcState<Microsoft::Exchange::Rpc::NspiServer::NspiAsyncRpcState_GetProps,Microsoft::Exchange::Rpc::NspiServer::NspiAsyncRpcServer,Microsoft::Exchange::Rpc::INspiAsyncDispatch>.CreateFromPool();
		nspiAsyncRpcState_GetProps.Initialize(asyncState, asyncServer, contextHandle, flags, pState, pPropTags, ppRow);
		nspiAsyncRpcState_GetProps.Begin();
	}

	// Token: 0x0600029F RID: 671 RVA: 0x000416D8 File Offset: 0x00040AD8
	internal unsafe static NspiAsyncRpcCallWrapper_GetProps* {ctor}(NspiAsyncRpcCallWrapper_GetProps* A_0, void* hContextHandle, uint dwFlags, __MIDL_nspi_0002* pStat, _SPropTagArray_r* pPropTags, _SRow_r** ppRow)
	{
		IntPtr rpcIntfHandle = NspiAsyncRpcServer.RpcIntfHandle;
		*A_0 = ref <Module>.??_7?$BaseAsyncRpcCallWrapper@VNspiAsyncRpcServer@NspiServer@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 8L) = rpcIntfHandle;
		*A_0 = ref <Module>.??_7NspiAsyncRpcCallWrapper_GetProps@NspiServer@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 16L) = hContextHandle;
		*(A_0 + 24L) = dwFlags;
		*(A_0 + 32L) = pStat;
		*(A_0 + 40L) = pPropTags;
		*(A_0 + 48L) = ppRow;
		return A_0;
	}

	// Token: 0x060002A0 RID: 672 RVA: 0x0003F9FC File Offset: 0x0003EDFC
	internal unsafe static void DispatchCall(NspiAsyncRpcCallWrapper_CompareDNTs* A_0, NspiAsyncRpcServer asyncServer, SafeRpcAsyncStateHandle asyncState)
	{
		ulong num = (ulong)(*(A_0 + 16L));
		if (num == 0UL)
		{
			throw new InvalidHandleException("Invalid context handle");
		}
		if (*(A_0 + 48L) == 0L)
		{
			throw new CallFailedException("Invalid output parameter locations");
		}
		IntPtr contextHandle = new IntPtr(num);
		NspiCompareDNTsFlags flags = (NspiCompareDNTsFlags)(*(A_0 + 24L));
		IntPtr pState = new IntPtr(*(A_0 + 32L));
		IntPtr pResult = new IntPtr(*(A_0 + 48L));
		NspiAsyncRpcState_CompareDNTs nspiAsyncRpcState_CompareDNTs = BaseAsyncRpcState<Microsoft::Exchange::Rpc::NspiServer::NspiAsyncRpcState_CompareDNTs,Microsoft::Exchange::Rpc::NspiServer::NspiAsyncRpcServer,Microsoft::Exchange::Rpc::INspiAsyncDispatch>.CreateFromPool();
		nspiAsyncRpcState_CompareDNTs.Initialize(asyncState, asyncServer, contextHandle, flags, pState, *(A_0 + 40L), *(A_0 + 44L), pResult);
		nspiAsyncRpcState_CompareDNTs.Begin();
	}

	// Token: 0x060002A1 RID: 673 RVA: 0x00041730 File Offset: 0x00040B30
	internal unsafe static NspiAsyncRpcCallWrapper_CompareDNTs* {ctor}(NspiAsyncRpcCallWrapper_CompareDNTs* A_0, void* hContextHandle, uint dwFlags, __MIDL_nspi_0002* pStat, uint DNT1, uint DNT2, int* plResult)
	{
		IntPtr rpcIntfHandle = NspiAsyncRpcServer.RpcIntfHandle;
		*A_0 = ref <Module>.??_7?$BaseAsyncRpcCallWrapper@VNspiAsyncRpcServer@NspiServer@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 8L) = rpcIntfHandle;
		*A_0 = ref <Module>.??_7NspiAsyncRpcCallWrapper_CompareDNTs@NspiServer@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 16L) = hContextHandle;
		*(A_0 + 24L) = dwFlags;
		*(A_0 + 32L) = pStat;
		*(A_0 + 40L) = DNT1;
		*(A_0 + 44L) = DNT2;
		*(A_0 + 48L) = plResult;
		return A_0;
	}

	// Token: 0x060002A2 RID: 674 RVA: 0x0003FA84 File Offset: 0x0003EE84
	internal unsafe static void DispatchCall(NspiAsyncRpcCallWrapper_ModProps* A_0, NspiAsyncRpcServer asyncServer, SafeRpcAsyncStateHandle asyncState)
	{
		ulong num = (ulong)(*(A_0 + 16L));
		if (num == 0UL)
		{
			throw new InvalidHandleException("Invalid context handle");
		}
		IntPtr contextHandle = new IntPtr(num);
		NspiModPropsFlags flags = (NspiModPropsFlags)(*(A_0 + 24L));
		IntPtr pState = new IntPtr(*(A_0 + 32L));
		IntPtr pPropTags = new IntPtr(*(A_0 + 40L));
		IntPtr pRow = new IntPtr(*(A_0 + 48L));
		NspiAsyncRpcState_ModProps nspiAsyncRpcState_ModProps = BaseAsyncRpcState<Microsoft::Exchange::Rpc::NspiServer::NspiAsyncRpcState_ModProps,Microsoft::Exchange::Rpc::NspiServer::NspiAsyncRpcServer,Microsoft::Exchange::Rpc::INspiAsyncDispatch>.CreateFromPool();
		nspiAsyncRpcState_ModProps.Initialize(asyncState, asyncServer, contextHandle, flags, pState, pPropTags, pRow);
		nspiAsyncRpcState_ModProps.Begin();
	}

	// Token: 0x060002A3 RID: 675 RVA: 0x00041790 File Offset: 0x00040B90
	internal unsafe static NspiAsyncRpcCallWrapper_ModProps* {ctor}(NspiAsyncRpcCallWrapper_ModProps* A_0, void* hContextHandle, uint dwFlags, __MIDL_nspi_0002* pStat, _SPropTagArray_r* pPropTags, _SRow_r* pRow)
	{
		IntPtr rpcIntfHandle = NspiAsyncRpcServer.RpcIntfHandle;
		*A_0 = ref <Module>.??_7?$BaseAsyncRpcCallWrapper@VNspiAsyncRpcServer@NspiServer@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 8L) = rpcIntfHandle;
		*A_0 = ref <Module>.??_7NspiAsyncRpcCallWrapper_ModProps@NspiServer@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 16L) = hContextHandle;
		*(A_0 + 24L) = dwFlags;
		*(A_0 + 32L) = pStat;
		*(A_0 + 40L) = pPropTags;
		*(A_0 + 48L) = pRow;
		return A_0;
	}

	// Token: 0x060002A4 RID: 676 RVA: 0x0003FAFC File Offset: 0x0003EEFC
	internal unsafe static void DispatchCall(NspiAsyncRpcCallWrapper_GetHierarchyInfo* A_0, NspiAsyncRpcServer asyncServer, SafeRpcAsyncStateHandle asyncState)
	{
		ulong num = (ulong)(*(A_0 + 16L));
		if (num == 0UL)
		{
			throw new InvalidHandleException("Invalid context handle");
		}
		if (*(A_0 + 40L) != 0L && *(A_0 + 48L) != 0L)
		{
			IntPtr contextHandle = new IntPtr(num);
			NspiGetHierarchyInfoFlags flags = (NspiGetHierarchyInfoFlags)(*(A_0 + 24L));
			IntPtr pState = new IntPtr(*(A_0 + 32L));
			IntPtr pVersion = new IntPtr(*(A_0 + 40L));
			IntPtr ppRowSet = new IntPtr(*(A_0 + 48L));
			NspiAsyncRpcState_GetHierarchyInfo nspiAsyncRpcState_GetHierarchyInfo = BaseAsyncRpcState<Microsoft::Exchange::Rpc::NspiServer::NspiAsyncRpcState_GetHierarchyInfo,Microsoft::Exchange::Rpc::NspiServer::NspiAsyncRpcServer,Microsoft::Exchange::Rpc::INspiAsyncDispatch>.CreateFromPool();
			nspiAsyncRpcState_GetHierarchyInfo.Initialize(asyncState, asyncServer, contextHandle, flags, pState, pVersion, ppRowSet);
			nspiAsyncRpcState_GetHierarchyInfo.Begin();
			return;
		}
		throw new CallFailedException("Invalid output parameter locations");
	}

	// Token: 0x060002A5 RID: 677 RVA: 0x000417E8 File Offset: 0x00040BE8
	internal unsafe static NspiAsyncRpcCallWrapper_GetHierarchyInfo* {ctor}(NspiAsyncRpcCallWrapper_GetHierarchyInfo* A_0, void* hContextHandle, uint dwFlags, __MIDL_nspi_0002* pStat, uint* lpVersion, _SRowSet_r** HierTabRows)
	{
		IntPtr rpcIntfHandle = NspiAsyncRpcServer.RpcIntfHandle;
		*A_0 = ref <Module>.??_7?$BaseAsyncRpcCallWrapper@VNspiAsyncRpcServer@NspiServer@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 8L) = rpcIntfHandle;
		*A_0 = ref <Module>.??_7NspiAsyncRpcCallWrapper_GetHierarchyInfo@NspiServer@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 16L) = hContextHandle;
		*(A_0 + 24L) = dwFlags;
		*(A_0 + 32L) = pStat;
		*(A_0 + 40L) = lpVersion;
		*(A_0 + 48L) = HierTabRows;
		return A_0;
	}

	// Token: 0x060002A6 RID: 678 RVA: 0x0003FB90 File Offset: 0x0003EF90
	internal unsafe static void DispatchCall(NspiAsyncRpcCallWrapper_GetTemplateInfo* A_0, NspiAsyncRpcServer asyncServer, SafeRpcAsyncStateHandle asyncState)
	{
		ulong num = (ulong)(*(A_0 + 16L));
		if (num == 0UL)
		{
			throw new InvalidHandleException("Invalid context handle");
		}
		if (*(A_0 + 48L) == 0L)
		{
			throw new CallFailedException("Invalid output parameter locations");
		}
		IntPtr contextHandle = new IntPtr(num);
		NspiGetTemplateInfoFlags flags = (NspiGetTemplateInfoFlags)(*(A_0 + 24L));
		IntPtr pDN = new IntPtr(*(A_0 + 32L));
		IntPtr ppRow = new IntPtr(*(A_0 + 48L));
		NspiAsyncRpcState_GetTemplateInfo nspiAsyncRpcState_GetTemplateInfo = BaseAsyncRpcState<Microsoft::Exchange::Rpc::NspiServer::NspiAsyncRpcState_GetTemplateInfo,Microsoft::Exchange::Rpc::NspiServer::NspiAsyncRpcServer,Microsoft::Exchange::Rpc::INspiAsyncDispatch>.CreateFromPool();
		nspiAsyncRpcState_GetTemplateInfo.Initialize(asyncState, asyncServer, contextHandle, flags, *(A_0 + 28L), pDN, *(A_0 + 40L), *(A_0 + 44L), ppRow);
		nspiAsyncRpcState_GetTemplateInfo.Begin();
	}

	// Token: 0x060002A7 RID: 679 RVA: 0x00041840 File Offset: 0x00040C40
	internal unsafe static NspiAsyncRpcCallWrapper_GetTemplateInfo* {ctor}(NspiAsyncRpcCallWrapper_GetTemplateInfo* A_0, void* hContextHandle, uint dwFlags, uint ulType, sbyte* pDN, uint dwCodePage, uint dwLocaleID, _SRow_r** ppData)
	{
		IntPtr rpcIntfHandle = NspiAsyncRpcServer.RpcIntfHandle;
		*A_0 = ref <Module>.??_7?$BaseAsyncRpcCallWrapper@VNspiAsyncRpcServer@NspiServer@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 8L) = rpcIntfHandle;
		*A_0 = ref <Module>.??_7NspiAsyncRpcCallWrapper_GetTemplateInfo@NspiServer@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 16L) = hContextHandle;
		*(A_0 + 24L) = dwFlags;
		*(A_0 + 28L) = ulType;
		*(A_0 + 32L) = pDN;
		*(A_0 + 40L) = dwCodePage;
		*(A_0 + 44L) = dwLocaleID;
		*(A_0 + 48L) = ppData;
		return A_0;
	}

	// Token: 0x060002A8 RID: 680 RVA: 0x0003FC1C File Offset: 0x0003F01C
	internal unsafe static void DispatchCall(NspiAsyncRpcCallWrapper_ModLinkAtt* A_0, NspiAsyncRpcServer asyncServer, SafeRpcAsyncStateHandle asyncState)
	{
		ulong num = (ulong)(*(A_0 + 16L));
		if (num == 0UL)
		{
			throw new InvalidHandleException("Invalid context handle");
		}
		IntPtr contextHandle = new IntPtr(num);
		NspiModLinkAttFlags flags = (NspiModLinkAttFlags)(*(A_0 + 24L));
		IntPtr pEntryIds = new IntPtr(*(A_0 + 40L));
		NspiAsyncRpcState_ModLinkAtt nspiAsyncRpcState_ModLinkAtt = BaseAsyncRpcState<Microsoft::Exchange::Rpc::NspiServer::NspiAsyncRpcState_ModLinkAtt,Microsoft::Exchange::Rpc::NspiServer::NspiAsyncRpcServer,Microsoft::Exchange::Rpc::INspiAsyncDispatch>.CreateFromPool();
		nspiAsyncRpcState_ModLinkAtt.Initialize(asyncState, asyncServer, contextHandle, flags, *(A_0 + 28L), *(A_0 + 32L), pEntryIds);
		nspiAsyncRpcState_ModLinkAtt.Begin();
	}

	// Token: 0x060002A9 RID: 681 RVA: 0x000418A8 File Offset: 0x00040CA8
	internal unsafe static NspiAsyncRpcCallWrapper_ModLinkAtt* {ctor}(NspiAsyncRpcCallWrapper_ModLinkAtt* A_0, void* hContextHandle, uint dwFlags, uint ulPropTag, uint dwEph, _SBinaryArray_r* lpEntryIds)
	{
		IntPtr rpcIntfHandle = NspiAsyncRpcServer.RpcIntfHandle;
		*A_0 = ref <Module>.??_7?$BaseAsyncRpcCallWrapper@VNspiAsyncRpcServer@NspiServer@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 8L) = rpcIntfHandle;
		*A_0 = ref <Module>.??_7NspiAsyncRpcCallWrapper_ModLinkAtt@NspiServer@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 16L) = hContextHandle;
		*(A_0 + 24L) = dwFlags;
		*(A_0 + 28L) = ulPropTag;
		*(A_0 + 32L) = dwEph;
		*(A_0 + 40L) = lpEntryIds;
		return A_0;
	}

	// Token: 0x060002AA RID: 682 RVA: 0x0003FC80 File Offset: 0x0003F080
	internal unsafe static void DispatchCall(NspiAsyncRpcCallWrapper_DeleteEntries* A_0, NspiAsyncRpcServer asyncServer, SafeRpcAsyncStateHandle asyncState)
	{
		ulong num = (ulong)(*(A_0 + 16L));
		if (num == 0UL)
		{
			throw new InvalidHandleException("Invalid context handle");
		}
		IntPtr contextHandle = new IntPtr(num);
		NspiDeleteEntriesFlags flags = (NspiDeleteEntriesFlags)(*(A_0 + 24L));
		IntPtr pEntryIds = new IntPtr(*(A_0 + 32L));
		NspiAsyncRpcState_DeleteEntries nspiAsyncRpcState_DeleteEntries = BaseAsyncRpcState<Microsoft::Exchange::Rpc::NspiServer::NspiAsyncRpcState_DeleteEntries,Microsoft::Exchange::Rpc::NspiServer::NspiAsyncRpcServer,Microsoft::Exchange::Rpc::INspiAsyncDispatch>.CreateFromPool();
		nspiAsyncRpcState_DeleteEntries.Initialize(asyncState, asyncServer, contextHandle, flags, *(A_0 + 28L), pEntryIds);
		nspiAsyncRpcState_DeleteEntries.Begin();
	}

	// Token: 0x060002AB RID: 683 RVA: 0x00041900 File Offset: 0x00040D00
	internal unsafe static NspiAsyncRpcCallWrapper_DeleteEntries* {ctor}(NspiAsyncRpcCallWrapper_DeleteEntries* A_0, void* hContextHandle, uint dwFlags, uint dwEph, _SBinaryArray_r* lpEntryIds)
	{
		IntPtr rpcIntfHandle = NspiAsyncRpcServer.RpcIntfHandle;
		*A_0 = ref <Module>.??_7?$BaseAsyncRpcCallWrapper@VNspiAsyncRpcServer@NspiServer@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 8L) = rpcIntfHandle;
		*A_0 = ref <Module>.??_7NspiAsyncRpcCallWrapper_DeleteEntries@NspiServer@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 16L) = hContextHandle;
		*(A_0 + 24L) = dwFlags;
		*(A_0 + 28L) = dwEph;
		*(A_0 + 32L) = lpEntryIds;
		return A_0;
	}

	// Token: 0x060002AC RID: 684 RVA: 0x0003FCDC File Offset: 0x0003F0DC
	internal unsafe static void DispatchCall(NspiAsyncRpcCallWrapper_QueryColumns* A_0, NspiAsyncRpcServer asyncServer, SafeRpcAsyncStateHandle asyncState)
	{
		ulong num = (ulong)(*(A_0 + 16L));
		if (num == 0UL)
		{
			throw new InvalidHandleException("Invalid context handle");
		}
		if (*(A_0 + 32L) == 0L)
		{
			throw new CallFailedException("Invalid output parameter locations");
		}
		IntPtr contextHandle = new IntPtr(num);
		NspiQueryColumnsFlags flags = (NspiQueryColumnsFlags)(*(A_0 + 24L));
		NspiQueryColumnsMapiFlags mapiFlags = (NspiQueryColumnsMapiFlags)(*(A_0 + 28L));
		IntPtr ppColumns = new IntPtr(*(A_0 + 32L));
		NspiAsyncRpcState_QueryColumns nspiAsyncRpcState_QueryColumns = BaseAsyncRpcState<Microsoft::Exchange::Rpc::NspiServer::NspiAsyncRpcState_QueryColumns,Microsoft::Exchange::Rpc::NspiServer::NspiAsyncRpcServer,Microsoft::Exchange::Rpc::INspiAsyncDispatch>.CreateFromPool();
		nspiAsyncRpcState_QueryColumns.Initialize(asyncState, asyncServer, contextHandle, flags, mapiFlags, ppColumns);
		nspiAsyncRpcState_QueryColumns.Begin();
	}

	// Token: 0x060002AD RID: 685 RVA: 0x00041950 File Offset: 0x00040D50
	internal unsafe static NspiAsyncRpcCallWrapper_QueryColumns* {ctor}(NspiAsyncRpcCallWrapper_QueryColumns* A_0, void* hContextHandle, uint dwFlags, uint ulMapiFlags, _SPropTagArray_r** ppColumns)
	{
		IntPtr rpcIntfHandle = NspiAsyncRpcServer.RpcIntfHandle;
		*A_0 = ref <Module>.??_7?$BaseAsyncRpcCallWrapper@VNspiAsyncRpcServer@NspiServer@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 8L) = rpcIntfHandle;
		*A_0 = ref <Module>.??_7NspiAsyncRpcCallWrapper_QueryColumns@NspiServer@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 16L) = hContextHandle;
		*(A_0 + 24L) = dwFlags;
		*(A_0 + 28L) = ulMapiFlags;
		*(A_0 + 32L) = ppColumns;
		return A_0;
	}

	// Token: 0x060002AE RID: 686 RVA: 0x0003FD50 File Offset: 0x0003F150
	internal unsafe static void DispatchCall(NspiAsyncRpcCallWrapper_GetNamesFromIDs* A_0, NspiAsyncRpcServer asyncServer, SafeRpcAsyncStateHandle asyncState)
	{
		ulong num = (ulong)(*(A_0 + 16L));
		if (num == 0UL)
		{
			throw new InvalidHandleException("Invalid context handle");
		}
		if (*(A_0 + 48L) != 0L && *(A_0 + 56L) != 0L)
		{
			IntPtr contextHandle = new IntPtr(num);
			NspiGetNamesFromIDsFlags flags = (NspiGetNamesFromIDsFlags)(*(A_0 + 24L));
			IntPtr pGuid = new IntPtr(*(A_0 + 32L));
			IntPtr pPropTags = new IntPtr(*(A_0 + 40L));
			IntPtr ppReturnedPropTags = new IntPtr(*(A_0 + 48L));
			IntPtr ppNames = new IntPtr(*(A_0 + 56L));
			NspiAsyncRpcState_GetNamesFromIDs nspiAsyncRpcState_GetNamesFromIDs = BaseAsyncRpcState<Microsoft::Exchange::Rpc::NspiServer::NspiAsyncRpcState_GetNamesFromIDs,Microsoft::Exchange::Rpc::NspiServer::NspiAsyncRpcServer,Microsoft::Exchange::Rpc::INspiAsyncDispatch>.CreateFromPool();
			nspiAsyncRpcState_GetNamesFromIDs.Initialize(asyncState, asyncServer, contextHandle, flags, pGuid, pPropTags, ppReturnedPropTags, ppNames);
			nspiAsyncRpcState_GetNamesFromIDs.Begin();
			return;
		}
		throw new CallFailedException("Invalid output parameter locations");
	}

	// Token: 0x060002AF RID: 687 RVA: 0x000419A0 File Offset: 0x00040DA0
	internal unsafe static NspiAsyncRpcCallWrapper_GetNamesFromIDs* {ctor}(NspiAsyncRpcCallWrapper_GetNamesFromIDs* A_0, void* hContextHandle, uint dwFlags, __MIDL_nspi_0001* lpguid, _SPropTagArray_r* pPropTags, _SPropTagArray_r** ppReturnedPropTags, _NameIDSet_r** ppNames)
	{
		IntPtr rpcIntfHandle = NspiAsyncRpcServer.RpcIntfHandle;
		*A_0 = ref <Module>.??_7?$BaseAsyncRpcCallWrapper@VNspiAsyncRpcServer@NspiServer@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 8L) = rpcIntfHandle;
		*A_0 = ref <Module>.??_7NspiAsyncRpcCallWrapper_GetNamesFromIDs@NspiServer@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 16L) = hContextHandle;
		*(A_0 + 24L) = dwFlags;
		*(A_0 + 32L) = lpguid;
		*(A_0 + 40L) = pPropTags;
		*(A_0 + 48L) = ppReturnedPropTags;
		*(A_0 + 56L) = ppNames;
		return A_0;
	}

	// Token: 0x060002B0 RID: 688 RVA: 0x0003FDF4 File Offset: 0x0003F1F4
	internal unsafe static void DispatchCall(NspiAsyncRpcCallWrapper_GetIDsFromNames* A_0, NspiAsyncRpcServer asyncServer, SafeRpcAsyncStateHandle asyncState)
	{
		ulong num = (ulong)(*(A_0 + 16L));
		if (num == 0UL)
		{
			throw new InvalidHandleException("Invalid context handle");
		}
		if (*(A_0 + 48L) == 0L)
		{
			throw new CallFailedException("Invalid output parameter locations");
		}
		IntPtr contextHandle = new IntPtr(num);
		NspiGetIDsFromNamesFlags flags = (NspiGetIDsFromNamesFlags)(*(A_0 + 24L));
		IntPtr pNames = new IntPtr(*(A_0 + 40L));
		IntPtr ppPropTags = new IntPtr(*(A_0 + 48L));
		NspiAsyncRpcState_GetIDsFromNames nspiAsyncRpcState_GetIDsFromNames = BaseAsyncRpcState<Microsoft::Exchange::Rpc::NspiServer::NspiAsyncRpcState_GetIDsFromNames,Microsoft::Exchange::Rpc::NspiServer::NspiAsyncRpcServer,Microsoft::Exchange::Rpc::INspiAsyncDispatch>.CreateFromPool();
		nspiAsyncRpcState_GetIDsFromNames.Initialize(asyncState, asyncServer, contextHandle, flags, *(A_0 + 28L), *(A_0 + 32L), pNames, ppPropTags);
		nspiAsyncRpcState_GetIDsFromNames.Begin();
	}

	// Token: 0x060002B1 RID: 689 RVA: 0x00041A00 File Offset: 0x00040E00
	internal unsafe static NspiAsyncRpcCallWrapper_GetIDsFromNames* {ctor}(NspiAsyncRpcCallWrapper_GetIDsFromNames* A_0, void* hContextHandle, uint dwFlags, uint ulMapiFlags, uint cPropNames, _MAPINAMEID_r** pNames, _SPropTagArray_r** ppPropTags)
	{
		IntPtr rpcIntfHandle = NspiAsyncRpcServer.RpcIntfHandle;
		*A_0 = ref <Module>.??_7?$BaseAsyncRpcCallWrapper@VNspiAsyncRpcServer@NspiServer@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 8L) = rpcIntfHandle;
		*A_0 = ref <Module>.??_7NspiAsyncRpcCallWrapper_GetIDsFromNames@NspiServer@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 16L) = hContextHandle;
		*(A_0 + 24L) = dwFlags;
		*(A_0 + 28L) = ulMapiFlags;
		*(A_0 + 32L) = cPropNames;
		*(A_0 + 40L) = pNames;
		*(A_0 + 48L) = ppPropTags;
		return A_0;
	}

	// Token: 0x060002B2 RID: 690 RVA: 0x0003FE7C File Offset: 0x0003F27C
	internal unsafe static void DispatchCall(NspiAsyncRpcCallWrapper_ResolveNames* A_0, NspiAsyncRpcServer asyncServer, SafeRpcAsyncStateHandle asyncState)
	{
		ulong num = (ulong)(*(A_0 + 16L));
		if (num == 0UL)
		{
			throw new InvalidHandleException("Invalid context handle");
		}
		if (*(A_0 + 56L) != 0L && *(A_0 + 64L) != 0L)
		{
			IntPtr contextHandle = new IntPtr(num);
			NspiResolveNamesFlags flags = (NspiResolveNamesFlags)(*(A_0 + 24L));
			IntPtr pState = new IntPtr(*(A_0 + 32L));
			IntPtr pPropTags = new IntPtr(*(A_0 + 40L));
			IntPtr pNames = new IntPtr(*(A_0 + 48L));
			IntPtr ppMids = new IntPtr(*(A_0 + 56L));
			IntPtr ppRows = new IntPtr(*(A_0 + 64L));
			NspiAsyncRpcState_ResolveNames nspiAsyncRpcState_ResolveNames = BaseAsyncRpcState<Microsoft::Exchange::Rpc::NspiServer::NspiAsyncRpcState_ResolveNames,Microsoft::Exchange::Rpc::NspiServer::NspiAsyncRpcServer,Microsoft::Exchange::Rpc::INspiAsyncDispatch>.CreateFromPool();
			nspiAsyncRpcState_ResolveNames.Initialize(asyncState, asyncServer, contextHandle, flags, pState, pPropTags, pNames, ppMids, ppRows);
			nspiAsyncRpcState_ResolveNames.Begin();
			return;
		}
		throw new CallFailedException("Invalid output parameter locations");
	}

	// Token: 0x060002B3 RID: 691 RVA: 0x00041A60 File Offset: 0x00040E60
	internal unsafe static NspiAsyncRpcCallWrapper_ResolveNames* {ctor}(NspiAsyncRpcCallWrapper_ResolveNames* A_0, void* hContextHandle, uint dwFlags, __MIDL_nspi_0002* pStat, _SPropTagArray_r* pPropTags, _StringsArray* paStr, _SPropTagArray_r** ppMids, _SRowSet_r** ppRows)
	{
		IntPtr rpcIntfHandle = NspiAsyncRpcServer.RpcIntfHandle;
		*A_0 = ref <Module>.??_7?$BaseAsyncRpcCallWrapper@VNspiAsyncRpcServer@NspiServer@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 8L) = rpcIntfHandle;
		*A_0 = ref <Module>.??_7NspiAsyncRpcCallWrapper_ResolveNames@NspiServer@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 16L) = hContextHandle;
		*(A_0 + 24L) = dwFlags;
		*(A_0 + 32L) = pStat;
		*(A_0 + 40L) = pPropTags;
		*(A_0 + 48L) = paStr;
		*(A_0 + 56L) = ppMids;
		*(A_0 + 64L) = ppRows;
		return A_0;
	}

	// Token: 0x060002B4 RID: 692 RVA: 0x0003FF30 File Offset: 0x0003F330
	internal unsafe static void DispatchCall(NspiAsyncRpcCallWrapper_ResolveNamesW* A_0, NspiAsyncRpcServer asyncServer, SafeRpcAsyncStateHandle asyncState)
	{
		ulong num = (ulong)(*(A_0 + 16L));
		if (num == 0UL)
		{
			throw new InvalidHandleException("Invalid context handle");
		}
		if (*(A_0 + 56L) != 0L && *(A_0 + 64L) != 0L)
		{
			IntPtr contextHandle = new IntPtr(num);
			NspiResolveNamesFlags flags = (NspiResolveNamesFlags)(*(A_0 + 24L));
			IntPtr pState = new IntPtr(*(A_0 + 32L));
			IntPtr pPropTags = new IntPtr(*(A_0 + 40L));
			IntPtr pNames = new IntPtr(*(A_0 + 48L));
			IntPtr ppMids = new IntPtr(*(A_0 + 56L));
			IntPtr ppRows = new IntPtr(*(A_0 + 64L));
			NspiAsyncRpcState_ResolveNamesW nspiAsyncRpcState_ResolveNamesW = BaseAsyncRpcState<Microsoft::Exchange::Rpc::NspiServer::NspiAsyncRpcState_ResolveNamesW,Microsoft::Exchange::Rpc::NspiServer::NspiAsyncRpcServer,Microsoft::Exchange::Rpc::INspiAsyncDispatch>.CreateFromPool();
			nspiAsyncRpcState_ResolveNamesW.Initialize(asyncState, asyncServer, contextHandle, flags, pState, pPropTags, pNames, ppMids, ppRows);
			nspiAsyncRpcState_ResolveNamesW.Begin();
			return;
		}
		throw new CallFailedException("Invalid output parameter locations");
	}

	// Token: 0x060002B5 RID: 693 RVA: 0x00041AC8 File Offset: 0x00040EC8
	internal unsafe static NspiAsyncRpcCallWrapper_ResolveNamesW* {ctor}(NspiAsyncRpcCallWrapper_ResolveNamesW* A_0, void* hContextHandle, uint dwFlags, __MIDL_nspi_0002* pStat, _SPropTagArray_r* pPropTags, _WStringsArray* paWStr, _SPropTagArray_r** ppMids, _SRowSet_r** ppRows)
	{
		IntPtr rpcIntfHandle = NspiAsyncRpcServer.RpcIntfHandle;
		*A_0 = ref <Module>.??_7?$BaseAsyncRpcCallWrapper@VNspiAsyncRpcServer@NspiServer@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 8L) = rpcIntfHandle;
		*A_0 = ref <Module>.??_7NspiAsyncRpcCallWrapper_ResolveNamesW@NspiServer@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 16L) = hContextHandle;
		*(A_0 + 24L) = dwFlags;
		*(A_0 + 32L) = pStat;
		*(A_0 + 40L) = pPropTags;
		*(A_0 + 48L) = paWStr;
		*(A_0 + 56L) = ppMids;
		*(A_0 + 64L) = ppRows;
		return A_0;
	}

	// Token: 0x060002B6 RID: 694 RVA: 0x000413C4 File Offset: 0x000407C4
	internal unsafe static BaseAsyncRpcCallWrapper<Microsoft::Exchange::Rpc::NspiServer::NspiAsyncRpcServer>* {ctor}(BaseAsyncRpcCallWrapper<Microsoft::Exchange::Rpc::NspiServer::NspiAsyncRpcServer>* A_0, IntPtr intfHandle)
	{
		*A_0 = ref <Module>.??_7?$BaseAsyncRpcCallWrapper@VNspiAsyncRpcServer@NspiServer@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 8L) = intfHandle;
		return A_0;
	}

	// Token: 0x060002B7 RID: 695 RVA: 0x00037FFC File Offset: 0x000373FC
	internal unsafe static int InternalExecute(BaseAsyncRpcCallWrapper<Microsoft::Exchange::Rpc::NspiServer::NspiAsyncRpcServer>* A_0, SafeRpcAsyncStateHandle asyncState)
	{
		NspiAsyncRpcServer nspiAsyncRpcServer = (NspiAsyncRpcServer)RpcServerBase.GetServerInstance(*(A_0 + 8L));
		if (nspiAsyncRpcServer == null)
		{
			throw new ServerUnavailableException("AsyncServer not initialized");
		}
		calli(System.Void(System.IntPtr,Microsoft.Exchange.Rpc.NspiServer.NspiAsyncRpcServer,Microsoft.Exchange.Rpc.SafeRpcAsyncStateHandle), A_0, nspiAsyncRpcServer, asyncState, *(*A_0 + 8L));
		return 0;
	}

	// Token: 0x060002B8 RID: 696 RVA: 0x00043E00 File Offset: 0x00043200
	internal unsafe static void* __vecDelDtor(CRequestQueue<NSPI_REQUEST>* A_0, uint A_0)
	{
		if ((A_0 & 2U) != 0U)
		{
			CRequestQueue<NSPI_REQUEST>* ptr = A_0 - 8L;
			<Module>.__ehvec_dtor(A_0, 136UL, *ptr, ldftn(CRequestQueue<NSPI_REQUEST>.{dtor}));
			if ((A_0 & 1U) != 0U)
			{
				<Module>.delete(ptr);
			}
			return ptr;
		}
		<Module>.CRequestQueue<NSPI_REQUEST>.{dtor}(A_0);
		if ((A_0 & 1U) != 0U)
		{
			<Module>.delete(A_0);
		}
		return A_0;
	}

	// Token: 0x060002B9 RID: 697 RVA: 0x00040A30 File Offset: 0x0003FE30
	internal unsafe static void* __vecDelDtor(CLazyInitRequestQueue<CNSPIRequestQueue,NSPI_REQUEST,10000,1>* A_0, uint A_0)
	{
		if ((A_0 & 2U) != 0U)
		{
			CLazyInitRequestQueue<CNSPIRequestQueue,NSPI_REQUEST,10000,1>* ptr = A_0 - 8L;
			<Module>.__ehvec_dtor(A_0, 16UL, *ptr, ldftn(CLazyInitRequestQueue<CNSPIRequestQueue,NSPI_REQUEST,10000,1>.{dtor}));
			if ((A_0 & 1U) != 0U)
			{
				<Module>.delete(ptr);
			}
			return ptr;
		}
		<Module>.CLazyInitRequestQueue<CNSPIRequestQueue,NSPI_REQUEST,10000,1>.{dtor}(A_0);
		if ((A_0 & 1U) != 0U)
		{
			<Module>.delete(A_0);
		}
		return A_0;
	}

	// Token: 0x060002BA RID: 698 RVA: 0x00041B30 File Offset: 0x00040F30
	internal unsafe static void Execute<class\u0020Microsoft::Exchange::Rpc::NspiServer::SafeNspiBindRpcAsyncStateHandle>(ManagedExceptionAsyncCrashWrapper* A_0, _RPC_ASYNC_STATE* pAsyncState)
	{
		SafeNspiBindRpcAsyncStateHandle safeNspiBindRpcAsyncStateHandle = null;
		try
		{
			IntPtr handle = new IntPtr((void*)pAsyncState);
			safeNspiBindRpcAsyncStateHandle = new SafeNspiBindRpcAsyncStateHandle(handle);
			pAsyncState = null;
			int num = calli(System.Int32 modopt(System.Runtime.CompilerServices.IsLong)(System.IntPtr,Microsoft.Exchange.Rpc.SafeRpcAsyncStateHandle), A_0, safeNspiBindRpcAsyncStateHandle, *(*A_0));
			if (0 != num)
			{
				safeNspiBindRpcAsyncStateHandle.CompleteCall(num);
			}
		}
		catch (RpcException ex)
		{
			if (safeNspiBindRpcAsyncStateHandle != null)
			{
				safeNspiBindRpcAsyncStateHandle.AbortCall((uint)ex.ErrorCode);
			}
		}
		catch (FailRpcException ex2)
		{
			if (safeNspiBindRpcAsyncStateHandle != null)
			{
				safeNspiBindRpcAsyncStateHandle.CompleteCall(ex2.ErrorCode);
			}
		}
		catch (ThreadAbortException)
		{
			if (safeNspiBindRpcAsyncStateHandle != null)
			{
				safeNspiBindRpcAsyncStateHandle.AbortCall(1726U);
			}
		}
		catch (OutOfMemoryException)
		{
			if (safeNspiBindRpcAsyncStateHandle != null)
			{
				safeNspiBindRpcAsyncStateHandle.AbortCall(1130U);
			}
		}
		catch (System.Exception e)
		{
			<Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.CrashMeNow(e);
		}
		catch (object o)
		{
			<Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.CrashMeNow(o);
		}
		finally
		{
			if (pAsyncState != null)
			{
				<Module>.RpcRaiseException(1130);
			}
		}
	}

	// Token: 0x060002BB RID: 699 RVA: 0x00041C88 File Offset: 0x00041088
	internal unsafe static void Execute<class\u0020Microsoft::Exchange::Rpc::NspiServer::SafeNspiUnbindRpcAsyncStateHandle>(ManagedExceptionAsyncCrashWrapper* A_0, _RPC_ASYNC_STATE* pAsyncState)
	{
		SafeNspiUnbindRpcAsyncStateHandle safeNspiUnbindRpcAsyncStateHandle = null;
		try
		{
			IntPtr handle = new IntPtr((void*)pAsyncState);
			safeNspiUnbindRpcAsyncStateHandle = new SafeNspiUnbindRpcAsyncStateHandle(handle);
			pAsyncState = null;
			int num = calli(System.Int32 modopt(System.Runtime.CompilerServices.IsLong)(System.IntPtr,Microsoft.Exchange.Rpc.SafeRpcAsyncStateHandle), A_0, safeNspiUnbindRpcAsyncStateHandle, *(*A_0));
			if (0 != num)
			{
				safeNspiUnbindRpcAsyncStateHandle.CompleteCall(num);
			}
		}
		catch (RpcException ex)
		{
			if (safeNspiUnbindRpcAsyncStateHandle != null)
			{
				safeNspiUnbindRpcAsyncStateHandle.AbortCall((uint)ex.ErrorCode);
			}
		}
		catch (FailRpcException ex2)
		{
			if (safeNspiUnbindRpcAsyncStateHandle != null)
			{
				safeNspiUnbindRpcAsyncStateHandle.CompleteCall(ex2.ErrorCode);
			}
		}
		catch (ThreadAbortException)
		{
			if (safeNspiUnbindRpcAsyncStateHandle != null)
			{
				safeNspiUnbindRpcAsyncStateHandle.AbortCall(1726U);
			}
		}
		catch (OutOfMemoryException)
		{
			if (safeNspiUnbindRpcAsyncStateHandle != null)
			{
				safeNspiUnbindRpcAsyncStateHandle.AbortCall(1130U);
			}
		}
		catch (System.Exception e)
		{
			<Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.CrashMeNow(e);
		}
		catch (object o)
		{
			<Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.CrashMeNow(o);
		}
		finally
		{
			if (pAsyncState != null)
			{
				<Module>.RpcRaiseException(1130);
			}
		}
	}

	// Token: 0x060002BC RID: 700 RVA: 0x00041DE0 File Offset: 0x000411E0
	internal unsafe static void Execute<class\u0020Microsoft::Exchange::Rpc::NspiServer::SafeNspiUpdateStatRpcAsyncStateHandle>(ManagedExceptionAsyncCrashWrapper* A_0, _RPC_ASYNC_STATE* pAsyncState)
	{
		SafeNspiUpdateStatRpcAsyncStateHandle safeNspiUpdateStatRpcAsyncStateHandle = null;
		try
		{
			IntPtr handle = new IntPtr((void*)pAsyncState);
			safeNspiUpdateStatRpcAsyncStateHandle = new SafeNspiUpdateStatRpcAsyncStateHandle(handle);
			pAsyncState = null;
			int num = calli(System.Int32 modopt(System.Runtime.CompilerServices.IsLong)(System.IntPtr,Microsoft.Exchange.Rpc.SafeRpcAsyncStateHandle), A_0, safeNspiUpdateStatRpcAsyncStateHandle, *(*A_0));
			if (0 != num)
			{
				safeNspiUpdateStatRpcAsyncStateHandle.CompleteCall(num);
			}
		}
		catch (RpcException ex)
		{
			if (safeNspiUpdateStatRpcAsyncStateHandle != null)
			{
				safeNspiUpdateStatRpcAsyncStateHandle.AbortCall((uint)ex.ErrorCode);
			}
		}
		catch (FailRpcException ex2)
		{
			if (safeNspiUpdateStatRpcAsyncStateHandle != null)
			{
				safeNspiUpdateStatRpcAsyncStateHandle.CompleteCall(ex2.ErrorCode);
			}
		}
		catch (ThreadAbortException)
		{
			if (safeNspiUpdateStatRpcAsyncStateHandle != null)
			{
				safeNspiUpdateStatRpcAsyncStateHandle.AbortCall(1726U);
			}
		}
		catch (OutOfMemoryException)
		{
			if (safeNspiUpdateStatRpcAsyncStateHandle != null)
			{
				safeNspiUpdateStatRpcAsyncStateHandle.AbortCall(1130U);
			}
		}
		catch (System.Exception e)
		{
			<Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.CrashMeNow(e);
		}
		catch (object o)
		{
			<Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.CrashMeNow(o);
		}
		finally
		{
			if (pAsyncState != null)
			{
				<Module>.RpcRaiseException(1130);
			}
		}
	}

	// Token: 0x060002BD RID: 701 RVA: 0x00041F38 File Offset: 0x00041338
	internal unsafe static void Execute<class\u0020Microsoft::Exchange::Rpc::NspiServer::SafeNspiQueryRowsRpcAsyncStateHandle>(ManagedExceptionAsyncCrashWrapper* A_0, _RPC_ASYNC_STATE* pAsyncState)
	{
		SafeNspiQueryRowsRpcAsyncStateHandle safeNspiQueryRowsRpcAsyncStateHandle = null;
		try
		{
			IntPtr handle = new IntPtr((void*)pAsyncState);
			safeNspiQueryRowsRpcAsyncStateHandle = new SafeNspiQueryRowsRpcAsyncStateHandle(handle);
			pAsyncState = null;
			int num = calli(System.Int32 modopt(System.Runtime.CompilerServices.IsLong)(System.IntPtr,Microsoft.Exchange.Rpc.SafeRpcAsyncStateHandle), A_0, safeNspiQueryRowsRpcAsyncStateHandle, *(*A_0));
			if (0 != num)
			{
				safeNspiQueryRowsRpcAsyncStateHandle.CompleteCall(num);
			}
		}
		catch (RpcException ex)
		{
			if (safeNspiQueryRowsRpcAsyncStateHandle != null)
			{
				safeNspiQueryRowsRpcAsyncStateHandle.AbortCall((uint)ex.ErrorCode);
			}
		}
		catch (FailRpcException ex2)
		{
			if (safeNspiQueryRowsRpcAsyncStateHandle != null)
			{
				safeNspiQueryRowsRpcAsyncStateHandle.CompleteCall(ex2.ErrorCode);
			}
		}
		catch (ThreadAbortException)
		{
			if (safeNspiQueryRowsRpcAsyncStateHandle != null)
			{
				safeNspiQueryRowsRpcAsyncStateHandle.AbortCall(1726U);
			}
		}
		catch (OutOfMemoryException)
		{
			if (safeNspiQueryRowsRpcAsyncStateHandle != null)
			{
				safeNspiQueryRowsRpcAsyncStateHandle.AbortCall(1130U);
			}
		}
		catch (System.Exception e)
		{
			<Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.CrashMeNow(e);
		}
		catch (object o)
		{
			<Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.CrashMeNow(o);
		}
		finally
		{
			if (pAsyncState != null)
			{
				<Module>.RpcRaiseException(1130);
			}
		}
	}

	// Token: 0x060002BE RID: 702 RVA: 0x00042090 File Offset: 0x00041490
	internal unsafe static void Execute<class\u0020Microsoft::Exchange::Rpc::NspiServer::SafeNspiSeekEntriesRpcAsyncStateHandle>(ManagedExceptionAsyncCrashWrapper* A_0, _RPC_ASYNC_STATE* pAsyncState)
	{
		SafeNspiSeekEntriesRpcAsyncStateHandle safeNspiSeekEntriesRpcAsyncStateHandle = null;
		try
		{
			IntPtr handle = new IntPtr((void*)pAsyncState);
			safeNspiSeekEntriesRpcAsyncStateHandle = new SafeNspiSeekEntriesRpcAsyncStateHandle(handle);
			pAsyncState = null;
			int num = calli(System.Int32 modopt(System.Runtime.CompilerServices.IsLong)(System.IntPtr,Microsoft.Exchange.Rpc.SafeRpcAsyncStateHandle), A_0, safeNspiSeekEntriesRpcAsyncStateHandle, *(*A_0));
			if (0 != num)
			{
				safeNspiSeekEntriesRpcAsyncStateHandle.CompleteCall(num);
			}
		}
		catch (RpcException ex)
		{
			if (safeNspiSeekEntriesRpcAsyncStateHandle != null)
			{
				safeNspiSeekEntriesRpcAsyncStateHandle.AbortCall((uint)ex.ErrorCode);
			}
		}
		catch (FailRpcException ex2)
		{
			if (safeNspiSeekEntriesRpcAsyncStateHandle != null)
			{
				safeNspiSeekEntriesRpcAsyncStateHandle.CompleteCall(ex2.ErrorCode);
			}
		}
		catch (ThreadAbortException)
		{
			if (safeNspiSeekEntriesRpcAsyncStateHandle != null)
			{
				safeNspiSeekEntriesRpcAsyncStateHandle.AbortCall(1726U);
			}
		}
		catch (OutOfMemoryException)
		{
			if (safeNspiSeekEntriesRpcAsyncStateHandle != null)
			{
				safeNspiSeekEntriesRpcAsyncStateHandle.AbortCall(1130U);
			}
		}
		catch (System.Exception e)
		{
			<Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.CrashMeNow(e);
		}
		catch (object o)
		{
			<Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.CrashMeNow(o);
		}
		finally
		{
			if (pAsyncState != null)
			{
				<Module>.RpcRaiseException(1130);
			}
		}
	}

	// Token: 0x060002BF RID: 703 RVA: 0x000421E8 File Offset: 0x000415E8
	internal unsafe static void Execute<class\u0020Microsoft::Exchange::Rpc::NspiServer::SafeNspiGetMatchesRpcAsyncStateHandle>(ManagedExceptionAsyncCrashWrapper* A_0, _RPC_ASYNC_STATE* pAsyncState)
	{
		SafeNspiGetMatchesRpcAsyncStateHandle safeNspiGetMatchesRpcAsyncStateHandle = null;
		try
		{
			IntPtr handle = new IntPtr((void*)pAsyncState);
			safeNspiGetMatchesRpcAsyncStateHandle = new SafeNspiGetMatchesRpcAsyncStateHandle(handle);
			pAsyncState = null;
			int num = calli(System.Int32 modopt(System.Runtime.CompilerServices.IsLong)(System.IntPtr,Microsoft.Exchange.Rpc.SafeRpcAsyncStateHandle), A_0, safeNspiGetMatchesRpcAsyncStateHandle, *(*A_0));
			if (0 != num)
			{
				safeNspiGetMatchesRpcAsyncStateHandle.CompleteCall(num);
			}
		}
		catch (RpcException ex)
		{
			if (safeNspiGetMatchesRpcAsyncStateHandle != null)
			{
				safeNspiGetMatchesRpcAsyncStateHandle.AbortCall((uint)ex.ErrorCode);
			}
		}
		catch (FailRpcException ex2)
		{
			if (safeNspiGetMatchesRpcAsyncStateHandle != null)
			{
				safeNspiGetMatchesRpcAsyncStateHandle.CompleteCall(ex2.ErrorCode);
			}
		}
		catch (ThreadAbortException)
		{
			if (safeNspiGetMatchesRpcAsyncStateHandle != null)
			{
				safeNspiGetMatchesRpcAsyncStateHandle.AbortCall(1726U);
			}
		}
		catch (OutOfMemoryException)
		{
			if (safeNspiGetMatchesRpcAsyncStateHandle != null)
			{
				safeNspiGetMatchesRpcAsyncStateHandle.AbortCall(1130U);
			}
		}
		catch (System.Exception e)
		{
			<Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.CrashMeNow(e);
		}
		catch (object o)
		{
			<Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.CrashMeNow(o);
		}
		finally
		{
			if (pAsyncState != null)
			{
				<Module>.RpcRaiseException(1130);
			}
		}
	}

	// Token: 0x060002C0 RID: 704 RVA: 0x00042340 File Offset: 0x00041740
	internal unsafe static void Execute<class\u0020Microsoft::Exchange::Rpc::NspiServer::SafeNspiResortRestrictionRpcAsyncStateHandle>(ManagedExceptionAsyncCrashWrapper* A_0, _RPC_ASYNC_STATE* pAsyncState)
	{
		SafeNspiResortRestrictionRpcAsyncStateHandle safeNspiResortRestrictionRpcAsyncStateHandle = null;
		try
		{
			IntPtr handle = new IntPtr((void*)pAsyncState);
			safeNspiResortRestrictionRpcAsyncStateHandle = new SafeNspiResortRestrictionRpcAsyncStateHandle(handle);
			pAsyncState = null;
			int num = calli(System.Int32 modopt(System.Runtime.CompilerServices.IsLong)(System.IntPtr,Microsoft.Exchange.Rpc.SafeRpcAsyncStateHandle), A_0, safeNspiResortRestrictionRpcAsyncStateHandle, *(*A_0));
			if (0 != num)
			{
				safeNspiResortRestrictionRpcAsyncStateHandle.CompleteCall(num);
			}
		}
		catch (RpcException ex)
		{
			if (safeNspiResortRestrictionRpcAsyncStateHandle != null)
			{
				safeNspiResortRestrictionRpcAsyncStateHandle.AbortCall((uint)ex.ErrorCode);
			}
		}
		catch (FailRpcException ex2)
		{
			if (safeNspiResortRestrictionRpcAsyncStateHandle != null)
			{
				safeNspiResortRestrictionRpcAsyncStateHandle.CompleteCall(ex2.ErrorCode);
			}
		}
		catch (ThreadAbortException)
		{
			if (safeNspiResortRestrictionRpcAsyncStateHandle != null)
			{
				safeNspiResortRestrictionRpcAsyncStateHandle.AbortCall(1726U);
			}
		}
		catch (OutOfMemoryException)
		{
			if (safeNspiResortRestrictionRpcAsyncStateHandle != null)
			{
				safeNspiResortRestrictionRpcAsyncStateHandle.AbortCall(1130U);
			}
		}
		catch (System.Exception e)
		{
			<Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.CrashMeNow(e);
		}
		catch (object o)
		{
			<Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.CrashMeNow(o);
		}
		finally
		{
			if (pAsyncState != null)
			{
				<Module>.RpcRaiseException(1130);
			}
		}
	}

	// Token: 0x060002C1 RID: 705 RVA: 0x00042498 File Offset: 0x00041898
	internal unsafe static void Execute<class\u0020Microsoft::Exchange::Rpc::NspiServer::SafeNspiDNToEphRpcAsyncStateHandle>(ManagedExceptionAsyncCrashWrapper* A_0, _RPC_ASYNC_STATE* pAsyncState)
	{
		SafeNspiDNToEphRpcAsyncStateHandle safeNspiDNToEphRpcAsyncStateHandle = null;
		try
		{
			IntPtr handle = new IntPtr((void*)pAsyncState);
			safeNspiDNToEphRpcAsyncStateHandle = new SafeNspiDNToEphRpcAsyncStateHandle(handle);
			pAsyncState = null;
			int num = calli(System.Int32 modopt(System.Runtime.CompilerServices.IsLong)(System.IntPtr,Microsoft.Exchange.Rpc.SafeRpcAsyncStateHandle), A_0, safeNspiDNToEphRpcAsyncStateHandle, *(*A_0));
			if (0 != num)
			{
				safeNspiDNToEphRpcAsyncStateHandle.CompleteCall(num);
			}
		}
		catch (RpcException ex)
		{
			if (safeNspiDNToEphRpcAsyncStateHandle != null)
			{
				safeNspiDNToEphRpcAsyncStateHandle.AbortCall((uint)ex.ErrorCode);
			}
		}
		catch (FailRpcException ex2)
		{
			if (safeNspiDNToEphRpcAsyncStateHandle != null)
			{
				safeNspiDNToEphRpcAsyncStateHandle.CompleteCall(ex2.ErrorCode);
			}
		}
		catch (ThreadAbortException)
		{
			if (safeNspiDNToEphRpcAsyncStateHandle != null)
			{
				safeNspiDNToEphRpcAsyncStateHandle.AbortCall(1726U);
			}
		}
		catch (OutOfMemoryException)
		{
			if (safeNspiDNToEphRpcAsyncStateHandle != null)
			{
				safeNspiDNToEphRpcAsyncStateHandle.AbortCall(1130U);
			}
		}
		catch (System.Exception e)
		{
			<Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.CrashMeNow(e);
		}
		catch (object o)
		{
			<Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.CrashMeNow(o);
		}
		finally
		{
			if (pAsyncState != null)
			{
				<Module>.RpcRaiseException(1130);
			}
		}
	}

	// Token: 0x060002C2 RID: 706 RVA: 0x000425F0 File Offset: 0x000419F0
	internal unsafe static void Execute<class\u0020Microsoft::Exchange::Rpc::NspiServer::SafeNspiGetPropListRpcAsyncStateHandle>(ManagedExceptionAsyncCrashWrapper* A_0, _RPC_ASYNC_STATE* pAsyncState)
	{
		SafeNspiGetPropListRpcAsyncStateHandle safeNspiGetPropListRpcAsyncStateHandle = null;
		try
		{
			IntPtr handle = new IntPtr((void*)pAsyncState);
			safeNspiGetPropListRpcAsyncStateHandle = new SafeNspiGetPropListRpcAsyncStateHandle(handle);
			pAsyncState = null;
			int num = calli(System.Int32 modopt(System.Runtime.CompilerServices.IsLong)(System.IntPtr,Microsoft.Exchange.Rpc.SafeRpcAsyncStateHandle), A_0, safeNspiGetPropListRpcAsyncStateHandle, *(*A_0));
			if (0 != num)
			{
				safeNspiGetPropListRpcAsyncStateHandle.CompleteCall(num);
			}
		}
		catch (RpcException ex)
		{
			if (safeNspiGetPropListRpcAsyncStateHandle != null)
			{
				safeNspiGetPropListRpcAsyncStateHandle.AbortCall((uint)ex.ErrorCode);
			}
		}
		catch (FailRpcException ex2)
		{
			if (safeNspiGetPropListRpcAsyncStateHandle != null)
			{
				safeNspiGetPropListRpcAsyncStateHandle.CompleteCall(ex2.ErrorCode);
			}
		}
		catch (ThreadAbortException)
		{
			if (safeNspiGetPropListRpcAsyncStateHandle != null)
			{
				safeNspiGetPropListRpcAsyncStateHandle.AbortCall(1726U);
			}
		}
		catch (OutOfMemoryException)
		{
			if (safeNspiGetPropListRpcAsyncStateHandle != null)
			{
				safeNspiGetPropListRpcAsyncStateHandle.AbortCall(1130U);
			}
		}
		catch (System.Exception e)
		{
			<Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.CrashMeNow(e);
		}
		catch (object o)
		{
			<Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.CrashMeNow(o);
		}
		finally
		{
			if (pAsyncState != null)
			{
				<Module>.RpcRaiseException(1130);
			}
		}
	}

	// Token: 0x060002C3 RID: 707 RVA: 0x00042748 File Offset: 0x00041B48
	internal unsafe static void Execute<class\u0020Microsoft::Exchange::Rpc::NspiServer::SafeNspiGetPropsRpcAsyncStateHandle>(ManagedExceptionAsyncCrashWrapper* A_0, _RPC_ASYNC_STATE* pAsyncState)
	{
		SafeNspiGetPropsRpcAsyncStateHandle safeNspiGetPropsRpcAsyncStateHandle = null;
		try
		{
			IntPtr handle = new IntPtr((void*)pAsyncState);
			safeNspiGetPropsRpcAsyncStateHandle = new SafeNspiGetPropsRpcAsyncStateHandle(handle);
			pAsyncState = null;
			int num = calli(System.Int32 modopt(System.Runtime.CompilerServices.IsLong)(System.IntPtr,Microsoft.Exchange.Rpc.SafeRpcAsyncStateHandle), A_0, safeNspiGetPropsRpcAsyncStateHandle, *(*A_0));
			if (0 != num)
			{
				safeNspiGetPropsRpcAsyncStateHandle.CompleteCall(num);
			}
		}
		catch (RpcException ex)
		{
			if (safeNspiGetPropsRpcAsyncStateHandle != null)
			{
				safeNspiGetPropsRpcAsyncStateHandle.AbortCall((uint)ex.ErrorCode);
			}
		}
		catch (FailRpcException ex2)
		{
			if (safeNspiGetPropsRpcAsyncStateHandle != null)
			{
				safeNspiGetPropsRpcAsyncStateHandle.CompleteCall(ex2.ErrorCode);
			}
		}
		catch (ThreadAbortException)
		{
			if (safeNspiGetPropsRpcAsyncStateHandle != null)
			{
				safeNspiGetPropsRpcAsyncStateHandle.AbortCall(1726U);
			}
		}
		catch (OutOfMemoryException)
		{
			if (safeNspiGetPropsRpcAsyncStateHandle != null)
			{
				safeNspiGetPropsRpcAsyncStateHandle.AbortCall(1130U);
			}
		}
		catch (System.Exception e)
		{
			<Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.CrashMeNow(e);
		}
		catch (object o)
		{
			<Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.CrashMeNow(o);
		}
		finally
		{
			if (pAsyncState != null)
			{
				<Module>.RpcRaiseException(1130);
			}
		}
	}

	// Token: 0x060002C4 RID: 708 RVA: 0x000428A0 File Offset: 0x00041CA0
	internal unsafe static void Execute<class\u0020Microsoft::Exchange::Rpc::NspiServer::SafeNspiCompareDNTsRpcAsyncStateHandle>(ManagedExceptionAsyncCrashWrapper* A_0, _RPC_ASYNC_STATE* pAsyncState)
	{
		SafeNspiCompareDNTsRpcAsyncStateHandle safeNspiCompareDNTsRpcAsyncStateHandle = null;
		try
		{
			IntPtr handle = new IntPtr((void*)pAsyncState);
			safeNspiCompareDNTsRpcAsyncStateHandle = new SafeNspiCompareDNTsRpcAsyncStateHandle(handle);
			pAsyncState = null;
			int num = calli(System.Int32 modopt(System.Runtime.CompilerServices.IsLong)(System.IntPtr,Microsoft.Exchange.Rpc.SafeRpcAsyncStateHandle), A_0, safeNspiCompareDNTsRpcAsyncStateHandle, *(*A_0));
			if (0 != num)
			{
				safeNspiCompareDNTsRpcAsyncStateHandle.CompleteCall(num);
			}
		}
		catch (RpcException ex)
		{
			if (safeNspiCompareDNTsRpcAsyncStateHandle != null)
			{
				safeNspiCompareDNTsRpcAsyncStateHandle.AbortCall((uint)ex.ErrorCode);
			}
		}
		catch (FailRpcException ex2)
		{
			if (safeNspiCompareDNTsRpcAsyncStateHandle != null)
			{
				safeNspiCompareDNTsRpcAsyncStateHandle.CompleteCall(ex2.ErrorCode);
			}
		}
		catch (ThreadAbortException)
		{
			if (safeNspiCompareDNTsRpcAsyncStateHandle != null)
			{
				safeNspiCompareDNTsRpcAsyncStateHandle.AbortCall(1726U);
			}
		}
		catch (OutOfMemoryException)
		{
			if (safeNspiCompareDNTsRpcAsyncStateHandle != null)
			{
				safeNspiCompareDNTsRpcAsyncStateHandle.AbortCall(1130U);
			}
		}
		catch (System.Exception e)
		{
			<Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.CrashMeNow(e);
		}
		catch (object o)
		{
			<Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.CrashMeNow(o);
		}
		finally
		{
			if (pAsyncState != null)
			{
				<Module>.RpcRaiseException(1130);
			}
		}
	}

	// Token: 0x060002C5 RID: 709 RVA: 0x000429F8 File Offset: 0x00041DF8
	internal unsafe static void Execute<class\u0020Microsoft::Exchange::Rpc::NspiServer::SafeNspiModPropsRpcAsyncStateHandle>(ManagedExceptionAsyncCrashWrapper* A_0, _RPC_ASYNC_STATE* pAsyncState)
	{
		SafeNspiModPropsRpcAsyncStateHandle safeNspiModPropsRpcAsyncStateHandle = null;
		try
		{
			IntPtr handle = new IntPtr((void*)pAsyncState);
			safeNspiModPropsRpcAsyncStateHandle = new SafeNspiModPropsRpcAsyncStateHandle(handle);
			pAsyncState = null;
			int num = calli(System.Int32 modopt(System.Runtime.CompilerServices.IsLong)(System.IntPtr,Microsoft.Exchange.Rpc.SafeRpcAsyncStateHandle), A_0, safeNspiModPropsRpcAsyncStateHandle, *(*A_0));
			if (0 != num)
			{
				safeNspiModPropsRpcAsyncStateHandle.CompleteCall(num);
			}
		}
		catch (RpcException ex)
		{
			if (safeNspiModPropsRpcAsyncStateHandle != null)
			{
				safeNspiModPropsRpcAsyncStateHandle.AbortCall((uint)ex.ErrorCode);
			}
		}
		catch (FailRpcException ex2)
		{
			if (safeNspiModPropsRpcAsyncStateHandle != null)
			{
				safeNspiModPropsRpcAsyncStateHandle.CompleteCall(ex2.ErrorCode);
			}
		}
		catch (ThreadAbortException)
		{
			if (safeNspiModPropsRpcAsyncStateHandle != null)
			{
				safeNspiModPropsRpcAsyncStateHandle.AbortCall(1726U);
			}
		}
		catch (OutOfMemoryException)
		{
			if (safeNspiModPropsRpcAsyncStateHandle != null)
			{
				safeNspiModPropsRpcAsyncStateHandle.AbortCall(1130U);
			}
		}
		catch (System.Exception e)
		{
			<Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.CrashMeNow(e);
		}
		catch (object o)
		{
			<Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.CrashMeNow(o);
		}
		finally
		{
			if (pAsyncState != null)
			{
				<Module>.RpcRaiseException(1130);
			}
		}
	}

	// Token: 0x060002C6 RID: 710 RVA: 0x00042B50 File Offset: 0x00041F50
	internal unsafe static void Execute<class\u0020Microsoft::Exchange::Rpc::NspiServer::SafeNspiGetHierarchyInfoRpcAsyncStateHandle>(ManagedExceptionAsyncCrashWrapper* A_0, _RPC_ASYNC_STATE* pAsyncState)
	{
		SafeNspiGetHierarchyInfoRpcAsyncStateHandle safeNspiGetHierarchyInfoRpcAsyncStateHandle = null;
		try
		{
			IntPtr handle = new IntPtr((void*)pAsyncState);
			safeNspiGetHierarchyInfoRpcAsyncStateHandle = new SafeNspiGetHierarchyInfoRpcAsyncStateHandle(handle);
			pAsyncState = null;
			int num = calli(System.Int32 modopt(System.Runtime.CompilerServices.IsLong)(System.IntPtr,Microsoft.Exchange.Rpc.SafeRpcAsyncStateHandle), A_0, safeNspiGetHierarchyInfoRpcAsyncStateHandle, *(*A_0));
			if (0 != num)
			{
				safeNspiGetHierarchyInfoRpcAsyncStateHandle.CompleteCall(num);
			}
		}
		catch (RpcException ex)
		{
			if (safeNspiGetHierarchyInfoRpcAsyncStateHandle != null)
			{
				safeNspiGetHierarchyInfoRpcAsyncStateHandle.AbortCall((uint)ex.ErrorCode);
			}
		}
		catch (FailRpcException ex2)
		{
			if (safeNspiGetHierarchyInfoRpcAsyncStateHandle != null)
			{
				safeNspiGetHierarchyInfoRpcAsyncStateHandle.CompleteCall(ex2.ErrorCode);
			}
		}
		catch (ThreadAbortException)
		{
			if (safeNspiGetHierarchyInfoRpcAsyncStateHandle != null)
			{
				safeNspiGetHierarchyInfoRpcAsyncStateHandle.AbortCall(1726U);
			}
		}
		catch (OutOfMemoryException)
		{
			if (safeNspiGetHierarchyInfoRpcAsyncStateHandle != null)
			{
				safeNspiGetHierarchyInfoRpcAsyncStateHandle.AbortCall(1130U);
			}
		}
		catch (System.Exception e)
		{
			<Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.CrashMeNow(e);
		}
		catch (object o)
		{
			<Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.CrashMeNow(o);
		}
		finally
		{
			if (pAsyncState != null)
			{
				<Module>.RpcRaiseException(1130);
			}
		}
	}

	// Token: 0x060002C7 RID: 711 RVA: 0x00042CA8 File Offset: 0x000420A8
	internal unsafe static void Execute<class\u0020Microsoft::Exchange::Rpc::NspiServer::SafeNspiGetTemplateInfoRpcAsyncStateHandle>(ManagedExceptionAsyncCrashWrapper* A_0, _RPC_ASYNC_STATE* pAsyncState)
	{
		SafeNspiGetTemplateInfoRpcAsyncStateHandle safeNspiGetTemplateInfoRpcAsyncStateHandle = null;
		try
		{
			IntPtr handle = new IntPtr((void*)pAsyncState);
			safeNspiGetTemplateInfoRpcAsyncStateHandle = new SafeNspiGetTemplateInfoRpcAsyncStateHandle(handle);
			pAsyncState = null;
			int num = calli(System.Int32 modopt(System.Runtime.CompilerServices.IsLong)(System.IntPtr,Microsoft.Exchange.Rpc.SafeRpcAsyncStateHandle), A_0, safeNspiGetTemplateInfoRpcAsyncStateHandle, *(*A_0));
			if (0 != num)
			{
				safeNspiGetTemplateInfoRpcAsyncStateHandle.CompleteCall(num);
			}
		}
		catch (RpcException ex)
		{
			if (safeNspiGetTemplateInfoRpcAsyncStateHandle != null)
			{
				safeNspiGetTemplateInfoRpcAsyncStateHandle.AbortCall((uint)ex.ErrorCode);
			}
		}
		catch (FailRpcException ex2)
		{
			if (safeNspiGetTemplateInfoRpcAsyncStateHandle != null)
			{
				safeNspiGetTemplateInfoRpcAsyncStateHandle.CompleteCall(ex2.ErrorCode);
			}
		}
		catch (ThreadAbortException)
		{
			if (safeNspiGetTemplateInfoRpcAsyncStateHandle != null)
			{
				safeNspiGetTemplateInfoRpcAsyncStateHandle.AbortCall(1726U);
			}
		}
		catch (OutOfMemoryException)
		{
			if (safeNspiGetTemplateInfoRpcAsyncStateHandle != null)
			{
				safeNspiGetTemplateInfoRpcAsyncStateHandle.AbortCall(1130U);
			}
		}
		catch (System.Exception e)
		{
			<Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.CrashMeNow(e);
		}
		catch (object o)
		{
			<Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.CrashMeNow(o);
		}
		finally
		{
			if (pAsyncState != null)
			{
				<Module>.RpcRaiseException(1130);
			}
		}
	}

	// Token: 0x060002C8 RID: 712 RVA: 0x00042E00 File Offset: 0x00042200
	internal unsafe static void Execute<class\u0020Microsoft::Exchange::Rpc::NspiServer::SafeNspiModLinkAttRpcAsyncStateHandle>(ManagedExceptionAsyncCrashWrapper* A_0, _RPC_ASYNC_STATE* pAsyncState)
	{
		SafeNspiModLinkAttRpcAsyncStateHandle safeNspiModLinkAttRpcAsyncStateHandle = null;
		try
		{
			IntPtr handle = new IntPtr((void*)pAsyncState);
			safeNspiModLinkAttRpcAsyncStateHandle = new SafeNspiModLinkAttRpcAsyncStateHandle(handle);
			pAsyncState = null;
			int num = calli(System.Int32 modopt(System.Runtime.CompilerServices.IsLong)(System.IntPtr,Microsoft.Exchange.Rpc.SafeRpcAsyncStateHandle), A_0, safeNspiModLinkAttRpcAsyncStateHandle, *(*A_0));
			if (0 != num)
			{
				safeNspiModLinkAttRpcAsyncStateHandle.CompleteCall(num);
			}
		}
		catch (RpcException ex)
		{
			if (safeNspiModLinkAttRpcAsyncStateHandle != null)
			{
				safeNspiModLinkAttRpcAsyncStateHandle.AbortCall((uint)ex.ErrorCode);
			}
		}
		catch (FailRpcException ex2)
		{
			if (safeNspiModLinkAttRpcAsyncStateHandle != null)
			{
				safeNspiModLinkAttRpcAsyncStateHandle.CompleteCall(ex2.ErrorCode);
			}
		}
		catch (ThreadAbortException)
		{
			if (safeNspiModLinkAttRpcAsyncStateHandle != null)
			{
				safeNspiModLinkAttRpcAsyncStateHandle.AbortCall(1726U);
			}
		}
		catch (OutOfMemoryException)
		{
			if (safeNspiModLinkAttRpcAsyncStateHandle != null)
			{
				safeNspiModLinkAttRpcAsyncStateHandle.AbortCall(1130U);
			}
		}
		catch (System.Exception e)
		{
			<Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.CrashMeNow(e);
		}
		catch (object o)
		{
			<Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.CrashMeNow(o);
		}
		finally
		{
			if (pAsyncState != null)
			{
				<Module>.RpcRaiseException(1130);
			}
		}
	}

	// Token: 0x060002C9 RID: 713 RVA: 0x00042F58 File Offset: 0x00042358
	internal unsafe static void Execute<class\u0020Microsoft::Exchange::Rpc::NspiServer::SafeNspiDeleteEntriesRpcAsyncStateHandle>(ManagedExceptionAsyncCrashWrapper* A_0, _RPC_ASYNC_STATE* pAsyncState)
	{
		SafeNspiDeleteEntriesRpcAsyncStateHandle safeNspiDeleteEntriesRpcAsyncStateHandle = null;
		try
		{
			IntPtr handle = new IntPtr((void*)pAsyncState);
			safeNspiDeleteEntriesRpcAsyncStateHandle = new SafeNspiDeleteEntriesRpcAsyncStateHandle(handle);
			pAsyncState = null;
			int num = calli(System.Int32 modopt(System.Runtime.CompilerServices.IsLong)(System.IntPtr,Microsoft.Exchange.Rpc.SafeRpcAsyncStateHandle), A_0, safeNspiDeleteEntriesRpcAsyncStateHandle, *(*A_0));
			if (0 != num)
			{
				safeNspiDeleteEntriesRpcAsyncStateHandle.CompleteCall(num);
			}
		}
		catch (RpcException ex)
		{
			if (safeNspiDeleteEntriesRpcAsyncStateHandle != null)
			{
				safeNspiDeleteEntriesRpcAsyncStateHandle.AbortCall((uint)ex.ErrorCode);
			}
		}
		catch (FailRpcException ex2)
		{
			if (safeNspiDeleteEntriesRpcAsyncStateHandle != null)
			{
				safeNspiDeleteEntriesRpcAsyncStateHandle.CompleteCall(ex2.ErrorCode);
			}
		}
		catch (ThreadAbortException)
		{
			if (safeNspiDeleteEntriesRpcAsyncStateHandle != null)
			{
				safeNspiDeleteEntriesRpcAsyncStateHandle.AbortCall(1726U);
			}
		}
		catch (OutOfMemoryException)
		{
			if (safeNspiDeleteEntriesRpcAsyncStateHandle != null)
			{
				safeNspiDeleteEntriesRpcAsyncStateHandle.AbortCall(1130U);
			}
		}
		catch (System.Exception e)
		{
			<Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.CrashMeNow(e);
		}
		catch (object o)
		{
			<Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.CrashMeNow(o);
		}
		finally
		{
			if (pAsyncState != null)
			{
				<Module>.RpcRaiseException(1130);
			}
		}
	}

	// Token: 0x060002CA RID: 714 RVA: 0x000430B0 File Offset: 0x000424B0
	internal unsafe static void Execute<class\u0020Microsoft::Exchange::Rpc::NspiServer::SafeNspiQueryColumnsRpcAsyncStateHandle>(ManagedExceptionAsyncCrashWrapper* A_0, _RPC_ASYNC_STATE* pAsyncState)
	{
		SafeNspiQueryColumnsRpcAsyncStateHandle safeNspiQueryColumnsRpcAsyncStateHandle = null;
		try
		{
			IntPtr handle = new IntPtr((void*)pAsyncState);
			safeNspiQueryColumnsRpcAsyncStateHandle = new SafeNspiQueryColumnsRpcAsyncStateHandle(handle);
			pAsyncState = null;
			int num = calli(System.Int32 modopt(System.Runtime.CompilerServices.IsLong)(System.IntPtr,Microsoft.Exchange.Rpc.SafeRpcAsyncStateHandle), A_0, safeNspiQueryColumnsRpcAsyncStateHandle, *(*A_0));
			if (0 != num)
			{
				safeNspiQueryColumnsRpcAsyncStateHandle.CompleteCall(num);
			}
		}
		catch (RpcException ex)
		{
			if (safeNspiQueryColumnsRpcAsyncStateHandle != null)
			{
				safeNspiQueryColumnsRpcAsyncStateHandle.AbortCall((uint)ex.ErrorCode);
			}
		}
		catch (FailRpcException ex2)
		{
			if (safeNspiQueryColumnsRpcAsyncStateHandle != null)
			{
				safeNspiQueryColumnsRpcAsyncStateHandle.CompleteCall(ex2.ErrorCode);
			}
		}
		catch (ThreadAbortException)
		{
			if (safeNspiQueryColumnsRpcAsyncStateHandle != null)
			{
				safeNspiQueryColumnsRpcAsyncStateHandle.AbortCall(1726U);
			}
		}
		catch (OutOfMemoryException)
		{
			if (safeNspiQueryColumnsRpcAsyncStateHandle != null)
			{
				safeNspiQueryColumnsRpcAsyncStateHandle.AbortCall(1130U);
			}
		}
		catch (System.Exception e)
		{
			<Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.CrashMeNow(e);
		}
		catch (object o)
		{
			<Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.CrashMeNow(o);
		}
		finally
		{
			if (pAsyncState != null)
			{
				<Module>.RpcRaiseException(1130);
			}
		}
	}

	// Token: 0x060002CB RID: 715 RVA: 0x00043208 File Offset: 0x00042608
	internal unsafe static void Execute<class\u0020Microsoft::Exchange::Rpc::NspiServer::SafeNspiGetNamesFromIDsRpcAsyncStateHandle>(ManagedExceptionAsyncCrashWrapper* A_0, _RPC_ASYNC_STATE* pAsyncState)
	{
		SafeNspiGetNamesFromIDsRpcAsyncStateHandle safeNspiGetNamesFromIDsRpcAsyncStateHandle = null;
		try
		{
			IntPtr handle = new IntPtr((void*)pAsyncState);
			safeNspiGetNamesFromIDsRpcAsyncStateHandle = new SafeNspiGetNamesFromIDsRpcAsyncStateHandle(handle);
			pAsyncState = null;
			int num = calli(System.Int32 modopt(System.Runtime.CompilerServices.IsLong)(System.IntPtr,Microsoft.Exchange.Rpc.SafeRpcAsyncStateHandle), A_0, safeNspiGetNamesFromIDsRpcAsyncStateHandle, *(*A_0));
			if (0 != num)
			{
				safeNspiGetNamesFromIDsRpcAsyncStateHandle.CompleteCall(num);
			}
		}
		catch (RpcException ex)
		{
			if (safeNspiGetNamesFromIDsRpcAsyncStateHandle != null)
			{
				safeNspiGetNamesFromIDsRpcAsyncStateHandle.AbortCall((uint)ex.ErrorCode);
			}
		}
		catch (FailRpcException ex2)
		{
			if (safeNspiGetNamesFromIDsRpcAsyncStateHandle != null)
			{
				safeNspiGetNamesFromIDsRpcAsyncStateHandle.CompleteCall(ex2.ErrorCode);
			}
		}
		catch (ThreadAbortException)
		{
			if (safeNspiGetNamesFromIDsRpcAsyncStateHandle != null)
			{
				safeNspiGetNamesFromIDsRpcAsyncStateHandle.AbortCall(1726U);
			}
		}
		catch (OutOfMemoryException)
		{
			if (safeNspiGetNamesFromIDsRpcAsyncStateHandle != null)
			{
				safeNspiGetNamesFromIDsRpcAsyncStateHandle.AbortCall(1130U);
			}
		}
		catch (System.Exception e)
		{
			<Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.CrashMeNow(e);
		}
		catch (object o)
		{
			<Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.CrashMeNow(o);
		}
		finally
		{
			if (pAsyncState != null)
			{
				<Module>.RpcRaiseException(1130);
			}
		}
	}

	// Token: 0x060002CC RID: 716 RVA: 0x00043360 File Offset: 0x00042760
	internal unsafe static void Execute<class\u0020Microsoft::Exchange::Rpc::NspiServer::SafeNspiGetIDsFromNamesRpcAsyncStateHandle>(ManagedExceptionAsyncCrashWrapper* A_0, _RPC_ASYNC_STATE* pAsyncState)
	{
		SafeNspiGetIDsFromNamesRpcAsyncStateHandle safeNspiGetIDsFromNamesRpcAsyncStateHandle = null;
		try
		{
			IntPtr handle = new IntPtr((void*)pAsyncState);
			safeNspiGetIDsFromNamesRpcAsyncStateHandle = new SafeNspiGetIDsFromNamesRpcAsyncStateHandle(handle);
			pAsyncState = null;
			int num = calli(System.Int32 modopt(System.Runtime.CompilerServices.IsLong)(System.IntPtr,Microsoft.Exchange.Rpc.SafeRpcAsyncStateHandle), A_0, safeNspiGetIDsFromNamesRpcAsyncStateHandle, *(*A_0));
			if (0 != num)
			{
				safeNspiGetIDsFromNamesRpcAsyncStateHandle.CompleteCall(num);
			}
		}
		catch (RpcException ex)
		{
			if (safeNspiGetIDsFromNamesRpcAsyncStateHandle != null)
			{
				safeNspiGetIDsFromNamesRpcAsyncStateHandle.AbortCall((uint)ex.ErrorCode);
			}
		}
		catch (FailRpcException ex2)
		{
			if (safeNspiGetIDsFromNamesRpcAsyncStateHandle != null)
			{
				safeNspiGetIDsFromNamesRpcAsyncStateHandle.CompleteCall(ex2.ErrorCode);
			}
		}
		catch (ThreadAbortException)
		{
			if (safeNspiGetIDsFromNamesRpcAsyncStateHandle != null)
			{
				safeNspiGetIDsFromNamesRpcAsyncStateHandle.AbortCall(1726U);
			}
		}
		catch (OutOfMemoryException)
		{
			if (safeNspiGetIDsFromNamesRpcAsyncStateHandle != null)
			{
				safeNspiGetIDsFromNamesRpcAsyncStateHandle.AbortCall(1130U);
			}
		}
		catch (System.Exception e)
		{
			<Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.CrashMeNow(e);
		}
		catch (object o)
		{
			<Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.CrashMeNow(o);
		}
		finally
		{
			if (pAsyncState != null)
			{
				<Module>.RpcRaiseException(1130);
			}
		}
	}

	// Token: 0x060002CD RID: 717 RVA: 0x000434B8 File Offset: 0x000428B8
	internal unsafe static void Execute<class\u0020Microsoft::Exchange::Rpc::NspiServer::SafeNspiResolveNamesRpcAsyncStateHandle>(ManagedExceptionAsyncCrashWrapper* A_0, _RPC_ASYNC_STATE* pAsyncState)
	{
		SafeNspiResolveNamesRpcAsyncStateHandle safeNspiResolveNamesRpcAsyncStateHandle = null;
		try
		{
			IntPtr handle = new IntPtr((void*)pAsyncState);
			safeNspiResolveNamesRpcAsyncStateHandle = new SafeNspiResolveNamesRpcAsyncStateHandle(handle);
			pAsyncState = null;
			int num = calli(System.Int32 modopt(System.Runtime.CompilerServices.IsLong)(System.IntPtr,Microsoft.Exchange.Rpc.SafeRpcAsyncStateHandle), A_0, safeNspiResolveNamesRpcAsyncStateHandle, *(*A_0));
			if (0 != num)
			{
				safeNspiResolveNamesRpcAsyncStateHandle.CompleteCall(num);
			}
		}
		catch (RpcException ex)
		{
			if (safeNspiResolveNamesRpcAsyncStateHandle != null)
			{
				safeNspiResolveNamesRpcAsyncStateHandle.AbortCall((uint)ex.ErrorCode);
			}
		}
		catch (FailRpcException ex2)
		{
			if (safeNspiResolveNamesRpcAsyncStateHandle != null)
			{
				safeNspiResolveNamesRpcAsyncStateHandle.CompleteCall(ex2.ErrorCode);
			}
		}
		catch (ThreadAbortException)
		{
			if (safeNspiResolveNamesRpcAsyncStateHandle != null)
			{
				safeNspiResolveNamesRpcAsyncStateHandle.AbortCall(1726U);
			}
		}
		catch (OutOfMemoryException)
		{
			if (safeNspiResolveNamesRpcAsyncStateHandle != null)
			{
				safeNspiResolveNamesRpcAsyncStateHandle.AbortCall(1130U);
			}
		}
		catch (System.Exception e)
		{
			<Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.CrashMeNow(e);
		}
		catch (object o)
		{
			<Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.CrashMeNow(o);
		}
		finally
		{
			if (pAsyncState != null)
			{
				<Module>.RpcRaiseException(1130);
			}
		}
	}

	// Token: 0x060002CE RID: 718 RVA: 0x00043610 File Offset: 0x00042A10
	internal unsafe static void Execute<class\u0020Microsoft::Exchange::Rpc::NspiServer::SafeNspiResolveNamesWRpcAsyncStateHandle>(ManagedExceptionAsyncCrashWrapper* A_0, _RPC_ASYNC_STATE* pAsyncState)
	{
		SafeNspiResolveNamesWRpcAsyncStateHandle safeNspiResolveNamesWRpcAsyncStateHandle = null;
		try
		{
			IntPtr handle = new IntPtr((void*)pAsyncState);
			safeNspiResolveNamesWRpcAsyncStateHandle = new SafeNspiResolveNamesWRpcAsyncStateHandle(handle);
			pAsyncState = null;
			int num = calli(System.Int32 modopt(System.Runtime.CompilerServices.IsLong)(System.IntPtr,Microsoft.Exchange.Rpc.SafeRpcAsyncStateHandle), A_0, safeNspiResolveNamesWRpcAsyncStateHandle, *(*A_0));
			if (0 != num)
			{
				safeNspiResolveNamesWRpcAsyncStateHandle.CompleteCall(num);
			}
		}
		catch (RpcException ex)
		{
			if (safeNspiResolveNamesWRpcAsyncStateHandle != null)
			{
				safeNspiResolveNamesWRpcAsyncStateHandle.AbortCall((uint)ex.ErrorCode);
			}
		}
		catch (FailRpcException ex2)
		{
			if (safeNspiResolveNamesWRpcAsyncStateHandle != null)
			{
				safeNspiResolveNamesWRpcAsyncStateHandle.CompleteCall(ex2.ErrorCode);
			}
		}
		catch (ThreadAbortException)
		{
			if (safeNspiResolveNamesWRpcAsyncStateHandle != null)
			{
				safeNspiResolveNamesWRpcAsyncStateHandle.AbortCall(1726U);
			}
		}
		catch (OutOfMemoryException)
		{
			if (safeNspiResolveNamesWRpcAsyncStateHandle != null)
			{
				safeNspiResolveNamesWRpcAsyncStateHandle.AbortCall(1130U);
			}
		}
		catch (System.Exception e)
		{
			<Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.CrashMeNow(e);
		}
		catch (object o)
		{
			<Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.CrashMeNow(o);
		}
		finally
		{
			if (pAsyncState != null)
			{
				<Module>.RpcRaiseException(1130);
			}
		}
	}

	// Token: 0x060002CF RID: 719 RVA: 0x000695E0 File Offset: 0x000689E0
	internal unsafe static void ??__E??_7ManagedExceptionAsyncCrashWrapper@Rpc@Exchange@Microsoft@@6B@@@YMXXZ()
	{
		<Module>.??_7ManagedExceptionAsyncCrashWrapper@Rpc@Exchange@Microsoft@@6B@ = ref <Module>.??_R4ManagedExceptionAsyncCrashWrapper@Rpc@Exchange@Microsoft@@6B@;
		*(ref <Module>.??_7ManagedExceptionAsyncCrashWrapper@Rpc@Exchange@Microsoft@@6B@ + 8) = (long)ldftn(_purecall);
	}

	// Token: 0x060002D0 RID: 720 RVA: 0x00069608 File Offset: 0x00068A08
	internal unsafe static void ??__E??_7NspiAsyncRpcCallWrapper@NspiServer@Rpc@Exchange@Microsoft@@6B@@@YMXXZ()
	{
		<Module>.??_7NspiAsyncRpcCallWrapper@NspiServer@Rpc@Exchange@Microsoft@@6B@ = ref <Module>.??_R4NspiAsyncRpcCallWrapper@NspiServer@Rpc@Exchange@Microsoft@@6B@;
		*(ref <Module>.??_7NspiAsyncRpcCallWrapper@NspiServer@Rpc@Exchange@Microsoft@@6B@ + 8) = (long)ldftn(Microsoft.Exchange.Rpc.BaseAsyncRpcCallWrapper<Microsoft::Exchange::Rpc::NspiServer::NspiAsyncRpcServer>.InternalExecute);
		*(ref <Module>.??_7NspiAsyncRpcCallWrapper@NspiServer@Rpc@Exchange@Microsoft@@6B@ + 16) = (long)ldftn(_purecall);
	}

	// Token: 0x060002D1 RID: 721 RVA: 0x00069640 File Offset: 0x00068A40
	internal unsafe static void ??__E??_7?$BaseAsyncRpcCallWrapper@VNspiAsyncRpcServer@NspiServer@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@6B@@@YMXXZ()
	{
		<Module>.??_7?$BaseAsyncRpcCallWrapper@VNspiAsyncRpcServer@NspiServer@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@6B@ = ref <Module>.??_R4?$BaseAsyncRpcCallWrapper@VNspiAsyncRpcServer@NspiServer@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@6B@;
		*(ref <Module>.??_7?$BaseAsyncRpcCallWrapper@VNspiAsyncRpcServer@NspiServer@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@6B@ + 8) = (long)ldftn(Microsoft.Exchange.Rpc.BaseAsyncRpcCallWrapper<Microsoft::Exchange::Rpc::NspiServer::NspiAsyncRpcServer>.InternalExecute);
		*(ref <Module>.??_7?$BaseAsyncRpcCallWrapper@VNspiAsyncRpcServer@NspiServer@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@6B@ + 16) = (long)ldftn(_purecall);
	}

	// Token: 0x060002D2 RID: 722 RVA: 0x00069678 File Offset: 0x00068A78
	internal unsafe static void ??__E??_7NspiAsyncRpcCallWrapper_Bind@NspiServer@Rpc@Exchange@Microsoft@@6B@@@YMXXZ()
	{
		<Module>.??_7NspiAsyncRpcCallWrapper_Bind@NspiServer@Rpc@Exchange@Microsoft@@6B@ = ref <Module>.??_R4NspiAsyncRpcCallWrapper_Bind@NspiServer@Rpc@Exchange@Microsoft@@6B@;
		*(ref <Module>.??_7NspiAsyncRpcCallWrapper_Bind@NspiServer@Rpc@Exchange@Microsoft@@6B@ + 8) = (long)ldftn(Microsoft.Exchange.Rpc.BaseAsyncRpcCallWrapper<Microsoft::Exchange::Rpc::NspiServer::NspiAsyncRpcServer>.InternalExecute);
		*(ref <Module>.??_7NspiAsyncRpcCallWrapper_Bind@NspiServer@Rpc@Exchange@Microsoft@@6B@ + 16) = (long)ldftn(Microsoft.Exchange.Rpc.NspiServer.NspiAsyncRpcCallWrapper_Bind.DispatchCall);
	}

	// Token: 0x060002D3 RID: 723 RVA: 0x000696B0 File Offset: 0x00068AB0
	internal unsafe static void ??__E??_7NspiAsyncRpcCallWrapper_Unbind@NspiServer@Rpc@Exchange@Microsoft@@6B@@@YMXXZ()
	{
		<Module>.??_7NspiAsyncRpcCallWrapper_Unbind@NspiServer@Rpc@Exchange@Microsoft@@6B@ = ref <Module>.??_R4NspiAsyncRpcCallWrapper_Unbind@NspiServer@Rpc@Exchange@Microsoft@@6B@;
		*(ref <Module>.??_7NspiAsyncRpcCallWrapper_Unbind@NspiServer@Rpc@Exchange@Microsoft@@6B@ + 8) = (long)ldftn(Microsoft.Exchange.Rpc.BaseAsyncRpcCallWrapper<Microsoft::Exchange::Rpc::NspiServer::NspiAsyncRpcServer>.InternalExecute);
		*(ref <Module>.??_7NspiAsyncRpcCallWrapper_Unbind@NspiServer@Rpc@Exchange@Microsoft@@6B@ + 16) = (long)ldftn(Microsoft.Exchange.Rpc.NspiServer.NspiAsyncRpcCallWrapper_Unbind.DispatchCall);
	}

	// Token: 0x060002D4 RID: 724 RVA: 0x000696E8 File Offset: 0x00068AE8
	internal unsafe static void ??__E??_7NspiAsyncRpcCallWrapper_UpdateStat@NspiServer@Rpc@Exchange@Microsoft@@6B@@@YMXXZ()
	{
		<Module>.??_7NspiAsyncRpcCallWrapper_UpdateStat@NspiServer@Rpc@Exchange@Microsoft@@6B@ = ref <Module>.??_R4NspiAsyncRpcCallWrapper_UpdateStat@NspiServer@Rpc@Exchange@Microsoft@@6B@;
		*(ref <Module>.??_7NspiAsyncRpcCallWrapper_UpdateStat@NspiServer@Rpc@Exchange@Microsoft@@6B@ + 8) = (long)ldftn(Microsoft.Exchange.Rpc.BaseAsyncRpcCallWrapper<Microsoft::Exchange::Rpc::NspiServer::NspiAsyncRpcServer>.InternalExecute);
		*(ref <Module>.??_7NspiAsyncRpcCallWrapper_UpdateStat@NspiServer@Rpc@Exchange@Microsoft@@6B@ + 16) = (long)ldftn(Microsoft.Exchange.Rpc.NspiServer.NspiAsyncRpcCallWrapper_UpdateStat.DispatchCall);
	}

	// Token: 0x060002D5 RID: 725 RVA: 0x00069720 File Offset: 0x00068B20
	internal unsafe static void ??__E??_7NspiAsyncRpcCallWrapper_QueryRows@NspiServer@Rpc@Exchange@Microsoft@@6B@@@YMXXZ()
	{
		<Module>.??_7NspiAsyncRpcCallWrapper_QueryRows@NspiServer@Rpc@Exchange@Microsoft@@6B@ = ref <Module>.??_R4NspiAsyncRpcCallWrapper_QueryRows@NspiServer@Rpc@Exchange@Microsoft@@6B@;
		*(ref <Module>.??_7NspiAsyncRpcCallWrapper_QueryRows@NspiServer@Rpc@Exchange@Microsoft@@6B@ + 8) = (long)ldftn(Microsoft.Exchange.Rpc.BaseAsyncRpcCallWrapper<Microsoft::Exchange::Rpc::NspiServer::NspiAsyncRpcServer>.InternalExecute);
		*(ref <Module>.??_7NspiAsyncRpcCallWrapper_QueryRows@NspiServer@Rpc@Exchange@Microsoft@@6B@ + 16) = (long)ldftn(Microsoft.Exchange.Rpc.NspiServer.NspiAsyncRpcCallWrapper_QueryRows.DispatchCall);
	}

	// Token: 0x060002D6 RID: 726 RVA: 0x00069758 File Offset: 0x00068B58
	internal unsafe static void ??__E??_7NspiAsyncRpcCallWrapper_SeekEntries@NspiServer@Rpc@Exchange@Microsoft@@6B@@@YMXXZ()
	{
		<Module>.??_7NspiAsyncRpcCallWrapper_SeekEntries@NspiServer@Rpc@Exchange@Microsoft@@6B@ = ref <Module>.??_R4NspiAsyncRpcCallWrapper_SeekEntries@NspiServer@Rpc@Exchange@Microsoft@@6B@;
		*(ref <Module>.??_7NspiAsyncRpcCallWrapper_SeekEntries@NspiServer@Rpc@Exchange@Microsoft@@6B@ + 8) = (long)ldftn(Microsoft.Exchange.Rpc.BaseAsyncRpcCallWrapper<Microsoft::Exchange::Rpc::NspiServer::NspiAsyncRpcServer>.InternalExecute);
		*(ref <Module>.??_7NspiAsyncRpcCallWrapper_SeekEntries@NspiServer@Rpc@Exchange@Microsoft@@6B@ + 16) = (long)ldftn(Microsoft.Exchange.Rpc.NspiServer.NspiAsyncRpcCallWrapper_SeekEntries.DispatchCall);
	}

	// Token: 0x060002D7 RID: 727 RVA: 0x00069790 File Offset: 0x00068B90
	internal unsafe static void ??__E??_7NspiAsyncRpcCallWrapper_GetMatches@NspiServer@Rpc@Exchange@Microsoft@@6B@@@YMXXZ()
	{
		<Module>.??_7NspiAsyncRpcCallWrapper_GetMatches@NspiServer@Rpc@Exchange@Microsoft@@6B@ = ref <Module>.??_R4NspiAsyncRpcCallWrapper_GetMatches@NspiServer@Rpc@Exchange@Microsoft@@6B@;
		*(ref <Module>.??_7NspiAsyncRpcCallWrapper_GetMatches@NspiServer@Rpc@Exchange@Microsoft@@6B@ + 8) = (long)ldftn(Microsoft.Exchange.Rpc.BaseAsyncRpcCallWrapper<Microsoft::Exchange::Rpc::NspiServer::NspiAsyncRpcServer>.InternalExecute);
		*(ref <Module>.??_7NspiAsyncRpcCallWrapper_GetMatches@NspiServer@Rpc@Exchange@Microsoft@@6B@ + 16) = (long)ldftn(Microsoft.Exchange.Rpc.NspiServer.NspiAsyncRpcCallWrapper_GetMatches.DispatchCall);
	}

	// Token: 0x060002D8 RID: 728 RVA: 0x000697C8 File Offset: 0x00068BC8
	internal unsafe static void ??__E??_7NspiAsyncRpcCallWrapper_ResortRestriction@NspiServer@Rpc@Exchange@Microsoft@@6B@@@YMXXZ()
	{
		<Module>.??_7NspiAsyncRpcCallWrapper_ResortRestriction@NspiServer@Rpc@Exchange@Microsoft@@6B@ = ref <Module>.??_R4NspiAsyncRpcCallWrapper_ResortRestriction@NspiServer@Rpc@Exchange@Microsoft@@6B@;
		*(ref <Module>.??_7NspiAsyncRpcCallWrapper_ResortRestriction@NspiServer@Rpc@Exchange@Microsoft@@6B@ + 8) = (long)ldftn(Microsoft.Exchange.Rpc.BaseAsyncRpcCallWrapper<Microsoft::Exchange::Rpc::NspiServer::NspiAsyncRpcServer>.InternalExecute);
		*(ref <Module>.??_7NspiAsyncRpcCallWrapper_ResortRestriction@NspiServer@Rpc@Exchange@Microsoft@@6B@ + 16) = (long)ldftn(Microsoft.Exchange.Rpc.NspiServer.NspiAsyncRpcCallWrapper_ResortRestriction.DispatchCall);
	}

	// Token: 0x060002D9 RID: 729 RVA: 0x00069800 File Offset: 0x00068C00
	internal unsafe static void ??__E??_7NspiAsyncRpcCallWrapper_DNToEph@NspiServer@Rpc@Exchange@Microsoft@@6B@@@YMXXZ()
	{
		<Module>.??_7NspiAsyncRpcCallWrapper_DNToEph@NspiServer@Rpc@Exchange@Microsoft@@6B@ = ref <Module>.??_R4NspiAsyncRpcCallWrapper_DNToEph@NspiServer@Rpc@Exchange@Microsoft@@6B@;
		*(ref <Module>.??_7NspiAsyncRpcCallWrapper_DNToEph@NspiServer@Rpc@Exchange@Microsoft@@6B@ + 8) = (long)ldftn(Microsoft.Exchange.Rpc.BaseAsyncRpcCallWrapper<Microsoft::Exchange::Rpc::NspiServer::NspiAsyncRpcServer>.InternalExecute);
		*(ref <Module>.??_7NspiAsyncRpcCallWrapper_DNToEph@NspiServer@Rpc@Exchange@Microsoft@@6B@ + 16) = (long)ldftn(Microsoft.Exchange.Rpc.NspiServer.NspiAsyncRpcCallWrapper_DNToEph.DispatchCall);
	}

	// Token: 0x060002DA RID: 730 RVA: 0x00069838 File Offset: 0x00068C38
	internal unsafe static void ??__E??_7NspiAsyncRpcCallWrapper_GetPropList@NspiServer@Rpc@Exchange@Microsoft@@6B@@@YMXXZ()
	{
		<Module>.??_7NspiAsyncRpcCallWrapper_GetPropList@NspiServer@Rpc@Exchange@Microsoft@@6B@ = ref <Module>.??_R4NspiAsyncRpcCallWrapper_GetPropList@NspiServer@Rpc@Exchange@Microsoft@@6B@;
		*(ref <Module>.??_7NspiAsyncRpcCallWrapper_GetPropList@NspiServer@Rpc@Exchange@Microsoft@@6B@ + 8) = (long)ldftn(Microsoft.Exchange.Rpc.BaseAsyncRpcCallWrapper<Microsoft::Exchange::Rpc::NspiServer::NspiAsyncRpcServer>.InternalExecute);
		*(ref <Module>.??_7NspiAsyncRpcCallWrapper_GetPropList@NspiServer@Rpc@Exchange@Microsoft@@6B@ + 16) = (long)ldftn(Microsoft.Exchange.Rpc.NspiServer.NspiAsyncRpcCallWrapper_GetPropList.DispatchCall);
	}

	// Token: 0x060002DB RID: 731 RVA: 0x00069870 File Offset: 0x00068C70
	internal unsafe static void ??__E??_7NspiAsyncRpcCallWrapper_GetProps@NspiServer@Rpc@Exchange@Microsoft@@6B@@@YMXXZ()
	{
		<Module>.??_7NspiAsyncRpcCallWrapper_GetProps@NspiServer@Rpc@Exchange@Microsoft@@6B@ = ref <Module>.??_R4NspiAsyncRpcCallWrapper_GetProps@NspiServer@Rpc@Exchange@Microsoft@@6B@;
		*(ref <Module>.??_7NspiAsyncRpcCallWrapper_GetProps@NspiServer@Rpc@Exchange@Microsoft@@6B@ + 8) = (long)ldftn(Microsoft.Exchange.Rpc.BaseAsyncRpcCallWrapper<Microsoft::Exchange::Rpc::NspiServer::NspiAsyncRpcServer>.InternalExecute);
		*(ref <Module>.??_7NspiAsyncRpcCallWrapper_GetProps@NspiServer@Rpc@Exchange@Microsoft@@6B@ + 16) = (long)ldftn(Microsoft.Exchange.Rpc.NspiServer.NspiAsyncRpcCallWrapper_GetProps.DispatchCall);
	}

	// Token: 0x060002DC RID: 732 RVA: 0x000698A8 File Offset: 0x00068CA8
	internal unsafe static void ??__E??_7NspiAsyncRpcCallWrapper_CompareDNTs@NspiServer@Rpc@Exchange@Microsoft@@6B@@@YMXXZ()
	{
		<Module>.??_7NspiAsyncRpcCallWrapper_CompareDNTs@NspiServer@Rpc@Exchange@Microsoft@@6B@ = ref <Module>.??_R4NspiAsyncRpcCallWrapper_CompareDNTs@NspiServer@Rpc@Exchange@Microsoft@@6B@;
		*(ref <Module>.??_7NspiAsyncRpcCallWrapper_CompareDNTs@NspiServer@Rpc@Exchange@Microsoft@@6B@ + 8) = (long)ldftn(Microsoft.Exchange.Rpc.BaseAsyncRpcCallWrapper<Microsoft::Exchange::Rpc::NspiServer::NspiAsyncRpcServer>.InternalExecute);
		*(ref <Module>.??_7NspiAsyncRpcCallWrapper_CompareDNTs@NspiServer@Rpc@Exchange@Microsoft@@6B@ + 16) = (long)ldftn(Microsoft.Exchange.Rpc.NspiServer.NspiAsyncRpcCallWrapper_CompareDNTs.DispatchCall);
	}

	// Token: 0x060002DD RID: 733 RVA: 0x000698E0 File Offset: 0x00068CE0
	internal unsafe static void ??__E??_7NspiAsyncRpcCallWrapper_ModProps@NspiServer@Rpc@Exchange@Microsoft@@6B@@@YMXXZ()
	{
		<Module>.??_7NspiAsyncRpcCallWrapper_ModProps@NspiServer@Rpc@Exchange@Microsoft@@6B@ = ref <Module>.??_R4NspiAsyncRpcCallWrapper_ModProps@NspiServer@Rpc@Exchange@Microsoft@@6B@;
		*(ref <Module>.??_7NspiAsyncRpcCallWrapper_ModProps@NspiServer@Rpc@Exchange@Microsoft@@6B@ + 8) = (long)ldftn(Microsoft.Exchange.Rpc.BaseAsyncRpcCallWrapper<Microsoft::Exchange::Rpc::NspiServer::NspiAsyncRpcServer>.InternalExecute);
		*(ref <Module>.??_7NspiAsyncRpcCallWrapper_ModProps@NspiServer@Rpc@Exchange@Microsoft@@6B@ + 16) = (long)ldftn(Microsoft.Exchange.Rpc.NspiServer.NspiAsyncRpcCallWrapper_ModProps.DispatchCall);
	}

	// Token: 0x060002DE RID: 734 RVA: 0x00069918 File Offset: 0x00068D18
	internal unsafe static void ??__E??_7NspiAsyncRpcCallWrapper_GetHierarchyInfo@NspiServer@Rpc@Exchange@Microsoft@@6B@@@YMXXZ()
	{
		<Module>.??_7NspiAsyncRpcCallWrapper_GetHierarchyInfo@NspiServer@Rpc@Exchange@Microsoft@@6B@ = ref <Module>.??_R4NspiAsyncRpcCallWrapper_GetHierarchyInfo@NspiServer@Rpc@Exchange@Microsoft@@6B@;
		*(ref <Module>.??_7NspiAsyncRpcCallWrapper_GetHierarchyInfo@NspiServer@Rpc@Exchange@Microsoft@@6B@ + 8) = (long)ldftn(Microsoft.Exchange.Rpc.BaseAsyncRpcCallWrapper<Microsoft::Exchange::Rpc::NspiServer::NspiAsyncRpcServer>.InternalExecute);
		*(ref <Module>.??_7NspiAsyncRpcCallWrapper_GetHierarchyInfo@NspiServer@Rpc@Exchange@Microsoft@@6B@ + 16) = (long)ldftn(Microsoft.Exchange.Rpc.NspiServer.NspiAsyncRpcCallWrapper_GetHierarchyInfo.DispatchCall);
	}

	// Token: 0x060002DF RID: 735 RVA: 0x00069950 File Offset: 0x00068D50
	internal unsafe static void ??__E??_7NspiAsyncRpcCallWrapper_GetTemplateInfo@NspiServer@Rpc@Exchange@Microsoft@@6B@@@YMXXZ()
	{
		<Module>.??_7NspiAsyncRpcCallWrapper_GetTemplateInfo@NspiServer@Rpc@Exchange@Microsoft@@6B@ = ref <Module>.??_R4NspiAsyncRpcCallWrapper_GetTemplateInfo@NspiServer@Rpc@Exchange@Microsoft@@6B@;
		*(ref <Module>.??_7NspiAsyncRpcCallWrapper_GetTemplateInfo@NspiServer@Rpc@Exchange@Microsoft@@6B@ + 8) = (long)ldftn(Microsoft.Exchange.Rpc.BaseAsyncRpcCallWrapper<Microsoft::Exchange::Rpc::NspiServer::NspiAsyncRpcServer>.InternalExecute);
		*(ref <Module>.??_7NspiAsyncRpcCallWrapper_GetTemplateInfo@NspiServer@Rpc@Exchange@Microsoft@@6B@ + 16) = (long)ldftn(Microsoft.Exchange.Rpc.NspiServer.NspiAsyncRpcCallWrapper_GetTemplateInfo.DispatchCall);
	}

	// Token: 0x060002E0 RID: 736 RVA: 0x00069988 File Offset: 0x00068D88
	internal unsafe static void ??__E??_7NspiAsyncRpcCallWrapper_ModLinkAtt@NspiServer@Rpc@Exchange@Microsoft@@6B@@@YMXXZ()
	{
		<Module>.??_7NspiAsyncRpcCallWrapper_ModLinkAtt@NspiServer@Rpc@Exchange@Microsoft@@6B@ = ref <Module>.??_R4NspiAsyncRpcCallWrapper_ModLinkAtt@NspiServer@Rpc@Exchange@Microsoft@@6B@;
		*(ref <Module>.??_7NspiAsyncRpcCallWrapper_ModLinkAtt@NspiServer@Rpc@Exchange@Microsoft@@6B@ + 8) = (long)ldftn(Microsoft.Exchange.Rpc.BaseAsyncRpcCallWrapper<Microsoft::Exchange::Rpc::NspiServer::NspiAsyncRpcServer>.InternalExecute);
		*(ref <Module>.??_7NspiAsyncRpcCallWrapper_ModLinkAtt@NspiServer@Rpc@Exchange@Microsoft@@6B@ + 16) = (long)ldftn(Microsoft.Exchange.Rpc.NspiServer.NspiAsyncRpcCallWrapper_ModLinkAtt.DispatchCall);
	}

	// Token: 0x060002E1 RID: 737 RVA: 0x000699C0 File Offset: 0x00068DC0
	internal unsafe static void ??__E??_7NspiAsyncRpcCallWrapper_DeleteEntries@NspiServer@Rpc@Exchange@Microsoft@@6B@@@YMXXZ()
	{
		<Module>.??_7NspiAsyncRpcCallWrapper_DeleteEntries@NspiServer@Rpc@Exchange@Microsoft@@6B@ = ref <Module>.??_R4NspiAsyncRpcCallWrapper_DeleteEntries@NspiServer@Rpc@Exchange@Microsoft@@6B@;
		*(ref <Module>.??_7NspiAsyncRpcCallWrapper_DeleteEntries@NspiServer@Rpc@Exchange@Microsoft@@6B@ + 8) = (long)ldftn(Microsoft.Exchange.Rpc.BaseAsyncRpcCallWrapper<Microsoft::Exchange::Rpc::NspiServer::NspiAsyncRpcServer>.InternalExecute);
		*(ref <Module>.??_7NspiAsyncRpcCallWrapper_DeleteEntries@NspiServer@Rpc@Exchange@Microsoft@@6B@ + 16) = (long)ldftn(Microsoft.Exchange.Rpc.NspiServer.NspiAsyncRpcCallWrapper_DeleteEntries.DispatchCall);
	}

	// Token: 0x060002E2 RID: 738 RVA: 0x000699F8 File Offset: 0x00068DF8
	internal unsafe static void ??__E??_7NspiAsyncRpcCallWrapper_QueryColumns@NspiServer@Rpc@Exchange@Microsoft@@6B@@@YMXXZ()
	{
		<Module>.??_7NspiAsyncRpcCallWrapper_QueryColumns@NspiServer@Rpc@Exchange@Microsoft@@6B@ = ref <Module>.??_R4NspiAsyncRpcCallWrapper_QueryColumns@NspiServer@Rpc@Exchange@Microsoft@@6B@;
		*(ref <Module>.??_7NspiAsyncRpcCallWrapper_QueryColumns@NspiServer@Rpc@Exchange@Microsoft@@6B@ + 8) = (long)ldftn(Microsoft.Exchange.Rpc.BaseAsyncRpcCallWrapper<Microsoft::Exchange::Rpc::NspiServer::NspiAsyncRpcServer>.InternalExecute);
		*(ref <Module>.??_7NspiAsyncRpcCallWrapper_QueryColumns@NspiServer@Rpc@Exchange@Microsoft@@6B@ + 16) = (long)ldftn(Microsoft.Exchange.Rpc.NspiServer.NspiAsyncRpcCallWrapper_QueryColumns.DispatchCall);
	}

	// Token: 0x060002E3 RID: 739 RVA: 0x00069A30 File Offset: 0x00068E30
	internal unsafe static void ??__E??_7NspiAsyncRpcCallWrapper_GetNamesFromIDs@NspiServer@Rpc@Exchange@Microsoft@@6B@@@YMXXZ()
	{
		<Module>.??_7NspiAsyncRpcCallWrapper_GetNamesFromIDs@NspiServer@Rpc@Exchange@Microsoft@@6B@ = ref <Module>.??_R4NspiAsyncRpcCallWrapper_GetNamesFromIDs@NspiServer@Rpc@Exchange@Microsoft@@6B@;
		*(ref <Module>.??_7NspiAsyncRpcCallWrapper_GetNamesFromIDs@NspiServer@Rpc@Exchange@Microsoft@@6B@ + 8) = (long)ldftn(Microsoft.Exchange.Rpc.BaseAsyncRpcCallWrapper<Microsoft::Exchange::Rpc::NspiServer::NspiAsyncRpcServer>.InternalExecute);
		*(ref <Module>.??_7NspiAsyncRpcCallWrapper_GetNamesFromIDs@NspiServer@Rpc@Exchange@Microsoft@@6B@ + 16) = (long)ldftn(Microsoft.Exchange.Rpc.NspiServer.NspiAsyncRpcCallWrapper_GetNamesFromIDs.DispatchCall);
	}

	// Token: 0x060002E4 RID: 740 RVA: 0x00069A68 File Offset: 0x00068E68
	internal unsafe static void ??__E??_7NspiAsyncRpcCallWrapper_GetIDsFromNames@NspiServer@Rpc@Exchange@Microsoft@@6B@@@YMXXZ()
	{
		<Module>.??_7NspiAsyncRpcCallWrapper_GetIDsFromNames@NspiServer@Rpc@Exchange@Microsoft@@6B@ = ref <Module>.??_R4NspiAsyncRpcCallWrapper_GetIDsFromNames@NspiServer@Rpc@Exchange@Microsoft@@6B@;
		*(ref <Module>.??_7NspiAsyncRpcCallWrapper_GetIDsFromNames@NspiServer@Rpc@Exchange@Microsoft@@6B@ + 8) = (long)ldftn(Microsoft.Exchange.Rpc.BaseAsyncRpcCallWrapper<Microsoft::Exchange::Rpc::NspiServer::NspiAsyncRpcServer>.InternalExecute);
		*(ref <Module>.??_7NspiAsyncRpcCallWrapper_GetIDsFromNames@NspiServer@Rpc@Exchange@Microsoft@@6B@ + 16) = (long)ldftn(Microsoft.Exchange.Rpc.NspiServer.NspiAsyncRpcCallWrapper_GetIDsFromNames.DispatchCall);
	}

	// Token: 0x060002E5 RID: 741 RVA: 0x00069AA0 File Offset: 0x00068EA0
	internal unsafe static void ??__E??_7NspiAsyncRpcCallWrapper_ResolveNames@NspiServer@Rpc@Exchange@Microsoft@@6B@@@YMXXZ()
	{
		<Module>.??_7NspiAsyncRpcCallWrapper_ResolveNames@NspiServer@Rpc@Exchange@Microsoft@@6B@ = ref <Module>.??_R4NspiAsyncRpcCallWrapper_ResolveNames@NspiServer@Rpc@Exchange@Microsoft@@6B@;
		*(ref <Module>.??_7NspiAsyncRpcCallWrapper_ResolveNames@NspiServer@Rpc@Exchange@Microsoft@@6B@ + 8) = (long)ldftn(Microsoft.Exchange.Rpc.BaseAsyncRpcCallWrapper<Microsoft::Exchange::Rpc::NspiServer::NspiAsyncRpcServer>.InternalExecute);
		*(ref <Module>.??_7NspiAsyncRpcCallWrapper_ResolveNames@NspiServer@Rpc@Exchange@Microsoft@@6B@ + 16) = (long)ldftn(Microsoft.Exchange.Rpc.NspiServer.NspiAsyncRpcCallWrapper_ResolveNames.DispatchCall);
	}

	// Token: 0x060002E6 RID: 742 RVA: 0x00069AD8 File Offset: 0x00068ED8
	internal unsafe static void ??__E??_7NspiAsyncRpcCallWrapper_ResolveNamesW@NspiServer@Rpc@Exchange@Microsoft@@6B@@@YMXXZ()
	{
		<Module>.??_7NspiAsyncRpcCallWrapper_ResolveNamesW@NspiServer@Rpc@Exchange@Microsoft@@6B@ = ref <Module>.??_R4NspiAsyncRpcCallWrapper_ResolveNamesW@NspiServer@Rpc@Exchange@Microsoft@@6B@;
		*(ref <Module>.??_7NspiAsyncRpcCallWrapper_ResolveNamesW@NspiServer@Rpc@Exchange@Microsoft@@6B@ + 8) = (long)ldftn(Microsoft.Exchange.Rpc.BaseAsyncRpcCallWrapper<Microsoft::Exchange::Rpc::NspiServer::NspiAsyncRpcServer>.InternalExecute);
		*(ref <Module>.??_7NspiAsyncRpcCallWrapper_ResolveNamesW@NspiServer@Rpc@Exchange@Microsoft@@6B@ + 16) = (long)ldftn(Microsoft.Exchange.Rpc.NspiServer.NspiAsyncRpcCallWrapper_ResolveNamesW.DispatchCall);
	}

	// Token: 0x060002E7 RID: 743 RVA: 0x00046154 File Offset: 0x00045554
	internal unsafe static int AcquireUseLicenses(void* hBinding, int version, int inputParameterLen, byte* pInputParameterBytes, int* pOutputParameterLen, byte** ppOutputParamterBytes)
	{
		OfflineRmsRpcServer offlineRmsRpcServer = (OfflineRmsRpcServer)RpcServerBase.GetServerInstance(OfflineRmsRpcServer.RpcIntfHandle);
		byte[] inputParameterBytes = <Module>.UToMBytes(inputParameterLen, pInputParameterBytes);
		byte[] array = offlineRmsRpcServer.AcquireUseLicenses(version, inputParameterBytes);
		if (array != null)
		{
			<Module>.MToUBytes(array, pOutputParameterLen, ppOutputParamterBytes);
		}
		return 0;
	}

	// Token: 0x060002E8 RID: 744 RVA: 0x00046190 File Offset: 0x00045590
	internal unsafe static int AcquireTenantLicenses(void* hBinding, int version, int inputParameterLen, byte* pInputParameterBytes, int* pOutputParameterLen, byte** ppOutputParamterBytes)
	{
		OfflineRmsRpcServer offlineRmsRpcServer = (OfflineRmsRpcServer)RpcServerBase.GetServerInstance(OfflineRmsRpcServer.RpcIntfHandle);
		byte[] inputParameterBytes = <Module>.UToMBytes(inputParameterLen, pInputParameterBytes);
		byte[] array = offlineRmsRpcServer.AcquireTenantLicenses(version, inputParameterBytes);
		if (array != null)
		{
			<Module>.MToUBytes(array, pOutputParameterLen, ppOutputParamterBytes);
		}
		return 0;
	}

	// Token: 0x060002E9 RID: 745 RVA: 0x000461CC File Offset: 0x000455CC
	internal unsafe static int GetTenantActiveCryptoMode(void* hBinding, int version, int inputParameterLen, byte* pInputParameterBytes, int* pOutputParameterLen, byte** ppOutputParamterBytes)
	{
		OfflineRmsRpcServer offlineRmsRpcServer = (OfflineRmsRpcServer)RpcServerBase.GetServerInstance(OfflineRmsRpcServer.RpcIntfHandle);
		byte[] inputParameterBytes = <Module>.UToMBytes(inputParameterLen, pInputParameterBytes);
		byte[] tenantActiveCryptoMode = offlineRmsRpcServer.GetTenantActiveCryptoMode(version, inputParameterBytes);
		if (tenantActiveCryptoMode != null)
		{
			<Module>.MToUBytes(tenantActiveCryptoMode, pOutputParameterLen, ppOutputParamterBytes);
		}
		return 0;
	}

	// Token: 0x060002EA RID: 746 RVA: 0x00046338 File Offset: 0x00045738
	internal unsafe static EcPoolConnectAsyncState* {ctor}(EcPoolConnectAsyncState* A_0)
	{
		*(A_0 + 112L) = 0L;
		*(A_0 + 120L) = 0;
		*(A_0 + 128L) = 0L;
		*(A_0 + 136L) = 0;
		*(A_0 + 144L) = 0L;
		return A_0;
	}

	// Token: 0x060002EB RID: 747 RVA: 0x00046378 File Offset: 0x00045778
	internal unsafe static void {dtor}(EcPoolConnectAsyncState* A_0)
	{
		ulong num = (ulong)(*(A_0 + 128L));
		if (num != 0UL)
		{
			<Module>.MIDL_user_free(num);
		}
		ulong num2 = (ulong)(*(A_0 + 144L));
		if (num2 != 0UL)
		{
			<Module>.MIDL_user_free(num2);
		}
	}

	// Token: 0x060002EC RID: 748 RVA: 0x000463AC File Offset: 0x000457AC
	internal unsafe static EcPoolCreateSessionAsyncState* {ctor}(EcPoolCreateSessionAsyncState* A_0)
	{
		*(A_0 + 112L) = 0;
		*(A_0 + 120L) = 0L;
		*(A_0 + 128L) = 0;
		*(A_0 + 136L) = 0L;
		return A_0;
	}

	// Token: 0x060002ED RID: 749 RVA: 0x000463E0 File Offset: 0x000457E0
	internal unsafe static void {dtor}(EcPoolCreateSessionAsyncState* A_0)
	{
		ulong num = (ulong)(*(A_0 + 120L));
		if (num != 0UL)
		{
			<Module>.MIDL_user_free(num);
		}
		ulong num2 = (ulong)(*(A_0 + 136L));
		if (num2 != 0UL)
		{
			<Module>.MIDL_user_free(num2);
		}
	}

	// Token: 0x060002EE RID: 750 RVA: 0x00046410 File Offset: 0x00045810
	internal unsafe static EcPoolSessionDoRpcAsyncState* {ctor}(EcPoolSessionDoRpcAsyncState* A_0)
	{
		*(A_0 + 112L) = 0;
		*(A_0 + 116L) = 0;
		*(A_0 + 120L) = 0L;
		*(A_0 + 128L) = 0;
		*(A_0 + 136L) = 0L;
		return A_0;
	}

	// Token: 0x060002EF RID: 751 RVA: 0x0004644C File Offset: 0x0004584C
	internal unsafe static void {dtor}(EcPoolSessionDoRpcAsyncState* A_0)
	{
		ulong num = (ulong)(*(A_0 + 120L));
		if (num != 0UL)
		{
			<Module>.MIDL_user_free(num);
		}
		ulong num2 = (ulong)(*(A_0 + 136L));
		if (num2 != 0UL)
		{
			<Module>.MIDL_user_free(num2);
		}
	}

	// Token: 0x060002F0 RID: 752 RVA: 0x0004647C File Offset: 0x0004587C
	internal unsafe static EcPoolWaitForNotificationsAsyncState* {ctor}(EcPoolWaitForNotificationsAsyncState* A_0)
	{
		*(A_0 + 112L) = 0;
		*(A_0 + 120L) = 0L;
		return A_0;
	}

	// Token: 0x060002F1 RID: 753 RVA: 0x0004649C File Offset: 0x0004589C
	internal unsafe static void {dtor}(EcPoolWaitForNotificationsAsyncState* A_0)
	{
		ulong num = (ulong)(*(A_0 + 120L));
		if (num != 0UL)
		{
			<Module>.MIDL_user_free(num);
		}
	}

	// Token: 0x060002F2 RID: 754 RVA: 0x000464D0 File Offset: 0x000458D0
	internal unsafe static void* __delDtor(EcPoolConnectAsyncState* A_0, uint A_0)
	{
		ulong num = (ulong)(*(A_0 + 128L));
		if (num != 0UL)
		{
			<Module>.MIDL_user_free(num);
		}
		ulong num2 = (ulong)(*(A_0 + 144L));
		if (num2 != 0UL)
		{
			<Module>.MIDL_user_free(num2);
		}
		if ((A_0 & 1U) != 0U)
		{
			<Module>.delete(A_0);
		}
		return A_0;
	}

	// Token: 0x060002F3 RID: 755 RVA: 0x0004660C File Offset: 0x00045A0C
	internal unsafe static void* __delDtor(EcPoolCreateSessionAsyncState* A_0, uint A_0)
	{
		ulong num = (ulong)(*(A_0 + 120L));
		if (num != 0UL)
		{
			<Module>.MIDL_user_free(num);
		}
		ulong num2 = (ulong)(*(A_0 + 136L));
		if (num2 != 0UL)
		{
			<Module>.MIDL_user_free(num2);
		}
		if ((A_0 & 1U) != 0U)
		{
			<Module>.delete(A_0);
		}
		return A_0;
	}

	// Token: 0x060002F4 RID: 756 RVA: 0x00046708 File Offset: 0x00045B08
	internal unsafe static void* __delDtor(EcPoolSessionDoRpcAsyncState* A_0, uint A_0)
	{
		ulong num = (ulong)(*(A_0 + 120L));
		if (num != 0UL)
		{
			<Module>.MIDL_user_free(num);
		}
		ulong num2 = (ulong)(*(A_0 + 136L));
		if (num2 != 0UL)
		{
			<Module>.MIDL_user_free(num2);
		}
		if ((A_0 & 1U) != 0U)
		{
			<Module>.delete(A_0);
		}
		return A_0;
	}

	// Token: 0x060002F5 RID: 757 RVA: 0x00046774 File Offset: 0x00045B74
	internal unsafe static void* __delDtor(EcPoolWaitForNotificationsAsyncState* A_0, uint A_0)
	{
		ulong num = (ulong)(*(A_0 + 120L));
		if (num != 0UL)
		{
			<Module>.MIDL_user_free(num);
		}
		if ((A_0 & 1U) != 0U)
		{
			<Module>.delete(A_0);
		}
		return A_0;
	}

	// Token: 0x060002F6 RID: 758 RVA: 0x00047E14 File Offset: 0x00047214
	internal unsafe static void OnRpcCompleteCallback(_TP_CALLBACK_INSTANCE* Instance, void* Context, _TP_WAIT* Wait, uint WaitResult)
	{
		IntPtr value = new IntPtr(Context);
		GCHandle gchandle = GCHandle.FromIntPtr(value);
		try
		{
			RpcAsyncResult rpcAsyncResult = gchandle.Target as RpcAsyncResult;
			if (null == rpcAsyncResult)
			{
				throw new ArgumentNullException("context");
			}
			rpcAsyncResult.OnRpcComplete();
		}
		finally
		{
			gchandle.Free();
		}
	}

	// Token: 0x060002F7 RID: 759 RVA: 0x0004820C File Offset: 0x0004760C
	internal unsafe static void MToUBytesSegment(ArraySegment<byte> mByteArraySegment, int* outLen, byte** ppData)
	{
		*outLen = 0;
		byte* ptr;
		if (mByteArraySegment.Array != null && mByteArraySegment.Count != 0)
		{
			*outLen = mByteArraySegment.Count;
			ptr = <Module>.MIDL_user_allocate((ulong)((long)mByteArraySegment.Count));
			if (ptr == null)
			{
				throw new OutOfMemoryException();
			}
			IntPtr destination = new IntPtr((void*)ptr);
			Marshal.Copy(mByteArraySegment.Array, mByteArraySegment.Offset, destination, mByteArraySegment.Count);
		}
		else
		{
			ptr = <Module>.MIDL_user_allocate(0UL);
			if (ptr == null)
			{
				throw new OutOfMemoryException();
			}
		}
		*(long*)ppData = ptr;
	}

	// Token: 0x060002F8 RID: 760 RVA: 0x00049988 File Offset: 0x00048D88
	internal unsafe static byte[] UToMLeasedBuffer(int cBytes, byte* pData, int* segmentSize)
	{
		if (pData != null && cBytes > 0)
		{
			*segmentSize = cBytes;
			byte[] buffer = RpcBufferPool.GetBuffer(cBytes);
			IntPtr source = new IntPtr((void*)pData);
			Marshal.Copy(source, buffer, 0, cBytes);
			return buffer;
		}
		*segmentSize = 0;
		return RpcBufferPool.GetBuffer(0);
	}

	// Token: 0x060002F9 RID: 761 RVA: 0x00048D58 File Offset: 0x00048158
	internal unsafe static int EcValidateParameters(PoolRpcServer_Wrapper* A_0)
	{
		return 0;
	}

	// Token: 0x060002FA RID: 762 RVA: 0x00049E5C File Offset: 0x0004925C
	internal unsafe static PoolRpcServer_Wrapper* {ctor}(PoolRpcServer_Wrapper* A_0, IntPtr intfHandle)
	{
		*A_0 = ref <Module>.??_7PoolRpcServer_Wrapper@@6B@ + 8;
		*(A_0 + 8L) = intfHandle;
		return A_0;
	}

	// Token: 0x060002FB RID: 763 RVA: 0x00048D68 File Offset: 0x00048168
	internal unsafe static int InternalExecute(PoolRpcServer_Wrapper* A_0, SafeRpcAsyncStateHandle pAsyncState)
	{
		IPoolRpcServer poolRpcServer = null;
		_GUID guid = 0;
		initblk(ref guid + 4, 0, 12L);
		PoolRpcServerCommonBase poolRpcServerCommonBase = (PoolRpcServerCommonBase)RpcServerBase.GetServerInstance(*(A_0 + 8L));
		int num;
		if (poolRpcServerCommonBase == null)
		{
			num = -2147221227;
		}
		else if (0 != <Module>.RpcBindingInqObject(*(long*)((byte*)pAsyncState.DangerousGetHandle().ToPointer() + 32L), &guid))
		{
			num = -2147221227;
		}
		else
		{
			poolRpcServer = null;
			Guid instanceGuid = <Module>.FromGUID(ref guid);
			num = poolRpcServerCommonBase.GetInterfaceInstance(instanceGuid, out poolRpcServer);
			if (0 == num)
			{
				byte condition = (null != poolRpcServer) ? 1 : 0;
				ExAssert.Assert(condition != 0, "NULL interface returned.");
				num = calli(System.Int32 modopt(System.Runtime.CompilerServices.IsLong) modopt(System.Runtime.CompilerServices.CallConvCdecl)(System.IntPtr), A_0, *(*A_0 + 8L));
				if (0 == num)
				{
					num = calli(System.Int32 modopt(System.Runtime.CompilerServices.IsLong)(System.IntPtr,Microsoft.Exchange.Rpc.SafeRpcAsyncStateHandle,Microsoft.Exchange.Rpc.PoolRpc.IPoolRpcServer), A_0, pAsyncState, poolRpcServer, *(*A_0 + 16L));
				}
			}
		}
		return num;
	}

	// Token: 0x060002FC RID: 764 RVA: 0x00049E80 File Offset: 0x00049280
	internal unsafe static EcPoolConnectRpc* {ctor}(EcPoolConnectRpc* A_0, void* hBinding, void** pcpxh, uint cbIn, byte* rgbIn, uint* pcbOut, byte** ppbOut, uint cbAuxIn, byte* rgbAuxIn, uint* pcbAuxOut, byte** ppbAuxOut)
	{
		IntPtr rpcIntfHandle = PoolRpcServerBase.RpcIntfHandle;
		*A_0 = ref <Module>.??_7PoolRpcServer_Wrapper@@6B@ + 8;
		*(A_0 + 8L) = rpcIntfHandle;
		*A_0 = ref <Module>.??_7EcPoolConnectRpc@@6B@ + 8;
		*(A_0 + 16L) = hBinding;
		*(A_0 + 24L) = pcpxh;
		*(A_0 + 32L) = cbIn;
		*(A_0 + 40L) = rgbIn;
		*(A_0 + 48L) = pcbOut;
		*(A_0 + 56L) = ppbOut;
		*(A_0 + 64L) = cbAuxIn;
		*(A_0 + 72L) = rgbAuxIn;
		*(A_0 + 80L) = pcbAuxOut;
		*(A_0 + 88L) = ppbAuxOut;
		return A_0;
	}

	// Token: 0x060002FD RID: 765 RVA: 0x00048E20 File Offset: 0x00048220
	internal unsafe static int EcValidateParameters(EcPoolConnectRpc* A_0)
	{
		int result = 0;
		if (0L == *(A_0 + 24L) || 0L == *(A_0 + 40L) || 0 == *(A_0 + 32L) || 0L == *(A_0 + 48L) || 0L == *(A_0 + 56L))
		{
			result = -2147024809;
		}
		return result;
	}

	// Token: 0x060002FE RID: 766 RVA: 0x00049F00 File Offset: 0x00049300
	internal unsafe static int EcDispatchCall(EcPoolConnectRpc* A_0, SafeRpcAsyncStateHandle pAsyncState, IPoolRpcServer server)
	{
		int num = 0;
		int count = 0;
		tagRPC_POOL_CONNECT_REQUEST_HEADER flags = 0;
		initblk(ref flags + 4, 0, 16L);
		int num2 = <Module>.EcUnpackSingleRpcBlock<1,struct\u0020tagRPC_POOL_CONNECT_REQUEST_HEADER>(*(A_0 + 40L), *(A_0 + 32L), &num, &flags);
		if (0 != num2)
		{
			return num2;
		}
		*(*(A_0 + 24L)) = 0L;
		*(*(A_0 + 56L)) = 0L;
		*(*(A_0 + 48L)) = 0;
		byte[] array = null;
		try
		{
			array = <Module>.UToMLeasedBuffer(*(A_0 + 64L), *(A_0 + 72L), ref count);
			EcPoolConnectCompletion completion = new EcPoolConnectCompletion(pAsyncState, *(A_0 + 24L), *(A_0 + 48L), *(A_0 + 56L), *(A_0 + 80L), *(A_0 + 88L));
			ArraySegment<byte> auxiliaryIn = new ArraySegment<byte>(array, 0, count);
			Guid poolGuid = <Module>.FromGUID(ref flags + 4);
			num2 = server.EcPoolConnect(flags, poolGuid, auxiliaryIn, completion);
			if (0 == num2)
			{
				array = null;
			}
		}
		finally
		{
			if (array != null)
			{
				RpcBufferPool.ReleaseBuffer(array);
			}
		}
		return num2;
	}

	// Token: 0x060002FF RID: 767 RVA: 0x00049FE8 File Offset: 0x000493E8
	internal unsafe static void EcPoolConnect_Managed(_RPC_ASYNC_STATE* pAsyncState, void* hBinding, void** pcpxh, uint cbIn, byte* rgbIn, uint* pcbOut, byte** ppbOut, uint cbAuxIn, byte* rgbAuxIn, uint* pcbAuxOut, byte** ppbAuxOut)
	{
		IntPtr rpcIntfHandle = PoolRpcServerBase.RpcIntfHandle;
		EcPoolConnectRpc ecPoolConnectRpc;
		*(ref ecPoolConnectRpc + 8) = rpcIntfHandle;
		ecPoolConnectRpc = ref <Module>.??_7EcPoolConnectRpc@@6B@ + 8;
		*(ref ecPoolConnectRpc + 16) = hBinding;
		*(ref ecPoolConnectRpc + 24) = pcpxh;
		*(ref ecPoolConnectRpc + 32) = cbIn;
		*(ref ecPoolConnectRpc + 40) = rgbIn;
		*(ref ecPoolConnectRpc + 48) = pcbOut;
		*(ref ecPoolConnectRpc + 56) = ppbOut;
		*(ref ecPoolConnectRpc + 64) = cbAuxIn;
		*(ref ecPoolConnectRpc + 72) = rgbAuxIn;
		*(ref ecPoolConnectRpc + 80) = pcbAuxOut;
		*(ref ecPoolConnectRpc + 88) = ppbAuxOut;
		<Module>.Microsoft.Exchange.Rpc.ManagedExceptionAsyncCrashWrapper.Execute<class\u0020Microsoft::Exchange::Rpc::PoolRpc::SafeEcPoolConnectRpcAsyncStateHandle>(ref ecPoolConnectRpc, pAsyncState);
	}

	// Token: 0x06000300 RID: 768 RVA: 0x0004A068 File Offset: 0x00049468
	internal unsafe static EcPoolDisconnectRpc* {ctor}(EcPoolDisconnectRpc* A_0, void** pcpxh)
	{
		IntPtr rpcIntfHandle = PoolRpcServerBase.RpcIntfHandle;
		*A_0 = ref <Module>.??_7PoolRpcServer_Wrapper@@6B@ + 8;
		*(A_0 + 8L) = rpcIntfHandle;
		*A_0 = ref <Module>.??_7EcPoolDisconnectRpc@@6B@ + 8;
		*(A_0 + 16L) = pcpxh;
		return A_0;
	}

	// Token: 0x06000301 RID: 769 RVA: 0x00048EA4 File Offset: 0x000482A4
	internal unsafe static int EcDispatchCall(EcPoolDisconnectRpc* A_0, SafeRpcAsyncStateHandle pAsyncState, IPoolRpcServer server)
	{
		int num = 0;
		ulong num2 = (ulong)(*(A_0 + 16L));
		if (num2 != 0UL)
		{
			ulong num3 = (ulong)(*num2);
			if (0UL != num3)
			{
				IntPtr contextHandle = new IntPtr(num3);
				*(*(A_0 + 16L)) = 0L;
				num = server.EcPoolDisconnect(contextHandle);
				if (0 != num)
				{
					return num;
				}
			}
		}
		pAsyncState.CompleteCall(0);
		return num;
	}

	// Token: 0x06000302 RID: 770 RVA: 0x0004A0A0 File Offset: 0x000494A0
	internal unsafe static void EcPoolDisconnect_Managed(_RPC_ASYNC_STATE* pAsyncState, void** pcpxh)
	{
		EcPoolDisconnectRpc ecPoolDisconnectRpc;
		<Module>.EcPoolDisconnectRpc.{ctor}(ref ecPoolDisconnectRpc, pcpxh);
		<Module>.Microsoft.Exchange.Rpc.ManagedExceptionAsyncCrashWrapper.Execute<class\u0020Microsoft::Exchange::Rpc::PoolRpc::SafeEcPoolDisconnectRpcAsyncStateHandle>(ref ecPoolDisconnectRpc, pAsyncState);
	}

	// Token: 0x06000303 RID: 771 RVA: 0x0004A0C0 File Offset: 0x000494C0
	internal unsafe static EcPoolCreateSessionRpc* {ctor}(EcPoolCreateSessionRpc* A_0, void* cpxh, uint cbIn, byte* rgbIn, uint* pcbOut, byte** ppbOut, uint cbAuxIn, byte* rgbAuxIn, uint* pcbAuxOut, byte** ppbAuxOut)
	{
		IntPtr rpcIntfHandle = PoolRpcServerBase.RpcIntfHandle;
		*A_0 = ref <Module>.??_7PoolRpcServer_Wrapper@@6B@ + 8;
		*(A_0 + 8L) = rpcIntfHandle;
		*A_0 = ref <Module>.??_7EcPoolCreateSessionRpc@@6B@ + 8;
		*(A_0 + 16L) = cpxh;
		*(A_0 + 24L) = cbIn;
		*(A_0 + 32L) = rgbIn;
		*(A_0 + 40L) = pcbOut;
		*(A_0 + 48L) = ppbOut;
		*(A_0 + 56L) = cbAuxIn;
		*(A_0 + 64L) = rgbAuxIn;
		*(A_0 + 72L) = pcbAuxOut;
		*(A_0 + 80L) = ppbAuxOut;
		return A_0;
	}

	// Token: 0x06000304 RID: 772 RVA: 0x00048EEC File Offset: 0x000482EC
	internal unsafe static int EcValidateParameters(EcPoolCreateSessionRpc* A_0)
	{
		int result = 0;
		if (0L == *(A_0 + 32L) || 0 == *(A_0 + 24L) || 0L == *(A_0 + 40L) || 0L == *(A_0 + 48L))
		{
			result = -2147024809;
		}
		return result;
	}

	// Token: 0x06000305 RID: 773 RVA: 0x0004A138 File Offset: 0x00049538
	internal unsafe static int EcDispatchCall(EcPoolCreateSessionRpc* A_0, SafeRpcAsyncStateHandle pAsyncState, IPoolRpcServer server)
	{
		sbyte* ptr = null;
		tagRPC_POOL_CREATE_SESSION_REQUEST_HEADER flags = 0;
		initblk(ref flags + 4, 0, 36L);
		$ArrayType$$$BY02G $ArrayType$$$BY02G = 0;
		initblk(ref $ArrayType$$$BY02G + 2, 0, 4L);
		byte* pData = null;
		uint cBytes = 0;
		int count = 0;
		int num = <Module>.EcPoolCreateSessionRpc.EcUnpackRequest(A_0, &flags, &ptr, &pData, &cBytes);
		if (0 != num)
		{
			return num;
		}
		if (null == ptr || 0 == *(sbyte*)ptr)
		{
			return 1212;
		}
		num = <Module>.EcCriticalVersionCheck(ref flags + 34, ref $ArrayType$$$BY02G);
		if (num != null)
		{
			return num;
		}
		byte[] sessionSecurityContext = <Module>.UToMBytes(cBytes, pData);
		short[] array = new short[4];
		<Module>.NormalizeVersion(ref flags + 34, array);
		*(*(A_0 + 48L)) = 0L;
		*(*(A_0 + 40L)) = 0;
		byte[] array2 = null;
		ClientSecurityContext clientSecurityContext = null;
		try
		{
			clientSecurityContext = RpcServerBase.GetClientSecurityContext(*(long*)((byte*)pAsyncState.DangerousGetHandle().ToPointer() + 32L));
			if (clientSecurityContext == null)
			{
				num = -2147024891;
			}
			else
			{
				array2 = <Module>.UToMLeasedBuffer(*(A_0 + 56L), *(A_0 + 64L), ref count);
				EcPoolCreateSessionCompletion completion = new EcPoolCreateSessionCompletion(pAsyncState, *(A_0 + 40L), *(A_0 + 48L), *(A_0 + 72L), *(A_0 + 80L), ref $ArrayType$$$BY02G, server.GetVersionDelta());
				ArraySegment<byte> auxiliaryIn = new ArraySegment<byte>(array2, 0, count);
				IntPtr ptr2 = new IntPtr((void*)ptr);
				IntPtr contextHandle = new IntPtr(*(A_0 + 16L));
				num = server.EcPoolCreateSession(contextHandle, clientSecurityContext, sessionSecurityContext, flags, Marshal.PtrToStringAnsi(ptr2), (uint)(*(ref flags + 4)), (uint)(*(ref flags + 12)), (uint)(*(ref flags + 16)), (uint)(*(ref flags + 20)), array, auxiliaryIn, completion);
				if (0 == num)
				{
					array2 = null;
				}
			}
		}
		finally
		{
			if (array2 != null)
			{
				RpcBufferPool.ReleaseBuffer(array2);
			}
			if (clientSecurityContext != null)
			{
				((IDisposable)clientSecurityContext).Dispose();
			}
		}
		return num;
	}

	// Token: 0x06000306 RID: 774 RVA: 0x00048F2C File Offset: 0x0004832C
	internal unsafe static int EcUnpackRequest(EcPoolCreateSessionRpc* A_0, tagRPC_POOL_CREATE_SESSION_REQUEST_HEADER* prequest, sbyte** pszUserDN, byte** ppbSecurityContext, uint* pcbSecurityContext)
	{
		int num = 0;
		bool flag = false;
		*(long*)ppbSecurityContext = 0L;
		*(int*)pcbSecurityContext = 0;
		int num3;
		if (0L != *(A_0 + 32L))
		{
			uint num2 = (uint)(*(A_0 + 24L));
			if (num2 >= 4U)
			{
				if (0U < num2)
				{
					do
					{
						tagRPC_BLOCK_HEADER tagRPC_BLOCK_HEADER = 0;
						initblk(ref tagRPC_BLOCK_HEADER + 2, 0, 2L);
						num3 = <Module>.EcUnpackData<struct\u0020tagRPC_BLOCK_HEADER>(*(A_0 + 32L), num2, &num, &tagRPC_BLOCK_HEADER);
						if (num3 != null)
						{
							return num3;
						}
						if (*(A_0 + 24L) - num < tagRPC_BLOCK_HEADER)
						{
							goto IL_D0;
						}
						if (3 == *(ref tagRPC_BLOCK_HEADER + 2))
						{
							int num4 = 0;
							num3 = <Module>.EcUnpackData<struct\u0020tagRPC_POOL_CREATE_SESSION_REQUEST_HEADER>(num + *(A_0 + 32L), tagRPC_BLOCK_HEADER, &num4, prequest);
							if (num3 != null)
							{
								return num3;
							}
							num3 = <Module>.EcUnpackData<char\u0020*>(num + *(A_0 + 32L), tagRPC_BLOCK_HEADER, &num4, pszUserDN);
							if (num3 != null)
							{
								return num3;
							}
							flag = true;
						}
						else if (6 == *(ref tagRPC_BLOCK_HEADER + 2))
						{
							*(long*)ppbSecurityContext = num + *(A_0 + 32L);
							*(int*)pcbSecurityContext = tagRPC_BLOCK_HEADER;
						}
						num += tagRPC_BLOCK_HEADER;
						num2 = (uint)(*(A_0 + 24L));
					}
					while (num < num2);
					if (!flag)
					{
						goto IL_DB;
					}
					return num3;
					IL_D0:
					return 1206;
				}
				IL_DB:
				return 1206;
			}
		}
		num3 = -2147024809;
		return num3;
	}

	// Token: 0x06000307 RID: 775 RVA: 0x0004A2D8 File Offset: 0x000496D8
	internal unsafe static void EcPoolCreateSession_Managed(_RPC_ASYNC_STATE* pAsyncState, void* cpxh, uint cbIn, byte* rgbIn, uint* pcbOut, byte** ppbOut, uint cbAuxIn, byte* rgbAuxIn, uint* pcbAuxOut, byte** ppbAuxOut)
	{
		IntPtr rpcIntfHandle = PoolRpcServerBase.RpcIntfHandle;
		EcPoolCreateSessionRpc ecPoolCreateSessionRpc;
		*(ref ecPoolCreateSessionRpc + 8) = rpcIntfHandle;
		ecPoolCreateSessionRpc = ref <Module>.??_7EcPoolCreateSessionRpc@@6B@ + 8;
		*(ref ecPoolCreateSessionRpc + 16) = cpxh;
		*(ref ecPoolCreateSessionRpc + 24) = cbIn;
		*(ref ecPoolCreateSessionRpc + 32) = rgbIn;
		*(ref ecPoolCreateSessionRpc + 40) = pcbOut;
		*(ref ecPoolCreateSessionRpc + 48) = ppbOut;
		*(ref ecPoolCreateSessionRpc + 56) = cbAuxIn;
		*(ref ecPoolCreateSessionRpc + 64) = rgbAuxIn;
		*(ref ecPoolCreateSessionRpc + 72) = pcbAuxOut;
		*(ref ecPoolCreateSessionRpc + 80) = ppbAuxOut;
		<Module>.Microsoft.Exchange.Rpc.ManagedExceptionAsyncCrashWrapper.Execute<class\u0020Microsoft::Exchange::Rpc::PoolRpc::SafeEcPoolCreateSessionRpcAsyncStateHandle>(ref ecPoolCreateSessionRpc, pAsyncState);
	}

	// Token: 0x06000308 RID: 776 RVA: 0x0004A350 File Offset: 0x00049750
	internal unsafe static EcPoolCloseSessionRpc* {ctor}(EcPoolCloseSessionRpc* A_0, void* cpxh, uint ulSessionHandle)
	{
		IntPtr rpcIntfHandle = PoolRpcServerBase.RpcIntfHandle;
		*A_0 = ref <Module>.??_7PoolRpcServer_Wrapper@@6B@ + 8;
		*(A_0 + 8L) = rpcIntfHandle;
		*A_0 = ref <Module>.??_7EcPoolCloseSessionRpc@@6B@ + 8;
		*(A_0 + 16L) = cpxh;
		*(A_0 + 24L) = ulSessionHandle;
		return A_0;
	}

	// Token: 0x06000309 RID: 777 RVA: 0x00049024 File Offset: 0x00048424
	internal unsafe static int EcDispatchCall(EcPoolCloseSessionRpc* A_0, SafeRpcAsyncStateHandle pAsyncState, IPoolRpcServer server)
	{
		EcPoolCloseSessionCompletion completion = new EcPoolCloseSessionCompletion(pAsyncState);
		IntPtr contextHandle = new IntPtr(*(A_0 + 16L));
		return server.EcPoolCloseSession(contextHandle, (uint)(*(A_0 + 24L)), completion);
	}

	// Token: 0x0600030A RID: 778 RVA: 0x0004A390 File Offset: 0x00049790
	internal unsafe static void EcPoolCloseSession_Managed(_RPC_ASYNC_STATE* pAsyncState, void* cpxh, uint ulSessionHandle)
	{
		EcPoolCloseSessionRpc ecPoolCloseSessionRpc;
		<Module>.EcPoolCloseSessionRpc.{ctor}(ref ecPoolCloseSessionRpc, cpxh, ulSessionHandle);
		<Module>.Microsoft.Exchange.Rpc.ManagedExceptionAsyncCrashWrapper.Execute<class\u0020Microsoft::Exchange::Rpc::PoolRpc::SafeEcPoolCloseSessionRpcAsyncStateHandle>(ref ecPoolCloseSessionRpc, pAsyncState);
	}

	// Token: 0x0600030B RID: 779 RVA: 0x0004A3B0 File Offset: 0x000497B0
	internal unsafe static EcPoolSessionDoRpcRpc* {ctor}(EcPoolSessionDoRpcRpc* A_0, void* cpxh, uint ulSessionHandle, uint* pulFlags, uint cbIn, byte* rgbIn, uint* pcbOut, byte** ppbOut, uint cbAuxIn, byte* rgbAuxIn, uint* pcbAuxOut, byte** ppbAuxOut)
	{
		IntPtr rpcIntfHandle = PoolRpcServerBase.RpcIntfHandle;
		*A_0 = ref <Module>.??_7PoolRpcServer_Wrapper@@6B@ + 8;
		*(A_0 + 8L) = rpcIntfHandle;
		*A_0 = ref <Module>.??_7EcPoolSessionDoRpcRpc@@6B@ + 8;
		*(A_0 + 16L) = cpxh;
		*(A_0 + 24L) = ulSessionHandle;
		*(A_0 + 32L) = pulFlags;
		*(A_0 + 40L) = cbIn;
		*(A_0 + 48L) = rgbIn;
		*(A_0 + 56L) = pcbOut;
		*(A_0 + 64L) = ppbOut;
		*(A_0 + 72L) = cbAuxIn;
		*(A_0 + 80L) = rgbAuxIn;
		*(A_0 + 88L) = pcbAuxOut;
		*(A_0 + 96L) = ppbAuxOut;
		return A_0;
	}

	// Token: 0x0600030C RID: 780 RVA: 0x00049054 File Offset: 0x00048454
	internal unsafe static int EcValidateParameters(EcPoolSessionDoRpcRpc* A_0)
	{
		int result = 0;
		if (0L != *(A_0 + 64L))
		{
			ulong num = (ulong)(*(A_0 + 56L));
			if (0UL != num)
			{
				uint num2 = (uint)(*num);
				if (num2 >= 32775U && num2 <= 262152U && 0L != *(A_0 + 32L))
				{
					return result;
				}
			}
		}
		result = -2147024809;
		return result;
	}

	// Token: 0x0600030D RID: 781 RVA: 0x0004A438 File Offset: 0x00049838
	internal unsafe static int EcDispatchCall(EcPoolSessionDoRpcRpc* A_0, SafeRpcAsyncStateHandle pAsyncState, IPoolRpcServer server)
	{
		int num = 0;
		int count = 0;
		int count2 = 0;
		byte[] array = null;
		byte[] array2 = null;
		try
		{
			array = <Module>.UToMLeasedBuffer(*(A_0 + 40L), *(A_0 + 48L), ref count);
			array2 = <Module>.UToMLeasedBuffer(*(A_0 + 72L), *(A_0 + 80L), ref count2);
			uint maximumResponseSize = (uint)(*(*(A_0 + 56L)));
			*(*(A_0 + 64L)) = 0L;
			*(*(A_0 + 56L)) = 0;
			*(*(A_0 + 96L)) = 0L;
			*(*(A_0 + 88L)) = 0;
			EcPoolSessionDoRpcCompletion completion = new EcPoolSessionDoRpcCompletion(pAsyncState, *(A_0 + 32L), *(A_0 + 56L), *(A_0 + 64L), *(A_0 + 88L), *(A_0 + 96L));
			ArraySegment<byte> auxiliaryIn = new ArraySegment<byte>(array2, 0, count2);
			ArraySegment<byte> request = new ArraySegment<byte>(array, 0, count);
			IntPtr contextHandle = new IntPtr(*(A_0 + 16L));
			num = server.EcPoolSessionDoRpc(contextHandle, (uint)(*(A_0 + 24L)), (uint)(*(*(A_0 + 32L))), maximumResponseSize, request, auxiliaryIn, completion);
			if (0 == num)
			{
				array = null;
				array2 = null;
			}
		}
		finally
		{
			if (array != null)
			{
				RpcBufferPool.ReleaseBuffer(array);
			}
			if (array2 != null)
			{
				RpcBufferPool.ReleaseBuffer(array2);
			}
		}
		return num;
	}

	// Token: 0x0600030E RID: 782 RVA: 0x0004A544 File Offset: 0x00049944
	internal unsafe static void EcPoolSessionDoRpc_Managed(_RPC_ASYNC_STATE* pAsyncState, void* cpxh, uint ulSessionHandle, uint* pulFlags, uint cbIn, byte* rgbIn, uint* pcbOut, byte** ppbOut, uint cbAuxIn, byte* rgbAuxIn, uint* pcbAuxOut, byte** ppbAuxOut)
	{
		IntPtr rpcIntfHandle = PoolRpcServerBase.RpcIntfHandle;
		EcPoolSessionDoRpcRpc ecPoolSessionDoRpcRpc;
		*(ref ecPoolSessionDoRpcRpc + 8) = rpcIntfHandle;
		ecPoolSessionDoRpcRpc = ref <Module>.??_7EcPoolSessionDoRpcRpc@@6B@ + 8;
		*(ref ecPoolSessionDoRpcRpc + 16) = cpxh;
		*(ref ecPoolSessionDoRpcRpc + 24) = ulSessionHandle;
		*(ref ecPoolSessionDoRpcRpc + 32) = pulFlags;
		*(ref ecPoolSessionDoRpcRpc + 40) = cbIn;
		*(ref ecPoolSessionDoRpcRpc + 48) = rgbIn;
		*(ref ecPoolSessionDoRpcRpc + 56) = pcbOut;
		*(ref ecPoolSessionDoRpcRpc + 64) = ppbOut;
		*(ref ecPoolSessionDoRpcRpc + 72) = cbAuxIn;
		*(ref ecPoolSessionDoRpcRpc + 80) = rgbAuxIn;
		*(ref ecPoolSessionDoRpcRpc + 88) = pcbAuxOut;
		*(ref ecPoolSessionDoRpcRpc + 96) = ppbAuxOut;
		<Module>.Microsoft.Exchange.Rpc.ManagedExceptionAsyncCrashWrapper.Execute<class\u0020Microsoft::Exchange::Rpc::PoolRpc::SafeEcPoolSessionDoRpcRpcAsyncStateHandle>(ref ecPoolSessionDoRpcRpc, pAsyncState);
	}

	// Token: 0x0600030F RID: 783 RVA: 0x0004A5CC File Offset: 0x000499CC
	internal unsafe static EcPoolWaitForNotificationsAsyncRpc* {ctor}(EcPoolWaitForNotificationsAsyncRpc* A_0, void* cpxh, uint* pcbOut, byte** ppbOut)
	{
		IntPtr rpcIntfHandle = PoolNotifyRpcServerBase.RpcIntfHandle;
		*A_0 = ref <Module>.??_7PoolRpcServer_Wrapper@@6B@ + 8;
		*(A_0 + 8L) = rpcIntfHandle;
		*A_0 = ref <Module>.??_7EcPoolWaitForNotificationsAsyncRpc@@6B@ + 8;
		*(A_0 + 16L) = cpxh;
		*(A_0 + 24L) = pcbOut;
		*(A_0 + 32L) = ppbOut;
		return A_0;
	}

	// Token: 0x06000310 RID: 784 RVA: 0x000490A0 File Offset: 0x000484A0
	internal unsafe static int EcValidateParameters(EcPoolWaitForNotificationsAsyncRpc* A_0)
	{
		int result = 0;
		if (0L == *(A_0 + 24L) || 0L == *(A_0 + 32L))
		{
			result = -2147024809;
		}
		return result;
	}

	// Token: 0x06000311 RID: 785 RVA: 0x000490CC File Offset: 0x000484CC
	internal unsafe static int EcDispatchCall(EcPoolWaitForNotificationsAsyncRpc* A_0, SafeRpcAsyncStateHandle pAsyncState, IPoolRpcServer server)
	{
		*(*(A_0 + 32L)) = 0L;
		*(*(A_0 + 24L)) = 0;
		EcPoolWaitForNotificationsCompletion completion = new EcPoolWaitForNotificationsCompletion(pAsyncState, *(A_0 + 24L), *(A_0 + 32L));
		IntPtr contextHandle = new IntPtr(*(A_0 + 16L));
		return server.EcPoolWaitForNotificationsAsync(contextHandle, completion);
	}

	// Token: 0x06000312 RID: 786 RVA: 0x0004A614 File Offset: 0x00049A14
	internal unsafe static void EcPoolWaitForNotificationsAsyncEx_Managed(_RPC_ASYNC_STATE* pAsyncState, void* cpxh, uint* pcbOut, byte** ppbOut)
	{
		EcPoolWaitForNotificationsAsyncRpc ecPoolWaitForNotificationsAsyncRpc;
		<Module>.EcPoolWaitForNotificationsAsyncRpc.{ctor}(ref ecPoolWaitForNotificationsAsyncRpc, cpxh, pcbOut, ppbOut);
		<Module>.Microsoft.Exchange.Rpc.ManagedExceptionAsyncCrashWrapper.Execute<class\u0020Microsoft::Exchange::Rpc::PoolRpc::SafeEcPoolWaitForNotificationsAsyncRpcAsyncStateHandle>(ref ecPoolWaitForNotificationsAsyncRpc, pAsyncState);
	}

	// Token: 0x06000313 RID: 787 RVA: 0x0004A634 File Offset: 0x00049A34
	internal unsafe static CPXH_rundownServer_Wrapper* {ctor}(CPXH_rundownServer_Wrapper* A_0, void* cpxh)
	{
		*A_0 = ref <Module>.??_7CPXH_rundownServer_Wrapper@@6B@;
		*(A_0 + 8L) = cpxh;
		return A_0;
	}

	// Token: 0x06000314 RID: 788 RVA: 0x0004AB14 File Offset: 0x00049F14
	internal unsafe static int InternalExecute(CPXH_rundownServer_Wrapper* A_0)
	{
		if (*(A_0 + 8L) != 0L)
		{
			PoolRpcServerBase poolRpcServerBase = (PoolRpcServerBase)RpcServerBase.GetServerInstance(PoolRpcServerBase.RpcIntfHandle);
			if (poolRpcServerBase != null)
			{
				IntPtr contextHandle = new IntPtr(*(A_0 + 8L));
				poolRpcServerBase.ConnectionDropped(contextHandle);
			}
		}
		return 0;
	}

	// Token: 0x06000315 RID: 789 RVA: 0x0004A650 File Offset: 0x00049A50
	internal unsafe static void CPXH_rundown_Managed(void* cpxh)
	{
		CPXH_rundownServer_Wrapper cpxh_rundownServer_Wrapper = ref <Module>.??_7CPXH_rundownServer_Wrapper@@6B@;
		*(ref cpxh_rundownServer_Wrapper + 8) = cpxh;
		<Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.Execute(ref cpxh_rundownServer_Wrapper);
	}

	// Token: 0x06000316 RID: 790 RVA: 0x00049178 File Offset: 0x00048578
	internal unsafe static void Execute<class\u0020Microsoft::Exchange::Rpc::PoolRpc::SafeEcPoolConnectRpcAsyncStateHandle>(ManagedExceptionAsyncCrashWrapper* A_0, _RPC_ASYNC_STATE* pAsyncState)
	{
		SafeEcPoolConnectRpcAsyncStateHandle safeEcPoolConnectRpcAsyncStateHandle = null;
		try
		{
			IntPtr handle = new IntPtr((void*)pAsyncState);
			safeEcPoolConnectRpcAsyncStateHandle = new SafeEcPoolConnectRpcAsyncStateHandle(handle);
			pAsyncState = null;
			int num = calli(System.Int32 modopt(System.Runtime.CompilerServices.IsLong)(System.IntPtr,Microsoft.Exchange.Rpc.SafeRpcAsyncStateHandle), A_0, safeEcPoolConnectRpcAsyncStateHandle, *(*A_0));
			if (0 != num)
			{
				safeEcPoolConnectRpcAsyncStateHandle.CompleteCall(num);
			}
		}
		catch (RpcException ex)
		{
			if (safeEcPoolConnectRpcAsyncStateHandle != null)
			{
				safeEcPoolConnectRpcAsyncStateHandle.AbortCall((uint)ex.ErrorCode);
			}
		}
		catch (FailRpcException ex2)
		{
			if (safeEcPoolConnectRpcAsyncStateHandle != null)
			{
				safeEcPoolConnectRpcAsyncStateHandle.CompleteCall(ex2.ErrorCode);
			}
		}
		catch (ThreadAbortException)
		{
			if (safeEcPoolConnectRpcAsyncStateHandle != null)
			{
				safeEcPoolConnectRpcAsyncStateHandle.AbortCall(1726U);
			}
		}
		catch (OutOfMemoryException)
		{
			if (safeEcPoolConnectRpcAsyncStateHandle != null)
			{
				safeEcPoolConnectRpcAsyncStateHandle.AbortCall(1130U);
			}
		}
		catch (System.Exception e)
		{
			<Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.CrashMeNow(e);
		}
		catch (object o)
		{
			<Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.CrashMeNow(o);
		}
		finally
		{
			if (pAsyncState != null)
			{
				<Module>.RpcRaiseException(1130);
			}
		}
	}

	// Token: 0x06000317 RID: 791 RVA: 0x000492D0 File Offset: 0x000486D0
	internal unsafe static void Execute<class\u0020Microsoft::Exchange::Rpc::PoolRpc::SafeEcPoolDisconnectRpcAsyncStateHandle>(ManagedExceptionAsyncCrashWrapper* A_0, _RPC_ASYNC_STATE* pAsyncState)
	{
		SafeEcPoolDisconnectRpcAsyncStateHandle safeEcPoolDisconnectRpcAsyncStateHandle = null;
		try
		{
			IntPtr handle = new IntPtr((void*)pAsyncState);
			safeEcPoolDisconnectRpcAsyncStateHandle = new SafeEcPoolDisconnectRpcAsyncStateHandle(handle);
			pAsyncState = null;
			int num = calli(System.Int32 modopt(System.Runtime.CompilerServices.IsLong)(System.IntPtr,Microsoft.Exchange.Rpc.SafeRpcAsyncStateHandle), A_0, safeEcPoolDisconnectRpcAsyncStateHandle, *(*A_0));
			if (0 != num)
			{
				safeEcPoolDisconnectRpcAsyncStateHandle.CompleteCall(num);
			}
		}
		catch (RpcException ex)
		{
			if (safeEcPoolDisconnectRpcAsyncStateHandle != null)
			{
				safeEcPoolDisconnectRpcAsyncStateHandle.AbortCall((uint)ex.ErrorCode);
			}
		}
		catch (FailRpcException ex2)
		{
			if (safeEcPoolDisconnectRpcAsyncStateHandle != null)
			{
				safeEcPoolDisconnectRpcAsyncStateHandle.CompleteCall(ex2.ErrorCode);
			}
		}
		catch (ThreadAbortException)
		{
			if (safeEcPoolDisconnectRpcAsyncStateHandle != null)
			{
				safeEcPoolDisconnectRpcAsyncStateHandle.AbortCall(1726U);
			}
		}
		catch (OutOfMemoryException)
		{
			if (safeEcPoolDisconnectRpcAsyncStateHandle != null)
			{
				safeEcPoolDisconnectRpcAsyncStateHandle.AbortCall(1130U);
			}
		}
		catch (System.Exception e)
		{
			<Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.CrashMeNow(e);
		}
		catch (object o)
		{
			<Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.CrashMeNow(o);
		}
		finally
		{
			if (pAsyncState != null)
			{
				<Module>.RpcRaiseException(1130);
			}
		}
	}

	// Token: 0x06000318 RID: 792 RVA: 0x00049428 File Offset: 0x00048828
	internal unsafe static void Execute<class\u0020Microsoft::Exchange::Rpc::PoolRpc::SafeEcPoolCreateSessionRpcAsyncStateHandle>(ManagedExceptionAsyncCrashWrapper* A_0, _RPC_ASYNC_STATE* pAsyncState)
	{
		SafeEcPoolCreateSessionRpcAsyncStateHandle safeEcPoolCreateSessionRpcAsyncStateHandle = null;
		try
		{
			IntPtr handle = new IntPtr((void*)pAsyncState);
			safeEcPoolCreateSessionRpcAsyncStateHandle = new SafeEcPoolCreateSessionRpcAsyncStateHandle(handle);
			pAsyncState = null;
			int num = calli(System.Int32 modopt(System.Runtime.CompilerServices.IsLong)(System.IntPtr,Microsoft.Exchange.Rpc.SafeRpcAsyncStateHandle), A_0, safeEcPoolCreateSessionRpcAsyncStateHandle, *(*A_0));
			if (0 != num)
			{
				safeEcPoolCreateSessionRpcAsyncStateHandle.CompleteCall(num);
			}
		}
		catch (RpcException ex)
		{
			if (safeEcPoolCreateSessionRpcAsyncStateHandle != null)
			{
				safeEcPoolCreateSessionRpcAsyncStateHandle.AbortCall((uint)ex.ErrorCode);
			}
		}
		catch (FailRpcException ex2)
		{
			if (safeEcPoolCreateSessionRpcAsyncStateHandle != null)
			{
				safeEcPoolCreateSessionRpcAsyncStateHandle.CompleteCall(ex2.ErrorCode);
			}
		}
		catch (ThreadAbortException)
		{
			if (safeEcPoolCreateSessionRpcAsyncStateHandle != null)
			{
				safeEcPoolCreateSessionRpcAsyncStateHandle.AbortCall(1726U);
			}
		}
		catch (OutOfMemoryException)
		{
			if (safeEcPoolCreateSessionRpcAsyncStateHandle != null)
			{
				safeEcPoolCreateSessionRpcAsyncStateHandle.AbortCall(1130U);
			}
		}
		catch (System.Exception e)
		{
			<Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.CrashMeNow(e);
		}
		catch (object o)
		{
			<Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.CrashMeNow(o);
		}
		finally
		{
			if (pAsyncState != null)
			{
				<Module>.RpcRaiseException(1130);
			}
		}
	}

	// Token: 0x06000319 RID: 793 RVA: 0x00049580 File Offset: 0x00048980
	internal unsafe static void Execute<class\u0020Microsoft::Exchange::Rpc::PoolRpc::SafeEcPoolCloseSessionRpcAsyncStateHandle>(ManagedExceptionAsyncCrashWrapper* A_0, _RPC_ASYNC_STATE* pAsyncState)
	{
		SafeEcPoolCloseSessionRpcAsyncStateHandle safeEcPoolCloseSessionRpcAsyncStateHandle = null;
		try
		{
			IntPtr handle = new IntPtr((void*)pAsyncState);
			safeEcPoolCloseSessionRpcAsyncStateHandle = new SafeEcPoolCloseSessionRpcAsyncStateHandle(handle);
			pAsyncState = null;
			int num = calli(System.Int32 modopt(System.Runtime.CompilerServices.IsLong)(System.IntPtr,Microsoft.Exchange.Rpc.SafeRpcAsyncStateHandle), A_0, safeEcPoolCloseSessionRpcAsyncStateHandle, *(*A_0));
			if (0 != num)
			{
				safeEcPoolCloseSessionRpcAsyncStateHandle.CompleteCall(num);
			}
		}
		catch (RpcException ex)
		{
			if (safeEcPoolCloseSessionRpcAsyncStateHandle != null)
			{
				safeEcPoolCloseSessionRpcAsyncStateHandle.AbortCall((uint)ex.ErrorCode);
			}
		}
		catch (FailRpcException ex2)
		{
			if (safeEcPoolCloseSessionRpcAsyncStateHandle != null)
			{
				safeEcPoolCloseSessionRpcAsyncStateHandle.CompleteCall(ex2.ErrorCode);
			}
		}
		catch (ThreadAbortException)
		{
			if (safeEcPoolCloseSessionRpcAsyncStateHandle != null)
			{
				safeEcPoolCloseSessionRpcAsyncStateHandle.AbortCall(1726U);
			}
		}
		catch (OutOfMemoryException)
		{
			if (safeEcPoolCloseSessionRpcAsyncStateHandle != null)
			{
				safeEcPoolCloseSessionRpcAsyncStateHandle.AbortCall(1130U);
			}
		}
		catch (System.Exception e)
		{
			<Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.CrashMeNow(e);
		}
		catch (object o)
		{
			<Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.CrashMeNow(o);
		}
		finally
		{
			if (pAsyncState != null)
			{
				<Module>.RpcRaiseException(1130);
			}
		}
	}

	// Token: 0x0600031A RID: 794 RVA: 0x000496D8 File Offset: 0x00048AD8
	internal unsafe static void Execute<class\u0020Microsoft::Exchange::Rpc::PoolRpc::SafeEcPoolSessionDoRpcRpcAsyncStateHandle>(ManagedExceptionAsyncCrashWrapper* A_0, _RPC_ASYNC_STATE* pAsyncState)
	{
		SafeEcPoolSessionDoRpcRpcAsyncStateHandle safeEcPoolSessionDoRpcRpcAsyncStateHandle = null;
		try
		{
			IntPtr handle = new IntPtr((void*)pAsyncState);
			safeEcPoolSessionDoRpcRpcAsyncStateHandle = new SafeEcPoolSessionDoRpcRpcAsyncStateHandle(handle);
			pAsyncState = null;
			int num = calli(System.Int32 modopt(System.Runtime.CompilerServices.IsLong)(System.IntPtr,Microsoft.Exchange.Rpc.SafeRpcAsyncStateHandle), A_0, safeEcPoolSessionDoRpcRpcAsyncStateHandle, *(*A_0));
			if (0 != num)
			{
				safeEcPoolSessionDoRpcRpcAsyncStateHandle.CompleteCall(num);
			}
		}
		catch (RpcException ex)
		{
			if (safeEcPoolSessionDoRpcRpcAsyncStateHandle != null)
			{
				safeEcPoolSessionDoRpcRpcAsyncStateHandle.AbortCall((uint)ex.ErrorCode);
			}
		}
		catch (FailRpcException ex2)
		{
			if (safeEcPoolSessionDoRpcRpcAsyncStateHandle != null)
			{
				safeEcPoolSessionDoRpcRpcAsyncStateHandle.CompleteCall(ex2.ErrorCode);
			}
		}
		catch (ThreadAbortException)
		{
			if (safeEcPoolSessionDoRpcRpcAsyncStateHandle != null)
			{
				safeEcPoolSessionDoRpcRpcAsyncStateHandle.AbortCall(1726U);
			}
		}
		catch (OutOfMemoryException)
		{
			if (safeEcPoolSessionDoRpcRpcAsyncStateHandle != null)
			{
				safeEcPoolSessionDoRpcRpcAsyncStateHandle.AbortCall(1130U);
			}
		}
		catch (System.Exception e)
		{
			<Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.CrashMeNow(e);
		}
		catch (object o)
		{
			<Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.CrashMeNow(o);
		}
		finally
		{
			if (pAsyncState != null)
			{
				<Module>.RpcRaiseException(1130);
			}
		}
	}

	// Token: 0x0600031B RID: 795 RVA: 0x00049830 File Offset: 0x00048C30
	internal unsafe static void Execute<class\u0020Microsoft::Exchange::Rpc::PoolRpc::SafeEcPoolWaitForNotificationsAsyncRpcAsyncStateHandle>(ManagedExceptionAsyncCrashWrapper* A_0, _RPC_ASYNC_STATE* pAsyncState)
	{
		SafeEcPoolWaitForNotificationsAsyncRpcAsyncStateHandle safeEcPoolWaitForNotificationsAsyncRpcAsyncStateHandle = null;
		try
		{
			IntPtr handle = new IntPtr((void*)pAsyncState);
			safeEcPoolWaitForNotificationsAsyncRpcAsyncStateHandle = new SafeEcPoolWaitForNotificationsAsyncRpcAsyncStateHandle(handle);
			pAsyncState = null;
			int num = calli(System.Int32 modopt(System.Runtime.CompilerServices.IsLong)(System.IntPtr,Microsoft.Exchange.Rpc.SafeRpcAsyncStateHandle), A_0, safeEcPoolWaitForNotificationsAsyncRpcAsyncStateHandle, *(*A_0));
			if (0 != num)
			{
				safeEcPoolWaitForNotificationsAsyncRpcAsyncStateHandle.CompleteCall(num);
			}
		}
		catch (RpcException ex)
		{
			if (safeEcPoolWaitForNotificationsAsyncRpcAsyncStateHandle != null)
			{
				safeEcPoolWaitForNotificationsAsyncRpcAsyncStateHandle.AbortCall((uint)ex.ErrorCode);
			}
		}
		catch (FailRpcException ex2)
		{
			if (safeEcPoolWaitForNotificationsAsyncRpcAsyncStateHandle != null)
			{
				safeEcPoolWaitForNotificationsAsyncRpcAsyncStateHandle.CompleteCall(ex2.ErrorCode);
			}
		}
		catch (ThreadAbortException)
		{
			if (safeEcPoolWaitForNotificationsAsyncRpcAsyncStateHandle != null)
			{
				safeEcPoolWaitForNotificationsAsyncRpcAsyncStateHandle.AbortCall(1726U);
			}
		}
		catch (OutOfMemoryException)
		{
			if (safeEcPoolWaitForNotificationsAsyncRpcAsyncStateHandle != null)
			{
				safeEcPoolWaitForNotificationsAsyncRpcAsyncStateHandle.AbortCall(1130U);
			}
		}
		catch (System.Exception e)
		{
			<Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.CrashMeNow(e);
		}
		catch (object o)
		{
			<Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.CrashMeNow(o);
		}
		finally
		{
			if (pAsyncState != null)
			{
				<Module>.RpcRaiseException(1130);
			}
		}
	}

	// Token: 0x0600031C RID: 796 RVA: 0x00069B10 File Offset: 0x00068F10
	internal unsafe static void ??__E??_7ManagedExceptionAsyncCrashWrapper@Rpc@Exchange@Microsoft@@6B@@@YMXXZ()
	{
		<Module>.??_7ManagedExceptionAsyncCrashWrapper@Rpc@Exchange@Microsoft@@6B@ = ref <Module>.??_R4ManagedExceptionAsyncCrashWrapper@Rpc@Exchange@Microsoft@@6B@;
		*(ref <Module>.??_7ManagedExceptionAsyncCrashWrapper@Rpc@Exchange@Microsoft@@6B@ + 8) = (long)ldftn(_purecall);
	}

	// Token: 0x0600031D RID: 797 RVA: 0x00069B38 File Offset: 0x00068F38
	internal unsafe static void ??__E??_7PoolRpcServer_Wrapper@@6B@@@YMXXZ()
	{
		<Module>.??_7PoolRpcServer_Wrapper@@6B@ = ref <Module>.??_R4PoolRpcServer_Wrapper@@6B@;
		*(ref <Module>.??_7PoolRpcServer_Wrapper@@6B@ + 8) = (long)ldftn(PoolRpcServer_Wrapper.InternalExecute);
		*(ref <Module>.??_7PoolRpcServer_Wrapper@@6B@ + 16) = <Module>.__unep@?EcValidateParameters@PoolRpcServer_Wrapper@@$$FMEAAJXZ;
		*(ref <Module>.??_7PoolRpcServer_Wrapper@@6B@ + 24) = (long)ldftn(_purecall);
	}

	// Token: 0x0600031E RID: 798 RVA: 0x00069B7C File Offset: 0x00068F7C
	internal unsafe static void ??__E??_7EcPoolConnectRpc@@6B@@@YMXXZ()
	{
		<Module>.??_7EcPoolConnectRpc@@6B@ = ref <Module>.??_R4EcPoolConnectRpc@@6B@;
		*(ref <Module>.??_7EcPoolConnectRpc@@6B@ + 8) = (long)ldftn(PoolRpcServer_Wrapper.InternalExecute);
		*(ref <Module>.??_7EcPoolConnectRpc@@6B@ + 16) = <Module>.__unep@?EcValidateParameters@EcPoolConnectRpc@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcPoolConnectRpc@@6B@ + 24) = (long)ldftn(EcPoolConnectRpc.EcDispatchCall);
	}

	// Token: 0x0600031F RID: 799 RVA: 0x00069BC0 File Offset: 0x00068FC0
	internal unsafe static void ??__E??_7EcPoolDisconnectRpc@@6B@@@YMXXZ()
	{
		<Module>.??_7EcPoolDisconnectRpc@@6B@ = ref <Module>.??_R4EcPoolDisconnectRpc@@6B@;
		*(ref <Module>.??_7EcPoolDisconnectRpc@@6B@ + 8) = (long)ldftn(PoolRpcServer_Wrapper.InternalExecute);
		*(ref <Module>.??_7EcPoolDisconnectRpc@@6B@ + 16) = <Module>.__unep@?EcValidateParameters@PoolRpcServer_Wrapper@@$$FMEAAJXZ;
		*(ref <Module>.??_7EcPoolDisconnectRpc@@6B@ + 24) = (long)ldftn(EcPoolDisconnectRpc.EcDispatchCall);
	}

	// Token: 0x06000320 RID: 800 RVA: 0x00069C04 File Offset: 0x00069004
	internal unsafe static void ??__E??_7EcPoolCreateSessionRpc@@6B@@@YMXXZ()
	{
		<Module>.??_7EcPoolCreateSessionRpc@@6B@ = ref <Module>.??_R4EcPoolCreateSessionRpc@@6B@;
		*(ref <Module>.??_7EcPoolCreateSessionRpc@@6B@ + 8) = (long)ldftn(PoolRpcServer_Wrapper.InternalExecute);
		*(ref <Module>.??_7EcPoolCreateSessionRpc@@6B@ + 16) = <Module>.__unep@?EcValidateParameters@EcPoolCreateSessionRpc@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcPoolCreateSessionRpc@@6B@ + 24) = (long)ldftn(EcPoolCreateSessionRpc.EcDispatchCall);
	}

	// Token: 0x06000321 RID: 801 RVA: 0x00069C48 File Offset: 0x00069048
	internal unsafe static void ??__E??_7EcPoolCloseSessionRpc@@6B@@@YMXXZ()
	{
		<Module>.??_7EcPoolCloseSessionRpc@@6B@ = ref <Module>.??_R4EcPoolCloseSessionRpc@@6B@;
		*(ref <Module>.??_7EcPoolCloseSessionRpc@@6B@ + 8) = (long)ldftn(PoolRpcServer_Wrapper.InternalExecute);
		*(ref <Module>.??_7EcPoolCloseSessionRpc@@6B@ + 16) = <Module>.__unep@?EcValidateParameters@PoolRpcServer_Wrapper@@$$FMEAAJXZ;
		*(ref <Module>.??_7EcPoolCloseSessionRpc@@6B@ + 24) = (long)ldftn(EcPoolCloseSessionRpc.EcDispatchCall);
	}

	// Token: 0x06000322 RID: 802 RVA: 0x00069C8C File Offset: 0x0006908C
	internal unsafe static void ??__E??_7EcPoolSessionDoRpcRpc@@6B@@@YMXXZ()
	{
		<Module>.??_7EcPoolSessionDoRpcRpc@@6B@ = ref <Module>.??_R4EcPoolSessionDoRpcRpc@@6B@;
		*(ref <Module>.??_7EcPoolSessionDoRpcRpc@@6B@ + 8) = (long)ldftn(PoolRpcServer_Wrapper.InternalExecute);
		*(ref <Module>.??_7EcPoolSessionDoRpcRpc@@6B@ + 16) = <Module>.__unep@?EcValidateParameters@EcPoolSessionDoRpcRpc@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcPoolSessionDoRpcRpc@@6B@ + 24) = (long)ldftn(EcPoolSessionDoRpcRpc.EcDispatchCall);
	}

	// Token: 0x06000323 RID: 803 RVA: 0x00069CD0 File Offset: 0x000690D0
	internal unsafe static void ??__E??_7EcPoolWaitForNotificationsAsyncRpc@@6B@@@YMXXZ()
	{
		<Module>.??_7EcPoolWaitForNotificationsAsyncRpc@@6B@ = ref <Module>.??_R4EcPoolWaitForNotificationsAsyncRpc@@6B@;
		*(ref <Module>.??_7EcPoolWaitForNotificationsAsyncRpc@@6B@ + 8) = (long)ldftn(PoolRpcServer_Wrapper.InternalExecute);
		*(ref <Module>.??_7EcPoolWaitForNotificationsAsyncRpc@@6B@ + 16) = <Module>.__unep@?EcValidateParameters@EcPoolWaitForNotificationsAsyncRpc@@$$FUEAAJXZ;
		*(ref <Module>.??_7EcPoolWaitForNotificationsAsyncRpc@@6B@ + 24) = (long)ldftn(EcPoolWaitForNotificationsAsyncRpc.EcDispatchCall);
	}

	// Token: 0x06000324 RID: 804 RVA: 0x00048E68 File Offset: 0x00048268
	internal unsafe static _GUID GUIDFromGuid(ValueType guid)
	{
		byte[] array = ((Guid)guid).ToByteArray();
		int num = 0;
		int num2 = array.Length;
		_GUID result;
		if (0 < num2)
		{
			_GUID* ptr = &result;
			do
			{
				*(byte*)ptr = array[num];
				num++;
				ptr += 1L / (long)sizeof(_GUID);
			}
			while (num < num2);
		}
		return result;
	}

	// Token: 0x06000325 RID: 805 RVA: 0x0004ADC8 File Offset: 0x0004A1C8
	internal unsafe static Guid GuidFromGUID(_GUID* guid)
	{
		Guid result = new Guid((uint)(*guid), *(guid + 4L), *(guid + 6L), *(guid + 8L), *(guid + 9L), *(guid + 10L), *(guid + 11L), *(guid + 12L), *(guid + 13L), *(guid + 14L), *(guid + 15L));
		return result;
	}

	// Token: 0x06000326 RID: 806 RVA: 0x0004AD8C File Offset: 0x0004A18C
	internal unsafe static _GUID GUIDFromGuid(ValueType guid)
	{
		byte[] array = ((Guid)guid).ToByteArray();
		int num = 0;
		int num2 = array.Length;
		_GUID result;
		if (0 < num2)
		{
			_GUID* ptr = &result;
			do
			{
				*(byte*)ptr = array[num];
				num++;
				ptr += 1L / (long)sizeof(_GUID);
			}
			while (num < num2);
		}
		return result;
	}

	// Token: 0x06000327 RID: 807 RVA: 0x0004BDF4 File Offset: 0x0004B1F4
	internal unsafe static int CheckFullPermissions(void* hBinding, QueueViewerRpcServer serverInstance)
	{
		return RpcServerBase.CheckObjectSecurity(serverInstance.SecurityDescriptorBinaryForm, 131260, hBinding);
	}

	// Token: 0x06000328 RID: 808 RVA: 0x0004BBFC File Offset: 0x0004AFFC
	internal unsafe static int GetQueueViewerObjectPageWithPropertyBag(void* hBinding, tagObjectType objectType, int queryFilterLen, byte* pQueryFilterBytes, int sortOrderLen, byte* pSortOrderBytes, int searchForward, int pageSize, int bookmarkObjectLen, byte* pBookmarkObjectBytes, int bookmarkIndex, int includeBookmark, int includeDetails, int propertyBagLen, byte* pPropertyBagBytes, int* pResultPageLen, byte** ppResultPageBytes, int* pTotalCount, int* pPageOffset)
	{
		byte[] mByteArray = null;
		*pResultPageLen = 0;
		*(long*)ppResultPageBytes = 0L;
		QueueViewerRpcServer queueViewerRpcServer = (QueueViewerRpcServer)RpcServerBase.GetServerInstance(QueueViewerRpcServer.RpcIntfHandle);
		byte[] queryFilterBytes = <Module>.UToMBytes(queryFilterLen, pQueryFilterBytes);
		byte[] sortOrderBytes = <Module>.UToMBytes(sortOrderLen, pSortOrderBytes);
		byte[] bookmarkObjectBytes = <Module>.UToMBytes(bookmarkObjectLen, pBookmarkObjectBytes);
		byte[] propertyBagBytes = <Module>.UToMBytes(propertyBagLen, pPropertyBagBytes);
		mByteArray = null;
		try
		{
			bool includeDetails2 = includeDetails == 1;
			bool includeBookmark2 = includeBookmark == 1;
			bool searchForward2 = searchForward == 1;
			mByteArray = queueViewerRpcServer.GetQueueViewerObjectPage((QVObjectType)objectType, queryFilterBytes, sortOrderBytes, searchForward2, pageSize, bookmarkObjectBytes, bookmarkIndex, includeBookmark2, includeDetails2, propertyBagBytes, ref *pTotalCount, ref *pPageOffset);
		}
		catch (QueueViewerException ex)
		{
			return ex.ErrorCode;
		}
		return <Module>.MToUBytes(mByteArray, pResultPageLen, ppResultPageBytes);
	}

	// Token: 0x06000329 RID: 809 RVA: 0x0004BCBC File Offset: 0x0004B0BC
	internal unsafe static int GetQueueViewerObjectPage(void* hBinding, tagObjectType objectType, int queryFilterLen, byte* pQueryFilterBytes, int sortOrderLen, byte* pSortOrderBytes, int searchForward, int pageSize, int bookmarkObjectLen, byte* pBookmarkObjectBytes, int bookmarkIndex, int includeBookmark, int includeDetails, int* pResultPageLen, byte** ppResultPageBytes, int* pTotalCount, int* pPageOffset)
	{
		return <Module>.GetQueueViewerObjectPageWithPropertyBag(hBinding, objectType, queryFilterLen, pQueryFilterBytes, sortOrderLen, pSortOrderBytes, searchForward, pageSize, bookmarkObjectLen, pBookmarkObjectBytes, bookmarkIndex, includeBookmark, includeDetails, 0, null, pResultPageLen, ppResultPageBytes, pTotalCount, pPageOffset);
	}

	// Token: 0x0600032A RID: 810 RVA: 0x0004BE14 File Offset: 0x0004B214
	internal unsafe static int ReadMessageBody(void* hBinding, int mailItemIdLen, byte* pMailItemIdBytes, int position, int count, int* pBytesRead, byte** ppDataBytes)
	{
		*(long*)ppDataBytes = 0L;
		*pBytesRead = 0;
		QueueViewerRpcServer queueViewerRpcServer = (QueueViewerRpcServer)RpcServerBase.GetServerInstance(QueueViewerRpcServer.RpcIntfHandle);
		int num = RpcServerBase.CheckObjectSecurity(queueViewerRpcServer.SecurityDescriptorBinaryForm, 131260, hBinding);
		if (num != null)
		{
			return (num > 0) ? ((num & 65535) | -2147024896) : num;
		}
		byte[] mailItemIdBytes = <Module>.UToMBytes(mailItemIdLen, pMailItemIdBytes);
		byte[] array = new byte[count];
		try
		{
			*pBytesRead = queueViewerRpcServer.ReadMessageBody(mailItemIdBytes, array, position, count);
		}
		catch (QueueViewerException ex)
		{
			return ex.ErrorCode;
		}
		return <Module>.MToUBytesN(array, *pBytesRead, ppDataBytes);
	}

	// Token: 0x0600032B RID: 811 RVA: 0x0004BEC0 File Offset: 0x0004B2C0
	internal unsafe static int FreezeMessage(void* hBinding, int mailItemIdLen, byte* pMailItemIdBytes, int queryFilterLen, byte* pQueryFilterBytes)
	{
		QueueViewerRpcServer queueViewerRpcServer = (QueueViewerRpcServer)RpcServerBase.GetServerInstance(QueueViewerRpcServer.RpcIntfHandle);
		int num = RpcServerBase.CheckObjectSecurity(queueViewerRpcServer.SecurityDescriptorBinaryForm, 131260, hBinding);
		if (num != null)
		{
			return (num > 0) ? ((num & 65535) | -2147024896) : num;
		}
		byte[] mailItemIdBytes = <Module>.UToMBytes(mailItemIdLen, pMailItemIdBytes);
		byte[] queryFilterBytes = <Module>.UToMBytes(queryFilterLen, pQueryFilterBytes);
		try
		{
			queueViewerRpcServer.FreezeMessage(mailItemIdBytes, queryFilterBytes);
		}
		catch (QueueViewerException ex)
		{
			return ex.ErrorCode;
		}
		return 0;
	}

	// Token: 0x0600032C RID: 812 RVA: 0x0004BF54 File Offset: 0x0004B354
	internal unsafe static int UnfreezeMessage(void* hBinding, int mailItemIdLen, byte* pMailItemIdBytes, int queryFilterLen, byte* pQueryFilterBytes)
	{
		QueueViewerRpcServer queueViewerRpcServer = (QueueViewerRpcServer)RpcServerBase.GetServerInstance(QueueViewerRpcServer.RpcIntfHandle);
		int num = RpcServerBase.CheckObjectSecurity(queueViewerRpcServer.SecurityDescriptorBinaryForm, 131260, hBinding);
		if (num != null)
		{
			return (num > 0) ? ((num & 65535) | -2147024896) : num;
		}
		byte[] mailItemIdBytes = <Module>.UToMBytes(mailItemIdLen, pMailItemIdBytes);
		byte[] queryFilterBytes = <Module>.UToMBytes(queryFilterLen, pQueryFilterBytes);
		try
		{
			queueViewerRpcServer.UnfreezeMessage(mailItemIdBytes, queryFilterBytes);
		}
		catch (QueueViewerException ex)
		{
			return ex.ErrorCode;
		}
		return 0;
	}

	// Token: 0x0600032D RID: 813 RVA: 0x0004BFE8 File Offset: 0x0004B3E8
	internal unsafe static int DeleteMessage(void* hBinding, int mailItemIdLen, byte* pMailItemIdBytes, int queryFilterLen, byte* pQueryFilterBytes, int withNDR)
	{
		QueueViewerRpcServer queueViewerRpcServer = (QueueViewerRpcServer)RpcServerBase.GetServerInstance(QueueViewerRpcServer.RpcIntfHandle);
		int num = RpcServerBase.CheckObjectSecurity(queueViewerRpcServer.SecurityDescriptorBinaryForm, 131260, hBinding);
		if (num != null)
		{
			return (num > 0) ? ((num & 65535) | -2147024896) : num;
		}
		byte[] mailItemIdBytes = <Module>.UToMBytes(mailItemIdLen, pMailItemIdBytes);
		byte[] queryFilterBytes = <Module>.UToMBytes(queryFilterLen, pQueryFilterBytes);
		try
		{
			bool withNDR2 = withNDR != 0;
			queueViewerRpcServer.DeleteMessage(mailItemIdBytes, queryFilterBytes, withNDR2);
		}
		catch (QueueViewerException ex)
		{
			return ex.ErrorCode;
		}
		return 0;
	}

	// Token: 0x0600032E RID: 814 RVA: 0x0004C088 File Offset: 0x0004B488
	internal unsafe static int RedirectMessage(void* hBinding, int targetServersLen, byte* pTargetServersBytes)
	{
		QueueViewerRpcServer queueViewerRpcServer = (QueueViewerRpcServer)RpcServerBase.GetServerInstance(QueueViewerRpcServer.RpcIntfHandle);
		int num = RpcServerBase.CheckObjectSecurity(queueViewerRpcServer.SecurityDescriptorBinaryForm, 131260, hBinding);
		if (num != null)
		{
			return (num > 0) ? ((num & 65535) | -2147024896) : num;
		}
		byte[] targetServersBytes = <Module>.UToMBytes(targetServersLen, pTargetServersBytes);
		try
		{
			queueViewerRpcServer.RedirectMessage(targetServersBytes);
		}
		catch (QueueViewerException ex)
		{
			return ex.ErrorCode;
		}
		return 0;
	}

	// Token: 0x0600032F RID: 815 RVA: 0x0004C110 File Offset: 0x0004B510
	internal unsafe static int FreezeQueue(void* hBinding, int queueIdentityLen, byte* pQueueIdentityBytes, int queryFilterLen, byte* pQueryFilterBytes)
	{
		QueueViewerRpcServer queueViewerRpcServer = (QueueViewerRpcServer)RpcServerBase.GetServerInstance(QueueViewerRpcServer.RpcIntfHandle);
		int num = RpcServerBase.CheckObjectSecurity(queueViewerRpcServer.SecurityDescriptorBinaryForm, 131260, hBinding);
		if (num != null)
		{
			return (num > 0) ? ((num & 65535) | -2147024896) : num;
		}
		byte[] queueIdentityBytes = <Module>.UToMBytes(queueIdentityLen, pQueueIdentityBytes);
		byte[] queryFilterBytes = <Module>.UToMBytes(queryFilterLen, pQueryFilterBytes);
		try
		{
			queueViewerRpcServer.FreezeQueue(queueIdentityBytes, queryFilterBytes);
		}
		catch (QueueViewerException ex)
		{
			return ex.ErrorCode;
		}
		return 0;
	}

	// Token: 0x06000330 RID: 816 RVA: 0x0004C1A4 File Offset: 0x0004B5A4
	internal unsafe static int UnfreezeQueue(void* hBinding, int queueIdentityLen, byte* pQueueIdentityBytes, int queryFilterLen, byte* pQueryFilterBytes)
	{
		QueueViewerRpcServer queueViewerRpcServer = (QueueViewerRpcServer)RpcServerBase.GetServerInstance(QueueViewerRpcServer.RpcIntfHandle);
		int num = RpcServerBase.CheckObjectSecurity(queueViewerRpcServer.SecurityDescriptorBinaryForm, 131260, hBinding);
		if (num != null)
		{
			return (num > 0) ? ((num & 65535) | -2147024896) : num;
		}
		byte[] queueIdentityBytes = <Module>.UToMBytes(queueIdentityLen, pQueueIdentityBytes);
		byte[] queryFilterBytes = <Module>.UToMBytes(queryFilterLen, pQueryFilterBytes);
		try
		{
			queueViewerRpcServer.UnfreezeQueue(queueIdentityBytes, queryFilterBytes);
		}
		catch (QueueViewerException ex)
		{
			return ex.ErrorCode;
		}
		return 0;
	}

	// Token: 0x06000331 RID: 817 RVA: 0x0004C238 File Offset: 0x0004B638
	internal unsafe static int RetryQueue(void* hBinding, int queueIdentityLen, byte* pQueueIdentityBytes, int queryFilterLen, byte* pQueryFilterBytes, int resubmit)
	{
		QueueViewerRpcServer queueViewerRpcServer = (QueueViewerRpcServer)RpcServerBase.GetServerInstance(QueueViewerRpcServer.RpcIntfHandle);
		int num = RpcServerBase.CheckObjectSecurity(queueViewerRpcServer.SecurityDescriptorBinaryForm, 131260, hBinding);
		if (num != null)
		{
			return (num > 0) ? ((num & 65535) | -2147024896) : num;
		}
		byte[] queueIdentityBytes = <Module>.UToMBytes(queueIdentityLen, pQueueIdentityBytes);
		byte[] queryFilterBytes = <Module>.UToMBytes(queryFilterLen, pQueryFilterBytes);
		try
		{
			bool resubmit2 = resubmit == 1;
			queueViewerRpcServer.RetryQueue(queueIdentityBytes, queryFilterBytes, resubmit2);
		}
		catch (QueueViewerException ex)
		{
			return ex.ErrorCode;
		}
		return 0;
	}

	// Token: 0x06000332 RID: 818 RVA: 0x0004BCF0 File Offset: 0x0004B0F0
	internal unsafe static int GetPropertyBagBasedQueueViewerObjectPage(void* hBinding, tagObjectType objectType, int inputObjectLength, byte* pInputObjectBytes, int* pOutputObjectLength, byte** ppOutputObjectBytes, int* pTotalCount, int* pPageOffset)
	{
		byte[] mByteArray = null;
		*pOutputObjectLength = 0;
		*(long*)ppOutputObjectBytes = 0L;
		QueueViewerRpcServer queueViewerRpcServer = (QueueViewerRpcServer)RpcServerBase.GetServerInstance(QueueViewerRpcServer.RpcIntfHandle);
		byte[] inputObjectBytes = <Module>.UToMBytes(inputObjectLength, pInputObjectBytes);
		mByteArray = null;
		try
		{
			mByteArray = queueViewerRpcServer.GetPropertyBagBasedQueueViewerObjectPage((QVObjectType)objectType, inputObjectBytes, ref *pTotalCount, ref *pPageOffset);
		}
		catch (QueueViewerException ex)
		{
			return ex.ErrorCode;
		}
		return <Module>.MToUBytes(mByteArray, pOutputObjectLength, ppOutputObjectBytes);
	}

	// Token: 0x06000333 RID: 819 RVA: 0x0004BD68 File Offset: 0x0004B168
	internal unsafe static int GetPropertyBagBasedQueueViewerObjectPageCustomSerialization(void* hBinding, tagObjectType objectType, int inputObjectLength, byte* pInputObjectBytes, int* pOutputObjectLength, byte** ppOutputObjectBytes, int* pTotalCount, int* pPageOffset)
	{
		byte[] mByteArray = null;
		*pOutputObjectLength = 0;
		*(long*)ppOutputObjectBytes = 0L;
		QueueViewerRpcServer queueViewerRpcServer = (QueueViewerRpcServer)RpcServerBase.GetServerInstance(QueueViewerRpcServer.RpcIntfHandle);
		byte[] inputObjectBytes = <Module>.UToMBytes(inputObjectLength, pInputObjectBytes);
		mByteArray = null;
		try
		{
			mByteArray = queueViewerRpcServer.GetPropertyBagBasedQueueViewerObjectPageCustomSerialization((QVObjectType)objectType, inputObjectBytes, ref *pTotalCount, ref *pPageOffset);
		}
		catch (QueueViewerException ex)
		{
			return ex.ErrorCode;
		}
		return <Module>.MToUBytes(mByteArray, pOutputObjectLength, ppOutputObjectBytes);
	}

	// Token: 0x06000334 RID: 820 RVA: 0x0004C2D4 File Offset: 0x0004B6D4
	internal unsafe static int SetMessage(void* hBinding, int mailItemIdLen, byte* pMailItemIdBytes, int queryFilterLen, byte* pQueryFilterBytes, int inputPropertiesLength, byte* pInputPropertiesBytes, int resubmit)
	{
		QueueViewerRpcServer queueViewerRpcServer = (QueueViewerRpcServer)RpcServerBase.GetServerInstance(QueueViewerRpcServer.RpcIntfHandle);
		int num = RpcServerBase.CheckObjectSecurity(queueViewerRpcServer.SecurityDescriptorBinaryForm, 131260, hBinding);
		if (num != null)
		{
			return (num > 0) ? ((num & 65535) | -2147024896) : num;
		}
		byte[] mailItemIdBytes = <Module>.UToMBytes(mailItemIdLen, pMailItemIdBytes);
		byte[] queryFilterBytes = <Module>.UToMBytes(queryFilterLen, pQueryFilterBytes);
		byte[] inputPropertiesBytes = <Module>.UToMBytes(inputPropertiesLength, pInputPropertiesBytes);
		try
		{
			bool resubmit2 = resubmit != 0;
			queueViewerRpcServer.SetMessage(mailItemIdBytes, queryFilterBytes, inputPropertiesBytes, resubmit2);
		}
		catch (QueueViewerException ex)
		{
			return ex.ErrorCode;
		}
		return 0;
	}

	// Token: 0x06000335 RID: 821 RVA: 0x0004E274 File Offset: 0x0004D674
	internal unsafe static RfriAsyncRpcCallWrapper* {ctor}(RfriAsyncRpcCallWrapper* A_0, IntPtr intfHandle)
	{
		IntPtr intPtr = intfHandle;
		*A_0 = ref <Module>.??_7?$BaseAsyncRpcCallWrapper@VRfriAsyncRpcServer@RfriServer@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 8L) = intPtr;
		*A_0 = ref <Module>.??_7RfriAsyncRpcCallWrapper@RfriServer@Rpc@Exchange@Microsoft@@6B@ + 8;
		return A_0;
	}

	// Token: 0x06000336 RID: 822 RVA: 0x0004DC8C File Offset: 0x0004D08C
	internal unsafe static void DispatchCall(RfriAsyncRpcCallWrapper_GetNewDSA* A_0, RfriAsyncRpcServer asyncServer, SafeRpcAsyncStateHandle asyncState)
	{
		if (*(A_0 + 16L) == 0L)
		{
			throw new InvalidHandleException("m_hBinding");
		}
		ulong num = (ulong)(*(A_0 + 48L));
		if (num == 0UL)
		{
			throw new FailRpcException("m_pszServer is NULL", -2147024809);
		}
		*num = 0L;
		IntPtr bindingHandle = new IntPtr(*(A_0 + 16L));
		RfriGetNewDSAFlags flags = (RfriGetNewDSAFlags)(*(A_0 + 24L));
		IntPtr pUserDn = new IntPtr(*(A_0 + 32L));
		IntPtr ppUnused = new IntPtr(*(A_0 + 40L));
		IntPtr ppServer = new IntPtr(*(A_0 + 48L));
		RfriAsyncRpcState_GetNewDSA rfriAsyncRpcState_GetNewDSA = BaseAsyncRpcState<Microsoft::Exchange::Rpc::RfriServer::RfriAsyncRpcState_GetNewDSA,Microsoft::Exchange::Rpc::RfriServer::RfriAsyncRpcServer,Microsoft::Exchange::Rpc::IRfriAsyncDispatch>.CreateFromPool();
		rfriAsyncRpcState_GetNewDSA.Initialize(asyncState, asyncServer, bindingHandle, flags, pUserDn, ppUnused, ppServer);
		rfriAsyncRpcState_GetNewDSA.Begin();
	}

	// Token: 0x06000337 RID: 823 RVA: 0x0004E224 File Offset: 0x0004D624
	internal unsafe static RfriAsyncRpcCallWrapper_GetNewDSA* {ctor}(RfriAsyncRpcCallWrapper_GetNewDSA* A_0, void* hBinding, uint ulFlags, byte* szUserDN, byte** pszUnused, byte** pszServer)
	{
		IntPtr rpcIntfHandle = RfriAsyncRpcServer.RpcIntfHandle;
		*A_0 = ref <Module>.??_7?$BaseAsyncRpcCallWrapper@VRfriAsyncRpcServer@RfriServer@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 8L) = rpcIntfHandle;
		*A_0 = ref <Module>.??_7RfriAsyncRpcCallWrapper_GetNewDSA@RfriServer@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 16L) = hBinding;
		*(A_0 + 24L) = ulFlags;
		*(A_0 + 32L) = szUserDN;
		*(A_0 + 48L) = pszServer;
		return A_0;
	}

	// Token: 0x06000338 RID: 824 RVA: 0x0004DD24 File Offset: 0x0004D124
	internal unsafe static void DispatchCall(RfriAsyncRpcCallWrapper_GetFQDNFromLegacyDN* A_0, RfriAsyncRpcServer asyncServer, SafeRpcAsyncStateHandle asyncState)
	{
		if (*(A_0 + 16L) == 0L)
		{
			throw new InvalidHandleException("m_hBinding");
		}
		ulong num = (ulong)(*(A_0 + 40L));
		if (num == 0UL)
		{
			throw new FailRpcException("m_pszServerFQDN is NULL", -2147024809);
		}
		*num = 0L;
		IntPtr bindingHandle = new IntPtr(*(A_0 + 16L));
		RfriGetFQDNFromLegacyDNFlags flags = (RfriGetFQDNFromLegacyDNFlags)(*(A_0 + 24L));
		uint cbServerDn = (uint)(*(A_0 + 28L));
		IntPtr pServerDn = new IntPtr(*(A_0 + 32L));
		IntPtr ppServerFqdn = new IntPtr(*(A_0 + 40L));
		RfriAsyncRpcState_GetFQDNFromLegacyDN rfriAsyncRpcState_GetFQDNFromLegacyDN = BaseAsyncRpcState<Microsoft::Exchange::Rpc::RfriServer::RfriAsyncRpcState_GetFQDNFromLegacyDN,Microsoft::Exchange::Rpc::RfriServer::RfriAsyncRpcServer,Microsoft::Exchange::Rpc::IRfriAsyncDispatch>.CreateFromPool();
		rfriAsyncRpcState_GetFQDNFromLegacyDN.Initialize(asyncState, asyncServer, bindingHandle, flags, cbServerDn, pServerDn, ppServerFqdn);
		rfriAsyncRpcState_GetFQDNFromLegacyDN.Begin();
	}

	// Token: 0x06000339 RID: 825 RVA: 0x0004E2C8 File Offset: 0x0004D6C8
	internal unsafe static RfriAsyncRpcCallWrapper_GetFQDNFromLegacyDN* {ctor}(RfriAsyncRpcCallWrapper_GetFQDNFromLegacyDN* A_0, void* hBinding, uint ulFlags, uint cbServerDN, byte* szServerDN, byte** pszServerFQDN)
	{
		IntPtr rpcIntfHandle = RfriAsyncRpcServer.RpcIntfHandle;
		*A_0 = ref <Module>.??_7?$BaseAsyncRpcCallWrapper@VRfriAsyncRpcServer@RfriServer@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 8L) = rpcIntfHandle;
		*A_0 = ref <Module>.??_7RfriAsyncRpcCallWrapper_GetFQDNFromLegacyDN@RfriServer@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 16L) = hBinding;
		*(A_0 + 24L) = ulFlags;
		*(A_0 + 28L) = cbServerDN;
		*(A_0 + 32L) = szServerDN;
		*(A_0 + 40L) = pszServerFQDN;
		return A_0;
	}

	// Token: 0x0600033A RID: 826 RVA: 0x0004E2A4 File Offset: 0x0004D6A4
	internal unsafe static BaseAsyncRpcCallWrapper<Microsoft::Exchange::Rpc::RfriServer::RfriAsyncRpcServer>* {ctor}(BaseAsyncRpcCallWrapper<Microsoft::Exchange::Rpc::RfriServer::RfriAsyncRpcServer>* A_0, IntPtr intfHandle)
	{
		*A_0 = ref <Module>.??_7?$BaseAsyncRpcCallWrapper@VRfriAsyncRpcServer@RfriServer@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 8L) = intfHandle;
		return A_0;
	}

	// Token: 0x0600033B RID: 827 RVA: 0x0004CF20 File Offset: 0x0004C320
	internal unsafe static int InternalExecute(BaseAsyncRpcCallWrapper<Microsoft::Exchange::Rpc::RfriServer::RfriAsyncRpcServer>* A_0, SafeRpcAsyncStateHandle asyncState)
	{
		RfriAsyncRpcServer rfriAsyncRpcServer = (RfriAsyncRpcServer)RpcServerBase.GetServerInstance(*(A_0 + 8L));
		if (rfriAsyncRpcServer == null)
		{
			throw new ServerUnavailableException("AsyncServer not initialized");
		}
		calli(System.Void(System.IntPtr,Microsoft.Exchange.Rpc.RfriServer.RfriAsyncRpcServer,Microsoft.Exchange.Rpc.SafeRpcAsyncStateHandle), A_0, rfriAsyncRpcServer, asyncState, *(*A_0 + 8L));
		return 0;
	}

	// Token: 0x0600033C RID: 828 RVA: 0x0004EC60 File Offset: 0x0004E060
	internal unsafe static void* __vecDelDtor(CRequestQueue<tagRFRI_REQUEST>* A_0, uint A_0)
	{
		if ((A_0 & 2U) != 0U)
		{
			CRequestQueue<tagRFRI_REQUEST>* ptr = A_0 - 8L;
			<Module>.__ehvec_dtor(A_0, 136UL, *ptr, ldftn(CRequestQueue<tagRFRI_REQUEST>.{dtor}));
			if ((A_0 & 1U) != 0U)
			{
				<Module>.delete(ptr);
			}
			return ptr;
		}
		<Module>.CRequestQueue<tagRFRI_REQUEST>.{dtor}(A_0);
		if ((A_0 & 1U) != 0U)
		{
			<Module>.delete(A_0);
		}
		return A_0;
	}

	// Token: 0x0600033D RID: 829 RVA: 0x0004DE98 File Offset: 0x0004D298
	internal unsafe static void* __vecDelDtor(CLazyInitRequestQueue<CRFRIRequestQueue,tagRFRI_REQUEST,10000,1>* A_0, uint A_0)
	{
		if ((A_0 & 2U) != 0U)
		{
			CLazyInitRequestQueue<CRFRIRequestQueue,tagRFRI_REQUEST,10000,1>* ptr = A_0 - 8L;
			<Module>.__ehvec_dtor(A_0, 16UL, *ptr, ldftn(CLazyInitRequestQueue<CRFRIRequestQueue,tagRFRI_REQUEST,10000,1>.{dtor}));
			if ((A_0 & 1U) != 0U)
			{
				<Module>.delete(ptr);
			}
			return ptr;
		}
		<Module>.CLazyInitRequestQueue<CRFRIRequestQueue,tagRFRI_REQUEST,10000,1>.{dtor}(A_0);
		if ((A_0 & 1U) != 0U)
		{
			<Module>.delete(A_0);
		}
		return A_0;
	}

	// Token: 0x0600033E RID: 830 RVA: 0x0004E320 File Offset: 0x0004D720
	internal unsafe static void Execute<class\u0020Microsoft::Exchange::Rpc::RfriServer::SafeRfrGetNewDSARpcAsyncStateHandle>(ManagedExceptionAsyncCrashWrapper* A_0, _RPC_ASYNC_STATE* pAsyncState)
	{
		SafeRfrGetNewDSARpcAsyncStateHandle safeRfrGetNewDSARpcAsyncStateHandle = null;
		try
		{
			IntPtr handle = new IntPtr((void*)pAsyncState);
			safeRfrGetNewDSARpcAsyncStateHandle = new SafeRfrGetNewDSARpcAsyncStateHandle(handle);
			pAsyncState = null;
			int num = calli(System.Int32 modopt(System.Runtime.CompilerServices.IsLong)(System.IntPtr,Microsoft.Exchange.Rpc.SafeRpcAsyncStateHandle), A_0, safeRfrGetNewDSARpcAsyncStateHandle, *(*A_0));
			if (0 != num)
			{
				safeRfrGetNewDSARpcAsyncStateHandle.CompleteCall(num);
			}
		}
		catch (RpcException ex)
		{
			if (safeRfrGetNewDSARpcAsyncStateHandle != null)
			{
				safeRfrGetNewDSARpcAsyncStateHandle.AbortCall((uint)ex.ErrorCode);
			}
		}
		catch (FailRpcException ex2)
		{
			if (safeRfrGetNewDSARpcAsyncStateHandle != null)
			{
				safeRfrGetNewDSARpcAsyncStateHandle.CompleteCall(ex2.ErrorCode);
			}
		}
		catch (ThreadAbortException)
		{
			if (safeRfrGetNewDSARpcAsyncStateHandle != null)
			{
				safeRfrGetNewDSARpcAsyncStateHandle.AbortCall(1726U);
			}
		}
		catch (OutOfMemoryException)
		{
			if (safeRfrGetNewDSARpcAsyncStateHandle != null)
			{
				safeRfrGetNewDSARpcAsyncStateHandle.AbortCall(1130U);
			}
		}
		catch (System.Exception e)
		{
			<Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.CrashMeNow(e);
		}
		catch (object o)
		{
			<Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.CrashMeNow(o);
		}
		finally
		{
			if (pAsyncState != null)
			{
				<Module>.RpcRaiseException(1130);
			}
		}
	}

	// Token: 0x0600033F RID: 831 RVA: 0x0004E478 File Offset: 0x0004D878
	internal unsafe static void Execute<class\u0020Microsoft::Exchange::Rpc::RfriServer::SafeRfrGetFQDNFromLegacyDNRpcAsyncStateHandle>(ManagedExceptionAsyncCrashWrapper* A_0, _RPC_ASYNC_STATE* pAsyncState)
	{
		SafeRfrGetFQDNFromLegacyDNRpcAsyncStateHandle safeRfrGetFQDNFromLegacyDNRpcAsyncStateHandle = null;
		try
		{
			IntPtr handle = new IntPtr((void*)pAsyncState);
			safeRfrGetFQDNFromLegacyDNRpcAsyncStateHandle = new SafeRfrGetFQDNFromLegacyDNRpcAsyncStateHandle(handle);
			pAsyncState = null;
			int num = calli(System.Int32 modopt(System.Runtime.CompilerServices.IsLong)(System.IntPtr,Microsoft.Exchange.Rpc.SafeRpcAsyncStateHandle), A_0, safeRfrGetFQDNFromLegacyDNRpcAsyncStateHandle, *(*A_0));
			if (0 != num)
			{
				safeRfrGetFQDNFromLegacyDNRpcAsyncStateHandle.CompleteCall(num);
			}
		}
		catch (RpcException ex)
		{
			if (safeRfrGetFQDNFromLegacyDNRpcAsyncStateHandle != null)
			{
				safeRfrGetFQDNFromLegacyDNRpcAsyncStateHandle.AbortCall((uint)ex.ErrorCode);
			}
		}
		catch (FailRpcException ex2)
		{
			if (safeRfrGetFQDNFromLegacyDNRpcAsyncStateHandle != null)
			{
				safeRfrGetFQDNFromLegacyDNRpcAsyncStateHandle.CompleteCall(ex2.ErrorCode);
			}
		}
		catch (ThreadAbortException)
		{
			if (safeRfrGetFQDNFromLegacyDNRpcAsyncStateHandle != null)
			{
				safeRfrGetFQDNFromLegacyDNRpcAsyncStateHandle.AbortCall(1726U);
			}
		}
		catch (OutOfMemoryException)
		{
			if (safeRfrGetFQDNFromLegacyDNRpcAsyncStateHandle != null)
			{
				safeRfrGetFQDNFromLegacyDNRpcAsyncStateHandle.AbortCall(1130U);
			}
		}
		catch (System.Exception e)
		{
			<Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.CrashMeNow(e);
		}
		catch (object o)
		{
			<Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.CrashMeNow(o);
		}
		finally
		{
			if (pAsyncState != null)
			{
				<Module>.RpcRaiseException(1130);
			}
		}
	}

	// Token: 0x06000340 RID: 832 RVA: 0x00069D14 File Offset: 0x00069114
	internal unsafe static void ??__E??_7ManagedExceptionAsyncCrashWrapper@Rpc@Exchange@Microsoft@@6B@@@YMXXZ()
	{
		<Module>.??_7ManagedExceptionAsyncCrashWrapper@Rpc@Exchange@Microsoft@@6B@ = ref <Module>.??_R4ManagedExceptionAsyncCrashWrapper@Rpc@Exchange@Microsoft@@6B@;
		*(ref <Module>.??_7ManagedExceptionAsyncCrashWrapper@Rpc@Exchange@Microsoft@@6B@ + 8) = (long)ldftn(_purecall);
	}

	// Token: 0x06000341 RID: 833 RVA: 0x00069D3C File Offset: 0x0006913C
	internal unsafe static void ??__E??_7RfriAsyncRpcCallWrapper@RfriServer@Rpc@Exchange@Microsoft@@6B@@@YMXXZ()
	{
		<Module>.??_7RfriAsyncRpcCallWrapper@RfriServer@Rpc@Exchange@Microsoft@@6B@ = ref <Module>.??_R4RfriAsyncRpcCallWrapper@RfriServer@Rpc@Exchange@Microsoft@@6B@;
		*(ref <Module>.??_7RfriAsyncRpcCallWrapper@RfriServer@Rpc@Exchange@Microsoft@@6B@ + 8) = (long)ldftn(Microsoft.Exchange.Rpc.BaseAsyncRpcCallWrapper<Microsoft::Exchange::Rpc::RfriServer::RfriAsyncRpcServer>.InternalExecute);
		*(ref <Module>.??_7RfriAsyncRpcCallWrapper@RfriServer@Rpc@Exchange@Microsoft@@6B@ + 16) = (long)ldftn(_purecall);
	}

	// Token: 0x06000342 RID: 834 RVA: 0x00069D74 File Offset: 0x00069174
	internal unsafe static void ??__E??_7?$BaseAsyncRpcCallWrapper@VRfriAsyncRpcServer@RfriServer@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@6B@@@YMXXZ()
	{
		<Module>.??_7?$BaseAsyncRpcCallWrapper@VRfriAsyncRpcServer@RfriServer@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@6B@ = ref <Module>.??_R4?$BaseAsyncRpcCallWrapper@VRfriAsyncRpcServer@RfriServer@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@6B@;
		*(ref <Module>.??_7?$BaseAsyncRpcCallWrapper@VRfriAsyncRpcServer@RfriServer@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@6B@ + 8) = (long)ldftn(Microsoft.Exchange.Rpc.BaseAsyncRpcCallWrapper<Microsoft::Exchange::Rpc::RfriServer::RfriAsyncRpcServer>.InternalExecute);
		*(ref <Module>.??_7?$BaseAsyncRpcCallWrapper@VRfriAsyncRpcServer@RfriServer@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@6B@ + 16) = (long)ldftn(_purecall);
	}

	// Token: 0x06000343 RID: 835 RVA: 0x00069DAC File Offset: 0x000691AC
	internal unsafe static void ??__E??_7RfriAsyncRpcCallWrapper_GetNewDSA@RfriServer@Rpc@Exchange@Microsoft@@6B@@@YMXXZ()
	{
		<Module>.??_7RfriAsyncRpcCallWrapper_GetNewDSA@RfriServer@Rpc@Exchange@Microsoft@@6B@ = ref <Module>.??_R4RfriAsyncRpcCallWrapper_GetNewDSA@RfriServer@Rpc@Exchange@Microsoft@@6B@;
		*(ref <Module>.??_7RfriAsyncRpcCallWrapper_GetNewDSA@RfriServer@Rpc@Exchange@Microsoft@@6B@ + 8) = (long)ldftn(Microsoft.Exchange.Rpc.BaseAsyncRpcCallWrapper<Microsoft::Exchange::Rpc::RfriServer::RfriAsyncRpcServer>.InternalExecute);
		*(ref <Module>.??_7RfriAsyncRpcCallWrapper_GetNewDSA@RfriServer@Rpc@Exchange@Microsoft@@6B@ + 16) = (long)ldftn(Microsoft.Exchange.Rpc.RfriServer.RfriAsyncRpcCallWrapper_GetNewDSA.DispatchCall);
	}

	// Token: 0x06000344 RID: 836 RVA: 0x00069DE4 File Offset: 0x000691E4
	internal unsafe static void ??__E??_7RfriAsyncRpcCallWrapper_GetFQDNFromLegacyDN@RfriServer@Rpc@Exchange@Microsoft@@6B@@@YMXXZ()
	{
		<Module>.??_7RfriAsyncRpcCallWrapper_GetFQDNFromLegacyDN@RfriServer@Rpc@Exchange@Microsoft@@6B@ = ref <Module>.??_R4RfriAsyncRpcCallWrapper_GetFQDNFromLegacyDN@RfriServer@Rpc@Exchange@Microsoft@@6B@;
		*(ref <Module>.??_7RfriAsyncRpcCallWrapper_GetFQDNFromLegacyDN@RfriServer@Rpc@Exchange@Microsoft@@6B@ + 8) = (long)ldftn(Microsoft.Exchange.Rpc.BaseAsyncRpcCallWrapper<Microsoft::Exchange::Rpc::RfriServer::RfriAsyncRpcServer>.InternalExecute);
		*(ref <Module>.??_7RfriAsyncRpcCallWrapper_GetFQDNFromLegacyDN@RfriServer@Rpc@Exchange@Microsoft@@6B@ + 16) = (long)ldftn(Microsoft.Exchange.Rpc.RfriServer.RfriAsyncRpcCallWrapper_GetFQDNFromLegacyDN.DispatchCall);
	}

	// Token: 0x06000345 RID: 837 RVA: 0x0004F66C File Offset: 0x0004EA6C
	internal unsafe static int MToUGenericRequestInfo(Microsoft.Exchange.Rpc.Common.RpcGenericRequestInfo requestInfo, tagGenericRequestInfo* pRequestInfo)
	{
		int num = 0;
		if (pRequestInfo == null)
		{
			num = -2147024809;
		}
		else
		{
			<Module>.Microsoft.Exchange.Rpc.Common.InitGenericRequestInfo(pRequestInfo);
			if (requestInfo == null)
			{
				num = -2147024809;
			}
			else
			{
				*(int*)pRequestInfo = requestInfo.ServerVersion;
				*(int*)(pRequestInfo + 4L / (long)sizeof(tagGenericRequestInfo)) = requestInfo.CommandId;
				*(int*)(pRequestInfo + 8L / (long)sizeof(tagGenericRequestInfo)) = requestInfo.CommandMajorVersion;
				*(int*)(pRequestInfo + 12L / (long)sizeof(tagGenericRequestInfo)) = requestInfo.CommandMinorVersion;
				if (requestInfo.AttachedData == null || requestInfo.AttachedData.Length <= 0)
				{
					return num;
				}
				num = <Module>.Microsoft.Exchange.Rpc.Common.GetUnmanagedBytes(requestInfo.AttachedData, (byte**)(pRequestInfo + 24L / (long)sizeof(tagGenericRequestInfo)), (int*)(pRequestInfo + 16L / (long)sizeof(tagGenericRequestInfo)));
				if (num >= 0)
				{
					return num;
				}
			}
		}
		<Module>.Microsoft.Exchange.Rpc.Common.FreeGenericRequestInfo(pRequestInfo);
		return num;
	}

	// Token: 0x06000346 RID: 838 RVA: 0x0004F6F4 File Offset: 0x0004EAF4
	internal unsafe static int MToUGenericReplyInfo(Microsoft.Exchange.Rpc.Common.RpcGenericReplyInfo replyInfo, tagGenericReplyInfo* pReplyInfo)
	{
		int num = 0;
		if (pReplyInfo == null)
		{
			num = -2147024809;
		}
		else
		{
			<Module>.Microsoft.Exchange.Rpc.Common.InitGenericReplyInfo(pReplyInfo);
			if (replyInfo == null)
			{
				num = -2147024809;
			}
			else
			{
				*(int*)pReplyInfo = replyInfo.ServerVersion;
				*(int*)(pReplyInfo + 4L / (long)sizeof(tagGenericReplyInfo)) = replyInfo.CommandId;
				*(int*)(pReplyInfo + 8L / (long)sizeof(tagGenericReplyInfo)) = replyInfo.CommandMajorVersion;
				*(int*)(pReplyInfo + 12L / (long)sizeof(tagGenericReplyInfo)) = replyInfo.CommandMinorVersion;
				if (replyInfo.AttachedData == null || replyInfo.AttachedData.Length <= 0)
				{
					return num;
				}
				num = <Module>.Microsoft.Exchange.Rpc.Common.GetUnmanagedBytes(replyInfo.AttachedData, (byte**)(pReplyInfo + 24L / (long)sizeof(tagGenericReplyInfo)), (int*)(pReplyInfo + 16L / (long)sizeof(tagGenericReplyInfo)));
				if (num >= 0)
				{
					return num;
				}
			}
		}
		<Module>.Microsoft.Exchange.Rpc.Common.FreeGenericReplyInfo(pReplyInfo);
		return num;
	}

	// Token: 0x06000347 RID: 839 RVA: 0x0004F77C File Offset: 0x0004EB7C
	internal unsafe static Microsoft.Exchange.Rpc.Common.RpcGenericRequestInfo UToMGenericRequestInfo(tagGenericRequestInfo* pRequestInfo)
	{
		byte[] attachedData = null;
		int num = *(pRequestInfo + 16L);
		if (num > 0)
		{
			ulong num2 = (ulong)(*(pRequestInfo + 24L));
			if (num2 != 0UL)
			{
				attachedData = <Module>.Microsoft.Exchange.Rpc.Common.MakeManagedBytes(num2, num);
			}
		}
		return new Microsoft.Exchange.Rpc.Common.RpcGenericRequestInfo(*pRequestInfo, *(pRequestInfo + 4L), *(pRequestInfo + 8L), *(pRequestInfo + 12L), attachedData);
	}

	// Token: 0x06000348 RID: 840 RVA: 0x0004F7C0 File Offset: 0x0004EBC0
	internal unsafe static Microsoft.Exchange.Rpc.Common.RpcGenericReplyInfo UToMGenericReplyInfo(tagGenericReplyInfo* pReplyInfo)
	{
		byte[] attachedData = null;
		int num = *(pReplyInfo + 16L);
		if (num > 0)
		{
			ulong num2 = (ulong)(*(pReplyInfo + 24L));
			if (num2 != 0UL)
			{
				attachedData = <Module>.Microsoft.Exchange.Rpc.Common.MakeManagedBytes(num2, num);
			}
		}
		return new Microsoft.Exchange.Rpc.Common.RpcGenericReplyInfo(*pReplyInfo, *(pReplyInfo + 4L), *(pReplyInfo + 8L), *(pReplyInfo + 12L), attachedData);
	}

	// Token: 0x06000349 RID: 841 RVA: 0x0004F8AC File Offset: 0x0004ECAC
	internal unsafe static byte[] MakeManagedBytes(byte* _pb, int _cb)
	{
		byte[] array = new byte[_cb];
		if (_cb > 0)
		{
			Marshal.Copy((IntPtr)((void*)_pb), array, 0, _cb);
		}
		return array;
	}

	// Token: 0x0600034A RID: 842 RVA: 0x0004F8D4 File Offset: 0x0004ECD4
	internal unsafe static int GetUnmanagedBytes(byte[] bytes, byte** _ppb, int* _pcb)
	{
		*(long*)_ppb = 0L;
		*_pcb = 0;
		if (bytes != null)
		{
			int num = bytes.Length;
			if (num > 0)
			{
				int num2 = num;
				void* ptr = <Module>.MIDL_user_allocate((ulong)((long)num2));
				*(long*)_ppb = ptr;
				if (null == ptr)
				{
					return -2147024882;
				}
				*_pcb = num2;
				if (num2 > 0)
				{
					IntPtr destination = (IntPtr)(*(long*)_ppb);
					Marshal.Copy(bytes, 0, destination, num2);
				}
			}
		}
		return 0;
	}

	// Token: 0x0600034B RID: 843 RVA: 0x0004F924 File Offset: 0x0004ED24
	[return: MarshalAs(UnmanagedType.U1)]
	internal static bool StringEqual(string str1, string str2)
	{
		return (string.IsNullOrEmpty(str1) && string.IsNullOrEmpty(str2)) || str1 == str2;
	}

	// Token: 0x0600034C RID: 844 RVA: 0x0004F94C File Offset: 0x0004ED4C
	[return: MarshalAs(UnmanagedType.U1)]
	internal static bool FromUnmanagedBool(int nativeBool)
	{
		return (nativeBool != 0) ? 1 : 0;
	}

	// Token: 0x0600034D RID: 845 RVA: 0x0004F964 File Offset: 0x0004ED64
	internal static int ToUnmanagedBool([MarshalAs(UnmanagedType.U1)] bool boolValue)
	{
		return (!boolValue) ? 0 : 1;
	}

	// Token: 0x0600034E RID: 846 RVA: 0x0004F97C File Offset: 0x0004ED7C
	[return: MarshalAs(UnmanagedType.U1)]
	internal static bool IsValidDateTime(DateTime dateTime)
	{
		DateTime t = DateTime.FromFileTimeUtc(0L);
		int num;
		if (dateTime > t && dateTime < DateTime.MaxValue)
		{
			num = 1;
		}
		else
		{
			num = 0;
		}
		return (byte)num != 0;
	}

	// Token: 0x0600034F RID: 847 RVA: 0x00050AC8 File Offset: 0x0004FEC8
	internal static System.Exception GetRpcException(int rpcStatus, string message)
	{
		if (rpcStatus <= 1723)
		{
			if (rpcStatus == 1723)
			{
				return new ServerTooBusyException(message);
			}
			if (rpcStatus == 6)
			{
				return new InvalidHandleException(message);
			}
			if (rpcStatus == 14)
			{
				return new OutOfMemoryException(message);
			}
			if (rpcStatus == 1722)
			{
				return new ServerUnavailableException(message);
			}
		}
		else
		{
			if (rpcStatus == 1740)
			{
				return new DuplicateRpcEndpointException(message);
			}
			if (rpcStatus == 1818)
			{
				return new CallCancelledException(message);
			}
		}
		return new RpcException(message, rpcStatus);
	}

	// Token: 0x06000350 RID: 848 RVA: 0x00050B38 File Offset: 0x0004FF38
	internal static void ThrowRpcException(int rpcStatus, string message)
	{
		throw <Module>.GetRpcException(rpcStatus, message);
	}

	// Token: 0x06000351 RID: 849 RVA: 0x0004FAB8 File Offset: 0x0004EEB8
	internal static RpcClientFlags GetRpcClientFlags([MarshalAs(UnmanagedType.U1)] bool allowImpersonation, [MarshalAs(UnmanagedType.U1)] bool useEncryptedConnection, [MarshalAs(UnmanagedType.U1)] bool ignoreInvalidServerCertificate, [MarshalAs(UnmanagedType.U1)] bool uniqueBinding, [MarshalAs(UnmanagedType.U1)] bool useSsl)
	{
		RpcClientFlags rpcClientFlags = allowImpersonation ? RpcClientFlags.AllowImpersonation : RpcClientFlags.None;
		RpcClientFlags rpcClientFlags2 = useEncryptedConnection ? RpcClientFlags.UseEncryptedConnection : RpcClientFlags.None;
		RpcClientFlags rpcClientFlags3 = ignoreInvalidServerCertificate ? RpcClientFlags.IgnoreInvalidServerCertificate : RpcClientFlags.None;
		RpcClientFlags rpcClientFlags4 = uniqueBinding ? RpcClientFlags.UniqueBinding : RpcClientFlags.None;
		RpcClientFlags rpcClientFlags5 = useSsl ? RpcClientFlags.UseSsl : RpcClientFlags.None;
		return rpcClientFlags5 | rpcClientFlags4 | rpcClientFlags3 | rpcClientFlags2 | rpcClientFlags;
	}

	// Token: 0x06000352 RID: 850 RVA: 0x0004FB08 File Offset: 0x0004EF08
	internal static int IsLocalSystem()
	{
		bool result = false;
		WindowsIdentity current = WindowsIdentity.GetCurrent();
		if (current != null)
		{
			if (current.User != null)
			{
				result = current.User.IsWellKnown(WellKnownSidType.LocalSystemSid);
			}
			((IDisposable)current).Dispose();
		}
		return result;
	}

	// Token: 0x06000353 RID: 851 RVA: 0x0004FDC8 File Offset: 0x0004F1C8
	internal unsafe static string CollectRpcEEInfo()
	{
		StringBuilder stringBuilder = new StringBuilder(1024);
		tagRPC_ERROR_ENUM_HANDLE tagRPC_ERROR_ENUM_HANDLE;
		int num = <Module>.RpcErrorStartEnumeration(&tagRPC_ERROR_ENUM_HANDLE);
		if (num == 1761)
		{
			stringBuilder.AppendLine("RPC EEInfo is not enabled or there is no error on this thread.");
		}
		else if (num != null)
		{
			stringBuilder.AppendLine(string.Format("RpcErrorStartEnumeration failure, RPC Status: {0:X}", num));
		}
		else
		{
			for (;;)
			{
				tagRPC_EXTENDED_ERROR_INFO tagRPC_EXTENDED_ERROR_INFO = 1;
				*(ref tagRPC_EXTENDED_ERROR_INFO + 46) = 0;
				*(ref tagRPC_EXTENDED_ERROR_INFO + 48) = 4;
				num = <Module>.RpcErrorGetNextRecord(&tagRPC_ERROR_ENUM_HANDLE, 0, &tagRPC_EXTENDED_ERROR_INFO);
				if (num == 1761)
				{
					goto IL_3E3;
				}
				if (num != null)
				{
					break;
				}
				stringBuilder.AppendLine();
				string arg;
				if (*(ref tagRPC_EXTENDED_ERROR_INFO + 8) != 0L)
				{
					arg = Marshal.PtrToStringUni((IntPtr)(*(ref tagRPC_EXTENDED_ERROR_INFO + 8)));
				}
				else
				{
					arg = "n/a";
				}
				stringBuilder.AppendLine(string.Format("EEInfo: ComputerName: {0}", arg));
				stringBuilder.AppendLine(string.Format("EEInfo: ProcessID: {0}", (uint)(*(ref tagRPC_EXTENDED_ERROR_INFO + 16))));
				stringBuilder.AppendLine(string.Format("EEInfo: Generation Time: {0:D4}-{1:D2}-{2:D2} {3:D2}:{4:D2}:{5:D2}.{6:D3}", new object[]
				{
					*(ref tagRPC_EXTENDED_ERROR_INFO + 20),
					*(ref tagRPC_EXTENDED_ERROR_INFO + 22),
					*(ref tagRPC_EXTENDED_ERROR_INFO + 26),
					*(ref tagRPC_EXTENDED_ERROR_INFO + 28),
					*(ref tagRPC_EXTENDED_ERROR_INFO + 30),
					*(ref tagRPC_EXTENDED_ERROR_INFO + 32),
					*(ref tagRPC_EXTENDED_ERROR_INFO + 34)
				}));
				stringBuilder.AppendLine(string.Format("EEInfo: Generating component: {0}", (uint)(*(ref tagRPC_EXTENDED_ERROR_INFO + 36))));
				stringBuilder.AppendLine(string.Format("EEInfo: Status: 0x{0:X8}", (uint)(*(ref tagRPC_EXTENDED_ERROR_INFO + 40))));
				stringBuilder.AppendLine(string.Format("EEInfo: Detection location: {0}", (int)(*(ref tagRPC_EXTENDED_ERROR_INFO + 44))));
				stringBuilder.AppendLine(string.Format("EEInfo: Flags: {0}", (int)(*(ref tagRPC_EXTENDED_ERROR_INFO + 46))));
				stringBuilder.AppendLine(string.Format("EEInfo: NumberOfParameters: {0}", *(ref tagRPC_EXTENDED_ERROR_INFO + 48)));
				int num2 = 0;
				if (0 < *(ref tagRPC_EXTENDED_ERROR_INFO + 48))
				{
					long num3 = ref tagRPC_EXTENDED_ERROR_INFO + 72;
					long num4 = ref tagRPC_EXTENDED_ERROR_INFO + 64;
					long num5 = ref tagRPC_EXTENDED_ERROR_INFO + 56;
					do
					{
						int num6 = *num5;
						switch (num6)
						{
						case 1:
						{
							IntPtr ptr = (IntPtr)(*num4);
							stringBuilder.AppendLine(string.Format("EEInfo:\tprm[{0}]: Ansi string: {1}", num2, Marshal.PtrToStringAnsi(ptr)));
							break;
						}
						case 2:
						{
							IntPtr ptr2 = (IntPtr)(*num4);
							stringBuilder.AppendLine(string.Format("EEInfo:\tprm[{0}]: Unicode string: {1}", num2, Marshal.PtrToStringUni(ptr2)));
							break;
						}
						case 3:
							stringBuilder.AppendLine(string.Format("EEInfo:\tprm[{0}]: Long val: {1} (0x{1:X8})", num2, *num4));
							break;
						case 4:
							stringBuilder.AppendLine(string.Format("EEInfo:\tprm[{0}]: Short val: {1}", num2, (int)(*num4)));
							break;
						case 5:
							stringBuilder.AppendLine(string.Format("EEInfo:\tprm[{0}]: Pointer val: 0x{1:X}", num2, (ulong)(*num4)));
							break;
						case 6:
							stringBuilder.AppendLine(string.Format("EEInfo:\tprm[{0}]: Truncated. (Param value was dropped due to the lack of memory.)", num2));
							break;
						case 7:
						{
							stringBuilder.Append(string.Format("EEInfo:\tprm[{0}]: Binary Buffer: [", num2));
							int num7 = 0;
							long num8 = 0L;
							short num9 = *num3;
							if (0 < num9)
							{
								do
								{
									stringBuilder.Append(string.Format("{0}", *(*num4 + num8)));
									num7++;
									num8 += 1L;
									num9 = *num3;
								}
								while (num7 < (int)num9);
							}
							stringBuilder.AppendLine(string.Format("], size={0}", (int)num9));
							break;
						}
						default:
							stringBuilder.AppendLine(string.Format("EEInfo:\tprm[{0}]: Unknown param type: {1}", num2, num6));
							break;
						}
						num2++;
						num5 += 24L;
						num4 += 24L;
						num3 += 24L;
					}
					while (num2 < *(ref tagRPC_EXTENDED_ERROR_INFO + 48));
				}
			}
			stringBuilder.AppendLine(string.Format("RpcErrorGetNextRecord failure, RPC Status: {0:X}", num));
			IL_3E3:
			<Module>.RpcErrorEndEnumeration(&tagRPC_ERROR_ENUM_HANDLE);
		}
		return stringBuilder.ToString();
	}

	// Token: 0x06000354 RID: 852 RVA: 0x00050BB4 File Offset: 0x0004FFB4
	internal static System.Exception GetRpcExceptionWithEEInfo(int rpcStatus, string routineName)
	{
		string message = string.Format("Error 0x{0:x} ({3}) from {1} {2}", new object[]
		{
			rpcStatus,
			routineName,
			<Module>.Microsoft.Exchange.Rpc.CollectRpcEEInfo(),
			new Win32Exception(rpcStatus).Message
		});
		return <Module>.GetRpcException(rpcStatus, message);
	}

	// Token: 0x06000355 RID: 853 RVA: 0x00050C00 File Offset: 0x00050000
	internal static void ThrowRpcExceptionWithEEInfo(int rpcStatus, string routineName)
	{
		throw <Module>.Microsoft.Exchange.Rpc.GetRpcExceptionWithEEInfo(rpcStatus, routineName);
	}

	// Token: 0x06000356 RID: 854 RVA: 0x000502A4 File Offset: 0x0004F6A4
	internal unsafe static int FIsProtSeq(void* hBinding, ushort* wszProtseq)
	{
		int num = 0;
		ushort* ptr = null;
		ushort* ptr2 = null;
		if (0 == <Module>.RpcBindingToStringBindingW(hBinding, &ptr))
		{
			if (0 == <Module>.RpcStringBindingParseW(ptr, null, &ptr2, null, null, null))
			{
				num = ((0 == <Module>.lstrcmpiW((ushort*)ptr2, (ushort*)wszProtseq)) ? 1 : num);
				<Module>.RpcStringFreeW(&ptr2);
			}
			<Module>.RpcStringFreeW(&ptr);
		}
		return num;
	}

	// Token: 0x06000357 RID: 855 RVA: 0x000502F8 File Offset: 0x0004F6F8
	internal unsafe static int FIsTCP(void* hBinding)
	{
		return <Module>.Microsoft.Exchange.Rpc.FIsProtSeq(hBinding, (ushort*)(&<Module>.??_C@_1BK@BPGFLIHL@?$AAn?$AAc?$AAa?$AAc?$AAn?$AA_?$AAi?$AAp?$AA_?$AAt?$AAc?$AAp?$AA?$AA@));
	}

	// Token: 0x06000358 RID: 856 RVA: 0x00050310 File Offset: 0x0004F710
	internal unsafe static int FIsHTTP(void* hBinding)
	{
		return <Module>.Microsoft.Exchange.Rpc.FIsProtSeq(hBinding, (ushort*)(&<Module>.??_C@_1BG@FOAHFCPJ@?$AAn?$AAc?$AAa?$AAc?$AAn?$AA_?$AAh?$AAt?$AAt?$AAp?$AA?$AA@));
	}

	// Token: 0x06000359 RID: 857 RVA: 0x00050328 File Offset: 0x0004F728
	internal unsafe static int FIsLRPC(void* hBinding)
	{
		return <Module>.Microsoft.Exchange.Rpc.FIsProtSeq(hBinding, (ushort*)(&<Module>.??_C@_1BA@EONDGCCM@?$AAn?$AAc?$AAa?$AAl?$AAr?$AAp?$AAc?$AA?$AA@));
	}

	// Token: 0x0600035A RID: 858 RVA: 0x0004FC98 File Offset: 0x0004F098
	internal unsafe static Guid GuidFromGUID(_GUID* guid)
	{
		Guid result = new Guid((uint)(*guid), *(guid + 4L), *(guid + 6L), *(guid + 8L), *(guid + 9L), *(guid + 10L), *(guid + 11L), *(guid + 12L), *(guid + 13L), *(guid + 14L), *(guid + 15L));
		return result;
	}

	// Token: 0x0600035B RID: 859 RVA: 0x0004FC5C File Offset: 0x0004F05C
	internal unsafe static _GUID GUIDFromGuid(ValueType guid)
	{
		byte[] array = ((Guid)guid).ToByteArray();
		int num = 0;
		int num2 = array.Length;
		_GUID result;
		if (0 < num2)
		{
			_GUID* ptr = &result;
			do
			{
				*(byte*)ptr = array[num];
				num++;
				ptr += 1L / (long)sizeof(_GUID);
			}
			while (num < num2);
		}
		return result;
	}

	// Token: 0x0600035C RID: 860 RVA: 0x000544C8 File Offset: 0x000538C8
	internal unsafe static RpcHttpConnectionRegistrationRpcAsyncCallWrapper* {ctor}(RpcHttpConnectionRegistrationRpcAsyncCallWrapper* A_0, IntPtr intfHandle)
	{
		*A_0 = ref <Module>.??_7RpcHttpConnectionRegistrationRpcAsyncCallWrapper@RpcHttpConnectionRegistration@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 8L) = intfHandle;
		return A_0;
	}

	// Token: 0x0600035D RID: 861 RVA: 0x000533D4 File Offset: 0x000527D4
	internal unsafe static int InternalExecute(RpcHttpConnectionRegistrationRpcAsyncCallWrapper* A_0, SafeRpcAsyncStateHandle asyncState)
	{
		RpcHttpConnectionRegistrationAsyncRpcServer rpcHttpConnectionRegistrationAsyncRpcServer = (RpcHttpConnectionRegistrationAsyncRpcServer)RpcServerBase.GetServerInstance(*(A_0 + 8L));
		if (rpcHttpConnectionRegistrationAsyncRpcServer == null)
		{
			return -2147221227;
		}
		return calli(System.Int32 modopt(System.Runtime.CompilerServices.IsLong)(System.IntPtr,Microsoft.Exchange.Rpc.RpcHttpConnectionRegistration.RpcHttpConnectionRegistrationAsyncRpcServer,Microsoft.Exchange.Rpc.SafeRpcAsyncStateHandle), A_0, rpcHttpConnectionRegistrationAsyncRpcServer, asyncState, *(*A_0 + 8L));
	}

	// Token: 0x0600035E RID: 862 RVA: 0x00053EE0 File Offset: 0x000532E0
	internal unsafe static int EcDispatchCall(RpcHttpConnectionRegistrationRpcAsyncCallWrapper_EcRegister* A_0, RpcHttpConnectionRegistrationAsyncRpcServer asyncServer, SafeRpcAsyncStateHandle asyncState)
	{
		if (*(A_0 + 24L) != 0L && *(A_0 + 32L) != 0L && *(A_0 + 40L) != 0L && *(A_0 + 48L) != 0L && *(A_0 + 56L) != 0L && *(A_0 + 64L) != 0L)
		{
			ulong num = (ulong)(*(A_0 + 72L));
			if (num != 0UL && *(A_0 + 80L) != 0L)
			{
				*num = 0L;
				*(*(A_0 + 80L)) = 0L;
				IntPtr bindingHandle = new IntPtr(*(A_0 + 16L));
				IntPtr pAssociationGroupId = new IntPtr(*(A_0 + 24L));
				IntPtr pToken = new IntPtr(*(A_0 + 32L));
				IntPtr pServerTarget = new IntPtr(*(A_0 + 40L));
				IntPtr pSessionCookie = new IntPtr(*(A_0 + 48L));
				IntPtr pClientIp = new IntPtr(*(A_0 + 56L));
				IntPtr pRequestId = new IntPtr(*(A_0 + 64L));
				IntPtr ppFailureMessage = new IntPtr(*(A_0 + 72L));
				IntPtr ppFailureDetails = new IntPtr(*(A_0 + 80L));
				RpcHttpConnectionRegistrationAsyncDispatchRpcState_Register rpcHttpConnectionRegistrationAsyncDispatchRpcState_Register = RpcHttpConnectionRegistrationAsyncDispatchRpcStatePool<Microsoft::Exchange::Rpc::RpcHttpConnectionRegistration::RpcHttpConnectionRegistrationAsyncDispatchRpcState_Register>.CreateFromPool();
				rpcHttpConnectionRegistrationAsyncDispatchRpcState_Register.Initialize(asyncState, asyncServer, bindingHandle, pAssociationGroupId, pToken, pServerTarget, pSessionCookie, pClientIp, pRequestId, ppFailureMessage, ppFailureDetails);
				rpcHttpConnectionRegistrationAsyncDispatchRpcState_Register.Begin();
				return 0;
			}
		}
		return -2147024809;
	}

	// Token: 0x0600035F RID: 863 RVA: 0x00054450 File Offset: 0x00053850
	internal unsafe static RpcHttpConnectionRegistrationRpcAsyncCallWrapper_EcRegister* {ctor}(RpcHttpConnectionRegistrationRpcAsyncCallWrapper_EcRegister* A_0, void* hRpc, _GUID* pAssociationGroupId, byte* pszToken, byte* pServerTarget, byte* pSessionCookie, byte* pClientIp, _GUID* pRequestId, byte** ppszFailureMessage, byte** ppszFailureDetails)
	{
		IntPtr rpcIntfHandle = RpcHttpConnectionRegistrationAsyncRpcServer.RpcIntfHandle;
		*A_0 = ref <Module>.??_7RpcHttpConnectionRegistrationRpcAsyncCallWrapper@RpcHttpConnectionRegistration@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 8L) = rpcIntfHandle;
		*A_0 = ref <Module>.??_7RpcHttpConnectionRegistrationRpcAsyncCallWrapper_EcRegister@RpcHttpConnectionRegistration@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 16L) = hRpc;
		*(A_0 + 24L) = pAssociationGroupId;
		*(A_0 + 32L) = pszToken;
		*(A_0 + 40L) = pServerTarget;
		*(A_0 + 48L) = pSessionCookie;
		*(A_0 + 56L) = pClientIp;
		*(A_0 + 64L) = pRequestId;
		*(A_0 + 72L) = ppszFailureMessage;
		*(A_0 + 80L) = ppszFailureDetails;
		return A_0;
	}

	// Token: 0x06000360 RID: 864 RVA: 0x00053FF4 File Offset: 0x000533F4
	internal unsafe static int EcDispatchCall(RpcHttpConnectionRegistrationRpcAsyncCallWrapper_EcUnregister* A_0, RpcHttpConnectionRegistrationAsyncRpcServer asyncServer, SafeRpcAsyncStateHandle asyncState)
	{
		if (*(A_0 + 24L) != 0L && *(A_0 + 32L) != 0L)
		{
			IntPtr bindingHandle = new IntPtr(*(A_0 + 16L));
			IntPtr pAssociationGroupId = new IntPtr(*(A_0 + 24L));
			IntPtr pRequestId = new IntPtr(*(A_0 + 32L));
			RpcHttpConnectionRegistrationAsyncDispatchRpcState_Unregister rpcHttpConnectionRegistrationAsyncDispatchRpcState_Unregister = RpcHttpConnectionRegistrationAsyncDispatchRpcStatePool<Microsoft::Exchange::Rpc::RpcHttpConnectionRegistration::RpcHttpConnectionRegistrationAsyncDispatchRpcState_Unregister>.CreateFromPool();
			rpcHttpConnectionRegistrationAsyncDispatchRpcState_Unregister.Initialize(asyncState, asyncServer, bindingHandle, pAssociationGroupId, pRequestId);
			rpcHttpConnectionRegistrationAsyncDispatchRpcState_Unregister.Begin();
			return 0;
		}
		return -2147024809;
	}

	// Token: 0x06000361 RID: 865 RVA: 0x000544EC File Offset: 0x000538EC
	internal unsafe static RpcHttpConnectionRegistrationRpcAsyncCallWrapper_EcUnregister* {ctor}(RpcHttpConnectionRegistrationRpcAsyncCallWrapper_EcUnregister* A_0, void* hRpc, _GUID* pAssociationGroupId, _GUID* pRequestId)
	{
		IntPtr rpcIntfHandle = RpcHttpConnectionRegistrationAsyncRpcServer.RpcIntfHandle;
		*A_0 = ref <Module>.??_7RpcHttpConnectionRegistrationRpcAsyncCallWrapper@RpcHttpConnectionRegistration@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 8L) = rpcIntfHandle;
		*A_0 = ref <Module>.??_7RpcHttpConnectionRegistrationRpcAsyncCallWrapper_EcUnregister@RpcHttpConnectionRegistration@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 16L) = hRpc;
		*(A_0 + 24L) = pAssociationGroupId;
		*(A_0 + 32L) = pRequestId;
		return A_0;
	}

	// Token: 0x06000362 RID: 866 RVA: 0x00054058 File Offset: 0x00053458
	internal unsafe static int EcDispatchCall(RpcHttpConnectionRegistrationRpcAsyncCallWrapper_EcClear* A_0, RpcHttpConnectionRegistrationAsyncRpcServer asyncServer, SafeRpcAsyncStateHandle asyncState)
	{
		IntPtr bindingHandle = new IntPtr(*(A_0 + 16L));
		RpcHttpConnectionRegistrationAsyncDispatchRpcState_Clear rpcHttpConnectionRegistrationAsyncDispatchRpcState_Clear = RpcHttpConnectionRegistrationAsyncDispatchRpcStatePool<Microsoft::Exchange::Rpc::RpcHttpConnectionRegistration::RpcHttpConnectionRegistrationAsyncDispatchRpcState_Clear>.CreateFromPool();
		rpcHttpConnectionRegistrationAsyncDispatchRpcState_Clear.Initialize(asyncState, asyncServer, bindingHandle);
		rpcHttpConnectionRegistrationAsyncDispatchRpcState_Clear.Begin();
		return 0;
	}

	// Token: 0x06000363 RID: 867 RVA: 0x00054534 File Offset: 0x00053934
	internal unsafe static RpcHttpConnectionRegistrationRpcAsyncCallWrapper_EcClear* {ctor}(RpcHttpConnectionRegistrationRpcAsyncCallWrapper_EcClear* A_0, void* hRpc)
	{
		IntPtr rpcIntfHandle = RpcHttpConnectionRegistrationAsyncRpcServer.RpcIntfHandle;
		*A_0 = ref <Module>.??_7RpcHttpConnectionRegistrationRpcAsyncCallWrapper@RpcHttpConnectionRegistration@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 8L) = rpcIntfHandle;
		*A_0 = ref <Module>.??_7RpcHttpConnectionRegistrationRpcAsyncCallWrapper_EcClear@RpcHttpConnectionRegistration@Rpc@Exchange@Microsoft@@6B@ + 8;
		*(A_0 + 16L) = hRpc;
		return A_0;
	}

	// Token: 0x06000364 RID: 868 RVA: 0x00054FD0 File Offset: 0x000543D0
	internal unsafe static void* __vecDelDtor(CRequestQueue<tagREGISTRATION_REQUEST>* A_0, uint A_0)
	{
		if ((A_0 & 2U) != 0U)
		{
			CRequestQueue<tagREGISTRATION_REQUEST>* ptr = A_0 - 8L;
			<Module>.__ehvec_dtor(A_0, 136UL, *ptr, ldftn(CRequestQueue<tagREGISTRATION_REQUEST>.{dtor}));
			if ((A_0 & 1U) != 0U)
			{
				<Module>.delete(ptr);
			}
			return ptr;
		}
		<Module>.CRequestQueue<tagREGISTRATION_REQUEST>.{dtor}(A_0);
		if ((A_0 & 1U) != 0U)
		{
			<Module>.delete(A_0);
		}
		return A_0;
	}

	// Token: 0x06000365 RID: 869 RVA: 0x00054088 File Offset: 0x00053488
	internal unsafe static void* __vecDelDtor(CLazyInitRequestQueue<CRegistrationRequestQueue,tagREGISTRATION_REQUEST,10000,1>* A_0, uint A_0)
	{
		if ((A_0 & 2U) != 0U)
		{
			CLazyInitRequestQueue<CRegistrationRequestQueue,tagREGISTRATION_REQUEST,10000,1>* ptr = A_0 - 8L;
			<Module>.__ehvec_dtor(A_0, 16UL, *ptr, ldftn(CLazyInitRequestQueue<CRegistrationRequestQueue,tagREGISTRATION_REQUEST,10000,1>.{dtor}));
			if ((A_0 & 1U) != 0U)
			{
				<Module>.delete(ptr);
			}
			return ptr;
		}
		<Module>.CLazyInitRequestQueue<CRegistrationRequestQueue,tagREGISTRATION_REQUEST,10000,1>.{dtor}(A_0);
		if ((A_0 & 1U) != 0U)
		{
			<Module>.delete(A_0);
		}
		return A_0;
	}

	// Token: 0x06000366 RID: 870 RVA: 0x0005456C File Offset: 0x0005396C
	internal unsafe static void Execute<class\u0020Microsoft::Exchange::Rpc::RpcHttpConnectionRegistration::SafeRpcHttpConnectionRegistrationRegisterRpcAsyncStateHandle>(ManagedExceptionAsyncCrashWrapper* A_0, _RPC_ASYNC_STATE* pAsyncState)
	{
		SafeRpcHttpConnectionRegistrationRegisterRpcAsyncStateHandle safeRpcHttpConnectionRegistrationRegisterRpcAsyncStateHandle = null;
		try
		{
			IntPtr handle = new IntPtr((void*)pAsyncState);
			safeRpcHttpConnectionRegistrationRegisterRpcAsyncStateHandle = new SafeRpcHttpConnectionRegistrationRegisterRpcAsyncStateHandle(handle);
			pAsyncState = null;
			int num = calli(System.Int32 modopt(System.Runtime.CompilerServices.IsLong)(System.IntPtr,Microsoft.Exchange.Rpc.SafeRpcAsyncStateHandle), A_0, safeRpcHttpConnectionRegistrationRegisterRpcAsyncStateHandle, *(*A_0));
			if (0 != num)
			{
				safeRpcHttpConnectionRegistrationRegisterRpcAsyncStateHandle.CompleteCall(num);
			}
		}
		catch (RpcException ex)
		{
			if (safeRpcHttpConnectionRegistrationRegisterRpcAsyncStateHandle != null)
			{
				safeRpcHttpConnectionRegistrationRegisterRpcAsyncStateHandle.AbortCall((uint)ex.ErrorCode);
			}
		}
		catch (FailRpcException ex2)
		{
			if (safeRpcHttpConnectionRegistrationRegisterRpcAsyncStateHandle != null)
			{
				safeRpcHttpConnectionRegistrationRegisterRpcAsyncStateHandle.CompleteCall(ex2.ErrorCode);
			}
		}
		catch (ThreadAbortException)
		{
			if (safeRpcHttpConnectionRegistrationRegisterRpcAsyncStateHandle != null)
			{
				safeRpcHttpConnectionRegistrationRegisterRpcAsyncStateHandle.AbortCall(1726U);
			}
		}
		catch (OutOfMemoryException)
		{
			if (safeRpcHttpConnectionRegistrationRegisterRpcAsyncStateHandle != null)
			{
				safeRpcHttpConnectionRegistrationRegisterRpcAsyncStateHandle.AbortCall(1130U);
			}
		}
		catch (System.Exception e)
		{
			<Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.CrashMeNow(e);
		}
		catch (object o)
		{
			<Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.CrashMeNow(o);
		}
		finally
		{
			if (pAsyncState != null)
			{
				<Module>.RpcRaiseException(1130);
			}
		}
	}

	// Token: 0x06000367 RID: 871 RVA: 0x000546C4 File Offset: 0x00053AC4
	internal unsafe static void Execute<class\u0020Microsoft::Exchange::Rpc::RpcHttpConnectionRegistration::SafeRpcHttpConnectionRegistrationUnregisterRpcAsyncStateHandle>(ManagedExceptionAsyncCrashWrapper* A_0, _RPC_ASYNC_STATE* pAsyncState)
	{
		SafeRpcHttpConnectionRegistrationUnregisterRpcAsyncStateHandle safeRpcHttpConnectionRegistrationUnregisterRpcAsyncStateHandle = null;
		try
		{
			IntPtr handle = new IntPtr((void*)pAsyncState);
			safeRpcHttpConnectionRegistrationUnregisterRpcAsyncStateHandle = new SafeRpcHttpConnectionRegistrationUnregisterRpcAsyncStateHandle(handle);
			pAsyncState = null;
			int num = calli(System.Int32 modopt(System.Runtime.CompilerServices.IsLong)(System.IntPtr,Microsoft.Exchange.Rpc.SafeRpcAsyncStateHandle), A_0, safeRpcHttpConnectionRegistrationUnregisterRpcAsyncStateHandle, *(*A_0));
			if (0 != num)
			{
				safeRpcHttpConnectionRegistrationUnregisterRpcAsyncStateHandle.CompleteCall(num);
			}
		}
		catch (RpcException ex)
		{
			if (safeRpcHttpConnectionRegistrationUnregisterRpcAsyncStateHandle != null)
			{
				safeRpcHttpConnectionRegistrationUnregisterRpcAsyncStateHandle.AbortCall((uint)ex.ErrorCode);
			}
		}
		catch (FailRpcException ex2)
		{
			if (safeRpcHttpConnectionRegistrationUnregisterRpcAsyncStateHandle != null)
			{
				safeRpcHttpConnectionRegistrationUnregisterRpcAsyncStateHandle.CompleteCall(ex2.ErrorCode);
			}
		}
		catch (ThreadAbortException)
		{
			if (safeRpcHttpConnectionRegistrationUnregisterRpcAsyncStateHandle != null)
			{
				safeRpcHttpConnectionRegistrationUnregisterRpcAsyncStateHandle.AbortCall(1726U);
			}
		}
		catch (OutOfMemoryException)
		{
			if (safeRpcHttpConnectionRegistrationUnregisterRpcAsyncStateHandle != null)
			{
				safeRpcHttpConnectionRegistrationUnregisterRpcAsyncStateHandle.AbortCall(1130U);
			}
		}
		catch (System.Exception e)
		{
			<Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.CrashMeNow(e);
		}
		catch (object o)
		{
			<Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.CrashMeNow(o);
		}
		finally
		{
			if (pAsyncState != null)
			{
				<Module>.RpcRaiseException(1130);
			}
		}
	}

	// Token: 0x06000368 RID: 872 RVA: 0x0005481C File Offset: 0x00053C1C
	internal unsafe static void Execute<class\u0020Microsoft::Exchange::Rpc::RpcHttpConnectionRegistration::SafeRpcHttpConnectionRegistrationClearRpcAsyncStateHandle>(ManagedExceptionAsyncCrashWrapper* A_0, _RPC_ASYNC_STATE* pAsyncState)
	{
		SafeRpcHttpConnectionRegistrationClearRpcAsyncStateHandle safeRpcHttpConnectionRegistrationClearRpcAsyncStateHandle = null;
		try
		{
			IntPtr handle = new IntPtr((void*)pAsyncState);
			safeRpcHttpConnectionRegistrationClearRpcAsyncStateHandle = new SafeRpcHttpConnectionRegistrationClearRpcAsyncStateHandle(handle);
			pAsyncState = null;
			int num = calli(System.Int32 modopt(System.Runtime.CompilerServices.IsLong)(System.IntPtr,Microsoft.Exchange.Rpc.SafeRpcAsyncStateHandle), A_0, safeRpcHttpConnectionRegistrationClearRpcAsyncStateHandle, *(*A_0));
			if (0 != num)
			{
				safeRpcHttpConnectionRegistrationClearRpcAsyncStateHandle.CompleteCall(num);
			}
		}
		catch (RpcException ex)
		{
			if (safeRpcHttpConnectionRegistrationClearRpcAsyncStateHandle != null)
			{
				safeRpcHttpConnectionRegistrationClearRpcAsyncStateHandle.AbortCall((uint)ex.ErrorCode);
			}
		}
		catch (FailRpcException ex2)
		{
			if (safeRpcHttpConnectionRegistrationClearRpcAsyncStateHandle != null)
			{
				safeRpcHttpConnectionRegistrationClearRpcAsyncStateHandle.CompleteCall(ex2.ErrorCode);
			}
		}
		catch (ThreadAbortException)
		{
			if (safeRpcHttpConnectionRegistrationClearRpcAsyncStateHandle != null)
			{
				safeRpcHttpConnectionRegistrationClearRpcAsyncStateHandle.AbortCall(1726U);
			}
		}
		catch (OutOfMemoryException)
		{
			if (safeRpcHttpConnectionRegistrationClearRpcAsyncStateHandle != null)
			{
				safeRpcHttpConnectionRegistrationClearRpcAsyncStateHandle.AbortCall(1130U);
			}
		}
		catch (System.Exception e)
		{
			<Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.CrashMeNow(e);
		}
		catch (object o)
		{
			<Module>.Microsoft.Exchange.Rpc.ManagedExceptionCrashWrapper.CrashMeNow(o);
		}
		finally
		{
			if (pAsyncState != null)
			{
				<Module>.RpcRaiseException(1130);
			}
		}
	}

	// Token: 0x06000369 RID: 873 RVA: 0x00069E1C File Offset: 0x0006921C
	internal unsafe static void ??__E??_7ManagedExceptionAsyncCrashWrapper@Rpc@Exchange@Microsoft@@6B@@@YMXXZ()
	{
		<Module>.??_7ManagedExceptionAsyncCrashWrapper@Rpc@Exchange@Microsoft@@6B@ = ref <Module>.??_R4ManagedExceptionAsyncCrashWrapper@Rpc@Exchange@Microsoft@@6B@;
		*(ref <Module>.??_7ManagedExceptionAsyncCrashWrapper@Rpc@Exchange@Microsoft@@6B@ + 8) = (long)ldftn(_purecall);
	}

	// Token: 0x0600036A RID: 874 RVA: 0x00069E44 File Offset: 0x00069244
	internal unsafe static void ??__E??_7RpcHttpConnectionRegistrationRpcAsyncCallWrapper@RpcHttpConnectionRegistration@Rpc@Exchange@Microsoft@@6B@@@YMXXZ()
	{
		<Module>.??_7RpcHttpConnectionRegistrationRpcAsyncCallWrapper@RpcHttpConnectionRegistration@Rpc@Exchange@Microsoft@@6B@ = ref <Module>.??_R4RpcHttpConnectionRegistrationRpcAsyncCallWrapper@RpcHttpConnectionRegistration@Rpc@Exchange@Microsoft@@6B@;
		*(ref <Module>.??_7RpcHttpConnectionRegistrationRpcAsyncCallWrapper@RpcHttpConnectionRegistration@Rpc@Exchange@Microsoft@@6B@ + 8) = (long)ldftn(Microsoft.Exchange.Rpc.RpcHttpConnectionRegistration.RpcHttpConnectionRegistrationRpcAsyncCallWrapper.InternalExecute);
		*(ref <Module>.??_7RpcHttpConnectionRegistrationRpcAsyncCallWrapper@RpcHttpConnectionRegistration@Rpc@Exchange@Microsoft@@6B@ + 16) = (long)ldftn(_purecall);
	}

	// Token: 0x0600036B RID: 875 RVA: 0x00069E7C File Offset: 0x0006927C
	internal unsafe static void ??__E??_7RpcHttpConnectionRegistrationRpcAsyncCallWrapper_EcRegister@RpcHttpConnectionRegistration@Rpc@Exchange@Microsoft@@6B@@@YMXXZ()
	{
		<Module>.??_7RpcHttpConnectionRegistrationRpcAsyncCallWrapper_EcRegister@RpcHttpConnectionRegistration@Rpc@Exchange@Microsoft@@6B@ = ref <Module>.??_R4RpcHttpConnectionRegistrationRpcAsyncCallWrapper_EcRegister@RpcHttpConnectionRegistration@Rpc@Exchange@Microsoft@@6B@;
		*(ref <Module>.??_7RpcHttpConnectionRegistrationRpcAsyncCallWrapper_EcRegister@RpcHttpConnectionRegistration@Rpc@Exchange@Microsoft@@6B@ + 8) = (long)ldftn(Microsoft.Exchange.Rpc.RpcHttpConnectionRegistration.RpcHttpConnectionRegistrationRpcAsyncCallWrapper.InternalExecute);
		*(ref <Module>.??_7RpcHttpConnectionRegistrationRpcAsyncCallWrapper_EcRegister@RpcHttpConnectionRegistration@Rpc@Exchange@Microsoft@@6B@ + 16) = (long)ldftn(Microsoft.Exchange.Rpc.RpcHttpConnectionRegistration.RpcHttpConnectionRegistrationRpcAsyncCallWrapper_EcRegister.EcDispatchCall);
	}

	// Token: 0x0600036C RID: 876 RVA: 0x00069EB4 File Offset: 0x000692B4
	internal unsafe static void ??__E??_7RpcHttpConnectionRegistrationRpcAsyncCallWrapper_EcUnregister@RpcHttpConnectionRegistration@Rpc@Exchange@Microsoft@@6B@@@YMXXZ()
	{
		<Module>.??_7RpcHttpConnectionRegistrationRpcAsyncCallWrapper_EcUnregister@RpcHttpConnectionRegistration@Rpc@Exchange@Microsoft@@6B@ = ref <Module>.??_R4RpcHttpConnectionRegistrationRpcAsyncCallWrapper_EcUnregister@RpcHttpConnectionRegistration@Rpc@Exchange@Microsoft@@6B@;
		*(ref <Module>.??_7RpcHttpConnectionRegistrationRpcAsyncCallWrapper_EcUnregister@RpcHttpConnectionRegistration@Rpc@Exchange@Microsoft@@6B@ + 8) = (long)ldftn(Microsoft.Exchange.Rpc.RpcHttpConnectionRegistration.RpcHttpConnectionRegistrationRpcAsyncCallWrapper.InternalExecute);
		*(ref <Module>.??_7RpcHttpConnectionRegistrationRpcAsyncCallWrapper_EcUnregister@RpcHttpConnectionRegistration@Rpc@Exchange@Microsoft@@6B@ + 16) = (long)ldftn(Microsoft.Exchange.Rpc.RpcHttpConnectionRegistration.RpcHttpConnectionRegistrationRpcAsyncCallWrapper_EcUnregister.EcDispatchCall);
	}

	// Token: 0x0600036D RID: 877 RVA: 0x00069EEC File Offset: 0x000692EC
	internal unsafe static void ??__E??_7RpcHttpConnectionRegistrationRpcAsyncCallWrapper_EcClear@RpcHttpConnectionRegistration@Rpc@Exchange@Microsoft@@6B@@@YMXXZ()
	{
		<Module>.??_7RpcHttpConnectionRegistrationRpcAsyncCallWrapper_EcClear@RpcHttpConnectionRegistration@Rpc@Exchange@Microsoft@@6B@ = ref <Module>.??_R4RpcHttpConnectionRegistrationRpcAsyncCallWrapper_EcClear@RpcHttpConnectionRegistration@Rpc@Exchange@Microsoft@@6B@;
		*(ref <Module>.??_7RpcHttpConnectionRegistrationRpcAsyncCallWrapper_EcClear@RpcHttpConnectionRegistration@Rpc@Exchange@Microsoft@@6B@ + 8) = (long)ldftn(Microsoft.Exchange.Rpc.RpcHttpConnectionRegistration.RpcHttpConnectionRegistrationRpcAsyncCallWrapper.InternalExecute);
		*(ref <Module>.??_7RpcHttpConnectionRegistrationRpcAsyncCallWrapper_EcClear@RpcHttpConnectionRegistration@Rpc@Exchange@Microsoft@@6B@ + 16) = (long)ldftn(Microsoft.Exchange.Rpc.RpcHttpConnectionRegistration.RpcHttpConnectionRegistrationRpcAsyncCallWrapper_EcClear.EcDispatchCall);
	}

	// Token: 0x0600036E RID: 878 RVA: 0x0005655C File Offset: 0x0005595C
	internal unsafe static void RecordDocumentProcessing(void* hBinding, _GUID mdbGuid, _GUID flowInstance, _GUID correlationId, long docId)
	{
		SearchRpcServer searchRpcServer = (SearchRpcServer)RpcServerBase.GetServerInstance(SearchRpcServer.RpcIntfHandle);
		Guid correlationId2 = <Module>.FromGUID(ref correlationId);
		Guid flowInstance2 = <Module>.FromGUID(ref flowInstance);
		Guid mdbGuid2 = <Module>.FromGUID(ref mdbGuid);
		searchRpcServer.RecordDocumentProcessing(mdbGuid2, flowInstance2, correlationId2, docId);
	}

	// Token: 0x0600036F RID: 879 RVA: 0x0005659C File Offset: 0x0005599C
	internal unsafe static void RecordDocumentFailure(void* hBinding, _GUID mdbGuid, _GUID correlationId, long docId, ushort* errorMessage)
	{
		SearchRpcServer searchRpcServer = (SearchRpcServer)RpcServerBase.GetServerInstance(SearchRpcServer.RpcIntfHandle);
		Guid correlationId2 = <Module>.FromGUID(ref correlationId);
		Guid mdbGuid2 = <Module>.FromGUID(ref mdbGuid);
		searchRpcServer.RecordDocumentFailure(mdbGuid2, correlationId2, docId, <Module>.UToMString(errorMessage));
	}

	// Token: 0x06000370 RID: 880 RVA: 0x000565D8 File Offset: 0x000559D8
	internal unsafe static void UpdateIndexSystems(void* hBinding)
	{
		((SearchRpcServer)RpcServerBase.GetServerInstance(SearchRpcServer.RpcIntfHandle)).UpdateIndexSystems();
	}

	// Token: 0x06000371 RID: 881 RVA: 0x000565FC File Offset: 0x000559FC
	internal unsafe static void ResumeIndexing(void* hBinding, _GUID guidDatabase)
	{
		SearchRpcServer searchRpcServer = (SearchRpcServer)RpcServerBase.GetServerInstance(SearchRpcServer.RpcIntfHandle);
		Guid databaseGuid = <Module>.FromGUID(ref guidDatabase);
		searchRpcServer.ResumeIndexing(databaseGuid);
	}

	// Token: 0x06000372 RID: 882 RVA: 0x00056628 File Offset: 0x00055A28
	internal unsafe static void RebuildIndexSystem(void* hBinding, _GUID guidDatabase)
	{
		SearchRpcServer searchRpcServer = (SearchRpcServer)RpcServerBase.GetServerInstance(SearchRpcServer.RpcIntfHandle);
		Guid databaseGuid = <Module>.FromGUID(ref guidDatabase);
		searchRpcServer.RebuildIndexSystem(databaseGuid);
	}

	// Token: 0x06000373 RID: 883 RVA: 0x00056B00 File Offset: 0x00055F00
	internal unsafe static int Get(void* hBinding, _GUID cacheGuid, ushort* key, int* cacheResponseBytesSize, byte** cacheResponseBytes)
	{
		CacheResponse cacheResponse = null;
		int num = 0;
		SharedCacheRpcServer sharedCacheRpcServer = (SharedCacheRpcServer)RpcServerBase.GetServerInstance(SharedCacheRpcServer.RpcIntfHandle);
		if (sharedCacheRpcServer == null)
		{
			return -2147023181;
		}
		Guid guid = <Module>.FromGUID(ref cacheGuid);
		string key2 = <Module>.UToMString(key);
		cacheResponse = null;
		sharedCacheRpcServer.Get(guid, key2, ref cacheResponse);
		byte* ptr = null;
		int num2 = 0;
		if (cacheResponse != null)
		{
			num = SerializationServices.Serialize(cacheResponse, &ptr, &num2);
			if (num < 0)
			{
				if (ptr != null)
				{
					<Module>.MIDL_user_free((void*)ptr);
				}
			}
			else
			{
				*cacheResponseBytesSize = num2;
				*(long*)cacheResponseBytes = ptr;
			}
		}
		return num;
	}

	// Token: 0x06000374 RID: 884 RVA: 0x00056B78 File Offset: 0x00055F78
	internal unsafe static int Insert(void* hBinding, _GUID cacheGuid, ushort* key, int inBytesLen, byte* pInBytes, long entryValidTime, int* cacheResponseBytesSize, byte** cacheResponseBytes)
	{
		CacheResponse cacheResponse = null;
		int num = 0;
		SharedCacheRpcServer sharedCacheRpcServer = (SharedCacheRpcServer)RpcServerBase.GetServerInstance(SharedCacheRpcServer.RpcIntfHandle);
		if (sharedCacheRpcServer == null)
		{
			return -2147023181;
		}
		byte[] pInBytes2 = <Module>.UToMBytes(inBytesLen, pInBytes);
		Guid guid = <Module>.FromGUID(ref cacheGuid);
		string key2 = <Module>.UToMString(key);
		cacheResponse = null;
		sharedCacheRpcServer.Insert(guid, key2, pInBytes2, entryValidTime, ref cacheResponse);
		byte* ptr = null;
		int num2 = 0;
		if (cacheResponse != null)
		{
			num = SerializationServices.Serialize(cacheResponse, &ptr, &num2);
			if (num < 0)
			{
				if (ptr != null)
				{
					<Module>.MIDL_user_free((void*)ptr);
				}
			}
			else
			{
				*cacheResponseBytesSize = num2;
				*(long*)cacheResponseBytes = ptr;
			}
		}
		return num;
	}

	// Token: 0x06000375 RID: 885 RVA: 0x00056BFC File Offset: 0x00055FFC
	internal unsafe static int Delete(void* hBinding, _GUID cacheGuid, ushort* key, int* cacheResponseBytesSize, byte** cacheResponseBytes)
	{
		CacheResponse cacheResponse = null;
		int num = 0;
		SharedCacheRpcServer sharedCacheRpcServer = (SharedCacheRpcServer)RpcServerBase.GetServerInstance(SharedCacheRpcServer.RpcIntfHandle);
		if (sharedCacheRpcServer == null)
		{
			return -2147023181;
		}
		Guid guid = <Module>.FromGUID(ref cacheGuid);
		string key2 = <Module>.UToMString(key);
		cacheResponse = null;
		sharedCacheRpcServer.Delete(guid, key2, ref cacheResponse);
		byte* ptr = null;
		int num2 = 0;
		if (cacheResponse != null)
		{
			num = SerializationServices.Serialize(cacheResponse, &ptr, &num2);
			if (num < 0)
			{
				if (ptr != null)
				{
					<Module>.MIDL_user_free((void*)ptr);
				}
			}
			else
			{
				*cacheResponseBytesSize = num2;
				*(long*)cacheResponseBytes = ptr;
			}
		}
		return num;
	}

	// Token: 0x06000376 RID: 886 RVA: 0x00056DA8 File Offset: 0x000561A8
	internal unsafe static void TestUserCache(void* hBinding, int version, int inBytesLen, byte* pInBytes, int* pOutBytesLen, byte** ppOutBytes)
	{
		SubscriptionCacheRpcServer subscriptionCacheRpcServer = (SubscriptionCacheRpcServer)RpcServerBase.GetServerInstance(SubscriptionCacheRpcServer.RpcIntfHandle);
		IntPtr uPtrData = new IntPtr((void*)pInBytes);
		byte[] pInBytes2 = <Module>.UToMBytes(inBytesLen, uPtrData);
		byte[] array = subscriptionCacheRpcServer.TestUserCache(version, pInBytes2);
		*pOutBytesLen = array.Length;
		int num = -2147024882;
		byte[] array2 = array;
		if (num == <Module>.MToUBytesN(array2, array2.Length, ppOutBytes))
		{
			throw new OutOfMemoryException();
		}
	}

	// Token: 0x06000377 RID: 887 RVA: 0x00056F2C File Offset: 0x0005632C
	internal unsafe static void SubscriptionComplete(void* hBinding, int version, int inBytesLen, byte* pInBytes, int* pOutBytesLen, byte** ppOutBytes)
	{
		SubscriptionCompletionRpcServer subscriptionCompletionRpcServer = (SubscriptionCompletionRpcServer)RpcServerBase.GetServerInstance(SubscriptionCompletionRpcServer.RpcIntfHandle);
		IntPtr uPtrData = new IntPtr((void*)pInBytes);
		byte[] pInBytes2 = <Module>.UToMBytes(inBytesLen, uPtrData);
		byte[] array = subscriptionCompletionRpcServer.SubscriptionComplete(version, pInBytes2);
		*pOutBytesLen = array.Length;
		int num = -2147024882;
		byte[] array2 = array;
		if (num == <Module>.MToUBytesN(array2, array2.Length, ppOutBytes))
		{
			throw new OutOfMemoryException();
		}
	}

	// Token: 0x06000378 RID: 888 RVA: 0x000570DC File Offset: 0x000564DC
	internal unsafe static void InvokeSubscriptionNotificationEndPoint(void* hBinding, int version, int inBytesLen, byte* pInBytes, int* pOutBytesLen, byte** ppOutBytes)
	{
		SubscriptionNotificationRpcServer subscriptionNotificationRpcServer = (SubscriptionNotificationRpcServer)RpcServerBase.GetServerInstance(SubscriptionNotificationRpcServer.RpcIntfHandle);
		IntPtr uPtrData = new IntPtr((void*)pInBytes);
		byte[] pInBytes2 = <Module>.UToMBytes(inBytesLen, uPtrData);
		byte[] array = subscriptionNotificationRpcServer.InvokeSubscriptionNotificationEndPoint(version, pInBytes2);
		*pOutBytesLen = array.Length;
		int num = -2147024882;
		byte[] array2 = array;
		if (num == <Module>.MToUBytesN(array2, array2.Length, ppOutBytes))
		{
			throw new OutOfMemoryException();
		}
	}

	// Token: 0x06000379 RID: 889 RVA: 0x00057270 File Offset: 0x00056670
	internal unsafe static void SubscriptionSubmit(void* hBinding, int version, int inBytesLen, byte* pInBytes, int* pOutBytesLen, byte** ppOutBytes)
	{
		SubscriptionSubmissionRpcServer subscriptionSubmissionRpcServer = (SubscriptionSubmissionRpcServer)RpcServerBase.GetServerInstance(SubscriptionSubmissionRpcServer.RpcIntfHandle);
		IntPtr uPtrData = new IntPtr((void*)pInBytes);
		byte[] pInBytes2 = <Module>.UToMBytes(inBytesLen, uPtrData);
		byte[] array = subscriptionSubmissionRpcServer.SubscriptionSubmit(version, pInBytes2);
		*pOutBytesLen = array.Length;
		int num = -2147024882;
		byte[] array2 = array;
		if (num == <Module>.MToUBytesN(array2, array2.Length, ppOutBytes))
		{
			throw new OutOfMemoryException();
		}
	}

	// Token: 0x0600037A RID: 890 RVA: 0x000574D0 File Offset: 0x000568D0
	internal unsafe static int ObtainSubmissionTokens(void* hBinding, _GUID mailboxGuid, int requestedTokenCount, int totalTokenCount, int submissionType)
	{
		ThrottlingRpcServer throttlingRpcServer = (ThrottlingRpcServer)RpcServerBase.GetServerInstance(ThrottlingRpcServer.RpcIntfHandle);
		Guid mailboxGuid2 = <Module>.FromGUID(ref mailboxGuid);
		return throttlingRpcServer.ObtainSubmissionTokens(mailboxGuid2, requestedTokenCount, totalTokenCount, submissionType) ? 1 : 0;
	}

	// Token: 0x0600037B RID: 891 RVA: 0x00057508 File Offset: 0x00056908
	internal unsafe static void ObtainTokens(void* hBinding, int inBytesLen, byte* pInBytes, int* pOutBytesLen, byte** ppOutBytes)
	{
		ThrottlingRpcServer throttlingRpcServer = (ThrottlingRpcServer)RpcServerBase.GetServerInstance(ThrottlingRpcServer.RpcIntfHandle);
		IntPtr uPtrData = new IntPtr((void*)pInBytes);
		byte[] inBlob = <Module>.UToMBytes(inBytesLen, uPtrData);
		byte[] array = throttlingRpcServer.ObtainTokens(inBlob);
		*pOutBytesLen = array.Length;
		int num = -2147024882;
		byte[] array2 = array;
		if (num == <Module>.MToUBytesN(array2, array2.Length, ppOutBytes))
		{
			throw new OutOfMemoryException();
		}
	}

	// Token: 0x0600037C RID: 892 RVA: 0x0005756C File Offset: 0x0005696C
	[return: MarshalAs(UnmanagedType.U1)]
	internal static bool IsHR(int sc)
	{
		int num;
		if (sc != null && (sc & -268435456) == -1073741824)
		{
			num = 0;
		}
		else
		{
			num = 1;
		}
		return (byte)num;
	}

	// Token: 0x0600037D RID: 893 RVA: 0x00057594 File Offset: 0x00056994
	internal static int HrFromSc(int sc)
	{
		if (sc == null)
		{
			return 0;
		}
		if ((((sc & -268435456) == -1073741824) ? 0 : 1) != 0)
		{
			return sc;
		}
		if (sc != -1056766297)
		{
			return (sc != -1) ? -2147418113 : -2147467260;
		}
		return -2147024882;
	}

	// Token: 0x0600037E RID: 894 RVA: 0x00057868 File Offset: 0x00056C68
	internal unsafe static MobileSpeechRecoAsyncState* {ctor}(MobileSpeechRecoAsyncState* A_0)
	{
		*(A_0 + 112L) = 0;
		*(A_0 + 120L) = 0L;
		return A_0;
	}

	// Token: 0x0600037F RID: 895 RVA: 0x00057888 File Offset: 0x00056C88
	internal unsafe static void {dtor}(MobileSpeechRecoAsyncState* A_0)
	{
		ulong num = (ulong)(*(A_0 + 120L));
		if (0UL != num)
		{
			<Module>.MIDL_user_free(num);
		}
	}

	// Token: 0x06000380 RID: 896 RVA: 0x00057A88 File Offset: 0x00056E88
	internal unsafe static void* __delDtor(MobileSpeechRecoAsyncState* A_0, uint A_0)
	{
		ulong num = (ulong)(*(A_0 + 120L));
		if (0UL != num)
		{
			<Module>.MIDL_user_free(num);
		}
		if ((A_0 & 1U) != 0U)
		{
			<Module>.delete(A_0);
		}
		return A_0;
	}

	// Token: 0x06000381 RID: 897 RVA: 0x000586D8 File Offset: 0x00057AD8
	internal unsafe static void GetUmActiveCalls(void* hBinding, int isDialPlan, ushort* dialPlan, int isIpGateway, ushort* ipGateway, int* pResultPageLen, byte** ppResultPageBytes)
	{
		*(long*)ppResultPageBytes = 0L;
		UMRpcServer umrpcServer = (UMRpcServer)RpcServerBase.GetServerInstance(UMRpcServer.RpcIntfHandle);
		ushort* ptr = dialPlan;
		if (*(short*)dialPlan != 0)
		{
			do
			{
				ptr += 2L / 2L;
			}
			while (*(short*)ptr != 0);
		}
		string dialPlan2 = new string((char*)dialPlan, 0, (int)(ptr - dialPlan >> 1));
		ushort* ptr2 = ipGateway;
		if (*(short*)ipGateway != 0)
		{
			do
			{
				ptr2 += 2L / 2L;
			}
			while (*(short*)ptr2 != 0);
		}
		string ipGateway2 = new string((char*)ipGateway, 0, (int)(ptr2 - ipGateway >> 1));
		bool isIpGateway2 = isIpGateway == 1;
		bool isDialPlan2 = isDialPlan == 1;
		byte[] umActiveCalls = umrpcServer.GetUmActiveCalls(isDialPlan2, dialPlan2, isIpGateway2, ipGateway2);
		*(long*)ppResultPageBytes = <Module>.MToUBytesClient(umActiveCalls, pResultPageLen);
	}

	// Token: 0x06000382 RID: 898 RVA: 0x0005876C File Offset: 0x00057B6C
	internal unsafe static int SendMwiMessage_v2_0(void* hBinding, _GUID mailboxGuid, _GUID dialPlanGuid, ushort* userExtension, ushort* userName, int unreadVoicemailCount, int totalVoicemailCount, int assistantLatencyMsec, _GUID tenantGuid)
	{
		UMMwiDeliveryRpcServerBase ummwiDeliveryRpcServerBase = (UMMwiDeliveryRpcServerBase)RpcServerBase.GetServerInstance(UMMwiDeliveryRpcServerBase.RpcIntfHandle);
		ushort* ptr = userExtension;
		if (*(short*)userExtension != 0)
		{
			do
			{
				ptr += 2L / 2L;
			}
			while (*(short*)ptr != 0);
		}
		string userExtension2 = new string((char*)userExtension, 0, (int)(ptr - userExtension >> 1));
		ushort* ptr2 = userName;
		if (*(short*)userName != 0)
		{
			do
			{
				ptr2 += 2L / 2L;
			}
			while (*(short*)ptr2 != 0);
		}
		string userName2 = new string((char*)userName, 0, (int)(ptr2 - userName >> 1));
		Guid tenantGuid2 = <Module>.FromGUID(ref tenantGuid);
		Guid dialPlanGuid2 = <Module>.FromGUID(ref dialPlanGuid);
		Guid mailboxGuid2 = <Module>.FromGUID(ref mailboxGuid);
		return ummwiDeliveryRpcServerBase.SendMwiMessage(mailboxGuid2, dialPlanGuid2, userExtension2, userName2, unreadVoicemailCount, totalVoicemailCount, assistantLatencyMsec, tenantGuid2);
	}

	// Token: 0x06000383 RID: 899 RVA: 0x00058804 File Offset: 0x00057C04
	internal unsafe static int Ping(void* hBinding, _GUID dialPlanGuid, int* pAvailableToTakeCalls)
	{
		UMServerPingRpcServerBase umserverPingRpcServerBase = (UMServerPingRpcServerBase)RpcServerBase.GetServerInstance(UMServerPingRpcServerBase.RpcIntfHandle);
		Guid dialPlanGuid2 = <Module>.FromGUID(ref dialPlanGuid);
		bool flag;
		int result = umserverPingRpcServerBase.Ping(dialPlanGuid2, ref flag);
		*pAvailableToTakeCalls = (flag ? 1 : 0);
		return result;
	}

	// Token: 0x06000384 RID: 900 RVA: 0x00058834 File Offset: 0x00057C34
	internal unsafe static int UMVersionedRpcServerBase_ExecuteRequest(IntPtr rpcItfHandle, int nRequestLen, byte* pRequestBytes, int* pnResponseLen, byte** ppResponseBytes)
	{
		byte[] array = null;
		*pnResponseLen = 0;
		*(long*)ppResponseBytes = 0L;
		UMVersionedRpcServerBase umversionedRpcServerBase = (UMVersionedRpcServerBase)RpcServerBase.GetServerInstance(rpcItfHandle);
		byte[] request = <Module>.UToMBytes(nRequestLen, pRequestBytes);
		array = null;
		int result = umversionedRpcServerBase.ExecuteRequest(request, out array);
		if (array != null)
		{
			*(long*)ppResponseBytes = <Module>.MToUBytesClient(array, pnResponseLen);
		}
		return result;
	}

	// Token: 0x06000385 RID: 901 RVA: 0x00058878 File Offset: 0x00057C78
	internal unsafe static int ExecutePoPRequest(void* hBinding, int nRequestLen, byte* pRequestBytes, int* pnResponseLen, byte** ppResponseBytes)
	{
		return <Module>.?A0x6323ae5e.UMVersionedRpcServerBase_ExecuteRequest(UMVersionedRpcServerBase.UMPlayOnPhoneRpcIntfHandle, nRequestLen, pRequestBytes, pnResponseLen, ppResponseBytes);
	}

	// Token: 0x06000386 RID: 902 RVA: 0x00058894 File Offset: 0x00057C94
	internal unsafe static int ProcessPartnerMessage(void* hBinding, int nRequestLen, byte* pRequestBytes, int* pnResponseLen, byte** ppResponseBytes)
	{
		return <Module>.?A0x6323ae5e.UMVersionedRpcServerBase_ExecuteRequest(UMVersionedRpcServerBase.UMPartnerMessageRpcIntfHandle, nRequestLen, pRequestBytes, pnResponseLen, ppResponseBytes);
	}

	// Token: 0x06000387 RID: 903 RVA: 0x000588B0 File Offset: 0x00057CB0
	internal unsafe static int ExecuteRequest(void* hBinding, int nRequestLen, byte* pRequestBytes, int* pnResponseLen, byte** ppResponseBytes)
	{
		return <Module>.?A0x6323ae5e.UMVersionedRpcServerBase_ExecuteRequest(UMVersionedRpcServerBase.UMRecipientTasksRpcIntfHandle, nRequestLen, pRequestBytes, pnResponseLen, ppResponseBytes);
	}

	// Token: 0x06000388 RID: 904 RVA: 0x000588CC File Offset: 0x00057CCC
	internal unsafe static int ExecutePromptPreviewRequest(void* hBinding, int nRequestLen, byte* pRequestBytes, int* pnResponseLen, byte** ppResponseBytes)
	{
		return <Module>.?A0x6323ae5e.UMVersionedRpcServerBase_ExecuteRequest(UMVersionedRpcServerBase.UMPromptPreviewRpcIntfHandle, nRequestLen, pRequestBytes, pnResponseLen, ppResponseBytes);
	}

	// Token: 0x06000389 RID: 905 RVA: 0x000588E8 File Offset: 0x00057CE8
	internal unsafe static void ExecuteStepAsync(_RPC_ASYNC_STATE* pAsyncState, void* hBinding, int inBytesLen, byte* pInBytes, int* pOutBytesLen, byte** ppOutBytes)
	{
		MobileSpeechRecoRpcServerBase mobileSpeechRecoRpcServerBase = (MobileSpeechRecoRpcServerBase)RpcServerBase.GetServerInstance(MobileSpeechRecoRpcServerBase.RpcIntfHandle);
		MobileSpeechRecoRpcAsyncToken token = new MobileSpeechRecoRpcAsyncToken(pAsyncState, pOutBytesLen, ppOutBytes);
		byte[] inBlob = <Module>.UToMBytes(inBytesLen, pInBytes);
		mobileSpeechRecoRpcServerBase.ExecuteStepAsync(inBlob, token);
	}

	// Token: 0x0600038A RID: 906 RVA: 0x00058A58 File Offset: 0x00057E58
	internal unsafe static int Notify(void* hBinding, int version, int type, int inputParameterLen, byte* pInputParameterBytes, int* pOutputParameterLen, byte** ppOutputParamterBytes)
	{
		UnifiedPolicyNotificationRpcServer unifiedPolicyNotificationRpcServer = (UnifiedPolicyNotificationRpcServer)RpcServerBase.GetServerInstance(UnifiedPolicyNotificationRpcServer.RpcIntfHandle);
		byte[] inputParameterBytes = <Module>.UToMBytes(inputParameterLen, pInputParameterBytes);
		byte[] array = unifiedPolicyNotificationRpcServer.Notify(version, type, inputParameterBytes);
		if (array != null)
		{
			<Module>.MToUBytes(array, pOutputParameterLen, ppOutputParamterBytes);
		}
		return 0;
	}

	// Token: 0x0600038B RID: 907 RVA: 0x00058AC8 File Offset: 0x00057EC8
	internal unsafe static int SendHostRequest(void* hBinding, int version, int type, int inputParameterLen, byte* pInputParameterBytes, int* pOutputParameterLen, byte** ppOutputParamterBytes)
	{
		ExDarHostRpcServer exDarHostRpcServer = (ExDarHostRpcServer)RpcServerBase.GetServerInstance(ExDarHostRpcServer.RpcIntfHandle);
		byte[] inputParameterBytes = <Module>.UToMBytes(inputParameterLen, pInputParameterBytes);
		byte[] array = exDarHostRpcServer.SendHostRequest(version, type, inputParameterBytes);
		if (array != null)
		{
			<Module>.MToUBytes(array, pOutputParameterLen, ppOutputParamterBytes);
		}
		return 0;
	}

	// Token: 0x0600038C RID: 908 RVA: 0x0005ABA8 File Offset: 0x00059FA8
	[return: MarshalAs(UnmanagedType.U1)]
	internal static bool <CrtImplementationDetails>.NativeDll.IsInDllMain()
	{
		return (<Module>.__native_dllmain_reason != uint.MaxValue) ? 1 : 0;
	}

	// Token: 0x0600038D RID: 909 RVA: 0x0005ABC4 File Offset: 0x00059FC4
	[return: MarshalAs(UnmanagedType.U1)]
	internal static bool <CrtImplementationDetails>.NativeDll.IsInProcessAttach()
	{
		return (<Module>.__native_dllmain_reason == 1U) ? 1 : 0;
	}

	// Token: 0x0600038E RID: 910 RVA: 0x0005ABDC File Offset: 0x00059FDC
	[return: MarshalAs(UnmanagedType.U1)]
	internal static bool <CrtImplementationDetails>.NativeDll.IsInProcessDetach()
	{
		return (<Module>.__native_dllmain_reason == 0U) ? 1 : 0;
	}

	// Token: 0x0600038F RID: 911 RVA: 0x0005ABF4 File Offset: 0x00059FF4
	[return: MarshalAs(UnmanagedType.U1)]
	internal static bool <CrtImplementationDetails>.NativeDll.IsSafeForManagedCode()
	{
		if (((<Module>.__native_dllmain_reason != 4294967295U) ? 1 : 0) == 0)
		{
			return 1;
		}
		int num;
		if (((<Module>.__native_dllmain_reason == 1U) ? 1 : 0) == 0 && ((<Module>.__native_dllmain_reason == 0U) ? 1 : 0) == 0)
		{
			num = 1;
		}
		else
		{
			num = 0;
		}
		return (byte)num;
	}

	// Token: 0x06000390 RID: 912 RVA: 0x0005B42C File Offset: 0x0005A82C
	internal static void <CrtImplementationDetails>.ThrowNestedModuleLoadException(System.Exception innerException, System.Exception nestedException)
	{
		throw new ModuleLoadExceptionHandlerException("A nested exception occurred after the primary exception that caused the C++ module to fail to load.\n", innerException, nestedException);
	}

	// Token: 0x06000391 RID: 913 RVA: 0x0005ADF4 File Offset: 0x0005A1F4
	internal static void <CrtImplementationDetails>.ThrowModuleLoadException(string errorMessage)
	{
		throw new ModuleLoadException(errorMessage);
	}

	// Token: 0x06000392 RID: 914 RVA: 0x0005AE08 File Offset: 0x0005A208
	internal static void <CrtImplementationDetails>.ThrowModuleLoadException(string errorMessage, System.Exception innerException)
	{
		throw new ModuleLoadException(errorMessage, innerException);
	}

	// Token: 0x06000393 RID: 915 RVA: 0x0005AF24 File Offset: 0x0005A324
	internal static void <CrtImplementationDetails>.RegisterModuleUninitializer(EventHandler handler)
	{
		ModuleUninitializer._ModuleUninitializer.AddHandler(handler);
	}

	// Token: 0x06000394 RID: 916 RVA: 0x0005AF3C File Offset: 0x0005A33C
	[SecuritySafeCritical]
	internal unsafe static Guid <CrtImplementationDetails>.FromGUID(_GUID* guid)
	{
		Guid result = new Guid((uint)(*guid), *(guid + 4L), *(guid + 6L), *(guid + 8L), *(guid + 9L), *(guid + 10L), *(guid + 11L), *(guid + 12L), *(guid + 13L), *(guid + 14L), *(guid + 15L));
		return result;
	}

	// Token: 0x06000395 RID: 917 RVA: 0x0005AF8C File Offset: 0x0005A38C
	[SecurityCritical]
	internal unsafe static int __get_default_appdomain(IUnknown** ppUnk)
	{
		ICorRuntimeHost* ptr = null;
		int num;
		try
		{
			Guid riid = <Module>.<CrtImplementationDetails>.FromGUID(ref <Module>._GUID_cb2f6722_ab3a_11d2_9c40_00c04fa30a3e);
			Guid clsid = <Module>.<CrtImplementationDetails>.FromGUID(ref <Module>._GUID_cb2f6723_ab3a_11d2_9c40_00c04fa30a3e);
			ptr = (ICorRuntimeHost*)RuntimeEnvironment.GetRuntimeInterfaceAsIntPtr(clsid, riid).ToPointer();
			goto IL_3E;
		}
		catch (System.Exception e)
		{
			num = Marshal.GetHRForException(e);
		}
		if (num < 0)
		{
			return num;
		}
		IL_3E:
		num = calli(System.Int32 modopt(System.Runtime.CompilerServices.IsLong) modopt(System.Runtime.CompilerServices.CallConvCdecl)(System.IntPtr,IUnknown**), ptr, ppUnk, *(*(long*)ptr + 104L));
		ICorRuntimeHost* ptr2 = ptr;
		object obj = calli(System.UInt32 modopt(System.Runtime.CompilerServices.IsLong) modopt(System.Runtime.CompilerServices.CallConvCdecl)(System.IntPtr), ptr2, *(*(long*)ptr2 + 16L));
		return num;
	}

	// Token: 0x06000396 RID: 918 RVA: 0x0005B014 File Offset: 0x0005A414
	internal unsafe static void __release_appdomain(IUnknown* ppUnk)
	{
		object obj = calli(System.UInt32 modopt(System.Runtime.CompilerServices.IsLong) modopt(System.Runtime.CompilerServices.CallConvCdecl)(System.IntPtr), ppUnk, *(*(long*)ppUnk + 16L));
	}

	// Token: 0x06000397 RID: 919 RVA: 0x0005B030 File Offset: 0x0005A430
	[SecurityCritical]
	internal unsafe static AppDomain <CrtImplementationDetails>.GetDefaultDomain()
	{
		IUnknown* ptr = null;
		int num = <Module>.__get_default_appdomain(&ptr);
		if (num >= 0)
		{
			try
			{
				IntPtr pUnk = new IntPtr((void*)ptr);
				return (AppDomain)Marshal.GetObjectForIUnknown(pUnk);
			}
			finally
			{
				<Module>.__release_appdomain(ptr);
			}
		}
		Marshal.ThrowExceptionForHR(num);
		return null;
	}

	// Token: 0x06000398 RID: 920 RVA: 0x0005B090 File Offset: 0x0005A490
	[SecurityCritical]
	internal unsafe static void <CrtImplementationDetails>.DoCallBackInDefaultDomain(method function, void* cookie)
	{
		Guid riid = <Module>.<CrtImplementationDetails>.FromGUID(ref <Module>._GUID_90f1a06c_7712_4762_86b5_7a5eba6bdb02);
		ICLRRuntimeHost* ptr = (ICLRRuntimeHost*)RuntimeEnvironment.GetRuntimeInterfaceAsIntPtr(<Module>.<CrtImplementationDetails>.FromGUID(ref <Module>._GUID_90f1a06e_7712_4762_86b5_7a5eba6bdb02), riid).ToPointer();
		try
		{
			AppDomain appDomain = <Module>.<CrtImplementationDetails>.GetDefaultDomain();
			int num = calli(System.Int32 modopt(System.Runtime.CompilerServices.IsLong) modopt(System.Runtime.CompilerServices.CallConvCdecl)(System.IntPtr,System.UInt32 modopt(System.Runtime.CompilerServices.IsLong),System.Int32 modopt(System.Runtime.CompilerServices.IsLong) modopt(System.Runtime.CompilerServices.CallConvCdecl) (System.Void*),System.Void*), ptr, appDomain.Id, function, cookie, *(*(long*)ptr + 64L));
			if (num < 0)
			{
				Marshal.ThrowExceptionForHR(num);
			}
		}
		finally
		{
			ICLRRuntimeHost* ptr2 = ptr;
			object obj = calli(System.UInt32 modopt(System.Runtime.CompilerServices.IsLong) modopt(System.Runtime.CompilerServices.CallConvCdecl)(System.IntPtr), ptr2, *(*(long*)ptr2 + 16L));
		}
	}

	// Token: 0x06000399 RID: 921 RVA: 0x0005B154 File Offset: 0x0005A554
	[SecuritySafeCritical]
	internal unsafe static int <CrtImplementationDetails>.DefaultDomain.DoNothing(void* cookie)
	{
		GC.KeepAlive(int.MaxValue);
		return 0;
	}

	// Token: 0x0600039A RID: 922 RVA: 0x0005B174 File Offset: 0x0005A574
	[SecuritySafeCritical]
	[return: MarshalAs(UnmanagedType.U1)]
	internal unsafe static bool <CrtImplementationDetails>.DefaultDomain.HasPerProcess()
	{
		if (<Module>.?hasPerProcess@DefaultDomain@<CrtImplementationDetails>@@0W4State@TriBool@2@A == (TriBool.State)2)
		{
			void** ptr = (void**)(&<Module>.?A0xc6f23461.__xc_mp_a);
			if (ref <Module>.?A0xc6f23461.__xc_mp_a < ref <Module>.?A0xc6f23461.__xc_mp_z)
			{
				while (*(long*)ptr == 0L)
				{
					ptr += 8L / (long)sizeof(void*);
					if (ptr >= (void**)(&<Module>.?A0xc6f23461.__xc_mp_z))
					{
						goto IL_35;
					}
				}
				<Module>.?hasPerProcess@DefaultDomain@<CrtImplementationDetails>@@0W4State@TriBool@2@A = (TriBool.State)(-1);
				return 1;
			}
			IL_35:
			<Module>.?hasPerProcess@DefaultDomain@<CrtImplementationDetails>@@0W4State@TriBool@2@A = (TriBool.State)0;
			return 0;
		}
		return (<Module>.?hasPerProcess@DefaultDomain@<CrtImplementationDetails>@@0W4State@TriBool@2@A == (TriBool.State)(-1)) ? 1 : 0;
	}

	// Token: 0x0600039B RID: 923 RVA: 0x0005B1C8 File Offset: 0x0005A5C8
	[SecuritySafeCritical]
	[return: MarshalAs(UnmanagedType.U1)]
	internal unsafe static bool <CrtImplementationDetails>.DefaultDomain.HasNative()
	{
		if (<Module>.?hasNative@DefaultDomain@<CrtImplementationDetails>@@0W4State@TriBool@2@A == (TriBool.State)2)
		{
			void** ptr = (void**)(&<Module>.__xi_a);
			if (ref <Module>.__xi_a < ref <Module>.__xi_z)
			{
				while (*(long*)ptr == 0L)
				{
					ptr += 8L / (long)sizeof(void*);
					if (ptr >= (void**)(&<Module>.__xi_z))
					{
						goto IL_35;
					}
				}
				<Module>.?hasNative@DefaultDomain@<CrtImplementationDetails>@@0W4State@TriBool@2@A = (TriBool.State)(-1);
				return 1;
			}
			IL_35:
			void** ptr2 = (void**)(&<Module>.__xc_a);
			if (ref <Module>.__xc_a < ref <Module>.__xc_z)
			{
				while (*(long*)ptr2 == 0L)
				{
					ptr2 += 8L / (long)sizeof(void*);
					if (ptr2 >= (void**)(&<Module>.__xc_z))
					{
						goto IL_62;
					}
				}
				<Module>.?hasNative@DefaultDomain@<CrtImplementationDetails>@@0W4State@TriBool@2@A = (TriBool.State)(-1);
				return 1;
			}
			IL_62:
			<Module>.?hasNative@DefaultDomain@<CrtImplementationDetails>@@0W4State@TriBool@2@A = (TriBool.State)0;
			return 0;
		}
		return (<Module>.?hasNative@DefaultDomain@<CrtImplementationDetails>@@0W4State@TriBool@2@A == (TriBool.State)(-1)) ? 1 : 0;
	}

	// Token: 0x0600039C RID: 924 RVA: 0x0005B248 File Offset: 0x0005A648
	[SecuritySafeCritical]
	[return: MarshalAs(UnmanagedType.U1)]
	internal static bool <CrtImplementationDetails>.DefaultDomain.NeedsInitialization()
	{
		int num;
		if ((<Module>.<CrtImplementationDetails>.DefaultDomain.HasPerProcess() != null && !<Module>.?InitializedPerProcess@DefaultDomain@<CrtImplementationDetails>@@2_NA) || (<Module>.<CrtImplementationDetails>.DefaultDomain.HasNative() != null && !<Module>.?InitializedNative@DefaultDomain@<CrtImplementationDetails>@@2_NA && <Module>.__native_startup_state == (__enative_startup_state)0))
		{
			num = 1;
		}
		else
		{
			num = 0;
		}
		return (byte)num;
	}

	// Token: 0x0600039D RID: 925 RVA: 0x0005B284 File Offset: 0x0005A684
	[return: MarshalAs(UnmanagedType.U1)]
	internal static bool <CrtImplementationDetails>.DefaultDomain.NeedsUninitialization()
	{
		return <Module>.?Entered@DefaultDomain@<CrtImplementationDetails>@@2_NA;
	}

	// Token: 0x0600039E RID: 926 RVA: 0x0005B298 File Offset: 0x0005A698
	[SecurityCritical]
	internal static void <CrtImplementationDetails>.DefaultDomain.Initialize()
	{
		<Module>.<CrtImplementationDetails>.DoCallBackInDefaultDomain(<Module>.__unep@?DoNothing@DefaultDomain@<CrtImplementationDetails>@@$$FCAJPEAX@Z, null);
	}

	// Token: 0x0600039F RID: 927 RVA: 0x00069F24 File Offset: 0x00069324
	internal static void ??__E?Initialized@CurrentDomain@<CrtImplementationDetails>@@$$Q2HA@@YMXXZ()
	{
		<Module>.?Initialized@CurrentDomain@<CrtImplementationDetails>@@$$Q2HA = 0;
	}

	// Token: 0x060003A0 RID: 928 RVA: 0x00069F38 File Offset: 0x00069338
	internal static void ??__E?Uninitialized@CurrentDomain@<CrtImplementationDetails>@@$$Q2HA@@YMXXZ()
	{
		<Module>.?Uninitialized@CurrentDomain@<CrtImplementationDetails>@@$$Q2HA = 0;
	}

	// Token: 0x060003A1 RID: 929 RVA: 0x00069F4C File Offset: 0x0006934C
	internal static void ??__E?IsDefaultDomain@CurrentDomain@<CrtImplementationDetails>@@$$Q2_NA@@YMXXZ()
	{
		<Module>.?IsDefaultDomain@CurrentDomain@<CrtImplementationDetails>@@$$Q2_NA = false;
	}

	// Token: 0x060003A2 RID: 930 RVA: 0x00069F60 File Offset: 0x00069360
	internal static void ??__E?InitializedVtables@CurrentDomain@<CrtImplementationDetails>@@$$Q2W4State@Progress@2@A@@YMXXZ()
	{
		<Module>.?InitializedVtables@CurrentDomain@<CrtImplementationDetails>@@$$Q2W4State@Progress@2@A = (Progress.State)0;
	}

	// Token: 0x060003A3 RID: 931 RVA: 0x00069F74 File Offset: 0x00069374
	internal static void ??__E?InitializedNative@CurrentDomain@<CrtImplementationDetails>@@$$Q2W4State@Progress@2@A@@YMXXZ()
	{
		<Module>.?InitializedNative@CurrentDomain@<CrtImplementationDetails>@@$$Q2W4State@Progress@2@A = (Progress.State)0;
	}

	// Token: 0x060003A4 RID: 932 RVA: 0x00069F88 File Offset: 0x00069388
	internal static void ??__E?InitializedPerProcess@CurrentDomain@<CrtImplementationDetails>@@$$Q2W4State@Progress@2@A@@YMXXZ()
	{
		<Module>.?InitializedPerProcess@CurrentDomain@<CrtImplementationDetails>@@$$Q2W4State@Progress@2@A = (Progress.State)0;
	}

	// Token: 0x060003A5 RID: 933 RVA: 0x00069F9C File Offset: 0x0006939C
	internal static void ??__E?InitializedPerAppDomain@CurrentDomain@<CrtImplementationDetails>@@$$Q2W4State@Progress@2@A@@YMXXZ()
	{
		<Module>.?InitializedPerAppDomain@CurrentDomain@<CrtImplementationDetails>@@$$Q2W4State@Progress@2@A = (Progress.State)0;
	}

	// Token: 0x060003A6 RID: 934 RVA: 0x0005B480 File Offset: 0x0005A880
	[DebuggerStepThrough]
	[SecurityCritical]
	internal unsafe static void <CrtImplementationDetails>.LanguageSupport.InitializeVtables(LanguageSupport* A_0)
	{
		<Module>.gcroot<System::String\u0020^>.=(A_0, "The C++ module failed to load during vtable initialization.\n");
		<Module>.?InitializedVtables@CurrentDomain@<CrtImplementationDetails>@@$$Q2W4State@Progress@2@A = (Progress.State)1;
		<Module>._initterm_m((method*)(&<Module>.?A0xc6f23461.__xi_vt_a), (method*)(&<Module>.?A0xc6f23461.__xi_vt_z));
		<Module>.?InitializedVtables@CurrentDomain@<CrtImplementationDetails>@@$$Q2W4State@Progress@2@A = (Progress.State)2;
	}

	// Token: 0x060003A7 RID: 935 RVA: 0x0005B4B4 File Offset: 0x0005A8B4
	[SecurityCritical]
	internal unsafe static void <CrtImplementationDetails>.LanguageSupport.InitializeDefaultAppDomain(LanguageSupport* A_0)
	{
		<Module>.gcroot<System::String\u0020^>.=(A_0, "The C++ module failed to load while attempting to initialize the default appdomain.\n");
		<Module>.<CrtImplementationDetails>.DefaultDomain.Initialize();
	}

	// Token: 0x060003A8 RID: 936 RVA: 0x0005B4D4 File Offset: 0x0005A8D4
	[SecurityCritical]
	[DebuggerStepThrough]
	internal unsafe static void <CrtImplementationDetails>.LanguageSupport.InitializeNative(LanguageSupport* A_0)
	{
		<Module>.gcroot<System::String\u0020^>.=(A_0, "The C++ module failed to load during native initialization.\n");
		<Module>.__security_init_cookie();
		<Module>.?InitializedNative@DefaultDomain@<CrtImplementationDetails>@@2_NA = true;
		if (<Module>.<CrtImplementationDetails>.NativeDll.IsSafeForManagedCode() == null)
		{
			<Module>._amsg_exit(33);
		}
		if (<Module>.__native_startup_state == (__enative_startup_state)1)
		{
			<Module>._amsg_exit(33);
		}
		else if (<Module>.__native_startup_state == (__enative_startup_state)0)
		{
			<Module>.?InitializedNative@CurrentDomain@<CrtImplementationDetails>@@$$Q2W4State@Progress@2@A = (Progress.State)1;
			<Module>.__native_startup_state = (__enative_startup_state)1;
			if (<Module>._initterm_e((method*)(&<Module>.__xi_a), (method*)(&<Module>.__xi_z)) != 0)
			{
				<Module>.<CrtImplementationDetails>.ThrowModuleLoadException(<Module>.gcroot<System::String\u0020^>..PE$AAVString@System@@(A_0));
			}
			<Module>._initterm((method*)(&<Module>.__xc_a), (method*)(&<Module>.__xc_z));
			<Module>.__native_startup_state = (__enative_startup_state)2;
			<Module>.?InitializedNativeFromCCTOR@DefaultDomain@<CrtImplementationDetails>@@2_NA = true;
			<Module>.?InitializedNative@CurrentDomain@<CrtImplementationDetails>@@$$Q2W4State@Progress@2@A = (Progress.State)2;
		}
	}

	// Token: 0x060003A9 RID: 937 RVA: 0x0005B570 File Offset: 0x0005A970
	[DebuggerStepThrough]
	[SecurityCritical]
	internal unsafe static void <CrtImplementationDetails>.LanguageSupport.InitializePerProcess(LanguageSupport* A_0)
	{
		<Module>.gcroot<System::String\u0020^>.=(A_0, "The C++ module failed to load during process initialization.\n");
		<Module>.?InitializedPerProcess@CurrentDomain@<CrtImplementationDetails>@@$$Q2W4State@Progress@2@A = (Progress.State)1;
		<Module>._initatexit_m();
		<Module>._initterm_m((method*)(&<Module>.?A0xc6f23461.__xc_mp_a), (method*)(&<Module>.?A0xc6f23461.__xc_mp_z));
		<Module>.?InitializedPerProcess@CurrentDomain@<CrtImplementationDetails>@@$$Q2W4State@Progress@2@A = (Progress.State)2;
		<Module>.?InitializedPerProcess@DefaultDomain@<CrtImplementationDetails>@@2_NA = true;
	}

	// Token: 0x060003AA RID: 938 RVA: 0x0005B5B0 File Offset: 0x0005A9B0
	[DebuggerStepThrough]
	[SecurityCritical]
	internal unsafe static void <CrtImplementationDetails>.LanguageSupport.InitializePerAppDomain(LanguageSupport* A_0)
	{
		<Module>.gcroot<System::String\u0020^>.=(A_0, "The C++ module failed to load during appdomain initialization.\n");
		<Module>.?InitializedPerAppDomain@CurrentDomain@<CrtImplementationDetails>@@$$Q2W4State@Progress@2@A = (Progress.State)1;
		<Module>._initatexit_app_domain();
		<Module>._initterm_m((method*)(&<Module>.?A0xc6f23461.__xc_ma_a), (method*)(&<Module>.?A0xc6f23461.__xc_ma_z));
		<Module>.?InitializedPerAppDomain@CurrentDomain@<CrtImplementationDetails>@@$$Q2W4State@Progress@2@A = (Progress.State)2;
	}

	// Token: 0x060003AB RID: 939 RVA: 0x0005B5EC File Offset: 0x0005A9EC
	[DebuggerStepThrough]
	[SecurityCritical]
	internal unsafe static void <CrtImplementationDetails>.LanguageSupport.InitializeUninitializer(LanguageSupport* A_0)
	{
		<Module>.gcroot<System::String\u0020^>.=(A_0, "The C++ module failed to load during registration for the unload events.\n");
		<Module>.<CrtImplementationDetails>.RegisterModuleUninitializer(new EventHandler(<Module>.<CrtImplementationDetails>.LanguageSupport.DomainUnload));
	}

	// Token: 0x060003AC RID: 940 RVA: 0x0005B618 File Offset: 0x0005AA18
	[DebuggerStepThrough]
	[SecurityCritical]
	[ReliabilityContract(Consistency.WillNotCorruptState, Cer.Success)]
	internal unsafe static void <CrtImplementationDetails>.LanguageSupport._Initialize(LanguageSupport* A_0)
	{
		<Module>.?IsDefaultDomain@CurrentDomain@<CrtImplementationDetails>@@$$Q2_NA = AppDomain.CurrentDomain.IsDefaultAppDomain();
		<Module>.?Entered@DefaultDomain@<CrtImplementationDetails>@@2_NA = (<Module>.?IsDefaultDomain@CurrentDomain@<CrtImplementationDetails>@@$$Q2_NA || <Module>.?Entered@DefaultDomain@<CrtImplementationDetails>@@2_NA);
		void* ptr = <Module>._getFiberPtrId();
		int num = 0;
		int num2 = 0;
		int num3 = 0;
		RuntimeHelpers.PrepareConstrainedRegions();
		try
		{
			while (num2 == 0)
			{
				try
				{
				}
				finally
				{
					void* ptr2 = Interlocked.CompareExchange(ref <Module>.__native_startup_lock, ptr, 0L);
					if (ptr2 == null)
					{
						num2 = 1;
					}
					else if (ptr2 == ptr)
					{
						num = 1;
						num2 = 1;
					}
				}
				if (num2 == 0)
				{
					<Module>.Sleep(1000);
				}
			}
			<Module>.<CrtImplementationDetails>.LanguageSupport.InitializeVtables(A_0);
			if (<Module>.?IsDefaultDomain@CurrentDomain@<CrtImplementationDetails>@@$$Q2_NA)
			{
				<Module>.<CrtImplementationDetails>.LanguageSupport.InitializeNative(A_0);
				<Module>.<CrtImplementationDetails>.LanguageSupport.InitializePerProcess(A_0);
			}
			else
			{
				num3 = ((<Module>.<CrtImplementationDetails>.DefaultDomain.NeedsInitialization() != 0) ? 1 : num3);
			}
		}
		finally
		{
			if (num == 0)
			{
				Interlocked.Exchange(ref <Module>.__native_startup_lock, 0L);
			}
		}
		if (num3 != 0)
		{
			<Module>.<CrtImplementationDetails>.LanguageSupport.InitializeDefaultAppDomain(A_0);
		}
		<Module>.<CrtImplementationDetails>.LanguageSupport.InitializePerAppDomain(A_0);
		<Module>.?Initialized@CurrentDomain@<CrtImplementationDetails>@@$$Q2HA = 1;
		<Module>.<CrtImplementationDetails>.LanguageSupport.InitializeUninitializer(A_0);
	}

	// Token: 0x060003AD RID: 941 RVA: 0x0005B2B4 File Offset: 0x0005A6B4
	[SecurityCritical]
	internal static void <CrtImplementationDetails>.LanguageSupport.UninitializeAppDomain()
	{
		<Module>._app_exit_callback();
	}

	// Token: 0x060003AE RID: 942 RVA: 0x0005B2C8 File Offset: 0x0005A6C8
	[SecurityCritical]
	internal unsafe static int <CrtImplementationDetails>.LanguageSupport._UninitializeDefaultDomain(void* cookie)
	{
		<Module>._exit_callback();
		<Module>.?InitializedPerProcess@DefaultDomain@<CrtImplementationDetails>@@2_NA = false;
		if (<Module>.?InitializedNativeFromCCTOR@DefaultDomain@<CrtImplementationDetails>@@2_NA)
		{
			<Module>._cexit();
			<Module>.__native_startup_state = (__enative_startup_state)0;
			<Module>.?InitializedNativeFromCCTOR@DefaultDomain@<CrtImplementationDetails>@@2_NA = false;
		}
		<Module>.?InitializedNative@DefaultDomain@<CrtImplementationDetails>@@2_NA = false;
		return 0;
	}

	// Token: 0x060003AF RID: 943 RVA: 0x0005B304 File Offset: 0x0005A704
	[SecurityCritical]
	internal static void <CrtImplementationDetails>.LanguageSupport.UninitializeDefaultDomain()
	{
		if (<Module>.<CrtImplementationDetails>.DefaultDomain.NeedsUninitialization() != null)
		{
			if (AppDomain.CurrentDomain.IsDefaultAppDomain())
			{
				<Module>.<CrtImplementationDetails>.LanguageSupport._UninitializeDefaultDomain(null);
			}
			else
			{
				<Module>.<CrtImplementationDetails>.DoCallBackInDefaultDomain(<Module>.__unep@?_UninitializeDefaultDomain@LanguageSupport@<CrtImplementationDetails>@@$$FCAJPEAX@Z, null);
			}
		}
	}

	// Token: 0x060003B0 RID: 944 RVA: 0x0005B33C File Offset: 0x0005A73C
	[SecurityCritical]
	[PrePrepareMethod]
	[ReliabilityContract(Consistency.WillNotCorruptState, Cer.Success)]
	internal static void <CrtImplementationDetails>.LanguageSupport.DomainUnload(object source, EventArgs arguments)
	{
		if (<Module>.?Initialized@CurrentDomain@<CrtImplementationDetails>@@$$Q2HA != 0 && Interlocked.Exchange(ref <Module>.?Uninitialized@CurrentDomain@<CrtImplementationDetails>@@$$Q2HA, 1) == 0)
		{
			byte b = (Interlocked.Decrement(ref <Module>.?Count@AllDomains@<CrtImplementationDetails>@@2HA) == 0) ? 1 : 0;
			<Module>.<CrtImplementationDetails>.LanguageSupport.UninitializeAppDomain();
			if (b != 0)
			{
				<Module>.<CrtImplementationDetails>.LanguageSupport.UninitializeDefaultDomain();
			}
		}
	}

	// Token: 0x060003B1 RID: 945 RVA: 0x0005B71C File Offset: 0x0005AB1C
	[ReliabilityContract(Consistency.WillNotCorruptState, Cer.Success)]
	[SecurityCritical]
	[DebuggerStepThrough]
	internal unsafe static void <CrtImplementationDetails>.LanguageSupport.Cleanup(LanguageSupport* A_0, System.Exception innerException)
	{
		try
		{
			bool flag = ((Interlocked.Decrement(ref <Module>.?Count@AllDomains@<CrtImplementationDetails>@@2HA) == 0) ? 1 : 0) != 0;
			<Module>.<CrtImplementationDetails>.LanguageSupport.UninitializeAppDomain();
			if (flag)
			{
				<Module>.<CrtImplementationDetails>.LanguageSupport.UninitializeDefaultDomain();
			}
		}
		catch (System.Exception nestedException)
		{
			<Module>.<CrtImplementationDetails>.ThrowNestedModuleLoadException(innerException, nestedException);
		}
		catch (object obj)
		{
			<Module>.<CrtImplementationDetails>.ThrowNestedModuleLoadException(innerException, null);
		}
	}

	// Token: 0x060003B2 RID: 946 RVA: 0x0005B790 File Offset: 0x0005AB90
	[SecurityCritical]
	internal unsafe static LanguageSupport* <CrtImplementationDetails>.LanguageSupport.{ctor}(LanguageSupport* A_0)
	{
		<Module>.gcroot<System::String\u0020^>.{ctor}(A_0);
		return A_0;
	}

	// Token: 0x060003B3 RID: 947 RVA: 0x0005B7A8 File Offset: 0x0005ABA8
	[SecurityCritical]
	internal unsafe static void <CrtImplementationDetails>.LanguageSupport.{dtor}(LanguageSupport* A_0)
	{
		<Module>.gcroot<System::String\u0020^>.{dtor}(A_0);
	}

	// Token: 0x060003B4 RID: 948 RVA: 0x0005B7BC File Offset: 0x0005ABBC
	[ReliabilityContract(Consistency.WillNotCorruptState, Cer.Success)]
	[SecurityCritical]
	[DebuggerStepThrough]
	internal unsafe static void <CrtImplementationDetails>.LanguageSupport.Initialize(LanguageSupport* A_0)
	{
		bool flag = false;
		RuntimeHelpers.PrepareConstrainedRegions();
		try
		{
			<Module>.gcroot<System::String\u0020^>.=(A_0, "The C++ module failed to load.\n");
			RuntimeHelpers.PrepareConstrainedRegions();
			try
			{
			}
			finally
			{
				Interlocked.Increment(ref <Module>.?Count@AllDomains@<CrtImplementationDetails>@@2HA);
				flag = true;
			}
			<Module>.<CrtImplementationDetails>.LanguageSupport._Initialize(A_0);
		}
		catch (System.Exception innerException)
		{
			if (flag)
			{
				<Module>.<CrtImplementationDetails>.LanguageSupport.Cleanup(A_0, innerException);
			}
			<Module>.<CrtImplementationDetails>.ThrowModuleLoadException(<Module>.gcroot<System::String\u0020^>..PE$AAVString@System@@(A_0), innerException);
		}
		catch (object obj)
		{
			if (flag)
			{
				<Module>.<CrtImplementationDetails>.LanguageSupport.Cleanup(A_0, null);
			}
			<Module>.<CrtImplementationDetails>.ThrowModuleLoadException(<Module>.gcroot<System::String\u0020^>..PE$AAVString@System@@(A_0), null);
		}
	}

	// Token: 0x060003B5 RID: 949 RVA: 0x0005B878 File Offset: 0x0005AC78
	[SecurityCritical]
	[DebuggerStepThrough]
	static unsafe <Module>()
	{
		LanguageSupport languageSupport;
		<Module>.<CrtImplementationDetails>.LanguageSupport.{ctor}(ref languageSupport);
		try
		{
			<Module>.<CrtImplementationDetails>.LanguageSupport.Initialize(ref languageSupport);
		}
		catch
		{
			<Module>.___CxxCallUnwindDtor(ldftn(<CrtImplementationDetails>.LanguageSupport.{dtor}), (void*)(&languageSupport));
			throw;
		}
		<Module>.<CrtImplementationDetails>.LanguageSupport.{dtor}(ref languageSupport);
	}

	// Token: 0x060003B6 RID: 950 RVA: 0x0005B378 File Offset: 0x0005A778
	[SecuritySafeCritical]
	[DebuggerStepThrough]
	internal unsafe static gcroot<System::String\u0020^>* {ctor}(gcroot<System::String\u0020^>* A_0)
	{
		*A_0 = ((IntPtr)GCHandle.Alloc(null)).ToPointer();
		return A_0;
	}

	// Token: 0x060003B7 RID: 951 RVA: 0x0005B39C File Offset: 0x0005A79C
	[DebuggerStepThrough]
	[SecurityCritical]
	internal unsafe static void {dtor}(gcroot<System::String\u0020^>* A_0)
	{
		IntPtr value = new IntPtr(*A_0);
		((GCHandle)value).Free();
		*A_0 = 0L;
	}

	// Token: 0x060003B8 RID: 952 RVA: 0x0005B3C4 File Offset: 0x0005A7C4
	[DebuggerStepThrough]
	[SecurityCritical]
	internal unsafe static gcroot<System::String\u0020^>* =(gcroot<System::String\u0020^>* A_0, string t)
	{
		IntPtr value = new IntPtr(*A_0);
		((GCHandle)value).Target = t;
		return A_0;
	}

	// Token: 0x060003B9 RID: 953 RVA: 0x0005B3EC File Offset: 0x0005A7EC
	[SecuritySafeCritical]
	internal unsafe static string PE$AAVString@System@@(gcroot<System::String\u0020^>* A_0)
	{
		IntPtr value = new IntPtr(*A_0);
		return ((GCHandle)value).Target;
	}

	// Token: 0x060003BA RID: 954 RVA: 0x0005B8EC File Offset: 0x0005ACEC
	[HandleProcessCorruptedStateExceptions]
	[SecurityCritical]
	[ReliabilityContract(Consistency.WillNotCorruptState, Cer.Success)]
	[SecurityPermission(SecurityAction.Assert, UnmanagedCode = true)]
	internal unsafe static void ___CxxCallUnwindDtor(method pDtor, void* pThis)
	{
		try
		{
			calli(System.Void(System.Void*), pThis, pDtor);
		}
		catch when (endfilter(<Module>.__FrameUnwindFilter(Marshal.GetExceptionPointers()) != null))
		{
		}
	}

	// Token: 0x060003BB RID: 955 RVA: 0x0005B930 File Offset: 0x0005AD30
	[HandleProcessCorruptedStateExceptions]
	[ReliabilityContract(Consistency.WillNotCorruptState, Cer.Success)]
	[SecurityCritical]
	[SecurityPermission(SecurityAction.Assert, UnmanagedCode = true)]
	internal unsafe static void ___CxxCallUnwindDelDtor(method pDtor, void* pThis)
	{
		try
		{
			calli(System.Void(System.Void*), pThis, pDtor);
		}
		catch when (endfilter(<Module>.__FrameUnwindFilter(Marshal.GetExceptionPointers()) != null))
		{
		}
	}

	// Token: 0x060003BC RID: 956 RVA: 0x0005B974 File Offset: 0x0005AD74
	[ReliabilityContract(Consistency.WillNotCorruptState, Cer.Success)]
	[SecurityCritical]
	[HandleProcessCorruptedStateExceptions]
	[SecurityPermission(SecurityAction.Assert, UnmanagedCode = true)]
	internal unsafe static void ___CxxCallUnwindVecDtor(method pVecDtor, void* ptr, ulong size, int count, method pDtor)
	{
		try
		{
			calli(System.Void(System.Void*,System.UInt64,System.Int32,System.Void (System.Void*)), ptr, size, count, pDtor, pVecDtor);
		}
		catch when (endfilter(<Module>.__FrameUnwindFilter(Marshal.GetExceptionPointers()) != null))
		{
		}
	}

	// Token: 0x060003BD RID: 957 RVA: 0x0005BA30 File Offset: 0x0005AE30
	[SecurityCritical]
	[HandleProcessCorruptedStateExceptions]
	[ReliabilityContract(Consistency.WillNotCorruptState, Cer.Success)]
	internal unsafe static void __ehvec_dtor(void* ptr, ulong size, int count, method pDtor)
	{
		int num = 0;
		ptr = (void*)((byte*)((long)count * (long)size) + ptr);
		try
		{
			for (;;)
			{
				count += -1;
				if (count < 0)
				{
					break;
				}
				ptr = (void*)((byte*)ptr - size);
				calli(System.Void(System.Void*), ptr, pDtor);
			}
			num = 1;
		}
		finally
		{
			if (num == 0)
			{
				<Module>.__ArrayUnwind(ptr, size, count, pDtor);
			}
		}
	}

	// Token: 0x060003BE RID: 958 RVA: 0x0005B9BC File Offset: 0x0005ADBC
	[ReliabilityContract(Consistency.WillNotCorruptState, Cer.Success)]
	[SecurityCritical]
	[SecurityPermission(SecurityAction.Assert, UnmanagedCode = true)]
	internal unsafe static int ArrayUnwindFilter(_EXCEPTION_POINTERS* pExPtrs)
	{
		if (*(*(long*)pExPtrs) != -529697949)
		{
			return 0;
		}
		<Module>.terminate();
		return 0;
	}

	// Token: 0x060003BF RID: 959 RVA: 0x0005B9DC File Offset: 0x0005ADDC
	[SecurityCritical]
	[HandleProcessCorruptedStateExceptions]
	[ReliabilityContract(Consistency.WillNotCorruptState, Cer.Success)]
	internal unsafe static void __ArrayUnwind(void* ptr, ulong size, int count, method pDtor)
	{
		try
		{
			for (;;)
			{
				count += -1;
				if (count < 0)
				{
					break;
				}
				ptr = (void*)((byte*)ptr - size);
				calli(System.Void(System.Void*), ptr, pDtor);
			}
		}
		catch when (endfilter(<Module>.?A0xf60d8fd6.ArrayUnwindFilter(Marshal.GetExceptionPointers()) != null))
		{
		}
	}

	// Token: 0x060003C0 RID: 960 RVA: 0x0005BA8C File Offset: 0x0005AE8C
	[SecurityCritical]
	[DebuggerStepThrough]
	internal static ValueType <CrtImplementationDetails>.AtExitLock._handle()
	{
		if (<Module>.?_lock@AtExitLock@<CrtImplementationDetails>@@$$Q0PEAXEA != null)
		{
			IntPtr value = new IntPtr(<Module>.?_lock@AtExitLock@<CrtImplementationDetails>@@$$Q0PEAXEA);
			return GCHandle.FromIntPtr(value);
		}
		return null;
	}

	// Token: 0x060003C1 RID: 961 RVA: 0x0005BF94 File Offset: 0x0005B394
	[DebuggerStepThrough]
	[SecurityCritical]
	internal static void <CrtImplementationDetails>.AtExitLock._lock_Construct(object value)
	{
		<Module>.?_lock@AtExitLock@<CrtImplementationDetails>@@$$Q0PEAXEA = null;
		<Module>.<CrtImplementationDetails>.AtExitLock._lock_Set(value);
	}

	// Token: 0x060003C2 RID: 962 RVA: 0x0005BABC File Offset: 0x0005AEBC
	[DebuggerStepThrough]
	[SecurityCritical]
	internal static void <CrtImplementationDetails>.AtExitLock._lock_Set(object value)
	{
		ValueType valueType = <Module>.<CrtImplementationDetails>.AtExitLock._handle();
		if (valueType == null)
		{
			valueType = GCHandle.Alloc(value);
			<Module>.?_lock@AtExitLock@<CrtImplementationDetails>@@$$Q0PEAXEA = GCHandle.ToIntPtr((GCHandle)valueType).ToPointer();
		}
		else
		{
			((GCHandle)valueType).Target = value;
		}
	}

	// Token: 0x060003C3 RID: 963 RVA: 0x0005BB0C File Offset: 0x0005AF0C
	[DebuggerStepThrough]
	[SecurityCritical]
	internal static object <CrtImplementationDetails>.AtExitLock._lock_Get()
	{
		ValueType valueType = <Module>.<CrtImplementationDetails>.AtExitLock._handle();
		if (valueType != null)
		{
			return ((GCHandle)valueType).Target;
		}
		return null;
	}

	// Token: 0x060003C4 RID: 964 RVA: 0x0005BB30 File Offset: 0x0005AF30
	[SecurityCritical]
	[DebuggerStepThrough]
	internal static void <CrtImplementationDetails>.AtExitLock._lock_Destruct()
	{
		ValueType valueType = <Module>.<CrtImplementationDetails>.AtExitLock._handle();
		if (valueType != null)
		{
			((GCHandle)valueType).Free();
			<Module>.?_lock@AtExitLock@<CrtImplementationDetails>@@$$Q0PEAXEA = null;
		}
	}

	// Token: 0x060003C5 RID: 965 RVA: 0x0005BB58 File Offset: 0x0005AF58
	[SecuritySafeCritical]
	[DebuggerStepThrough]
	[return: MarshalAs(UnmanagedType.U1)]
	internal static bool <CrtImplementationDetails>.AtExitLock.IsInitialized()
	{
		return (<Module>.<CrtImplementationDetails>.AtExitLock._lock_Get() != null) ? 1 : 0;
	}

	// Token: 0x060003C6 RID: 966 RVA: 0x0005BFB0 File Offset: 0x0005B3B0
	[SecurityCritical]
	[DebuggerStepThrough]
	internal static void <CrtImplementationDetails>.AtExitLock.AddRef()
	{
		if (<Module>.<CrtImplementationDetails>.AtExitLock.IsInitialized() == null)
		{
			<Module>.<CrtImplementationDetails>.AtExitLock._lock_Construct(new object());
			<Module>.?_ref_count@AtExitLock@<CrtImplementationDetails>@@$$Q0HA = 0;
		}
		<Module>.?_ref_count@AtExitLock@<CrtImplementationDetails>@@$$Q0HA++;
	}

	// Token: 0x060003C7 RID: 967 RVA: 0x0005BB74 File Offset: 0x0005AF74
	[SecurityCritical]
	[DebuggerStepThrough]
	internal static void <CrtImplementationDetails>.AtExitLock.RemoveRef()
	{
		<Module>.?_ref_count@AtExitLock@<CrtImplementationDetails>@@$$Q0HA += -1;
		if (<Module>.?_ref_count@AtExitLock@<CrtImplementationDetails>@@$$Q0HA == 0)
		{
			<Module>.<CrtImplementationDetails>.AtExitLock._lock_Destruct();
		}
	}

	// Token: 0x060003C8 RID: 968 RVA: 0x0005BB9C File Offset: 0x0005AF9C
	[DebuggerStepThrough]
	[SecurityCritical]
	internal static void <CrtImplementationDetails>.AtExitLock.Enter()
	{
		Monitor.Enter(<Module>.<CrtImplementationDetails>.AtExitLock._lock_Get());
	}

	// Token: 0x060003C9 RID: 969 RVA: 0x0005BBB4 File Offset: 0x0005AFB4
	[SecurityCritical]
	[DebuggerStepThrough]
	internal static void <CrtImplementationDetails>.AtExitLock.Exit()
	{
		Monitor.Exit(<Module>.<CrtImplementationDetails>.AtExitLock._lock_Get());
	}

	// Token: 0x060003CA RID: 970 RVA: 0x0005BBCC File Offset: 0x0005AFCC
	[SecurityCritical]
	[DebuggerStepThrough]
	[return: MarshalAs(UnmanagedType.U1)]
	internal static bool __global_lock()
	{
		bool result = false;
		if (<Module>.<CrtImplementationDetails>.AtExitLock.IsInitialized() != null)
		{
			<Module>.<CrtImplementationDetails>.AtExitLock.Enter();
			result = true;
		}
		return result;
	}

	// Token: 0x060003CB RID: 971 RVA: 0x0005BBEC File Offset: 0x0005AFEC
	[SecurityCritical]
	[DebuggerStepThrough]
	[return: MarshalAs(UnmanagedType.U1)]
	internal static bool __global_unlock()
	{
		bool result = false;
		if (<Module>.<CrtImplementationDetails>.AtExitLock.IsInitialized() != null)
		{
			<Module>.<CrtImplementationDetails>.AtExitLock.Exit();
			result = true;
		}
		return result;
	}

	// Token: 0x060003CC RID: 972 RVA: 0x0005BFE0 File Offset: 0x0005B3E0
	[DebuggerStepThrough]
	[SecurityCritical]
	[return: MarshalAs(UnmanagedType.U1)]
	internal static bool __alloc_global_lock()
	{
		<Module>.<CrtImplementationDetails>.AtExitLock.AddRef();
		return <Module>.<CrtImplementationDetails>.AtExitLock.IsInitialized();
	}

	// Token: 0x060003CD RID: 973 RVA: 0x0005BC0C File Offset: 0x0005B00C
	[DebuggerStepThrough]
	[SecurityCritical]
	internal static void __dealloc_global_lock()
	{
		<Module>.<CrtImplementationDetails>.AtExitLock.RemoveRef();
	}

	// Token: 0x060003CE RID: 974 RVA: 0x0005BC20 File Offset: 0x0005B020
	[SecurityCritical]
	internal unsafe static int _atexit_helper(method func, ulong* __pexit_list_size, method** __ponexitend_e, method** __ponexitbegin_e)
	{
		method system.Void_u0020() = 0L;
		if (func == null)
		{
			return -1;
		}
		if (<Module>.?A0xf28fb846.__global_lock() == 1)
		{
			try
			{
				method* ptr = (method*)<Module>.DecodePointer(*(long*)__ponexitbegin_e);
				method* ptr2 = (method*)<Module>.DecodePointer(*(long*)__ponexitend_e);
				long num = (long)(ptr2 - ptr);
				if (*__pexit_list_size - 1UL < (ulong)num >> 3)
				{
					try
					{
						ulong num2 = *__pexit_list_size * 8UL;
						ulong num3 = (num2 < 4096UL) ? num2 : 4096UL;
						IntPtr cb = new IntPtr((int)(num2 + num3));
						IntPtr pv = new IntPtr((void*)ptr);
						IntPtr intPtr = Marshal.ReAllocHGlobal(pv, cb);
						IntPtr intPtr2 = intPtr;
						ptr2 = (method*)((byte*)intPtr2.ToPointer() + num);
						ptr = (method*)intPtr2.ToPointer();
						ulong num4 = *__pexit_list_size;
						ulong num5 = (512UL < num4) ? 512UL : num4;
						*__pexit_list_size = num4 + num5;
					}
					catch (OutOfMemoryException)
					{
						IntPtr cb2 = new IntPtr((int)(*__pexit_list_size * 8UL + 12UL));
						IntPtr pv2 = new IntPtr((void*)ptr);
						IntPtr intPtr3 = Marshal.ReAllocHGlobal(pv2, cb2);
						IntPtr intPtr4 = intPtr3;
						ptr2 = (intPtr4.ToPointer() - ptr) / (IntPtr)sizeof(method) + ptr2;
						ptr = (method*)intPtr4.ToPointer();
						*__pexit_list_size += 4UL;
					}
				}
				*(long*)ptr2 = func;
				ptr2 += 8L / (long)sizeof(method);
				system.Void_u0020() = func;
				*(long*)__ponexitbegin_e = <Module>.EncodePointer((void*)ptr);
				*(long*)__ponexitend_e = <Module>.EncodePointer((void*)ptr2);
			}
			catch (OutOfMemoryException)
			{
			}
			finally
			{
				<Module>.?A0xf28fb846.__global_unlock();
			}
			if (system.Void_u0020() != null)
			{
				return 0;
			}
		}
		return -1;
	}

	// Token: 0x060003CF RID: 975 RVA: 0x0005BDA8 File Offset: 0x0005B1A8
	[SecurityCritical]
	internal unsafe static void _exit_callback()
	{
		if (<Module>.?A0xf28fb846.__exit_list_size != 0UL)
		{
			method* ptr = (method*)<Module>.DecodePointer((void*)<Module>.?A0xf28fb846.__onexitbegin_m);
			method* ptr2 = (method*)<Module>.DecodePointer((void*)<Module>.?A0xf28fb846.__onexitend_m);
			if (ptr != -1L && ptr != null && ptr2 != null)
			{
				method* ptr3 = ptr;
				method* ptr4 = ptr2;
				for (;;)
				{
					ptr2 -= 8L / (long)sizeof(method);
					if (ptr2 < ptr)
					{
						break;
					}
					if (*(long*)ptr2 != <Module>.EncodePointer(null))
					{
						void* ptr5 = <Module>.DecodePointer(*(long*)ptr2);
						*(long*)ptr2 = <Module>.EncodePointer(null);
						calli(System.Void(), ptr5);
						method* ptr6 = (method*)<Module>.DecodePointer((void*)<Module>.?A0xf28fb846.__onexitbegin_m);
						method* ptr7 = (method*)<Module>.DecodePointer((void*)<Module>.?A0xf28fb846.__onexitend_m);
						if (ptr3 != ptr6 || ptr4 != ptr7)
						{
							ptr3 = ptr6;
							ptr = ptr6;
							ptr4 = ptr7;
							ptr2 = ptr7;
						}
					}
				}
				IntPtr hglobal = new IntPtr((void*)ptr);
				Marshal.FreeHGlobal(hglobal);
			}
			<Module>.?A0xf28fb846.__dealloc_global_lock();
		}
	}

	// Token: 0x060003D0 RID: 976 RVA: 0x0005BFF8 File Offset: 0x0005B3F8
	[SecurityCritical]
	[DebuggerStepThrough]
	internal unsafe static int _initatexit_m()
	{
		int result = 0;
		if (<Module>.?A0xf28fb846.__alloc_global_lock() == 1)
		{
			<Module>.?A0xf28fb846.__onexitbegin_m = (method*)<Module>.EncodePointer(Marshal.AllocHGlobal(256).ToPointer());
			<Module>.?A0xf28fb846.__onexitend_m = <Module>.?A0xf28fb846.__onexitbegin_m;
			<Module>.?A0xf28fb846.__exit_list_size = 32UL;
			result = 1;
		}
		return result;
	}

	// Token: 0x060003D1 RID: 977 RVA: 0x0005C040 File Offset: 0x0005B440
	internal static method _onexit_m(method _Function)
	{
		return (<Module>._atexit_m(_Function) == -1) ? 0L : _Function;
	}

	// Token: 0x060003D2 RID: 978 RVA: 0x0005BE58 File Offset: 0x0005B258
	[SecurityCritical]
	internal unsafe static int _atexit_m(method func)
	{
		return <Module>._atexit_helper(<Module>.EncodePointer(func), &<Module>.?A0xf28fb846.__exit_list_size, &<Module>.?A0xf28fb846.__onexitend_m, &<Module>.?A0xf28fb846.__onexitbegin_m);
	}

	// Token: 0x060003D3 RID: 979 RVA: 0x0005C05C File Offset: 0x0005B45C
	[SecurityCritical]
	[DebuggerStepThrough]
	internal unsafe static int _initatexit_app_domain()
	{
		if (<Module>.?A0xf28fb846.__alloc_global_lock() == 1)
		{
			<Module>.__onexitbegin_app_domain = (method*)<Module>.EncodePointer(Marshal.AllocHGlobal(256).ToPointer());
			<Module>.__onexitend_app_domain = <Module>.__onexitbegin_app_domain;
			<Module>.__exit_list_size_app_domain = 32UL;
		}
		return 1;
	}

	// Token: 0x060003D4 RID: 980 RVA: 0x0005BE80 File Offset: 0x0005B280
	[SecurityCritical]
	[HandleProcessCorruptedStateExceptions]
	internal unsafe static void _app_exit_callback()
	{
		if (<Module>.__exit_list_size_app_domain != 0UL)
		{
			method* ptr = (method*)<Module>.DecodePointer((void*)<Module>.__onexitbegin_app_domain);
			method* ptr2 = (method*)<Module>.DecodePointer((void*)<Module>.__onexitend_app_domain);
			try
			{
				if (ptr != -1L && ptr != null && ptr2 != null)
				{
					method* ptr3 = ptr;
					method* ptr4 = ptr2;
					for (;;)
					{
						do
						{
							ptr2 -= 8L / (long)sizeof(method);
						}
						while (ptr2 >= ptr && *(long*)ptr2 == <Module>.EncodePointer(null));
						if (ptr2 < ptr)
						{
							break;
						}
						method system.Void_u0020() = <Module>.DecodePointer(*(long*)ptr2);
						*(long*)ptr2 = <Module>.EncodePointer(null);
						calli(System.Void(), system.Void_u0020());
						method* ptr5 = (method*)<Module>.DecodePointer((void*)<Module>.__onexitbegin_app_domain);
						method* ptr6 = (method*)<Module>.DecodePointer((void*)<Module>.__onexitend_app_domain);
						if (ptr3 != ptr5 || ptr4 != ptr6)
						{
							ptr3 = ptr5;
							ptr = ptr5;
							ptr4 = ptr6;
							ptr2 = ptr6;
						}
					}
				}
			}
			finally
			{
				IntPtr hglobal = new IntPtr((void*)ptr);
				Marshal.FreeHGlobal(hglobal);
				<Module>.?A0xf28fb846.__dealloc_global_lock();
			}
		}
	}

	// Token: 0x060003D5 RID: 981 RVA: 0x0005C0A0 File Offset: 0x0005B4A0
	[SecurityCritical]
	internal static method _onexit_m_appdomain(method _Function)
	{
		return (<Module>._atexit_m_appdomain(_Function) == -1) ? 0L : _Function;
	}

	// Token: 0x060003D6 RID: 982 RVA: 0x0005BF6C File Offset: 0x0005B36C
	[SecurityCritical]
	[DebuggerStepThrough]
	internal unsafe static int _atexit_m_appdomain(method func)
	{
		return <Module>._atexit_helper(<Module>.EncodePointer(func), &<Module>.__exit_list_size_app_domain, &<Module>.__onexitend_app_domain, &<Module>.__onexitbegin_app_domain);
	}

	// Token: 0x060003D7 RID: 983
	[SuppressUnmanagedCodeSecurity]
	[ReliabilityContract(Consistency.WillNotCorruptState, Cer.Success)]
	[SecurityCritical]
	[DllImport("KERNEL32.dll")]
	public unsafe static extern void* DecodePointer(void* Ptr);

	// Token: 0x060003D8 RID: 984
	[ReliabilityContract(Consistency.WillNotCorruptState, Cer.Success)]
	[SecurityCritical]
	[SuppressUnmanagedCodeSecurity]
	[DllImport("KERNEL32.dll")]
	public unsafe static extern void* EncodePointer(void* Ptr);

	// Token: 0x060003D9 RID: 985 RVA: 0x0005C0BC File Offset: 0x0005B4BC
	[SecurityCritical]
	[DebuggerStepThrough]
	internal unsafe static int _initterm_e(method* pfbegin, method* pfend)
	{
		int num = 0;
		if (pfbegin < pfend)
		{
			while (num == 0)
			{
				ulong num2 = (ulong)(*(long*)pfbegin);
				if (num2 != 0UL)
				{
					num = calli(System.Int32 modopt(System.Runtime.CompilerServices.CallConvCdecl)(), num2);
				}
				pfbegin += 8L / (long)sizeof(method);
				if (pfbegin >= pfend)
				{
					break;
				}
			}
		}
		return num;
	}

	// Token: 0x060003DA RID: 986 RVA: 0x0005C0EC File Offset: 0x0005B4EC
	[DebuggerStepThrough]
	[SecurityCritical]
	internal unsafe static void _initterm(method* pfbegin, method* pfend)
	{
		if (pfbegin < pfend)
		{
			do
			{
				ulong num = (ulong)(*(long*)pfbegin);
				if (num != 0UL)
				{
					calli(System.Void modopt(System.Runtime.CompilerServices.CallConvCdecl)(), num);
				}
				pfbegin += 8L / (long)sizeof(method);
			}
			while (pfbegin < pfend);
		}
	}

	// Token: 0x060003DB RID: 987 RVA: 0x0005C114 File Offset: 0x0005B514
	[DebuggerStepThrough]
	internal static ModuleHandle <CrtImplementationDetails>.ThisModule.Handle()
	{
		return typeof(ThisModule).Module.ModuleHandle;
	}

	// Token: 0x060003DC RID: 988 RVA: 0x0005C164 File Offset: 0x0005B564
	[DebuggerStepThrough]
	[SecurityCritical]
	[SecurityPermission(SecurityAction.Assert, UnmanagedCode = true)]
	internal unsafe static void _initterm_m(method* pfbegin, method* pfend)
	{
		if (pfbegin < pfend)
		{
			do
			{
				ulong num = (ulong)(*(long*)pfbegin);
				if (num != 0UL)
				{
					object obj = calli(System.Void modopt(System.Runtime.CompilerServices.IsConst)*(), <Module>.<CrtImplementationDetails>.ThisModule.ResolveMethod<void\u0020const\u0020*\u0020__clrcall(void)>(num));
				}
				pfbegin += 8L / (long)sizeof(method);
			}
			while (pfbegin < pfend);
		}
	}

	// Token: 0x060003DD RID: 989 RVA: 0x0005C138 File Offset: 0x0005B538
	[SecurityCritical]
	[DebuggerStepThrough]
	internal static method <CrtImplementationDetails>.ThisModule.ResolveMethod<void\u0020const\u0020*\u0020__clrcall(void)>(method methodToken)
	{
		return <Module>.<CrtImplementationDetails>.ThisModule.Handle().ResolveMethodHandle(methodToken).GetFunctionPointer().ToPointer();
	}

	// Token: 0x060003DE RID: 990 RVA: 0x0006434C File Offset: 0x0006374C
	[SuppressUnmanagedCodeSecurity]
	[DllImport("", CallingConvention = CallingConvention.Cdecl, SetLastError = true)]
	[MethodImpl(MethodImplOptions.Unmanaged)]
	internal unsafe static extern int RpcEpUnregister(void*, _RPC_BINDING_VECTOR*, _UUID_VECTOR*);

	// Token: 0x060003DF RID: 991 RVA: 0x00064340 File Offset: 0x00063740
	[SuppressUnmanagedCodeSecurity]
	[DllImport("", CallingConvention = CallingConvention.Cdecl, SetLastError = true)]
	[MethodImpl(MethodImplOptions.Unmanaged)]
	internal unsafe static extern int RpcServerUnregisterIf(void*, _GUID*, uint);

	// Token: 0x060003E0 RID: 992 RVA: 0x00064346 File Offset: 0x00063746
	[SuppressUnmanagedCodeSecurity]
	[DllImport("", CallingConvention = CallingConvention.Cdecl, SetLastError = true)]
	[MethodImpl(MethodImplOptions.Unmanaged)]
	internal unsafe static extern int RpcEpRegisterW(void*, _RPC_BINDING_VECTOR*, _UUID_VECTOR*, ushort*);

	// Token: 0x060003E1 RID: 993 RVA: 0x0006433A File Offset: 0x0006373A
	[SuppressUnmanagedCodeSecurity]
	[DllImport("", CallingConvention = CallingConvention.Cdecl, SetLastError = true)]
	[MethodImpl(MethodImplOptions.Unmanaged)]
	internal unsafe static extern int RpcBindingSetOption(void*, uint, ulong);

	// Token: 0x060003E2 RID: 994 RVA: 0x000642BC File Offset: 0x000636BC
	[SuppressUnmanagedCodeSecurity]
	[DllImport("", CallingConvention = CallingConvention.Cdecl, SetLastError = true)]
	[MethodImpl(MethodImplOptions.Unmanaged)]
	internal unsafe static extern void CloseThreadpoolWait(_TP_WAIT*);

	// Token: 0x060003E3 RID: 995 RVA: 0x000642B6 File Offset: 0x000636B6
	[SuppressUnmanagedCodeSecurity]
	[DllImport("", CallingConvention = CallingConvention.Cdecl, SetLastError = true)]
	[MethodImpl(MethodImplOptions.Unmanaged)]
	internal unsafe static extern void SetThreadpoolWait(_TP_WAIT*, void*, _FILETIME*);

	// Token: 0x060003E4 RID: 996 RVA: 0x0004F880 File Offset: 0x0004EC80
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern void FreeGenericReplyInfo(tagGenericReplyInfo*);

	// Token: 0x060003E5 RID: 997 RVA: 0x0004F830 File Offset: 0x0004EC30
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern void FreeGenericRequestInfo(tagGenericRequestInfo*);

	// Token: 0x060003E6 RID: 998 RVA: 0x0005C4C0 File Offset: 0x0005B8C0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_AmGenericRequest(void*, tagGenericRequestInfo*, tagGenericReplyInfo*, tagErrorExceptionInfo*);

	// Token: 0x060003E7 RID: 999 RVA: 0x0004F860 File Offset: 0x0004EC60
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern void InitGenericReplyInfo(tagGenericReplyInfo*);

	// Token: 0x060003E8 RID: 1000 RVA: 0x0004F810 File Offset: 0x0004EC10
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern void InitGenericRequestInfo(tagGenericRequestInfo*);

	// Token: 0x060003E9 RID: 1001 RVA: 0x0005C520 File Offset: 0x0005B920
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_AmGetDeferredRecoveryEntries(void*, int*, byte**, int*, tagErrorExceptionInfo*);

	// Token: 0x060003EA RID: 1002 RVA: 0x0005C960 File Offset: 0x0005BD60
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_AmReportServiceKill(void*, ushort*, ushort*, ushort*, tagErrorExceptionInfo*);

	// Token: 0x060003EB RID: 1003 RVA: 0x0005CC80 File Offset: 0x0005C080
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_RpcsAmSetAutomountConsensusState(void*, int, tagErrorExceptionInfo*);

	// Token: 0x060003EC RID: 1004 RVA: 0x0005CC10 File Offset: 0x0005C010
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_RpcsAmGetAutomountConsensusState(void*, int*, tagErrorExceptionInfo*);

	// Token: 0x060003ED RID: 1005 RVA: 0x0005CB20 File Offset: 0x0005BF20
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_AmServerMoveAllDatabases3(void*, ushort*, ushort*, int, int, int, int, int, int, ushort*, ushort*, int*, byte**, int*, tagErrorExceptionInfo*);

	// Token: 0x060003EE RID: 1006 RVA: 0x0005CA70 File Offset: 0x0005BE70
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_AmServerMoveAllDatabases2(void*, ushort*, ushort*, int, int, int, int, int, int, ushort*, int*, byte**, int*, tagErrorExceptionInfo*);

	// Token: 0x060003EF RID: 1007 RVA: 0x0005C9D0 File Offset: 0x0005BDD0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_AmServerMoveAllDatabases(void*, ushort*, ushort*, int, int, int, int, int, int, int*, byte**, int*, tagErrorExceptionInfo*);

	// Token: 0x060003F0 RID: 1008 RVA: 0x0005C910 File Offset: 0x0005BD10
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_AmRemountDatabase(void*, _GUID, int, int, ushort*, tagErrorExceptionInfo*);

	// Token: 0x060003F1 RID: 1009 RVA: 0x0005C8E0 File Offset: 0x0005BCE0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_AmRefreshConfiguration(void*, int, int, tagErrorExceptionInfo*);

	// Token: 0x060003F2 RID: 1010 RVA: 0x0005C9A0 File Offset: 0x0005BDA0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_AmReportSystemEvent(void*, int, ushort*, tagErrorExceptionInfo*);

	// Token: 0x060003F3 RID: 1011 RVA: 0x0005C410 File Offset: 0x0005B810
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_AmCheckThirdPartyListener(void*, int*, ushort**, tagErrorExceptionInfo*);

	// Token: 0x060003F4 RID: 1012 RVA: 0x0005C4F0 File Offset: 0x0005B8F0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_AmGetActiveManagerRole(void*, int*, ushort**, tagErrorExceptionInfo*);

	// Token: 0x060003F5 RID: 1013 RVA: 0x0005CBE0 File Offset: 0x0005BFE0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_AmServerSwitchOver(void*, ushort*, tagErrorExceptionInfo*);

	// Token: 0x060003F6 RID: 1014 RVA: 0x0005C480 File Offset: 0x0005B880
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_AmDismountDatabaseDirect(void*, _GUID, __MIDL_IActiveManagerRpc_0004*, tagErrorExceptionInfo*);

	// Token: 0x060003F7 RID: 1015 RVA: 0x0005C340 File Offset: 0x0005B740
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_AmAttemptCopyLastLogsDirect3(void*, _GUID, int, int, int, int, int, ushort*, int, int, int, ushort*, int, int*, byte**, tagErrorExceptionInfo*);

	// Token: 0x060003F8 RID: 1016 RVA: 0x0005C280 File Offset: 0x0005B680
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_AmAttemptCopyLastLogsDirect2(void*, _GUID, int, int, int, int, int, ushort*, int, int, ushort*, int, int*, byte**, tagErrorExceptionInfo*);

	// Token: 0x060003F9 RID: 1017 RVA: 0x0005C1E0 File Offset: 0x0005B5E0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_AmAttemptCopyLastLogsDirect(void*, _GUID, int, int, int, int, int, ushort*, int, int*, int*, tagErrorExceptionInfo*);

	// Token: 0x060003FA RID: 1018 RVA: 0x0005C650 File Offset: 0x0005BA50
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_AmMountDatabaseDirect3(void*, _GUID, __MIDL_IActiveManagerRpc_0003*, int, tagErrorExceptionInfo*);

	// Token: 0x060003FB RID: 1019 RVA: 0x0005C6A0 File Offset: 0x0005BAA0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_AmMountDatabaseDirectEx(void*, _GUID, __MIDL_IActiveManagerRpc_0002*, int, tagErrorExceptionInfo*);

	// Token: 0x060003FC RID: 1020 RVA: 0x0005C560 File Offset: 0x0005B960
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_AmGetPrimaryActiveManager(void*, __MIDL_IActiveManagerRpc_0001*, tagErrorExceptionInfo*);

	// Token: 0x060003FD RID: 1021 RVA: 0x0005C590 File Offset: 0x0005B990
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_AmIsRunning(void*, tagErrorExceptionInfo*);

	// Token: 0x060003FE RID: 1022 RVA: 0x0005C830 File Offset: 0x0005BC30
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_AmMoveDatabaseEx3(void*, _GUID, int, int, int, ushort*, ushort*, int, int, int, ushort*, int*, byte**, tagErrorExceptionInfo*);

	// Token: 0x060003FF RID: 1023 RVA: 0x0001B2E0 File Offset: 0x0001A6E0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern void MIDL_user_free(void*);

	// Token: 0x06000400 RID: 1024 RVA: 0x0005C780 File Offset: 0x0005BB80
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_AmMoveDatabaseEx2(void*, _GUID, int, int, int, ushort*, ushort*, int, int, int, int*, byte**, tagErrorExceptionInfo*);

	// Token: 0x06000401 RID: 1025 RVA: 0x0005C6F0 File Offset: 0x0005BAF0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_AmMoveDatabaseEx(void*, _GUID, int, int, int, ushort*, ushort*, int, int, int, tagErrorExceptionInfo*);

	// Token: 0x06000402 RID: 1026 RVA: 0x0005C440 File Offset: 0x0005B840
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_AmDismountDatabase(void*, _GUID, int, tagErrorExceptionInfo*);

	// Token: 0x06000403 RID: 1027 RVA: 0x0005C600 File Offset: 0x0005BA00
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_AmMountDatabase3(void*, _GUID, int, int, int, tagErrorExceptionInfo*);

	// Token: 0x06000404 RID: 1028 RVA: 0x0005C5B0 File Offset: 0x0005B9B0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_AmMountDatabase(void*, _GUID, int, int, tagErrorExceptionInfo*);

	// Token: 0x06000405 RID: 1029 RVA: 0x00028E70 File Offset: 0x00028270
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern void FreeErrorExceptionInfo(tagErrorExceptionInfo*);

	// Token: 0x06000406 RID: 1030 RVA: 0x0005CC40 File Offset: 0x0005C040
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_RpcsAmGetServerForDatabase(void*, _GUID, _AmRpcDbStatusInfo2*, tagErrorExceptionInfo*);

	// Token: 0x06000407 RID: 1031 RVA: 0x00028E50 File Offset: 0x00028250
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern void InitErrorExceptionInfo(tagErrorExceptionInfo*);

	// Token: 0x06000408 RID: 1032 RVA: 0x00005550 File Offset: 0x00004950
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern void FreeRpcDbStatusInfo(_AmRpcDbStatusInfo2*);

	// Token: 0x06000409 RID: 1033 RVA: 0x00005590 File Offset: 0x00004990
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern void FreeRpcPamInfo(__MIDL_IActiveManagerRpc_0001*);

	// Token: 0x0600040A RID: 1034 RVA: 0x0005CCE0 File Offset: 0x0005C0E0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_CreateMonitoringMailbox(void*, ushort*, _GUID);

	// Token: 0x0600040B RID: 1035 RVA: 0x00008780 File Offset: 0x00007B80
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern void FreeGenericReplyInfo(tagGenericReplyInfo*);

	// Token: 0x0600040C RID: 1036 RVA: 0x00008730 File Offset: 0x00007B30
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern void FreeGenericRequestInfo(tagGenericRequestInfo*);

	// Token: 0x0600040D RID: 1037 RVA: 0x0005CD20 File Offset: 0x0005C120
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_GenericRequest(void*, tagGenericRequestInfo*, tagGenericReplyInfo*, tagErrorExceptionInfo*);

	// Token: 0x0600040E RID: 1038 RVA: 0x00008760 File Offset: 0x00007B60
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern void InitGenericReplyInfo(tagGenericReplyInfo*);

	// Token: 0x0600040F RID: 1039 RVA: 0x00008710 File Offset: 0x00007B10
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern void InitGenericRequestInfo(tagGenericRequestInfo*);

	// Token: 0x06000410 RID: 1040 RVA: 0x0005CD90 File Offset: 0x0005C190
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_RequestCredential(void*, ushort*, _GUID, ushort*, ushort**);

	// Token: 0x06000411 RID: 1041 RVA: 0x0005CD50 File Offset: 0x0005C150
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_Heartbeat(void*, ushort*, _GUID);

	// Token: 0x06000412 RID: 1042 RVA: 0x00064352 File Offset: 0x00063752
	[SuppressUnmanagedCodeSecurity]
	[DllImport("", CallingConvention = CallingConvention.Cdecl, SetLastError = true)]
	[MethodImpl(MethodImplOptions.Unmanaged)]
	internal static extern int RpcMgmtSetCancelTimeout(int);

	// Token: 0x06000413 RID: 1043 RVA: 0x0005A1EE File Offset: 0x000595EE
	[SuppressUnmanagedCodeSecurity]
	[DllImport("", CallingConvention = CallingConvention.Cdecl, SetLastError = true)]
	[MethodImpl(MethodImplOptions.Unmanaged)]
	internal static extern int _purecall();

	// Token: 0x06000414 RID: 1044 RVA: 0x00064358 File Offset: 0x00063758
	[SuppressUnmanagedCodeSecurity]
	[DllImport("", CallingConvention = CallingConvention.Cdecl, SetLastError = true)]
	[MethodImpl(MethodImplOptions.Unmanaged)]
	internal unsafe static extern int RpcIfInqId(void*, _RPC_IF_ID*);

	// Token: 0x06000415 RID: 1045 RVA: 0x0005C192 File Offset: 0x0005B592
	[SuppressUnmanagedCodeSecurity]
	[DllImport("", CallingConvention = CallingConvention.Cdecl, SetLastError = true)]
	[MethodImpl(MethodImplOptions.Unmanaged)]
	internal unsafe static extern int RpcAsyncCompleteCall(_RPC_ASYNC_STATE*, void*);

	// Token: 0x06000416 RID: 1046 RVA: 0x0001B2B0 File Offset: 0x0001A6B0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern void* MIDL_user_allocate(ulong);

	// Token: 0x06000417 RID: 1047 RVA: 0x0005A44A File Offset: 0x0005984A
	[SuppressUnmanagedCodeSecurity]
	[DllImport("", CallingConvention = CallingConvention.Cdecl, SetLastError = true)]
	[MethodImpl(MethodImplOptions.Unmanaged)]
	internal unsafe static extern int memcpy_s(void*, ulong, void*, ulong);

	// Token: 0x06000418 RID: 1048 RVA: 0x0005F950 File Offset: 0x0005ED50
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern void cli_EcListAllMdbStatus50(_RPC_ASYNC_STATE*, void*, int, uint*, uint*, byte**, uint, byte*, uint*, byte**);

	// Token: 0x06000419 RID: 1049 RVA: 0x00064364 File Offset: 0x00063764
	[SuppressUnmanagedCodeSecurity]
	[DllImport("", CallingConvention = CallingConvention.Cdecl, SetLastError = true)]
	[MethodImpl(MethodImplOptions.Unmanaged)]
	internal unsafe static extern int RpcAsyncInitializeHandle(_RPC_ASYNC_STATE*, uint);

	// Token: 0x0600041A RID: 1050 RVA: 0x0005F380 File Offset: 0x0005E780
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_EcDeleteUserInfo50(void*, _GUID*, _GUID*, uint, uint, byte*, uint*, byte**);

	// Token: 0x0600041B RID: 1051 RVA: 0x0005FFF0 File Offset: 0x0005F3F0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_EcUpdateUserInfo50(void*, _GUID*, _GUID*, uint, uint, byte*, uint, uint*, uint, byte*, uint*, byte**);

	// Token: 0x0600041C RID: 1052 RVA: 0x0005FD20 File Offset: 0x0005F120
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_EcReadUserInfo50(void*, _GUID*, _GUID*, uint, uint, uint*, uint*, byte**, uint, byte*, uint*, byte**);

	// Token: 0x0600041D RID: 1053 RVA: 0x0005F210 File Offset: 0x0005E610
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_EcCreateUserInfo50(void*, _GUID*, _GUID*, uint, uint, byte*, uint, byte*, uint*, byte**);

	// Token: 0x0600041E RID: 1054 RVA: 0x0005D890 File Offset: 0x0005CC90
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_EcAdminIntegrityCheckEx50(void*, _GUID*, _GUID*, uint, uint, byte*, uint*, byte**, uint, byte*, uint*, byte**);

	// Token: 0x0600041F RID: 1055 RVA: 0x0005F470 File Offset: 0x0005E870
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_EcForceNewLog50(void*, _GUID*, uint, byte*, uint*, byte**);

	// Token: 0x06000420 RID: 1056 RVA: 0x0005D980 File Offset: 0x0005CD80
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_EcAdminPrePopulateCacheEx50(void*, _GUID*, _GUID*, uint, byte*, byte*, uint, byte*, uint*, byte**);

	// Token: 0x06000421 RID: 1057 RVA: 0x0005D410 File Offset: 0x0005C810
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_EcAdminGetPhysicalDatabaseInformation50(void*, _GUID*, uint*, byte**, uint, byte*, uint*, byte**);

	// Token: 0x06000422 RID: 1058 RVA: 0x0005DA00 File Offset: 0x0005CE00
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_EcAdminProcessSnapshotOperation50(void*, _GUID*, uint, uint, uint, byte*, uint*, byte**);

	// Token: 0x06000423 RID: 1059 RVA: 0x0005CF80 File Offset: 0x0005C380
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_EcAdminGetDatabaseProcessInfo50(void*, _GUID*, uint, uint*, byte**, uint*, uint*, uint, byte*, uint*, byte**);

	// Token: 0x06000424 RID: 1060 RVA: 0x0005D4F0 File Offset: 0x0005C8F0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_EcAdminGetResourceMonitorDigest50(void*, _GUID*, byte**, uint*, uint*, uint, uint*, uint, byte*, uint*, byte**);

	// Token: 0x06000425 RID: 1061 RVA: 0x0005F860 File Offset: 0x0005EC60
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_EcGetMultiMailboxSearchKeywordStats(void*, _GUID*, uint, byte*, uint*, byte**, uint, byte*, uint*, byte**);

	// Token: 0x06000426 RID: 1062 RVA: 0x0005FB70 File Offset: 0x0005EF70
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_EcMultiMailboxSearch(void*, _GUID*, uint, byte*, uint*, byte**, uint, byte*, uint*, byte**);

	// Token: 0x06000427 RID: 1063 RVA: 0x0005D810 File Offset: 0x0005CC10
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_EcAdminISIntegCheck50(void*, _GUID*, _GUID*, uint, uint, uint*, byte**, uint, byte*, uint*, byte**);

	// Token: 0x06000428 RID: 1064 RVA: 0x0005D1A0 File Offset: 0x0005C5A0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_EcAdminGetMailboxSignatureBasicInfo50(void*, _GUID*, _GUID*, uint, uint*, byte**, uint, byte*, uint*, byte**);

	// Token: 0x06000429 RID: 1065 RVA: 0x0005D030 File Offset: 0x0005C430
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_EcAdminGetFeatureVersionEx50(void*, uint, uint*, uint, byte*, uint*, byte**);

	// Token: 0x0600042A RID: 1066 RVA: 0x0005CE70 File Offset: 0x0005C270
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_EcAdminExecuteTask50(void*, _GUID*, _GUID*, int, int, uint, byte*, uint*, byte**);

	// Token: 0x0600042B RID: 1067 RVA: 0x0005D5F0 File Offset: 0x0005C9F0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_EcAdminGetRestrictionTableEx50(void*, _GUID*, _GUID*, int, _ltid, byte**, uint*, uint*, uint, uint*, uint, byte*, uint*, byte**);

	// Token: 0x0600042C RID: 1068 RVA: 0x0005D740 File Offset: 0x0005CB40
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_EcAdminGetViewsTableEx50(void*, _GUID*, _GUID*, int, _ltid, byte**, uint*, uint*, uint, uint*, uint, byte*, uint*, byte**);

	// Token: 0x0600042D RID: 1069 RVA: 0x0005FA30 File Offset: 0x0005EE30
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_EcLogReplayRequestEx2(void*, _GUID*, uint, uint, uint*, uint*, byte**, uint*, uint*, byte**, uint*, byte**, uint*, uint**, uint, byte*, uint*, byte**);

	// Token: 0x0600042E RID: 1070 RVA: 0x0005D570 File Offset: 0x0005C970
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_EcAdminGetRestrictionTable50(void*, _GUID*, int, int, byte*, byte**, uint*, uint*, uint, uint*);

	// Token: 0x0600042F RID: 1071 RVA: 0x0005D360 File Offset: 0x0005C760
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_EcAdminGetMailboxTableEntryFlags50(void*, _GUID*, _GUID*, uint, byte**, uint*, uint*, uint, uint, uint*, uint, byte*, uint*, byte**);

	// Token: 0x06000430 RID: 1072 RVA: 0x0005D2C0 File Offset: 0x0005C6C0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_EcAdminGetMailboxTableEntry50(void*, _GUID*, _GUID*, byte**, uint*, uint*, uint, uint, uint*, uint, byte*, uint*, byte**);

	// Token: 0x06000431 RID: 1073 RVA: 0x0005F5E0 File Offset: 0x0005E9E0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_EcGetLastBackupInfoEx50(void*, _GUID*, _FILETIME*, _FILETIME*, _FILETIME*, _FILETIME*, int*, int*, int*, int*, uint, byte*, uint*, byte**);

	// Token: 0x06000432 RID: 1074 RVA: 0x0005F3E0 File Offset: 0x0005E7E0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_EcDoMaintenanceTask50(void*, _GUID*, uint, uint, byte*, uint*, byte**);

	// Token: 0x06000433 RID: 1075 RVA: 0x00060080 File Offset: 0x0005F480
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_EcWriteMdbEvents50(void*, _GUID*, _GUID*, uint, byte*, uint*, byte**, uint, byte*, uint*, byte**);

	// Token: 0x06000434 RID: 1076 RVA: 0x0005F7E0 File Offset: 0x0005EBE0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_EcGetMdbWatermarksForMailbox50(void*, _GUID*, _GUID*, _GUID*, uint*, __MIDL_mdbadmin50_0002**, uint, byte*, uint*, byte**);

	// Token: 0x06000435 RID: 1077 RVA: 0x0005F760 File Offset: 0x0005EB60
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_EcGetMdbWatermarksForConsumer50(void*, _GUID*, _GUID*, _GUID*, _GUID*, uint*, __MIDL_mdbadmin50_0002**, uint, byte*, uint*, byte**);

	// Token: 0x06000436 RID: 1078 RVA: 0x0005FDB0 File Offset: 0x0005F1B0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_EcSaveMdbWatermarks50(void*, _GUID*, _GUID*, uint, __MIDL_mdbadmin50_0002*, uint, byte*, uint*, byte**);

	// Token: 0x06000437 RID: 1079 RVA: 0x0005F310 File Offset: 0x0005E710
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_EcDeleteMdbWatermarksForMailbox50(void*, _GUID*, _GUID*, _GUID*, uint*, uint, byte*, uint*, byte**);

	// Token: 0x06000438 RID: 1080 RVA: 0x0005F290 File Offset: 0x0005E690
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_EcDeleteMdbWatermarksForConsumer50(void*, _GUID*, _GUID*, _GUID*, _GUID*, uint*, uint, byte*, uint*, byte**);

	// Token: 0x06000439 RID: 1081 RVA: 0x0005FEF0 File Offset: 0x0005F2F0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_EcSyncMailboxWithDS50(void*, _GUID*, _GUID*, uint, byte*, uint*, byte**);

	// Token: 0x0600043A RID: 1082 RVA: 0x0005FCA0 File Offset: 0x0005F0A0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_EcReadMdbEvents50(void*, _GUID*, _GUID*, uint, byte*, uint*, byte**, uint, byte*, uint*, byte**);

	// Token: 0x0600043B RID: 1083 RVA: 0x0005D920 File Offset: 0x0005CD20
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_EcAdminNotifyOnDSChange50(void*, _GUID*, _GUID*, uint, uint, byte*, uint*, byte**);

	// Token: 0x0600043C RID: 1084 RVA: 0x0005D220 File Offset: 0x0005C620
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_EcAdminGetMailboxTable50(void*, _GUID*, int, byte**, uint*, uint*, uint, uint, uint*, uint, byte*, uint*, byte**);

	// Token: 0x0600043D RID: 1085 RVA: 0x0005FC60 File Offset: 0x0005F060
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_EcPurgeCachedMdbObject50(void*, _GUID*, uint, byte*, uint*, byte**);

	// Token: 0x0600043E RID: 1086 RVA: 0x0005DAD0 File Offset: 0x0005CED0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_EcAdminSetMailboxBasicInfo50(void*, _GUID*, _GUID*, sbyte*, uint, uint, byte*, uint*, byte**);

	// Token: 0x0600043F RID: 1087 RVA: 0x0005FE90 File Offset: 0x0005F290
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_EcStartBlockModeReplicationToPassive50(void*, _GUID*, ushort*, uint, uint, byte*, uint*, byte**);

	// Token: 0x06000440 RID: 1088 RVA: 0x0005FF90 File Offset: 0x0005F390
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_EcUnmountDatabase50(void*, _GUID*, _GUID*, int, uint, byte*, uint*, byte**);

	// Token: 0x06000441 RID: 1089 RVA: 0x0005FB10 File Offset: 0x0005EF10
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_EcMountDatabase50(void*, _GUID*, _GUID*, uint, uint, byte*, uint*, byte**);

	// Token: 0x06000442 RID: 1090 RVA: 0x0005D090 File Offset: 0x0005C490
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_EcAdminGetLogonTable50(void*, _GUID*, int, byte**, uint*, uint*, uint, uint, uint*, uint, byte*, uint*, byte**);

	// Token: 0x06000443 RID: 1091 RVA: 0x0005F6F0 File Offset: 0x0005EAF0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_EcGetMailboxSecurityDescriptor50(void*, _GUID*, _GUID*, byte**, uint*, uint, byte*, uint*, byte**);

	// Token: 0x06000444 RID: 1092 RVA: 0x0005FE20 File Offset: 0x0005F220
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_EcSetMailboxSecurityDescriptor50(void*, _GUID*, _GUID*, byte*, uint, uint, byte*, uint*, byte**);

	// Token: 0x06000445 RID: 1093 RVA: 0x0005CE10 File Offset: 0x0005C210
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_EcAdminDeletePrivateMailbox50(void*, _GUID*, _GUID*, uint, uint, byte*, uint*, byte**);

	// Token: 0x06000446 RID: 1094 RVA: 0x0005FF50 File Offset: 0x0005F350
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_EcSyncMailboxesWithDS50(void*, _GUID*, uint, byte*, uint*, byte**);

	// Token: 0x06000447 RID: 1095 RVA: 0x0005FC20 File Offset: 0x0005F020
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_EcPurgeCachedMailboxObject50(void*, _GUID*, uint, byte*, uint*, byte**);

	// Token: 0x06000448 RID: 1096 RVA: 0x0005F1B0 File Offset: 0x0005E5B0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_EcClearAbsentInDsFlagOnMailbox50(void*, _GUID*, _GUID*, uint, byte*, uint*, byte**);

	// Token: 0x06000449 RID: 1097 RVA: 0x0005F690 File Offset: 0x0005EA90
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_EcGetLastBackupTimesEx50(void*, _GUID*, _FILETIME*, _FILETIME*, uint, byte*, uint*, byte**);

	// Token: 0x0600044A RID: 1098 RVA: 0x0005CEE0 File Offset: 0x0005C2E0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_EcAdminGetCnctTable50(void*, _GUID*, int, byte**, uint*, uint*, uint, uint, uint*, uint, byte*, uint*, byte**);

	// Token: 0x0600044B RID: 1099 RVA: 0x0005F4F0 File Offset: 0x0005E8F0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_EcGetDatabaseSizeEx50(void*, _GUID*, uint*, uint*, uint*, uint, byte*, uint*, byte**);

	// Token: 0x0600044C RID: 1100 RVA: 0x0005F9D0 File Offset: 0x0005EDD0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_EcListMdbStatus50(void*, uint, _GUID*, uint*, uint, byte*, uint*, byte**);

	// Token: 0x0600044D RID: 1101 RVA: 0x00060100 File Offset: 0x0005F500
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern void cli_AdminGetIFVersion(void*, int, ushort*, ushort*);

	// Token: 0x0600044E RID: 1102 RVA: 0x0006435E File Offset: 0x0006375E
	[SuppressUnmanagedCodeSecurity]
	[DllImport("", CallingConvention = CallingConvention.Cdecl, SetLastError = true)]
	[MethodImpl(MethodImplOptions.Unmanaged)]
	internal unsafe static extern int RpcAsyncCancelCall(_RPC_ASYNC_STATE*, int);

	// Token: 0x0600044F RID: 1103 RVA: 0x0005A2CE File Offset: 0x000596CE
	[SuppressUnmanagedCodeSecurity]
	[DllImport("", CallingConvention = CallingConvention.Cdecl, SetLastError = true)]
	[MethodImpl(MethodImplOptions.Unmanaged)]
	internal unsafe static extern void delete(void*);

	// Token: 0x06000450 RID: 1104 RVA: 0x0005A2C8 File Offset: 0x000596C8
	[SuppressUnmanagedCodeSecurity]
	[DllImport("", CallingConvention = CallingConvention.Cdecl, SetLastError = true)]
	[MethodImpl(MethodImplOptions.Unmanaged)]
	internal unsafe static extern void* @new(ulong);

	// Token: 0x06000451 RID: 1105 RVA: 0x0006436A File Offset: 0x0006376A
	[SuppressUnmanagedCodeSecurity]
	[DllImport("", CallingConvention = CallingConvention.Cdecl, SetLastError = true)]
	[MethodImpl(MethodImplOptions.Unmanaged)]
	internal unsafe static extern int RpcBindingInqObject(void*, _GUID*);

	// Token: 0x06000452 RID: 1106 RVA: 0x00060830 File Offset: 0x0005FC30
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_RunNowWithParamsHR(void*, sbyte*, _GUID, _GUID, sbyte*);

	// Token: 0x06000453 RID: 1107 RVA: 0x00060770 File Offset: 0x0005FB70
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_HaltHR(void*, sbyte*);

	// Token: 0x06000454 RID: 1108 RVA: 0x000607E0 File Offset: 0x0005FBE0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_RunNowHR(void*, sbyte*, _GUID, _GUID);

	// Token: 0x06000455 RID: 1109 RVA: 0x00060C20 File Offset: 0x00060020
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_RpcsClusterForceCleanupNode(void*, ushort**, tagErrorExceptionInfo*);

	// Token: 0x06000456 RID: 1110 RVA: 0x00060BF0 File Offset: 0x0005FFF0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_RpcsClusterEvictNodeFromCluster(void*, ushort*, ushort**, tagErrorExceptionInfo*);

	// Token: 0x06000457 RID: 1111 RVA: 0x00060B30 File Offset: 0x0005FF30
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_RpcsClusterAddNodeToCluster(void*, ushort*, ushort**, tagErrorExceptionInfo*);

	// Token: 0x06000458 RID: 1112 RVA: 0x00060BC0 File Offset: 0x0005FFC0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_RpcsClusterDestroyCluster(void*, ushort*, ushort**, tagErrorExceptionInfo*);

	// Token: 0x06000459 RID: 1113 RVA: 0x00060B60 File Offset: 0x0005FF60
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_RpcsClusterCreateCluster(void*, ushort*, ushort*, int, ushort**, uint*, ushort**, tagErrorExceptionInfo*);

	// Token: 0x0600045A RID: 1114 RVA: 0x00060C90 File Offset: 0x00060090
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_RpcsClusterInstallFailoverClustering(void*, ushort**, tagErrorExceptionInfo*);

	// Token: 0x0600045B RID: 1115 RVA: 0x000609A0 File Offset: 0x0005FDA0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_RemoveDagNetwork(void*, int, byte*, tagErrorExceptionInfo*);

	// Token: 0x0600045C RID: 1116 RVA: 0x00061030 File Offset: 0x00060430
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_SetDagNetworkConfig(void*, int, byte*, tagErrorExceptionInfo*);

	// Token: 0x0600045D RID: 1117 RVA: 0x00061000 File Offset: 0x00060400
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_SetDagNetwork(void*, int, byte*, tagErrorExceptionInfo*);

	// Token: 0x0600045E RID: 1118 RVA: 0x00060970 File Offset: 0x0005FD70
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_GetDagNetworkConfig(void*, int*, byte**, tagErrorExceptionInfo*);

	// Token: 0x0600045F RID: 1119 RVA: 0x000608D0 File Offset: 0x0005FCD0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_EndDbSeed(void*, _GUID, tagErrorExceptionInfo*);

	// Token: 0x06000460 RID: 1120 RVA: 0x00060890 File Offset: 0x0005FC90
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_CancelDbSeed(void*, _GUID, tagErrorExceptionInfo*);

	// Token: 0x06000461 RID: 1121 RVA: 0x00060C50 File Offset: 0x00060050
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_RpcsClusterGetDatabaseSeedStatus(void*, _GUID, tagSeederStatus2*, tagErrorExceptionInfo*);

	// Token: 0x06000462 RID: 1122 RVA: 0x00060D20 File Offset: 0x00060120
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_RpcsClusterPrepareDatabaseSeedAndBegin5(void*, tagSeederArgs5*, tagErrorExceptionInfo*, tagSeederStatus2*);

	// Token: 0x06000463 RID: 1123 RVA: 0x00060CF0 File Offset: 0x000600F0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_RpcsClusterPrepareDatabaseSeedAndBegin4(void*, tagSeederArgs4*, tagErrorExceptionInfo*, tagSeederStatus2*);

	// Token: 0x06000464 RID: 1124 RVA: 0x00019F00 File Offset: 0x00019300
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern void FreeSeederStatus(tagSeederStatus2*);

	// Token: 0x06000465 RID: 1125 RVA: 0x00060CC0 File Offset: 0x000600C0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_RpcsClusterPrepareDatabaseSeedAndBegin3(void*, tagSeederArgs3*, tagErrorExceptionInfo*, tagSeederStatus2*);

	// Token: 0x06000466 RID: 1126 RVA: 0x00019ED0 File Offset: 0x000192D0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern void InitSeederStatus(tagSeederStatus2*);

	// Token: 0x06000467 RID: 1127 RVA: 0x00060F80 File Offset: 0x00060380
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_RpcsNotifyChangedReplayConfiguration(void*, _GUID, int, int, int, int, tagErrorExceptionInfo*);

	// Token: 0x06000468 RID: 1128 RVA: 0x00060FE0 File Offset: 0x000603E0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_RunConfigurationUpdater(void*, tagErrorExceptionInfo*);

	// Token: 0x06000469 RID: 1129 RVA: 0x00060E60 File Offset: 0x00060260
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_RpcsGetCopyStatusBasic(void*, uint, int, _GUID*, int*, byte**, int*, tagErrorExceptionInfo*);

	// Token: 0x0600046A RID: 1130 RVA: 0x00060F20 File Offset: 0x00060320
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_RpcsGetCopyStatusWithHealthState(void*, uint, int, _GUID*, int*, byte**, tagErrorExceptionInfo*);

	// Token: 0x0600046B RID: 1131 RVA: 0x00060EC0 File Offset: 0x000602C0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_RpcsGetCopyStatusEx4(void*, uint, int, _GUID*, int*, byte**, int*, tagErrorExceptionInfo*);

	// Token: 0x0600046C RID: 1132 RVA: 0x00060910 File Offset: 0x0005FD10
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_GetCopyStatusEx2(void*, uint, int, _GUID*, int*, byte**, int*, tagErrorExceptionInfo*);

	// Token: 0x0600046D RID: 1133 RVA: 0x00060E20 File Offset: 0x00060220
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_RpcsEnableReplayLag2(void*, _GUID, int, tagErrorExceptionInfo*);

	// Token: 0x0600046E RID: 1134 RVA: 0x00060D90 File Offset: 0x00060190
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_RpcsDisableReplayLag2(void*, _GUID, ushort*, int, tagErrorExceptionInfo*);

	// Token: 0x0600046F RID: 1135 RVA: 0x00060DE0 File Offset: 0x000601E0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_RpcsEnableReplayLag(void*, _GUID, tagErrorExceptionInfo*);

	// Token: 0x06000470 RID: 1136 RVA: 0x00060D50 File Offset: 0x00060150
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_RpcsDisableReplayLag(void*, _GUID, ushort*, tagErrorExceptionInfo*);

	// Token: 0x06000471 RID: 1137 RVA: 0x00060A10 File Offset: 0x0005FE10
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_RequestResume2(void*, _GUID, int, tagErrorExceptionInfo*);

	// Token: 0x06000472 RID: 1138 RVA: 0x000609D0 File Offset: 0x0005FDD0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_RequestResume(void*, _GUID, tagErrorExceptionInfo*);

	// Token: 0x06000473 RID: 1139 RVA: 0x00060AE0 File Offset: 0x0005FEE0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_RequestSuspend3(void*, _GUID, ushort*, int, int, tagErrorExceptionInfo*);

	// Token: 0x06000474 RID: 1140 RVA: 0x00060A90 File Offset: 0x0005FE90
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_RequestSuspend2(void*, _GUID, ushort*, int, tagErrorExceptionInfo*);

	// Token: 0x06000475 RID: 1141 RVA: 0x00060A50 File Offset: 0x0005FE50
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_RequestSuspend(void*, _GUID, ushort*, tagErrorExceptionInfo*);

	// Token: 0x06000476 RID: 1142 RVA: 0x0005A2C2 File Offset: 0x000596C2
	[SuppressUnmanagedCodeSecurity]
	[DllImport("", CallingConvention = CallingConvention.Cdecl, SetLastError = true)]
	[MethodImpl(MethodImplOptions.Unmanaged)]
	internal unsafe static extern void free(void*);

	// Token: 0x06000477 RID: 1143 RVA: 0x0005A2BC File Offset: 0x000596BC
	[SuppressUnmanagedCodeSecurity]
	[DllImport("", CallingConvention = CallingConvention.Cdecl, SetLastError = true)]
	[MethodImpl(MethodImplOptions.Unmanaged)]
	internal unsafe static extern void* malloc(ulong);

	// Token: 0x06000478 RID: 1144 RVA: 0x000642CE File Offset: 0x000636CE
	[SuppressUnmanagedCodeSecurity]
	[DllImport("", CallingConvention = CallingConvention.Cdecl, SetLastError = true)]
	[MethodImpl(MethodImplOptions.Unmanaged)]
	internal unsafe static extern int GetComputerNameExW(_COMPUTER_NAME_FORMAT, ushort*, uint*);

	// Token: 0x06000479 RID: 1145 RVA: 0x000642C8 File Offset: 0x000636C8
	[SuppressUnmanagedCodeSecurity]
	[DllImport("", CallingConvention = CallingConvention.Cdecl, SetLastError = true)]
	[MethodImpl(MethodImplOptions.Unmanaged)]
	internal static extern uint GetLastError();

	// Token: 0x0600047A RID: 1146 RVA: 0x000642C2 File Offset: 0x000636C2
	[SuppressUnmanagedCodeSecurity]
	[DllImport("", CallingConvention = CallingConvention.Cdecl, SetLastError = true)]
	[MethodImpl(MethodImplOptions.Unmanaged)]
	internal unsafe static extern int WideCharToMultiByte(uint, uint, ushort*, int, sbyte*, int, sbyte*, int*);

	// Token: 0x0600047B RID: 1147 RVA: 0x000642A4 File Offset: 0x000636A4
	[SuppressUnmanagedCodeSecurity]
	[DllImport("", CallingConvention = CallingConvention.Cdecl, SetLastError = true)]
	[MethodImpl(MethodImplOptions.Unmanaged)]
	internal unsafe static extern int wmemcpy_s(ushort*, ulong, ushort*, ulong);

	// Token: 0x0600047C RID: 1148 RVA: 0x00061060 File Offset: 0x00060460
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_GetSyncNowResult(void*, int*, int*, byte**);

	// Token: 0x0600047D RID: 1149 RVA: 0x00061090 File Offset: 0x00060490
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_StartSyncNow(void*, ushort*, int, int, int*);

	// Token: 0x0600047E RID: 1150 RVA: 0x00061550 File Offset: 0x00060950
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern void cli_Async_EcDummyRpc(_RPC_ASYNC_STATE*, void*);

	// Token: 0x0600047F RID: 1151 RVA: 0x000614C0 File Offset: 0x000608C0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern void cli_Async_EcDoRpcExt2(_RPC_ASYNC_STATE*, void**, uint*, byte*, uint, byte*, uint*, byte*, uint, byte*, uint*, uint*);

	// Token: 0x06000480 RID: 1152 RVA: 0x000613E0 File Offset: 0x000607E0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern void cli_Async_EcDoDisconnect(_RPC_ASYNC_STATE*, void**);

	// Token: 0x06000481 RID: 1153 RVA: 0x00064370 File Offset: 0x00063770
	[SuppressUnmanagedCodeSecurity]
	[DllImport("", CallingConvention = CallingConvention.Cdecl, SetLastError = true)]
	[MethodImpl(MethodImplOptions.Unmanaged)]
	internal unsafe static extern void RpcSsDestroyClientContext(void**);

	// Token: 0x06000482 RID: 1154 RVA: 0x000612A0 File Offset: 0x000606A0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern void cli_Async_EcDoConnectEx(_RPC_ASYNC_STATE*, void*, void**, byte*, uint, uint, uint, uint, uint, uint, uint, ushort, uint*, uint*, uint*, ushort*, byte**, byte**, ushort*, ushort*, ushort*, uint*, byte*, uint, byte*, uint*);

	// Token: 0x06000483 RID: 1155 RVA: 0x0005AB28 File Offset: 0x00059F28
	[SuppressUnmanagedCodeSecurity]
	[DllImport("", CallingConvention = CallingConvention.Cdecl, SetLastError = true)]
	[MethodImpl(MethodImplOptions.Unmanaged)]
	internal static extern void Sleep(uint);

	// Token: 0x06000484 RID: 1156 RVA: 0x000642DA File Offset: 0x000636DA
	[SuppressUnmanagedCodeSecurity]
	[DllImport("", CallingConvention = CallingConvention.Cdecl, SetLastError = true)]
	[MethodImpl(MethodImplOptions.Unmanaged)]
	internal unsafe static extern int GetQueuedCompletionStatus(void*, uint*, ulong*, _OVERLAPPED**, uint);

	// Token: 0x06000485 RID: 1157 RVA: 0x0005AB04 File Offset: 0x00059F04
	[SuppressUnmanagedCodeSecurity]
	[DllImport("", CallingConvention = CallingConvention.Cdecl, SetLastError = true)]
	[MethodImpl(MethodImplOptions.Unmanaged)]
	internal unsafe static extern int CloseHandle(void*);

	// Token: 0x06000486 RID: 1158 RVA: 0x000642D4 File Offset: 0x000636D4
	[SuppressUnmanagedCodeSecurity]
	[DllImport("", CallingConvention = CallingConvention.Cdecl, SetLastError = true)]
	[MethodImpl(MethodImplOptions.Unmanaged)]
	internal unsafe static extern int PostQueuedCompletionStatus(void*, uint, ulong, _OVERLAPPED*);

	// Token: 0x06000487 RID: 1159 RVA: 0x000642E0 File Offset: 0x000636E0
	[SuppressUnmanagedCodeSecurity]
	[DllImport("", CallingConvention = CallingConvention.Cdecl, SetLastError = true)]
	[MethodImpl(MethodImplOptions.Unmanaged)]
	internal unsafe static extern void* CreateIoCompletionPort(void*, void*, ulong, uint);

	// Token: 0x06000488 RID: 1160 RVA: 0x000223D0 File Offset: 0x000217D0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern BaseRundownQueue<void\u0020*>* {ctor}(BaseRundownQueue<void\u0020*>*);

	// Token: 0x06000489 RID: 1161 RVA: 0x00022540 File Offset: 0x00021940
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern void {dtor}(BaseRundownQueue<void\u0020*>*);

	// Token: 0x0600048A RID: 1162 RVA: 0x000229A0 File Offset: 0x00021DA0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int FInitialize(BaseRundownQueue<void\u0020*>*);

	// Token: 0x0600048B RID: 1163 RVA: 0x00022340 File Offset: 0x00021740
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern void Uninitialize(BaseRundownQueue<void\u0020*>*);

	// Token: 0x0600048C RID: 1164 RVA: 0x00023BE0 File Offset: 0x00022FE0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern void {dtor}(CRequestQueue<EMSMDB_REQUEST>*);

	// Token: 0x0600048D RID: 1165 RVA: 0x000228E0 File Offset: 0x00021CE0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern void {dtor}(CLazyInitRequestQueue<CEMSMDBRequestQueue,EMSMDB_REQUEST,10000,1>*);

	// Token: 0x0600048E RID: 1166 RVA: 0x00064382 File Offset: 0x00063782
	[SuppressUnmanagedCodeSecurity]
	[DllImport("", CallingConvention = CallingConvention.Cdecl, SetLastError = true)]
	[MethodImpl(MethodImplOptions.Unmanaged)]
	internal static extern void RpcRaiseException(int);

	// Token: 0x0600048F RID: 1167 RVA: 0x0006437C File Offset: 0x0006377C
	[SuppressUnmanagedCodeSecurity]
	[DllImport("", CallingConvention = CallingConvention.Cdecl, SetLastError = true)]
	[MethodImpl(MethodImplOptions.Unmanaged)]
	internal unsafe static extern int RpcServerUnsubscribeForNotification(void*, _RPC_NOTIFICATIONS, uint*);

	// Token: 0x06000490 RID: 1168 RVA: 0x00064376 File Offset: 0x00063776
	[SuppressUnmanagedCodeSecurity]
	[DllImport("", CallingConvention = CallingConvention.Cdecl, SetLastError = true)]
	[MethodImpl(MethodImplOptions.Unmanaged)]
	internal unsafe static extern int RpcServerSubscribeForNotification(void*, _RPC_NOTIFICATIONS, _RPC_NOTIFICATION_TYPES, _RPC_ASYNC_NOTIFICATION_INFO*);

	// Token: 0x06000491 RID: 1169 RVA: 0x0005AAE6 File Offset: 0x00059EE6
	[SuppressUnmanagedCodeSecurity]
	[DllImport("", CallingConvention = CallingConvention.Cdecl, SetLastError = true)]
	[MethodImpl(MethodImplOptions.Unmanaged)]
	internal static extern uint GetTickCount();

	// Token: 0x06000492 RID: 1170 RVA: 0x000617D0 File Offset: 0x00060BD0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_ImportCertificate(void*, int, int, byte*, ushort*, int*, byte**);

	// Token: 0x06000493 RID: 1171 RVA: 0x00061730 File Offset: 0x00060B30
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_ExportCertificate(void*, int, int, byte*, ushort*, int*, byte**);

	// Token: 0x06000494 RID: 1172 RVA: 0x000616F0 File Offset: 0x00060AF0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_EnableCertificate(void*, int, int, byte*, int*, byte**);

	// Token: 0x06000495 RID: 1173 RVA: 0x00061830 File Offset: 0x00060C30
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_RemoveCertificate(void*, int, int, byte*, int*, byte**);

	// Token: 0x06000496 RID: 1174 RVA: 0x000616B0 File Offset: 0x00060AB0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_CreateCertificate(void*, int, int, byte*, int*, byte**);

	// Token: 0x06000497 RID: 1175 RVA: 0x00061790 File Offset: 0x00060B90
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_GetCertificate(void*, int, int, byte*, int*, byte**);

	// Token: 0x06000498 RID: 1176 RVA: 0x00061990 File Offset: 0x00060D90
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_ImportCertificate2(void*, int, int, byte*, ushort*, int*, byte**);

	// Token: 0x06000499 RID: 1177 RVA: 0x000618F0 File Offset: 0x00060CF0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_ExportCertificate2(void*, int, int, byte*, ushort*, int*, byte**);

	// Token: 0x0600049A RID: 1178 RVA: 0x000618B0 File Offset: 0x00060CB0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_EnableCertificate2(void*, int, int, byte*, int*, byte**);

	// Token: 0x0600049B RID: 1179 RVA: 0x000619F0 File Offset: 0x00060DF0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_RemoveCertificate2(void*, int, int, byte*, int*, byte**);

	// Token: 0x0600049C RID: 1180 RVA: 0x00061870 File Offset: 0x00060C70
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_CreateCertificate2(void*, int, int, byte*, int*, byte**);

	// Token: 0x0600049D RID: 1181 RVA: 0x00061950 File Offset: 0x00060D50
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_GetCertificate2(void*, int, int, byte*, int*, byte**);

	// Token: 0x0600049E RID: 1182 RVA: 0x00058C20 File Offset: 0x00058020
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_EcDoAsyncWait(void*, uint, uint*);

	// Token: 0x0600049F RID: 1183 RVA: 0x0005AAFE File Offset: 0x00059EFE
	[SuppressUnmanagedCodeSecurity]
	[DllImport("", CallingConvention = CallingConvention.Cdecl, SetLastError = true)]
	[MethodImpl(MethodImplOptions.Unmanaged)]
	internal unsafe static extern uint WaitForSingleObject(void*, uint);

	// Token: 0x060004A0 RID: 1184 RVA: 0x0005AB16 File Offset: 0x00059F16
	[SuppressUnmanagedCodeSecurity]
	[DllImport("", CallingConvention = CallingConvention.Cdecl, SetLastError = true)]
	[MethodImpl(MethodImplOptions.Unmanaged)]
	internal unsafe static extern void* CreateEventW(_SECURITY_ATTRIBUTES*, int, int, ushort*);

	// Token: 0x060004A1 RID: 1185 RVA: 0x00058BE0 File Offset: 0x00057FE0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_EcDoAsyncConnect(void*, void**);

	// Token: 0x060004A2 RID: 1186 RVA: 0x00058C00 File Offset: 0x00058000
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_EcDoAsyncConnectEx(void*, void**);

	// Token: 0x060004A3 RID: 1187 RVA: 0x00058F70 File Offset: 0x00058370
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_EcDoRpcExt2(void**, uint*, byte*, uint, byte*, uint*, byte*, uint, byte*, uint*, uint*);

	// Token: 0x060004A4 RID: 1188 RVA: 0x00058ED0 File Offset: 0x000582D0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_EcDoRpc(void**, byte*, ushort*, ushort);

	// Token: 0x060004A5 RID: 1189 RVA: 0x00058FF0 File Offset: 0x000583F0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_EcDummyRpc(void*);

	// Token: 0x060004A6 RID: 1190 RVA: 0x00058EB0 File Offset: 0x000582B0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_EcDoDisconnect(void**);

	// Token: 0x060004A7 RID: 1191 RVA: 0x00058C80 File Offset: 0x00058080
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_EcDoConnect(void*, void**, byte*, uint, uint, uint, uint, uint, uint, uint, ushort, uint*, uint*, uint*, ushort*, byte**, byte**, ushort*, ushort*, ushort*, uint*);

	// Token: 0x060004A8 RID: 1192 RVA: 0x00058D80 File Offset: 0x00058180
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_EcDoConnectEx(void*, void**, byte*, uint, uint, uint, uint, uint, uint, uint, ushort, uint*, uint*, uint*, ushort*, byte**, byte**, ushort*, ushort*, ushort*, uint*, byte*, uint, byte*, uint*);

	// Token: 0x060004A9 RID: 1193 RVA: 0x00064388 File Offset: 0x00063788
	[SuppressUnmanagedCodeSecurity]
	[DllImport("", CallingConvention = CallingConvention.Cdecl, SetLastError = true)]
	[MethodImpl(MethodImplOptions.Unmanaged)]
	internal unsafe static extern int RpcBindingReset(void*);

	// Token: 0x060004AA RID: 1194 RVA: 0x000666C0 File Offset: 0x00065AC0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern void XpressDecodeClose(<unnamed-type-XpressDecodeStream>*, void*, method);

	// Token: 0x060004AB RID: 1195 RVA: 0x00066540 File Offset: 0x00065940
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int XpressDecode(<unnamed-type-XpressDecodeStream>*, void*, int, int, void*, int);

	// Token: 0x060004AC RID: 1196 RVA: 0x000666D0 File Offset: 0x00065AD0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern <unnamed-type-XpressDecodeStream>* XpressDecodeCreate(void*, method);

	// Token: 0x060004AD RID: 1197 RVA: 0x00064520 File Offset: 0x00063920
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern void XpressEncodeClose(<unnamed-type-XpressEncodeStream>*, void*, method);

	// Token: 0x060004AE RID: 1198 RVA: 0x000644A0 File Offset: 0x000638A0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int XpressEncode(<unnamed-type-XpressEncodeStream>*, void*, int, void*, int, method, void*, int);

	// Token: 0x060004AF RID: 1199 RVA: 0x00064550 File Offset: 0x00063950
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern <unnamed-type-XpressEncodeStream>* XpressEncodeCreate(int, void*, method, int);

	// Token: 0x060004B0 RID: 1200 RVA: 0x00061AE0 File Offset: 0x00060EE0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_DecryptUserToken(void*, uint, byte*, uint, sbyte**, uint*, byte**, uint*);

	// Token: 0x060004B1 RID: 1201 RVA: 0x00061BB0 File Offset: 0x00060FB0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_EncryptUserToken(void*, uint, sbyte*, sbyte*, byte**, uint*);

	// Token: 0x060004B2 RID: 1202 RVA: 0x00061CB0 File Offset: 0x000610B0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_IpFilterGetItems(void*, int, int, ExInt128, int, IPRangeData**, int*);

	// Token: 0x060004B3 RID: 1203 RVA: 0x00061D10 File Offset: 0x00061110
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_IpFilterRemove(void*, int, int, int*);

	// Token: 0x060004B4 RID: 1204 RVA: 0x00061C60 File Offset: 0x00061060
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_IpFilterAdd(void*, IPRangeData, int*);

	// Token: 0x060004B5 RID: 1205 RVA: 0x00061D40 File Offset: 0x00061140
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_EnqueueRequest(void*, int, int, int, byte*, int*, byte**);

	// Token: 0x060004B6 RID: 1206 RVA: 0x00061DA0 File Offset: 0x000611A0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_Cancel(void*, _GUID);

	// Token: 0x060004B7 RID: 1207 RVA: 0x00061DD0 File Offset: 0x000611D0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_Continue(void*, _GUID, int, int, byte**, int*, int*, int*);

	// Token: 0x060004B8 RID: 1208 RVA: 0x00061EC0 File Offset: 0x000612C0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_SearchExtensibleSchema(void*, ushort*, ushort*, int, byte*, int, _GUID*, int, byte**, int*, int*, int*);

	// Token: 0x060004B9 RID: 1209 RVA: 0x00061E40 File Offset: 0x00061240
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_Search(void*, ushort*, int, byte*, int, _GUID*, int, byte**, int*, int*, int*);

	// Token: 0x060004BA RID: 1210 RVA: 0x00064394 File Offset: 0x00063794
	[SuppressUnmanagedCodeSecurity]
	[DllImport("", CallingConvention = CallingConvention.Cdecl, SetLastError = true)]
	[MethodImpl(MethodImplOptions.Unmanaged)]
	internal static extern int RpcRevertToSelf();

	// Token: 0x060004BB RID: 1211 RVA: 0x0006438E File Offset: 0x0006378E
	[SuppressUnmanagedCodeSecurity]
	[DllImport("", CallingConvention = CallingConvention.Cdecl, SetLastError = true)]
	[MethodImpl(MethodImplOptions.Unmanaged)]
	internal unsafe static extern int RpcImpersonateClient(void*);

	// Token: 0x060004BC RID: 1212 RVA: 0x00062090 File Offset: 0x00061490
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_UpdateStatus(void*, __MIDL_IMailboxSearch_0001*, __MIDL_IMailboxSearch_0003*);

	// Token: 0x060004BD RID: 1213 RVA: 0x00061F90 File Offset: 0x00061390
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_AbortEx(void*, __MIDL_IMailboxSearch_0001*, ushort*, __MIDL_IMailboxSearch_0003*);

	// Token: 0x060004BE RID: 1214 RVA: 0x00062060 File Offset: 0x00061460
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_StartEx(void*, __MIDL_IMailboxSearch_0001*, ushort*, __MIDL_IMailboxSearch_0003*);

	// Token: 0x060004BF RID: 1215 RVA: 0x00061FF0 File Offset: 0x000613F0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_Remove(void*, __MIDL_IMailboxSearch_0001*, int, __MIDL_IMailboxSearch_0003*);

	// Token: 0x060004C0 RID: 1216 RVA: 0x00061F50 File Offset: 0x00061350
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_Abort(void*, __MIDL_IMailboxSearch_0001*, _GUID, __MIDL_IMailboxSearch_0003*);

	// Token: 0x060004C1 RID: 1217 RVA: 0x00061FC0 File Offset: 0x000613C0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_GetStatus(void*, __MIDL_IMailboxSearch_0001*, __MIDL_IMailboxSearch_0002*, __MIDL_IMailboxSearch_0003*);

	// Token: 0x060004C2 RID: 1218 RVA: 0x00062020 File Offset: 0x00061420
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_Start(void*, __MIDL_IMailboxSearch_0001*, _GUID, __MIDL_IMailboxSearch_0003*);

	// Token: 0x060004C3 RID: 1219 RVA: 0x000620C0 File Offset: 0x000614C0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern tagAddResubmitRequestStatus cli_AddConditionalResubmitRequest(void*, _GUID, long, long, ushort*, int, ushort**, int, byte*);

	// Token: 0x060004C4 RID: 1220 RVA: 0x00062250 File Offset: 0x00061650
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern void cli_RemoveResubmitRequest(void*, int, byte*, int*, byte**);

	// Token: 0x060004C5 RID: 1221 RVA: 0x00062290 File Offset: 0x00061690
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern void cli_SetResubmitRequest(void*, int, byte*, int*, byte**);

	// Token: 0x060004C6 RID: 1222 RVA: 0x000621D0 File Offset: 0x000615D0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern void cli_GetResubmitRequest(void*, int, byte*, int*, byte**);

	// Token: 0x060004C7 RID: 1223 RVA: 0x00062340 File Offset: 0x00061740
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern tagSubmissionStatus cli_SubmitMessage(void*, ushort*, ushort*, ushort*, int, byte*, int, byte*, int, byte*, int, byte*, int, int, byte*);

	// Token: 0x060004C8 RID: 1224 RVA: 0x000622D0 File Offset: 0x000616D0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern void cli_ShadowHeartBeat(void*, int, byte*, int*, byte**);

	// Token: 0x060004C9 RID: 1225 RVA: 0x000624C0 File Offset: 0x000618C0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern void cli_SubmitMessage3(void*, int, byte*, int*, byte**);

	// Token: 0x060004CA RID: 1226 RVA: 0x00062210 File Offset: 0x00061610
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_QueryDumpsterStats(void*, ushort*, long*, long*, int*);

	// Token: 0x060004CB RID: 1227 RVA: 0x00062140 File Offset: 0x00061540
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern tagAddResubmitRequestStatus cli_AddMdbResubmitRequest(void*, _GUID, _GUID, long, long, int, ushort**, int, byte*);

	// Token: 0x060004CC RID: 1228 RVA: 0x00062310 File Offset: 0x00061710
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern tagSubmissionStatus cli_SubmitDumpsterMessages(void*, ushort*, long, long);

	// Token: 0x060004CD RID: 1229 RVA: 0x00062400 File Offset: 0x00061800
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_SubmitMessage2(void*, ushort*, _GUID, _GUID, int, int, byte*, int, byte*, ushort*, int, byte*, _Mail_Info*);

	// Token: 0x060004CE RID: 1230 RVA: 0x0002C940 File Offset: 0x0002BD40
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal static extern void UnmanagedCrashMeNow();

	// Token: 0x060004CF RID: 1231 RVA: 0x0005AB1C File Offset: 0x00059F1C
	[SuppressUnmanagedCodeSecurity]
	[DllImport("", CallingConvention = CallingConvention.Cdecl, SetLastError = true)]
	[MethodImpl(MethodImplOptions.Unmanaged)]
	internal unsafe static extern void* CreateThread(_SECURITY_ATTRIBUTES*, ulong, method, void*, uint, uint*);

	// Token: 0x060004D0 RID: 1232 RVA: 0x00062500 File Offset: 0x00061900
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern void cli_UpdateMigrationRequest(void*, int, int, byte*, int*, byte**);

	// Token: 0x060004D1 RID: 1233 RVA: 0x00062540 File Offset: 0x00061940
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_ProxyAutodiscoverGetUserSettings(void*, int, int, byte*, int*, byte**);

	// Token: 0x060004D2 RID: 1234 RVA: 0x000626A0 File Offset: 0x00061AA0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_ProxyNspiRfrGetNewDSA(void*, int, int, byte*, int*, byte**);

	// Token: 0x060004D3 RID: 1235 RVA: 0x00062580 File Offset: 0x00061980
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_ProxyNspiGetGroupMembers(void*, int, int, byte*, int*, byte**, _SRowSet_r**);

	// Token: 0x060004D4 RID: 1236 RVA: 0x000626E0 File Offset: 0x00061AE0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_ProxyNspiSetRecipient(void*, int, int, byte*, int*, byte**);

	// Token: 0x060004D5 RID: 1237 RVA: 0x000625E0 File Offset: 0x000619E0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_ProxyNspiGetRecipient(void*, int, int, byte*, int*, byte**, _SRowSet_r**);

	// Token: 0x060004D6 RID: 1238 RVA: 0x00062640 File Offset: 0x00061A40
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_ProxyNspiQueryRows(void*, int, int, byte*, int*, byte**, _SRowSet_r**);

	// Token: 0x060004D7 RID: 1239 RVA: 0x00062720 File Offset: 0x00061B20
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern void cli_InvokeMigrationServiceEndPoint(void*, int, int, byte*, int*, byte**);

	// Token: 0x060004D8 RID: 1240 RVA: 0x00030DD0 File Offset: 0x000301D0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int FInitialize(CRequestQueue<int>*, int, int);

	// Token: 0x060004D9 RID: 1241 RVA: 0x00030F00 File Offset: 0x00030300
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern void Process(CRequestQueue<int>*, int*);

	// Token: 0x060004DA RID: 1242 RVA: 0x00030980 File Offset: 0x0002FD80
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern MockRequestQueue* {ctor}(MockRequestQueue*, method, method);

	// Token: 0x060004DB RID: 1243 RVA: 0x00062760 File Offset: 0x00061B60
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern void cli_GetNextNotification(_RPC_ASYNC_STATE*, void*, int, _GUID, ushort**);

	// Token: 0x060004DC RID: 1244 RVA: 0x000627E0 File Offset: 0x00061BE0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern void cli_Unsubscribe(_RPC_ASYNC_STATE*, void*, ushort*);

	// Token: 0x060004DD RID: 1245 RVA: 0x000627B0 File Offset: 0x00061BB0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern void cli_Subscribe(_RPC_ASYNC_STATE*, void*, ushort*);

	// Token: 0x060004DE RID: 1246 RVA: 0x00062AF0 File Offset: 0x00061EF0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern void cli_NspiGetProps(_RPC_ASYNC_STATE*, void*, uint, __MIDL_nspi_0002*, _SPropTagArray_r*, _SRow_r**);

	// Token: 0x060004DF RID: 1247 RVA: 0x000628A0 File Offset: 0x00061CA0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern void cli_NspiDNToEph(_RPC_ASYNC_STATE*, void*, uint, _StringsArray*, _SPropTagArray_r**);

	// Token: 0x060004E0 RID: 1248 RVA: 0x00062C50 File Offset: 0x00062050
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern void cli_NspiQueryRows(_RPC_ASYNC_STATE*, void*, uint, __MIDL_nspi_0002*, uint, uint*, uint, _SPropTagArray_r*, _SRowSet_r**);

	// Token: 0x060004E1 RID: 1249 RVA: 0x000629C0 File Offset: 0x00061DC0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern void cli_NspiGetMatches(_RPC_ASYNC_STATE*, void*, uint, __MIDL_nspi_0002*, _SPropTagArray_r*, uint, _SRestriction_r*, _MAPINAMEID_r*, uint, _SPropTagArray_r**, _SPropTagArray_r*, _SRowSet_r**);

	// Token: 0x060004E2 RID: 1250 RVA: 0x00062920 File Offset: 0x00061D20
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern void cli_NspiGetHierarchyInfo(_RPC_ASYNC_STATE*, void*, uint, __MIDL_nspi_0002*, uint*, _SRowSet_r**);

	// Token: 0x060004E3 RID: 1251 RVA: 0x00062E20 File Offset: 0x00062220
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern void cli_NspiUnbind(_RPC_ASYNC_STATE*, void**, uint);

	// Token: 0x060004E4 RID: 1252 RVA: 0x00062810 File Offset: 0x00061C10
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern void cli_NspiBind(_RPC_ASYNC_STATE*, void*, uint, __MIDL_nspi_0002*, __MIDL_nspi_0001*, void**);

	// Token: 0x060004E5 RID: 1253 RVA: 0x00043990 File Offset: 0x00042D90
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern void {dtor}(CRequestQueue<NSPI_REQUEST>*);

	// Token: 0x060004E6 RID: 1254 RVA: 0x00040C70 File Offset: 0x00040070
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern void {dtor}(CLazyInitRequestQueue<CNSPIRequestQueue,NSPI_REQUEST,10000,1>*);

	// Token: 0x060004E7 RID: 1255 RVA: 0x00062DC0 File Offset: 0x000621C0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern void cli_NspiSeekEntries(_RPC_ASYNC_STATE*, void*, uint, __MIDL_nspi_0002*, _SPropValue_r*, _SPropTagArray_r*, _SPropTagArray_r*, _SRowSet_r**);

	// Token: 0x060004E8 RID: 1256 RVA: 0x00062B90 File Offset: 0x00061F90
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern void cli_NspiModLinkAtt(_RPC_ASYNC_STATE*, void*, uint, uint, uint, _SBinaryArray_r*);

	// Token: 0x060004E9 RID: 1257 RVA: 0x00062C10 File Offset: 0x00062010
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern void cli_NspiQueryColumns(_RPC_ASYNC_STATE*, void*, uint, uint, _SPropTagArray_r**);

	// Token: 0x060004EA RID: 1258 RVA: 0x00062B30 File Offset: 0x00061F30
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern void cli_NspiGetTemplateInfo(_RPC_ASYNC_STATE*, void*, uint, uint, sbyte*, uint, uint, _SRow_r**);

	// Token: 0x060004EB RID: 1259 RVA: 0x00062BD0 File Offset: 0x00061FD0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern void cli_NspiModProps(_RPC_ASYNC_STATE*, void*, uint, __MIDL_nspi_0002*, _SPropTagArray_r*, _SRow_r*);

	// Token: 0x060004EC RID: 1260 RVA: 0x00062850 File Offset: 0x00061C50
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern void cli_NspiCompareDNTs(_RPC_ASYNC_STATE*, void*, uint, __MIDL_nspi_0002*, uint, uint, int*);

	// Token: 0x060004ED RID: 1261 RVA: 0x00062AB0 File Offset: 0x00061EB0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern void cli_NspiGetPropList(_RPC_ASYNC_STATE*, void*, uint, uint, uint, _SPropTagArray_r**);

	// Token: 0x060004EE RID: 1262 RVA: 0x00062D80 File Offset: 0x00062180
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern void cli_NspiResortRestriction(_RPC_ASYNC_STATE*, void*, uint, __MIDL_nspi_0002*, _SPropTagArray_r*, _SPropTagArray_r**);

	// Token: 0x060004EF RID: 1263 RVA: 0x00062E50 File Offset: 0x00062250
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern void cli_NspiUpdateStat(_RPC_ASYNC_STATE*, void*, uint, __MIDL_nspi_0002*, int*);

	// Token: 0x060004F0 RID: 1264 RVA: 0x00062D20 File Offset: 0x00062120
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern void cli_NspiResolveNamesW(_RPC_ASYNC_STATE*, void*, uint, __MIDL_nspi_0002*, _SPropTagArray_r*, _WStringsArray*, _SPropTagArray_r**, _SRowSet_r**);

	// Token: 0x060004F1 RID: 1265 RVA: 0x00062CC0 File Offset: 0x000620C0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern void cli_NspiResolveNames(_RPC_ASYNC_STATE*, void*, uint, __MIDL_nspi_0002*, _SPropTagArray_r*, _StringsArray*, _SPropTagArray_r**, _SRowSet_r**);

	// Token: 0x060004F2 RID: 1266 RVA: 0x00062F10 File Offset: 0x00062310
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_GetTenantActiveCryptoMode(void*, int, int, byte*, int*, byte**);

	// Token: 0x060004F3 RID: 1267 RVA: 0x00062E90 File Offset: 0x00062290
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_AcquireTenantLicenses(void*, int, int, byte*, int*, byte**);

	// Token: 0x060004F4 RID: 1268 RVA: 0x00062ED0 File Offset: 0x000622D0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_AcquireUseLicenses(void*, int, int, byte*, int*, byte**);

	// Token: 0x060004F5 RID: 1269 RVA: 0x00046220 File Offset: 0x00045620
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int EcPackData<char\u0020*>(byte*, int, int*, sbyte**);

	// Token: 0x060004F6 RID: 1270 RVA: 0x000462D0 File Offset: 0x000456D0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int EcUnpackData<char\u0020*>(byte*, int, int*, sbyte**);

	// Token: 0x060004F7 RID: 1271 RVA: 0x00048080 File Offset: 0x00047480
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int EcUnpackSingleRpcBlock<2,struct\u0020tagRPC_POOL_CONNECT_RESPONSE_HEADER>(byte*, int, int*, tagRPC_POOL_CONNECT_RESPONSE_HEADER*);

	// Token: 0x060004F8 RID: 1272 RVA: 0x00048000 File Offset: 0x00047400
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int EcUnpackData<struct\u0020tagRPC_BLOCK_HEADER>(byte*, int, int*, tagRPC_BLOCK_HEADER*);

	// Token: 0x060004F9 RID: 1273 RVA: 0x00048030 File Offset: 0x00047430
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int EcUnpackData<struct\u0020tagRPC_POOL_CREATE_SESSION_RESPONSE_HEADER>(byte*, int, int*, tagRPC_POOL_CREATE_SESSION_RESPONSE_HEADER*);

	// Token: 0x060004FA RID: 1274 RVA: 0x00048130 File Offset: 0x00047530
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int EcUnpackData<struct\u0020tagRPC_POOL_WAIT_FOR_NOTIFICATIONS_ASYNC_RESPONSE_HEADER>(byte*, int, int*, tagRPC_POOL_WAIT_FOR_NOTIFICATIONS_ASYNC_RESPONSE_HEADER*);

	// Token: 0x060004FB RID: 1275 RVA: 0x00048160 File Offset: 0x00047560
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int EcUnpackData<unsigned\u0020long>(byte*, int, int*, uint*);

	// Token: 0x060004FC RID: 1276 RVA: 0x00048190 File Offset: 0x00047590
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int EcPackData<struct\u0020tagRPC_BLOCK_HEADER>(byte*, int, int*, tagRPC_BLOCK_HEADER*);

	// Token: 0x060004FD RID: 1277 RVA: 0x000481C0 File Offset: 0x000475C0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int EcPackData<struct\u0020tagRPC_POOL_CREATE_SESSION_REQUEST_HEADER>(byte*, int, int*, tagRPC_POOL_CREATE_SESSION_REQUEST_HEADER*);

	// Token: 0x060004FE RID: 1278 RVA: 0x00063500 File Offset: 0x00062900
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern void cli_EcPoolSessionDoRpc(_RPC_ASYNC_STATE*, void*, uint, uint*, uint, byte*, uint*, byte**, uint, byte*, uint*, byte**);

	// Token: 0x060004FF RID: 1279 RVA: 0x00063460 File Offset: 0x00062860
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern void cli_EcPoolCreateSession(_RPC_ASYNC_STATE*, void*, uint, byte*, uint*, byte**, uint, byte*, uint*, byte**);

	// Token: 0x06000500 RID: 1280 RVA: 0x000633E0 File Offset: 0x000627E0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern void cli_EcPoolConnect(_RPC_ASYNC_STATE*, void*, void**, uint, byte*, uint*, byte**, uint, byte*, uint*, byte**);

	// Token: 0x06000501 RID: 1281 RVA: 0x000635C0 File Offset: 0x000629C0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern void cli_EcPoolWaitForNotificationsAsyncEx(_RPC_ASYNC_STATE*, void*, uint*, byte**);

	// Token: 0x06000502 RID: 1282 RVA: 0x000633B0 File Offset: 0x000627B0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern void cli_EcPoolCloseSession(_RPC_ASYNC_STATE*, void*, uint);

	// Token: 0x06000503 RID: 1283 RVA: 0x0004A930 File Offset: 0x00049D30
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int EcPackData<struct\u0020tagRPC_POOL_CONNECT_RESPONSE_HEADER>(byte*, int, int*, tagRPC_POOL_CONNECT_RESPONSE_HEADER*);

	// Token: 0x06000504 RID: 1284 RVA: 0x0004A970 File Offset: 0x00049D70
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int EcPackData<struct\u0020tagRPC_POOL_CREATE_SESSION_RESPONSE_HEADER>(byte*, int, int*, tagRPC_POOL_CREATE_SESSION_RESPONSE_HEADER*);

	// Token: 0x06000505 RID: 1285 RVA: 0x0004A9C0 File Offset: 0x00049DC0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int EcPackData<struct\u0020tagRPC_POOL_WAIT_FOR_NOTIFICATIONS_ASYNC_RESPONSE_HEADER>(byte*, int, int*, tagRPC_POOL_WAIT_FOR_NOTIFICATIONS_ASYNC_RESPONSE_HEADER*);

	// Token: 0x06000506 RID: 1286 RVA: 0x0004A9F0 File Offset: 0x00049DF0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int EcPackData<unsigned\u0020long>(byte*, int, int*, uint*);

	// Token: 0x06000507 RID: 1287 RVA: 0x0004AA70 File Offset: 0x00049E70
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int EcUnpackSingleRpcBlock<1,struct\u0020tagRPC_POOL_CONNECT_REQUEST_HEADER>(byte*, int, int*, tagRPC_POOL_CONNECT_REQUEST_HEADER*);

	// Token: 0x06000508 RID: 1288 RVA: 0x0004AA20 File Offset: 0x00049E20
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int EcUnpackData<struct\u0020tagRPC_POOL_CREATE_SESSION_REQUEST_HEADER>(byte*, int, int*, tagRPC_POOL_CREATE_SESSION_REQUEST_HEADER*);

	// Token: 0x06000509 RID: 1289 RVA: 0x000636F0 File Offset: 0x00062AF0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern void cli_RunProcessCommand(void*, int, byte*, int*, byte**);

	// Token: 0x0600050A RID: 1290 RVA: 0x0004B1C0 File Offset: 0x0004A5C0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal static extern void SetRunProcessCommandFunction(method);

	// Token: 0x0600050B RID: 1291 RVA: 0x000643AC File Offset: 0x000637AC
	[SuppressUnmanagedCodeSecurity]
	[DllImport("", CallingConvention = CallingConvention.Cdecl, SetLastError = true)]
	[MethodImpl(MethodImplOptions.Unmanaged)]
	internal unsafe static extern int RpcMgmtEpEltInqDone(void***);

	// Token: 0x0600050C RID: 1292 RVA: 0x0005C1B0 File Offset: 0x0005B5B0
	[SuppressUnmanagedCodeSecurity]
	[DllImport("", CallingConvention = CallingConvention.Cdecl, SetLastError = true)]
	[MethodImpl(MethodImplOptions.Unmanaged)]
	internal unsafe static extern int RpcStringFreeW(ushort**);

	// Token: 0x0600050D RID: 1293 RVA: 0x000643A6 File Offset: 0x000637A6
	[SuppressUnmanagedCodeSecurity]
	[DllImport("", CallingConvention = CallingConvention.Cdecl, SetLastError = true)]
	[MethodImpl(MethodImplOptions.Unmanaged)]
	internal unsafe static extern int RpcMgmtEpEltInqNextW(void**, _RPC_IF_ID*, void**, _GUID*, ushort**);

	// Token: 0x0600050E RID: 1294 RVA: 0x000643A0 File Offset: 0x000637A0
	[SuppressUnmanagedCodeSecurity]
	[DllImport("", CallingConvention = CallingConvention.Cdecl, SetLastError = true)]
	[MethodImpl(MethodImplOptions.Unmanaged)]
	internal unsafe static extern int RpcMgmtEpEltInqBegin(void*, uint, _RPC_IF_ID*, uint, _GUID*, void***);

	// Token: 0x0600050F RID: 1295 RVA: 0x0006439A File Offset: 0x0006379A
	[SuppressUnmanagedCodeSecurity]
	[DllImport("", CallingConvention = CallingConvention.Cdecl, SetLastError = true)]
	[MethodImpl(MethodImplOptions.Unmanaged)]
	internal unsafe static extern int RpcObjectSetType(_GUID*, _GUID*);

	// Token: 0x06000510 RID: 1296 RVA: 0x00063B40 File Offset: 0x00062F40
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_SetMessage(void*, int, byte*, int, byte*, int, byte*, int);

	// Token: 0x06000511 RID: 1297 RVA: 0x00063850 File Offset: 0x00062C50
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_GetPropertyBagBasedQueueViewerObjectPageCustomSerialization(void*, tagObjectType, int, byte*, int*, byte**, int*, int*);

	// Token: 0x06000512 RID: 1298 RVA: 0x000637F0 File Offset: 0x00062BF0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_GetPropertyBagBasedQueueViewerObjectPage(void*, tagObjectType, int, byte*, int*, byte**, int*, int*);

	// Token: 0x06000513 RID: 1299 RVA: 0x00063B00 File Offset: 0x00062F00
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_RetryQueue(void*, int, byte*, int, byte*, int);

	// Token: 0x06000514 RID: 1300 RVA: 0x00063BE0 File Offset: 0x00062FE0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_UnfreezeQueue(void*, int, byte*, int, byte*);

	// Token: 0x06000515 RID: 1301 RVA: 0x000637B0 File Offset: 0x00062BB0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_FreezeQueue(void*, int, byte*, int, byte*);

	// Token: 0x06000516 RID: 1302 RVA: 0x00063AD0 File Offset: 0x00062ED0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_RedirectMessage(void*, int, byte*);

	// Token: 0x06000517 RID: 1303 RVA: 0x00063730 File Offset: 0x00062B30
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_DeleteMessage(void*, int, byte*, int, byte*, int);

	// Token: 0x06000518 RID: 1304 RVA: 0x00063BA0 File Offset: 0x00062FA0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_UnfreezeMessage(void*, int, byte*, int, byte*);

	// Token: 0x06000519 RID: 1305 RVA: 0x00063770 File Offset: 0x00062B70
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_FreezeMessage(void*, int, byte*, int, byte*);

	// Token: 0x0600051A RID: 1306 RVA: 0x00063A70 File Offset: 0x00062E70
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_ReadMessageBody(void*, int, byte*, int, int, int*, byte**);

	// Token: 0x0600051B RID: 1307 RVA: 0x00063980 File Offset: 0x00062D80
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_GetQueueViewerObjectPageWithPropertyBag(void*, tagObjectType, int, byte*, int, byte*, int, int, int, byte*, int, int, int, int, byte*, int*, byte**, int*, int*);

	// Token: 0x0600051C RID: 1308 RVA: 0x000638B0 File Offset: 0x00062CB0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_GetQueueViewerObjectPage(void*, tagObjectType, int, byte*, int, byte*, int, int, int, byte*, int, int, int, int*, byte**, int*, int*);

	// Token: 0x0600051D RID: 1309 RVA: 0x00063C20 File Offset: 0x00063020
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern void cli_RfrGetFQDNFromLegacyDN(_RPC_ASYNC_STATE*, void*, uint, uint, byte*, byte**);

	// Token: 0x0600051E RID: 1310 RVA: 0x00063C60 File Offset: 0x00063060
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern void cli_RfrGetNewDSA(_RPC_ASYNC_STATE*, void*, uint, byte*, byte**, byte**);

	// Token: 0x0600051F RID: 1311 RVA: 0x0004E7F0 File Offset: 0x0004DBF0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern void {dtor}(CRequestQueue<tagRFRI_REQUEST>*);

	// Token: 0x06000520 RID: 1312 RVA: 0x0004E0D0 File Offset: 0x0004D4D0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern void {dtor}(CLazyInitRequestQueue<CRFRIRequestQueue,tagRFRI_REQUEST,10000,1>*);

	// Token: 0x06000521 RID: 1313 RVA: 0x0004F9B0 File Offset: 0x0004EDB0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern void* X_InterlockedCompareExchangePointer(void**, void*, void*);

	// Token: 0x06000522 RID: 1314 RVA: 0x000642E6 File Offset: 0x000636E6
	[SuppressUnmanagedCodeSecurity]
	[DllImport("", CallingConvention = CallingConvention.Cdecl, SetLastError = true)]
	[MethodImpl(MethodImplOptions.Unmanaged)]
	internal unsafe static extern _TP_WAIT* CreateThreadpoolWait(method, void*, _TP_CALLBACK_ENVIRON_V1*);

	// Token: 0x06000523 RID: 1315 RVA: 0x000643D6 File Offset: 0x000637D6
	[SuppressUnmanagedCodeSecurity]
	[DllImport("", CallingConvention = CallingConvention.Cdecl, SetLastError = true)]
	[MethodImpl(MethodImplOptions.Unmanaged)]
	internal unsafe static extern int RpcBindingServerFromClient(void*, void**);

	// Token: 0x06000524 RID: 1316 RVA: 0x0005C1DA File Offset: 0x0005B5DA
	[SuppressUnmanagedCodeSecurity]
	[DllImport("", CallingConvention = CallingConvention.Cdecl, SetLastError = true)]
	[MethodImpl(MethodImplOptions.Unmanaged)]
	internal unsafe static extern int AuthzFreeContext(AUTHZ_CLIENT_CONTEXT_HANDLE__*);

	// Token: 0x06000525 RID: 1317 RVA: 0x0005C1D4 File Offset: 0x0005B5D4
	[SuppressUnmanagedCodeSecurity]
	[DllImport("", CallingConvention = CallingConvention.Cdecl, SetLastError = true)]
	[MethodImpl(MethodImplOptions.Unmanaged)]
	internal unsafe static extern int AuthzAccessCheck(uint, AUTHZ_CLIENT_CONTEXT_HANDLE__*, _AUTHZ_ACCESS_REQUEST*, AUTHZ_AUDIT_EVENT_HANDLE__*, void*, void**, uint, _AUTHZ_ACCESS_REPLY*, AUTHZ_ACCESS_CHECK_RESULTS_HANDLE__**);

	// Token: 0x06000526 RID: 1318 RVA: 0x0005C19E File Offset: 0x0005B59E
	[SuppressUnmanagedCodeSecurity]
	[DllImport("", CallingConvention = CallingConvention.Cdecl, SetLastError = true)]
	[MethodImpl(MethodImplOptions.Unmanaged)]
	internal unsafe static extern int RpcGetAuthorizationContextForClient(void*, int, void*, _LARGE_INTEGER*, _LUID, uint, void*, void**);

	// Token: 0x06000527 RID: 1319 RVA: 0x0005C1B6 File Offset: 0x0005B5B6
	[SuppressUnmanagedCodeSecurity]
	[DllImport("", CallingConvention = CallingConvention.Cdecl, SetLastError = true)]
	[MethodImpl(MethodImplOptions.Unmanaged)]
	internal unsafe static extern int RpcServerInqCallAttributesW(void*, void*);

	// Token: 0x06000528 RID: 1320 RVA: 0x0006440C File Offset: 0x0006380C
	[SuppressUnmanagedCodeSecurity]
	[DllImport("", CallingConvention = CallingConvention.Cdecl, SetLastError = true)]
	[MethodImpl(MethodImplOptions.Unmanaged)]
	internal unsafe static extern int RpcServerRegisterIfEx(void*, _GUID*, void*, uint, uint, method);

	// Token: 0x06000529 RID: 1321 RVA: 0x00064406 File Offset: 0x00063806
	[SuppressUnmanagedCodeSecurity]
	[DllImport("", CallingConvention = CallingConvention.Cdecl, SetLastError = true)]
	[MethodImpl(MethodImplOptions.Unmanaged)]
	internal static extern int RpcMgmtWaitServerListen();

	// Token: 0x0600052A RID: 1322 RVA: 0x00064400 File Offset: 0x00063800
	[SuppressUnmanagedCodeSecurity]
	[DllImport("", CallingConvention = CallingConvention.Cdecl, SetLastError = true)]
	[MethodImpl(MethodImplOptions.Unmanaged)]
	internal unsafe static extern int RpcMgmtStopServerListening(void*);

	// Token: 0x0600052B RID: 1323 RVA: 0x00064424 File Offset: 0x00063824
	[SuppressUnmanagedCodeSecurity]
	[DllImport("", CallingConvention = CallingConvention.Cdecl, SetLastError = true)]
	[MethodImpl(MethodImplOptions.Unmanaged)]
	internal static extern int RpcServerListen(uint, uint, uint);

	// Token: 0x0600052C RID: 1324 RVA: 0x000643EE File Offset: 0x000637EE
	[SuppressUnmanagedCodeSecurity]
	[DllImport("", CallingConvention = CallingConvention.Cdecl, SetLastError = true)]
	[MethodImpl(MethodImplOptions.Unmanaged)]
	internal unsafe static extern int RpcServerUseProtseqEpW(ushort*, uint, ushort*, void*);

	// Token: 0x0600052D RID: 1325 RVA: 0x00064418 File Offset: 0x00063818
	[SuppressUnmanagedCodeSecurity]
	[DllImport("", CallingConvention = CallingConvention.Cdecl, SetLastError = true)]
	[MethodImpl(MethodImplOptions.Unmanaged)]
	internal unsafe static extern int RpcBindingVectorFree(_RPC_BINDING_VECTOR**);

	// Token: 0x0600052E RID: 1326 RVA: 0x000643FA File Offset: 0x000637FA
	[SuppressUnmanagedCodeSecurity]
	[DllImport("", CallingConvention = CallingConvention.Cdecl, SetLastError = true)]
	[MethodImpl(MethodImplOptions.Unmanaged)]
	internal unsafe static extern int RpcServerRegisterAuthInfoW(ushort*, uint, method, void*);

	// Token: 0x0600052F RID: 1327 RVA: 0x00064412 File Offset: 0x00063812
	[SuppressUnmanagedCodeSecurity]
	[DllImport("", CallingConvention = CallingConvention.Cdecl, SetLastError = true)]
	[MethodImpl(MethodImplOptions.Unmanaged)]
	internal unsafe static extern int RpcServerInqBindings(_RPC_BINDING_VECTOR**);

	// Token: 0x06000530 RID: 1328 RVA: 0x000643F4 File Offset: 0x000637F4
	[SuppressUnmanagedCodeSecurity]
	[DllImport("", CallingConvention = CallingConvention.Cdecl, SetLastError = true)]
	[MethodImpl(MethodImplOptions.Unmanaged)]
	internal unsafe static extern int RpcServerUseProtseqW(ushort*, uint, void*);

	// Token: 0x06000531 RID: 1329 RVA: 0x0005AB2E File Offset: 0x00059F2E
	[SuppressUnmanagedCodeSecurity]
	[DllImport("", CallingConvention = CallingConvention.Cdecl, SetLastError = true)]
	[MethodImpl(MethodImplOptions.Unmanaged)]
	internal unsafe static extern int lstrcmpiW(ushort*, ushort*);

	// Token: 0x06000532 RID: 1330 RVA: 0x0005C1AA File Offset: 0x0005B5AA
	[SuppressUnmanagedCodeSecurity]
	[DllImport("", CallingConvention = CallingConvention.Cdecl, SetLastError = true)]
	[MethodImpl(MethodImplOptions.Unmanaged)]
	internal unsafe static extern int RpcStringBindingParseW(ushort*, ushort**, ushort**, ushort**, ushort**, ushort**);

	// Token: 0x06000533 RID: 1331 RVA: 0x000643D0 File Offset: 0x000637D0
	[SuppressUnmanagedCodeSecurity]
	[DllImport("", CallingConvention = CallingConvention.Cdecl, SetLastError = true)]
	[MethodImpl(MethodImplOptions.Unmanaged)]
	internal unsafe static extern int RpcErrorEndEnumeration(tagRPC_ERROR_ENUM_HANDLE*);

	// Token: 0x06000534 RID: 1332 RVA: 0x000643CA File Offset: 0x000637CA
	[SuppressUnmanagedCodeSecurity]
	[DllImport("", CallingConvention = CallingConvention.Cdecl, SetLastError = true)]
	[MethodImpl(MethodImplOptions.Unmanaged)]
	internal unsafe static extern int RpcErrorGetNextRecord(tagRPC_ERROR_ENUM_HANDLE*, int, tagRPC_EXTENDED_ERROR_INFO*);

	// Token: 0x06000535 RID: 1333 RVA: 0x000643C4 File Offset: 0x000637C4
	[SuppressUnmanagedCodeSecurity]
	[DllImport("", CallingConvention = CallingConvention.Cdecl, SetLastError = true)]
	[MethodImpl(MethodImplOptions.Unmanaged)]
	internal unsafe static extern int RpcErrorStartEnumeration(tagRPC_ERROR_ENUM_HANDLE*);

	// Token: 0x06000536 RID: 1334 RVA: 0x000643BE File Offset: 0x000637BE
	[SuppressUnmanagedCodeSecurity]
	[DllImport("", CallingConvention = CallingConvention.Cdecl, SetLastError = true)]
	[MethodImpl(MethodImplOptions.Unmanaged)]
	internal unsafe static extern int RpcMgmtStatsVectorFree(RPC_STATS_VECTOR**);

	// Token: 0x06000537 RID: 1335 RVA: 0x000643B8 File Offset: 0x000637B8
	[SuppressUnmanagedCodeSecurity]
	[DllImport("", CallingConvention = CallingConvention.Cdecl, SetLastError = true)]
	[MethodImpl(MethodImplOptions.Unmanaged)]
	internal unsafe static extern int RpcMgmtInqStats(void*, RPC_STATS_VECTOR**);

	// Token: 0x06000538 RID: 1336 RVA: 0x0005C1A4 File Offset: 0x0005B5A4
	[SuppressUnmanagedCodeSecurity]
	[DllImport("", CallingConvention = CallingConvention.Cdecl, SetLastError = true)]
	[MethodImpl(MethodImplOptions.Unmanaged)]
	internal unsafe static extern int RpcBindingToStringBindingW(void*, ushort**);

	// Token: 0x06000539 RID: 1337 RVA: 0x000643B2 File Offset: 0x000637B2
	[SuppressUnmanagedCodeSecurity]
	[DllImport("", CallingConvention = CallingConvention.Cdecl, SetLastError = true)]
	[MethodImpl(MethodImplOptions.Unmanaged)]
	internal unsafe static extern int RpcBindingFree(void**);

	// Token: 0x0600053A RID: 1338 RVA: 0x000643E8 File Offset: 0x000637E8
	[SuppressUnmanagedCodeSecurity]
	[DllImport("", CallingConvention = CallingConvention.Cdecl, SetLastError = true)]
	[MethodImpl(MethodImplOptions.Unmanaged)]
	internal unsafe static extern int RpcBindingSetObject(void*, _GUID*);

	// Token: 0x0600053B RID: 1339 RVA: 0x00066B56 File Offset: 0x00065F56
	[SuppressUnmanagedCodeSecurity]
	[DllImport("", CallingConvention = CallingConvention.Cdecl, SetLastError = true)]
	[MethodImpl(MethodImplOptions.Unmanaged)]
	internal unsafe static extern int CertCloseStore(void*, uint);

	// Token: 0x0600053C RID: 1340 RVA: 0x00066B50 File Offset: 0x00065F50
	[SuppressUnmanagedCodeSecurity]
	[DllImport("", CallingConvention = CallingConvention.Cdecl, SetLastError = true)]
	[MethodImpl(MethodImplOptions.Unmanaged)]
	internal unsafe static extern _CERT_CONTEXT* CertFindCertificateInStore(void*, uint, uint, uint, void*, _CERT_CONTEXT*);

	// Token: 0x0600053D RID: 1341 RVA: 0x00066B4A File Offset: 0x00065F4A
	[SuppressUnmanagedCodeSecurity]
	[DllImport("", CallingConvention = CallingConvention.Cdecl, SetLastError = true)]
	[MethodImpl(MethodImplOptions.Unmanaged)]
	internal unsafe static extern void* CertOpenSystemStoreW(ulong, ushort*);

	// Token: 0x0600053E RID: 1342 RVA: 0x00064310 File Offset: 0x00063710
	[SuppressUnmanagedCodeSecurity]
	[DllImport("", CallingConvention = CallingConvention.Cdecl, SetLastError = true)]
	[MethodImpl(MethodImplOptions.Unmanaged)]
	internal static extern int CryptReleaseContext(ulong, uint);

	// Token: 0x0600053F RID: 1343 RVA: 0x0006430A File Offset: 0x0006370A
	[SuppressUnmanagedCodeSecurity]
	[DllImport("", CallingConvention = CallingConvention.Cdecl, SetLastError = true)]
	[MethodImpl(MethodImplOptions.Unmanaged)]
	internal static extern int CryptDestroyHash(ulong);

	// Token: 0x06000540 RID: 1344 RVA: 0x00064304 File Offset: 0x00063704
	[SuppressUnmanagedCodeSecurity]
	[DllImport("", CallingConvention = CallingConvention.Cdecl, SetLastError = true)]
	[MethodImpl(MethodImplOptions.Unmanaged)]
	internal unsafe static extern int CredMarshalCredentialW(_CRED_MARSHAL_TYPE, void*, ushort**);

	// Token: 0x06000541 RID: 1345 RVA: 0x000642FE File Offset: 0x000636FE
	[SuppressUnmanagedCodeSecurity]
	[DllImport("", CallingConvention = CallingConvention.Cdecl, SetLastError = true)]
	[MethodImpl(MethodImplOptions.Unmanaged)]
	internal unsafe static extern int CryptGetHashParam(ulong, uint, byte*, uint*, uint);

	// Token: 0x06000542 RID: 1346 RVA: 0x000642F8 File Offset: 0x000636F8
	[SuppressUnmanagedCodeSecurity]
	[DllImport("", CallingConvention = CallingConvention.Cdecl, SetLastError = true)]
	[MethodImpl(MethodImplOptions.Unmanaged)]
	internal unsafe static extern int CryptHashData(ulong, byte*, uint, uint);

	// Token: 0x06000543 RID: 1347 RVA: 0x000642F2 File Offset: 0x000636F2
	[SuppressUnmanagedCodeSecurity]
	[DllImport("", CallingConvention = CallingConvention.Cdecl, SetLastError = true)]
	[MethodImpl(MethodImplOptions.Unmanaged)]
	internal unsafe static extern int CryptCreateHash(ulong, uint, ulong, uint, ulong*);

	// Token: 0x06000544 RID: 1348 RVA: 0x000642EC File Offset: 0x000636EC
	[SuppressUnmanagedCodeSecurity]
	[DllImport("", CallingConvention = CallingConvention.Cdecl, SetLastError = true)]
	[MethodImpl(MethodImplOptions.Unmanaged)]
	internal unsafe static extern int CryptAcquireContextW(ulong*, ushort*, ushort*, uint, uint);

	// Token: 0x06000545 RID: 1349 RVA: 0x000643E2 File Offset: 0x000637E2
	[SuppressUnmanagedCodeSecurity]
	[DllImport("", CallingConvention = CallingConvention.Cdecl, SetLastError = true)]
	[MethodImpl(MethodImplOptions.Unmanaged)]
	internal unsafe static extern int RpcBindingFromStringBindingW(ushort*, void**);

	// Token: 0x06000546 RID: 1350 RVA: 0x000643DC File Offset: 0x000637DC
	[SuppressUnmanagedCodeSecurity]
	[DllImport("", CallingConvention = CallingConvention.Cdecl, SetLastError = true)]
	[MethodImpl(MethodImplOptions.Unmanaged)]
	internal unsafe static extern int RpcStringBindingComposeW(ushort*, ushort*, ushort*, ushort*, ushort*, ushort**);

	// Token: 0x06000547 RID: 1351 RVA: 0x0006441E File Offset: 0x0006381E
	[SuppressUnmanagedCodeSecurity]
	[DllImport("", CallingConvention = CallingConvention.Cdecl, SetLastError = true)]
	[MethodImpl(MethodImplOptions.Unmanaged)]
	internal unsafe static extern int UuidToStringW(_GUID*, ushort**);

	// Token: 0x06000548 RID: 1352 RVA: 0x00064316 File Offset: 0x00063716
	[SuppressUnmanagedCodeSecurity]
	[DllImport("", CallingConvention = CallingConvention.Cdecl, SetLastError = true)]
	[MethodImpl(MethodImplOptions.Unmanaged)]
	internal unsafe static extern void CredFree(void*);

	// Token: 0x06000549 RID: 1353 RVA: 0x00066B5C File Offset: 0x00065F5C
	[SuppressUnmanagedCodeSecurity]
	[DllImport("", CallingConvention = CallingConvention.Cdecl, SetLastError = true)]
	[MethodImpl(MethodImplOptions.Unmanaged)]
	internal unsafe static extern int CertFreeCertificateContext(_CERT_CONTEXT*);

	// Token: 0x0600054A RID: 1354 RVA: 0x00064436 File Offset: 0x00063836
	[SuppressUnmanagedCodeSecurity]
	[DllImport("", CallingConvention = CallingConvention.Cdecl, SetLastError = true)]
	[MethodImpl(MethodImplOptions.Unmanaged)]
	internal unsafe static extern int RpcBindingSetAuthInfoExW(void*, ushort*, uint, uint, void*, uint, _RPC_SECURITY_QOS*);

	// Token: 0x0600054B RID: 1355 RVA: 0x00064430 File Offset: 0x00063830
	[SuppressUnmanagedCodeSecurity]
	[DllImport("", CallingConvention = CallingConvention.Cdecl, SetLastError = true)]
	[MethodImpl(MethodImplOptions.Unmanaged)]
	internal unsafe static extern int RpcEpResolveBinding(void*, void*);

	// Token: 0x0600054C RID: 1356 RVA: 0x0006442A File Offset: 0x0006382A
	[SuppressUnmanagedCodeSecurity]
	[DllImport("", CallingConvention = CallingConvention.Cdecl, SetLastError = true)]
	[MethodImpl(MethodImplOptions.Unmanaged)]
	internal unsafe static extern int RpcMgmtSetComTimeout(void*, uint);

	// Token: 0x0600054D RID: 1357 RVA: 0x00054B60 File Offset: 0x00053F60
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern void {dtor}(CRequestQueue<tagREGISTRATION_REQUEST>*);

	// Token: 0x0600054E RID: 1358 RVA: 0x000542C0 File Offset: 0x000536C0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern void {dtor}(CLazyInitRequestQueue<CRegistrationRequestQueue,tagREGISTRATION_REQUEST,10000,1>*);

	// Token: 0x0600054F RID: 1359 RVA: 0x00063CA0 File Offset: 0x000630A0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_RpcHttpConnectionRegistration_Clear(void*);

	// Token: 0x06000550 RID: 1360 RVA: 0x00063D30 File Offset: 0x00063130
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_RpcHttpConnectionRegistration_Unregister(void*, _GUID*, _GUID*);

	// Token: 0x06000551 RID: 1361 RVA: 0x00063CC0 File Offset: 0x000630C0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_RpcHttpConnectionRegistration_Register(void*, _GUID*, byte*, byte*, byte*, byte*, _GUID*, byte**, byte**);

	// Token: 0x06000552 RID: 1362 RVA: 0x00063DF0 File Offset: 0x000631F0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_ValidateLdapFilter(void*, ushort*);

	// Token: 0x06000553 RID: 1363 RVA: 0x00063D60 File Offset: 0x00063160
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_FilterAttributes(void*, tagVARIANT*, tagVARIANT**);

	// Token: 0x06000554 RID: 1364 RVA: 0x0006431C File Offset: 0x0006371C
	[SuppressUnmanagedCodeSecurity]
	[DllImport("", CallingConvention = CallingConvention.Cdecl, SetLastError = true)]
	[MethodImpl(MethodImplOptions.Unmanaged)]
	internal unsafe static extern int VariantClear(tagVARIANT*);

	// Token: 0x06000555 RID: 1365 RVA: 0x00063D90 File Offset: 0x00063190
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_ProcessObject(void*, ushort*, tagVARIANT*, tagVARIANT*, tagVARIANT**);

	// Token: 0x06000556 RID: 1366 RVA: 0x00063DD0 File Offset: 0x000631D0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_ResetConfiguration(void*, ushort*);

	// Token: 0x06000557 RID: 1367 RVA: 0x0005C198 File Offset: 0x0005B598
	[SuppressUnmanagedCodeSecurity]
	[DllImport("", CallingConvention = CallingConvention.Cdecl, SetLastError = true)]
	[MethodImpl(MethodImplOptions.Unmanaged)]
	internal unsafe static extern int RpcAsyncAbortCall(_RPC_ASYNC_STATE*, uint);

	// Token: 0x06000558 RID: 1368 RVA: 0x00063E10 File Offset: 0x00063210
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern void cli_RebuildIndexSystem(void*, _GUID);

	// Token: 0x06000559 RID: 1369 RVA: 0x00063F00 File Offset: 0x00063300
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern void cli_ResumeIndexing(void*, _GUID);

	// Token: 0x0600055A RID: 1370 RVA: 0x00063F30 File Offset: 0x00063330
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern void cli_UpdateIndexSystems(void*);

	// Token: 0x0600055B RID: 1371 RVA: 0x00063E40 File Offset: 0x00063240
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern void cli_RecordDocumentFailure(void*, _GUID, _GUID, long, ushort*);

	// Token: 0x0600055C RID: 1372 RVA: 0x00063EA0 File Offset: 0x000632A0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern void cli_RecordDocumentProcessing(void*, _GUID, _GUID, _GUID, long);

	// Token: 0x0600055D RID: 1373 RVA: 0x00063F50 File Offset: 0x00063350
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_Delete(void*, _GUID, ushort*, int*, byte**);

	// Token: 0x0600055E RID: 1374 RVA: 0x00063FF0 File Offset: 0x000633F0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_Insert(void*, _GUID, ushort*, int, byte*, long, int*, byte**);

	// Token: 0x0600055F RID: 1375 RVA: 0x00063FA0 File Offset: 0x000633A0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_Get(void*, _GUID, ushort*, int*, byte**);

	// Token: 0x06000560 RID: 1376 RVA: 0x00064060 File Offset: 0x00063460
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern void cli_TestUserCache(void*, int, int, byte*, int*, byte**);

	// Token: 0x06000561 RID: 1377 RVA: 0x000640A0 File Offset: 0x000634A0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern void cli_SubscriptionComplete(void*, int, int, byte*, int*, byte**);

	// Token: 0x06000562 RID: 1378 RVA: 0x000640E0 File Offset: 0x000634E0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern void cli_InvokeSubscriptionNotificationEndPoint(void*, int, int, byte*, int*, byte**);

	// Token: 0x06000563 RID: 1379 RVA: 0x00064120 File Offset: 0x00063520
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern void cli_SubscriptionSubmit(void*, int, int, byte*, int*, byte**);

	// Token: 0x06000564 RID: 1380 RVA: 0x000641B0 File Offset: 0x000635B0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern void cli_ObtainTokens(void*, int, byte*, int*, byte**);

	// Token: 0x06000565 RID: 1381 RVA: 0x00064160 File Offset: 0x00063560
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_ObtainSubmissionTokens(void*, _GUID, int, int, int);

	// Token: 0x06000566 RID: 1382 RVA: 0x00059740 File Offset: 0x00058B40
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_ScCreateExchangeOabFolder(void*, ushort*);

	// Token: 0x06000567 RID: 1383 RVA: 0x000599F0 File Offset: 0x00058DF0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_ScRunOffLineABTask(void*, ushort*);

	// Token: 0x06000568 RID: 1384 RVA: 0x00059660 File Offset: 0x00058A60
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_ScSiteProxyValidateDC(void*, ushort*, ushort*, int*, ushort**);

	// Token: 0x06000569 RID: 1385 RVA: 0x00059B90 File Offset: 0x00058F90
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern void cli_ExecuteStepAsync(_RPC_ASYNC_STATE*, void*, int, byte*, int*, byte**);

	// Token: 0x0600056A RID: 1386 RVA: 0x00059C30 File Offset: 0x00059030
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_Ping(void*, _GUID, int*);

	// Token: 0x0600056B RID: 1387 RVA: 0x00059CB0 File Offset: 0x000590B0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_SendMwiMessage_v2_0(void*, _GUID, _GUID, ushort*, ushort*, int, int, int, _GUID);

	// Token: 0x0600056C RID: 1388 RVA: 0x00059BD0 File Offset: 0x00058FD0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern void cli_GetUmActiveCalls(void*, int, ushort*, int, ushort*, int*, byte**);

	// Token: 0x0600056D RID: 1389 RVA: 0x000641F0 File Offset: 0x000635F0
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_Notify(void*, int, int, int, byte*, int*, byte**);

	// Token: 0x0600056E RID: 1390 RVA: 0x00064250 File Offset: 0x00063650
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern int cli_SendHostRequest(void*, int, int, int, byte*, int*, byte**);

	// Token: 0x0600056F RID: 1391 RVA: 0x0005B144 File Offset: 0x0005A544
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal unsafe static extern void* _getFiberPtrId();

	// Token: 0x06000570 RID: 1392 RVA: 0x0005A456 File Offset: 0x00059856
	[SuppressUnmanagedCodeSecurity]
	[DllImport("", CallingConvention = CallingConvention.Cdecl, SetLastError = true)]
	[MethodImpl(MethodImplOptions.Unmanaged)]
	internal static extern void _amsg_exit(int);

	// Token: 0x06000571 RID: 1393 RVA: 0x0005A648 File Offset: 0x00059A48
	[SuppressUnmanagedCodeSecurity]
	[MethodImpl(MethodImplOptions.Unmanaged | MethodImplOptions.PreserveSig)]
	internal static extern void __security_init_cookie();

	// Token: 0x06000572 RID: 1394 RVA: 0x000642AA File Offset: 0x000636AA
	[SuppressUnmanagedCodeSecurity]
	[DllImport("", CallingConvention = CallingConvention.Cdecl, SetLastError = true)]
	[MethodImpl(MethodImplOptions.Unmanaged)]
	internal static extern void _cexit();

	// Token: 0x06000573 RID: 1395 RVA: 0x000642B0 File Offset: 0x000636B0
	[SuppressUnmanagedCodeSecurity]
	[DllImport("", CallingConvention = CallingConvention.Cdecl, SetLastError = true)]
	[MethodImpl(MethodImplOptions.Unmanaged)]
	internal unsafe static extern int __FrameUnwindFilter(_EXCEPTION_POINTERS*);

	// Token: 0x06000574 RID: 1396 RVA: 0x0005AA92 File Offset: 0x00059E92
	[SuppressUnmanagedCodeSecurity]
	[DllImport("", CallingConvention = CallingConvention.Cdecl, SetLastError = true)]
	[MethodImpl(MethodImplOptions.Unmanaged)]
	internal static extern void terminate();

	// Token: 0x04000001 RID: 1 RVA: 0x0006E96C File Offset: 0x0006DB6C
	internal static int ?busyRetryMax@RpcRetryState@@0HB;

	// Token: 0x04000002 RID: 2 RVA: 0x0006E970 File Offset: 0x0006DB70
	internal static int ?busyRetryWaitInMilliseconds@RpcRetryState@@0HB;

	// Token: 0x04000003 RID: 3 RVA: 0x0006E968 File Offset: 0x0006DB68
	internal static int ?accessDeniedRetryMax@RpcRetryState@@0HB;

	// Token: 0x04000004 RID: 4 RVA: 0x00160210 File Offset: 0x0015EC10
	internal static int Rpc;

	// Token: 0x04000005 RID: 5 RVA: 0x00160214 File Offset: 0x0015EC14
	internal static uint g_ulActiveNotificationsBrokerDispatchThreads;

	// Token: 0x04000006 RID: 6 RVA: 0x00159000 File Offset: 0x00157A00
	public static method __m2mep@?FromUnmanagedBool@?A0x65e5aba0@@$$FYA_NH@Z;

	// Token: 0x04000007 RID: 7 RVA: 0x00159010 File Offset: 0x00157A10
	public static method __m2mep@?ToUnmanagedBool@?A0x65e5aba0@@$$FYAH_N@Z;

	// Token: 0x04000008 RID: 8 RVA: 0x00159030 File Offset: 0x00157A30
	public static method __m2mep@?InitRpcDbStatusInfo@?A0x65e5aba0@ActiveManager@Rpc@Exchange@Microsoft@@$$FYAXPEAU_AmRpcDbStatusInfo2@@@Z;

	// Token: 0x04000009 RID: 9 RVA: 0x00159040 File Offset: 0x00157A40
	public static method __m2mep@?InitRpcPamInfo@?A0x65e5aba0@ActiveManager@Rpc@Exchange@Microsoft@@$$FYAXPEAU__MIDL_IActiveManagerRpc_0001@@@Z;

	// Token: 0x0400000A RID: 10 RVA: 0x00159050 File Offset: 0x00157A50
	public static method __m2mep@?FreeRpcDbStatusInfo@?A0x65e5aba0@ActiveManager@Rpc@Exchange@Microsoft@@$$FYAXPEAU_AmRpcDbStatusInfo2@@@Z;

	// Token: 0x0400000B RID: 11 RVA: 0x00159060 File Offset: 0x00157A60
	public static method __m2mep@?FreeRpcPamInfo@?A0x65e5aba0@ActiveManager@Rpc@Exchange@Microsoft@@$$FYAXPEAU__MIDL_IActiveManagerRpc_0001@@@Z;

	// Token: 0x0400000C RID: 12 RVA: 0x00159070 File Offset: 0x00157A70
	public static method __m2mep@?FreeRpcMountArg2@?A0x65e5aba0@ActiveManager@Rpc@Exchange@Microsoft@@$$FYAXPEAU__MIDL_IActiveManagerRpc_0002@@@Z;

	// Token: 0x0400000D RID: 13 RVA: 0x00159080 File Offset: 0x00157A80
	public static method __m2mep@?FreeRpcMountArg3@?A0x65e5aba0@ActiveManager@Rpc@Exchange@Microsoft@@$$FYAXPEAU__MIDL_IActiveManagerRpc_0003@@@Z;

	// Token: 0x0400000E RID: 14 RVA: 0x00159090 File Offset: 0x00157A90
	public static method __m2mep@?FreeRpcDismountArg@?A0x65e5aba0@ActiveManager@Rpc@Exchange@Microsoft@@$$FYAXPEAU__MIDL_IActiveManagerRpc_0004@@@Z;

	// Token: 0x0400000F RID: 15 RVA: 0x001590A0 File Offset: 0x00157AA0
	public static method __m2mep@?UToMDbStatusInfo@?A0x65e5aba0@ActiveManager@Rpc@Exchange@Microsoft@@$$FYMPE$AAVAmDbStatusInfo2@2345@PEAU_AmRpcDbStatusInfo2@@@Z;

	// Token: 0x04000010 RID: 16 RVA: 0x001590B0 File Offset: 0x00157AB0
	public static method __m2mep@?UToMPamInfo@?A0x65e5aba0@ActiveManager@Rpc@Exchange@Microsoft@@$$FYMPE$AAVAmPamInfo@2345@PEAU__MIDL_IActiveManagerRpc_0001@@@Z;

	// Token: 0x04000011 RID: 17 RVA: 0x001590C0 File Offset: 0x00157AC0
	public static method __m2mep@?MToUMountArg2@?A0x65e5aba0@ActiveManager@Rpc@Exchange@Microsoft@@$$FYMJPE$AAVAmMountArg@2345@PEAU__MIDL_IActiveManagerRpc_0002@@@Z;

	// Token: 0x04000012 RID: 18 RVA: 0x001590D0 File Offset: 0x00157AD0
	public static method __m2mep@?MToUMountArg3@?A0x65e5aba0@ActiveManager@Rpc@Exchange@Microsoft@@$$FYMJPE$AAVAmMountArg@2345@PEAU__MIDL_IActiveManagerRpc_0003@@@Z;

	// Token: 0x04000013 RID: 19 RVA: 0x001590E0 File Offset: 0x00157AE0
	public static method __m2mep@?MToUDismountArg@?A0x65e5aba0@ActiveManager@Rpc@Exchange@Microsoft@@$$FYMJPE$AAVAmDismountArg@2345@PEAU__MIDL_IActiveManagerRpc_0004@@@Z;

	// Token: 0x04000014 RID: 20 RVA: 0x00159020 File Offset: 0x00157A20
	public static method __m2mep@?HRESULT_FROM_WIN32@@$$J0YAJK@Z;

	// Token: 0x04000015 RID: 21 RVA: 0x001592C0 File Offset: 0x00157CC0
	public static method __m2mep@?FromUnmanagedBool@?A0x3ff91922@@$$FYA_NH@Z;

	// Token: 0x04000016 RID: 22 RVA: 0x001592D0 File Offset: 0x00157CD0
	public static method __m2mep@?ToUnmanagedBool@?A0x3ff91922@@$$FYAH_N@Z;

	// Token: 0x04000017 RID: 23 RVA: 0x00159220 File Offset: 0x00157C20
	public static method __m2mep@?RpcsAmGetServerForDatabase@@$$J0YAJPEAXU_GUID@@PEAU_AmRpcDbStatusInfo2@@PEAUtagErrorExceptionInfo@@@Z;

	// Token: 0x04000018 RID: 24 RVA: 0x00159230 File Offset: 0x00157C30
	public static method __m2mep@?AmMountDatabase@@$$J0YAJPEAXU_GUID@@HHPEAUtagErrorExceptionInfo@@@Z;

	// Token: 0x04000019 RID: 25 RVA: 0x001590F0 File Offset: 0x00157AF0
	public static method __m2mep@?AmMountDatabase3@@$$J0YAJPEAXU_GUID@@HHHPEAUtagErrorExceptionInfo@@@Z;

	// Token: 0x0400001A RID: 26 RVA: 0x00159100 File Offset: 0x00157B00
	public static method __m2mep@?AmDismountDatabase@@$$J0YAJPEAXU_GUID@@HPEAUtagErrorExceptionInfo@@@Z;

	// Token: 0x0400001B RID: 27 RVA: 0x00159110 File Offset: 0x00157B10
	public static method __m2mep@?AmMoveDatabaseEx@@$$J0YAJPEAXU_GUID@@HHHPEAG2HHHPEAUtagErrorExceptionInfo@@@Z;

	// Token: 0x0400001C RID: 28 RVA: 0x00159240 File Offset: 0x00157C40
	public static method __m2mep@?AmMoveDatabaseEx2@@$$J0YAJPEAXU_GUID@@HHHPEAG2HHHPEAHPEAPEAEPEAUtagErrorExceptionInfo@@@Z;

	// Token: 0x0400001D RID: 29 RVA: 0x00159120 File Offset: 0x00157B20
	public static method __m2mep@?AmMoveDatabaseEx3@@$$J0YAJPEAXU_GUID@@HHHPEAG2HHH2PEAHPEAPEAEPEAUtagErrorExceptionInfo@@@Z;

	// Token: 0x0400001E RID: 30 RVA: 0x00159130 File Offset: 0x00157B30
	public static method __m2mep@?AmIsRunning@@$$J0YAJPEAXPEAUtagErrorExceptionInfo@@@Z;

	// Token: 0x0400001F RID: 31 RVA: 0x00159250 File Offset: 0x00157C50
	public static method __m2mep@?AmGetPrimaryActiveManager@@$$J0YAJPEAXPEAU__MIDL_IActiveManagerRpc_0001@@PEAUtagErrorExceptionInfo@@@Z;

	// Token: 0x04000020 RID: 32 RVA: 0x00159260 File Offset: 0x00157C60
	public static method __m2mep@?AmMountDatabaseDirectEx@@$$J0YAJPEAXU_GUID@@PEAU__MIDL_IActiveManagerRpc_0002@@JPEAUtagErrorExceptionInfo@@@Z;

	// Token: 0x04000021 RID: 33 RVA: 0x00159270 File Offset: 0x00157C70
	public static method __m2mep@?AmMountDatabaseDirect3@@$$J0YAJPEAXU_GUID@@PEAU__MIDL_IActiveManagerRpc_0003@@JPEAUtagErrorExceptionInfo@@@Z;

	// Token: 0x04000022 RID: 34 RVA: 0x00159140 File Offset: 0x00157B40
	public static method __m2mep@?AmAttemptCopyLastLogsDirect@@$$J0YAJPEAXU_GUID@@HHHHHPEAGHPEAH3PEAUtagErrorExceptionInfo@@@Z;

	// Token: 0x04000023 RID: 35 RVA: 0x00159280 File Offset: 0x00157C80
	public static method __m2mep@?AmAttemptCopyLastLogsDirect2@@$$J0YAJPEAXU_GUID@@HHHHHPEAGHH2HPEAHPEAPEAEPEAUtagErrorExceptionInfo@@@Z;

	// Token: 0x04000024 RID: 36 RVA: 0x00159150 File Offset: 0x00157B50
	public static method __m2mep@?AmAttemptCopyLastLogsDirect3@@$$J0YAJPEAXU_GUID@@HHHHHPEAGHHH2HPEAHPEAPEAEPEAUtagErrorExceptionInfo@@@Z;

	// Token: 0x04000025 RID: 37 RVA: 0x00159290 File Offset: 0x00157C90
	public static method __m2mep@?AmDismountDatabaseDirect@@$$J0YAJPEAXU_GUID@@PEAU__MIDL_IActiveManagerRpc_0004@@PEAUtagErrorExceptionInfo@@@Z;

	// Token: 0x04000026 RID: 38 RVA: 0x00159160 File Offset: 0x00157B60
	public static method __m2mep@?AmServerSwitchOver@@$$J0YAJPEAXPEAGPEAUtagErrorExceptionInfo@@@Z;

	// Token: 0x04000027 RID: 39 RVA: 0x00159170 File Offset: 0x00157B70
	public static method __m2mep@?AmGetActiveManagerRole@@$$J0YAJPEAXPEAHPEAPEAGPEAUtagErrorExceptionInfo@@@Z;

	// Token: 0x04000028 RID: 40 RVA: 0x00159180 File Offset: 0x00157B80
	public static method __m2mep@?AmCheckThirdPartyListener@@$$J0YAJPEAXPEAHPEAPEAGPEAUtagErrorExceptionInfo@@@Z;

	// Token: 0x04000029 RID: 41 RVA: 0x00159190 File Offset: 0x00157B90
	public static method __m2mep@?RpcsAmGetAutomountConsensusState@@$$J0YAJPEAXPEAHPEAUtagErrorExceptionInfo@@@Z;

	// Token: 0x0400002A RID: 42 RVA: 0x001591A0 File Offset: 0x00157BA0
	public static method __m2mep@?RpcsAmSetAutomountConsensusState@@$$J0YAJPEAXHPEAUtagErrorExceptionInfo@@@Z;

	// Token: 0x0400002B RID: 43 RVA: 0x001591B0 File Offset: 0x00157BB0
	public static method __m2mep@?AmReportSystemEvent@@$$J0YAJPEAXHPEAGPEAUtagErrorExceptionInfo@@@Z;

	// Token: 0x0400002C RID: 44 RVA: 0x001591C0 File Offset: 0x00157BC0
	public static method __m2mep@?AmRefreshConfiguration@@$$J0YAJPEAXHHPEAUtagErrorExceptionInfo@@@Z;

	// Token: 0x0400002D RID: 45 RVA: 0x001591D0 File Offset: 0x00157BD0
	public static method __m2mep@?AmRemountDatabase@@$$J0YAJPEAXU_GUID@@HHPEAGPEAUtagErrorExceptionInfo@@@Z;

	// Token: 0x0400002E RID: 46 RVA: 0x001592A0 File Offset: 0x00157CA0
	public static method __m2mep@?AmServerMoveAllDatabases@@$$J0YAJPEAXPEAG1HHHHHHPEAHPEAPEAE2PEAUtagErrorExceptionInfo@@@Z;

	// Token: 0x0400002F RID: 47 RVA: 0x001592B0 File Offset: 0x00157CB0
	public static method __m2mep@?AmServerMoveAllDatabases2@@$$J0YAJPEAXPEAG1HHHHHH1PEAHPEAPEAE2PEAUtagErrorExceptionInfo@@@Z;

	// Token: 0x04000030 RID: 48 RVA: 0x001591E0 File Offset: 0x00157BE0
	public static method __m2mep@?AmServerMoveAllDatabases3@@$$J0YAJPEAXPEAG1HHHHHH11PEAHPEAPEAE2PEAUtagErrorExceptionInfo@@@Z;

	// Token: 0x04000031 RID: 49 RVA: 0x001591F0 File Offset: 0x00157BF0
	public static method __m2mep@?AmReportServiceKill@@$$J0YAJPEAXPEAG11PEAUtagErrorExceptionInfo@@@Z;

	// Token: 0x04000032 RID: 50 RVA: 0x00159200 File Offset: 0x00157C00
	public static method __m2mep@?AmGetDeferredRecoveryEntries@@$$J0YAJPEAXPEAHPEAPEAE1PEAUtagErrorExceptionInfo@@@Z;

	// Token: 0x04000033 RID: 51 RVA: 0x00159210 File Offset: 0x00157C10
	public static method __m2mep@?AmGenericRequest@@$$J0YAJPEAXPEAUtagGenericRequestInfo@@PEAUtagGenericReplyInfo@@PEAUtagErrorExceptionInfo@@@Z;

	// Token: 0x04000034 RID: 52 RVA: 0x001592E0 File Offset: 0x00157CE0
	public static method __m2mep@?MToUDbStatusInfo@?A0x3ff91922@@$$FYMJPE$AAVAmDbStatusInfo2@ActiveManager@Rpc@Exchange@Microsoft@@PEAU_AmRpcDbStatusInfo2@@@Z;

	// Token: 0x04000035 RID: 53 RVA: 0x001592F0 File Offset: 0x00157CF0
	public static method __m2mep@?MToUPamInfo@?A0x3ff91922@@$$FYMJPE$AAVAmPamInfo@ActiveManager@Rpc@Exchange@Microsoft@@PEAU__MIDL_IActiveManagerRpc_0001@@@Z;

	// Token: 0x04000036 RID: 54 RVA: 0x00159300 File Offset: 0x00157D00
	public static method __m2mep@?UToMMountArg@?A0x3ff91922@@$$FYMPE$AAVAmMountArg@ActiveManager@Rpc@Exchange@Microsoft@@PEAXJ@Z;

	// Token: 0x04000037 RID: 55 RVA: 0x00159310 File Offset: 0x00157D10
	public static method __m2mep@?UToMDismountArg@?A0x3ff91922@@$$FYMPE$AAVAmDismountArg@ActiveManager@Rpc@Exchange@Microsoft@@PEAU__MIDL_IActiveManagerRpc_0004@@@Z;

	// Token: 0x04000038 RID: 56 RVA: 0x00159320 File Offset: 0x00157D20
	public static method __m2mep@?MToUGenericRequestInfo@@$$FYMJPE$AAVRpcGenericRequestInfo@ActiveMonitoring@Rpc@Exchange@Microsoft@@PEAUtagGenericRequestInfo@@@Z;

	// Token: 0x04000039 RID: 57 RVA: 0x00159330 File Offset: 0x00157D30
	public static method __m2mep@?MToUGenericReplyInfo@@$$FYMJPE$AAVRpcGenericReplyInfo@ActiveMonitoring@Rpc@Exchange@Microsoft@@PEAUtagGenericReplyInfo@@@Z;

	// Token: 0x0400003A RID: 58 RVA: 0x00159340 File Offset: 0x00157D40
	public static method __m2mep@?UToMGenericRequestInfo@@$$FYMPE$AAVRpcGenericRequestInfo@ActiveMonitoring@Rpc@Exchange@Microsoft@@QEBUtagGenericRequestInfo@@@Z;

	// Token: 0x0400003B RID: 59 RVA: 0x00159350 File Offset: 0x00157D50
	public static method __m2mep@?UToMGenericReplyInfo@@$$FYMPE$AAVRpcGenericReplyInfo@ActiveMonitoring@Rpc@Exchange@Microsoft@@QEBUtagGenericReplyInfo@@@Z;

	// Token: 0x0400003C RID: 60 RVA: 0x00159360 File Offset: 0x00157D60
	public static method __m2mep@?RequestMonitoring@@$$J0YAJPEAXU_GUID@@@Z;

	// Token: 0x0400003D RID: 61 RVA: 0x00159370 File Offset: 0x00157D70
	public static method __m2mep@?CancelMonitoring@@$$J0YAJPEAXU_GUID@@@Z;

	// Token: 0x0400003E RID: 62 RVA: 0x00159380 File Offset: 0x00157D80
	public static method __m2mep@?RequestCredential@@$$J0YAJPEAXPEAGU_GUID@@1PEAPEAG@Z;

	// Token: 0x0400003F RID: 63 RVA: 0x00159390 File Offset: 0x00157D90
	public static method __m2mep@?Heartbeat@@$$J0YAJPEAXPEAGU_GUID@@@Z;

	// Token: 0x04000040 RID: 64 RVA: 0x001593A0 File Offset: 0x00157DA0
	public static method __m2mep@?GenericRequest@@$$J0YAJPEAXPEAUtagGenericRequestInfo@@PEAUtagGenericReplyInfo@@PEAUtagErrorExceptionInfo@@@Z;

	// Token: 0x04000041 RID: 65 RVA: 0x001593B0 File Offset: 0x00157DB0
	public static method __m2mep@?CreateMonitoringMailbox@@$$J0YAJPEAXPEAGU_GUID@@@Z;

	// Token: 0x04000042 RID: 66 RVA: 0x001593C0 File Offset: 0x00157DC0
	public static method __m2mep@?GuidFromGUID@?A0x10827eaf@Rpc@Exchange@Microsoft@@$$FYM?AVGuid@System@@AEBU_GUID@@@Z;

	// Token: 0x04000043 RID: 67 RVA: 0x0014F5C8 File Offset: 0x0014E7C8
	internal static $_s__RTTIBaseClassArray$_extraBytes_24 ??_R2AdminGetIFVersionRpc@@8;

	// Token: 0x04000044 RID: 68 RVA: 0x0014F548 File Offset: 0x0014E748
	internal static $_s__RTTIBaseClassArray$_extraBytes_16 ??_R2AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@8;

	// Token: 0x04000045 RID: 69 RVA: 0x0014F4D0 File Offset: 0x0014E6D0
	internal static $_s__RTTIBaseClassArray$_extraBytes_8 ??_R2ManagedExceptionCrashWrapper@Rpc@Exchange@Microsoft@@8;

	// Token: 0x04000046 RID: 70 RVA: 0x0014F5A0 File Offset: 0x0014E7A0
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@AdminGetIFVersionRpc@@8;

	// Token: 0x04000047 RID: 71 RVA: 0x0014F520 File Offset: 0x0014E720
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@8;

	// Token: 0x04000048 RID: 72 RVA: 0x0014F4A8 File Offset: 0x0014E6A8
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@ManagedExceptionCrashWrapper@Rpc@Exchange@Microsoft@@8;

	// Token: 0x04000049 RID: 73 RVA: 0x0014F5E8 File Offset: 0x0014E7E8
	internal static _s__RTTIClassHierarchyDescriptor ??_R3AdminGetIFVersionRpc@@8;

	// Token: 0x0400004A RID: 74 RVA: 0x00159500 File Offset: 0x00157F00
	internal static $_TypeDescriptor$_extraBytes_27 ??_R0?AVAdminGetIFVersionRpc@@@8;

	// Token: 0x0400004B RID: 75 RVA: 0x0014F560 File Offset: 0x0014E760
	internal static _s__RTTIClassHierarchyDescriptor ??_R3AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@8;

	// Token: 0x0400004C RID: 76 RVA: 0x001594B0 File Offset: 0x00157EB0
	internal static $_TypeDescriptor$_extraBytes_61 ??_R0?AVAdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@@8;

	// Token: 0x0400004D RID: 77 RVA: 0x0014F4E0 File Offset: 0x0014E6E0
	internal static _s__RTTIClassHierarchyDescriptor ??_R3ManagedExceptionCrashWrapper@Rpc@Exchange@Microsoft@@8;

	// Token: 0x0400004E RID: 78 RVA: 0x001593D0 File Offset: 0x00157DD0
	internal static $_TypeDescriptor$_extraBytes_58 ??_R0?AVManagedExceptionCrashWrapper@Rpc@Exchange@Microsoft@@@8;

	// Token: 0x0400004F RID: 79
	[FixedAddressValueType]
	internal static $ArrayType$$$BY03Q6AXXZ ??_7AdminGetIFVersionRpc@@6B@;

	// Token: 0x04000050 RID: 80 RVA: 0x0006E588 File Offset: 0x0006D788
	internal static method ??_7AdminGetIFVersionRpc@@6B@$initializer$;

	// Token: 0x04000051 RID: 81 RVA: 0x0014F600 File Offset: 0x0014E800
	internal static _s__RTTICompleteObjectLocator2 ??_R4AdminGetIFVersionRpc@@6B@;

	// Token: 0x04000052 RID: 82
	[FixedAddressValueType]
	internal static $ArrayType$$$BY03Q6AXXZ ??_7AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x04000053 RID: 83 RVA: 0x0006E580 File Offset: 0x0006D780
	internal static method ??_7AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@6B@$initializer$;

	// Token: 0x04000054 RID: 84 RVA: 0x0014F578 File Offset: 0x0014E778
	internal static _s__RTTICompleteObjectLocator2 ??_R4AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x04000055 RID: 85 RVA: 0x0014F4F8 File Offset: 0x0014E6F8
	internal static _s__RTTICompleteObjectLocator2 ??_R4ManagedExceptionCrashWrapper@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x04000056 RID: 86 RVA: 0x00159428 File Offset: 0x00157E28
	internal static $ArrayType$$$BY01Q6AXXZ ??_7ManagedExceptionCrashWrapper@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x04000057 RID: 87 RVA: 0x00159440 File Offset: 0x00157E40
	public static method __m2mep@?EcValidateParameters@AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@$$FMEAAJXZ;

	// Token: 0x04000058 RID: 88 RVA: 0x00159490 File Offset: 0x00157E90
	public static method __m2mep@??0AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@$$FIEAM@VIntPtr@System@@PEAXKPEAEPEAKPEAPEAE@Z;

	// Token: 0x04000059 RID: 89 RVA: 0x00159450 File Offset: 0x00157E50
	public static method __m2mep@??0ManagedExceptionCrashWrapper@Rpc@Exchange@Microsoft@@$$FQEAA@XZ;

	// Token: 0x0400005A RID: 90 RVA: 0x001594A0 File Offset: 0x00157EA0
	public static method __m2mep@??0AdminGetIFVersionRpc@@$$FQEAA@PEAXJPEAG1KPEAEPEAKPEAPEAE@Z;

	// Token: 0x0400005B RID: 91 RVA: 0x00159460 File Offset: 0x00157E60
	public static method __m2mep@?EcValidateParameters@AdminGetIFVersionRpc@@$$FUEAAJXZ;

	// Token: 0x0400005C RID: 92 RVA: 0x00159470 File Offset: 0x00157E70
	public static method __m2mep@?EcDispatchCall@AdminGetIFVersionRpc@@$$FUEAMJPE$AAUIAdminRpcServer@AdminRpc@Rpc@Exchange@Microsoft@@PE$AAVClientSecurityContext@Authorization@Security@56@P$01EAEAE$CAP$01EAE@Z;

	// Token: 0x0400005D RID: 93 RVA: 0x00159430 File Offset: 0x00157E30
	public static method __m2mep@?AdminGetIFVersion_Managed@@$$FYAXPEAXJPEAG1@Z;

	// Token: 0x0400005E RID: 94 RVA: 0x00159480 File Offset: 0x00157E80
	public static method __m2mep@?GUIDFromGuid@?A0x72697679@Rpc@Exchange@Microsoft@@$$FYM?AU_GUID@@PE$AAVGuid@System@@@Z;

	// Token: 0x0400005F RID: 95 RVA: 0x0006E9C8 File Offset: 0x0006DBC8
	public unsafe static int** __unep@?EcValidateParameters@AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@$$FMEAAJXZ;

	// Token: 0x04000060 RID: 96 RVA: 0x0006E9D0 File Offset: 0x0006DBD0
	public unsafe static int** __unep@?EcValidateParameters@AdminGetIFVersionRpc@@$$FUEAAJXZ;

	// Token: 0x04000061 RID: 97 RVA: 0x0006E9C0 File Offset: 0x0006DBC0
	unsafe static int** __unep@?InternalExecute@AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@$$FUEAAJXZ;

	// Token: 0x04000062 RID: 98 RVA: 0x00159540 File Offset: 0x00157F40
	public static method __m2mep@?EcListAllMdbStatus_Managed@@$$FYAJPEAXHPEAK1PEAPEAE@Z;

	// Token: 0x04000063 RID: 99 RVA: 0x00159550 File Offset: 0x00157F50
	public static method __m2mep@?EcListMdbStatus40_Managed@@$$FYAJPEAXKQEAU_GUID@@QEAK@Z;

	// Token: 0x04000064 RID: 100 RVA: 0x00159560 File Offset: 0x00157F60
	public static method __m2mep@?EcAdminGetCnctTable40_Managed@@$$FYAJPEAXPEAU_GUID@@JPEAPEAEPEAKQEAKKK3@Z;

	// Token: 0x04000065 RID: 101 RVA: 0x00159570 File Offset: 0x00157F70
	public static method __m2mep@?EcGetLastBackupTimes50_Managed@@$$FYAJPEAXPEAU_GUID@@PEAU_FILETIME@@2@Z;

	// Token: 0x04000066 RID: 102 RVA: 0x00159580 File Offset: 0x00157F80
	public static method __m2mep@?EcClearAbsentInDsFlagOnMailbox40_Managed@@$$FYAJPEAXPEAU_GUID@@1@Z;

	// Token: 0x04000067 RID: 103 RVA: 0x00159590 File Offset: 0x00157F90
	public static method __m2mep@?EcPurgeCachedMailboxObject40_Managed@@$$FYAJPEAXPEAU_GUID@@@Z;

	// Token: 0x04000068 RID: 104 RVA: 0x001595A0 File Offset: 0x00157FA0
	public static method __m2mep@?EcSyncMailboxesWithDS40_Managed@@$$FYAJPEAXPEAU_GUID@@@Z;

	// Token: 0x04000069 RID: 105 RVA: 0x001595B0 File Offset: 0x00157FB0
	public static method __m2mep@?EcAdminDeletePrivateMailbox40_Managed@@$$FYAJPEAXPEAU_GUID@@1K@Z;

	// Token: 0x0400006A RID: 106 RVA: 0x001595C0 File Offset: 0x00157FC0
	public static method __m2mep@?EcSetMailboxSecurityDescriptor40_Managed@@$$FYAJPEAXPEAU_GUID@@1PEAEK@Z;

	// Token: 0x0400006B RID: 107 RVA: 0x001595D0 File Offset: 0x00157FD0
	public static method __m2mep@?EcGetMailboxSecurityDescriptor40_Managed@@$$FYAJPEAXPEAU_GUID@@1PEAPEAEPEAK@Z;

	// Token: 0x0400006C RID: 108 RVA: 0x001595E0 File Offset: 0x00157FE0
	public static method __m2mep@?EcAdminGetLogonTable40_Managed@@$$FYAJPEAXPEAU_GUID@@JPEAPEAEPEAKQEAKKK3@Z;

	// Token: 0x0400006D RID: 109 RVA: 0x001595F0 File Offset: 0x00157FF0
	public static method __m2mep@?EcMountDatabase40_Managed@@$$FYAJPEAXPEAU_GUID@@1K@Z;

	// Token: 0x0400006E RID: 110 RVA: 0x00159600 File Offset: 0x00158000
	public static method __m2mep@?EcUnmountDatabase40_Managed@@$$FYAJPEAXPEAU_GUID@@1H@Z;

	// Token: 0x0400006F RID: 111 RVA: 0x00159610 File Offset: 0x00158010
	public static method __m2mep@?EcAdminSetMailboxBasicInfo40_Managed@@$$FYAJPEAXPEAU_GUID@@1QEADK@Z;

	// Token: 0x04000070 RID: 112 RVA: 0x00159620 File Offset: 0x00158020
	public static method __m2mep@?EcPurgeCachedMdbObject40_Managed@@$$FYAJPEAXPEAU_GUID@@@Z;

	// Token: 0x04000071 RID: 113 RVA: 0x00159630 File Offset: 0x00158030
	public static method __m2mep@?EcAdminGetMailboxTable40_Managed@@$$FYAJPEAXPEAU_GUID@@JPEAPEAEPEAKQEAKKK3@Z;

	// Token: 0x04000072 RID: 114 RVA: 0x00159640 File Offset: 0x00158040
	public static method __m2mep@?EcAdminNotifyOnDSChange40_Managed@@$$FYAJPEAXPEAU_GUID@@1K@Z;

	// Token: 0x04000073 RID: 115 RVA: 0x00159650 File Offset: 0x00158050
	public static method __m2mep@?EcLogReplayRequest2_Managed@@$$FYAJPEAXPEAU_GUID@@KPEAK2PEAPEAE223232PEAPEAK@Z;

	// Token: 0x04000074 RID: 116 RVA: 0x00159660 File Offset: 0x00158060
	public static method __m2mep@?GUIDFromGuid@?A0x11b94343@Rpc@Exchange@Microsoft@@$$FYM?AU_GUID@@PE$AAVGuid@System@@@Z;

	// Token: 0x04000075 RID: 117 RVA: 0x0006E9D8 File Offset: 0x0006DBD8
	unsafe static int** __unep@?InternalExecute@AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@$$FUEAAJXZ;

	// Token: 0x04000076 RID: 118 RVA: 0x001507E8 File Offset: 0x0014F9E8
	internal static $_s__RTTIBaseClassArray$_extraBytes_24 ??_R2EcDeleteUserInfo50Rpc@@8;

	// Token: 0x04000077 RID: 119 RVA: 0x00150760 File Offset: 0x0014F960
	internal static $_s__RTTIBaseClassArray$_extraBytes_24 ??_R2EcUpdateUserInfo50Rpc@@8;

	// Token: 0x04000078 RID: 120 RVA: 0x001506D8 File Offset: 0x0014F8D8
	internal static $_s__RTTIBaseClassArray$_extraBytes_24 ??_R2EcReadUserInfo50Rpc@@8;

	// Token: 0x04000079 RID: 121 RVA: 0x00150650 File Offset: 0x0014F850
	internal static $_s__RTTIBaseClassArray$_extraBytes_24 ??_R2EcCreateUserInfo50Rpc@@8;

	// Token: 0x0400007A RID: 122 RVA: 0x001505C8 File Offset: 0x0014F7C8
	internal static $_s__RTTIBaseClassArray$_extraBytes_24 ??_R2EcAdminIntegrityCheckEx50Rpc@@8;

	// Token: 0x0400007B RID: 123 RVA: 0x00150540 File Offset: 0x0014F740
	internal static $_s__RTTIBaseClassArray$_extraBytes_24 ??_R2EcForceNewLog50Rpc@@8;

	// Token: 0x0400007C RID: 124 RVA: 0x001504B8 File Offset: 0x0014F6B8
	internal static $_s__RTTIBaseClassArray$_extraBytes_24 ??_R2EcAdminPrePopulateCacheEx50Rpc@@8;

	// Token: 0x0400007D RID: 125 RVA: 0x00150430 File Offset: 0x0014F630
	internal static $_s__RTTIBaseClassArray$_extraBytes_24 ??_R2EcAdminGetPhysicalDatabaseInformation50Rpc@@8;

	// Token: 0x0400007E RID: 126 RVA: 0x001503A8 File Offset: 0x0014F5A8
	internal static $_s__RTTIBaseClassArray$_extraBytes_24 ??_R2EcAdminProcessSnapshotOperation50Rpc@@8;

	// Token: 0x0400007F RID: 127 RVA: 0x00150320 File Offset: 0x0014F520
	internal static $_s__RTTIBaseClassArray$_extraBytes_24 ??_R2EcAdminGetDatabaseProcessInfo50Rpc@@8;

	// Token: 0x04000080 RID: 128 RVA: 0x00150298 File Offset: 0x0014F498
	internal static $_s__RTTIBaseClassArray$_extraBytes_24 ??_R2EcGetMultiMailboxSearchKeywordStatsRpc@@8;

	// Token: 0x04000081 RID: 129 RVA: 0x00150210 File Offset: 0x0014F410
	internal static $_s__RTTIBaseClassArray$_extraBytes_24 ??_R2EcMultiMailboxSearchRpc@@8;

	// Token: 0x04000082 RID: 130 RVA: 0x00150188 File Offset: 0x0014F388
	internal static $_s__RTTIBaseClassArray$_extraBytes_24 ??_R2EcStartBlockModeReplicationToPassive50Rpc@@8;

	// Token: 0x04000083 RID: 131 RVA: 0x00150100 File Offset: 0x0014F300
	internal static $_s__RTTIBaseClassArray$_extraBytes_24 ??_R2EcAdminExecuteTask50Rpc@@8;

	// Token: 0x04000084 RID: 132 RVA: 0x00150078 File Offset: 0x0014F278
	internal static $_s__RTTIBaseClassArray$_extraBytes_24 ??_R2EcAdminGetRestrictionTableEx50Rpc@@8;

	// Token: 0x04000085 RID: 133 RVA: 0x0014FFF0 File Offset: 0x0014F1F0
	internal static $_s__RTTIBaseClassArray$_extraBytes_24 ??_R2EcAdminGetViewsTableEx50Rpc@@8;

	// Token: 0x04000086 RID: 134 RVA: 0x0014FF68 File Offset: 0x0014F168
	internal static $_s__RTTIBaseClassArray$_extraBytes_24 ??_R2EcAdminISIntegCheck50Rpc@@8;

	// Token: 0x04000087 RID: 135 RVA: 0x0014FEE0 File Offset: 0x0014F0E0
	internal static $_s__RTTIBaseClassArray$_extraBytes_24 ??_R2EcGetDatabaseSizeEx50Rpc@@8;

	// Token: 0x04000088 RID: 136 RVA: 0x0014FE58 File Offset: 0x0014F058
	internal static $_s__RTTIBaseClassArray$_extraBytes_24 ??_R2EcAdminGetResourceMonitorDigest50Rpc@@8;

	// Token: 0x04000089 RID: 137 RVA: 0x0014FDD0 File Offset: 0x0014EFD0
	internal static $_s__RTTIBaseClassArray$_extraBytes_24 ??_R2EcAdminGetMailboxSignatureBasicInfo50Rpc@@8;

	// Token: 0x0400008A RID: 138 RVA: 0x0014FD48 File Offset: 0x0014EF48
	internal static $_s__RTTIBaseClassArray$_extraBytes_24 ??_R2EcAdminGetFeatureVersion50Rpc@@8;

	// Token: 0x0400008B RID: 139 RVA: 0x0014FCB8 File Offset: 0x0014EEB8
	internal static $_s__RTTIBaseClassArray$_extraBytes_32 ??_R2EcAdminGetMailboxTableEntryFlags50Rpc@@8;

	// Token: 0x0400008C RID: 140 RVA: 0x0014FC28 File Offset: 0x0014EE28
	internal static $_s__RTTIBaseClassArray$_extraBytes_32 ??_R2EcAdminGetMailboxTableEntry50Rpc@@8;

	// Token: 0x0400008D RID: 141 RVA: 0x0014FBA0 File Offset: 0x0014EDA0
	internal static $_s__RTTIBaseClassArray$_extraBytes_24 ??_R2EcAdminGetMailboxTableEntry@@8;

	// Token: 0x0400008E RID: 142 RVA: 0x0014FB18 File Offset: 0x0014ED18
	internal static $_s__RTTIBaseClassArray$_extraBytes_24 ??_R2EcGetLastBackupInfo50Rpc@@8;

	// Token: 0x0400008F RID: 143 RVA: 0x0014FA90 File Offset: 0x0014EC90
	internal static $_s__RTTIBaseClassArray$_extraBytes_24 ??_R2EcDoMaintenanceTask50Rpc@@8;

	// Token: 0x04000090 RID: 144 RVA: 0x0014FA08 File Offset: 0x0014EC08
	internal static $_s__RTTIBaseClassArray$_extraBytes_24 ??_R2EcGetMdbWatermarksForMailbox50Rpc@@8;

	// Token: 0x04000091 RID: 145 RVA: 0x0014F980 File Offset: 0x0014EB80
	internal static $_s__RTTIBaseClassArray$_extraBytes_24 ??_R2EcWriteMdbEvents50Rpc@@8;

	// Token: 0x04000092 RID: 146 RVA: 0x0014F8F8 File Offset: 0x0014EAF8
	internal static $_s__RTTIBaseClassArray$_extraBytes_24 ??_R2EcGetMdbWatermarksForConsumer50Rpc@@8;

	// Token: 0x04000093 RID: 147 RVA: 0x0014F870 File Offset: 0x0014EA70
	internal static $_s__RTTIBaseClassArray$_extraBytes_24 ??_R2EcSaveMdbWatermarks50Rpc@@8;

	// Token: 0x04000094 RID: 148 RVA: 0x0014F7E8 File Offset: 0x0014E9E8
	internal static $_s__RTTIBaseClassArray$_extraBytes_24 ??_R2EcDeleteMdbWatermarksForMailbox50Rpc@@8;

	// Token: 0x04000095 RID: 149 RVA: 0x0014F760 File Offset: 0x0014E960
	internal static $_s__RTTIBaseClassArray$_extraBytes_24 ??_R2EcDeleteMdbWatermarksForConsumer50Rpc@@8;

	// Token: 0x04000096 RID: 150 RVA: 0x0014F6D8 File Offset: 0x0014E8D8
	internal static $_s__RTTIBaseClassArray$_extraBytes_24 ??_R2EcSyncMailboxWithDS50Rpc@@8;

	// Token: 0x04000097 RID: 151 RVA: 0x0014F650 File Offset: 0x0014E850
	internal static $_s__RTTIBaseClassArray$_extraBytes_24 ??_R2EcReadMdbEvents50Rpc@@8;

	// Token: 0x04000098 RID: 152 RVA: 0x001507C0 File Offset: 0x0014F9C0
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@EcDeleteUserInfo50Rpc@@8;

	// Token: 0x04000099 RID: 153 RVA: 0x00150738 File Offset: 0x0014F938
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@EcUpdateUserInfo50Rpc@@8;

	// Token: 0x0400009A RID: 154 RVA: 0x001506B0 File Offset: 0x0014F8B0
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@EcReadUserInfo50Rpc@@8;

	// Token: 0x0400009B RID: 155 RVA: 0x00150628 File Offset: 0x0014F828
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@EcCreateUserInfo50Rpc@@8;

	// Token: 0x0400009C RID: 156 RVA: 0x001505A0 File Offset: 0x0014F7A0
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@EcAdminIntegrityCheckEx50Rpc@@8;

	// Token: 0x0400009D RID: 157 RVA: 0x00150518 File Offset: 0x0014F718
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@EcForceNewLog50Rpc@@8;

	// Token: 0x0400009E RID: 158 RVA: 0x00150490 File Offset: 0x0014F690
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@EcAdminPrePopulateCacheEx50Rpc@@8;

	// Token: 0x0400009F RID: 159 RVA: 0x00150408 File Offset: 0x0014F608
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@EcAdminGetPhysicalDatabaseInformation50Rpc@@8;

	// Token: 0x040000A0 RID: 160 RVA: 0x00150380 File Offset: 0x0014F580
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@EcAdminProcessSnapshotOperation50Rpc@@8;

	// Token: 0x040000A1 RID: 161 RVA: 0x001502F8 File Offset: 0x0014F4F8
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@EcAdminGetDatabaseProcessInfo50Rpc@@8;

	// Token: 0x040000A2 RID: 162 RVA: 0x00150270 File Offset: 0x0014F470
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@EcGetMultiMailboxSearchKeywordStatsRpc@@8;

	// Token: 0x040000A3 RID: 163 RVA: 0x001501E8 File Offset: 0x0014F3E8
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@EcMultiMailboxSearchRpc@@8;

	// Token: 0x040000A4 RID: 164 RVA: 0x00150160 File Offset: 0x0014F360
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@EcStartBlockModeReplicationToPassive50Rpc@@8;

	// Token: 0x040000A5 RID: 165 RVA: 0x001500D8 File Offset: 0x0014F2D8
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@EcAdminExecuteTask50Rpc@@8;

	// Token: 0x040000A6 RID: 166 RVA: 0x00150050 File Offset: 0x0014F250
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@EcAdminGetRestrictionTableEx50Rpc@@8;

	// Token: 0x040000A7 RID: 167 RVA: 0x0014FFC8 File Offset: 0x0014F1C8
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@EcAdminGetViewsTableEx50Rpc@@8;

	// Token: 0x040000A8 RID: 168 RVA: 0x0014FF40 File Offset: 0x0014F140
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@EcAdminISIntegCheck50Rpc@@8;

	// Token: 0x040000A9 RID: 169 RVA: 0x0014FEB8 File Offset: 0x0014F0B8
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@EcGetDatabaseSizeEx50Rpc@@8;

	// Token: 0x040000AA RID: 170 RVA: 0x0014FE30 File Offset: 0x0014F030
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@EcAdminGetResourceMonitorDigest50Rpc@@8;

	// Token: 0x040000AB RID: 171 RVA: 0x0014FDA8 File Offset: 0x0014EFA8
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@EcAdminGetMailboxSignatureBasicInfo50Rpc@@8;

	// Token: 0x040000AC RID: 172 RVA: 0x0014FD20 File Offset: 0x0014EF20
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@EcAdminGetFeatureVersion50Rpc@@8;

	// Token: 0x040000AD RID: 173 RVA: 0x0014FC90 File Offset: 0x0014EE90
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@EcAdminGetMailboxTableEntryFlags50Rpc@@8;

	// Token: 0x040000AE RID: 174 RVA: 0x0014FC00 File Offset: 0x0014EE00
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@EcAdminGetMailboxTableEntry50Rpc@@8;

	// Token: 0x040000AF RID: 175 RVA: 0x0014FB78 File Offset: 0x0014ED78
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@EcAdminGetMailboxTableEntry@@8;

	// Token: 0x040000B0 RID: 176 RVA: 0x0014FAF0 File Offset: 0x0014ECF0
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@EcGetLastBackupInfo50Rpc@@8;

	// Token: 0x040000B1 RID: 177 RVA: 0x0014FA68 File Offset: 0x0014EC68
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@EcDoMaintenanceTask50Rpc@@8;

	// Token: 0x040000B2 RID: 178 RVA: 0x0014F9E0 File Offset: 0x0014EBE0
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@EcGetMdbWatermarksForMailbox50Rpc@@8;

	// Token: 0x040000B3 RID: 179 RVA: 0x0014F958 File Offset: 0x0014EB58
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@EcWriteMdbEvents50Rpc@@8;

	// Token: 0x040000B4 RID: 180 RVA: 0x0014F8D0 File Offset: 0x0014EAD0
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@EcGetMdbWatermarksForConsumer50Rpc@@8;

	// Token: 0x040000B5 RID: 181 RVA: 0x0014F848 File Offset: 0x0014EA48
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@EcSaveMdbWatermarks50Rpc@@8;

	// Token: 0x040000B6 RID: 182 RVA: 0x0014F7C0 File Offset: 0x0014E9C0
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@EcDeleteMdbWatermarksForMailbox50Rpc@@8;

	// Token: 0x040000B7 RID: 183 RVA: 0x0014F738 File Offset: 0x0014E938
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@EcDeleteMdbWatermarksForConsumer50Rpc@@8;

	// Token: 0x040000B8 RID: 184 RVA: 0x0014F6B0 File Offset: 0x0014E8B0
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@EcSyncMailboxWithDS50Rpc@@8;

	// Token: 0x040000B9 RID: 185 RVA: 0x0014F628 File Offset: 0x0014E828
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@EcReadMdbEvents50Rpc@@8;

	// Token: 0x040000BA RID: 186 RVA: 0x00150808 File Offset: 0x0014FA08
	internal static _s__RTTIClassHierarchyDescriptor ??_R3EcDeleteUserInfo50Rpc@@8;

	// Token: 0x040000BB RID: 187 RVA: 0x0015A738 File Offset: 0x00159138
	internal static $_TypeDescriptor$_extraBytes_28 ??_R0?AVEcDeleteUserInfo50Rpc@@@8;

	// Token: 0x040000BC RID: 188 RVA: 0x00150780 File Offset: 0x0014F980
	internal static _s__RTTIClassHierarchyDescriptor ??_R3EcUpdateUserInfo50Rpc@@8;

	// Token: 0x040000BD RID: 189 RVA: 0x0015A708 File Offset: 0x00159108
	internal static $_TypeDescriptor$_extraBytes_28 ??_R0?AVEcUpdateUserInfo50Rpc@@@8;

	// Token: 0x040000BE RID: 190 RVA: 0x001506F8 File Offset: 0x0014F8F8
	internal static _s__RTTIClassHierarchyDescriptor ??_R3EcReadUserInfo50Rpc@@8;

	// Token: 0x040000BF RID: 191 RVA: 0x0015A6D8 File Offset: 0x001590D8
	internal static $_TypeDescriptor$_extraBytes_26 ??_R0?AVEcReadUserInfo50Rpc@@@8;

	// Token: 0x040000C0 RID: 192 RVA: 0x00150670 File Offset: 0x0014F870
	internal static _s__RTTIClassHierarchyDescriptor ??_R3EcCreateUserInfo50Rpc@@8;

	// Token: 0x040000C1 RID: 193 RVA: 0x0015A6A8 File Offset: 0x001590A8
	internal static $_TypeDescriptor$_extraBytes_28 ??_R0?AVEcCreateUserInfo50Rpc@@@8;

	// Token: 0x040000C2 RID: 194 RVA: 0x001505E8 File Offset: 0x0014F7E8
	internal static _s__RTTIClassHierarchyDescriptor ??_R3EcAdminIntegrityCheckEx50Rpc@@8;

	// Token: 0x040000C3 RID: 195 RVA: 0x0015A670 File Offset: 0x00159070
	internal static $_TypeDescriptor$_extraBytes_35 ??_R0?AVEcAdminIntegrityCheckEx50Rpc@@@8;

	// Token: 0x040000C4 RID: 196 RVA: 0x00150560 File Offset: 0x0014F760
	internal static _s__RTTIClassHierarchyDescriptor ??_R3EcForceNewLog50Rpc@@8;

	// Token: 0x040000C5 RID: 197 RVA: 0x0015A640 File Offset: 0x00159040
	internal static $_TypeDescriptor$_extraBytes_25 ??_R0?AVEcForceNewLog50Rpc@@@8;

	// Token: 0x040000C6 RID: 198 RVA: 0x001504D8 File Offset: 0x0014F6D8
	internal static _s__RTTIClassHierarchyDescriptor ??_R3EcAdminPrePopulateCacheEx50Rpc@@8;

	// Token: 0x040000C7 RID: 199 RVA: 0x0015A608 File Offset: 0x00159008
	internal static $_TypeDescriptor$_extraBytes_37 ??_R0?AVEcAdminPrePopulateCacheEx50Rpc@@@8;

	// Token: 0x040000C8 RID: 200 RVA: 0x00150450 File Offset: 0x0014F650
	internal static _s__RTTIClassHierarchyDescriptor ??_R3EcAdminGetPhysicalDatabaseInformation50Rpc@@8;

	// Token: 0x040000C9 RID: 201 RVA: 0x0015A5C0 File Offset: 0x00158FC0
	internal static $_TypeDescriptor$_extraBytes_49 ??_R0?AVEcAdminGetPhysicalDatabaseInformation50Rpc@@@8;

	// Token: 0x040000CA RID: 202 RVA: 0x001503C8 File Offset: 0x0014F5C8
	internal static _s__RTTIClassHierarchyDescriptor ??_R3EcAdminProcessSnapshotOperation50Rpc@@8;

	// Token: 0x040000CB RID: 203 RVA: 0x0015A580 File Offset: 0x00158F80
	internal static $_TypeDescriptor$_extraBytes_43 ??_R0?AVEcAdminProcessSnapshotOperation50Rpc@@@8;

	// Token: 0x040000CC RID: 204 RVA: 0x00150340 File Offset: 0x0014F540
	internal static _s__RTTIClassHierarchyDescriptor ??_R3EcAdminGetDatabaseProcessInfo50Rpc@@8;

	// Token: 0x040000CD RID: 205 RVA: 0x0015A540 File Offset: 0x00158F40
	internal static $_TypeDescriptor$_extraBytes_41 ??_R0?AVEcAdminGetDatabaseProcessInfo50Rpc@@@8;

	// Token: 0x040000CE RID: 206 RVA: 0x001502B8 File Offset: 0x0014F4B8
	internal static _s__RTTIClassHierarchyDescriptor ??_R3EcGetMultiMailboxSearchKeywordStatsRpc@@8;

	// Token: 0x040000CF RID: 207 RVA: 0x0015A500 File Offset: 0x00158F00
	internal static $_TypeDescriptor$_extraBytes_45 ??_R0?AVEcGetMultiMailboxSearchKeywordStatsRpc@@@8;

	// Token: 0x040000D0 RID: 208 RVA: 0x00150230 File Offset: 0x0014F430
	internal static _s__RTTIClassHierarchyDescriptor ??_R3EcMultiMailboxSearchRpc@@8;

	// Token: 0x040000D1 RID: 209 RVA: 0x0015A4D0 File Offset: 0x00158ED0
	internal static $_TypeDescriptor$_extraBytes_30 ??_R0?AVEcMultiMailboxSearchRpc@@@8;

	// Token: 0x040000D2 RID: 210 RVA: 0x001501A8 File Offset: 0x0014F3A8
	internal static _s__RTTIClassHierarchyDescriptor ??_R3EcStartBlockModeReplicationToPassive50Rpc@@8;

	// Token: 0x040000D3 RID: 211 RVA: 0x0015A490 File Offset: 0x00158E90
	internal static $_TypeDescriptor$_extraBytes_48 ??_R0?AVEcStartBlockModeReplicationToPassive50Rpc@@@8;

	// Token: 0x040000D4 RID: 212 RVA: 0x00150120 File Offset: 0x0014F320
	internal static _s__RTTIClassHierarchyDescriptor ??_R3EcAdminExecuteTask50Rpc@@8;

	// Token: 0x040000D5 RID: 213 RVA: 0x0015A458 File Offset: 0x00158E58
	internal static $_TypeDescriptor$_extraBytes_30 ??_R0?AVEcAdminExecuteTask50Rpc@@@8;

	// Token: 0x040000D6 RID: 214 RVA: 0x00150098 File Offset: 0x0014F298
	internal static _s__RTTIClassHierarchyDescriptor ??_R3EcAdminGetRestrictionTableEx50Rpc@@8;

	// Token: 0x040000D7 RID: 215 RVA: 0x0015A420 File Offset: 0x00158E20
	internal static $_TypeDescriptor$_extraBytes_40 ??_R0?AVEcAdminGetRestrictionTableEx50Rpc@@@8;

	// Token: 0x040000D8 RID: 216 RVA: 0x00150010 File Offset: 0x0014F210
	internal static _s__RTTIClassHierarchyDescriptor ??_R3EcAdminGetViewsTableEx50Rpc@@8;

	// Token: 0x040000D9 RID: 217 RVA: 0x0015A3E8 File Offset: 0x00158DE8
	internal static $_TypeDescriptor$_extraBytes_34 ??_R0?AVEcAdminGetViewsTableEx50Rpc@@@8;

	// Token: 0x040000DA RID: 218 RVA: 0x0014FF88 File Offset: 0x0014F188
	internal static _s__RTTIClassHierarchyDescriptor ??_R3EcAdminISIntegCheck50Rpc@@8;

	// Token: 0x040000DB RID: 219 RVA: 0x0015A3B8 File Offset: 0x00158DB8
	internal static $_TypeDescriptor$_extraBytes_31 ??_R0?AVEcAdminISIntegCheck50Rpc@@@8;

	// Token: 0x040000DC RID: 220 RVA: 0x0014FF00 File Offset: 0x0014F100
	internal static _s__RTTIClassHierarchyDescriptor ??_R3EcGetDatabaseSizeEx50Rpc@@8;

	// Token: 0x040000DD RID: 221 RVA: 0x0015A388 File Offset: 0x00158D88
	internal static $_TypeDescriptor$_extraBytes_31 ??_R0?AVEcGetDatabaseSizeEx50Rpc@@@8;

	// Token: 0x040000DE RID: 222 RVA: 0x0014FE78 File Offset: 0x0014F078
	internal static _s__RTTIClassHierarchyDescriptor ??_R3EcAdminGetResourceMonitorDigest50Rpc@@8;

	// Token: 0x040000DF RID: 223 RVA: 0x0015A348 File Offset: 0x00158D48
	internal static $_TypeDescriptor$_extraBytes_43 ??_R0?AVEcAdminGetResourceMonitorDigest50Rpc@@@8;

	// Token: 0x040000E0 RID: 224 RVA: 0x0014FDF0 File Offset: 0x0014EFF0
	internal static _s__RTTIClassHierarchyDescriptor ??_R3EcAdminGetMailboxSignatureBasicInfo50Rpc@@8;

	// Token: 0x040000E1 RID: 225 RVA: 0x0015A308 File Offset: 0x00158D08
	internal static $_TypeDescriptor$_extraBytes_47 ??_R0?AVEcAdminGetMailboxSignatureBasicInfo50Rpc@@@8;

	// Token: 0x040000E2 RID: 226 RVA: 0x0014FD68 File Offset: 0x0014EF68
	internal static _s__RTTIClassHierarchyDescriptor ??_R3EcAdminGetFeatureVersion50Rpc@@8;

	// Token: 0x040000E3 RID: 227 RVA: 0x0015A2D0 File Offset: 0x00158CD0
	internal static $_TypeDescriptor$_extraBytes_36 ??_R0?AVEcAdminGetFeatureVersion50Rpc@@@8;

	// Token: 0x040000E4 RID: 228 RVA: 0x0014FCE0 File Offset: 0x0014EEE0
	internal static _s__RTTIClassHierarchyDescriptor ??_R3EcAdminGetMailboxTableEntryFlags50Rpc@@8;

	// Token: 0x040000E5 RID: 229 RVA: 0x0015A290 File Offset: 0x00158C90
	internal static $_TypeDescriptor$_extraBytes_44 ??_R0?AVEcAdminGetMailboxTableEntryFlags50Rpc@@@8;

	// Token: 0x040000E6 RID: 230 RVA: 0x0014FC50 File Offset: 0x0014EE50
	internal static _s__RTTIClassHierarchyDescriptor ??_R3EcAdminGetMailboxTableEntry50Rpc@@8;

	// Token: 0x040000E7 RID: 231 RVA: 0x0015A258 File Offset: 0x00158C58
	internal static $_TypeDescriptor$_extraBytes_39 ??_R0?AVEcAdminGetMailboxTableEntry50Rpc@@@8;

	// Token: 0x040000E8 RID: 232 RVA: 0x0014FBC0 File Offset: 0x0014EDC0
	internal static _s__RTTIClassHierarchyDescriptor ??_R3EcAdminGetMailboxTableEntry@@8;

	// Token: 0x040000E9 RID: 233 RVA: 0x0015A220 File Offset: 0x00158C20
	internal static $_TypeDescriptor$_extraBytes_34 ??_R0?AVEcAdminGetMailboxTableEntry@@@8;

	// Token: 0x040000EA RID: 234 RVA: 0x0014FB38 File Offset: 0x0014ED38
	internal static _s__RTTIClassHierarchyDescriptor ??_R3EcGetLastBackupInfo50Rpc@@8;

	// Token: 0x040000EB RID: 235 RVA: 0x0015A1F0 File Offset: 0x00158BF0
	internal static $_TypeDescriptor$_extraBytes_31 ??_R0?AVEcGetLastBackupInfo50Rpc@@@8;

	// Token: 0x040000EC RID: 236 RVA: 0x0014FAB0 File Offset: 0x0014ECB0
	internal static _s__RTTIClassHierarchyDescriptor ??_R3EcDoMaintenanceTask50Rpc@@8;

	// Token: 0x040000ED RID: 237 RVA: 0x0015A1C0 File Offset: 0x00158BC0
	internal static $_TypeDescriptor$_extraBytes_31 ??_R0?AVEcDoMaintenanceTask50Rpc@@@8;

	// Token: 0x040000EE RID: 238 RVA: 0x0014FA28 File Offset: 0x0014EC28
	internal static _s__RTTIClassHierarchyDescriptor ??_R3EcGetMdbWatermarksForMailbox50Rpc@@8;

	// Token: 0x040000EF RID: 239 RVA: 0x0015A188 File Offset: 0x00158B88
	internal static $_TypeDescriptor$_extraBytes_40 ??_R0?AVEcGetMdbWatermarksForMailbox50Rpc@@@8;

	// Token: 0x040000F0 RID: 240 RVA: 0x0014F9A0 File Offset: 0x0014EBA0
	internal static _s__RTTIClassHierarchyDescriptor ??_R3EcWriteMdbEvents50Rpc@@8;

	// Token: 0x040000F1 RID: 241 RVA: 0x0015A158 File Offset: 0x00158B58
	internal static $_TypeDescriptor$_extraBytes_28 ??_R0?AVEcWriteMdbEvents50Rpc@@@8;

	// Token: 0x040000F2 RID: 242 RVA: 0x0014F918 File Offset: 0x0014EB18
	internal static _s__RTTIClassHierarchyDescriptor ??_R3EcGetMdbWatermarksForConsumer50Rpc@@8;

	// Token: 0x040000F3 RID: 243 RVA: 0x0015A118 File Offset: 0x00158B18
	internal static $_TypeDescriptor$_extraBytes_41 ??_R0?AVEcGetMdbWatermarksForConsumer50Rpc@@@8;

	// Token: 0x040000F4 RID: 244 RVA: 0x0014F890 File Offset: 0x0014EA90
	internal static _s__RTTIClassHierarchyDescriptor ??_R3EcSaveMdbWatermarks50Rpc@@8;

	// Token: 0x040000F5 RID: 245 RVA: 0x0015A0E8 File Offset: 0x00158AE8
	internal static $_TypeDescriptor$_extraBytes_31 ??_R0?AVEcSaveMdbWatermarks50Rpc@@@8;

	// Token: 0x040000F6 RID: 246 RVA: 0x0014F808 File Offset: 0x0014EA08
	internal static _s__RTTIClassHierarchyDescriptor ??_R3EcDeleteMdbWatermarksForMailbox50Rpc@@8;

	// Token: 0x040000F7 RID: 247 RVA: 0x0015A0A8 File Offset: 0x00158AA8
	internal static $_TypeDescriptor$_extraBytes_43 ??_R0?AVEcDeleteMdbWatermarksForMailbox50Rpc@@@8;

	// Token: 0x040000F8 RID: 248 RVA: 0x0014F780 File Offset: 0x0014E980
	internal static _s__RTTIClassHierarchyDescriptor ??_R3EcDeleteMdbWatermarksForConsumer50Rpc@@8;

	// Token: 0x040000F9 RID: 249 RVA: 0x0015A068 File Offset: 0x00158A68
	internal static $_TypeDescriptor$_extraBytes_44 ??_R0?AVEcDeleteMdbWatermarksForConsumer50Rpc@@@8;

	// Token: 0x040000FA RID: 250 RVA: 0x0014F6F8 File Offset: 0x0014E8F8
	internal static _s__RTTIClassHierarchyDescriptor ??_R3EcSyncMailboxWithDS50Rpc@@8;

	// Token: 0x040000FB RID: 251 RVA: 0x0015A038 File Offset: 0x00158A38
	internal static $_TypeDescriptor$_extraBytes_31 ??_R0?AVEcSyncMailboxWithDS50Rpc@@@8;

	// Token: 0x040000FC RID: 252 RVA: 0x0014F670 File Offset: 0x0014E870
	internal static _s__RTTIClassHierarchyDescriptor ??_R3EcReadMdbEvents50Rpc@@8;

	// Token: 0x040000FD RID: 253 RVA: 0x0015A008 File Offset: 0x00158A08
	internal static $_TypeDescriptor$_extraBytes_27 ??_R0?AVEcReadMdbEvents50Rpc@@@8;

	// Token: 0x040000FE RID: 254
	[FixedAddressValueType]
	internal static $ArrayType$$$BY03Q6AXXZ ??_7EcDeleteUserInfo50Rpc@@6B@;

	// Token: 0x040000FF RID: 255 RVA: 0x0006E698 File Offset: 0x0006D898
	internal static method ??_7EcDeleteUserInfo50Rpc@@6B@$initializer$;

	// Token: 0x04000100 RID: 256 RVA: 0x00150820 File Offset: 0x0014FA20
	internal static _s__RTTICompleteObjectLocator2 ??_R4EcDeleteUserInfo50Rpc@@6B@;

	// Token: 0x04000101 RID: 257
	[FixedAddressValueType]
	internal static $ArrayType$$$BY03Q6AXXZ ??_7EcUpdateUserInfo50Rpc@@6B@;

	// Token: 0x04000102 RID: 258 RVA: 0x0006E690 File Offset: 0x0006D890
	internal static method ??_7EcUpdateUserInfo50Rpc@@6B@$initializer$;

	// Token: 0x04000103 RID: 259 RVA: 0x00150798 File Offset: 0x0014F998
	internal static _s__RTTICompleteObjectLocator2 ??_R4EcUpdateUserInfo50Rpc@@6B@;

	// Token: 0x04000104 RID: 260
	[FixedAddressValueType]
	internal static $ArrayType$$$BY03Q6AXXZ ??_7EcReadUserInfo50Rpc@@6B@;

	// Token: 0x04000105 RID: 261 RVA: 0x0006E688 File Offset: 0x0006D888
	internal static method ??_7EcReadUserInfo50Rpc@@6B@$initializer$;

	// Token: 0x04000106 RID: 262 RVA: 0x00150710 File Offset: 0x0014F910
	internal static _s__RTTICompleteObjectLocator2 ??_R4EcReadUserInfo50Rpc@@6B@;

	// Token: 0x04000107 RID: 263
	[FixedAddressValueType]
	internal static $ArrayType$$$BY03Q6AXXZ ??_7EcCreateUserInfo50Rpc@@6B@;

	// Token: 0x04000108 RID: 264 RVA: 0x0006E680 File Offset: 0x0006D880
	internal static method ??_7EcCreateUserInfo50Rpc@@6B@$initializer$;

	// Token: 0x04000109 RID: 265 RVA: 0x00150688 File Offset: 0x0014F888
	internal static _s__RTTICompleteObjectLocator2 ??_R4EcCreateUserInfo50Rpc@@6B@;

	// Token: 0x0400010A RID: 266
	[FixedAddressValueType]
	internal static $ArrayType$$$BY03Q6AXXZ ??_7EcAdminIntegrityCheckEx50Rpc@@6B@;

	// Token: 0x0400010B RID: 267 RVA: 0x0006E678 File Offset: 0x0006D878
	internal static method ??_7EcAdminIntegrityCheckEx50Rpc@@6B@$initializer$;

	// Token: 0x0400010C RID: 268 RVA: 0x00150600 File Offset: 0x0014F800
	internal static _s__RTTICompleteObjectLocator2 ??_R4EcAdminIntegrityCheckEx50Rpc@@6B@;

	// Token: 0x0400010D RID: 269
	[FixedAddressValueType]
	internal static $ArrayType$$$BY03Q6AXXZ ??_7EcForceNewLog50Rpc@@6B@;

	// Token: 0x0400010E RID: 270 RVA: 0x0006E670 File Offset: 0x0006D870
	internal static method ??_7EcForceNewLog50Rpc@@6B@$initializer$;

	// Token: 0x0400010F RID: 271 RVA: 0x00150578 File Offset: 0x0014F778
	internal static _s__RTTICompleteObjectLocator2 ??_R4EcForceNewLog50Rpc@@6B@;

	// Token: 0x04000110 RID: 272
	[FixedAddressValueType]
	internal static $ArrayType$$$BY03Q6AXXZ ??_7EcAdminPrePopulateCacheEx50Rpc@@6B@;

	// Token: 0x04000111 RID: 273 RVA: 0x0006E668 File Offset: 0x0006D868
	internal static method ??_7EcAdminPrePopulateCacheEx50Rpc@@6B@$initializer$;

	// Token: 0x04000112 RID: 274 RVA: 0x001504F0 File Offset: 0x0014F6F0
	internal static _s__RTTICompleteObjectLocator2 ??_R4EcAdminPrePopulateCacheEx50Rpc@@6B@;

	// Token: 0x04000113 RID: 275
	[FixedAddressValueType]
	internal static $ArrayType$$$BY03Q6AXXZ ??_7EcAdminGetPhysicalDatabaseInformation50Rpc@@6B@;

	// Token: 0x04000114 RID: 276 RVA: 0x0006E660 File Offset: 0x0006D860
	internal static method ??_7EcAdminGetPhysicalDatabaseInformation50Rpc@@6B@$initializer$;

	// Token: 0x04000115 RID: 277 RVA: 0x00150468 File Offset: 0x0014F668
	internal static _s__RTTICompleteObjectLocator2 ??_R4EcAdminGetPhysicalDatabaseInformation50Rpc@@6B@;

	// Token: 0x04000116 RID: 278
	[FixedAddressValueType]
	internal static $ArrayType$$$BY03Q6AXXZ ??_7EcAdminProcessSnapshotOperation50Rpc@@6B@;

	// Token: 0x04000117 RID: 279 RVA: 0x0006E658 File Offset: 0x0006D858
	internal static method ??_7EcAdminProcessSnapshotOperation50Rpc@@6B@$initializer$;

	// Token: 0x04000118 RID: 280 RVA: 0x001503E0 File Offset: 0x0014F5E0
	internal static _s__RTTICompleteObjectLocator2 ??_R4EcAdminProcessSnapshotOperation50Rpc@@6B@;

	// Token: 0x04000119 RID: 281
	[FixedAddressValueType]
	internal static $ArrayType$$$BY03Q6AXXZ ??_7EcAdminGetDatabaseProcessInfo50Rpc@@6B@;

	// Token: 0x0400011A RID: 282 RVA: 0x0006E650 File Offset: 0x0006D850
	internal static method ??_7EcAdminGetDatabaseProcessInfo50Rpc@@6B@$initializer$;

	// Token: 0x0400011B RID: 283 RVA: 0x00150358 File Offset: 0x0014F558
	internal static _s__RTTICompleteObjectLocator2 ??_R4EcAdminGetDatabaseProcessInfo50Rpc@@6B@;

	// Token: 0x0400011C RID: 284
	[FixedAddressValueType]
	internal static $ArrayType$$$BY03Q6AXXZ ??_7EcGetMultiMailboxSearchKeywordStatsRpc@@6B@;

	// Token: 0x0400011D RID: 285 RVA: 0x0006E648 File Offset: 0x0006D848
	internal static method ??_7EcGetMultiMailboxSearchKeywordStatsRpc@@6B@$initializer$;

	// Token: 0x0400011E RID: 286 RVA: 0x001502D0 File Offset: 0x0014F4D0
	internal static _s__RTTICompleteObjectLocator2 ??_R4EcGetMultiMailboxSearchKeywordStatsRpc@@6B@;

	// Token: 0x0400011F RID: 287
	[FixedAddressValueType]
	internal static $ArrayType$$$BY03Q6AXXZ ??_7EcMultiMailboxSearchRpc@@6B@;

	// Token: 0x04000120 RID: 288 RVA: 0x0006E640 File Offset: 0x0006D840
	internal static method ??_7EcMultiMailboxSearchRpc@@6B@$initializer$;

	// Token: 0x04000121 RID: 289 RVA: 0x00150248 File Offset: 0x0014F448
	internal static _s__RTTICompleteObjectLocator2 ??_R4EcMultiMailboxSearchRpc@@6B@;

	// Token: 0x04000122 RID: 290
	[FixedAddressValueType]
	internal static $ArrayType$$$BY03Q6AXXZ ??_7EcStartBlockModeReplicationToPassive50Rpc@@6B@;

	// Token: 0x04000123 RID: 291 RVA: 0x0006E638 File Offset: 0x0006D838
	internal static method ??_7EcStartBlockModeReplicationToPassive50Rpc@@6B@$initializer$;

	// Token: 0x04000124 RID: 292 RVA: 0x001501C0 File Offset: 0x0014F3C0
	internal static _s__RTTICompleteObjectLocator2 ??_R4EcStartBlockModeReplicationToPassive50Rpc@@6B@;

	// Token: 0x04000125 RID: 293
	[FixedAddressValueType]
	internal static $ArrayType$$$BY03Q6AXXZ ??_7EcAdminExecuteTask50Rpc@@6B@;

	// Token: 0x04000126 RID: 294 RVA: 0x0006E630 File Offset: 0x0006D830
	internal static method ??_7EcAdminExecuteTask50Rpc@@6B@$initializer$;

	// Token: 0x04000127 RID: 295 RVA: 0x00150138 File Offset: 0x0014F338
	internal static _s__RTTICompleteObjectLocator2 ??_R4EcAdminExecuteTask50Rpc@@6B@;

	// Token: 0x04000128 RID: 296
	[FixedAddressValueType]
	internal static $ArrayType$$$BY03Q6AXXZ ??_7EcAdminGetRestrictionTableEx50Rpc@@6B@;

	// Token: 0x04000129 RID: 297 RVA: 0x0006E628 File Offset: 0x0006D828
	internal static method ??_7EcAdminGetRestrictionTableEx50Rpc@@6B@$initializer$;

	// Token: 0x0400012A RID: 298 RVA: 0x001500B0 File Offset: 0x0014F2B0
	internal static _s__RTTICompleteObjectLocator2 ??_R4EcAdminGetRestrictionTableEx50Rpc@@6B@;

	// Token: 0x0400012B RID: 299
	[FixedAddressValueType]
	internal static $ArrayType$$$BY03Q6AXXZ ??_7EcAdminGetViewsTableEx50Rpc@@6B@;

	// Token: 0x0400012C RID: 300 RVA: 0x0006E620 File Offset: 0x0006D820
	internal static method ??_7EcAdminGetViewsTableEx50Rpc@@6B@$initializer$;

	// Token: 0x0400012D RID: 301 RVA: 0x00150028 File Offset: 0x0014F228
	internal static _s__RTTICompleteObjectLocator2 ??_R4EcAdminGetViewsTableEx50Rpc@@6B@;

	// Token: 0x0400012E RID: 302
	[FixedAddressValueType]
	internal static $ArrayType$$$BY03Q6AXXZ ??_7EcAdminISIntegCheck50Rpc@@6B@;

	// Token: 0x0400012F RID: 303 RVA: 0x0006E618 File Offset: 0x0006D818
	internal static method ??_7EcAdminISIntegCheck50Rpc@@6B@$initializer$;

	// Token: 0x04000130 RID: 304 RVA: 0x0014FFA0 File Offset: 0x0014F1A0
	internal static _s__RTTICompleteObjectLocator2 ??_R4EcAdminISIntegCheck50Rpc@@6B@;

	// Token: 0x04000131 RID: 305
	[FixedAddressValueType]
	internal static $ArrayType$$$BY03Q6AXXZ ??_7EcGetDatabaseSizeEx50Rpc@@6B@;

	// Token: 0x04000132 RID: 306 RVA: 0x0006E610 File Offset: 0x0006D810
	internal static method ??_7EcGetDatabaseSizeEx50Rpc@@6B@$initializer$;

	// Token: 0x04000133 RID: 307 RVA: 0x0014FF18 File Offset: 0x0014F118
	internal static _s__RTTICompleteObjectLocator2 ??_R4EcGetDatabaseSizeEx50Rpc@@6B@;

	// Token: 0x04000134 RID: 308
	[FixedAddressValueType]
	internal static $ArrayType$$$BY03Q6AXXZ ??_7EcAdminGetResourceMonitorDigest50Rpc@@6B@;

	// Token: 0x04000135 RID: 309 RVA: 0x0006E608 File Offset: 0x0006D808
	internal static method ??_7EcAdminGetResourceMonitorDigest50Rpc@@6B@$initializer$;

	// Token: 0x04000136 RID: 310 RVA: 0x0014FE90 File Offset: 0x0014F090
	internal static _s__RTTICompleteObjectLocator2 ??_R4EcAdminGetResourceMonitorDigest50Rpc@@6B@;

	// Token: 0x04000137 RID: 311
	[FixedAddressValueType]
	internal static $ArrayType$$$BY03Q6AXXZ ??_7EcAdminGetMailboxSignatureBasicInfo50Rpc@@6B@;

	// Token: 0x04000138 RID: 312 RVA: 0x0006E600 File Offset: 0x0006D800
	internal static method ??_7EcAdminGetMailboxSignatureBasicInfo50Rpc@@6B@$initializer$;

	// Token: 0x04000139 RID: 313 RVA: 0x0014FE08 File Offset: 0x0014F008
	internal static _s__RTTICompleteObjectLocator2 ??_R4EcAdminGetMailboxSignatureBasicInfo50Rpc@@6B@;

	// Token: 0x0400013A RID: 314
	[FixedAddressValueType]
	internal static $ArrayType$$$BY03Q6AXXZ ??_7EcAdminGetFeatureVersion50Rpc@@6B@;

	// Token: 0x0400013B RID: 315 RVA: 0x0006E5F8 File Offset: 0x0006D7F8
	internal static method ??_7EcAdminGetFeatureVersion50Rpc@@6B@$initializer$;

	// Token: 0x0400013C RID: 316 RVA: 0x0014FD80 File Offset: 0x0014EF80
	internal static _s__RTTICompleteObjectLocator2 ??_R4EcAdminGetFeatureVersion50Rpc@@6B@;

	// Token: 0x0400013D RID: 317
	[FixedAddressValueType]
	internal static $ArrayType$$$BY03Q6AXXZ ??_7EcAdminGetMailboxTableEntryFlags50Rpc@@6B@;

	// Token: 0x0400013E RID: 318 RVA: 0x0006E5F0 File Offset: 0x0006D7F0
	internal static method ??_7EcAdminGetMailboxTableEntryFlags50Rpc@@6B@$initializer$;

	// Token: 0x0400013F RID: 319 RVA: 0x0014FCF8 File Offset: 0x0014EEF8
	internal static _s__RTTICompleteObjectLocator2 ??_R4EcAdminGetMailboxTableEntryFlags50Rpc@@6B@;

	// Token: 0x04000140 RID: 320
	[FixedAddressValueType]
	internal static $ArrayType$$$BY03Q6AXXZ ??_7EcAdminGetMailboxTableEntry50Rpc@@6B@;

	// Token: 0x04000141 RID: 321 RVA: 0x0006E5E8 File Offset: 0x0006D7E8
	internal static method ??_7EcAdminGetMailboxTableEntry50Rpc@@6B@$initializer$;

	// Token: 0x04000142 RID: 322 RVA: 0x0014FC68 File Offset: 0x0014EE68
	internal static _s__RTTICompleteObjectLocator2 ??_R4EcAdminGetMailboxTableEntry50Rpc@@6B@;

	// Token: 0x04000143 RID: 323
	[FixedAddressValueType]
	internal static $ArrayType$$$BY03Q6AXXZ ??_7EcAdminGetMailboxTableEntry@@6B@;

	// Token: 0x04000144 RID: 324 RVA: 0x0006E5E0 File Offset: 0x0006D7E0
	internal static method ??_7EcAdminGetMailboxTableEntry@@6B@$initializer$;

	// Token: 0x04000145 RID: 325 RVA: 0x0014FBD8 File Offset: 0x0014EDD8
	internal static _s__RTTICompleteObjectLocator2 ??_R4EcAdminGetMailboxTableEntry@@6B@;

	// Token: 0x04000146 RID: 326
	[FixedAddressValueType]
	internal static $ArrayType$$$BY03Q6AXXZ ??_7EcGetLastBackupInfo50Rpc@@6B@;

	// Token: 0x04000147 RID: 327 RVA: 0x0006E5D8 File Offset: 0x0006D7D8
	internal static method ??_7EcGetLastBackupInfo50Rpc@@6B@$initializer$;

	// Token: 0x04000148 RID: 328 RVA: 0x0014FB50 File Offset: 0x0014ED50
	internal static _s__RTTICompleteObjectLocator2 ??_R4EcGetLastBackupInfo50Rpc@@6B@;

	// Token: 0x04000149 RID: 329
	[FixedAddressValueType]
	internal static $ArrayType$$$BY03Q6AXXZ ??_7EcDoMaintenanceTask50Rpc@@6B@;

	// Token: 0x0400014A RID: 330 RVA: 0x0006E5D0 File Offset: 0x0006D7D0
	internal static method ??_7EcDoMaintenanceTask50Rpc@@6B@$initializer$;

	// Token: 0x0400014B RID: 331 RVA: 0x0014FAC8 File Offset: 0x0014ECC8
	internal static _s__RTTICompleteObjectLocator2 ??_R4EcDoMaintenanceTask50Rpc@@6B@;

	// Token: 0x0400014C RID: 332
	[FixedAddressValueType]
	internal static $ArrayType$$$BY03Q6AXXZ ??_7EcGetMdbWatermarksForMailbox50Rpc@@6B@;

	// Token: 0x0400014D RID: 333 RVA: 0x0006E5C8 File Offset: 0x0006D7C8
	internal static method ??_7EcGetMdbWatermarksForMailbox50Rpc@@6B@$initializer$;

	// Token: 0x0400014E RID: 334 RVA: 0x0014FA40 File Offset: 0x0014EC40
	internal static _s__RTTICompleteObjectLocator2 ??_R4EcGetMdbWatermarksForMailbox50Rpc@@6B@;

	// Token: 0x0400014F RID: 335
	[FixedAddressValueType]
	internal static $ArrayType$$$BY03Q6AXXZ ??_7EcWriteMdbEvents50Rpc@@6B@;

	// Token: 0x04000150 RID: 336 RVA: 0x0006E5C0 File Offset: 0x0006D7C0
	internal static method ??_7EcWriteMdbEvents50Rpc@@6B@$initializer$;

	// Token: 0x04000151 RID: 337 RVA: 0x0014F9B8 File Offset: 0x0014EBB8
	internal static _s__RTTICompleteObjectLocator2 ??_R4EcWriteMdbEvents50Rpc@@6B@;

	// Token: 0x04000152 RID: 338
	[FixedAddressValueType]
	internal static $ArrayType$$$BY03Q6AXXZ ??_7EcGetMdbWatermarksForConsumer50Rpc@@6B@;

	// Token: 0x04000153 RID: 339 RVA: 0x0006E5B8 File Offset: 0x0006D7B8
	internal static method ??_7EcGetMdbWatermarksForConsumer50Rpc@@6B@$initializer$;

	// Token: 0x04000154 RID: 340 RVA: 0x0014F930 File Offset: 0x0014EB30
	internal static _s__RTTICompleteObjectLocator2 ??_R4EcGetMdbWatermarksForConsumer50Rpc@@6B@;

	// Token: 0x04000155 RID: 341
	[FixedAddressValueType]
	internal static $ArrayType$$$BY03Q6AXXZ ??_7EcSaveMdbWatermarks50Rpc@@6B@;

	// Token: 0x04000156 RID: 342 RVA: 0x0006E5B0 File Offset: 0x0006D7B0
	internal static method ??_7EcSaveMdbWatermarks50Rpc@@6B@$initializer$;

	// Token: 0x04000157 RID: 343 RVA: 0x0014F8A8 File Offset: 0x0014EAA8
	internal static _s__RTTICompleteObjectLocator2 ??_R4EcSaveMdbWatermarks50Rpc@@6B@;

	// Token: 0x04000158 RID: 344
	[FixedAddressValueType]
	internal static $ArrayType$$$BY03Q6AXXZ ??_7EcDeleteMdbWatermarksForMailbox50Rpc@@6B@;

	// Token: 0x04000159 RID: 345 RVA: 0x0006E5A8 File Offset: 0x0006D7A8
	internal static method ??_7EcDeleteMdbWatermarksForMailbox50Rpc@@6B@$initializer$;

	// Token: 0x0400015A RID: 346 RVA: 0x0014F820 File Offset: 0x0014EA20
	internal static _s__RTTICompleteObjectLocator2 ??_R4EcDeleteMdbWatermarksForMailbox50Rpc@@6B@;

	// Token: 0x0400015B RID: 347
	[FixedAddressValueType]
	internal static $ArrayType$$$BY03Q6AXXZ ??_7EcDeleteMdbWatermarksForConsumer50Rpc@@6B@;

	// Token: 0x0400015C RID: 348 RVA: 0x0006E5A0 File Offset: 0x0006D7A0
	internal static method ??_7EcDeleteMdbWatermarksForConsumer50Rpc@@6B@$initializer$;

	// Token: 0x0400015D RID: 349 RVA: 0x0014F798 File Offset: 0x0014E998
	internal static _s__RTTICompleteObjectLocator2 ??_R4EcDeleteMdbWatermarksForConsumer50Rpc@@6B@;

	// Token: 0x0400015E RID: 350
	[FixedAddressValueType]
	internal static $ArrayType$$$BY03Q6AXXZ ??_7EcSyncMailboxWithDS50Rpc@@6B@;

	// Token: 0x0400015F RID: 351 RVA: 0x0006E598 File Offset: 0x0006D798
	internal static method ??_7EcSyncMailboxWithDS50Rpc@@6B@$initializer$;

	// Token: 0x04000160 RID: 352 RVA: 0x0014F710 File Offset: 0x0014E910
	internal static _s__RTTICompleteObjectLocator2 ??_R4EcSyncMailboxWithDS50Rpc@@6B@;

	// Token: 0x04000161 RID: 353
	[FixedAddressValueType]
	internal static $ArrayType$$$BY03Q6AXXZ ??_7EcReadMdbEvents50Rpc@@6B@;

	// Token: 0x04000162 RID: 354 RVA: 0x0006E590 File Offset: 0x0006D790
	internal static method ??_7EcReadMdbEvents50Rpc@@6B@$initializer$;

	// Token: 0x04000163 RID: 355 RVA: 0x0014F688 File Offset: 0x0014E888
	internal static _s__RTTICompleteObjectLocator2 ??_R4EcReadMdbEvents50Rpc@@6B@;

	// Token: 0x04000164 RID: 356 RVA: 0x00159DE8 File Offset: 0x001587E8
	public static method __m2mep@??0EcReadMdbEvents50Rpc@@$$FQEAA@PEAXPEAU_GUID@@1KPEAEPEAKPEAPEAEK234@Z;

	// Token: 0x04000165 RID: 357 RVA: 0x001599C8 File Offset: 0x001583C8
	public static method __m2mep@?EcValidateParameters@EcReadMdbEvents50Rpc@@$$FUEAAJXZ;

	// Token: 0x04000166 RID: 358 RVA: 0x001599D8 File Offset: 0x001583D8
	public static method __m2mep@?EcDispatchCall@EcReadMdbEvents50Rpc@@$$FUEAMJPE$AAUIAdminRpcServer@AdminRpc@Rpc@Exchange@Microsoft@@PE$AAVClientSecurityContext@Authorization@Security@56@P$01EAEAE$CAP$01EAE@Z;

	// Token: 0x04000167 RID: 359 RVA: 0x00159798 File Offset: 0x00158198
	public static method __m2mep@?EcReadMdbEvents50_Managed@@$$FYAJPEAXPEAU_GUID@@1KPEAEPEAKPEAPEAEK234@Z;

	// Token: 0x04000168 RID: 360 RVA: 0x00159DF8 File Offset: 0x001587F8
	public static method __m2mep@??0EcSyncMailboxWithDS50Rpc@@$$FQEAA@PEAXPEAU_GUID@@1KPEAEPEAKPEAPEAE@Z;

	// Token: 0x04000169 RID: 361 RVA: 0x001599E8 File Offset: 0x001583E8
	public static method __m2mep@?EcValidateParameters@EcSyncMailboxWithDS50Rpc@@$$FUEAAJXZ;

	// Token: 0x0400016A RID: 362 RVA: 0x001599F8 File Offset: 0x001583F8
	public static method __m2mep@?EcDispatchCall@EcSyncMailboxWithDS50Rpc@@$$FUEAMJPE$AAUIAdminRpcServer@AdminRpc@Rpc@Exchange@Microsoft@@PE$AAVClientSecurityContext@Authorization@Security@56@P$01EAEAE$CAP$01EAE@Z;

	// Token: 0x0400016B RID: 363 RVA: 0x001597A8 File Offset: 0x001581A8
	public static method __m2mep@?EcSyncMailboxWithDS50_Managed@@$$FYAJPEAXPEAU_GUID@@1KPEAEPEAKPEAPEAE@Z;

	// Token: 0x0400016C RID: 364 RVA: 0x00159E08 File Offset: 0x00158808
	public static method __m2mep@??0EcDeleteMdbWatermarksForConsumer50Rpc@@$$FQEAA@PEAXPEAU_GUID@@111PEAKKPEAE2PEAPEAE@Z;

	// Token: 0x0400016D RID: 365 RVA: 0x00159A08 File Offset: 0x00158408
	public static method __m2mep@?EcValidateParameters@EcDeleteMdbWatermarksForConsumer50Rpc@@$$FUEAAJXZ;

	// Token: 0x0400016E RID: 366 RVA: 0x00159A18 File Offset: 0x00158418
	public static method __m2mep@?EcDispatchCall@EcDeleteMdbWatermarksForConsumer50Rpc@@$$FUEAMJPE$AAUIAdminRpcServer@AdminRpc@Rpc@Exchange@Microsoft@@PE$AAVClientSecurityContext@Authorization@Security@56@P$01EAEAE$CAP$01EAE@Z;

	// Token: 0x0400016F RID: 367 RVA: 0x001597B8 File Offset: 0x001581B8
	public static method __m2mep@?EcDeleteMdbWatermarksForConsumer50_Managed@@$$FYAJPEAXPEAU_GUID@@111PEAKKPEAE2PEAPEAE@Z;

	// Token: 0x04000170 RID: 368 RVA: 0x00159E18 File Offset: 0x00158818
	public static method __m2mep@??0EcDeleteMdbWatermarksForMailbox50Rpc@@$$FQEAA@PEAXPEAU_GUID@@11PEAKKPEAE2PEAPEAE@Z;

	// Token: 0x04000171 RID: 369 RVA: 0x00159A38 File Offset: 0x00158438
	public static method __m2mep@?EcValidateParameters@EcDeleteMdbWatermarksForMailbox50Rpc@@$$FUEAAJXZ;

	// Token: 0x04000172 RID: 370 RVA: 0x00159A48 File Offset: 0x00158448
	public static method __m2mep@?EcDispatchCall@EcDeleteMdbWatermarksForMailbox50Rpc@@$$FUEAMJPE$AAUIAdminRpcServer@AdminRpc@Rpc@Exchange@Microsoft@@PE$AAVClientSecurityContext@Authorization@Security@56@P$01EAEAE$CAP$01EAE@Z;

	// Token: 0x04000173 RID: 371 RVA: 0x001597C8 File Offset: 0x001581C8
	public static method __m2mep@?EcDeleteMdbWatermarksForMailbox50_Managed@@$$FYAJPEAXPEAU_GUID@@11PEAKKPEAE2PEAPEAE@Z;

	// Token: 0x04000174 RID: 372 RVA: 0x00159E28 File Offset: 0x00158828
	public static method __m2mep@??0EcSaveMdbWatermarks50Rpc@@$$FQEAA@PEAXPEAU_GUID@@1KPEAU__MIDL_mdbadmin50_0002@@KPEAEPEAKPEAPEAE@Z;

	// Token: 0x04000175 RID: 373 RVA: 0x00159A58 File Offset: 0x00158458
	public static method __m2mep@?EcValidateParameters@EcSaveMdbWatermarks50Rpc@@$$FUEAAJXZ;

	// Token: 0x04000176 RID: 374 RVA: 0x00159A68 File Offset: 0x00158468
	public static method __m2mep@?EcDispatchCall@EcSaveMdbWatermarks50Rpc@@$$FUEAMJPE$AAUIAdminRpcServer@AdminRpc@Rpc@Exchange@Microsoft@@PE$AAVClientSecurityContext@Authorization@Security@56@P$01EAEAE$CAP$01EAE@Z;

	// Token: 0x04000177 RID: 375 RVA: 0x001597D8 File Offset: 0x001581D8
	public static method __m2mep@?EcSaveMdbWatermarks50_Managed@@$$FYAJPEAXPEAU_GUID@@1KPEAU__MIDL_mdbadmin50_0002@@KPEAEPEAKPEAPEAE@Z;

	// Token: 0x04000178 RID: 376 RVA: 0x00159E38 File Offset: 0x00158838
	public static method __m2mep@??0EcGetMdbWatermarksForConsumer50Rpc@@$$FQEAA@PEAXPEAU_GUID@@111PEAKPEAPEAU__MIDL_mdbadmin50_0002@@KPEAE2PEAPEAE@Z;

	// Token: 0x04000179 RID: 377 RVA: 0x00159A78 File Offset: 0x00158478
	public static method __m2mep@?EcValidateParameters@EcGetMdbWatermarksForConsumer50Rpc@@$$FUEAAJXZ;

	// Token: 0x0400017A RID: 378 RVA: 0x00159A88 File Offset: 0x00158488
	public static method __m2mep@?EcDispatchCall@EcGetMdbWatermarksForConsumer50Rpc@@$$FUEAMJPE$AAUIAdminRpcServer@AdminRpc@Rpc@Exchange@Microsoft@@PE$AAVClientSecurityContext@Authorization@Security@56@P$01EAEAE$CAP$01EAE@Z;

	// Token: 0x0400017B RID: 379 RVA: 0x001597E8 File Offset: 0x001581E8
	public static method __m2mep@?EcGetMdbWatermarksForConsumer50_Managed@@$$FYAJPEAXPEAU_GUID@@111PEAKPEAPEAU__MIDL_mdbadmin50_0002@@KPEAE2PEAPEAE@Z;

	// Token: 0x0400017C RID: 380 RVA: 0x00159E48 File Offset: 0x00158848
	public static method __m2mep@??0EcWriteMdbEvents50Rpc@@$$FQEAA@PEAXPEAU_GUID@@1KPEAEPEAKPEAPEAEK234@Z;

	// Token: 0x0400017D RID: 381 RVA: 0x00159A98 File Offset: 0x00158498
	public static method __m2mep@?EcValidateParameters@EcWriteMdbEvents50Rpc@@$$FUEAAJXZ;

	// Token: 0x0400017E RID: 382 RVA: 0x00159AA8 File Offset: 0x001584A8
	public static method __m2mep@?EcDispatchCall@EcWriteMdbEvents50Rpc@@$$FUEAMJPE$AAUIAdminRpcServer@AdminRpc@Rpc@Exchange@Microsoft@@PE$AAVClientSecurityContext@Authorization@Security@56@P$01EAEAE$CAP$01EAE@Z;

	// Token: 0x0400017F RID: 383 RVA: 0x001597F8 File Offset: 0x001581F8
	public static method __m2mep@?EcWriteMdbEvents50_Managed@@$$FYAJPEAXPEAU_GUID@@1KPEAEPEAKPEAPEAEK234@Z;

	// Token: 0x04000180 RID: 384 RVA: 0x00159E58 File Offset: 0x00158858
	public static method __m2mep@??0EcGetMdbWatermarksForMailbox50Rpc@@$$FQEAA@PEAXPEAU_GUID@@11PEAKPEAPEAU__MIDL_mdbadmin50_0002@@KPEAE2PEAPEAE@Z;

	// Token: 0x04000181 RID: 385 RVA: 0x00159AB8 File Offset: 0x001584B8
	public static method __m2mep@?EcValidateParameters@EcGetMdbWatermarksForMailbox50Rpc@@$$FUEAAJXZ;

	// Token: 0x04000182 RID: 386 RVA: 0x00159AC8 File Offset: 0x001584C8
	public static method __m2mep@?EcDispatchCall@EcGetMdbWatermarksForMailbox50Rpc@@$$FUEAMJPE$AAUIAdminRpcServer@AdminRpc@Rpc@Exchange@Microsoft@@PE$AAVClientSecurityContext@Authorization@Security@56@P$01EAEAE$CAP$01EAE@Z;

	// Token: 0x04000183 RID: 387 RVA: 0x00159808 File Offset: 0x00158208
	public static method __m2mep@?EcGetMdbWatermarksForMailbox50_Managed@@$$FYAJPEAXPEAU_GUID@@11PEAKPEAPEAU__MIDL_mdbadmin50_0002@@KPEAE2PEAPEAE@Z;

	// Token: 0x04000184 RID: 388 RVA: 0x00159E68 File Offset: 0x00158868
	public static method __m2mep@??0EcDoMaintenanceTask50Rpc@@$$FQEAA@PEAXPEAU_GUID@@KKPEAEPEAKPEAPEAE@Z;

	// Token: 0x04000185 RID: 389 RVA: 0x00159AD8 File Offset: 0x001584D8
	public static method __m2mep@?EcValidateParameters@EcDoMaintenanceTask50Rpc@@$$FUEAAJXZ;

	// Token: 0x04000186 RID: 390 RVA: 0x00159AE8 File Offset: 0x001584E8
	public static method __m2mep@?EcDispatchCall@EcDoMaintenanceTask50Rpc@@$$FUEAMJPE$AAUIAdminRpcServer@AdminRpc@Rpc@Exchange@Microsoft@@PE$AAVClientSecurityContext@Authorization@Security@56@P$01EAEAE$CAP$01EAE@Z;

	// Token: 0x04000187 RID: 391 RVA: 0x00159818 File Offset: 0x00158218
	public static method __m2mep@?EcDoMaintenanceTask50_Managed@@$$FYAJPEAXPEAU_GUID@@KKPEAEPEAKPEAPEAE@Z;

	// Token: 0x04000188 RID: 392 RVA: 0x00159E78 File Offset: 0x00158878
	public static method __m2mep@??0EcGetLastBackupInfo50Rpc@@$$FQEAA@PEAXPEAU_GUID@@PEAU_FILETIME@@222PEAJ333KPEAEPEAKPEAPEAE@Z;

	// Token: 0x04000189 RID: 393 RVA: 0x00159AF8 File Offset: 0x001584F8
	public static method __m2mep@?EcValidateParameters@EcGetLastBackupInfo50Rpc@@$$FUEAAJXZ;

	// Token: 0x0400018A RID: 394 RVA: 0x00159B08 File Offset: 0x00158508
	public static method __m2mep@?EcDispatchCall@EcGetLastBackupInfo50Rpc@@$$FUEAMJPE$AAUIAdminRpcServer@AdminRpc@Rpc@Exchange@Microsoft@@PE$AAVClientSecurityContext@Authorization@Security@56@P$01EAEAE$CAP$01EAE@Z;

	// Token: 0x0400018B RID: 395 RVA: 0x00159828 File Offset: 0x00158228
	public static method __m2mep@?EcGetLastBackupInfo50_Managed@@$$FYAJPEAXPEAU_GUID@@PEAU_FILETIME@@222PEAJ333@Z;

	// Token: 0x0400018C RID: 396 RVA: 0x00159838 File Offset: 0x00158238
	public static method __m2mep@?EcGetLastBackupInfoEx50_Managed@@$$FYAJPEAXPEAU_GUID@@PEAU_FILETIME@@222PEAJ333KPEAEPEAKPEAPEAE@Z;

	// Token: 0x0400018D RID: 397 RVA: 0x00159E88 File Offset: 0x00158888
	public static method __m2mep@??0EcAdminGetMailboxTableEntry@@$$FQEAA@PEAXPEAU_GUID@@1PEAPEAEPEAK3KK3KPEAE32@Z;

	// Token: 0x0400018E RID: 398 RVA: 0x00159B18 File Offset: 0x00158518
	public static method __m2mep@?EcValidateParameters@EcAdminGetMailboxTableEntry@@$$FUEAAJXZ;

	// Token: 0x0400018F RID: 399 RVA: 0x00159E98 File Offset: 0x00158898
	public static method __m2mep@??0EcAdminGetMailboxTableEntry50Rpc@@$$FQEAA@PEAXPEAU_GUID@@1PEAPEAEPEAK3KK3KPEAE32@Z;

	// Token: 0x04000190 RID: 400 RVA: 0x00159B28 File Offset: 0x00158528
	public static method __m2mep@?EcDispatchCall@EcAdminGetMailboxTableEntry50Rpc@@$$FUEAMJPE$AAUIAdminRpcServer@AdminRpc@Rpc@Exchange@Microsoft@@PE$AAVClientSecurityContext@Authorization@Security@56@P$01EAEAE$CAP$01EAE@Z;

	// Token: 0x04000191 RID: 401 RVA: 0x00159848 File Offset: 0x00158248
	public static method __m2mep@?EcAdminGetMailboxTableEntry50_Managed@@$$FYAJPEAXPEAU_GUID@@1PEAPEAEPEAKQEAKKK3KPEAE32@Z;

	// Token: 0x04000192 RID: 402 RVA: 0x00159EA8 File Offset: 0x001588A8
	public static method __m2mep@??0EcAdminGetMailboxTableEntryFlags50Rpc@@$$FQEAA@PEAXPEAU_GUID@@1KPEAPEAEPEAK3KK3KPEAE32@Z;

	// Token: 0x04000193 RID: 403 RVA: 0x00159B38 File Offset: 0x00158538
	public static method __m2mep@?EcDispatchCall@EcAdminGetMailboxTableEntryFlags50Rpc@@$$FUEAMJPE$AAUIAdminRpcServer@AdminRpc@Rpc@Exchange@Microsoft@@PE$AAVClientSecurityContext@Authorization@Security@56@P$01EAEAE$CAP$01EAE@Z;

	// Token: 0x04000194 RID: 404 RVA: 0x00159858 File Offset: 0x00158258
	public static method __m2mep@?EcAdminGetMailboxTableEntryFlags50_Managed@@$$FYAJPEAXPEAU_GUID@@1KPEAPEAEPEAKQEAKKK3KPEAE32@Z;

	// Token: 0x04000195 RID: 405 RVA: 0x00159EB8 File Offset: 0x001588B8
	public static method __m2mep@??0EcAdminGetFeatureVersion50Rpc@@$$FQEAA@PEAXKPEAKKPEAE1PEAPEAE@Z;

	// Token: 0x04000196 RID: 406 RVA: 0x00159B48 File Offset: 0x00158548
	public static method __m2mep@?EcValidateParameters@EcAdminGetFeatureVersion50Rpc@@$$FUEAAJXZ;

	// Token: 0x04000197 RID: 407 RVA: 0x00159B58 File Offset: 0x00158558
	public static method __m2mep@?EcDispatchCall@EcAdminGetFeatureVersion50Rpc@@$$FUEAMJPE$AAUIAdminRpcServer@AdminRpc@Rpc@Exchange@Microsoft@@PE$AAVClientSecurityContext@Authorization@Security@56@P$01EAEAE$CAP$01EAE@Z;

	// Token: 0x04000198 RID: 408 RVA: 0x00159868 File Offset: 0x00158268
	public static method __m2mep@?EcAdminGetFeatureVersion50_Managed@@$$FYAJPEAXKPEAK@Z;

	// Token: 0x04000199 RID: 409 RVA: 0x00159878 File Offset: 0x00158278
	public static method __m2mep@?EcAdminGetFeatureVersionEx50_Managed@@$$FYAJPEAXKPEAKKPEAE1PEAPEAE@Z;

	// Token: 0x0400019A RID: 410 RVA: 0x00159EC8 File Offset: 0x001588C8
	public static method __m2mep@??0EcAdminGetMailboxSignatureBasicInfo50Rpc@@$$FQEAA@PEAXPEAU_GUID@@1KPEAKPEAPEAEKPEAE23@Z;

	// Token: 0x0400019B RID: 411 RVA: 0x00159B68 File Offset: 0x00158568
	public static method __m2mep@?EcDispatchCall@EcAdminGetMailboxSignatureBasicInfo50Rpc@@$$FUEAMJPE$AAUIAdminRpcServer@AdminRpc@Rpc@Exchange@Microsoft@@PE$AAVClientSecurityContext@Authorization@Security@56@P$01EAEAE$CAP$01EAE@Z;

	// Token: 0x0400019C RID: 412 RVA: 0x00159B78 File Offset: 0x00158578
	public static method __m2mep@?EcValidateParameters@EcAdminGetMailboxSignatureBasicInfo50Rpc@@$$FUEAAJXZ;

	// Token: 0x0400019D RID: 413 RVA: 0x00159888 File Offset: 0x00158288
	public static method __m2mep@?EcAdminGetMailboxSignatureBasicInfo50_Managed@@$$FYAJPEAXPEAU_GUID@@1KPEAKPEAPEAEKPEAE23@Z;

	// Token: 0x0400019E RID: 414 RVA: 0x00159ED8 File Offset: 0x001588D8
	public static method __m2mep@??0EcAdminGetResourceMonitorDigest50Rpc@@$$FQEAA@PEAXPEAU_GUID@@PEAPEAEPEAKQEAKK3KPEAE32@Z;

	// Token: 0x0400019F RID: 415 RVA: 0x00159B88 File Offset: 0x00158588
	public static method __m2mep@?EcDispatchCall@EcAdminGetResourceMonitorDigest50Rpc@@$$FUEAMJPE$AAUIAdminRpcServer@AdminRpc@Rpc@Exchange@Microsoft@@PE$AAVClientSecurityContext@Authorization@Security@56@P$01EAEAE$CAP$01EAE@Z;

	// Token: 0x040001A0 RID: 416 RVA: 0x00159B98 File Offset: 0x00158598
	public static method __m2mep@?EcValidateParameters@EcAdminGetResourceMonitorDigest50Rpc@@$$FUEAAJXZ;

	// Token: 0x040001A1 RID: 417 RVA: 0x00159898 File Offset: 0x00158298
	public static method __m2mep@?EcAdminGetResourceMonitorDigest50_Managed@@$$FYAJPEAXPEAU_GUID@@PEAPEAEPEAKQEAKK3KPEAE32@Z;

	// Token: 0x040001A2 RID: 418 RVA: 0x00159EE8 File Offset: 0x001588E8
	public static method __m2mep@??0EcGetDatabaseSizeEx50Rpc@@$$FQEAA@PEAXPEAU_GUID@@PEAK22KPEAE2PEAPEAE@Z;

	// Token: 0x040001A3 RID: 419 RVA: 0x00159BA8 File Offset: 0x001585A8
	public static method __m2mep@?EcValidateParameters@EcGetDatabaseSizeEx50Rpc@@$$FUEAAJXZ;

	// Token: 0x040001A4 RID: 420 RVA: 0x00159BB8 File Offset: 0x001585B8
	public static method __m2mep@?EcDispatchCall@EcGetDatabaseSizeEx50Rpc@@$$FUEAMJPE$AAUIAdminRpcServer@AdminRpc@Rpc@Exchange@Microsoft@@PE$AAVClientSecurityContext@Authorization@Security@56@P$01EAEAE$CAP$01EAE@Z;

	// Token: 0x040001A5 RID: 421 RVA: 0x001598A8 File Offset: 0x001582A8
	public static method __m2mep@?EcGetDatabaseSizeEx50_Managed@@$$FYAJPEAXPEAU_GUID@@PEAK22KPEAE2PEAPEAE@Z;

	// Token: 0x040001A6 RID: 422 RVA: 0x00159EF8 File Offset: 0x001588F8
	public static method __m2mep@??0EcAdminISIntegCheck50Rpc@@$$FQEAA@PEAXPEAU_GUID@@1KKPEAKPEAPEAEKPEAE23@Z;

	// Token: 0x040001A7 RID: 423 RVA: 0x00159BC8 File Offset: 0x001585C8
	public static method __m2mep@?EcDispatchCall@EcAdminISIntegCheck50Rpc@@$$FUEAMJPE$AAUIAdminRpcServer@AdminRpc@Rpc@Exchange@Microsoft@@PE$AAVClientSecurityContext@Authorization@Security@56@P$01EAEAE$CAP$01EAE@Z;

	// Token: 0x040001A8 RID: 424 RVA: 0x00159BD8 File Offset: 0x001585D8
	public static method __m2mep@?EcValidateParameters@EcAdminISIntegCheck50Rpc@@$$FUEAAJXZ;

	// Token: 0x040001A9 RID: 425 RVA: 0x001598B8 File Offset: 0x001582B8
	public static method __m2mep@?EcAdminISIntegCheck50_Managed@@$$FYAJPEAXPEAU_GUID@@1KKPEAKPEAPEAEKPEAE23@Z;

	// Token: 0x040001AA RID: 426 RVA: 0x00159F08 File Offset: 0x00158908
	public static method __m2mep@??0EcAdminGetViewsTableEx50Rpc@@$$FQEAA@PEAXPEAU_GUID@@1PEAPEAEPEAKU_ltid@@3K3KPEAE32@Z;

	// Token: 0x040001AB RID: 427 RVA: 0x00159BE8 File Offset: 0x001585E8
	public static method __m2mep@?EcValidateParameters@EcAdminGetViewsTableEx50Rpc@@$$FUEAAJXZ;

	// Token: 0x040001AC RID: 428 RVA: 0x00159BF8 File Offset: 0x001585F8
	public static method __m2mep@?EcDispatchCall@EcAdminGetViewsTableEx50Rpc@@$$FUEAMJPE$AAUIAdminRpcServer@AdminRpc@Rpc@Exchange@Microsoft@@PE$AAVClientSecurityContext@Authorization@Security@56@P$01EAEAE$CAP$01EAE@Z;

	// Token: 0x040001AD RID: 429 RVA: 0x001598C8 File Offset: 0x001582C8
	public static method __m2mep@?EcAdminGetViewsTableEx50_Managed@@$$FYAJPEAXPEAU_GUID@@1JU_ltid@@PEAPEAEPEAKQEAKK4KPEAE43@Z;

	// Token: 0x040001AE RID: 430 RVA: 0x00159F18 File Offset: 0x00158918
	public static method __m2mep@??0EcAdminGetRestrictionTableEx50Rpc@@$$FQEAA@PEAXPEAU_GUID@@1PEAPEAEPEAKU_ltid@@3K3KPEAE32@Z;

	// Token: 0x040001AF RID: 431 RVA: 0x00159C08 File Offset: 0x00158608
	public static method __m2mep@?EcValidateParameters@EcAdminGetRestrictionTableEx50Rpc@@$$FUEAAJXZ;

	// Token: 0x040001B0 RID: 432 RVA: 0x00159C18 File Offset: 0x00158618
	public static method __m2mep@?EcDispatchCall@EcAdminGetRestrictionTableEx50Rpc@@$$FUEAMJPE$AAUIAdminRpcServer@AdminRpc@Rpc@Exchange@Microsoft@@PE$AAVClientSecurityContext@Authorization@Security@56@P$01EAEAE$CAP$01EAE@Z;

	// Token: 0x040001B1 RID: 433 RVA: 0x001598D8 File Offset: 0x001582D8
	public static method __m2mep@?EcAdminGetRestrictionTableEx50_Managed@@$$FYAJPEAXPEAU_GUID@@1JU_ltid@@PEAPEAEPEAKQEAKK4KPEAE43@Z;

	// Token: 0x040001B2 RID: 434 RVA: 0x00159F28 File Offset: 0x00158928
	public static method __m2mep@??0EcAdminExecuteTask50Rpc@@$$FQEAA@PEAXPEAU_GUID@@1JKPEAEPEAKPEAPEAE@Z;

	// Token: 0x040001B3 RID: 435 RVA: 0x00159C28 File Offset: 0x00158628
	public static method __m2mep@?EcValidateParameters@EcAdminExecuteTask50Rpc@@$$FUEAAJXZ;

	// Token: 0x040001B4 RID: 436 RVA: 0x00159C38 File Offset: 0x00158638
	public static method __m2mep@?EcDispatchCall@EcAdminExecuteTask50Rpc@@$$FUEAMJPE$AAUIAdminRpcServer@AdminRpc@Rpc@Exchange@Microsoft@@PE$AAVClientSecurityContext@Authorization@Security@56@P$01EAEAE$CAP$01EAE@Z;

	// Token: 0x040001B5 RID: 437 RVA: 0x001598E8 File Offset: 0x001582E8
	public static method __m2mep@?EcAdminExecuteTask50_Managed@@$$FYAJPEAXPEAU_GUID@@1JJKPEAEPEAKPEAPEAE@Z;

	// Token: 0x040001B6 RID: 438 RVA: 0x00159678 File Offset: 0x00158078
	public static method __m2mep@?EcListAllMdbStatus50_Managed@@$$FYAXPEAU_RPC_ASYNC_STATE@@PEAXHPEAK2PEAPEAEKPEAE23@Z;

	// Token: 0x040001B7 RID: 439 RVA: 0x00159688 File Offset: 0x00158088
	public static method __m2mep@?EcListMdbStatus50_Managed@@$$FYAJPEAXKQEAU_GUID@@QEAKKPEAEPEAKPEAPEAE@Z;

	// Token: 0x040001B8 RID: 440 RVA: 0x00159698 File Offset: 0x00158098
	public static method __m2mep@?EcAdminGetCnctTable50_Managed@@$$FYAJPEAXPEAU_GUID@@JPEAPEAEPEAKQEAKKK3KPEAE32@Z;

	// Token: 0x040001B9 RID: 441 RVA: 0x001596A8 File Offset: 0x001580A8
	public static method __m2mep@?EcGetLastBackupTimesEx50_Managed@@$$FYAJPEAXPEAU_GUID@@PEAU_FILETIME@@2KPEAEPEAKPEAPEAE@Z;

	// Token: 0x040001BA RID: 442 RVA: 0x001596B8 File Offset: 0x001580B8
	public static method __m2mep@?EcClearAbsentInDsFlagOnMailbox50_Managed@@$$FYAJPEAXPEAU_GUID@@1KPEAEPEAKPEAPEAE@Z;

	// Token: 0x040001BB RID: 443 RVA: 0x001596C8 File Offset: 0x001580C8
	public static method __m2mep@?EcPurgeCachedMailboxObject50_Managed@@$$FYAJPEAXPEAU_GUID@@KPEAEPEAKPEAPEAE@Z;

	// Token: 0x040001BC RID: 444 RVA: 0x001596D8 File Offset: 0x001580D8
	public static method __m2mep@?EcSyncMailboxesWithDS50_Managed@@$$FYAJPEAXPEAU_GUID@@KPEAEPEAKPEAPEAE@Z;

	// Token: 0x040001BD RID: 445 RVA: 0x001596E8 File Offset: 0x001580E8
	public static method __m2mep@?EcAdminDeletePrivateMailbox50_Managed@@$$FYAJPEAXPEAU_GUID@@1KKPEAEPEAKPEAPEAE@Z;

	// Token: 0x040001BE RID: 446 RVA: 0x001596F8 File Offset: 0x001580F8
	public static method __m2mep@?EcSetMailboxSecurityDescriptor50_Managed@@$$FYAJPEAXPEAU_GUID@@1PEAEKK2PEAKPEAPEAE@Z;

	// Token: 0x040001BF RID: 447 RVA: 0x00159708 File Offset: 0x00158108
	public static method __m2mep@?EcGetMailboxSecurityDescriptor50_Managed@@$$FYAJPEAXPEAU_GUID@@1PEAPEAEPEAKKPEAE32@Z;

	// Token: 0x040001C0 RID: 448 RVA: 0x00159718 File Offset: 0x00158118
	public static method __m2mep@?EcAdminGetLogonTable50_Managed@@$$FYAJPEAXPEAU_GUID@@JPEAPEAEPEAKQEAKKK3KPEAE32@Z;

	// Token: 0x040001C1 RID: 449 RVA: 0x00159728 File Offset: 0x00158128
	public static method __m2mep@?EcMountDatabase50_Managed@@$$FYAJPEAXPEAU_GUID@@1KKPEAEPEAKPEAPEAE@Z;

	// Token: 0x040001C2 RID: 450 RVA: 0x00159738 File Offset: 0x00158138
	public static method __m2mep@?EcUnmountDatabase50_Managed@@$$FYAJPEAXPEAU_GUID@@1HKPEAEPEAKPEAPEAE@Z;

	// Token: 0x040001C3 RID: 451 RVA: 0x00159F38 File Offset: 0x00158938
	public static method __m2mep@??0EcStartBlockModeReplicationToPassive50Rpc@@$$FQEAA@PEAXPEAU_GUID@@PEAGKKPEAEPEAKPEAPEAE@Z;

	// Token: 0x040001C4 RID: 452 RVA: 0x00159C48 File Offset: 0x00158648
	public static method __m2mep@?EcValidateParameters@EcStartBlockModeReplicationToPassive50Rpc@@$$FUEAAJXZ;

	// Token: 0x040001C5 RID: 453 RVA: 0x00159C58 File Offset: 0x00158658
	public static method __m2mep@?EcDispatchCall@EcStartBlockModeReplicationToPassive50Rpc@@$$FUEAMJPE$AAUIAdminRpcServer@AdminRpc@Rpc@Exchange@Microsoft@@PE$AAVClientSecurityContext@Authorization@Security@56@P$01EAEAE$CAP$01EAE@Z;

	// Token: 0x040001C6 RID: 454 RVA: 0x001598F8 File Offset: 0x001582F8
	public static method __m2mep@?EcStartBlockModeReplicationToPassive50_Managed@@$$FYAJPEAXPEAU_GUID@@PEAGKKPEAEPEAKPEAPEAE@Z;

	// Token: 0x040001C7 RID: 455 RVA: 0x00159748 File Offset: 0x00158148
	public static method __m2mep@?EcAdminSetMailboxBasicInfo50_Managed@@$$FYAJPEAXPEAU_GUID@@1QEADKKPEAEPEAKPEAPEAE@Z;

	// Token: 0x040001C8 RID: 456 RVA: 0x00159758 File Offset: 0x00158158
	public static method __m2mep@?EcPurgeCachedMdbObject50_Managed@@$$FYAJPEAXPEAU_GUID@@KPEAEPEAKPEAPEAE@Z;

	// Token: 0x040001C9 RID: 457 RVA: 0x00159768 File Offset: 0x00158168
	public static method __m2mep@?EcAdminGetMailboxTable50_Managed@@$$FYAJPEAXPEAU_GUID@@JPEAPEAEPEAKQEAKKK3KPEAE32@Z;

	// Token: 0x040001CA RID: 458 RVA: 0x00159778 File Offset: 0x00158178
	public static method __m2mep@?EcAdminNotifyOnDSChange50_Managed@@$$FYAJPEAXPEAU_GUID@@1KKPEAEPEAKPEAPEAE@Z;

	// Token: 0x040001CB RID: 459 RVA: 0x00159788 File Offset: 0x00158188
	public static method __m2mep@?EcLogReplayRequestEx2_Managed@@$$FYAJPEAXPEAU_GUID@@KKPEAK2PEAPEAE223232PEAPEAKKPEAE23@Z;

	// Token: 0x040001CC RID: 460 RVA: 0x00159F48 File Offset: 0x00158948
	public static method __m2mep@??0EcMultiMailboxSearchRpc@@$$FQEAA@PEAXPEAU_GUID@@KPEAEK2PEAKPEAPEAE34@Z;

	// Token: 0x040001CD RID: 461 RVA: 0x00159C68 File Offset: 0x00158668
	public static method __m2mep@?EcValidateParameters@EcMultiMailboxSearchRpc@@$$FUEAAJXZ;

	// Token: 0x040001CE RID: 462 RVA: 0x00159C78 File Offset: 0x00158678
	public static method __m2mep@?EcDispatchCall@EcMultiMailboxSearchRpc@@$$FUEAMJPE$AAUIAdminRpcServer@AdminRpc@Rpc@Exchange@Microsoft@@PE$AAVClientSecurityContext@Authorization@Security@56@P$01EAEAE$CAP$01EAE@Z;

	// Token: 0x040001CF RID: 463 RVA: 0x00159908 File Offset: 0x00158308
	public static method __m2mep@?EcMultiMailboxSearch_Managed@@$$FYAJPEAXPEAU_GUID@@KPEAEPEAKPEAPEAEK234@Z;

	// Token: 0x040001D0 RID: 464 RVA: 0x00159F58 File Offset: 0x00158958
	public static method __m2mep@??0EcGetMultiMailboxSearchKeywordStatsRpc@@$$FQEAA@PEAXPEAU_GUID@@KPEAEK2PEAKPEAPEAE34@Z;

	// Token: 0x040001D1 RID: 465 RVA: 0x00159C88 File Offset: 0x00158688
	public static method __m2mep@?EcValidateParameters@EcGetMultiMailboxSearchKeywordStatsRpc@@$$FUEAAJXZ;

	// Token: 0x040001D2 RID: 466 RVA: 0x00159C98 File Offset: 0x00158698
	public static method __m2mep@?EcDispatchCall@EcGetMultiMailboxSearchKeywordStatsRpc@@$$FUEAMJPE$AAUIAdminRpcServer@AdminRpc@Rpc@Exchange@Microsoft@@PE$AAVClientSecurityContext@Authorization@Security@56@P$01EAEAE$CAP$01EAE@Z;

	// Token: 0x040001D3 RID: 467 RVA: 0x00159918 File Offset: 0x00158318
	public static method __m2mep@?EcGetMultiMailboxSearchKeywordStats_Managed@@$$FYAJPEAXPEAU_GUID@@KPEAEPEAKPEAPEAEK234@Z;

	// Token: 0x040001D4 RID: 468 RVA: 0x00159F68 File Offset: 0x00158968
	public static method __m2mep@??0EcAdminGetDatabaseProcessInfo50Rpc@@$$FQEAA@PEAXPEAU_GUID@@KQEAKPEAPEAEPEAK4KPEAE43@Z;

	// Token: 0x040001D5 RID: 469 RVA: 0x00159CA8 File Offset: 0x001586A8
	public static method __m2mep@?EcValidateParameters@EcAdminGetDatabaseProcessInfo50Rpc@@$$FUEAAJXZ;

	// Token: 0x040001D6 RID: 470 RVA: 0x00159CB8 File Offset: 0x001586B8
	public static method __m2mep@?EcDispatchCall@EcAdminGetDatabaseProcessInfo50Rpc@@$$FUEAMJPE$AAUIAdminRpcServer@AdminRpc@Rpc@Exchange@Microsoft@@PE$AAVClientSecurityContext@Authorization@Security@56@P$01EAEAE$CAP$01EAE@Z;

	// Token: 0x040001D7 RID: 471 RVA: 0x00159928 File Offset: 0x00158328
	public static method __m2mep@?EcAdminGetDatabaseProcessInfo50_Managed@@$$FYAJPEAXPEAU_GUID@@KQEAKPEAPEAEPEAK4KPEAE43@Z;

	// Token: 0x040001D8 RID: 472 RVA: 0x00159F78 File Offset: 0x00158978
	public static method __m2mep@??0EcAdminProcessSnapshotOperation50Rpc@@$$FQEAA@PEAXPEAU_GUID@@KKKPEAEPEAKPEAPEAE@Z;

	// Token: 0x040001D9 RID: 473 RVA: 0x00159CC8 File Offset: 0x001586C8
	public static method __m2mep@?EcValidateParameters@EcAdminProcessSnapshotOperation50Rpc@@$$FUEAAJXZ;

	// Token: 0x040001DA RID: 474 RVA: 0x00159CD8 File Offset: 0x001586D8
	public static method __m2mep@?EcDispatchCall@EcAdminProcessSnapshotOperation50Rpc@@$$FUEAMJPE$AAUIAdminRpcServer@AdminRpc@Rpc@Exchange@Microsoft@@PE$AAVClientSecurityContext@Authorization@Security@56@P$01EAEAE$CAP$01EAE@Z;

	// Token: 0x040001DB RID: 475 RVA: 0x00159938 File Offset: 0x00158338
	public static method __m2mep@?EcAdminProcessSnapshotOperation50_Managed@@$$FYAJPEAXPEAU_GUID@@KKKPEAEPEAKPEAPEAE@Z;

	// Token: 0x040001DC RID: 476 RVA: 0x00159F88 File Offset: 0x00158988
	public static method __m2mep@??0EcAdminGetPhysicalDatabaseInformation50Rpc@@$$FQEAA@PEAXPEAU_GUID@@PEAKPEAPEAEKPEAE23@Z;

	// Token: 0x040001DD RID: 477 RVA: 0x00159CE8 File Offset: 0x001586E8
	public static method __m2mep@?EcValidateParameters@EcAdminGetPhysicalDatabaseInformation50Rpc@@$$FUEAAJXZ;

	// Token: 0x040001DE RID: 478 RVA: 0x00159CF8 File Offset: 0x001586F8
	public static method __m2mep@?EcDispatchCall@EcAdminGetPhysicalDatabaseInformation50Rpc@@$$FUEAMJPE$AAUIAdminRpcServer@AdminRpc@Rpc@Exchange@Microsoft@@PE$AAVClientSecurityContext@Authorization@Security@56@P$01EAEAE$CAP$01EAE@Z;

	// Token: 0x040001DF RID: 479 RVA: 0x00159948 File Offset: 0x00158348
	public static method __m2mep@?EcAdminGetPhysicalDatabaseInformation50_Managed@@$$FYAJPEAXPEAU_GUID@@PEAKPEAPEAEKPEAE23@Z;

	// Token: 0x040001E0 RID: 480 RVA: 0x00159F98 File Offset: 0x00158998
	public static method __m2mep@??0EcAdminPrePopulateCacheEx50Rpc@@$$FQEAA@PEAXPEAU_GUID@@1KPEAE2K2PEAKPEAPEAE@Z;

	// Token: 0x040001E1 RID: 481 RVA: 0x00159D08 File Offset: 0x00158708
	public static method __m2mep@?EcValidateParameters@EcAdminPrePopulateCacheEx50Rpc@@$$FUEAAJXZ;

	// Token: 0x040001E2 RID: 482 RVA: 0x00159D18 File Offset: 0x00158718
	public static method __m2mep@?EcDispatchCall@EcAdminPrePopulateCacheEx50Rpc@@$$FUEAMJPE$AAUIAdminRpcServer@AdminRpc@Rpc@Exchange@Microsoft@@PE$AAVClientSecurityContext@Authorization@Security@56@P$01EAEAE$CAP$01EAE@Z;

	// Token: 0x040001E3 RID: 483 RVA: 0x00159958 File Offset: 0x00158358
	public static method __m2mep@?EcAdminPrePopulateCacheEx50_Managed@@$$FYAJPEAXPEAU_GUID@@1KPEAE2K2PEAKPEAPEAE@Z;

	// Token: 0x040001E4 RID: 484 RVA: 0x00159FA8 File Offset: 0x001589A8
	public static method __m2mep@??0EcForceNewLog50Rpc@@$$FQEAA@PEAXPEAU_GUID@@KPEAEPEAKPEAPEAE@Z;

	// Token: 0x040001E5 RID: 485 RVA: 0x00159D28 File Offset: 0x00158728
	public static method __m2mep@?EcValidateParameters@EcForceNewLog50Rpc@@$$FUEAAJXZ;

	// Token: 0x040001E6 RID: 486 RVA: 0x00159D38 File Offset: 0x00158738
	public static method __m2mep@?EcDispatchCall@EcForceNewLog50Rpc@@$$FUEAMJPE$AAUIAdminRpcServer@AdminRpc@Rpc@Exchange@Microsoft@@PE$AAVClientSecurityContext@Authorization@Security@56@P$01EAEAE$CAP$01EAE@Z;

	// Token: 0x040001E7 RID: 487 RVA: 0x00159968 File Offset: 0x00158368
	public static method __m2mep@?EcForceNewLog50_Managed@@$$FYAJPEAXPEAU_GUID@@KPEAEPEAKPEAPEAE@Z;

	// Token: 0x040001E8 RID: 488 RVA: 0x00159FB8 File Offset: 0x001589B8
	public static method __m2mep@??0EcAdminIntegrityCheckEx50Rpc@@$$FQEAA@PEAXPEAU_GUID@@1KKQEAEPEAKPEAPEAEK234@Z;

	// Token: 0x040001E9 RID: 489 RVA: 0x00159D48 File Offset: 0x00158748
	public static method __m2mep@?EcDispatchCall@EcAdminIntegrityCheckEx50Rpc@@$$FUEAMJPE$AAUIAdminRpcServer@AdminRpc@Rpc@Exchange@Microsoft@@PE$AAVClientSecurityContext@Authorization@Security@56@P$01EAEAE$CAP$01EAE@Z;

	// Token: 0x040001EA RID: 490 RVA: 0x00159D58 File Offset: 0x00158758
	public static method __m2mep@?EcValidateParameters@EcAdminIntegrityCheckEx50Rpc@@$$FUEAAJXZ;

	// Token: 0x040001EB RID: 491 RVA: 0x00159978 File Offset: 0x00158378
	public static method __m2mep@?EcAdminIntegrityCheckEx50_Managed@@$$FYAJPEAXPEAU_GUID@@1KKQEAEPEAKPEAPEAEK234@Z;

	// Token: 0x040001EC RID: 492 RVA: 0x00159FC8 File Offset: 0x001589C8
	public static method __m2mep@??0EcCreateUserInfo50Rpc@@$$FQEAA@PEAXPEAU_GUID@@1KKQEAEK2PEAKPEAPEAE@Z;

	// Token: 0x040001ED RID: 493 RVA: 0x00159D68 File Offset: 0x00158768
	public static method __m2mep@?EcDispatchCall@EcCreateUserInfo50Rpc@@$$FUEAMJPE$AAUIAdminRpcServer@AdminRpc@Rpc@Exchange@Microsoft@@PE$AAVClientSecurityContext@Authorization@Security@56@P$01EAEAE$CAP$01EAE@Z;

	// Token: 0x040001EE RID: 494 RVA: 0x00159D78 File Offset: 0x00158778
	public static method __m2mep@?EcValidateParameters@EcCreateUserInfo50Rpc@@$$FUEAAJXZ;

	// Token: 0x040001EF RID: 495 RVA: 0x00159988 File Offset: 0x00158388
	public static method __m2mep@?EcCreateUserInfo50_Managed@@$$FYAJPEAXPEAU_GUID@@1KKQEAEK2PEAKPEAPEAE@Z;

	// Token: 0x040001F0 RID: 496 RVA: 0x00159FD8 File Offset: 0x001589D8
	public static method __m2mep@??0EcReadUserInfo50Rpc@@$$FQEAA@PEAXPEAU_GUID@@1KKQEAKPEAKPEAPEAEKQEAE34@Z;

	// Token: 0x040001F1 RID: 497 RVA: 0x00159D88 File Offset: 0x00158788
	public static method __m2mep@?EcDispatchCall@EcReadUserInfo50Rpc@@$$FUEAMJPE$AAUIAdminRpcServer@AdminRpc@Rpc@Exchange@Microsoft@@PE$AAVClientSecurityContext@Authorization@Security@56@P$01EAEAE$CAP$01EAE@Z;

	// Token: 0x040001F2 RID: 498 RVA: 0x00159D98 File Offset: 0x00158798
	public static method __m2mep@?EcValidateParameters@EcReadUserInfo50Rpc@@$$FUEAAJXZ;

	// Token: 0x040001F3 RID: 499 RVA: 0x00159998 File Offset: 0x00158398
	public static method __m2mep@?EcReadUserInfo50_Managed@@$$FYAJPEAXPEAU_GUID@@1KKQEAKPEAKPEAPEAEKQEAE34@Z;

	// Token: 0x040001F4 RID: 500 RVA: 0x00159FE8 File Offset: 0x001589E8
	public static method __m2mep@??0EcUpdateUserInfo50Rpc@@$$FQEAA@PEAXPEAU_GUID@@1KKQEAEKQEAKK2PEAKPEAPEAE@Z;

	// Token: 0x040001F5 RID: 501 RVA: 0x00159DA8 File Offset: 0x001587A8
	public static method __m2mep@?EcDispatchCall@EcUpdateUserInfo50Rpc@@$$FUEAMJPE$AAUIAdminRpcServer@AdminRpc@Rpc@Exchange@Microsoft@@PE$AAVClientSecurityContext@Authorization@Security@56@P$01EAEAE$CAP$01EAE@Z;

	// Token: 0x040001F6 RID: 502 RVA: 0x00159DB8 File Offset: 0x001587B8
	public static method __m2mep@?EcValidateParameters@EcUpdateUserInfo50Rpc@@$$FUEAAJXZ;

	// Token: 0x040001F7 RID: 503 RVA: 0x001599A8 File Offset: 0x001583A8
	public static method __m2mep@?EcUpdateUserInfo50_Managed@@$$FYAJPEAXPEAU_GUID@@1KKQEAEKQEAKK2PEAKPEAPEAE@Z;

	// Token: 0x040001F8 RID: 504 RVA: 0x00159FF8 File Offset: 0x001589F8
	public static method __m2mep@??0EcDeleteUserInfo50Rpc@@$$FQEAA@PEAXPEAU_GUID@@1KKQEAEPEAKPEAPEAE@Z;

	// Token: 0x040001F9 RID: 505 RVA: 0x00159DC8 File Offset: 0x001587C8
	public static method __m2mep@?EcDispatchCall@EcDeleteUserInfo50Rpc@@$$FUEAMJPE$AAUIAdminRpcServer@AdminRpc@Rpc@Exchange@Microsoft@@PE$AAVClientSecurityContext@Authorization@Security@56@P$01EAEAE$CAP$01EAE@Z;

	// Token: 0x040001FA RID: 506 RVA: 0x00159DD8 File Offset: 0x001587D8
	public static method __m2mep@?EcValidateParameters@EcDeleteUserInfo50Rpc@@$$FUEAAJXZ;

	// Token: 0x040001FB RID: 507 RVA: 0x001599B8 File Offset: 0x001583B8
	public static method __m2mep@?EcDeleteUserInfo50_Managed@@$$FYAJPEAXPEAU_GUID@@1KKQEAEPEAKPEAPEAE@Z;

	// Token: 0x040001FC RID: 508 RVA: 0x00159A28 File Offset: 0x00158428
	public static method __m2mep@?GUIDFromGuid@?A0xb7ce48f7@Rpc@Exchange@Microsoft@@$$FYM?AU_GUID@@PE$AAVGuid@System@@@Z;

	// Token: 0x040001FD RID: 509 RVA: 0x0006E9E8 File Offset: 0x0006DBE8
	public unsafe static int** __unep@?EcValidateParameters@EcReadMdbEvents50Rpc@@$$FUEAAJXZ;

	// Token: 0x040001FE RID: 510 RVA: 0x0006E9F0 File Offset: 0x0006DBF0
	public unsafe static int** __unep@?EcValidateParameters@EcSyncMailboxWithDS50Rpc@@$$FUEAAJXZ;

	// Token: 0x040001FF RID: 511 RVA: 0x0006E9F8 File Offset: 0x0006DBF8
	public unsafe static int** __unep@?EcValidateParameters@EcDeleteMdbWatermarksForConsumer50Rpc@@$$FUEAAJXZ;

	// Token: 0x04000200 RID: 512 RVA: 0x0006EA00 File Offset: 0x0006DC00
	public unsafe static int** __unep@?EcValidateParameters@EcDeleteMdbWatermarksForMailbox50Rpc@@$$FUEAAJXZ;

	// Token: 0x04000201 RID: 513 RVA: 0x0006EA08 File Offset: 0x0006DC08
	public unsafe static int** __unep@?EcValidateParameters@EcSaveMdbWatermarks50Rpc@@$$FUEAAJXZ;

	// Token: 0x04000202 RID: 514 RVA: 0x0006EA10 File Offset: 0x0006DC10
	public unsafe static int** __unep@?EcValidateParameters@EcGetMdbWatermarksForConsumer50Rpc@@$$FUEAAJXZ;

	// Token: 0x04000203 RID: 515 RVA: 0x0006EA18 File Offset: 0x0006DC18
	public unsafe static int** __unep@?EcValidateParameters@EcWriteMdbEvents50Rpc@@$$FUEAAJXZ;

	// Token: 0x04000204 RID: 516 RVA: 0x0006EA20 File Offset: 0x0006DC20
	public unsafe static int** __unep@?EcValidateParameters@EcGetMdbWatermarksForMailbox50Rpc@@$$FUEAAJXZ;

	// Token: 0x04000205 RID: 517 RVA: 0x0006EA28 File Offset: 0x0006DC28
	public unsafe static int** __unep@?EcValidateParameters@EcDoMaintenanceTask50Rpc@@$$FUEAAJXZ;

	// Token: 0x04000206 RID: 518 RVA: 0x0006EA30 File Offset: 0x0006DC30
	public unsafe static int** __unep@?EcValidateParameters@EcGetLastBackupInfo50Rpc@@$$FUEAAJXZ;

	// Token: 0x04000207 RID: 519 RVA: 0x0006EA38 File Offset: 0x0006DC38
	public unsafe static int** __unep@?EcValidateParameters@EcAdminGetMailboxTableEntry@@$$FUEAAJXZ;

	// Token: 0x04000208 RID: 520 RVA: 0x0006EA40 File Offset: 0x0006DC40
	public unsafe static int** __unep@?EcValidateParameters@EcAdminGetFeatureVersion50Rpc@@$$FUEAAJXZ;

	// Token: 0x04000209 RID: 521 RVA: 0x0006EA48 File Offset: 0x0006DC48
	public unsafe static int** __unep@?EcValidateParameters@EcAdminGetMailboxSignatureBasicInfo50Rpc@@$$FUEAAJXZ;

	// Token: 0x0400020A RID: 522 RVA: 0x0006EA50 File Offset: 0x0006DC50
	public unsafe static int** __unep@?EcValidateParameters@EcAdminGetResourceMonitorDigest50Rpc@@$$FUEAAJXZ;

	// Token: 0x0400020B RID: 523 RVA: 0x0006EA58 File Offset: 0x0006DC58
	public unsafe static int** __unep@?EcValidateParameters@EcGetDatabaseSizeEx50Rpc@@$$FUEAAJXZ;

	// Token: 0x0400020C RID: 524 RVA: 0x0006EA60 File Offset: 0x0006DC60
	public unsafe static int** __unep@?EcValidateParameters@EcAdminISIntegCheck50Rpc@@$$FUEAAJXZ;

	// Token: 0x0400020D RID: 525 RVA: 0x0006EA68 File Offset: 0x0006DC68
	public unsafe static int** __unep@?EcValidateParameters@EcAdminGetViewsTableEx50Rpc@@$$FUEAAJXZ;

	// Token: 0x0400020E RID: 526 RVA: 0x0006EA70 File Offset: 0x0006DC70
	public unsafe static int** __unep@?EcValidateParameters@EcAdminGetRestrictionTableEx50Rpc@@$$FUEAAJXZ;

	// Token: 0x0400020F RID: 527 RVA: 0x0006EA78 File Offset: 0x0006DC78
	public unsafe static int** __unep@?EcValidateParameters@EcAdminExecuteTask50Rpc@@$$FUEAAJXZ;

	// Token: 0x04000210 RID: 528 RVA: 0x0006EA80 File Offset: 0x0006DC80
	public unsafe static int** __unep@?EcValidateParameters@EcStartBlockModeReplicationToPassive50Rpc@@$$FUEAAJXZ;

	// Token: 0x04000211 RID: 529 RVA: 0x0006EA88 File Offset: 0x0006DC88
	public unsafe static int** __unep@?EcValidateParameters@EcMultiMailboxSearchRpc@@$$FUEAAJXZ;

	// Token: 0x04000212 RID: 530 RVA: 0x0006EA90 File Offset: 0x0006DC90
	public unsafe static int** __unep@?EcValidateParameters@EcGetMultiMailboxSearchKeywordStatsRpc@@$$FUEAAJXZ;

	// Token: 0x04000213 RID: 531 RVA: 0x0006EA98 File Offset: 0x0006DC98
	public unsafe static int** __unep@?EcValidateParameters@EcAdminGetDatabaseProcessInfo50Rpc@@$$FUEAAJXZ;

	// Token: 0x04000214 RID: 532 RVA: 0x0006EAA0 File Offset: 0x0006DCA0
	public unsafe static int** __unep@?EcValidateParameters@EcAdminProcessSnapshotOperation50Rpc@@$$FUEAAJXZ;

	// Token: 0x04000215 RID: 533 RVA: 0x0006EAA8 File Offset: 0x0006DCA8
	public unsafe static int** __unep@?EcValidateParameters@EcAdminGetPhysicalDatabaseInformation50Rpc@@$$FUEAAJXZ;

	// Token: 0x04000216 RID: 534 RVA: 0x0006EAB0 File Offset: 0x0006DCB0
	public unsafe static int** __unep@?EcValidateParameters@EcAdminPrePopulateCacheEx50Rpc@@$$FUEAAJXZ;

	// Token: 0x04000217 RID: 535 RVA: 0x0006EAB8 File Offset: 0x0006DCB8
	public unsafe static int** __unep@?EcValidateParameters@EcForceNewLog50Rpc@@$$FUEAAJXZ;

	// Token: 0x04000218 RID: 536 RVA: 0x0006EAC0 File Offset: 0x0006DCC0
	public unsafe static int** __unep@?EcValidateParameters@EcAdminIntegrityCheckEx50Rpc@@$$FUEAAJXZ;

	// Token: 0x04000219 RID: 537 RVA: 0x0006EAC8 File Offset: 0x0006DCC8
	public unsafe static int** __unep@?EcValidateParameters@EcCreateUserInfo50Rpc@@$$FUEAAJXZ;

	// Token: 0x0400021A RID: 538 RVA: 0x0006EAD0 File Offset: 0x0006DCD0
	public unsafe static int** __unep@?EcValidateParameters@EcReadUserInfo50Rpc@@$$FUEAAJXZ;

	// Token: 0x0400021B RID: 539 RVA: 0x0006EAD8 File Offset: 0x0006DCD8
	public unsafe static int** __unep@?EcValidateParameters@EcUpdateUserInfo50Rpc@@$$FUEAAJXZ;

	// Token: 0x0400021C RID: 540 RVA: 0x0006EAE0 File Offset: 0x0006DCE0
	public unsafe static int** __unep@?EcValidateParameters@EcDeleteUserInfo50Rpc@@$$FUEAAJXZ;

	// Token: 0x0400021D RID: 541 RVA: 0x0006E9E0 File Offset: 0x0006DBE0
	unsafe static int** __unep@?InternalExecute@AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@$$FUEAAJXZ;

	// Token: 0x0400021E RID: 542 RVA: 0x00151178 File Offset: 0x00150378
	internal static $_s__RTTIBaseClassArray$_extraBytes_24 ??_R2EcLogReplayRequestRpc@@8;

	// Token: 0x0400021F RID: 543 RVA: 0x001510F0 File Offset: 0x001502F0
	internal static $_s__RTTIBaseClassArray$_extraBytes_24 ??_R2EcAdminNotifyOnDSChangeRpc@@8;

	// Token: 0x04000220 RID: 544 RVA: 0x00151068 File Offset: 0x00150268
	internal static $_s__RTTIBaseClassArray$_extraBytes_24 ??_R2EcAdminGetMailboxTableRpc@@8;

	// Token: 0x04000221 RID: 545 RVA: 0x00150FE0 File Offset: 0x001501E0
	internal static $_s__RTTIBaseClassArray$_extraBytes_24 ??_R2EcPurgeCachedMdbObjectRpc@@8;

	// Token: 0x04000222 RID: 546 RVA: 0x00150F58 File Offset: 0x00150158
	internal static $_s__RTTIBaseClassArray$_extraBytes_24 ??_R2EcAdminSetMailboxBasicInfoRpc@@8;

	// Token: 0x04000223 RID: 547 RVA: 0x00150ED0 File Offset: 0x001500D0
	internal static $_s__RTTIBaseClassArray$_extraBytes_24 ??_R2EcUnmountDatabaseRpc@@8;

	// Token: 0x04000224 RID: 548 RVA: 0x00150E48 File Offset: 0x00150048
	internal static $_s__RTTIBaseClassArray$_extraBytes_24 ??_R2EcMountDatabaseRpc@@8;

	// Token: 0x04000225 RID: 549 RVA: 0x00150DC0 File Offset: 0x0014FFC0
	internal static $_s__RTTIBaseClassArray$_extraBytes_24 ??_R2EcAdminGetLogonTableRpc@@8;

	// Token: 0x04000226 RID: 550 RVA: 0x00150D38 File Offset: 0x0014FF38
	internal static $_s__RTTIBaseClassArray$_extraBytes_24 ??_R2EcGetMailboxSecurityDescriptorRpc@@8;

	// Token: 0x04000227 RID: 551 RVA: 0x00150CB0 File Offset: 0x0014FEB0
	internal static $_s__RTTIBaseClassArray$_extraBytes_24 ??_R2EcSetMailboxSecurityDescriptorRpc@@8;

	// Token: 0x04000228 RID: 552 RVA: 0x00150C28 File Offset: 0x0014FE28
	internal static $_s__RTTIBaseClassArray$_extraBytes_24 ??_R2EcAdminDeletePrivateMailboxRpc@@8;

	// Token: 0x04000229 RID: 553 RVA: 0x00150BA0 File Offset: 0x0014FDA0
	internal static $_s__RTTIBaseClassArray$_extraBytes_24 ??_R2EcSyncMailboxesWithDSRpc@@8;

	// Token: 0x0400022A RID: 554 RVA: 0x00150B18 File Offset: 0x0014FD18
	internal static $_s__RTTIBaseClassArray$_extraBytes_24 ??_R2EcPurgeCachedMailboxObjectRpc@@8;

	// Token: 0x0400022B RID: 555 RVA: 0x00150A90 File Offset: 0x0014FC90
	internal static $_s__RTTIBaseClassArray$_extraBytes_24 ??_R2EcClearAbsentInDsFlagOnMailboxRpc@@8;

	// Token: 0x0400022C RID: 556 RVA: 0x00150A08 File Offset: 0x0014FC08
	internal static $_s__RTTIBaseClassArray$_extraBytes_24 ??_R2EcGetLastBackupTimesRpc@@8;

	// Token: 0x0400022D RID: 557 RVA: 0x00150980 File Offset: 0x0014FB80
	internal static $_s__RTTIBaseClassArray$_extraBytes_24 ??_R2EcAdminGetCnctTableRpc@@8;

	// Token: 0x0400022E RID: 558 RVA: 0x001508F8 File Offset: 0x0014FAF8
	internal static $_s__RTTIBaseClassArray$_extraBytes_24 ??_R2EcListMdbStatusRpc@@8;

	// Token: 0x0400022F RID: 559 RVA: 0x00150870 File Offset: 0x0014FA70
	internal static $_s__RTTIBaseClassArray$_extraBytes_24 ??_R2EcListAllMdbStatusRpc@@8;

	// Token: 0x04000230 RID: 560 RVA: 0x00151150 File Offset: 0x00150350
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@EcLogReplayRequestRpc@@8;

	// Token: 0x04000231 RID: 561 RVA: 0x001510C8 File Offset: 0x001502C8
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@EcAdminNotifyOnDSChangeRpc@@8;

	// Token: 0x04000232 RID: 562 RVA: 0x00151040 File Offset: 0x00150240
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@EcAdminGetMailboxTableRpc@@8;

	// Token: 0x04000233 RID: 563 RVA: 0x00150FB8 File Offset: 0x001501B8
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@EcPurgeCachedMdbObjectRpc@@8;

	// Token: 0x04000234 RID: 564 RVA: 0x00150F30 File Offset: 0x00150130
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@EcAdminSetMailboxBasicInfoRpc@@8;

	// Token: 0x04000235 RID: 565 RVA: 0x00150EA8 File Offset: 0x001500A8
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@EcUnmountDatabaseRpc@@8;

	// Token: 0x04000236 RID: 566 RVA: 0x00150E20 File Offset: 0x00150020
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@EcMountDatabaseRpc@@8;

	// Token: 0x04000237 RID: 567 RVA: 0x00150D98 File Offset: 0x0014FF98
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@EcAdminGetLogonTableRpc@@8;

	// Token: 0x04000238 RID: 568 RVA: 0x00150D10 File Offset: 0x0014FF10
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@EcGetMailboxSecurityDescriptorRpc@@8;

	// Token: 0x04000239 RID: 569 RVA: 0x00150C88 File Offset: 0x0014FE88
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@EcSetMailboxSecurityDescriptorRpc@@8;

	// Token: 0x0400023A RID: 570 RVA: 0x00150C00 File Offset: 0x0014FE00
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@EcAdminDeletePrivateMailboxRpc@@8;

	// Token: 0x0400023B RID: 571 RVA: 0x00150B78 File Offset: 0x0014FD78
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@EcSyncMailboxesWithDSRpc@@8;

	// Token: 0x0400023C RID: 572 RVA: 0x00150AF0 File Offset: 0x0014FCF0
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@EcPurgeCachedMailboxObjectRpc@@8;

	// Token: 0x0400023D RID: 573 RVA: 0x00150A68 File Offset: 0x0014FC68
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@EcClearAbsentInDsFlagOnMailboxRpc@@8;

	// Token: 0x0400023E RID: 574 RVA: 0x001509E0 File Offset: 0x0014FBE0
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@EcGetLastBackupTimesRpc@@8;

	// Token: 0x0400023F RID: 575 RVA: 0x00150958 File Offset: 0x0014FB58
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@EcAdminGetCnctTableRpc@@8;

	// Token: 0x04000240 RID: 576 RVA: 0x001508D0 File Offset: 0x0014FAD0
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@EcListMdbStatusRpc@@8;

	// Token: 0x04000241 RID: 577 RVA: 0x00150848 File Offset: 0x0014FA48
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@EcListAllMdbStatusRpc@@8;

	// Token: 0x04000242 RID: 578 RVA: 0x00151198 File Offset: 0x00150398
	internal static _s__RTTIClassHierarchyDescriptor ??_R3EcLogReplayRequestRpc@@8;

	// Token: 0x04000243 RID: 579 RVA: 0x0015AF78 File Offset: 0x00159978
	internal static $_TypeDescriptor$_extraBytes_28 ??_R0?AVEcLogReplayRequestRpc@@@8;

	// Token: 0x04000244 RID: 580 RVA: 0x00151110 File Offset: 0x00150310
	internal static _s__RTTIClassHierarchyDescriptor ??_R3EcAdminNotifyOnDSChangeRpc@@8;

	// Token: 0x04000245 RID: 581 RVA: 0x0015AF40 File Offset: 0x00159940
	internal static $_TypeDescriptor$_extraBytes_33 ??_R0?AVEcAdminNotifyOnDSChangeRpc@@@8;

	// Token: 0x04000246 RID: 582 RVA: 0x00151088 File Offset: 0x00150288
	internal static _s__RTTIClassHierarchyDescriptor ??_R3EcAdminGetMailboxTableRpc@@8;

	// Token: 0x04000247 RID: 583 RVA: 0x0015AF10 File Offset: 0x00159910
	internal static $_TypeDescriptor$_extraBytes_32 ??_R0?AVEcAdminGetMailboxTableRpc@@@8;

	// Token: 0x04000248 RID: 584 RVA: 0x00151000 File Offset: 0x00150200
	internal static _s__RTTIClassHierarchyDescriptor ??_R3EcPurgeCachedMdbObjectRpc@@8;

	// Token: 0x04000249 RID: 585 RVA: 0x0015AEE0 File Offset: 0x001598E0
	internal static $_TypeDescriptor$_extraBytes_32 ??_R0?AVEcPurgeCachedMdbObjectRpc@@@8;

	// Token: 0x0400024A RID: 586 RVA: 0x00150F78 File Offset: 0x00150178
	internal static _s__RTTIClassHierarchyDescriptor ??_R3EcAdminSetMailboxBasicInfoRpc@@8;

	// Token: 0x0400024B RID: 587 RVA: 0x0015AEA8 File Offset: 0x001598A8
	internal static $_TypeDescriptor$_extraBytes_36 ??_R0?AVEcAdminSetMailboxBasicInfoRpc@@@8;

	// Token: 0x0400024C RID: 588 RVA: 0x00150EF0 File Offset: 0x001500F0
	internal static _s__RTTIClassHierarchyDescriptor ??_R3EcUnmountDatabaseRpc@@8;

	// Token: 0x0400024D RID: 589 RVA: 0x0015AE78 File Offset: 0x00159878
	internal static $_TypeDescriptor$_extraBytes_27 ??_R0?AVEcUnmountDatabaseRpc@@@8;

	// Token: 0x0400024E RID: 590 RVA: 0x00150E68 File Offset: 0x00150068
	internal static _s__RTTIClassHierarchyDescriptor ??_R3EcMountDatabaseRpc@@8;

	// Token: 0x0400024F RID: 591 RVA: 0x0015AE48 File Offset: 0x00159848
	internal static $_TypeDescriptor$_extraBytes_25 ??_R0?AVEcMountDatabaseRpc@@@8;

	// Token: 0x04000250 RID: 592 RVA: 0x00150DE0 File Offset: 0x0014FFE0
	internal static _s__RTTIClassHierarchyDescriptor ??_R3EcAdminGetLogonTableRpc@@8;

	// Token: 0x04000251 RID: 593 RVA: 0x0015AE18 File Offset: 0x00159818
	internal static $_TypeDescriptor$_extraBytes_30 ??_R0?AVEcAdminGetLogonTableRpc@@@8;

	// Token: 0x04000252 RID: 594 RVA: 0x00150D58 File Offset: 0x0014FF58
	internal static _s__RTTIClassHierarchyDescriptor ??_R3EcGetMailboxSecurityDescriptorRpc@@8;

	// Token: 0x04000253 RID: 595 RVA: 0x0015ADE0 File Offset: 0x001597E0
	internal static $_TypeDescriptor$_extraBytes_40 ??_R0?AVEcGetMailboxSecurityDescriptorRpc@@@8;

	// Token: 0x04000254 RID: 596 RVA: 0x00150CD0 File Offset: 0x0014FED0
	internal static _s__RTTIClassHierarchyDescriptor ??_R3EcSetMailboxSecurityDescriptorRpc@@8;

	// Token: 0x04000255 RID: 597 RVA: 0x0015ADA8 File Offset: 0x001597A8
	internal static $_TypeDescriptor$_extraBytes_40 ??_R0?AVEcSetMailboxSecurityDescriptorRpc@@@8;

	// Token: 0x04000256 RID: 598 RVA: 0x00150C48 File Offset: 0x0014FE48
	internal static _s__RTTIClassHierarchyDescriptor ??_R3EcAdminDeletePrivateMailboxRpc@@8;

	// Token: 0x04000257 RID: 599 RVA: 0x0015AD70 File Offset: 0x00159770
	internal static $_TypeDescriptor$_extraBytes_37 ??_R0?AVEcAdminDeletePrivateMailboxRpc@@@8;

	// Token: 0x04000258 RID: 600 RVA: 0x00150BC0 File Offset: 0x0014FDC0
	internal static _s__RTTIClassHierarchyDescriptor ??_R3EcSyncMailboxesWithDSRpc@@8;

	// Token: 0x04000259 RID: 601 RVA: 0x0015AD40 File Offset: 0x00159740
	internal static $_TypeDescriptor$_extraBytes_31 ??_R0?AVEcSyncMailboxesWithDSRpc@@@8;

	// Token: 0x0400025A RID: 602 RVA: 0x00150B38 File Offset: 0x0014FD38
	internal static _s__RTTIClassHierarchyDescriptor ??_R3EcPurgeCachedMailboxObjectRpc@@8;

	// Token: 0x0400025B RID: 603 RVA: 0x0015AD08 File Offset: 0x00159708
	internal static $_TypeDescriptor$_extraBytes_36 ??_R0?AVEcPurgeCachedMailboxObjectRpc@@@8;

	// Token: 0x0400025C RID: 604 RVA: 0x00150AB0 File Offset: 0x0014FCB0
	internal static _s__RTTIClassHierarchyDescriptor ??_R3EcClearAbsentInDsFlagOnMailboxRpc@@8;

	// Token: 0x0400025D RID: 605 RVA: 0x0015ACD0 File Offset: 0x001596D0
	internal static $_TypeDescriptor$_extraBytes_40 ??_R0?AVEcClearAbsentInDsFlagOnMailboxRpc@@@8;

	// Token: 0x0400025E RID: 606 RVA: 0x00150A28 File Offset: 0x0014FC28
	internal static _s__RTTIClassHierarchyDescriptor ??_R3EcGetLastBackupTimesRpc@@8;

	// Token: 0x0400025F RID: 607 RVA: 0x0015ACA0 File Offset: 0x001596A0
	internal static $_TypeDescriptor$_extraBytes_30 ??_R0?AVEcGetLastBackupTimesRpc@@@8;

	// Token: 0x04000260 RID: 608 RVA: 0x001509A0 File Offset: 0x0014FBA0
	internal static _s__RTTIClassHierarchyDescriptor ??_R3EcAdminGetCnctTableRpc@@8;

	// Token: 0x04000261 RID: 609 RVA: 0x0015AC70 File Offset: 0x00159670
	internal static $_TypeDescriptor$_extraBytes_29 ??_R0?AVEcAdminGetCnctTableRpc@@@8;

	// Token: 0x04000262 RID: 610 RVA: 0x00150918 File Offset: 0x0014FB18
	internal static _s__RTTIClassHierarchyDescriptor ??_R3EcListMdbStatusRpc@@8;

	// Token: 0x04000263 RID: 611 RVA: 0x0015AC40 File Offset: 0x00159640
	internal static $_TypeDescriptor$_extraBytes_25 ??_R0?AVEcListMdbStatusRpc@@@8;

	// Token: 0x04000264 RID: 612 RVA: 0x00150890 File Offset: 0x0014FA90
	internal static _s__RTTIClassHierarchyDescriptor ??_R3EcListAllMdbStatusRpc@@8;

	// Token: 0x04000265 RID: 613 RVA: 0x0015AC10 File Offset: 0x00159610
	internal static $_TypeDescriptor$_extraBytes_28 ??_R0?AVEcListAllMdbStatusRpc@@@8;

	// Token: 0x04000266 RID: 614
	[FixedAddressValueType]
	internal static $ArrayType$$$BY03Q6AXXZ ??_7EcLogReplayRequestRpc@@6B@;

	// Token: 0x04000267 RID: 615 RVA: 0x0006E728 File Offset: 0x0006D928
	internal static method ??_7EcLogReplayRequestRpc@@6B@$initializer$;

	// Token: 0x04000268 RID: 616 RVA: 0x001511B0 File Offset: 0x001503B0
	internal static _s__RTTICompleteObjectLocator2 ??_R4EcLogReplayRequestRpc@@6B@;

	// Token: 0x04000269 RID: 617
	[FixedAddressValueType]
	internal static $ArrayType$$$BY03Q6AXXZ ??_7EcAdminNotifyOnDSChangeRpc@@6B@;

	// Token: 0x0400026A RID: 618 RVA: 0x0006E720 File Offset: 0x0006D920
	internal static method ??_7EcAdminNotifyOnDSChangeRpc@@6B@$initializer$;

	// Token: 0x0400026B RID: 619 RVA: 0x00151128 File Offset: 0x00150328
	internal static _s__RTTICompleteObjectLocator2 ??_R4EcAdminNotifyOnDSChangeRpc@@6B@;

	// Token: 0x0400026C RID: 620
	[FixedAddressValueType]
	internal static $ArrayType$$$BY03Q6AXXZ ??_7EcAdminGetMailboxTableRpc@@6B@;

	// Token: 0x0400026D RID: 621 RVA: 0x0006E718 File Offset: 0x0006D918
	internal static method ??_7EcAdminGetMailboxTableRpc@@6B@$initializer$;

	// Token: 0x0400026E RID: 622 RVA: 0x001510A0 File Offset: 0x001502A0
	internal static _s__RTTICompleteObjectLocator2 ??_R4EcAdminGetMailboxTableRpc@@6B@;

	// Token: 0x0400026F RID: 623
	[FixedAddressValueType]
	internal static $ArrayType$$$BY03Q6AXXZ ??_7EcPurgeCachedMdbObjectRpc@@6B@;

	// Token: 0x04000270 RID: 624 RVA: 0x0006E710 File Offset: 0x0006D910
	internal static method ??_7EcPurgeCachedMdbObjectRpc@@6B@$initializer$;

	// Token: 0x04000271 RID: 625 RVA: 0x00151018 File Offset: 0x00150218
	internal static _s__RTTICompleteObjectLocator2 ??_R4EcPurgeCachedMdbObjectRpc@@6B@;

	// Token: 0x04000272 RID: 626
	[FixedAddressValueType]
	internal static $ArrayType$$$BY03Q6AXXZ ??_7EcAdminSetMailboxBasicInfoRpc@@6B@;

	// Token: 0x04000273 RID: 627 RVA: 0x0006E708 File Offset: 0x0006D908
	internal static method ??_7EcAdminSetMailboxBasicInfoRpc@@6B@$initializer$;

	// Token: 0x04000274 RID: 628 RVA: 0x00150F90 File Offset: 0x00150190
	internal static _s__RTTICompleteObjectLocator2 ??_R4EcAdminSetMailboxBasicInfoRpc@@6B@;

	// Token: 0x04000275 RID: 629
	[FixedAddressValueType]
	internal static $ArrayType$$$BY03Q6AXXZ ??_7EcUnmountDatabaseRpc@@6B@;

	// Token: 0x04000276 RID: 630 RVA: 0x0006E700 File Offset: 0x0006D900
	internal static method ??_7EcUnmountDatabaseRpc@@6B@$initializer$;

	// Token: 0x04000277 RID: 631 RVA: 0x00150F08 File Offset: 0x00150108
	internal static _s__RTTICompleteObjectLocator2 ??_R4EcUnmountDatabaseRpc@@6B@;

	// Token: 0x04000278 RID: 632
	[FixedAddressValueType]
	internal static $ArrayType$$$BY03Q6AXXZ ??_7EcMountDatabaseRpc@@6B@;

	// Token: 0x04000279 RID: 633 RVA: 0x0006E6F8 File Offset: 0x0006D8F8
	internal static method ??_7EcMountDatabaseRpc@@6B@$initializer$;

	// Token: 0x0400027A RID: 634 RVA: 0x00150E80 File Offset: 0x00150080
	internal static _s__RTTICompleteObjectLocator2 ??_R4EcMountDatabaseRpc@@6B@;

	// Token: 0x0400027B RID: 635
	[FixedAddressValueType]
	internal static $ArrayType$$$BY03Q6AXXZ ??_7EcAdminGetLogonTableRpc@@6B@;

	// Token: 0x0400027C RID: 636 RVA: 0x0006E6F0 File Offset: 0x0006D8F0
	internal static method ??_7EcAdminGetLogonTableRpc@@6B@$initializer$;

	// Token: 0x0400027D RID: 637 RVA: 0x00150DF8 File Offset: 0x0014FFF8
	internal static _s__RTTICompleteObjectLocator2 ??_R4EcAdminGetLogonTableRpc@@6B@;

	// Token: 0x0400027E RID: 638
	[FixedAddressValueType]
	internal static $ArrayType$$$BY03Q6AXXZ ??_7EcGetMailboxSecurityDescriptorRpc@@6B@;

	// Token: 0x0400027F RID: 639 RVA: 0x0006E6E8 File Offset: 0x0006D8E8
	internal static method ??_7EcGetMailboxSecurityDescriptorRpc@@6B@$initializer$;

	// Token: 0x04000280 RID: 640 RVA: 0x00150D70 File Offset: 0x0014FF70
	internal static _s__RTTICompleteObjectLocator2 ??_R4EcGetMailboxSecurityDescriptorRpc@@6B@;

	// Token: 0x04000281 RID: 641
	[FixedAddressValueType]
	internal static $ArrayType$$$BY03Q6AXXZ ??_7EcSetMailboxSecurityDescriptorRpc@@6B@;

	// Token: 0x04000282 RID: 642 RVA: 0x0006E6E0 File Offset: 0x0006D8E0
	internal static method ??_7EcSetMailboxSecurityDescriptorRpc@@6B@$initializer$;

	// Token: 0x04000283 RID: 643 RVA: 0x00150CE8 File Offset: 0x0014FEE8
	internal static _s__RTTICompleteObjectLocator2 ??_R4EcSetMailboxSecurityDescriptorRpc@@6B@;

	// Token: 0x04000284 RID: 644
	[FixedAddressValueType]
	internal static $ArrayType$$$BY03Q6AXXZ ??_7EcAdminDeletePrivateMailboxRpc@@6B@;

	// Token: 0x04000285 RID: 645 RVA: 0x0006E6D8 File Offset: 0x0006D8D8
	internal static method ??_7EcAdminDeletePrivateMailboxRpc@@6B@$initializer$;

	// Token: 0x04000286 RID: 646 RVA: 0x00150C60 File Offset: 0x0014FE60
	internal static _s__RTTICompleteObjectLocator2 ??_R4EcAdminDeletePrivateMailboxRpc@@6B@;

	// Token: 0x04000287 RID: 647
	[FixedAddressValueType]
	internal static $ArrayType$$$BY03Q6AXXZ ??_7EcSyncMailboxesWithDSRpc@@6B@;

	// Token: 0x04000288 RID: 648 RVA: 0x0006E6D0 File Offset: 0x0006D8D0
	internal static method ??_7EcSyncMailboxesWithDSRpc@@6B@$initializer$;

	// Token: 0x04000289 RID: 649 RVA: 0x00150BD8 File Offset: 0x0014FDD8
	internal static _s__RTTICompleteObjectLocator2 ??_R4EcSyncMailboxesWithDSRpc@@6B@;

	// Token: 0x0400028A RID: 650
	[FixedAddressValueType]
	internal static $ArrayType$$$BY03Q6AXXZ ??_7EcPurgeCachedMailboxObjectRpc@@6B@;

	// Token: 0x0400028B RID: 651 RVA: 0x0006E6C8 File Offset: 0x0006D8C8
	internal static method ??_7EcPurgeCachedMailboxObjectRpc@@6B@$initializer$;

	// Token: 0x0400028C RID: 652 RVA: 0x00150B50 File Offset: 0x0014FD50
	internal static _s__RTTICompleteObjectLocator2 ??_R4EcPurgeCachedMailboxObjectRpc@@6B@;

	// Token: 0x0400028D RID: 653
	[FixedAddressValueType]
	internal static $ArrayType$$$BY03Q6AXXZ ??_7EcClearAbsentInDsFlagOnMailboxRpc@@6B@;

	// Token: 0x0400028E RID: 654 RVA: 0x0006E6C0 File Offset: 0x0006D8C0
	internal static method ??_7EcClearAbsentInDsFlagOnMailboxRpc@@6B@$initializer$;

	// Token: 0x0400028F RID: 655 RVA: 0x00150AC8 File Offset: 0x0014FCC8
	internal static _s__RTTICompleteObjectLocator2 ??_R4EcClearAbsentInDsFlagOnMailboxRpc@@6B@;

	// Token: 0x04000290 RID: 656
	[FixedAddressValueType]
	internal static $ArrayType$$$BY03Q6AXXZ ??_7EcGetLastBackupTimesRpc@@6B@;

	// Token: 0x04000291 RID: 657 RVA: 0x0006E6B8 File Offset: 0x0006D8B8
	internal static method ??_7EcGetLastBackupTimesRpc@@6B@$initializer$;

	// Token: 0x04000292 RID: 658 RVA: 0x00150A40 File Offset: 0x0014FC40
	internal static _s__RTTICompleteObjectLocator2 ??_R4EcGetLastBackupTimesRpc@@6B@;

	// Token: 0x04000293 RID: 659
	[FixedAddressValueType]
	internal static $ArrayType$$$BY03Q6AXXZ ??_7EcAdminGetCnctTableRpc@@6B@;

	// Token: 0x04000294 RID: 660 RVA: 0x0006E6B0 File Offset: 0x0006D8B0
	internal static method ??_7EcAdminGetCnctTableRpc@@6B@$initializer$;

	// Token: 0x04000295 RID: 661 RVA: 0x001509B8 File Offset: 0x0014FBB8
	internal static _s__RTTICompleteObjectLocator2 ??_R4EcAdminGetCnctTableRpc@@6B@;

	// Token: 0x04000296 RID: 662
	[FixedAddressValueType]
	internal static $ArrayType$$$BY03Q6AXXZ ??_7EcListMdbStatusRpc@@6B@;

	// Token: 0x04000297 RID: 663 RVA: 0x0006E6A8 File Offset: 0x0006D8A8
	internal static method ??_7EcListMdbStatusRpc@@6B@$initializer$;

	// Token: 0x04000298 RID: 664 RVA: 0x00150930 File Offset: 0x0014FB30
	internal static _s__RTTICompleteObjectLocator2 ??_R4EcListMdbStatusRpc@@6B@;

	// Token: 0x04000299 RID: 665
	[FixedAddressValueType]
	internal static $ArrayType$$$BY03Q6AXXZ ??_7EcListAllMdbStatusRpc@@6B@;

	// Token: 0x0400029A RID: 666 RVA: 0x0006E6A0 File Offset: 0x0006D8A0
	internal static method ??_7EcListAllMdbStatusRpc@@6B@$initializer$;

	// Token: 0x0400029B RID: 667 RVA: 0x001508A8 File Offset: 0x0014FAA8
	internal static _s__RTTICompleteObjectLocator2 ??_R4EcListAllMdbStatusRpc@@6B@;

	// Token: 0x0400029C RID: 668 RVA: 0x0015A880 File Offset: 0x00159280
	public static method __m2mep@?UToMUInt32s@@$$FYMP$01EAIIPEAI@Z;

	// Token: 0x0400029D RID: 669 RVA: 0x0015A890 File Offset: 0x00159290
	public static method __m2mep@?MToUUint32s@@$$FYMJP$01EAIPEAHPEAPEAK@Z;

	// Token: 0x0400029E RID: 670 RVA: 0x0015AAE0 File Offset: 0x001594E0
	public static method __m2mep@??0EcListAllMdbStatusRpc@@$$FQEAM@VIntPtr@System@@PEAXHPEAK2PEAPEAEKPEAE23@Z;

	// Token: 0x0400029F RID: 671 RVA: 0x0015A8A0 File Offset: 0x001592A0
	public static method __m2mep@?EcValidateParameters@EcListAllMdbStatusRpc@@$$FUEAAJXZ;

	// Token: 0x040002A0 RID: 672 RVA: 0x0015A8B0 File Offset: 0x001592B0
	public static method __m2mep@?EcDispatchCall@EcListAllMdbStatusRpc@@$$FUEAMJPE$AAUIAdminRpcServer@AdminRpc@Rpc@Exchange@Microsoft@@PE$AAVClientSecurityContext@Authorization@Security@56@P$01EAEAE$CAP$01EAE@Z;

	// Token: 0x040002A1 RID: 673 RVA: 0x0015AAF0 File Offset: 0x001594F0
	public static method __m2mep@??0EcListMdbStatusRpc@@$$FQEAM@VIntPtr@System@@PEAXKPEAU_GUID@@PEAKKPEAE3PEAPEAE@Z;

	// Token: 0x040002A2 RID: 674 RVA: 0x0015A8C0 File Offset: 0x001592C0
	public static method __m2mep@?EcValidateParameters@EcListMdbStatusRpc@@$$FUEAAJXZ;

	// Token: 0x040002A3 RID: 675 RVA: 0x0015A8D0 File Offset: 0x001592D0
	public static method __m2mep@?EcDispatchCall@EcListMdbStatusRpc@@$$FUEAMJPE$AAUIAdminRpcServer@AdminRpc@Rpc@Exchange@Microsoft@@PE$AAVClientSecurityContext@Authorization@Security@56@P$01EAEAE$CAP$01EAE@Z;

	// Token: 0x040002A4 RID: 676 RVA: 0x0015AB00 File Offset: 0x00159500
	public static method __m2mep@??0EcAdminGetCnctTableRpc@@$$FQEAM@VIntPtr@System@@PEAXPEAU_GUID@@JPEAPEAEPEAKQEAKKK4KPEAE43@Z;

	// Token: 0x040002A5 RID: 677 RVA: 0x0015A8E0 File Offset: 0x001592E0
	public static method __m2mep@?EcValidateParameters@EcAdminGetCnctTableRpc@@$$FUEAAJXZ;

	// Token: 0x040002A6 RID: 678 RVA: 0x0015A8F0 File Offset: 0x001592F0
	public static method __m2mep@?EcDispatchCall@EcAdminGetCnctTableRpc@@$$FUEAMJPE$AAUIAdminRpcServer@AdminRpc@Rpc@Exchange@Microsoft@@PE$AAVClientSecurityContext@Authorization@Security@56@P$01EAEAE$CAP$01EAE@Z;

	// Token: 0x040002A7 RID: 679 RVA: 0x0015AB10 File Offset: 0x00159510
	public static method __m2mep@??0EcGetLastBackupTimesRpc@@$$FQEAM@VIntPtr@System@@PEAXPEAU_GUID@@PEAU_FILETIME@@3KPEAEPEAKPEAPEAE@Z;

	// Token: 0x040002A8 RID: 680 RVA: 0x0015A900 File Offset: 0x00159300
	public static method __m2mep@?EcValidateParameters@EcGetLastBackupTimesRpc@@$$FUEAAJXZ;

	// Token: 0x040002A9 RID: 681 RVA: 0x0015A910 File Offset: 0x00159310
	public static method __m2mep@?EcDispatchCall@EcGetLastBackupTimesRpc@@$$FUEAMJPE$AAUIAdminRpcServer@AdminRpc@Rpc@Exchange@Microsoft@@PE$AAVClientSecurityContext@Authorization@Security@56@P$01EAEAE$CAP$01EAE@Z;

	// Token: 0x040002AA RID: 682 RVA: 0x0015AB20 File Offset: 0x00159520
	public static method __m2mep@??0EcClearAbsentInDsFlagOnMailboxRpc@@$$FQEAM@VIntPtr@System@@PEAXPEAU_GUID@@2KPEAEPEAKPEAPEAE@Z;

	// Token: 0x040002AB RID: 683 RVA: 0x0015A920 File Offset: 0x00159320
	public static method __m2mep@?EcValidateParameters@EcClearAbsentInDsFlagOnMailboxRpc@@$$FUEAAJXZ;

	// Token: 0x040002AC RID: 684 RVA: 0x0015A930 File Offset: 0x00159330
	public static method __m2mep@?EcDispatchCall@EcClearAbsentInDsFlagOnMailboxRpc@@$$FUEAMJPE$AAUIAdminRpcServer@AdminRpc@Rpc@Exchange@Microsoft@@PE$AAVClientSecurityContext@Authorization@Security@56@P$01EAEAE$CAP$01EAE@Z;

	// Token: 0x040002AD RID: 685 RVA: 0x0015AB30 File Offset: 0x00159530
	public static method __m2mep@??0EcPurgeCachedMailboxObjectRpc@@$$FQEAM@VIntPtr@System@@PEAXPEAU_GUID@@KPEAEPEAKPEAPEAE@Z;

	// Token: 0x040002AE RID: 686 RVA: 0x0015A940 File Offset: 0x00159340
	public static method __m2mep@?EcValidateParameters@EcPurgeCachedMailboxObjectRpc@@$$FUEAAJXZ;

	// Token: 0x040002AF RID: 687 RVA: 0x0015A950 File Offset: 0x00159350
	public static method __m2mep@?EcDispatchCall@EcPurgeCachedMailboxObjectRpc@@$$FUEAMJPE$AAUIAdminRpcServer@AdminRpc@Rpc@Exchange@Microsoft@@PE$AAVClientSecurityContext@Authorization@Security@56@P$01EAEAE$CAP$01EAE@Z;

	// Token: 0x040002B0 RID: 688 RVA: 0x0015AB40 File Offset: 0x00159540
	public static method __m2mep@??0EcSyncMailboxesWithDSRpc@@$$FQEAM@VIntPtr@System@@PEAXPEAU_GUID@@KPEAEPEAKPEAPEAE@Z;

	// Token: 0x040002B1 RID: 689 RVA: 0x0015A960 File Offset: 0x00159360
	public static method __m2mep@?EcValidateParameters@EcSyncMailboxesWithDSRpc@@$$FUEAAJXZ;

	// Token: 0x040002B2 RID: 690 RVA: 0x0015A970 File Offset: 0x00159370
	public static method __m2mep@?EcDispatchCall@EcSyncMailboxesWithDSRpc@@$$FUEAMJPE$AAUIAdminRpcServer@AdminRpc@Rpc@Exchange@Microsoft@@PE$AAVClientSecurityContext@Authorization@Security@56@P$01EAEAE$CAP$01EAE@Z;

	// Token: 0x040002B3 RID: 691 RVA: 0x0015AB50 File Offset: 0x00159550
	public static method __m2mep@??0EcAdminDeletePrivateMailboxRpc@@$$FQEAM@VIntPtr@System@@PEAXPEAU_GUID@@2KKPEAEPEAKPEAPEAE@Z;

	// Token: 0x040002B4 RID: 692 RVA: 0x0015A980 File Offset: 0x00159380
	public static method __m2mep@?EcValidateParameters@EcAdminDeletePrivateMailboxRpc@@$$FUEAAJXZ;

	// Token: 0x040002B5 RID: 693 RVA: 0x0015A990 File Offset: 0x00159390
	public static method __m2mep@?EcDispatchCall@EcAdminDeletePrivateMailboxRpc@@$$FUEAMJPE$AAUIAdminRpcServer@AdminRpc@Rpc@Exchange@Microsoft@@PE$AAVClientSecurityContext@Authorization@Security@56@P$01EAEAE$CAP$01EAE@Z;

	// Token: 0x040002B6 RID: 694 RVA: 0x0015AB60 File Offset: 0x00159560
	public static method __m2mep@??0EcSetMailboxSecurityDescriptorRpc@@$$FQEAM@VIntPtr@System@@PEAXPEAU_GUID@@2PEAEKK3PEAKPEAPEAE@Z;

	// Token: 0x040002B7 RID: 695 RVA: 0x0015A9A0 File Offset: 0x001593A0
	public static method __m2mep@?EcValidateParameters@EcSetMailboxSecurityDescriptorRpc@@$$FUEAAJXZ;

	// Token: 0x040002B8 RID: 696 RVA: 0x0015A9B0 File Offset: 0x001593B0
	public static method __m2mep@?EcDispatchCall@EcSetMailboxSecurityDescriptorRpc@@$$FUEAMJPE$AAUIAdminRpcServer@AdminRpc@Rpc@Exchange@Microsoft@@PE$AAVClientSecurityContext@Authorization@Security@56@P$01EAEAE$CAP$01EAE@Z;

	// Token: 0x040002B9 RID: 697 RVA: 0x0015AB70 File Offset: 0x00159570
	public static method __m2mep@??0EcGetMailboxSecurityDescriptorRpc@@$$FQEAM@VIntPtr@System@@PEAXPEAU_GUID@@2PEAPEAEPEAKKPEAE43@Z;

	// Token: 0x040002BA RID: 698 RVA: 0x0015A9C0 File Offset: 0x001593C0
	public static method __m2mep@?EcValidateParameters@EcGetMailboxSecurityDescriptorRpc@@$$FUEAAJXZ;

	// Token: 0x040002BB RID: 699 RVA: 0x0015A9D0 File Offset: 0x001593D0
	public static method __m2mep@?EcDispatchCall@EcGetMailboxSecurityDescriptorRpc@@$$FUEAMJPE$AAUIAdminRpcServer@AdminRpc@Rpc@Exchange@Microsoft@@PE$AAVClientSecurityContext@Authorization@Security@56@P$01EAEAE$CAP$01EAE@Z;

	// Token: 0x040002BC RID: 700 RVA: 0x0015AB80 File Offset: 0x00159580
	public static method __m2mep@??0EcAdminGetLogonTableRpc@@$$FQEAM@VIntPtr@System@@PEAXPEAU_GUID@@JPEAPEAEPEAKQEAKKK4KPEAE43@Z;

	// Token: 0x040002BD RID: 701 RVA: 0x0015A9E0 File Offset: 0x001593E0
	public static method __m2mep@?EcValidateParameters@EcAdminGetLogonTableRpc@@$$FUEAAJXZ;

	// Token: 0x040002BE RID: 702 RVA: 0x0015A9F0 File Offset: 0x001593F0
	public static method __m2mep@?EcDispatchCall@EcAdminGetLogonTableRpc@@$$FUEAMJPE$AAUIAdminRpcServer@AdminRpc@Rpc@Exchange@Microsoft@@PE$AAVClientSecurityContext@Authorization@Security@56@P$01EAEAE$CAP$01EAE@Z;

	// Token: 0x040002BF RID: 703 RVA: 0x0015AB90 File Offset: 0x00159590
	public static method __m2mep@??0EcMountDatabaseRpc@@$$FQEAM@VIntPtr@System@@PEAXPEAU_GUID@@2KKPEAEPEAKPEAPEAE@Z;

	// Token: 0x040002C0 RID: 704 RVA: 0x0015AA00 File Offset: 0x00159400
	public static method __m2mep@?EcValidateParameters@EcMountDatabaseRpc@@$$FUEAAJXZ;

	// Token: 0x040002C1 RID: 705 RVA: 0x0015AA10 File Offset: 0x00159410
	public static method __m2mep@?EcDispatchCall@EcMountDatabaseRpc@@$$FUEAMJPE$AAUIAdminRpcServer@AdminRpc@Rpc@Exchange@Microsoft@@PE$AAVClientSecurityContext@Authorization@Security@56@P$01EAEAE$CAP$01EAE@Z;

	// Token: 0x040002C2 RID: 706 RVA: 0x0015ABA0 File Offset: 0x001595A0
	public static method __m2mep@??0EcUnmountDatabaseRpc@@$$FQEAM@VIntPtr@System@@PEAXPEAU_GUID@@2HKPEAEPEAKPEAPEAE@Z;

	// Token: 0x040002C3 RID: 707 RVA: 0x0015AA20 File Offset: 0x00159420
	public static method __m2mep@?EcValidateParameters@EcUnmountDatabaseRpc@@$$FUEAAJXZ;

	// Token: 0x040002C4 RID: 708 RVA: 0x0015AA30 File Offset: 0x00159430
	public static method __m2mep@?EcDispatchCall@EcUnmountDatabaseRpc@@$$FUEAMJPE$AAUIAdminRpcServer@AdminRpc@Rpc@Exchange@Microsoft@@PE$AAVClientSecurityContext@Authorization@Security@56@P$01EAEAE$CAP$01EAE@Z;

	// Token: 0x040002C5 RID: 709 RVA: 0x0015ABB0 File Offset: 0x001595B0
	public static method __m2mep@??0EcAdminSetMailboxBasicInfoRpc@@$$FQEAM@VIntPtr@System@@PEAXPEAU_GUID@@2PEADKKPEAEPEAKPEAPEAE@Z;

	// Token: 0x040002C6 RID: 710 RVA: 0x0015AA40 File Offset: 0x00159440
	public static method __m2mep@?EcValidateParameters@EcAdminSetMailboxBasicInfoRpc@@$$FUEAAJXZ;

	// Token: 0x040002C7 RID: 711 RVA: 0x0015AA50 File Offset: 0x00159450
	public static method __m2mep@?EcDispatchCall@EcAdminSetMailboxBasicInfoRpc@@$$FUEAMJPE$AAUIAdminRpcServer@AdminRpc@Rpc@Exchange@Microsoft@@PE$AAVClientSecurityContext@Authorization@Security@56@P$01EAEAE$CAP$01EAE@Z;

	// Token: 0x040002C8 RID: 712 RVA: 0x0015ABC0 File Offset: 0x001595C0
	public static method __m2mep@??0EcPurgeCachedMdbObjectRpc@@$$FQEAM@VIntPtr@System@@PEAXPEAU_GUID@@KPEAEPEAKPEAPEAE@Z;

	// Token: 0x040002C9 RID: 713 RVA: 0x0015AA60 File Offset: 0x00159460
	public static method __m2mep@?EcValidateParameters@EcPurgeCachedMdbObjectRpc@@$$FUEAAJXZ;

	// Token: 0x040002CA RID: 714 RVA: 0x0015AA70 File Offset: 0x00159470
	public static method __m2mep@?EcDispatchCall@EcPurgeCachedMdbObjectRpc@@$$FUEAMJPE$AAUIAdminRpcServer@AdminRpc@Rpc@Exchange@Microsoft@@PE$AAVClientSecurityContext@Authorization@Security@56@P$01EAEAE$CAP$01EAE@Z;

	// Token: 0x040002CB RID: 715 RVA: 0x0015ABD0 File Offset: 0x001595D0
	public static method __m2mep@??0EcAdminGetMailboxTableRpc@@$$FQEAM@VIntPtr@System@@PEAXPEAU_GUID@@JPEAPEAEPEAKQEAKKK4KPEAE43@Z;

	// Token: 0x040002CC RID: 716 RVA: 0x0015AA80 File Offset: 0x00159480
	public static method __m2mep@?EcValidateParameters@EcAdminGetMailboxTableRpc@@$$FUEAAJXZ;

	// Token: 0x040002CD RID: 717 RVA: 0x0015AA90 File Offset: 0x00159490
	public static method __m2mep@?EcDispatchCall@EcAdminGetMailboxTableRpc@@$$FUEAMJPE$AAUIAdminRpcServer@AdminRpc@Rpc@Exchange@Microsoft@@PE$AAVClientSecurityContext@Authorization@Security@56@P$01EAEAE$CAP$01EAE@Z;

	// Token: 0x040002CE RID: 718 RVA: 0x0015ABE0 File Offset: 0x001595E0
	public static method __m2mep@??0EcAdminNotifyOnDSChangeRpc@@$$FQEAM@VIntPtr@System@@PEAXPEAU_GUID@@2KKPEAEPEAKPEAPEAE@Z;

	// Token: 0x040002CF RID: 719 RVA: 0x0015AAA0 File Offset: 0x001594A0
	public static method __m2mep@?EcValidateParameters@EcAdminNotifyOnDSChangeRpc@@$$FUEAAJXZ;

	// Token: 0x040002D0 RID: 720 RVA: 0x0015AAB0 File Offset: 0x001594B0
	public static method __m2mep@?EcDispatchCall@EcAdminNotifyOnDSChangeRpc@@$$FUEAMJPE$AAUIAdminRpcServer@AdminRpc@Rpc@Exchange@Microsoft@@PE$AAVClientSecurityContext@Authorization@Security@56@P$01EAEAE$CAP$01EAE@Z;

	// Token: 0x040002D1 RID: 721 RVA: 0x0015ABF0 File Offset: 0x001595F0
	public static method __m2mep@??0EcLogReplayRequestRpc@@$$FQEAM@VIntPtr@System@@PEAXPEAU_GUID@@KKPEAK3PEAPEAE334343PEAPEAKKPEAE34@Z;

	// Token: 0x040002D2 RID: 722 RVA: 0x0015AAC0 File Offset: 0x001594C0
	public static method __m2mep@?EcValidateParameters@EcLogReplayRequestRpc@@$$FUEAAJXZ;

	// Token: 0x040002D3 RID: 723 RVA: 0x0015AAD0 File Offset: 0x001594D0
	public static method __m2mep@?EcDispatchCall@EcLogReplayRequestRpc@@$$FUEAMJPE$AAUIAdminRpcServer@AdminRpc@Rpc@Exchange@Microsoft@@PE$AAVClientSecurityContext@Authorization@Security@56@P$01EAEAE$CAP$01EAE@Z;

	// Token: 0x040002D4 RID: 724 RVA: 0x0015AC00 File Offset: 0x00159600
	public static method __m2mep@?GUIDFromGuid@?A0x8144871f@Rpc@Exchange@Microsoft@@$$FYM?AU_GUID@@PE$AAVGuid@System@@@Z;

	// Token: 0x040002D5 RID: 725 RVA: 0x0006EAF0 File Offset: 0x0006DCF0
	public unsafe static int** __unep@?EcValidateParameters@EcListAllMdbStatusRpc@@$$FUEAAJXZ;

	// Token: 0x040002D6 RID: 726 RVA: 0x0006EAF8 File Offset: 0x0006DCF8
	public unsafe static int** __unep@?EcValidateParameters@EcListMdbStatusRpc@@$$FUEAAJXZ;

	// Token: 0x040002D7 RID: 727 RVA: 0x0006EB00 File Offset: 0x0006DD00
	public unsafe static int** __unep@?EcValidateParameters@EcAdminGetCnctTableRpc@@$$FUEAAJXZ;

	// Token: 0x040002D8 RID: 728 RVA: 0x0006EB08 File Offset: 0x0006DD08
	public unsafe static int** __unep@?EcValidateParameters@EcGetLastBackupTimesRpc@@$$FUEAAJXZ;

	// Token: 0x040002D9 RID: 729 RVA: 0x0006EB10 File Offset: 0x0006DD10
	public unsafe static int** __unep@?EcValidateParameters@EcClearAbsentInDsFlagOnMailboxRpc@@$$FUEAAJXZ;

	// Token: 0x040002DA RID: 730 RVA: 0x0006EB18 File Offset: 0x0006DD18
	public unsafe static int** __unep@?EcValidateParameters@EcPurgeCachedMailboxObjectRpc@@$$FUEAAJXZ;

	// Token: 0x040002DB RID: 731 RVA: 0x0006EB20 File Offset: 0x0006DD20
	public unsafe static int** __unep@?EcValidateParameters@EcSyncMailboxesWithDSRpc@@$$FUEAAJXZ;

	// Token: 0x040002DC RID: 732 RVA: 0x0006EB28 File Offset: 0x0006DD28
	public unsafe static int** __unep@?EcValidateParameters@EcAdminDeletePrivateMailboxRpc@@$$FUEAAJXZ;

	// Token: 0x040002DD RID: 733 RVA: 0x0006EB30 File Offset: 0x0006DD30
	public unsafe static int** __unep@?EcValidateParameters@EcSetMailboxSecurityDescriptorRpc@@$$FUEAAJXZ;

	// Token: 0x040002DE RID: 734 RVA: 0x0006EB38 File Offset: 0x0006DD38
	public unsafe static int** __unep@?EcValidateParameters@EcGetMailboxSecurityDescriptorRpc@@$$FUEAAJXZ;

	// Token: 0x040002DF RID: 735 RVA: 0x0006EB40 File Offset: 0x0006DD40
	public unsafe static int** __unep@?EcValidateParameters@EcAdminGetLogonTableRpc@@$$FUEAAJXZ;

	// Token: 0x040002E0 RID: 736 RVA: 0x0006EB48 File Offset: 0x0006DD48
	public unsafe static int** __unep@?EcValidateParameters@EcMountDatabaseRpc@@$$FUEAAJXZ;

	// Token: 0x040002E1 RID: 737 RVA: 0x0006EB50 File Offset: 0x0006DD50
	public unsafe static int** __unep@?EcValidateParameters@EcUnmountDatabaseRpc@@$$FUEAAJXZ;

	// Token: 0x040002E2 RID: 738 RVA: 0x0006EB58 File Offset: 0x0006DD58
	public unsafe static int** __unep@?EcValidateParameters@EcAdminSetMailboxBasicInfoRpc@@$$FUEAAJXZ;

	// Token: 0x040002E3 RID: 739 RVA: 0x0006EB60 File Offset: 0x0006DD60
	public unsafe static int** __unep@?EcValidateParameters@EcPurgeCachedMdbObjectRpc@@$$FUEAAJXZ;

	// Token: 0x040002E4 RID: 740 RVA: 0x0006EB68 File Offset: 0x0006DD68
	public unsafe static int** __unep@?EcValidateParameters@EcAdminGetMailboxTableRpc@@$$FUEAAJXZ;

	// Token: 0x040002E5 RID: 741 RVA: 0x0006EB70 File Offset: 0x0006DD70
	public unsafe static int** __unep@?EcValidateParameters@EcAdminNotifyOnDSChangeRpc@@$$FUEAAJXZ;

	// Token: 0x040002E6 RID: 742 RVA: 0x0006EB78 File Offset: 0x0006DD78
	public unsafe static int** __unep@?EcValidateParameters@EcLogReplayRequestRpc@@$$FUEAAJXZ;

	// Token: 0x040002E7 RID: 743 RVA: 0x0006EAE8 File Offset: 0x0006DCE8
	unsafe static int** __unep@?InternalExecute@AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@$$FUEAAJXZ;

	// Token: 0x040002E8 RID: 744 RVA: 0x0015B040 File Offset: 0x00159A40
	public static method __m2mep@?UToMUInt32@@$$FYMP$01EAIHPEAK@Z;

	// Token: 0x040002E9 RID: 745 RVA: 0x0015B050 File Offset: 0x00159A50
	public static method __m2mep@?MToUUint32@@$$FYMJP$01EAIPEAHPEAPEAK@Z;

	// Token: 0x040002EA RID: 746 RVA: 0x0015B060 File Offset: 0x00159A60
	public static method __m2mep@??0EcListAllMdbStatus50AsyncState@@$$FQEAA@XZ;

	// Token: 0x040002EB RID: 747 RVA: 0x0015B070 File Offset: 0x00159A70
	public static method __m2mep@??1EcListAllMdbStatus50AsyncState@@$$FQEAA@XZ;

	// Token: 0x040002EC RID: 748 RVA: 0x0015B080 File Offset: 0x00159A80
	public static method __m2mep@??_GEcListAllMdbStatus50AsyncState@@$$FQEAAPEAXI@Z;

	// Token: 0x040002ED RID: 749 RVA: 0x0015B090 File Offset: 0x00159A90
	public static method __m2mep@?GUIDFromGuid@?A0xdaa67d91@Rpc@Exchange@Microsoft@@$$FYM?AU_GUID@@PE$AAVGuid@System@@@Z;

	// Token: 0x040002EE RID: 750 RVA: 0x0006EB80 File Offset: 0x0006DD80
	unsafe static int** __unep@?InternalExecute@AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@$$FUEAAJXZ;

	// Token: 0x040002EF RID: 751 RVA: 0x0015B0A8 File Offset: 0x00159AA8
	public static method __m2mep@?InternalExecute@AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@$$FUEAAJXZ;

	// Token: 0x040002F0 RID: 752 RVA: 0x0015B0B8 File Offset: 0x00159AB8
	public static method __m2mep@?GUIDFromGuid@?A0x80bacf13@Rpc@Exchange@Microsoft@@$$FYM?AU_GUID@@PE$AAVGuid@System@@@Z;

	// Token: 0x040002F1 RID: 753 RVA: 0x0006EB88 File Offset: 0x0006DD88
	public unsafe static int** __unep@?InternalExecute@AdminRpcServer_Wrapper@AdminRpc@Rpc@Exchange@Microsoft@@$$FUEAAJXZ;

	// Token: 0x040002F2 RID: 754 RVA: 0x0015B0D0 File Offset: 0x00159AD0
	public static method __m2mep@?GUIDFromGuid@?A0x40f01437@Rpc@Exchange@Microsoft@@$$FYM?AU_GUID@@PE$AAVGuid@System@@@Z;

	// Token: 0x040002F3 RID: 755 RVA: 0x0015B120 File Offset: 0x00159B20
	public static method __m2mep@?RunNow@@$$J0YAXPEAXPEBDU_GUID@@2@Z;

	// Token: 0x040002F4 RID: 756 RVA: 0x0015B0F0 File Offset: 0x00159AF0
	public static method __m2mep@?Halt@@$$J0YAXPEAXPEBD@Z;

	// Token: 0x040002F5 RID: 757 RVA: 0x0015B100 File Offset: 0x00159B00
	public static method __m2mep@?RunNowWithParamsHR@@$$J0YAJPEAXPEBDU_GUID@@21@Z;

	// Token: 0x040002F6 RID: 758 RVA: 0x0015B110 File Offset: 0x00159B10
	public static method __m2mep@?RunNowHR@@$$J0YAJPEAXPEBDU_GUID@@2@Z;

	// Token: 0x040002F7 RID: 759 RVA: 0x0015B0E0 File Offset: 0x00159AE0
	public static method __m2mep@?HaltHR@@$$J0YAJPEAXPEBD@Z;

	// Token: 0x040002F8 RID: 760 RVA: 0x0015B130 File Offset: 0x00159B30
	public static method __m2mep@?GuidFromGUID@?A0x1aeca6b5@Rpc@Exchange@Microsoft@@$$FYM?AVGuid@System@@AEBU_GUID@@@Z;

	// Token: 0x040002F9 RID: 761 RVA: 0x0015B140 File Offset: 0x00159B40
	public static method __m2mep@?ToUnmanagedBool@?A0x5763173e@@$$FYAH_N@Z;

	// Token: 0x040002FA RID: 762 RVA: 0x0015B150 File Offset: 0x00159B50
	public static method __m2mep@?UToMSeederStatus@?A0x5763173e@Cluster@Rpc@Exchange@Microsoft@@$$FYMPE$AAVRpcSeederStatus@2345@QEBUtagSeederStatus2@@@Z;

	// Token: 0x040002FB RID: 763 RVA: 0x0015B160 File Offset: 0x00159B60
	public static method __m2mep@?FromGuidArray@?A0x5763173e@Cluster@Rpc@Exchange@Microsoft@@$$FYMPEAU_GUID@@P$01EAVGuid@System@@PEAH@Z;

	// Token: 0x040002FC RID: 764 RVA: 0x0015B170 File Offset: 0x00159B70
	public static method __m2mep@?InitSeederArgs@?A0x5763173e@Cluster@Rpc@Exchange@Microsoft@@$$FYAXPEAUtagSeederArgs3@@@Z;

	// Token: 0x040002FD RID: 765 RVA: 0x0015B180 File Offset: 0x00159B80
	public static method __m2mep@?InitSeederArgs@?A0x5763173e@Cluster@Rpc@Exchange@Microsoft@@$$FYAXPEAUtagSeederArgs4@@@Z;

	// Token: 0x040002FE RID: 766 RVA: 0x0015B190 File Offset: 0x00159B90
	public static method __m2mep@?InitSeederArgs@?A0x5763173e@Cluster@Rpc@Exchange@Microsoft@@$$FYAXPEAUtagSeederArgs5@@@Z;

	// Token: 0x040002FF RID: 767 RVA: 0x0015B1A0 File Offset: 0x00159BA0
	public static method __m2mep@?FreeSeederArgs@?A0x5763173e@Cluster@Rpc@Exchange@Microsoft@@$$FYAXPEAUtagSeederArgs3@@@Z;

	// Token: 0x04000300 RID: 768 RVA: 0x0015B1B0 File Offset: 0x00159BB0
	public static method __m2mep@?FreeSeederArgs@?A0x5763173e@Cluster@Rpc@Exchange@Microsoft@@$$FYAXPEAUtagSeederArgs4@@@Z;

	// Token: 0x04000301 RID: 769 RVA: 0x0015B1C0 File Offset: 0x00159BC0
	public static method __m2mep@?FreeSeederArgs@?A0x5763173e@Cluster@Rpc@Exchange@Microsoft@@$$FYAXPEAUtagSeederArgs5@@@Z;

	// Token: 0x04000302 RID: 770 RVA: 0x0015B1D0 File Offset: 0x00159BD0
	public static method __m2mep@?MToUSeederArgs@?A0x5763173e@Cluster@Rpc@Exchange@Microsoft@@$$FYMJPE$AAVRpcSeederArgs@2345@PEAUtagSeederArgs3@@@Z;

	// Token: 0x04000303 RID: 771 RVA: 0x0015B1E0 File Offset: 0x00159BE0
	public static method __m2mep@?MToUSeederArgs@?A0x5763173e@Cluster@Rpc@Exchange@Microsoft@@$$FYMJPE$AAVRpcSeederArgs@2345@PEAUtagSeederArgs4@@@Z;

	// Token: 0x04000304 RID: 772 RVA: 0x0015B1F0 File Offset: 0x00159BF0
	public static method __m2mep@?MToUSeederArgs@?A0x5763173e@Cluster@Rpc@Exchange@Microsoft@@$$FYMJPE$AAVRpcSeederArgs@2345@PEAUtagSeederArgs5@@@Z;

	// Token: 0x04000305 RID: 773 RVA: 0x0015B200 File Offset: 0x00159C00
	public static method __m2mep@?IsValidDateTime@?A0x3667cccd@@$$FYM_NVDateTime@System@@@Z;

	// Token: 0x04000306 RID: 774 RVA: 0x0015B450 File Offset: 0x00159E50
	public static method __m2mep@?FromUnmanagedBool@?A0x0d7fa5bc@@$$FYA_NH@Z;

	// Token: 0x04000307 RID: 775 RVA: 0x0015B4A0 File Offset: 0x00159EA0
	public static method __m2mep@?StringCchCopyW@@$$FYAJPEAG_KPEBG@Z;

	// Token: 0x04000308 RID: 776 RVA: 0x0015B460 File Offset: 0x00159E60
	public static method __m2mep@?StringValidateDestW@?A0x0d7fa5bc@@$$FYAJPEBG_K_K@Z;

	// Token: 0x04000309 RID: 777 RVA: 0x0015B470 File Offset: 0x00159E70
	public static method __m2mep@?StringCopyWorkerW@?A0x0d7fa5bc@@$$FYAJPEAG_KPEA_KPEBG1@Z;

	// Token: 0x0400030A RID: 778 RVA: 0x0015B4B0 File Offset: 0x00159EB0
	public static method __m2mep@?UToMSeederArgs@?A0x0d7fa5bc@@$$FYMPE$AAVRpcSeederArgs@Cluster@Rpc@Exchange@Microsoft@@QEAUtagSeederArgs3@@@Z;

	// Token: 0x0400030B RID: 779 RVA: 0x0015B4C0 File Offset: 0x00159EC0
	public static method __m2mep@?UToMSeederArgs@?A0x0d7fa5bc@@$$FYMPE$AAVRpcSeederArgs@Cluster@Rpc@Exchange@Microsoft@@QEAUtagSeederArgs4@@@Z;

	// Token: 0x0400030C RID: 780 RVA: 0x0015B4D0 File Offset: 0x00159ED0
	public static method __m2mep@?UToMSeederArgs@?A0x0d7fa5bc@@$$FYMPE$AAVRpcSeederArgs@Cluster@Rpc@Exchange@Microsoft@@QEAUtagSeederArgs5@@@Z;

	// Token: 0x0400030D RID: 781 RVA: 0x0015B210 File Offset: 0x00159C10
	public static method __m2mep@?BaseSecurityCheck@@$$FYM_NPE$AAVReplayRpcServerBase@Cluster@Rpc@Exchange@Microsoft@@PEAX@Z;

	// Token: 0x0400030E RID: 782 RVA: 0x0015B360 File Offset: 0x00159D60
	public static method __m2mep@?ManagedStringToRpcOutputWsz@@$$FYMPEAGPE$AAVString@System@@@Z;

	// Token: 0x0400030F RID: 783 RVA: 0x0015B220 File Offset: 0x00159C20
	public static method __m2mep@?RequestSuspend@@$$J0YAJPEAXU_GUID@@PEAGPEAUtagErrorExceptionInfo@@@Z;

	// Token: 0x04000310 RID: 784 RVA: 0x0015B230 File Offset: 0x00159C30
	public static method __m2mep@?RequestSuspend2@@$$J0YAJPEAXU_GUID@@PEAGHPEAUtagErrorExceptionInfo@@@Z;

	// Token: 0x04000311 RID: 785 RVA: 0x0015B240 File Offset: 0x00159C40
	public static method __m2mep@?RequestSuspend3@@$$J0YAJPEAXU_GUID@@PEAGHHPEAUtagErrorExceptionInfo@@@Z;

	// Token: 0x04000312 RID: 786 RVA: 0x0015B250 File Offset: 0x00159C50
	public static method __m2mep@?RequestResume@@$$J0YAJPEAXU_GUID@@PEAUtagErrorExceptionInfo@@@Z;

	// Token: 0x04000313 RID: 787 RVA: 0x0015B260 File Offset: 0x00159C60
	public static method __m2mep@?RequestResume2@@$$J0YAJPEAXU_GUID@@HPEAUtagErrorExceptionInfo@@@Z;

	// Token: 0x04000314 RID: 788 RVA: 0x0015B270 File Offset: 0x00159C70
	public static method __m2mep@?RpcsDisableReplayLag@@$$J0YAJPEAXU_GUID@@PEAGPEAUtagErrorExceptionInfo@@@Z;

	// Token: 0x04000315 RID: 789 RVA: 0x0015B280 File Offset: 0x00159C80
	public static method __m2mep@?RpcsEnableReplayLag@@$$J0YAJPEAXU_GUID@@PEAUtagErrorExceptionInfo@@@Z;

	// Token: 0x04000316 RID: 790 RVA: 0x0015B290 File Offset: 0x00159C90
	public static method __m2mep@?RpcsDisableReplayLag2@@$$J0YAJPEAXU_GUID@@PEAGHPEAUtagErrorExceptionInfo@@@Z;

	// Token: 0x04000317 RID: 791 RVA: 0x0015B2A0 File Offset: 0x00159CA0
	public static method __m2mep@?RpcsEnableReplayLag2@@$$J0YAJPEAXU_GUID@@HPEAUtagErrorExceptionInfo@@@Z;

	// Token: 0x04000318 RID: 792 RVA: 0x0015B370 File Offset: 0x00159D70
	public static method __m2mep@?GetCopyStatusEx2@@$$J0YAJPEAXIHPEAU_GUID@@PEAHPEAPEAE2PEAUtagErrorExceptionInfo@@@Z;

	// Token: 0x04000319 RID: 793 RVA: 0x0015B380 File Offset: 0x00159D80
	public static method __m2mep@?RpcsGetCopyStatusEx4@@$$J0YAJPEAXIHPEAU_GUID@@PEAHPEAPEAE2PEAUtagErrorExceptionInfo@@@Z;

	// Token: 0x0400031A RID: 794 RVA: 0x0015B390 File Offset: 0x00159D90
	public static method __m2mep@?RpcsGetCopyStatusWithHealthState@@$$J0YAJPEAXIHPEAU_GUID@@PEAHPEAPEAEPEAUtagErrorExceptionInfo@@@Z;

	// Token: 0x0400031B RID: 795 RVA: 0x0015B3A0 File Offset: 0x00159DA0
	public static method __m2mep@?RpcsGetCopyStatusBasic@@$$J0YAJPEAXIHPEAU_GUID@@PEAHPEAPEAE2PEAUtagErrorExceptionInfo@@@Z;

	// Token: 0x0400031C RID: 796 RVA: 0x0015B2B0 File Offset: 0x00159CB0
	public static method __m2mep@?GetDagNetworkConfig@@$$J0YAJPEAXPEAHPEAPEAEPEAUtagErrorExceptionInfo@@@Z;

	// Token: 0x0400031D RID: 797 RVA: 0x0015B2C0 File Offset: 0x00159CC0
	public static method __m2mep@?SetDagNetwork@@$$J0YAJPEAXHPEAEPEAUtagErrorExceptionInfo@@@Z;

	// Token: 0x0400031E RID: 798 RVA: 0x0015B2D0 File Offset: 0x00159CD0
	public static method __m2mep@?SetDagNetworkConfig@@$$J0YAJPEAXHPEAEPEAUtagErrorExceptionInfo@@@Z;

	// Token: 0x0400031F RID: 799 RVA: 0x0015B2E0 File Offset: 0x00159CE0
	public static method __m2mep@?RemoveDagNetwork@@$$J0YAJPEAXHPEAEPEAUtagErrorExceptionInfo@@@Z;

	// Token: 0x04000320 RID: 800 RVA: 0x0015B2F0 File Offset: 0x00159CF0
	public static method __m2mep@?RunConfigurationUpdater@@$$J0YAJPEAXPEAUtagErrorExceptionInfo@@@Z;

	// Token: 0x04000321 RID: 801 RVA: 0x0015B300 File Offset: 0x00159D00
	public static method __m2mep@?RpcsNotifyChangedReplayConfiguration@@$$J0YAJPEAXU_GUID@@HHHHPEAUtagErrorExceptionInfo@@@Z;

	// Token: 0x04000322 RID: 802 RVA: 0x0015B3B0 File Offset: 0x00159DB0
	public static method __m2mep@?RpcsClusterPrepareDatabaseSeedAndBegin3@@$$J0YAJPEAXPEAUtagSeederArgs3@@PEAUtagErrorExceptionInfo@@PEAUtagSeederStatus2@@@Z;

	// Token: 0x04000323 RID: 803 RVA: 0x0015B3C0 File Offset: 0x00159DC0
	public static method __m2mep@?RpcsClusterPrepareDatabaseSeedAndBegin4@@$$J0YAJPEAXPEAUtagSeederArgs4@@PEAUtagErrorExceptionInfo@@PEAUtagSeederStatus2@@@Z;

	// Token: 0x04000324 RID: 804 RVA: 0x0015B3D0 File Offset: 0x00159DD0
	public static method __m2mep@?RpcsClusterPrepareDatabaseSeedAndBegin5@@$$J0YAJPEAXPEAUtagSeederArgs5@@PEAUtagErrorExceptionInfo@@PEAUtagSeederStatus2@@@Z;

	// Token: 0x04000325 RID: 805 RVA: 0x0015B310 File Offset: 0x00159D10
	public static method __m2mep@?CancelDbSeed@@$$J0YAJPEAXU_GUID@@PEAUtagErrorExceptionInfo@@@Z;

	// Token: 0x04000326 RID: 806 RVA: 0x0015B320 File Offset: 0x00159D20
	public static method __m2mep@?EndDbSeed@@$$J0YAJPEAXU_GUID@@PEAUtagErrorExceptionInfo@@@Z;

	// Token: 0x04000327 RID: 807 RVA: 0x0015B3E0 File Offset: 0x00159DE0
	public static method __m2mep@?RpcsClusterGetDatabaseSeedStatus@@$$J0YAJPEAXU_GUID@@PEAUtagSeederStatus2@@PEAUtagErrorExceptionInfo@@@Z;

	// Token: 0x04000328 RID: 808 RVA: 0x0015B3F0 File Offset: 0x00159DF0
	public static method __m2mep@?RpcsClusterInstallFailoverClustering@@$$J0YAJPEAXPEAPEAGPEAUtagErrorExceptionInfo@@@Z;

	// Token: 0x04000329 RID: 809 RVA: 0x0015B400 File Offset: 0x00159E00
	public static method __m2mep@?RpcsClusterCreateCluster@@$$J0YAJPEAXPEAG1HPEAPEAGPEAK2PEAUtagErrorExceptionInfo@@@Z;

	// Token: 0x0400032A RID: 810 RVA: 0x0015B410 File Offset: 0x00159E10
	public static method __m2mep@?RpcsClusterDestroyCluster@@$$J0YAJPEAXPEAGPEAPEAGPEAUtagErrorExceptionInfo@@@Z;

	// Token: 0x0400032B RID: 811 RVA: 0x0015B420 File Offset: 0x00159E20
	public static method __m2mep@?RpcsClusterAddNodeToCluster@@$$J0YAJPEAXPEAGPEAPEAGPEAUtagErrorExceptionInfo@@@Z;

	// Token: 0x0400032C RID: 812 RVA: 0x0015B430 File Offset: 0x00159E30
	public static method __m2mep@?RpcsClusterEvictNodeFromCluster@@$$J0YAJPEAXPEAGPEAPEAGPEAUtagErrorExceptionInfo@@@Z;

	// Token: 0x0400032D RID: 813 RVA: 0x0015B440 File Offset: 0x00159E40
	public static method __m2mep@?RpcsClusterForceCleanupNode@@$$J0YAJPEAXPEAPEAGPEAUtagErrorExceptionInfo@@@Z;

	// Token: 0x0400032E RID: 814 RVA: 0x0015B480 File Offset: 0x00159E80
	public static method __m2mep@?MToUSeederStatus@?A0x0d7fa5bc@@$$FYMJPE$AAVRpcSeederStatus@Cluster@Rpc@Exchange@Microsoft@@PEAUtagSeederStatus2@@@Z;

	// Token: 0x0400032F RID: 815 RVA: 0x0015B490 File Offset: 0x00159E90
	public static method __m2mep@?ToGuidArray@?A0x0d7fa5bc@@$$FYMP$01EAVGuid@System@@HPEAU_GUID@@@Z;

	// Token: 0x04000330 RID: 816 RVA: 0x0015B330 File Offset: 0x00159D30
	public static method __m2mep@?NullableBoolToInt@@$$FYMHAE$CAV?$Nullable@_N@System@@@Z;

	// Token: 0x04000331 RID: 817 RVA: 0x0015B340 File Offset: 0x00159D40
	public static method __m2mep@?NullableBoolToString@@$$FYMPE$AAVString@System@@AE$CAV?$Nullable@_N@2@@Z;

	// Token: 0x04000332 RID: 818 RVA: 0x0015B350 File Offset: 0x00159D50
	public static method __m2mep@?IntToNullableBool@@$$FYM?AV?$Nullable@_N@System@@H@Z;

	// Token: 0x04000333 RID: 819 RVA: 0x0006EB90 File Offset: 0x0006DD90
	internal static $ArrayType$$$BY0BC@$$CBG ??_C@_1CE@IGPIGGGM@?$AAM?$AAS?$AAE?$AAx?$AAc?$AAh?$AAa?$AAn?$AAg?$AAe?$AA?5?$AAC?$AAo?$AAm?$AAm?$AAo?$AAn?$AA?$AA@;

	// Token: 0x04000334 RID: 820 RVA: 0x0006EBB4 File Offset: 0x0006DDB4
	internal static $ArrayType$$$BY02$$CBG ??_C@_15EFLNJKHH@?$AA?$CF?$AAu?$AA?$AA@;

	// Token: 0x04000335 RID: 821 RVA: 0x0006EBC0 File Offset: 0x0006DDC0
	internal static $ArrayType$$$BY05$$CBG ??_C@_1M@OGLPPGPN@?$AA?$CF?$AAI?$AA6?$AA4?$AAu?$AA?$AA@;

	// Token: 0x04000336 RID: 822 RVA: 0x00160218 File Offset: 0x0015EC18
	internal static ulong ?maxSizeLogged@?1??TryLogOOM@@YAX_K@Z@4_KA;

	// Token: 0x04000337 RID: 823 RVA: 0x0015B5E0 File Offset: 0x00159FE0
	public static method __m2mep@?PtrToStringChars@@$$FYMPE$CB_WPE$ABVString@System@@@Z;

	// Token: 0x04000338 RID: 824 RVA: 0x0015B4E0 File Offset: 0x00159EE0
	public static method __m2mep@?MToUBytes@@$$FYMJP$01EAEPEAHPEAPEAE@Z;

	// Token: 0x04000339 RID: 825 RVA: 0x0015B4F0 File Offset: 0x00159EF0
	public static method __m2mep@?MToUBytes@@$$FYM?AVIntPtr@System@@P$01EAEPEAH@Z;

	// Token: 0x0400033A RID: 826 RVA: 0x0015B500 File Offset: 0x00159F00
	public static method __m2mep@?MToUBytesN@@$$FYMJP$01EAEHPEAPEAE@Z;

	// Token: 0x0400033B RID: 827 RVA: 0x0015B510 File Offset: 0x00159F10
	public static method __m2mep@?MToUBytesClient@@$$FYMPEAEP$01EAEPEAH@Z;

	// Token: 0x0400033C RID: 828 RVA: 0x0015B520 File Offset: 0x00159F20
	public static method __m2mep@?UToMBytes@@$$FYMP$01EAEHPEAE@Z;

	// Token: 0x0400033D RID: 829 RVA: 0x0015B530 File Offset: 0x00159F30
	public static method __m2mep@?UToMBytes@@$$FYMP$01EAEHVIntPtr@System@@@Z;

	// Token: 0x0400033E RID: 830 RVA: 0x0015B540 File Offset: 0x00159F40
	public static method __m2mep@?StringToUnmanaged@@$$FYMPEAGPE$AAVString@System@@@Z;

	// Token: 0x0400033F RID: 831 RVA: 0x0015B550 File Offset: 0x00159F50
	public static method __m2mep@?StringToUnmanaged@@$$FYMJPE$AAVString@System@@PEAPEAG@Z;

	// Token: 0x04000340 RID: 832 RVA: 0x0015B560 File Offset: 0x00159F60
	public static method __m2mep@?StringToUnmanagedMultiByte@@$$FYMPEADPE$AAVString@System@@I@Z;

	// Token: 0x04000341 RID: 833 RVA: 0x0015B570 File Offset: 0x00159F70
	public static method __m2mep@?GetLocalComputerName@@$$FYMPE$AAVString@System@@W4_COMPUTER_NAME_FORMAT@@@Z;

	// Token: 0x04000342 RID: 834 RVA: 0x0015B580 File Offset: 0x00159F80
	public static method __m2mep@?FromGUID@@$$FYM?AVGuid@System@@AEAU_GUID@@@Z;

	// Token: 0x04000343 RID: 835 RVA: 0x0015B590 File Offset: 0x00159F90
	public static method __m2mep@?ToGUID@@$$FYM?AU_GUID@@AEAVGuid@System@@@Z;

	// Token: 0x04000344 RID: 836 RVA: 0x0015B5A0 File Offset: 0x00159FA0
	public static method __m2mep@?UToMString@@$$FYMPE$AAVString@System@@PEAG@Z;

	// Token: 0x04000345 RID: 837 RVA: 0x0015B5B0 File Offset: 0x00159FB0
	public static method __m2mep@?FreeString@@$$FYAXPEAG@Z;

	// Token: 0x04000346 RID: 838 RVA: 0x0015B5C0 File Offset: 0x00159FC0
	public static method __m2mep@?NullableGuidFromPGUID@@$$FYM?AV?$Nullable@VGuid@System@@@System@@PEAU_GUID@@@Z;

	// Token: 0x04000347 RID: 839 RVA: 0x0015B5D0 File Offset: 0x00159FD0
	public static method __m2mep@?DwExRpcExceptionFilter@@$$FYAKK@Z;

	// Token: 0x04000348 RID: 840 RVA: 0x0015B5F0 File Offset: 0x00159FF0
	public static method __m2mep@?StartSyncNow@@$$J0YAJPEAXPEAGHHPEAH@Z;

	// Token: 0x04000349 RID: 841 RVA: 0x0015B600 File Offset: 0x0015A000
	public static method __m2mep@?GetSyncNowResult@@$$J0YAJPEAXPEAH1PEAPEAE@Z;

	// Token: 0x0400034A RID: 842 RVA: 0x0006EC50 File Offset: 0x0006DE50
	internal static $ArrayType$$$BY0EB@$$CBG ??_C@_1IC@DGEKGGAD@?$AAS?$AAY?$AAS?$AAT?$AAE?$AAM?$AA?2?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAS?$AAe?$AAt?$AA?2?$AAS?$AAe?$AAr?$AAv?$AAi?$AAc?$AAe@;

	// Token: 0x0400034B RID: 843 RVA: 0x0006ECD8 File Offset: 0x0006DED8
	internal static $ArrayType$$$BY0BJ@$$CBG ??_C@_1DC@PDPFIKDH@?$AAE?$AAM?$AAS?$AAM?$AAD?$AAB?$AA?5?$AAN?$AAa?$AAt?$AAi?$AAv?$AAe?$AA?5?$AAQ?$AAu?$AAe?$AAu?$AAe?$AA?5?$AAS?$AAi?$AAz?$AAe?$AA?$AA@;

	// Token: 0x0400034C RID: 844 RVA: 0x0006ED58 File Offset: 0x0006DF58
	internal static $ArrayType$$$BY0BP@$$CBG ??_C@_1DO@HPLDMJIA@?$AAE?$AAM?$AAS?$AAM?$AAD?$AAB?$AA?5?$AAN?$AAa?$AAt?$AAi?$AAv?$AAe?$AA?5?$AAD?$AAi?$AAs?$AAp?$AAa?$AAt?$AAc?$AAh?$AA?5?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AAs?$AA?$AA@;

	// Token: 0x0400034D RID: 845 RVA: 0x0006ED10 File Offset: 0x0006DF10
	internal static $ArrayType$$$BY0CE@$$CBG ??_C@_1EI@CPAOLHAO@?$AAE?$AAM?$AAS?$AAM?$AAD?$AAB?$AA?5?$AAN?$AAa?$AAt?$AAi?$AAv?$AAe?$AA?5?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AAs?$AA?5?$AAP?$AAe?$AAr?$AA?5?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs@;

	// Token: 0x0400034E RID: 846 RVA: 0x00151448 File Offset: 0x00150648
	internal static $_s__RTTIBaseClassArray$_extraBytes_16 ??_R2CEMSMDBLazyInitRequestQueue@@8;

	// Token: 0x0400034F RID: 847 RVA: 0x001513D0 File Offset: 0x001505D0
	internal static $_s__RTTIBaseClassArray$_extraBytes_8 ??_R2?$CLazyInitRequestQueue@VCEMSMDBRequestQueue@@UEMSMDB_REQUEST@@$0CHBA@$00@@8;

	// Token: 0x04000350 RID: 848 RVA: 0x001515C0 File Offset: 0x001507C0
	internal static $_s__RTTIBaseClassArray$_extraBytes_16 ??_R2CEMSMDBRequestQueue@@8;

	// Token: 0x04000351 RID: 849 RVA: 0x00151570 File Offset: 0x00150770
	internal static $_s__RTTIBaseClassArray$_extraBytes_8 ??_R2?$CRequestQueue@UEMSMDB_REQUEST@@@@8;

	// Token: 0x04000352 RID: 850 RVA: 0x00151BC0 File Offset: 0x00150DC0
	internal static $_s__RTTIBaseClassArray$_extraBytes_32 ??_R2ExchangeAsyncRpcCallWrapper_EcDoAsyncWaitEx@ExchangeServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x04000353 RID: 851 RVA: 0x00151B30 File Offset: 0x00150D30
	internal static $_s__RTTIBaseClassArray$_extraBytes_32 ??_R2ExchangeAsyncRpcCallWrapper_EcDoAsyncConnectEx@ExchangeServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x04000354 RID: 852 RVA: 0x00151AA0 File Offset: 0x00150CA0
	internal static $_s__RTTIBaseClassArray$_extraBytes_32 ??_R2ExchangeAsyncRpcCallWrapper_EcDoRpcExt2@ExchangeServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x04000355 RID: 853 RVA: 0x00151A10 File Offset: 0x00150C10
	internal static $_s__RTTIBaseClassArray$_extraBytes_32 ??_R2ExchangeAsyncRpcCallWrapper_EcDoDummy@ExchangeServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x04000356 RID: 854 RVA: 0x00151980 File Offset: 0x00150B80
	internal static $_s__RTTIBaseClassArray$_extraBytes_32 ??_R2ExchangeAsyncRpcCallWrapper_EcDoConnectEx@ExchangeServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x04000357 RID: 855 RVA: 0x001518F0 File Offset: 0x00150AF0
	internal static $_s__RTTIBaseClassArray$_extraBytes_32 ??_R2ExchangeAsyncRpcCallWrapper_EcDoDisconnect@ExchangeServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x04000358 RID: 856 RVA: 0x00151840 File Offset: 0x00150A40
	internal static $_s__RTTIBaseClassArray$_extraBytes_24 ??_R2ExchangeAsyncRpcCallWrapper_AsyncEMSMDB@ExchangeServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x04000359 RID: 857 RVA: 0x001517E8 File Offset: 0x001509E8
	internal static $_s__RTTIBaseClassArray$_extraBytes_16 ??_R2?$BaseAsyncRpcCallWrapper@VExchangeAsyncRpcServer_AsyncEMSMDB@ExchangeServer@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@8;

	// Token: 0x0400035A RID: 858 RVA: 0x00151738 File Offset: 0x00150938
	internal static $_s__RTTIBaseClassArray$_extraBytes_24 ??_R2ExchangeAsyncRpcCallWrapper_EMSMDB@ExchangeServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x0400035B RID: 859 RVA: 0x001516E0 File Offset: 0x001508E0
	internal static $_s__RTTIBaseClassArray$_extraBytes_16 ??_R2?$BaseAsyncRpcCallWrapper@VExchangeAsyncRpcServer_EMSMDB@ExchangeServer@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@8;

	// Token: 0x0400035C RID: 860 RVA: 0x00151350 File Offset: 0x00150550
	internal static $_s__RTTIBaseClassArray$_extraBytes_16 ??_R2ExACXHRundown_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x0400035D RID: 861 RVA: 0x001514C8 File Offset: 0x001506C8
	internal static $_s__RTTIBaseClassArray$_extraBytes_16 ??_R2ExCXHRundown_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x0400035E RID: 862 RVA: 0x001512D0 File Offset: 0x001504D0
	internal static $_s__RTTIBaseClassArray$_extraBytes_16 ??_R2RundownQueue_ExACXH@@8;

	// Token: 0x0400035F RID: 863 RVA: 0x00151250 File Offset: 0x00150450
	internal static $_s__RTTIBaseClassArray$_extraBytes_16 ??_R2RundownQueue_ExCXH@@8;

	// Token: 0x04000360 RID: 864 RVA: 0x00151200 File Offset: 0x00150400
	internal static $_s__RTTIBaseClassArray$_extraBytes_8 ??_R2?$BaseRundownQueue@PEAX@@8;

	// Token: 0x04000361 RID: 865 RVA: 0x00151668 File Offset: 0x00150868
	internal static $_s__RTTIBaseClassArray$_extraBytes_8 ??_R2ManagedExceptionAsyncCrashWrapper@Rpc@Exchange@Microsoft@@8;

	// Token: 0x04000362 RID: 866 RVA: 0x00151420 File Offset: 0x00150620
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@CEMSMDBLazyInitRequestQueue@@8;

	// Token: 0x04000363 RID: 867 RVA: 0x001513A8 File Offset: 0x001505A8
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@?$CLazyInitRequestQueue@VCEMSMDBRequestQueue@@UEMSMDB_REQUEST@@$0CHBA@$00@@8;

	// Token: 0x04000364 RID: 868 RVA: 0x00151548 File Offset: 0x00150748
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@CEMSMDBRequestQueue@@8;

	// Token: 0x04000365 RID: 869 RVA: 0x00151598 File Offset: 0x00150798
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@?$CRequestQueue@UEMSMDB_REQUEST@@@@8;

	// Token: 0x04000366 RID: 870 RVA: 0x00151B98 File Offset: 0x00150D98
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@ExchangeAsyncRpcCallWrapper_EcDoAsyncWaitEx@ExchangeServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x04000367 RID: 871 RVA: 0x00151B08 File Offset: 0x00150D08
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@ExchangeAsyncRpcCallWrapper_EcDoAsyncConnectEx@ExchangeServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x04000368 RID: 872 RVA: 0x00151A78 File Offset: 0x00150C78
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@ExchangeAsyncRpcCallWrapper_EcDoRpcExt2@ExchangeServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x04000369 RID: 873 RVA: 0x001519E8 File Offset: 0x00150BE8
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@ExchangeAsyncRpcCallWrapper_EcDoDummy@ExchangeServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x0400036A RID: 874 RVA: 0x00151958 File Offset: 0x00150B58
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@ExchangeAsyncRpcCallWrapper_EcDoConnectEx@ExchangeServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x0400036B RID: 875 RVA: 0x001518C8 File Offset: 0x00150AC8
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@ExchangeAsyncRpcCallWrapper_EcDoDisconnect@ExchangeServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x0400036C RID: 876 RVA: 0x001517C0 File Offset: 0x001509C0
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@ExchangeAsyncRpcCallWrapper_AsyncEMSMDB@ExchangeServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x0400036D RID: 877 RVA: 0x00151818 File Offset: 0x00150A18
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@?$BaseAsyncRpcCallWrapper@VExchangeAsyncRpcServer_AsyncEMSMDB@ExchangeServer@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@8;

	// Token: 0x0400036E RID: 878 RVA: 0x001516B8 File Offset: 0x001508B8
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@ExchangeAsyncRpcCallWrapper_EMSMDB@ExchangeServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x0400036F RID: 879 RVA: 0x00151710 File Offset: 0x00150910
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@?$BaseAsyncRpcCallWrapper@VExchangeAsyncRpcServer_EMSMDB@ExchangeServer@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@8;

	// Token: 0x04000370 RID: 880 RVA: 0x00151328 File Offset: 0x00150528
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@ExACXHRundown_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x04000371 RID: 881 RVA: 0x001514A0 File Offset: 0x001506A0
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@ExCXHRundown_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x04000372 RID: 882 RVA: 0x001512A8 File Offset: 0x001504A8
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@RundownQueue_ExACXH@@8;

	// Token: 0x04000373 RID: 883 RVA: 0x001511D8 File Offset: 0x001503D8
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@RundownQueue_ExCXH@@8;

	// Token: 0x04000374 RID: 884 RVA: 0x00151228 File Offset: 0x00150428
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@?$BaseRundownQueue@PEAX@@8;

	// Token: 0x04000375 RID: 885 RVA: 0x00151640 File Offset: 0x00150840
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@ManagedExceptionAsyncCrashWrapper@Rpc@Exchange@Microsoft@@8;

	// Token: 0x04000376 RID: 886 RVA: 0x001513E0 File Offset: 0x001505E0
	internal static _s__RTTIClassHierarchyDescriptor ??_R3?$CLazyInitRequestQueue@VCEMSMDBRequestQueue@@UEMSMDB_REQUEST@@$0CHBA@$00@@8;

	// Token: 0x04000377 RID: 887 RVA: 0x0015B760 File Offset: 0x0015A160
	internal static $_TypeDescriptor$_extraBytes_80 ??_R0?AV?$CLazyInitRequestQueue@VCEMSMDBRequestQueue@@UEMSMDB_REQUEST@@$0CHBA@$00@@@8;

	// Token: 0x04000378 RID: 888 RVA: 0x00151460 File Offset: 0x00150660
	internal static _s__RTTIClassHierarchyDescriptor ??_R3CEMSMDBLazyInitRequestQueue@@8;

	// Token: 0x04000379 RID: 889 RVA: 0x0015B800 File Offset: 0x0015A200
	internal static $_TypeDescriptor$_extraBytes_34 ??_R0?AVCEMSMDBLazyInitRequestQueue@@@8;

	// Token: 0x0400037A RID: 890 RVA: 0x00151580 File Offset: 0x00150780
	internal static _s__RTTIClassHierarchyDescriptor ??_R3?$CRequestQueue@UEMSMDB_REQUEST@@@@8;

	// Token: 0x0400037B RID: 891 RVA: 0x0015B990 File Offset: 0x0015A390
	internal static $_TypeDescriptor$_extraBytes_40 ??_R0?AV?$CRequestQueue@UEMSMDB_REQUEST@@@@@8;

	// Token: 0x0400037C RID: 892 RVA: 0x001515D8 File Offset: 0x001507D8
	internal static _s__RTTIClassHierarchyDescriptor ??_R3CEMSMDBRequestQueue@@8;

	// Token: 0x0400037D RID: 893 RVA: 0x0015B960 File Offset: 0x0015A360
	internal static $_TypeDescriptor$_extraBytes_26 ??_R0?AVCEMSMDBRequestQueue@@@8;

	// Token: 0x0400037E RID: 894 RVA: 0x00151BE8 File Offset: 0x00150DE8
	internal static _s__RTTIClassHierarchyDescriptor ??_R3ExchangeAsyncRpcCallWrapper_EcDoAsyncWaitEx@ExchangeServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x0400037F RID: 895 RVA: 0x0015C0E0 File Offset: 0x0015AAE0
	internal static $_TypeDescriptor$_extraBytes_88 ??_R0?AVExchangeAsyncRpcCallWrapper_EcDoAsyncWaitEx@ExchangeServer@Rpc@Exchange@Microsoft@@@8;

	// Token: 0x04000380 RID: 896 RVA: 0x00151B58 File Offset: 0x00150D58
	internal static _s__RTTIClassHierarchyDescriptor ??_R3ExchangeAsyncRpcCallWrapper_EcDoAsyncConnectEx@ExchangeServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x04000381 RID: 897 RVA: 0x0015C070 File Offset: 0x0015AA70
	internal static $_TypeDescriptor$_extraBytes_91 ??_R0?AVExchangeAsyncRpcCallWrapper_EcDoAsyncConnectEx@ExchangeServer@Rpc@Exchange@Microsoft@@@8;

	// Token: 0x04000382 RID: 898 RVA: 0x00151AC8 File Offset: 0x00150CC8
	internal static _s__RTTIClassHierarchyDescriptor ??_R3ExchangeAsyncRpcCallWrapper_EcDoRpcExt2@ExchangeServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x04000383 RID: 899 RVA: 0x0015C000 File Offset: 0x0015AA00
	internal static $_TypeDescriptor$_extraBytes_84 ??_R0?AVExchangeAsyncRpcCallWrapper_EcDoRpcExt2@ExchangeServer@Rpc@Exchange@Microsoft@@@8;

	// Token: 0x04000384 RID: 900 RVA: 0x00151A38 File Offset: 0x00150C38
	internal static _s__RTTIClassHierarchyDescriptor ??_R3ExchangeAsyncRpcCallWrapper_EcDoDummy@ExchangeServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x04000385 RID: 901 RVA: 0x0015BF90 File Offset: 0x0015A990
	internal static $_TypeDescriptor$_extraBytes_82 ??_R0?AVExchangeAsyncRpcCallWrapper_EcDoDummy@ExchangeServer@Rpc@Exchange@Microsoft@@@8;

	// Token: 0x04000386 RID: 902 RVA: 0x001519A8 File Offset: 0x00150BA8
	internal static _s__RTTIClassHierarchyDescriptor ??_R3ExchangeAsyncRpcCallWrapper_EcDoConnectEx@ExchangeServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x04000387 RID: 903 RVA: 0x0015BF20 File Offset: 0x0015A920
	internal static $_TypeDescriptor$_extraBytes_86 ??_R0?AVExchangeAsyncRpcCallWrapper_EcDoConnectEx@ExchangeServer@Rpc@Exchange@Microsoft@@@8;

	// Token: 0x04000388 RID: 904 RVA: 0x00151918 File Offset: 0x00150B18
	internal static _s__RTTIClassHierarchyDescriptor ??_R3ExchangeAsyncRpcCallWrapper_EcDoDisconnect@ExchangeServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x04000389 RID: 905 RVA: 0x0015BEB0 File Offset: 0x0015A8B0
	internal static $_TypeDescriptor$_extraBytes_87 ??_R0?AVExchangeAsyncRpcCallWrapper_EcDoDisconnect@ExchangeServer@Rpc@Exchange@Microsoft@@@8;

	// Token: 0x0400038A RID: 906 RVA: 0x00151800 File Offset: 0x00150A00
	internal static _s__RTTIClassHierarchyDescriptor ??_R3?$BaseAsyncRpcCallWrapper@VExchangeAsyncRpcServer_AsyncEMSMDB@ExchangeServer@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@8;

	// Token: 0x0400038B RID: 907 RVA: 0x0015BE10 File Offset: 0x0015A810
	internal static $_TypeDescriptor$_extraBytes_131 ??_R0?AV?$BaseAsyncRpcCallWrapper@VExchangeAsyncRpcServer_AsyncEMSMDB@ExchangeServer@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@@8;

	// Token: 0x0400038C RID: 908 RVA: 0x00151860 File Offset: 0x00150A60
	internal static _s__RTTIClassHierarchyDescriptor ??_R3ExchangeAsyncRpcCallWrapper_AsyncEMSMDB@ExchangeServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x0400038D RID: 909 RVA: 0x0015BDA0 File Offset: 0x0015A7A0
	internal static $_TypeDescriptor$_extraBytes_84 ??_R0?AVExchangeAsyncRpcCallWrapper_AsyncEMSMDB@ExchangeServer@Rpc@Exchange@Microsoft@@@8;

	// Token: 0x0400038E RID: 910 RVA: 0x001516F8 File Offset: 0x001508F8
	internal static _s__RTTIClassHierarchyDescriptor ??_R3?$BaseAsyncRpcCallWrapper@VExchangeAsyncRpcServer_EMSMDB@ExchangeServer@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@8;

	// Token: 0x0400038F RID: 911 RVA: 0x0015BD10 File Offset: 0x0015A710
	internal static $_TypeDescriptor$_extraBytes_126 ??_R0?AV?$BaseAsyncRpcCallWrapper@VExchangeAsyncRpcServer_EMSMDB@ExchangeServer@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@@8;

	// Token: 0x04000390 RID: 912 RVA: 0x00151758 File Offset: 0x00150958
	internal static _s__RTTIClassHierarchyDescriptor ??_R3ExchangeAsyncRpcCallWrapper_EMSMDB@ExchangeServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x04000391 RID: 913 RVA: 0x0015BCB0 File Offset: 0x0015A6B0
	internal static $_TypeDescriptor$_extraBytes_79 ??_R0?AVExchangeAsyncRpcCallWrapper_EMSMDB@ExchangeServer@Rpc@Exchange@Microsoft@@@8;

	// Token: 0x04000392 RID: 914 RVA: 0x00151368 File Offset: 0x00150568
	internal static _s__RTTIClassHierarchyDescriptor ??_R3ExACXHRundown_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x04000393 RID: 915 RVA: 0x0015B6F0 File Offset: 0x0015A0F0
	internal static $_TypeDescriptor$_extraBytes_66 ??_R0?AVExACXHRundown_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@@8;

	// Token: 0x04000394 RID: 916 RVA: 0x001514E0 File Offset: 0x001506E0
	internal static _s__RTTIClassHierarchyDescriptor ??_R3ExCXHRundown_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x04000395 RID: 917 RVA: 0x0015B880 File Offset: 0x0015A280
	internal static $_TypeDescriptor$_extraBytes_65 ??_R0?AVExCXHRundown_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@@8;

	// Token: 0x04000396 RID: 918 RVA: 0x001512E8 File Offset: 0x001504E8
	internal static _s__RTTIClassHierarchyDescriptor ??_R3RundownQueue_ExACXH@@8;

	// Token: 0x04000397 RID: 919 RVA: 0x0015B698 File Offset: 0x0015A098
	internal static $_TypeDescriptor$_extraBytes_26 ??_R0?AVRundownQueue_ExACXH@@@8;

	// Token: 0x04000398 RID: 920 RVA: 0x00151210 File Offset: 0x00150410
	internal static _s__RTTIClassHierarchyDescriptor ??_R3?$BaseRundownQueue@PEAX@@8;

	// Token: 0x04000399 RID: 921 RVA: 0x0015B640 File Offset: 0x0015A040
	internal static $_TypeDescriptor$_extraBytes_30 ??_R0?AV?$BaseRundownQueue@PEAX@@@8;

	// Token: 0x0400039A RID: 922 RVA: 0x00151268 File Offset: 0x00150468
	internal static _s__RTTIClassHierarchyDescriptor ??_R3RundownQueue_ExCXH@@8;

	// Token: 0x0400039B RID: 923 RVA: 0x0015B610 File Offset: 0x0015A010
	internal static $_TypeDescriptor$_extraBytes_25 ??_R0?AVRundownQueue_ExCXH@@@8;

	// Token: 0x0400039C RID: 924 RVA: 0x00151678 File Offset: 0x00150878
	internal static _s__RTTIClassHierarchyDescriptor ??_R3ManagedExceptionAsyncCrashWrapper@Rpc@Exchange@Microsoft@@8;

	// Token: 0x0400039D RID: 925 RVA: 0x0015BC60 File Offset: 0x0015A660
	internal static $_TypeDescriptor$_extraBytes_63 ??_R0?AVManagedExceptionAsyncCrashWrapper@Rpc@Exchange@Microsoft@@@8;

	// Token: 0x0400039E RID: 926 RVA: 0x001513F8 File Offset: 0x001505F8
	internal static _s__RTTICompleteObjectLocator2 ??_R4?$CLazyInitRequestQueue@VCEMSMDBRequestQueue@@UEMSMDB_REQUEST@@$0CHBA@$00@@6B@;

	// Token: 0x0400039F RID: 927 RVA: 0x00151478 File Offset: 0x00150678
	internal static _s__RTTICompleteObjectLocator2 ??_R4CEMSMDBLazyInitRequestQueue@@6B@;

	// Token: 0x040003A0 RID: 928 RVA: 0x00151618 File Offset: 0x00150818
	internal static _s__RTTICompleteObjectLocator2 ??_R4?$CRequestQueue@UEMSMDB_REQUEST@@@@6B@;

	// Token: 0x040003A1 RID: 929 RVA: 0x001515F0 File Offset: 0x001507F0
	internal static _s__RTTICompleteObjectLocator2 ??_R4CEMSMDBRequestQueue@@6B@;

	// Token: 0x040003A2 RID: 930
	[FixedAddressValueType]
	internal static $ArrayType$$$BY02Q6AXXZ ??_7ExchangeAsyncRpcCallWrapper_EcDoAsyncWaitEx@ExchangeServer@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x040003A3 RID: 931 RVA: 0x0006E780 File Offset: 0x0006D980
	internal static method ??_7ExchangeAsyncRpcCallWrapper_EcDoAsyncWaitEx@ExchangeServer@Rpc@Exchange@Microsoft@@6B@$initializer$;

	// Token: 0x040003A4 RID: 932 RVA: 0x00151C00 File Offset: 0x00150E00
	internal static _s__RTTICompleteObjectLocator2 ??_R4ExchangeAsyncRpcCallWrapper_EcDoAsyncWaitEx@ExchangeServer@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x040003A5 RID: 933
	[FixedAddressValueType]
	internal static $ArrayType$$$BY02Q6AXXZ ??_7ExchangeAsyncRpcCallWrapper_EcDoAsyncConnectEx@ExchangeServer@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x040003A6 RID: 934 RVA: 0x0006E778 File Offset: 0x0006D978
	internal static method ??_7ExchangeAsyncRpcCallWrapper_EcDoAsyncConnectEx@ExchangeServer@Rpc@Exchange@Microsoft@@6B@$initializer$;

	// Token: 0x040003A7 RID: 935 RVA: 0x00151B70 File Offset: 0x00150D70
	internal static _s__RTTICompleteObjectLocator2 ??_R4ExchangeAsyncRpcCallWrapper_EcDoAsyncConnectEx@ExchangeServer@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x040003A8 RID: 936
	[FixedAddressValueType]
	internal static $ArrayType$$$BY02Q6AXXZ ??_7ExchangeAsyncRpcCallWrapper_EcDoRpcExt2@ExchangeServer@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x040003A9 RID: 937 RVA: 0x0006E770 File Offset: 0x0006D970
	internal static method ??_7ExchangeAsyncRpcCallWrapper_EcDoRpcExt2@ExchangeServer@Rpc@Exchange@Microsoft@@6B@$initializer$;

	// Token: 0x040003AA RID: 938 RVA: 0x00151AE0 File Offset: 0x00150CE0
	internal static _s__RTTICompleteObjectLocator2 ??_R4ExchangeAsyncRpcCallWrapper_EcDoRpcExt2@ExchangeServer@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x040003AB RID: 939
	[FixedAddressValueType]
	internal static $ArrayType$$$BY02Q6AXXZ ??_7ExchangeAsyncRpcCallWrapper_EcDoDummy@ExchangeServer@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x040003AC RID: 940 RVA: 0x0006E768 File Offset: 0x0006D968
	internal static method ??_7ExchangeAsyncRpcCallWrapper_EcDoDummy@ExchangeServer@Rpc@Exchange@Microsoft@@6B@$initializer$;

	// Token: 0x040003AD RID: 941 RVA: 0x00151A50 File Offset: 0x00150C50
	internal static _s__RTTICompleteObjectLocator2 ??_R4ExchangeAsyncRpcCallWrapper_EcDoDummy@ExchangeServer@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x040003AE RID: 942
	[FixedAddressValueType]
	internal static $ArrayType$$$BY02Q6AXXZ ??_7ExchangeAsyncRpcCallWrapper_EcDoConnectEx@ExchangeServer@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x040003AF RID: 943 RVA: 0x0006E760 File Offset: 0x0006D960
	internal static method ??_7ExchangeAsyncRpcCallWrapper_EcDoConnectEx@ExchangeServer@Rpc@Exchange@Microsoft@@6B@$initializer$;

	// Token: 0x040003B0 RID: 944 RVA: 0x001519C0 File Offset: 0x00150BC0
	internal static _s__RTTICompleteObjectLocator2 ??_R4ExchangeAsyncRpcCallWrapper_EcDoConnectEx@ExchangeServer@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x040003B1 RID: 945
	[FixedAddressValueType]
	internal static $ArrayType$$$BY02Q6AXXZ ??_7ExchangeAsyncRpcCallWrapper_EcDoDisconnect@ExchangeServer@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x040003B2 RID: 946 RVA: 0x0006E758 File Offset: 0x0006D958
	internal static method ??_7ExchangeAsyncRpcCallWrapper_EcDoDisconnect@ExchangeServer@Rpc@Exchange@Microsoft@@6B@$initializer$;

	// Token: 0x040003B3 RID: 947 RVA: 0x00151930 File Offset: 0x00150B30
	internal static _s__RTTICompleteObjectLocator2 ??_R4ExchangeAsyncRpcCallWrapper_EcDoDisconnect@ExchangeServer@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x040003B4 RID: 948
	[FixedAddressValueType]
	internal static $ArrayType$$$BY02Q6AXXZ ??_7?$BaseAsyncRpcCallWrapper@VExchangeAsyncRpcServer_AsyncEMSMDB@ExchangeServer@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x040003B5 RID: 949 RVA: 0x0006E750 File Offset: 0x0006D950
	internal static method ??_7?$BaseAsyncRpcCallWrapper@VExchangeAsyncRpcServer_AsyncEMSMDB@ExchangeServer@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@6B@$initializer$;

	// Token: 0x040003B6 RID: 950 RVA: 0x001518A0 File Offset: 0x00150AA0
	internal static _s__RTTICompleteObjectLocator2 ??_R4?$BaseAsyncRpcCallWrapper@VExchangeAsyncRpcServer_AsyncEMSMDB@ExchangeServer@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x040003B7 RID: 951
	[FixedAddressValueType]
	internal static $ArrayType$$$BY02Q6AXXZ ??_7ExchangeAsyncRpcCallWrapper_AsyncEMSMDB@ExchangeServer@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x040003B8 RID: 952 RVA: 0x0006E748 File Offset: 0x0006D948
	internal static method ??_7ExchangeAsyncRpcCallWrapper_AsyncEMSMDB@ExchangeServer@Rpc@Exchange@Microsoft@@6B@$initializer$;

	// Token: 0x040003B9 RID: 953 RVA: 0x00151878 File Offset: 0x00150A78
	internal static _s__RTTICompleteObjectLocator2 ??_R4ExchangeAsyncRpcCallWrapper_AsyncEMSMDB@ExchangeServer@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x040003BA RID: 954
	[FixedAddressValueType]
	internal static $ArrayType$$$BY02Q6AXXZ ??_7?$BaseAsyncRpcCallWrapper@VExchangeAsyncRpcServer_EMSMDB@ExchangeServer@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x040003BB RID: 955 RVA: 0x0006E740 File Offset: 0x0006D940
	internal static method ??_7?$BaseAsyncRpcCallWrapper@VExchangeAsyncRpcServer_EMSMDB@ExchangeServer@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@6B@$initializer$;

	// Token: 0x040003BC RID: 956 RVA: 0x00151798 File Offset: 0x00150998
	internal static _s__RTTICompleteObjectLocator2 ??_R4?$BaseAsyncRpcCallWrapper@VExchangeAsyncRpcServer_EMSMDB@ExchangeServer@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x040003BD RID: 957
	[FixedAddressValueType]
	internal static $ArrayType$$$BY02Q6AXXZ ??_7ExchangeAsyncRpcCallWrapper_EMSMDB@ExchangeServer@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x040003BE RID: 958 RVA: 0x0006E738 File Offset: 0x0006D938
	internal static method ??_7ExchangeAsyncRpcCallWrapper_EMSMDB@ExchangeServer@Rpc@Exchange@Microsoft@@6B@$initializer$;

	// Token: 0x040003BF RID: 959 RVA: 0x00151770 File Offset: 0x00150970
	internal static _s__RTTICompleteObjectLocator2 ??_R4ExchangeAsyncRpcCallWrapper_EMSMDB@ExchangeServer@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x040003C0 RID: 960 RVA: 0x00151380 File Offset: 0x00150580
	internal static _s__RTTICompleteObjectLocator2 ??_R4ExACXHRundown_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x040003C1 RID: 961 RVA: 0x001514F8 File Offset: 0x001506F8
	internal static _s__RTTICompleteObjectLocator2 ??_R4ExCXHRundown_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x040003C2 RID: 962 RVA: 0x00151300 File Offset: 0x00150500
	internal static _s__RTTICompleteObjectLocator2 ??_R4RundownQueue_ExACXH@@6B@;

	// Token: 0x040003C3 RID: 963 RVA: 0x00151520 File Offset: 0x00150720
	internal static _s__RTTICompleteObjectLocator2 ??_R4?$BaseRundownQueue@PEAX@@6B@;

	// Token: 0x040003C4 RID: 964 RVA: 0x00151280 File Offset: 0x00150480
	internal static _s__RTTICompleteObjectLocator2 ??_R4RundownQueue_ExCXH@@6B@;

	// Token: 0x040003C5 RID: 965
	[FixedAddressValueType]
	internal static $ArrayType$$$BY01Q6AXXZ ??_7ManagedExceptionAsyncCrashWrapper@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x040003C6 RID: 966 RVA: 0x0006E730 File Offset: 0x0006D930
	internal static method ??_7ManagedExceptionAsyncCrashWrapper@Rpc@Exchange@Microsoft@@6B@$initializer$;

	// Token: 0x040003C7 RID: 967 RVA: 0x00151690 File Offset: 0x00150890
	internal static _s__RTTICompleteObjectLocator2 ??_R4ManagedExceptionAsyncCrashWrapper@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x040003C8 RID: 968 RVA: 0x0015B7C8 File Offset: 0x0015A1C8
	internal static $ArrayType$$$BY07Q6AXXZ ??_7?$CLazyInitRequestQueue@VCEMSMDBRequestQueue@@UEMSMDB_REQUEST@@$0CHBA@$00@@6B@;

	// Token: 0x040003C9 RID: 969 RVA: 0x0015BAE8 File Offset: 0x0015A4E8
	internal static $ArrayType$$$BY0L@Q6AXXZ ??_7?$CRequestQueue@UEMSMDB_REQUEST@@@@6B@;

	// Token: 0x040003CA RID: 970 RVA: 0x0015B900 File Offset: 0x0015A300
	internal static $ArrayType$$$BY04Q6AXXZ ??_7?$BaseRundownQueue@PEAX@@6B@;

	// Token: 0x040003CB RID: 971 RVA: 0x0015B848 File Offset: 0x0015A248
	internal static $ArrayType$$$BY07Q6AXXZ ??_7CEMSMDBLazyInitRequestQueue@@6B@;

	// Token: 0x040003CC RID: 972 RVA: 0x00160230 File Offset: 0x0015EC30
	internal unsafe static CEMSMDBLazyInitRequestQueue* g_pEMSMDB_RequestQueue;

	// Token: 0x040003CD RID: 973 RVA: 0x0015B9D8 File Offset: 0x0015A3D8
	internal static $ArrayType$$$BY0L@Q6AXXZ ??_7CEMSMDBRequestQueue@@6B@;

	// Token: 0x040003CE RID: 974 RVA: 0x0015B750 File Offset: 0x0015A150
	internal static $ArrayType$$$BY01Q6AXXZ ??_7ExACXHRundown_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x040003CF RID: 975 RVA: 0x0015B8E0 File Offset: 0x0015A2E0
	internal static $ArrayType$$$BY01Q6AXXZ ??_7ExCXHRundown_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x040003D0 RID: 976 RVA: 0x00160228 File Offset: 0x0015EC28
	internal unsafe static RundownQueue_ExACXH* g_pRundownQueue_ExACXH;

	// Token: 0x040003D1 RID: 977 RVA: 0x00160220 File Offset: 0x0015EC20
	internal unsafe static RundownQueue_ExCXH* g_pRundownQueue_ExCXH;

	// Token: 0x040003D2 RID: 978 RVA: 0x0015B6D0 File Offset: 0x0015A0D0
	internal static $ArrayType$$$BY04Q6AXXZ ??_7RundownQueue_ExACXH@@6B@;

	// Token: 0x040003D3 RID: 979 RVA: 0x0015B678 File Offset: 0x0015A078
	internal static $ArrayType$$$BY04Q6AXXZ ??_7RundownQueue_ExCXH@@6B@;

	// Token: 0x040003D4 RID: 980 RVA: 0x0015B8E8 File Offset: 0x0015A2E8
	public static method __m2mep@??0RundownQueue_ExCXH@@$$FQEAA@XZ;

	// Token: 0x040003D5 RID: 981 RVA: 0x0015B920 File Offset: 0x0015A320
	public static method __m2mep@??0RundownQueue_ExACXH@@$$FQEAA@XZ;

	// Token: 0x040003D6 RID: 982 RVA: 0x0015BA28 File Offset: 0x0015A428
	public static method __m2mep@??0ExCXHRundown_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@$$FQEAA@PEAX@Z;

	// Token: 0x040003D7 RID: 983 RVA: 0x0015BA58 File Offset: 0x0015A458
	public static method __m2mep@?InternalExecute@ExCXHRundown_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@$$FUEAAJXZ;

	// Token: 0x040003D8 RID: 984 RVA: 0x0015B930 File Offset: 0x0015A330
	public static method __m2mep@??0ExACXHRundown_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@$$FQEAA@PEAX@Z;

	// Token: 0x040003D9 RID: 985 RVA: 0x0015B940 File Offset: 0x0015A340
	public static method __m2mep@?InternalExecute@ExACXHRundown_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@$$FUEAAJXZ;

	// Token: 0x040003DA RID: 986 RVA: 0x0015BC08 File Offset: 0x0015A608
	public static method __m2mep@??0ExchangeAsyncRpcCallWrapper_EMSMDB@ExchangeServer@Rpc@Exchange@Microsoft@@$$FIEAM@VIntPtr@System@@@Z;

	// Token: 0x040003DB RID: 987 RVA: 0x0015BC38 File Offset: 0x0015A638
	public static method __m2mep@??0ExchangeAsyncRpcCallWrapper_AsyncEMSMDB@ExchangeServer@Rpc@Exchange@Microsoft@@$$FIEAM@VIntPtr@System@@@Z;

	// Token: 0x040003DC RID: 988 RVA: 0x0015BA68 File Offset: 0x0015A468
	public static method __m2mep@?DispatchCall@ExchangeAsyncRpcCallWrapper_EcDoDisconnect@ExchangeServer@Rpc@Exchange@Microsoft@@$$FMEAMXPE$AAVExchangeAsyncRpcServer_EMSMDB@2345@PE$AAVSafeRpcAsyncStateHandle@345@@Z;

	// Token: 0x040003DD RID: 989 RVA: 0x0015BB48 File Offset: 0x0015A548
	public static method __m2mep@??0ExchangeAsyncRpcCallWrapper_EcDoDisconnect@ExchangeServer@Rpc@Exchange@Microsoft@@$$FQEAA@PEAPEAX@Z;

	// Token: 0x040003DE RID: 990 RVA: 0x0015BA78 File Offset: 0x0015A478
	public static method __m2mep@?DispatchCall@ExchangeAsyncRpcCallWrapper_EcDoConnectEx@ExchangeServer@Rpc@Exchange@Microsoft@@$$FMEAMXPE$AAVExchangeAsyncRpcServer_EMSMDB@2345@PE$AAVSafeRpcAsyncStateHandle@345@@Z;

	// Token: 0x040003DF RID: 991 RVA: 0x0015BB68 File Offset: 0x0015A568
	public static method __m2mep@??0ExchangeAsyncRpcCallWrapper_EcDoConnectEx@ExchangeServer@Rpc@Exchange@Microsoft@@$$FQEAA@PEAXPEAPEAXPEAEKKKKKKKGPEAK33PEAGPEAPEAE544432K23@Z;

	// Token: 0x040003E0 RID: 992 RVA: 0x0015BA88 File Offset: 0x0015A488
	public static method __m2mep@?DispatchCall@ExchangeAsyncRpcCallWrapper_EcDoDummy@ExchangeServer@Rpc@Exchange@Microsoft@@$$FMEAMXPE$AAVExchangeAsyncRpcServer_EMSMDB@2345@PE$AAVSafeRpcAsyncStateHandle@345@@Z;

	// Token: 0x040003E1 RID: 993 RVA: 0x0015BBE8 File Offset: 0x0015A5E8
	public static method __m2mep@??0ExchangeAsyncRpcCallWrapper_EcDoDummy@ExchangeServer@Rpc@Exchange@Microsoft@@$$FQEAA@PEAX@Z;

	// Token: 0x040003E2 RID: 994 RVA: 0x0015BA98 File Offset: 0x0015A498
	public static method __m2mep@?DispatchCall@ExchangeAsyncRpcCallWrapper_EcDoRpcExt2@ExchangeServer@Rpc@Exchange@Microsoft@@$$FMEAMXPE$AAVExchangeAsyncRpcServer_EMSMDB@2345@PE$AAVSafeRpcAsyncStateHandle@345@@Z;

	// Token: 0x040003E3 RID: 995 RVA: 0x0015BB88 File Offset: 0x0015A588
	public static method __m2mep@??0ExchangeAsyncRpcCallWrapper_EcDoRpcExt2@ExchangeServer@Rpc@Exchange@Microsoft@@$$FQEAA@PEAPEAXPEAKPEAEK212K211K@Z;

	// Token: 0x040003E4 RID: 996 RVA: 0x0015BAA8 File Offset: 0x0015A4A8
	public static method __m2mep@?DispatchCall@ExchangeAsyncRpcCallWrapper_EcDoAsyncConnectEx@ExchangeServer@Rpc@Exchange@Microsoft@@$$FMEAMXPE$AAVExchangeAsyncRpcServer_EMSMDB@2345@PE$AAVSafeRpcAsyncStateHandle@345@@Z;

	// Token: 0x040003E5 RID: 997 RVA: 0x0015BBA8 File Offset: 0x0015A5A8
	public static method __m2mep@??0ExchangeAsyncRpcCallWrapper_EcDoAsyncConnectEx@ExchangeServer@Rpc@Exchange@Microsoft@@$$FQEAA@PEAXPEAPEAX@Z;

	// Token: 0x040003E6 RID: 998 RVA: 0x0015BAB8 File Offset: 0x0015A4B8
	public static method __m2mep@?DispatchCall@ExchangeAsyncRpcCallWrapper_EcDoAsyncWaitEx@ExchangeServer@Rpc@Exchange@Microsoft@@$$FMEAMXPE$AAVExchangeAsyncRpcServer_AsyncEMSMDB@2345@PE$AAVSafeRpcAsyncStateHandle@345@@Z;

	// Token: 0x040003E7 RID: 999 RVA: 0x0015BBC8 File Offset: 0x0015A5C8
	public static method __m2mep@??0ExchangeAsyncRpcCallWrapper_EcDoAsyncWaitEx@ExchangeServer@Rpc@Exchange@Microsoft@@$$FQEAA@PEAXKPEAK@Z;

	// Token: 0x040003E8 RID: 1000 RVA: 0x0015BC18 File Offset: 0x0015A618
	public static method __m2mep@??0?$BaseAsyncRpcCallWrapper@VExchangeAsyncRpcServer_EMSMDB@ExchangeServer@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@$$FIEAM@VIntPtr@System@@@Z;

	// Token: 0x040003E9 RID: 1001 RVA: 0x0015BA38 File Offset: 0x0015A438
	public static method __m2mep@?InternalExecute@?$BaseAsyncRpcCallWrapper@VExchangeAsyncRpcServer_EMSMDB@ExchangeServer@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@$$FUEAMJPE$AAVSafeRpcAsyncStateHandle@234@@Z;

	// Token: 0x040003EA RID: 1002 RVA: 0x0015BC48 File Offset: 0x0015A648
	public static method __m2mep@??0?$BaseAsyncRpcCallWrapper@VExchangeAsyncRpcServer_AsyncEMSMDB@ExchangeServer@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@$$FIEAM@VIntPtr@System@@@Z;

	// Token: 0x040003EB RID: 1003 RVA: 0x0015BA48 File Offset: 0x0015A448
	public static method __m2mep@?InternalExecute@?$BaseAsyncRpcCallWrapper@VExchangeAsyncRpcServer_AsyncEMSMDB@ExchangeServer@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@$$FUEAMJPE$AAVSafeRpcAsyncStateHandle@234@@Z;

	// Token: 0x040003EC RID: 1004 RVA: 0x0015BAC8 File Offset: 0x0015A4C8
	public static method __m2mep@??_E?$BaseRundownQueue@PEAX@@$$FUEAAPEAXI@Z;

	// Token: 0x040003ED RID: 1005 RVA: 0x0015BC28 File Offset: 0x0015A628
	public static method __m2mep@??0ManagedExceptionAsyncCrashWrapper@Rpc@Exchange@Microsoft@@$$FQEAA@XZ;

	// Token: 0x040003EE RID: 1006 RVA: 0x0015BB38 File Offset: 0x0015A538
	public static method __m2mep@??_E?$CRequestQueue@UEMSMDB_REQUEST@@@@$$FUEAAPEAXI@Z;

	// Token: 0x040003EF RID: 1007 RVA: 0x0015B950 File Offset: 0x0015A350
	public static method __m2mep@??_E?$CLazyInitRequestQueue@VCEMSMDBRequestQueue@@UEMSMDB_REQUEST@@$0CHBA@$00@@$$FUEAAPEAXI@Z;

	// Token: 0x040003F0 RID: 1008 RVA: 0x0015BB58 File Offset: 0x0015A558
	public static method __m2mep@??$Execute@VSafeEcDoDisconnectRpcAsyncStateHandle@ExchangeServer@Rpc@Exchange@Microsoft@@@ManagedExceptionAsyncCrashWrapper@Rpc@Exchange@Microsoft@@$$FQEAAXPEAU_RPC_ASYNC_STATE@@@Z;

	// Token: 0x040003F1 RID: 1009 RVA: 0x0015BB78 File Offset: 0x0015A578
	public static method __m2mep@??$Execute@VSafeEcDoConnectExRpcAsyncStateHandle@ExchangeServer@Rpc@Exchange@Microsoft@@@ManagedExceptionAsyncCrashWrapper@Rpc@Exchange@Microsoft@@$$FQEAAXPEAU_RPC_ASYNC_STATE@@@Z;

	// Token: 0x040003F2 RID: 1010 RVA: 0x0015BB98 File Offset: 0x0015A598
	public static method __m2mep@??$Execute@VSafeEcDoRpcExt2RpcAsyncStateHandle@ExchangeServer@Rpc@Exchange@Microsoft@@@ManagedExceptionAsyncCrashWrapper@Rpc@Exchange@Microsoft@@$$FQEAAXPEAU_RPC_ASYNC_STATE@@@Z;

	// Token: 0x040003F3 RID: 1011 RVA: 0x0015BBB8 File Offset: 0x0015A5B8
	public static method __m2mep@??$Execute@VSafeEcDoAsyncConnectExRpcAsyncStateHandle@ExchangeServer@Rpc@Exchange@Microsoft@@@ManagedExceptionAsyncCrashWrapper@Rpc@Exchange@Microsoft@@$$FQEAAXPEAU_RPC_ASYNC_STATE@@@Z;

	// Token: 0x040003F4 RID: 1012 RVA: 0x0015BBD8 File Offset: 0x0015A5D8
	public static method __m2mep@??$Execute@VSafeEcDoAsyncWaitExRpcAsyncStateHandle@ExchangeServer@Rpc@Exchange@Microsoft@@@ManagedExceptionAsyncCrashWrapper@Rpc@Exchange@Microsoft@@$$FQEAAXPEAU_RPC_ASYNC_STATE@@@Z;

	// Token: 0x040003F5 RID: 1013 RVA: 0x0015BBF8 File Offset: 0x0015A5F8
	public static method __m2mep@??$Execute@VSafeEcDoDummyRpcAsyncStateHandle@ExchangeServer@Rpc@Exchange@Microsoft@@@ManagedExceptionAsyncCrashWrapper@Rpc@Exchange@Microsoft@@$$FQEAAXPEAU_RPC_ASYNC_STATE@@@Z;

	// Token: 0x040003F6 RID: 1014 RVA: 0x0006EEB0 File Offset: 0x0006E0B0
	internal static $ArrayType$$$BY00$$CBG ??_C@_11LOCGONAA@?$AA?$AA@;

	// Token: 0x040003F7 RID: 1015 RVA: 0x0015C1A0 File Offset: 0x0015ABA0
	public static method __m2mep@?GetCertificate@@$$J0YAJPEAXHHPEAEPEAHPEAPEAE@Z;

	// Token: 0x040003F8 RID: 1016 RVA: 0x0015C1B0 File Offset: 0x0015ABB0
	public static method __m2mep@?CreateCertificate@@$$J0YAJPEAXHHPEAEPEAHPEAPEAE@Z;

	// Token: 0x040003F9 RID: 1017 RVA: 0x0015C1C0 File Offset: 0x0015ABC0
	public static method __m2mep@?RemoveCertificate@@$$J0YAJPEAXHHPEAEPEAHPEAPEAE@Z;

	// Token: 0x040003FA RID: 1018 RVA: 0x0015C1D0 File Offset: 0x0015ABD0
	public static method __m2mep@?ExportCertificate@@$$J0YAJPEAXHHPEAEPEAGPEAHPEAPEAE@Z;

	// Token: 0x040003FB RID: 1019 RVA: 0x0015C1E0 File Offset: 0x0015ABE0
	public static method __m2mep@?ImportCertificate@@$$J0YAJPEAXHHPEAEPEAGPEAHPEAPEAE@Z;

	// Token: 0x040003FC RID: 1020 RVA: 0x0015C1F0 File Offset: 0x0015ABF0
	public static method __m2mep@?EnableCertificate@@$$J0YAJPEAXHHPEAEPEAHPEAPEAE@Z;

	// Token: 0x040003FD RID: 1021 RVA: 0x0015C200 File Offset: 0x0015AC00
	public static method __m2mep@?GetCertificate2@@$$J0YAJPEAXHHPEAEPEAHPEAPEAE@Z;

	// Token: 0x040003FE RID: 1022 RVA: 0x0015C210 File Offset: 0x0015AC10
	public static method __m2mep@?CreateCertificate2@@$$J0YAJPEAXHHPEAEPEAHPEAPEAE@Z;

	// Token: 0x040003FF RID: 1023 RVA: 0x0015C220 File Offset: 0x0015AC20
	public static method __m2mep@?RemoveCertificate2@@$$J0YAJPEAXHHPEAEPEAHPEAPEAE@Z;

	// Token: 0x04000400 RID: 1024 RVA: 0x0015C230 File Offset: 0x0015AC30
	public static method __m2mep@?ExportCertificate2@@$$J0YAJPEAXHHPEAEPEAGPEAHPEAPEAE@Z;

	// Token: 0x04000401 RID: 1025 RVA: 0x0015C240 File Offset: 0x0015AC40
	public static method __m2mep@?ImportCertificate2@@$$J0YAJPEAXHHPEAEPEAGPEAHPEAPEAE@Z;

	// Token: 0x04000402 RID: 1026 RVA: 0x0015C250 File Offset: 0x0015AC50
	public static method __m2mep@?EnableCertificate2@@$$J0YAJPEAXHHPEAEPEAHPEAPEAE@Z;

	// Token: 0x04000403 RID: 1027 RVA: 0x0006EEB8 File Offset: 0x0006E0B8
	unsafe static int** __unep@?cli_EcDoAsyncWaitEx@@$$J0YAXPEAU_RPC_ASYNC_STATE@@PEAXKPEAK@Z;

	// Token: 0x04000404 RID: 1028 RVA: 0x0006EEC8 File Offset: 0x0006E0C8
	internal static int g_cbCompMinSize;

	// Token: 0x04000405 RID: 1029 RVA: 0x0006EEC4 File Offset: 0x0006E0C4
	internal static int g_cbMaxAuxBufferSize;

	// Token: 0x04000406 RID: 1030 RVA: 0x0006EEC0 File Offset: 0x0006E0C0
	internal static int g_cbMaxBufferSize;

	// Token: 0x04000407 RID: 1031 RVA: 0x0015C260 File Offset: 0x0015AC60
	public static method __m2mep@?XPRESS_Alloc@@$$FYAPEAXPEAXH@Z;

	// Token: 0x04000408 RID: 1032 RVA: 0x0015C270 File Offset: 0x0015AC70
	public static method __m2mep@?XPRESS_Free@@$$FYAXPEAX0@Z;

	// Token: 0x04000409 RID: 1033 RVA: 0x0015C280 File Offset: 0x0015AC80
	public static method __m2mep@?Compress@@$$FYAXPEAEK0PEAK@Z;

	// Token: 0x0400040A RID: 1034 RVA: 0x0015C290 File Offset: 0x0015AC90
	public static method __m2mep@?Decompress@@$$FYA_NPEAEK0K@Z;

	// Token: 0x0400040B RID: 1035 RVA: 0x0015C2A0 File Offset: 0x0015ACA0
	public static method __m2mep@?DoCompressibleXorMagic@@$$FYAXPEAEK@Z;

	// Token: 0x0400040C RID: 1036 RVA: 0x0015C2B0 File Offset: 0x0015ACB0
	public static method __m2mep@?PackExtBuffer@@$$FYMPEAEP$01EAEHH_N1PEAKPEAEK1@Z;

	// Token: 0x0400040D RID: 1037 RVA: 0x0015C2C0 File Offset: 0x0015ACC0
	public static method __m2mep@?UnpackExtBuffer@@$$FYMP$01EAEPEAEKAE$CA_N1PEAPEAEPEAK@Z;

	// Token: 0x0400040E RID: 1038 RVA: 0x0006EED0 File Offset: 0x0006E0D0
	public unsafe static int** __unep@?XPRESS_Alloc@@$$FYAPEAXPEAXH@Z;

	// Token: 0x0400040F RID: 1039 RVA: 0x0006EED8 File Offset: 0x0006E0D8
	public unsafe static int** __unep@?XPRESS_Free@@$$FYAXPEAX0@Z;

	// Token: 0x04000410 RID: 1040 RVA: 0x00151FF8 File Offset: 0x001511F8
	internal static $_s__RTTIBaseClassArray$_extraBytes_24 ??_R2EcDoAsyncWaitEx_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x04000411 RID: 1041 RVA: 0x00151F78 File Offset: 0x00151178
	internal static $_s__RTTIBaseClassArray$_extraBytes_16 ??_R2ExchangeAsyncRpcServer_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x04000412 RID: 1042 RVA: 0x00151EF0 File Offset: 0x001510F0
	internal static $_s__RTTIBaseClassArray$_extraBytes_24 ??_R2EcDoAsyncConnectEx_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x04000413 RID: 1043 RVA: 0x00151E68 File Offset: 0x00151068
	internal static $_s__RTTIBaseClassArray$_extraBytes_24 ??_R2EcDoRpcExt2_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x04000414 RID: 1044 RVA: 0x00151DE0 File Offset: 0x00150FE0
	internal static $_s__RTTIBaseClassArray$_extraBytes_24 ??_R2EcDoConnectEx_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x04000415 RID: 1045 RVA: 0x00151D58 File Offset: 0x00150F58
	internal static $_s__RTTIBaseClassArray$_extraBytes_24 ??_R2EcDoRpc_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x04000416 RID: 1046 RVA: 0x00151CD0 File Offset: 0x00150ED0
	internal static $_s__RTTIBaseClassArray$_extraBytes_24 ??_R2EcDoDisconnect_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x04000417 RID: 1047 RVA: 0x00151C50 File Offset: 0x00150E50
	internal static $_s__RTTIBaseClassArray$_extraBytes_16 ??_R2ExchangeRpcServer_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x04000418 RID: 1048 RVA: 0x00151FD0 File Offset: 0x001511D0
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@EcDoAsyncWaitEx_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x04000419 RID: 1049 RVA: 0x00151F50 File Offset: 0x00151150
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@ExchangeAsyncRpcServer_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x0400041A RID: 1050 RVA: 0x00151EC8 File Offset: 0x001510C8
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@EcDoAsyncConnectEx_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x0400041B RID: 1051 RVA: 0x00151E40 File Offset: 0x00151040
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@EcDoRpcExt2_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x0400041C RID: 1052 RVA: 0x00151DB8 File Offset: 0x00150FB8
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@EcDoConnectEx_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x0400041D RID: 1053 RVA: 0x00151D30 File Offset: 0x00150F30
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@EcDoRpc_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x0400041E RID: 1054 RVA: 0x00151CA8 File Offset: 0x00150EA8
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@EcDoDisconnect_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x0400041F RID: 1055 RVA: 0x00151C28 File Offset: 0x00150E28
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@ExchangeRpcServer_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x04000420 RID: 1056 RVA: 0x00152018 File Offset: 0x00151218
	internal static _s__RTTIClassHierarchyDescriptor ??_R3EcDoAsyncWaitEx_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x04000421 RID: 1057 RVA: 0x0015C800 File Offset: 0x0015B200
	internal static $_TypeDescriptor$_extraBytes_68 ??_R0?AVEcDoAsyncWaitEx_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@@8;

	// Token: 0x04000422 RID: 1058 RVA: 0x00151F90 File Offset: 0x00151190
	internal static _s__RTTIClassHierarchyDescriptor ??_R3ExchangeAsyncRpcServer_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x04000423 RID: 1059 RVA: 0x0015C7A0 File Offset: 0x0015B1A0
	internal static $_TypeDescriptor$_extraBytes_75 ??_R0?AVExchangeAsyncRpcServer_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@@8;

	// Token: 0x04000424 RID: 1060 RVA: 0x00151F10 File Offset: 0x00151110
	internal static _s__RTTIClassHierarchyDescriptor ??_R3EcDoAsyncConnectEx_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x04000425 RID: 1061 RVA: 0x0015C740 File Offset: 0x0015B140
	internal static $_TypeDescriptor$_extraBytes_71 ??_R0?AVEcDoAsyncConnectEx_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@@8;

	// Token: 0x04000426 RID: 1062 RVA: 0x00151E88 File Offset: 0x00151088
	internal static _s__RTTIClassHierarchyDescriptor ??_R3EcDoRpcExt2_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x04000427 RID: 1063 RVA: 0x0015C6F0 File Offset: 0x0015B0F0
	internal static $_TypeDescriptor$_extraBytes_64 ??_R0?AVEcDoRpcExt2_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@@8;

	// Token: 0x04000428 RID: 1064 RVA: 0x00151E00 File Offset: 0x00151000
	internal static _s__RTTIClassHierarchyDescriptor ??_R3EcDoConnectEx_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x04000429 RID: 1065 RVA: 0x0015C690 File Offset: 0x0015B090
	internal static $_TypeDescriptor$_extraBytes_66 ??_R0?AVEcDoConnectEx_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@@8;

	// Token: 0x0400042A RID: 1066 RVA: 0x00151D78 File Offset: 0x00150F78
	internal static _s__RTTIClassHierarchyDescriptor ??_R3EcDoRpc_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x0400042B RID: 1067 RVA: 0x0015C640 File Offset: 0x0015B040
	internal static $_TypeDescriptor$_extraBytes_60 ??_R0?AVEcDoRpc_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@@8;

	// Token: 0x0400042C RID: 1068 RVA: 0x00151CF0 File Offset: 0x00150EF0
	internal static _s__RTTIClassHierarchyDescriptor ??_R3EcDoDisconnect_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x0400042D RID: 1069 RVA: 0x0015C5E0 File Offset: 0x0015AFE0
	internal static $_TypeDescriptor$_extraBytes_67 ??_R0?AVEcDoDisconnect_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@@8;

	// Token: 0x0400042E RID: 1070 RVA: 0x00151C68 File Offset: 0x00150E68
	internal static _s__RTTIClassHierarchyDescriptor ??_R3ExchangeRpcServer_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x0400042F RID: 1071 RVA: 0x0015C580 File Offset: 0x0015AF80
	internal static $_TypeDescriptor$_extraBytes_70 ??_R0?AVExchangeRpcServer_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@@8;

	// Token: 0x04000430 RID: 1072
	[FixedAddressValueType]
	internal static $ArrayType$$$BY02Q6AXXZ ??_7EcDoAsyncWaitEx_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x04000431 RID: 1073 RVA: 0x0006E7C0 File Offset: 0x0006D9C0
	internal static method ??_7EcDoAsyncWaitEx_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@6B@$initializer$;

	// Token: 0x04000432 RID: 1074 RVA: 0x00152030 File Offset: 0x00151230
	internal static _s__RTTICompleteObjectLocator2 ??_R4EcDoAsyncWaitEx_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x04000433 RID: 1075
	[FixedAddressValueType]
	internal static $ArrayType$$$BY02Q6AXXZ ??_7ExchangeAsyncRpcServer_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x04000434 RID: 1076 RVA: 0x0006E7B8 File Offset: 0x0006D9B8
	internal static method ??_7ExchangeAsyncRpcServer_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@6B@$initializer$;

	// Token: 0x04000435 RID: 1077 RVA: 0x00151FA8 File Offset: 0x001511A8
	internal static _s__RTTICompleteObjectLocator2 ??_R4ExchangeAsyncRpcServer_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x04000436 RID: 1078
	[FixedAddressValueType]
	internal static $ArrayType$$$BY02Q6AXXZ ??_7EcDoAsyncConnectEx_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x04000437 RID: 1079 RVA: 0x0006E7B0 File Offset: 0x0006D9B0
	internal static method ??_7EcDoAsyncConnectEx_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@6B@$initializer$;

	// Token: 0x04000438 RID: 1080 RVA: 0x00151F28 File Offset: 0x00151128
	internal static _s__RTTICompleteObjectLocator2 ??_R4EcDoAsyncConnectEx_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x04000439 RID: 1081
	[FixedAddressValueType]
	internal static $ArrayType$$$BY02Q6AXXZ ??_7EcDoRpcExt2_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x0400043A RID: 1082 RVA: 0x0006E7A8 File Offset: 0x0006D9A8
	internal static method ??_7EcDoRpcExt2_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@6B@$initializer$;

	// Token: 0x0400043B RID: 1083 RVA: 0x00151EA0 File Offset: 0x001510A0
	internal static _s__RTTICompleteObjectLocator2 ??_R4EcDoRpcExt2_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x0400043C RID: 1084
	[FixedAddressValueType]
	internal static $ArrayType$$$BY02Q6AXXZ ??_7EcDoConnectEx_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x0400043D RID: 1085 RVA: 0x0006E7A0 File Offset: 0x0006D9A0
	internal static method ??_7EcDoConnectEx_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@6B@$initializer$;

	// Token: 0x0400043E RID: 1086 RVA: 0x00151E18 File Offset: 0x00151018
	internal static _s__RTTICompleteObjectLocator2 ??_R4EcDoConnectEx_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x0400043F RID: 1087
	[FixedAddressValueType]
	internal static $ArrayType$$$BY02Q6AXXZ ??_7EcDoRpc_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x04000440 RID: 1088 RVA: 0x0006E798 File Offset: 0x0006D998
	internal static method ??_7EcDoRpc_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@6B@$initializer$;

	// Token: 0x04000441 RID: 1089 RVA: 0x00151D90 File Offset: 0x00150F90
	internal static _s__RTTICompleteObjectLocator2 ??_R4EcDoRpc_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x04000442 RID: 1090
	[FixedAddressValueType]
	internal static $ArrayType$$$BY02Q6AXXZ ??_7EcDoDisconnect_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x04000443 RID: 1091 RVA: 0x0006E790 File Offset: 0x0006D990
	internal static method ??_7EcDoDisconnect_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@6B@$initializer$;

	// Token: 0x04000444 RID: 1092 RVA: 0x00151D08 File Offset: 0x00150F08
	internal static _s__RTTICompleteObjectLocator2 ??_R4EcDoDisconnect_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x04000445 RID: 1093
	[FixedAddressValueType]
	internal static $ArrayType$$$BY02Q6AXXZ ??_7ExchangeRpcServer_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x04000446 RID: 1094 RVA: 0x0006E788 File Offset: 0x0006D988
	internal static method ??_7ExchangeRpcServer_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@6B@$initializer$;

	// Token: 0x04000447 RID: 1095 RVA: 0x00151C80 File Offset: 0x00150E80
	internal static _s__RTTICompleteObjectLocator2 ??_R4ExchangeRpcServer_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x04000448 RID: 1096 RVA: 0x0015C500 File Offset: 0x0015AF00
	public static method __m2mep@??0ExchangeRpcServer_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@$$FIEAM@VIntPtr@System@@@Z;

	// Token: 0x04000449 RID: 1097 RVA: 0x0015C4D0 File Offset: 0x0015AED0
	public static method __m2mep@?InternalExecute@ExchangeRpcServer_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@$$FUEAAJXZ;

	// Token: 0x0400044A RID: 1098 RVA: 0x0015C510 File Offset: 0x0015AF10
	public static method __m2mep@??0EcDoDisconnect_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@$$FQEAM@VIntPtr@System@@PEAPEAX@Z;

	// Token: 0x0400044B RID: 1099 RVA: 0x0015C520 File Offset: 0x0015AF20
	public static method __m2mep@??0EcDoRpc_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@$$FQEAM@VIntPtr@System@@PEAPEAXPEAEPEAGG@Z;

	// Token: 0x0400044C RID: 1100 RVA: 0x0015C530 File Offset: 0x0015AF30
	public static method __m2mep@??0EcDoConnectEx_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@$$FQEAM@VIntPtr@System@@PEAXPEAPEAXPEAEKKKKKKKGPEAK44PEAGPEAPEAE655543K34@Z;

	// Token: 0x0400044D RID: 1101 RVA: 0x0015C540 File Offset: 0x0015AF40
	public static method __m2mep@??0EcDoRpcExt2_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@$$FQEAM@VIntPtr@System@@PEAPEAXPEAKPEAEK323K32@Z;

	// Token: 0x0400044E RID: 1102 RVA: 0x0015C550 File Offset: 0x0015AF50
	public static method __m2mep@??0EcDoAsyncConnectEx_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@$$FQEAM@VIntPtr@System@@PEAXPEAPEAX@Z;

	// Token: 0x0400044F RID: 1103 RVA: 0x0015C560 File Offset: 0x0015AF60
	public static method __m2mep@??0ExchangeAsyncRpcServer_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@$$FIEAM@VIntPtr@System@@@Z;

	// Token: 0x04000450 RID: 1104 RVA: 0x0015C4E0 File Offset: 0x0015AEE0
	public static method __m2mep@?InternalExecute@ExchangeAsyncRpcServer_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@$$FUEAMJPE$AAVSafeRpcAsyncStateHandle@345@@Z;

	// Token: 0x04000451 RID: 1105 RVA: 0x0015C570 File Offset: 0x0015AF70
	public static method __m2mep@??0EcDoAsyncWaitEx_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@$$FQEAM@VIntPtr@System@@PEAXKPEAK@Z;

	// Token: 0x04000452 RID: 1106 RVA: 0x0015C2D0 File Offset: 0x0015ACD0
	public static method __m2mep@?NormalizeVersion@@$$FYMXQEAGP$01EAF@Z;

	// Token: 0x04000453 RID: 1107 RVA: 0x0015C2E0 File Offset: 0x0015ACE0
	public static method __m2mep@?EcCriticalVersionCheck@@$$FYAJQEAG0@Z;

	// Token: 0x04000454 RID: 1108 RVA: 0x0015C450 File Offset: 0x0015AE50
	public static method __m2mep@?EcDoConnect@@$$J0YAJPEAXPEAPEAXPEAEKKKKKKKGPEAK33PEAGPEAPEAE5QEAG663@Z;

	// Token: 0x04000455 RID: 1109 RVA: 0x0015C2F0 File Offset: 0x0015ACF0
	public static method __m2mep@?EcDoDisconnect@@$$J0YAJPEAPEAX@Z;

	// Token: 0x04000456 RID: 1110 RVA: 0x0015C300 File Offset: 0x0015AD00
	public static method __m2mep@?EcDoRpc@@$$J0YAJPEAPEAXQEAEPEAGG@Z;

	// Token: 0x04000457 RID: 1111 RVA: 0x0015C310 File Offset: 0x0015AD10
	public static method __m2mep@?EcGetMoreRpc@@$$J0YAJPEAPEAXQEAEPEAGG@Z;

	// Token: 0x04000458 RID: 1112 RVA: 0x0015C320 File Offset: 0x0015AD20
	public static method __m2mep@?EcRRegisterPushNotification@@$$J0YAJPEAPEAXKQEAEGK1GPEAK@Z;

	// Token: 0x04000459 RID: 1113 RVA: 0x0015C330 File Offset: 0x0015AD30
	public static method __m2mep@?EcRUnregisterPushNotification@@$$J0YAJPEAPEAXKK@Z;

	// Token: 0x0400045A RID: 1114 RVA: 0x0015C340 File Offset: 0x0015AD40
	public static method __m2mep@?EcDummyRpc@@$$J0YAJPEAX@Z;

	// Token: 0x0400045B RID: 1115 RVA: 0x0015C350 File Offset: 0x0015AD50
	public static method __m2mep@?EcRGetDCName@@$$J0YAJPEAPEAXPEAEQEAD@Z;

	// Token: 0x0400045C RID: 1116 RVA: 0x0015C360 File Offset: 0x0015AD60
	public static method __m2mep@?EcRNetGetDCName@@$$J0YAJPEAXPEAEQEAD@Z;

	// Token: 0x0400045D RID: 1117 RVA: 0x0015C370 File Offset: 0x0015AD70
	public static method __m2mep@?EcDoRpcExt@@$$J0YAJPEAPEAXPEAKQEAEK21211@Z;

	// Token: 0x0400045E RID: 1118 RVA: 0x0015C380 File Offset: 0x0015AD80
	public static method __m2mep@?EcDoConnectEx@@$$J0YAJPEAXPEAPEAXPEAEKKKKKKKGPEAK33PEAGPEAPEAE5QEAG663QEAEK73@Z;

	// Token: 0x0400045F RID: 1119 RVA: 0x0015C390 File Offset: 0x0015AD90
	public static method __m2mep@?EcDoRpcExt2@@$$J0YAJPEAPEAXPEAKQEAEK212K211@Z;

	// Token: 0x04000460 RID: 1120 RVA: 0x0015C3A0 File Offset: 0x0015ADA0
	public static method __m2mep@?EcDoAsyncConnect@@$$J0YAJPEAXPEAPEAX@Z;

	// Token: 0x04000461 RID: 1121 RVA: 0x0015C3B0 File Offset: 0x0015ADB0
	public static method __m2mep@?EcDoAsyncWait@@$$J0YAJPEAXKPEAK@Z;

	// Token: 0x04000462 RID: 1122 RVA: 0x0015C3C0 File Offset: 0x0015ADC0
	public static method __m2mep@?EcDoAsyncConnectEx@@$$J0YAJPEAXPEAPEAX@Z;

	// Token: 0x04000463 RID: 1123 RVA: 0x0015C3D0 File Offset: 0x0015ADD0
	public static method __m2mep@?CXH_rundown@@$$J0YAXPEAX@Z;

	// Token: 0x04000464 RID: 1124 RVA: 0x0015C3E0 File Offset: 0x0015ADE0
	public static method __m2mep@?EcDoAsyncWaitEx@@$$J0YAXPEAU_RPC_ASYNC_STATE@@PEAXKPEAK@Z;

	// Token: 0x04000465 RID: 1125 RVA: 0x0015C3F0 File Offset: 0x0015ADF0
	public static method __m2mep@?ACXH_rundown@@$$J0YAXPEAX@Z;

	// Token: 0x04000466 RID: 1126 RVA: 0x0015C460 File Offset: 0x0015AE60
	public static method __m2mep@?EcDoDisconnectMT_Managed@@$$FYAJPEAPEAX@Z;

	// Token: 0x04000467 RID: 1127 RVA: 0x0015C470 File Offset: 0x0015AE70
	public static method __m2mep@?EcDoRpcMT_Managed@@$$FYAJPEAPEAXQEAEPEAGG@Z;

	// Token: 0x04000468 RID: 1128 RVA: 0x0015C480 File Offset: 0x0015AE80
	public static method __m2mep@?EcDoConnectExMT_Managed@@$$FYAJPEAXPEAPEAXPEAEKKKKKKKGPEAK33PEAGPEAPEAE5QEAG663QEAEK73@Z;

	// Token: 0x04000469 RID: 1129 RVA: 0x0015C490 File Offset: 0x0015AE90
	public static method __m2mep@?EcDoRpcExt2MT_Managed@@$$FYAJPEAPEAXPEAKQEAEK212K211@Z;

	// Token: 0x0400046A RID: 1130 RVA: 0x0015C4A0 File Offset: 0x0015AEA0
	public static method __m2mep@?EcDoAsyncConnectExMT_Managed@@$$FYAJPEAXPEAPEAX@Z;

	// Token: 0x0400046B RID: 1131 RVA: 0x0015C4B0 File Offset: 0x0015AEB0
	public static method __m2mep@?EcDoAsyncWaitExMT_Managed@@$$FYAXPEAU_RPC_ASYNC_STATE@@PEAXKPEAK@Z;

	// Token: 0x0400046C RID: 1132 RVA: 0x0015C400 File Offset: 0x0015AE00
	public static method __m2mep@?EcDispatchProxyCall@EcDoConnectEx_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@$$FEEAMJPE$AAUIProxyServer@2345@@Z;

	// Token: 0x0400046D RID: 1133 RVA: 0x0015C410 File Offset: 0x0015AE10
	public static method __m2mep@?EcDispatchProxyCall@EcDoDisconnect_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@$$FEEAMJPE$AAUIProxyServer@2345@@Z;

	// Token: 0x0400046E RID: 1134 RVA: 0x0015C420 File Offset: 0x0015AE20
	public static method __m2mep@?EcDispatchProxyCall@EcDoRpc_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@$$FEEAMJPE$AAUIProxyServer@2345@@Z;

	// Token: 0x0400046F RID: 1135 RVA: 0x0015C4C0 File Offset: 0x0015AEC0
	public static method __m2mep@?EcDispatchProxyCall@EcDoRpcExt2_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@$$FEEAMJPE$AAUIProxyServer@2345@@Z;

	// Token: 0x04000470 RID: 1136 RVA: 0x0015C430 File Offset: 0x0015AE30
	public static method __m2mep@?EcDispatchProxyCall@EcDoAsyncConnectEx_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@$$FEEAMJPE$AAUIProxyServer@2345@@Z;

	// Token: 0x04000471 RID: 1137 RVA: 0x0015C440 File Offset: 0x0015AE40
	public static method __m2mep@?EcDispatchProxyCall@EcDoAsyncWaitEx_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@$$FEEAMJPE$AAUIProxyServer@2345@PE$AAVSafeRpcAsyncStateHandle@345@@Z;

	// Token: 0x04000472 RID: 1138 RVA: 0x0015C4F0 File Offset: 0x0015AEF0
	public static method __m2mep@??$Execute@VSafeEcDoAsyncWaitExMTRpcAsyncStateHandle@ExchangeServer@Rpc@Exchange@Microsoft@@@ManagedExceptionAsyncCrashWrapper@Rpc@Exchange@Microsoft@@$$FQEAAXPEAU_RPC_ASYNC_STATE@@@Z;

	// Token: 0x04000473 RID: 1139 RVA: 0x0006EEE0 File Offset: 0x0006E0E0
	public unsafe static int** __unep@?InternalExecute@ExchangeRpcServer_Wrapper@ExchangeServer@Rpc@Exchange@Microsoft@@$$FUEAAJXZ;

	// Token: 0x04000474 RID: 1140 RVA: 0x0015C8D0 File Offset: 0x0015B2D0
	public static method __m2mep@?MToUErrorExceptionInfo@@$$FYMJPE$AAVRpcErrorExceptionInfo@Cluster@Rpc@Exchange@Microsoft@@PEAUtagErrorExceptionInfo@@@Z;

	// Token: 0x04000475 RID: 1141 RVA: 0x0015C8E0 File Offset: 0x0015B2E0
	public static method __m2mep@?UToMErrorExceptionInfo@@$$FYMPE$AAVRpcErrorExceptionInfo@Cluster@Rpc@Exchange@Microsoft@@QEBUtagErrorExceptionInfo@@@Z;

	// Token: 0x04000476 RID: 1142 RVA: 0x0015C8A0 File Offset: 0x0015B2A0
	public static method __m2mep@?MakeManagedBytes@@$$FYMP$01EAEPEAEH@Z;

	// Token: 0x04000477 RID: 1143 RVA: 0x0015C8B0 File Offset: 0x0015B2B0
	public static method __m2mep@?GetUnmanagedBytes@@$$FYMJP$01EAEPEAPEAEPEAH@Z;

	// Token: 0x04000478 RID: 1144 RVA: 0x0015C8C0 File Offset: 0x0015B2C0
	public static method __m2mep@?StringEqual@@$$FYM_NPE$AAVString@System@@0@Z;

	// Token: 0x04000479 RID: 1145 RVA: 0x0015C8F0 File Offset: 0x0015B2F0
	public static method __m2mep@?IpFilterAdd@@$$J0YAJPEAXUIPRangeData@@PEAH@Z;

	// Token: 0x0400047A RID: 1146 RVA: 0x0015C900 File Offset: 0x0015B300
	public static method __m2mep@?IpFilterRemove@@$$J0YAJPEAXHHPEAH@Z;

	// Token: 0x0400047B RID: 1147 RVA: 0x0015C910 File Offset: 0x0015B310
	public static method __m2mep@?IpFilterGetItems@@$$J0YAJPEAXHHUExInt128@@HPEAPEAUIPRangeData@@PEAH@Z;

	// Token: 0x0400047C RID: 1148 RVA: 0x0015C920 File Offset: 0x0015B320
	public static method __m2mep@?Convert@?A0x084eb60f@@$$FYMJPEAUIPRangeData@@PE$AAVIPFilterRange@IPFilter@Rpc@Exchange@Microsoft@@@Z;

	// Token: 0x0400047D RID: 1149 RVA: 0x0015C930 File Offset: 0x0015B330
	public static method __m2mep@?FreeRecord@?A0x084eb60f@@$$FYAXPEAUIPRangeData@@@Z;

	// Token: 0x0400047E RID: 1150 RVA: 0x0015C940 File Offset: 0x0015B340
	public static method __m2mep@?EnqueueRequest@@$$J0YAJPEAXHHHPEAEPEAHPEAPEAE@Z;

	// Token: 0x0400047F RID: 1151 RVA: 0x0015C950 File Offset: 0x0015B350
	public static method __m2mep@?Search@@$$J0YAJPEAXPEAGHPEAEHPEAU_GUID@@HPEAPEAEPEAH55@Z;

	// Token: 0x04000480 RID: 1152 RVA: 0x0015C960 File Offset: 0x0015B360
	public static method __m2mep@?SearchExtensibleSchema@@$$J0YAJPEAXPEAG1HPEAEHPEAU_GUID@@HPEAPEAEPEAH55@Z;

	// Token: 0x04000481 RID: 1153 RVA: 0x0015C970 File Offset: 0x0015B370
	public static method __m2mep@?Continue@@$$J0YAJPEAXU_GUID@@HHPEAPEAEPEAH33@Z;

	// Token: 0x04000482 RID: 1154 RVA: 0x0015C980 File Offset: 0x0015B380
	public static method __m2mep@?Cancel@@$$J0YAJPEAXU_GUID@@@Z;

	// Token: 0x04000483 RID: 1155 RVA: 0x0015CA50 File Offset: 0x0015B450
	public static method __m2mep@?FreeStringSafe@?A0xf673bb70@@$$FYAXPEAG@Z;

	// Token: 0x04000484 RID: 1156 RVA: 0x0015C990 File Offset: 0x0015B390
	public static method __m2mep@?InitRpcSearchId@@$$FYAXPEAU__MIDL_IMailboxSearch_0001@@@Z;

	// Token: 0x04000485 RID: 1157 RVA: 0x0015C9A0 File Offset: 0x0015B3A0
	public static method __m2mep@?FreeRpcSearchId@@$$FYAXPEAU__MIDL_IMailboxSearch_0001@@@Z;

	// Token: 0x04000486 RID: 1158 RVA: 0x0015C9B0 File Offset: 0x0015B3B0
	public static method __m2mep@?UToMSearchId@@$$FYMPE$AAVSearchId@MailboxSearch@Rpc@Exchange@Microsoft@@PEAU__MIDL_IMailboxSearch_0001@@@Z;

	// Token: 0x04000487 RID: 1159 RVA: 0x0015C9C0 File Offset: 0x0015B3C0
	public static method __m2mep@?MToUSearchId@@$$FYMJPE$AAVSearchId@MailboxSearch@Rpc@Exchange@Microsoft@@PEAU__MIDL_IMailboxSearch_0001@@@Z;

	// Token: 0x04000488 RID: 1160 RVA: 0x0015C9D0 File Offset: 0x0015B3D0
	public static method __m2mep@?InitRpcErrorInfo@@$$FYAXPEAU__MIDL_IMailboxSearch_0003@@@Z;

	// Token: 0x04000489 RID: 1161 RVA: 0x0015C9E0 File Offset: 0x0015B3E0
	public static method __m2mep@?FreeRpcErrorInfo@@$$FYAXPEAU__MIDL_IMailboxSearch_0003@@@Z;

	// Token: 0x0400048A RID: 1162 RVA: 0x0015C9F0 File Offset: 0x0015B3F0
	public static method __m2mep@?UToMErrorInfo@@$$FYMPE$AAVSearchErrorInfo@MailboxSearch@Rpc@Exchange@Microsoft@@PEAU__MIDL_IMailboxSearch_0003@@@Z;

	// Token: 0x0400048B RID: 1163 RVA: 0x0015CA00 File Offset: 0x0015B400
	public static method __m2mep@?MToUErrorInfo@@$$FYMJPE$AAVSearchErrorInfo@MailboxSearch@Rpc@Exchange@Microsoft@@PEAU__MIDL_IMailboxSearch_0003@@@Z;

	// Token: 0x0400048C RID: 1164 RVA: 0x0015CA10 File Offset: 0x0015B410
	public static method __m2mep@?InitRpcSearchStatus@@$$FYAXPEAU__MIDL_IMailboxSearch_0002@@@Z;

	// Token: 0x0400048D RID: 1165 RVA: 0x0015CA20 File Offset: 0x0015B420
	public static method __m2mep@?FreeRpcSearchStatus@@$$FYAXPEAU__MIDL_IMailboxSearch_0002@@@Z;

	// Token: 0x0400048E RID: 1166 RVA: 0x0015CA30 File Offset: 0x0015B430
	public static method __m2mep@?UToMSearchStatus@@$$FYMPE$AAVSearchStatus@MailboxSearch@Rpc@Exchange@Microsoft@@PEAU__MIDL_IMailboxSearch_0002@@@Z;

	// Token: 0x0400048F RID: 1167 RVA: 0x0015CA40 File Offset: 0x0015B440
	public static method __m2mep@?MToUSearchStatus@@$$FYMJPE$AAVSearchStatus@MailboxSearch@Rpc@Exchange@Microsoft@@PEAU__MIDL_IMailboxSearch_0002@@@Z;

	// Token: 0x04000490 RID: 1168 RVA: 0x0015CA60 File Offset: 0x0015B460
	public static method __m2mep@?Start@@$$J0YAJPEAXPEAU__MIDL_IMailboxSearch_0001@@U_GUID@@PEAU__MIDL_IMailboxSearch_0003@@@Z;

	// Token: 0x04000491 RID: 1169 RVA: 0x0015CA70 File Offset: 0x0015B470
	public static method __m2mep@?GetStatus@@$$J0YAJPEAXPEAU__MIDL_IMailboxSearch_0001@@PEAU__MIDL_IMailboxSearch_0002@@PEAU__MIDL_IMailboxSearch_0003@@@Z;

	// Token: 0x04000492 RID: 1170 RVA: 0x0015CA80 File Offset: 0x0015B480
	public static method __m2mep@?Abort@@$$J0YAJPEAXPEAU__MIDL_IMailboxSearch_0001@@U_GUID@@PEAU__MIDL_IMailboxSearch_0003@@@Z;

	// Token: 0x04000493 RID: 1171 RVA: 0x0015CA90 File Offset: 0x0015B490
	public static method __m2mep@?Remove@@$$J0YAJPEAXPEAU__MIDL_IMailboxSearch_0001@@HPEAU__MIDL_IMailboxSearch_0003@@@Z;

	// Token: 0x04000494 RID: 1172 RVA: 0x0015CAA0 File Offset: 0x0015B4A0
	public static method __m2mep@?StartEx@@$$J0YAJPEAXPEAU__MIDL_IMailboxSearch_0001@@PEAGPEAU__MIDL_IMailboxSearch_0003@@@Z;

	// Token: 0x04000495 RID: 1173 RVA: 0x0015CAB0 File Offset: 0x0015B4B0
	public static method __m2mep@?AbortEx@@$$J0YAJPEAXPEAU__MIDL_IMailboxSearch_0001@@PEAGPEAU__MIDL_IMailboxSearch_0003@@@Z;

	// Token: 0x04000496 RID: 1174 RVA: 0x0015CAC0 File Offset: 0x0015B4C0
	public static method __m2mep@?UpdateStatus@@$$J0YAJPEAXPEAU__MIDL_IMailboxSearch_0001@@PEAU__MIDL_IMailboxSearch_0003@@@Z;

	// Token: 0x04000497 RID: 1175 RVA: 0x0015CAD0 File Offset: 0x0015B4D0
	public static method __m2mep@?IntiailizeMailInfo@MailSubmission@Rpc@Exchange@Microsoft@@$$FYAXPEAU_Mail_Info@@@Z;

	// Token: 0x04000498 RID: 1176 RVA: 0x0015CAF0 File Offset: 0x0015B4F0
	public static method __m2mep@?Retry@RpcRetryState@@$$FQEAA_NJ@Z;

	// Token: 0x04000499 RID: 1177 RVA: 0x0015CAE0 File Offset: 0x0015B4E0
	public static method __m2mep@??0RpcRetryState@@$$FQEAA@XZ;

	// Token: 0x0400049A RID: 1178 RVA: 0x0015CB00 File Offset: 0x0015B500
	public static method __m2mep@?SubmitMessage@@$$J0YA?AW4tagSubmissionStatus@@PEAXPEAG11HPEAEH2H2H2JH2@Z;

	// Token: 0x0400049B RID: 1179 RVA: 0x0015CB10 File Offset: 0x0015B510
	public static method __m2mep@?SubmitMessage2@@$$J0YAJPEAXPEAGU_GUID@@2JHPEAEH31H3PEAU_Mail_Info@@@Z;

	// Token: 0x0400049C RID: 1180 RVA: 0x0015CB20 File Offset: 0x0015B520
	public static method __m2mep@?SubmitDumpsterMessages@@$$J0YA?AW4tagSubmissionStatus@@PEAXPEAG_J2@Z;

	// Token: 0x0400049D RID: 1181 RVA: 0x0015CB30 File Offset: 0x0015B530
	public static method __m2mep@?AddMdbResubmitRequest@@$$J0YA?AW4tagAddResubmitRequestStatus@@PEAXU_GUID@@1_J2HPEAPEAGHPEAE@Z;

	// Token: 0x0400049E RID: 1182 RVA: 0x0015CB40 File Offset: 0x0015B540
	public static method __m2mep@?QueryDumpsterStats@@$$J0YAJPEAXPEAGPEA_J2PEAH@Z;

	// Token: 0x0400049F RID: 1183 RVA: 0x0015CB50 File Offset: 0x0015B550
	public static method __m2mep@?SubmitMessage3@@$$J0YAXPEAXHPEAEPEAHPEAPEAE@Z;

	// Token: 0x040004A0 RID: 1184 RVA: 0x0015CB60 File Offset: 0x0015B560
	public static method __m2mep@?ShadowHeartBeat@@$$J0YAXPEAXHPEAEPEAHPEAPEAE@Z;

	// Token: 0x040004A1 RID: 1185 RVA: 0x0015CB70 File Offset: 0x0015B570
	public static method __m2mep@?GetResubmitRequest@@$$J0YAXPEAXHPEAEPEAHPEAPEAE@Z;

	// Token: 0x040004A2 RID: 1186 RVA: 0x0015CB80 File Offset: 0x0015B580
	public static method __m2mep@?SetResubmitRequest@@$$J0YAXPEAXHPEAEPEAHPEAPEAE@Z;

	// Token: 0x040004A3 RID: 1187 RVA: 0x0015CB90 File Offset: 0x0015B590
	public static method __m2mep@?RemoveResubmitRequest@@$$J0YAXPEAXHPEAEPEAHPEAPEAE@Z;

	// Token: 0x040004A4 RID: 1188 RVA: 0x0015CBA0 File Offset: 0x0015B5A0
	public static method __m2mep@?AddConditionalResubmitRequest@@$$J0YA?AW4tagAddResubmitRequestStatus@@PEAXU_GUID@@_J2PEAGHPEAPEAGHPEAE@Z;

	// Token: 0x040004A5 RID: 1189 RVA: 0x00160BF0 File Offset: 0x0015F5F0
	internal static _CONTEXT g_RpcContextRecord;

	// Token: 0x040004A6 RID: 1190 RVA: 0x00160B50 File Offset: 0x0015F550
	internal static _EXCEPTION_RECORD g_RpcExceptionRecord;

	// Token: 0x040004A7 RID: 1191 RVA: 0x00160B38 File Offset: 0x0015F538
	internal static _EXCEPTION_POINTERS g_RpcExceptionInfo;

	// Token: 0x040004A8 RID: 1192 RVA: 0x00160B2A File Offset: 0x0015F52A
	internal static bool g_fCrashMeNowExit;

	// Token: 0x040004A9 RID: 1193 RVA: 0x00160B29 File Offset: 0x0015F529
	internal static bool g_fCrashMeNow;

	// Token: 0x040004AA RID: 1194 RVA: 0x00160B30 File Offset: 0x0015F530
	internal unsafe static void* g_hCrashMeNow;

	// Token: 0x040004AB RID: 1195 RVA: 0x00160B28 File Offset: 0x0015F528
	internal static bool g_fCrashMeNowInitialized;

	// Token: 0x040004AC RID: 1196 RVA: 0x00160B24 File Offset: 0x0015F524
	internal static uint g_dwCrashMeNowLock;

	// Token: 0x040004AD RID: 1197 RVA: 0x00160B20 File Offset: 0x0015F520
	internal static int g_fExecutedRpcExceptionFilter;

	// Token: 0x040004AE RID: 1198 RVA: 0x0015CBB0 File Offset: 0x0015B5B0
	internal static $ArrayType$$$BY03K rgdwFatalExceptions;

	// Token: 0x040004AF RID: 1199 RVA: 0x0015CBC0 File Offset: 0x0015B5C0
	public static method __m2mep@?CrashMeNowThreadProc@@$$FYAKPEAX@Z;

	// Token: 0x040004B0 RID: 1200 RVA: 0x0015CBD0 File Offset: 0x0015B5D0
	public static method __m2mep@?FInitializeCrashThread@ManagedExceptionCrashWrapper@Rpc@Exchange@Microsoft@@$$FSA_NXZ;

	// Token: 0x040004B1 RID: 1201 RVA: 0x0015CBE0 File Offset: 0x0015B5E0
	public static method __m2mep@?CrashMeNowX@ManagedExceptionCrashWrapper@Rpc@Exchange@Microsoft@@$$FSAXXZ;

	// Token: 0x040004B2 RID: 1202 RVA: 0x0015CBF0 File Offset: 0x0015B5F0
	public static method __m2mep@?CrashMeNow@ManagedExceptionCrashWrapper@Rpc@Exchange@Microsoft@@$$FSMXPE$AAVObject@System@@@Z;

	// Token: 0x040004B3 RID: 1203 RVA: 0x0015CC00 File Offset: 0x0015B600
	public static method __m2mep@?CrashMeNow@ManagedExceptionCrashWrapper@Rpc@Exchange@Microsoft@@$$FSMXPE$AAVException@System@@@Z;

	// Token: 0x040004B4 RID: 1204 RVA: 0x0015CC10 File Offset: 0x0015B610
	public static method __m2mep@?Execute@ManagedExceptionCrashWrapper@Rpc@Exchange@Microsoft@@$$FQEAAJXZ;

	// Token: 0x040004B5 RID: 1205 RVA: 0x0006EEE8 File Offset: 0x0006E0E8
	public unsafe static int** __unep@?CrashMeNowThreadProc@@$$FYAKPEAX@Z;

	// Token: 0x040004B6 RID: 1206 RVA: 0x0015CC20 File Offset: 0x0015B620
	public static method __m2mep@?UpdateMigrationRequest@@$$J0YAXPEAXHHPEAEPEAHPEAPEAE@Z;

	// Token: 0x040004B7 RID: 1207 RVA: 0x0015CC30 File Offset: 0x0015B630
	public static method __m2mep@?ProxyNspiQueryRows@@$$J0YAJPEAXHHPEAEPEAHPEAPEAEPEAPEAU_SRowSet_r@@@Z;

	// Token: 0x040004B8 RID: 1208 RVA: 0x0015CC40 File Offset: 0x0015B640
	public static method __m2mep@?ProxyNspiGetRecipient@@$$J0YAJPEAXHHPEAEPEAHPEAPEAEPEAPEAU_SRowSet_r@@@Z;

	// Token: 0x040004B9 RID: 1209 RVA: 0x0015CC50 File Offset: 0x0015B650
	public static method __m2mep@?ProxyNspiSetRecipient@@$$J0YAJPEAXHHPEAEPEAHPEAPEAE@Z;

	// Token: 0x040004BA RID: 1210 RVA: 0x0015CC60 File Offset: 0x0015B660
	public static method __m2mep@?ProxyNspiGetGroupMembers@@$$J0YAJPEAXHHPEAEPEAHPEAPEAEPEAPEAU_SRowSet_r@@@Z;

	// Token: 0x040004BB RID: 1211 RVA: 0x0015CC70 File Offset: 0x0015B670
	public static method __m2mep@?ProxyNspiRfrGetNewDSA@@$$J0YAJPEAXHHPEAEPEAHPEAPEAE@Z;

	// Token: 0x040004BC RID: 1212 RVA: 0x0015CC80 File Offset: 0x0015B680
	public static method __m2mep@?ProxyAutodiscoverGetUserSettings@@$$J0YAJPEAXHHPEAEPEAHPEAPEAE@Z;

	// Token: 0x040004BD RID: 1213 RVA: 0x0015CC90 File Offset: 0x0015B690
	public static method __m2mep@?InvokeMigrationServiceEndPoint@@$$J0YAXPEAXHHPEAEPEAHPEAPEAE@Z;

	// Token: 0x040004BE RID: 1214 RVA: 0x001520D0 File Offset: 0x001512D0
	internal static $_s__RTTIBaseClassArray$_extraBytes_16 ??_R2MockRequestQueue@@8;

	// Token: 0x040004BF RID: 1215 RVA: 0x00152080 File Offset: 0x00151280
	internal static $_s__RTTIBaseClassArray$_extraBytes_8 ??_R2?$CRequestQueue@H@@8;

	// Token: 0x040004C0 RID: 1216 RVA: 0x00152058 File Offset: 0x00151258
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@MockRequestQueue@@8;

	// Token: 0x040004C1 RID: 1217 RVA: 0x001520A8 File Offset: 0x001512A8
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@?$CRequestQueue@H@@8;

	// Token: 0x040004C2 RID: 1218 RVA: 0x00152090 File Offset: 0x00151290
	internal static _s__RTTIClassHierarchyDescriptor ??_R3?$CRequestQueue@H@@8;

	// Token: 0x040004C3 RID: 1219 RVA: 0x0015CCC8 File Offset: 0x0015B6C8
	internal static $_TypeDescriptor$_extraBytes_24 ??_R0?AV?$CRequestQueue@H@@@8;

	// Token: 0x040004C4 RID: 1220 RVA: 0x001520E8 File Offset: 0x001512E8
	internal static _s__RTTIClassHierarchyDescriptor ??_R3MockRequestQueue@@8;

	// Token: 0x040004C5 RID: 1221 RVA: 0x0015CCA0 File Offset: 0x0015B6A0
	internal static $_TypeDescriptor$_extraBytes_23 ??_R0?AVMockRequestQueue@@@8;

	// Token: 0x040004C6 RID: 1222 RVA: 0x00152128 File Offset: 0x00151328
	internal static _s__RTTICompleteObjectLocator2 ??_R4?$CRequestQueue@H@@6B@;

	// Token: 0x040004C7 RID: 1223 RVA: 0x00152100 File Offset: 0x00151300
	internal static _s__RTTICompleteObjectLocator2 ??_R4MockRequestQueue@@6B@;

	// Token: 0x040004C8 RID: 1224 RVA: 0x0015CD58 File Offset: 0x0015B758
	internal static $ArrayType$$$BY0L@Q6AXXZ ??_7?$CRequestQueue@H@@6B@;

	// Token: 0x040004C9 RID: 1225 RVA: 0x0015CCF8 File Offset: 0x0015B6F8
	internal static $ArrayType$$$BY0L@Q6AXXZ ??_7MockRequestQueue@@6B@;

	// Token: 0x040004CA RID: 1226 RVA: 0x0006EF68 File Offset: 0x0006E168
	internal static $ArrayType$$$BY0L@$$CBG ??_C@_1BG@FOAHFCPJ@?$AAn?$AAc?$AAa?$AAc?$AAn?$AA_?$AAh?$AAt?$AAt?$AAp?$AA?$AA@;

	// Token: 0x040004CB RID: 1227 RVA: 0x0006EF80 File Offset: 0x0006E180
	internal static $ArrayType$$$BY07$$CBG ??_C@_1BA@EONDGCCM@?$AAn?$AAc?$AAa?$AAl?$AAr?$AAp?$AAc?$AA?$AA@;

	// Token: 0x040004CC RID: 1228 RVA: 0x0006EF90 File Offset: 0x0006E190
	internal static $ArrayType$$$BY0N@$$CBG ??_C@_1BK@BPGFLIHL@?$AAn?$AAc?$AAa?$AAc?$AAn?$AA_?$AAi?$AAp?$AA_?$AAt?$AAc?$AAp?$AA?$AA@;

	// Token: 0x040004CD RID: 1229 RVA: 0x00161140 File Offset: 0x0015FB40
	internal static $ArrayType$$$BY04UtagInterfaceDetails@@ g_rgInterfaceDetails;

	// Token: 0x040004CE RID: 1230 RVA: 0x00161118 File Offset: 0x0015FB18
	internal static $ArrayType$$$BY04PEAU_GUID@@ g_rgInterfaceUUIDs;

	// Token: 0x040004CF RID: 1231 RVA: 0x00161110 File Offset: 0x0015FB10
	internal static int g_fInitializedInterfaceUUIDs;

	// Token: 0x040004D0 RID: 1232 RVA: 0x0015CDA8 File Offset: 0x0015B7A8
	public static method __m2mep@?X_LoadInterfaceDetails@@$$FYAHPEAXPEAUtagInterfaceDetails@@@Z;

	// Token: 0x040004D1 RID: 1233 RVA: 0x0006EFB0 File Offset: 0x0006E1B0
	internal static $ArrayType$$$BY0M@$$CBG ??_C@_1BI@EACKENB@?$AAr?$AAp?$AAc?$AAp?$AAe?$AAr?$AAf?$AA?4?$AAd?$AAl?$AAl?$AA?$AA@;

	// Token: 0x040004D2 RID: 1234 RVA: 0x0006EFC8 File Offset: 0x0006E1C8
	internal static $ArrayType$$$BY0BE@$$CBD ??_C@_0BE@FJPMNOMK@OpenPerformanceData?$AA@;

	// Token: 0x040004D3 RID: 1235 RVA: 0x0006EFE0 File Offset: 0x0006E1E0
	internal static $ArrayType$$$BY0BK@$$CBD ??_C@_0BK@GDIKPFBF@GetPerformanceDataPointer?$AA@;

	// Token: 0x040004D4 RID: 1236 RVA: 0x001611EC File Offset: 0x0015FBEC
	internal static int g_fRpcPerfDataLoaded;

	// Token: 0x040004D5 RID: 1237 RVA: 0x001611E8 File Offset: 0x0015FBE8
	internal static int g_lRpcPerfDataLock;

	// Token: 0x040004D6 RID: 1238 RVA: 0x001611F0 File Offset: 0x0015FBF0
	internal unsafe static RPC_PERF_DATA* g_pRpcPerfData;

	// Token: 0x040004D7 RID: 1239 RVA: 0x001523A0 File Offset: 0x001515A0
	internal static $_s__RTTIBaseClassArray$_extraBytes_32 ??_R2NotificationsBrokerAsyncRpcCallWrapper_GetNextNotification@NotificationsBroker@Rpc@Exchange@Microsoft@@8;

	// Token: 0x040004D8 RID: 1240 RVA: 0x00152310 File Offset: 0x00151510
	internal static $_s__RTTIBaseClassArray$_extraBytes_32 ??_R2NotificationsBrokerAsyncRpcCallWrapper_Unsubscribe@NotificationsBroker@Rpc@Exchange@Microsoft@@8;

	// Token: 0x040004D9 RID: 1241 RVA: 0x00152280 File Offset: 0x00151480
	internal static $_s__RTTIBaseClassArray$_extraBytes_32 ??_R2NotificationsBrokerAsyncRpcCallWrapper_Subscribe@NotificationsBroker@Rpc@Exchange@Microsoft@@8;

	// Token: 0x040004DA RID: 1242 RVA: 0x001521D0 File Offset: 0x001513D0
	internal static $_s__RTTIBaseClassArray$_extraBytes_24 ??_R2NotificationsBrokerAsyncRpcCallWrapper@NotificationsBroker@Rpc@Exchange@Microsoft@@8;

	// Token: 0x040004DB RID: 1243 RVA: 0x00152178 File Offset: 0x00151378
	internal static $_s__RTTIBaseClassArray$_extraBytes_16 ??_R2?$BaseAsyncRpcCallWrapper@VNotificationsBrokerAsyncRpcServer@NotificationsBroker@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@8;

	// Token: 0x040004DC RID: 1244 RVA: 0x00152378 File Offset: 0x00151578
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@NotificationsBrokerAsyncRpcCallWrapper_GetNextNotification@NotificationsBroker@Rpc@Exchange@Microsoft@@8;

	// Token: 0x040004DD RID: 1245 RVA: 0x001522E8 File Offset: 0x001514E8
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@NotificationsBrokerAsyncRpcCallWrapper_Unsubscribe@NotificationsBroker@Rpc@Exchange@Microsoft@@8;

	// Token: 0x040004DE RID: 1246 RVA: 0x00152258 File Offset: 0x00151458
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@NotificationsBrokerAsyncRpcCallWrapper_Subscribe@NotificationsBroker@Rpc@Exchange@Microsoft@@8;

	// Token: 0x040004DF RID: 1247 RVA: 0x00152150 File Offset: 0x00151350
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@NotificationsBrokerAsyncRpcCallWrapper@NotificationsBroker@Rpc@Exchange@Microsoft@@8;

	// Token: 0x040004E0 RID: 1248 RVA: 0x001521A8 File Offset: 0x001513A8
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@?$BaseAsyncRpcCallWrapper@VNotificationsBrokerAsyncRpcServer@NotificationsBroker@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@8;

	// Token: 0x040004E1 RID: 1249 RVA: 0x001523C8 File Offset: 0x001515C8
	internal static _s__RTTIClassHierarchyDescriptor ??_R3NotificationsBrokerAsyncRpcCallWrapper_GetNextNotification@NotificationsBroker@Rpc@Exchange@Microsoft@@8;

	// Token: 0x040004E2 RID: 1250 RVA: 0x0015D090 File Offset: 0x0015BA90
	internal static $_TypeDescriptor$_extraBytes_108 ??_R0?AVNotificationsBrokerAsyncRpcCallWrapper_GetNextNotification@NotificationsBroker@Rpc@Exchange@Microsoft@@@8;

	// Token: 0x040004E3 RID: 1251 RVA: 0x00152338 File Offset: 0x00151538
	internal static _s__RTTIClassHierarchyDescriptor ??_R3NotificationsBrokerAsyncRpcCallWrapper_Unsubscribe@NotificationsBroker@Rpc@Exchange@Microsoft@@8;

	// Token: 0x040004E4 RID: 1252 RVA: 0x0015D010 File Offset: 0x0015BA10
	internal static $_TypeDescriptor$_extraBytes_100 ??_R0?AVNotificationsBrokerAsyncRpcCallWrapper_Unsubscribe@NotificationsBroker@Rpc@Exchange@Microsoft@@@8;

	// Token: 0x040004E5 RID: 1253 RVA: 0x001522A8 File Offset: 0x001514A8
	internal static _s__RTTIClassHierarchyDescriptor ??_R3NotificationsBrokerAsyncRpcCallWrapper_Subscribe@NotificationsBroker@Rpc@Exchange@Microsoft@@8;

	// Token: 0x040004E6 RID: 1254 RVA: 0x0015CF90 File Offset: 0x0015B990
	internal static $_TypeDescriptor$_extraBytes_98 ??_R0?AVNotificationsBrokerAsyncRpcCallWrapper_Subscribe@NotificationsBroker@Rpc@Exchange@Microsoft@@@8;

	// Token: 0x040004E7 RID: 1255 RVA: 0x00152190 File Offset: 0x00151390
	internal static _s__RTTIClassHierarchyDescriptor ??_R3?$BaseAsyncRpcCallWrapper@VNotificationsBrokerAsyncRpcServer@NotificationsBroker@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@8;

	// Token: 0x040004E8 RID: 1256 RVA: 0x0015CEF0 File Offset: 0x0015B8F0
	internal static $_TypeDescriptor$_extraBytes_135 ??_R0?AV?$BaseAsyncRpcCallWrapper@VNotificationsBrokerAsyncRpcServer@NotificationsBroker@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@@8;

	// Token: 0x040004E9 RID: 1257 RVA: 0x001521F0 File Offset: 0x001513F0
	internal static _s__RTTIClassHierarchyDescriptor ??_R3NotificationsBrokerAsyncRpcCallWrapper@NotificationsBroker@Rpc@Exchange@Microsoft@@8;

	// Token: 0x040004EA RID: 1258 RVA: 0x0015CE80 File Offset: 0x0015B880
	internal static $_TypeDescriptor$_extraBytes_88 ??_R0?AVNotificationsBrokerAsyncRpcCallWrapper@NotificationsBroker@Rpc@Exchange@Microsoft@@@8;

	// Token: 0x040004EB RID: 1259
	[FixedAddressValueType]
	internal static $ArrayType$$$BY02Q6AXXZ ??_7NotificationsBrokerAsyncRpcCallWrapper_GetNextNotification@NotificationsBroker@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x040004EC RID: 1260 RVA: 0x0006E7E8 File Offset: 0x0006D9E8
	internal static method ??_7NotificationsBrokerAsyncRpcCallWrapper_GetNextNotification@NotificationsBroker@Rpc@Exchange@Microsoft@@6B@$initializer$;

	// Token: 0x040004ED RID: 1261 RVA: 0x001523E0 File Offset: 0x001515E0
	internal static _s__RTTICompleteObjectLocator2 ??_R4NotificationsBrokerAsyncRpcCallWrapper_GetNextNotification@NotificationsBroker@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x040004EE RID: 1262
	[FixedAddressValueType]
	internal static $ArrayType$$$BY02Q6AXXZ ??_7NotificationsBrokerAsyncRpcCallWrapper_Unsubscribe@NotificationsBroker@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x040004EF RID: 1263 RVA: 0x0006E7E0 File Offset: 0x0006D9E0
	internal static method ??_7NotificationsBrokerAsyncRpcCallWrapper_Unsubscribe@NotificationsBroker@Rpc@Exchange@Microsoft@@6B@$initializer$;

	// Token: 0x040004F0 RID: 1264 RVA: 0x00152350 File Offset: 0x00151550
	internal static _s__RTTICompleteObjectLocator2 ??_R4NotificationsBrokerAsyncRpcCallWrapper_Unsubscribe@NotificationsBroker@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x040004F1 RID: 1265
	[FixedAddressValueType]
	internal static $ArrayType$$$BY02Q6AXXZ ??_7NotificationsBrokerAsyncRpcCallWrapper_Subscribe@NotificationsBroker@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x040004F2 RID: 1266 RVA: 0x0006E7D8 File Offset: 0x0006D9D8
	internal static method ??_7NotificationsBrokerAsyncRpcCallWrapper_Subscribe@NotificationsBroker@Rpc@Exchange@Microsoft@@6B@$initializer$;

	// Token: 0x040004F3 RID: 1267 RVA: 0x001522C0 File Offset: 0x001514C0
	internal static _s__RTTICompleteObjectLocator2 ??_R4NotificationsBrokerAsyncRpcCallWrapper_Subscribe@NotificationsBroker@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x040004F4 RID: 1268
	[FixedAddressValueType]
	internal static $ArrayType$$$BY02Q6AXXZ ??_7?$BaseAsyncRpcCallWrapper@VNotificationsBrokerAsyncRpcServer@NotificationsBroker@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x040004F5 RID: 1269 RVA: 0x0006E7D0 File Offset: 0x0006D9D0
	internal static method ??_7?$BaseAsyncRpcCallWrapper@VNotificationsBrokerAsyncRpcServer@NotificationsBroker@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@6B@$initializer$;

	// Token: 0x040004F6 RID: 1270 RVA: 0x00152230 File Offset: 0x00151430
	internal static _s__RTTICompleteObjectLocator2 ??_R4?$BaseAsyncRpcCallWrapper@VNotificationsBrokerAsyncRpcServer@NotificationsBroker@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x040004F7 RID: 1271
	[FixedAddressValueType]
	internal static $ArrayType$$$BY02Q6AXXZ ??_7NotificationsBrokerAsyncRpcCallWrapper@NotificationsBroker@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x040004F8 RID: 1272 RVA: 0x0006E7C8 File Offset: 0x0006D9C8
	internal static method ??_7NotificationsBrokerAsyncRpcCallWrapper@NotificationsBroker@Rpc@Exchange@Microsoft@@6B@$initializer$;

	// Token: 0x040004F9 RID: 1273 RVA: 0x00152208 File Offset: 0x00151408
	internal static _s__RTTICompleteObjectLocator2 ??_R4NotificationsBrokerAsyncRpcCallWrapper@NotificationsBroker@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x040004FA RID: 1274 RVA: 0x0015CE08 File Offset: 0x0015B808
	public static method __m2mep@??0NotificationsBrokerAsyncRpcCallWrapper@NotificationsBroker@Rpc@Exchange@Microsoft@@$$FIEAM@VIntPtr@System@@@Z;

	// Token: 0x040004FB RID: 1275 RVA: 0x0015CE48 File Offset: 0x0015B848
	public static method __m2mep@?DispatchCall@NotificationsBrokerAsyncRpcCallWrapper_Subscribe@NotificationsBroker@Rpc@Exchange@Microsoft@@$$FMEAMXPE$AAVNotificationsBrokerAsyncRpcServer@2345@PE$AAVSafeRpcAsyncStateHandle@345@@Z;

	// Token: 0x040004FC RID: 1276 RVA: 0x0015CE18 File Offset: 0x0015B818
	public static method __m2mep@??0NotificationsBrokerAsyncRpcCallWrapper_Subscribe@NotificationsBroker@Rpc@Exchange@Microsoft@@$$FQEAA@PEAXPEAG@Z;

	// Token: 0x040004FD RID: 1277 RVA: 0x0015CE58 File Offset: 0x0015B858
	public static method __m2mep@?DispatchCall@NotificationsBrokerAsyncRpcCallWrapper_Unsubscribe@NotificationsBroker@Rpc@Exchange@Microsoft@@$$FMEAMXPE$AAVNotificationsBrokerAsyncRpcServer@2345@PE$AAVSafeRpcAsyncStateHandle@345@@Z;

	// Token: 0x040004FE RID: 1278 RVA: 0x0015CE28 File Offset: 0x0015B828
	public static method __m2mep@??0NotificationsBrokerAsyncRpcCallWrapper_Unsubscribe@NotificationsBroker@Rpc@Exchange@Microsoft@@$$FQEAA@PEAXPEAG@Z;

	// Token: 0x040004FF RID: 1279 RVA: 0x0015CE68 File Offset: 0x0015B868
	public static method __m2mep@?DispatchCall@NotificationsBrokerAsyncRpcCallWrapper_GetNextNotification@NotificationsBroker@Rpc@Exchange@Microsoft@@$$FMEAMXPE$AAVNotificationsBrokerAsyncRpcServer@2345@PE$AAVSafeRpcAsyncStateHandle@345@@Z;

	// Token: 0x04000500 RID: 1280 RVA: 0x0015CE38 File Offset: 0x0015B838
	public static method __m2mep@??0NotificationsBrokerAsyncRpcCallWrapper_GetNextNotification@NotificationsBroker@Rpc@Exchange@Microsoft@@$$FQEAA@PEAXHU_GUID@@PEAPEAG@Z;

	// Token: 0x04000501 RID: 1281 RVA: 0x0015CDF8 File Offset: 0x0015B7F8
	public static method __m2mep@??0?$BaseAsyncRpcCallWrapper@VNotificationsBrokerAsyncRpcServer@NotificationsBroker@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@$$FIEAM@VIntPtr@System@@@Z;

	// Token: 0x04000502 RID: 1282 RVA: 0x0015CDB8 File Offset: 0x0015B7B8
	public static method __m2mep@?InternalExecute@?$BaseAsyncRpcCallWrapper@VNotificationsBrokerAsyncRpcServer@NotificationsBroker@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@$$FUEAMJPE$AAVSafeRpcAsyncStateHandle@234@@Z;

	// Token: 0x04000503 RID: 1283 RVA: 0x0015CDC8 File Offset: 0x0015B7C8
	public static method __m2mep@??$Execute@VSafeNotificationsBrokerSubscribeRpcAsyncStateHandle@NotificationsBroker@Rpc@Exchange@Microsoft@@@ManagedExceptionAsyncCrashWrapper@Rpc@Exchange@Microsoft@@$$FQEAAXPEAU_RPC_ASYNC_STATE@@@Z;

	// Token: 0x04000504 RID: 1284 RVA: 0x0015CDD8 File Offset: 0x0015B7D8
	public static method __m2mep@??$Execute@VSafeNotificationsBrokerUnsubscribeRpcAsyncStateHandle@NotificationsBroker@Rpc@Exchange@Microsoft@@@ManagedExceptionAsyncCrashWrapper@Rpc@Exchange@Microsoft@@$$FQEAAXPEAU_RPC_ASYNC_STATE@@@Z;

	// Token: 0x04000505 RID: 1285 RVA: 0x0015CDE8 File Offset: 0x0015B7E8
	public static method __m2mep@??$Execute@VSafeNotificationsBrokerGetNextNotificationRpcAsyncStateHandle@NotificationsBroker@Rpc@Exchange@Microsoft@@@ManagedExceptionAsyncCrashWrapper@Rpc@Exchange@Microsoft@@$$FQEAAXPEAU_RPC_ASYNC_STATE@@@Z;

	// Token: 0x04000506 RID: 1286 RVA: 0x0006F050 File Offset: 0x0006E250
	internal static $ArrayType$$$BY0EA@$$CBG ??_C@_1IA@LNDONIEP@?$AAS?$AAY?$AAS?$AAT?$AAE?$AAM?$AA?2?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAS?$AAe?$AAt?$AA?2?$AAS?$AAe?$AAr?$AAv?$AAi?$AAc?$AAe@;

	// Token: 0x04000507 RID: 1287 RVA: 0x0006F0D0 File Offset: 0x0006E2D0
	internal static $ArrayType$$$BY0BH@$$CBG ??_C@_1CO@KOOCGFCI@?$AAN?$AAS?$AAP?$AAI?$AA?5?$AAN?$AAa?$AAt?$AAi?$AAv?$AAe?$AA?5?$AAQ?$AAu?$AAe?$AAu?$AAe?$AA?5?$AAS?$AAi?$AAz?$AAe?$AA?$AA@;

	// Token: 0x04000508 RID: 1288 RVA: 0x0006F148 File Offset: 0x0006E348
	internal static $ArrayType$$$BY0BN@$$CBG ??_C@_1DK@PDJNNANM@?$AAN?$AAS?$AAP?$AAI?$AA?5?$AAN?$AAa?$AAt?$AAi?$AAv?$AAe?$AA?5?$AAD?$AAi?$AAs?$AAp?$AAa?$AAt?$AAc?$AAh?$AA?5?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AAs?$AA?$AA@;

	// Token: 0x04000509 RID: 1289 RVA: 0x0006F100 File Offset: 0x0006E300
	internal static $ArrayType$$$BY0CC@$$CBG ??_C@_1EE@CPAPNFAA@?$AAN?$AAS?$AAP?$AAI?$AA?5?$AAN?$AAa?$AAt?$AAi?$AAv?$AAe?$AA?5?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AAs?$AA?5?$AAP?$AAe?$AAr?$AA?5?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAo@;

	// Token: 0x0400050A RID: 1290 RVA: 0x00152528 File Offset: 0x00151728
	internal static $_s__RTTIBaseClassArray$_extraBytes_16 ??_R2CNSPILazyInitRequestQueue@@8;

	// Token: 0x0400050B RID: 1291 RVA: 0x001524B0 File Offset: 0x001516B0
	internal static $_s__RTTIBaseClassArray$_extraBytes_8 ??_R2?$CLazyInitRequestQueue@VCNSPIRequestQueue@@UNSPI_REQUEST@@$0CHBA@$00@@8;

	// Token: 0x0400050C RID: 1292 RVA: 0x00152678 File Offset: 0x00151878
	internal static $_s__RTTIBaseClassArray$_extraBytes_16 ??_R2CNSPIRequestQueue@@8;

	// Token: 0x0400050D RID: 1293 RVA: 0x00152628 File Offset: 0x00151828
	internal static $_s__RTTIBaseClassArray$_extraBytes_8 ??_R2?$CRequestQueue@UNSPI_REQUEST@@@@8;

	// Token: 0x0400050E RID: 1294 RVA: 0x00153368 File Offset: 0x00152568
	internal static $_s__RTTIBaseClassArray$_extraBytes_32 ??_R2NspiAsyncRpcCallWrapper_ResolveNamesW@NspiServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x0400050F RID: 1295 RVA: 0x001532D8 File Offset: 0x001524D8
	internal static $_s__RTTIBaseClassArray$_extraBytes_32 ??_R2NspiAsyncRpcCallWrapper_ResolveNames@NspiServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x04000510 RID: 1296 RVA: 0x00153248 File Offset: 0x00152448
	internal static $_s__RTTIBaseClassArray$_extraBytes_32 ??_R2NspiAsyncRpcCallWrapper_GetIDsFromNames@NspiServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x04000511 RID: 1297 RVA: 0x001531B8 File Offset: 0x001523B8
	internal static $_s__RTTIBaseClassArray$_extraBytes_32 ??_R2NspiAsyncRpcCallWrapper_GetNamesFromIDs@NspiServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x04000512 RID: 1298 RVA: 0x00153128 File Offset: 0x00152328
	internal static $_s__RTTIBaseClassArray$_extraBytes_32 ??_R2NspiAsyncRpcCallWrapper_QueryColumns@NspiServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x04000513 RID: 1299 RVA: 0x00153098 File Offset: 0x00152298
	internal static $_s__RTTIBaseClassArray$_extraBytes_32 ??_R2NspiAsyncRpcCallWrapper_DeleteEntries@NspiServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x04000514 RID: 1300 RVA: 0x00153008 File Offset: 0x00152208
	internal static $_s__RTTIBaseClassArray$_extraBytes_32 ??_R2NspiAsyncRpcCallWrapper_ModLinkAtt@NspiServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x04000515 RID: 1301 RVA: 0x00152F78 File Offset: 0x00152178
	internal static $_s__RTTIBaseClassArray$_extraBytes_32 ??_R2NspiAsyncRpcCallWrapper_GetTemplateInfo@NspiServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x04000516 RID: 1302 RVA: 0x00152EE8 File Offset: 0x001520E8
	internal static $_s__RTTIBaseClassArray$_extraBytes_32 ??_R2NspiAsyncRpcCallWrapper_GetHierarchyInfo@NspiServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x04000517 RID: 1303 RVA: 0x00152E58 File Offset: 0x00152058
	internal static $_s__RTTIBaseClassArray$_extraBytes_32 ??_R2NspiAsyncRpcCallWrapper_ModProps@NspiServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x04000518 RID: 1304 RVA: 0x00152DC8 File Offset: 0x00151FC8
	internal static $_s__RTTIBaseClassArray$_extraBytes_32 ??_R2NspiAsyncRpcCallWrapper_CompareDNTs@NspiServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x04000519 RID: 1305 RVA: 0x00152D38 File Offset: 0x00151F38
	internal static $_s__RTTIBaseClassArray$_extraBytes_32 ??_R2NspiAsyncRpcCallWrapper_GetProps@NspiServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x0400051A RID: 1306 RVA: 0x00152CA8 File Offset: 0x00151EA8
	internal static $_s__RTTIBaseClassArray$_extraBytes_32 ??_R2NspiAsyncRpcCallWrapper_GetPropList@NspiServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x0400051B RID: 1307 RVA: 0x00152C18 File Offset: 0x00151E18
	internal static $_s__RTTIBaseClassArray$_extraBytes_32 ??_R2NspiAsyncRpcCallWrapper_DNToEph@NspiServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x0400051C RID: 1308 RVA: 0x00152B88 File Offset: 0x00151D88
	internal static $_s__RTTIBaseClassArray$_extraBytes_32 ??_R2NspiAsyncRpcCallWrapper_ResortRestriction@NspiServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x0400051D RID: 1309 RVA: 0x00152AF8 File Offset: 0x00151CF8
	internal static $_s__RTTIBaseClassArray$_extraBytes_32 ??_R2NspiAsyncRpcCallWrapper_GetMatches@NspiServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x0400051E RID: 1310 RVA: 0x00152A68 File Offset: 0x00151C68
	internal static $_s__RTTIBaseClassArray$_extraBytes_32 ??_R2NspiAsyncRpcCallWrapper_SeekEntries@NspiServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x0400051F RID: 1311 RVA: 0x001529D8 File Offset: 0x00151BD8
	internal static $_s__RTTIBaseClassArray$_extraBytes_32 ??_R2NspiAsyncRpcCallWrapper_QueryRows@NspiServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x04000520 RID: 1312 RVA: 0x00152948 File Offset: 0x00151B48
	internal static $_s__RTTIBaseClassArray$_extraBytes_32 ??_R2NspiAsyncRpcCallWrapper_UpdateStat@NspiServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x04000521 RID: 1313 RVA: 0x001528B8 File Offset: 0x00151AB8
	internal static $_s__RTTIBaseClassArray$_extraBytes_32 ??_R2NspiAsyncRpcCallWrapper_Unbind@NspiServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x04000522 RID: 1314 RVA: 0x00152828 File Offset: 0x00151A28
	internal static $_s__RTTIBaseClassArray$_extraBytes_32 ??_R2NspiAsyncRpcCallWrapper_Bind@NspiServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x04000523 RID: 1315 RVA: 0x00152778 File Offset: 0x00151978
	internal static $_s__RTTIBaseClassArray$_extraBytes_24 ??_R2NspiAsyncRpcCallWrapper@NspiServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x04000524 RID: 1316 RVA: 0x00152720 File Offset: 0x00151920
	internal static $_s__RTTIBaseClassArray$_extraBytes_16 ??_R2?$BaseAsyncRpcCallWrapper@VNspiAsyncRpcServer@NspiServer@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@8;

	// Token: 0x04000525 RID: 1317 RVA: 0x001525A8 File Offset: 0x001517A8
	internal static $_s__RTTIBaseClassArray$_extraBytes_16 ??_R2NSPI_HANDLE_Rundown_Wrapper@NspiServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x04000526 RID: 1318 RVA: 0x00152430 File Offset: 0x00151630
	internal static $_s__RTTIBaseClassArray$_extraBytes_16 ??_R2RundownQueue_NSPI_HANDLE@@8;

	// Token: 0x04000527 RID: 1319 RVA: 0x00152500 File Offset: 0x00151700
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@CNSPILazyInitRequestQueue@@8;

	// Token: 0x04000528 RID: 1320 RVA: 0x00152488 File Offset: 0x00151688
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@?$CLazyInitRequestQueue@VCNSPIRequestQueue@@UNSPI_REQUEST@@$0CHBA@$00@@8;

	// Token: 0x04000529 RID: 1321 RVA: 0x00152600 File Offset: 0x00151800
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@CNSPIRequestQueue@@8;

	// Token: 0x0400052A RID: 1322 RVA: 0x00152650 File Offset: 0x00151850
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@?$CRequestQueue@UNSPI_REQUEST@@@@8;

	// Token: 0x0400052B RID: 1323 RVA: 0x00153340 File Offset: 0x00152540
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@NspiAsyncRpcCallWrapper_ResolveNamesW@NspiServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x0400052C RID: 1324 RVA: 0x001532B0 File Offset: 0x001524B0
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@NspiAsyncRpcCallWrapper_ResolveNames@NspiServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x0400052D RID: 1325 RVA: 0x00153220 File Offset: 0x00152420
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@NspiAsyncRpcCallWrapper_GetIDsFromNames@NspiServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x0400052E RID: 1326 RVA: 0x00153190 File Offset: 0x00152390
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@NspiAsyncRpcCallWrapper_GetNamesFromIDs@NspiServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x0400052F RID: 1327 RVA: 0x00153100 File Offset: 0x00152300
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@NspiAsyncRpcCallWrapper_QueryColumns@NspiServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x04000530 RID: 1328 RVA: 0x00153070 File Offset: 0x00152270
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@NspiAsyncRpcCallWrapper_DeleteEntries@NspiServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x04000531 RID: 1329 RVA: 0x00152FE0 File Offset: 0x001521E0
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@NspiAsyncRpcCallWrapper_ModLinkAtt@NspiServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x04000532 RID: 1330 RVA: 0x00152F50 File Offset: 0x00152150
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@NspiAsyncRpcCallWrapper_GetTemplateInfo@NspiServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x04000533 RID: 1331 RVA: 0x00152EC0 File Offset: 0x001520C0
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@NspiAsyncRpcCallWrapper_GetHierarchyInfo@NspiServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x04000534 RID: 1332 RVA: 0x00152E30 File Offset: 0x00152030
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@NspiAsyncRpcCallWrapper_ModProps@NspiServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x04000535 RID: 1333 RVA: 0x00152DA0 File Offset: 0x00151FA0
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@NspiAsyncRpcCallWrapper_CompareDNTs@NspiServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x04000536 RID: 1334 RVA: 0x00152D10 File Offset: 0x00151F10
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@NspiAsyncRpcCallWrapper_GetProps@NspiServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x04000537 RID: 1335 RVA: 0x00152C80 File Offset: 0x00151E80
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@NspiAsyncRpcCallWrapper_GetPropList@NspiServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x04000538 RID: 1336 RVA: 0x00152BF0 File Offset: 0x00151DF0
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@NspiAsyncRpcCallWrapper_DNToEph@NspiServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x04000539 RID: 1337 RVA: 0x00152B60 File Offset: 0x00151D60
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@NspiAsyncRpcCallWrapper_ResortRestriction@NspiServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x0400053A RID: 1338 RVA: 0x00152AD0 File Offset: 0x00151CD0
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@NspiAsyncRpcCallWrapper_GetMatches@NspiServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x0400053B RID: 1339 RVA: 0x00152A40 File Offset: 0x00151C40
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@NspiAsyncRpcCallWrapper_SeekEntries@NspiServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x0400053C RID: 1340 RVA: 0x001529B0 File Offset: 0x00151BB0
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@NspiAsyncRpcCallWrapper_QueryRows@NspiServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x0400053D RID: 1341 RVA: 0x00152920 File Offset: 0x00151B20
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@NspiAsyncRpcCallWrapper_UpdateStat@NspiServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x0400053E RID: 1342 RVA: 0x00152890 File Offset: 0x00151A90
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@NspiAsyncRpcCallWrapper_Unbind@NspiServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x0400053F RID: 1343 RVA: 0x00152800 File Offset: 0x00151A00
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@NspiAsyncRpcCallWrapper_Bind@NspiServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x04000540 RID: 1344 RVA: 0x001526F8 File Offset: 0x001518F8
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@NspiAsyncRpcCallWrapper@NspiServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x04000541 RID: 1345 RVA: 0x00152750 File Offset: 0x00151950
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@?$BaseAsyncRpcCallWrapper@VNspiAsyncRpcServer@NspiServer@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@8;

	// Token: 0x04000542 RID: 1346 RVA: 0x00152580 File Offset: 0x00151780
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@NSPI_HANDLE_Rundown_Wrapper@NspiServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x04000543 RID: 1347 RVA: 0x00152408 File Offset: 0x00151608
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@RundownQueue_NSPI_HANDLE@@8;

	// Token: 0x04000544 RID: 1348 RVA: 0x001524C0 File Offset: 0x001516C0
	internal static _s__RTTIClassHierarchyDescriptor ??_R3?$CLazyInitRequestQueue@VCNSPIRequestQueue@@UNSPI_REQUEST@@$0CHBA@$00@@8;

	// Token: 0x04000545 RID: 1349 RVA: 0x0015D1A0 File Offset: 0x0015BBA0
	internal static $_TypeDescriptor$_extraBytes_76 ??_R0?AV?$CLazyInitRequestQueue@VCNSPIRequestQueue@@UNSPI_REQUEST@@$0CHBA@$00@@@8;

	// Token: 0x04000546 RID: 1350 RVA: 0x00152540 File Offset: 0x00151740
	internal static _s__RTTIClassHierarchyDescriptor ??_R3CNSPILazyInitRequestQueue@@8;

	// Token: 0x04000547 RID: 1351 RVA: 0x0015D240 File Offset: 0x0015BC40
	internal static $_TypeDescriptor$_extraBytes_32 ??_R0?AVCNSPILazyInitRequestQueue@@@8;

	// Token: 0x04000548 RID: 1352 RVA: 0x00152638 File Offset: 0x00151838
	internal static _s__RTTIClassHierarchyDescriptor ??_R3?$CRequestQueue@UNSPI_REQUEST@@@@8;

	// Token: 0x04000549 RID: 1353 RVA: 0x0015D360 File Offset: 0x0015BD60
	internal static $_TypeDescriptor$_extraBytes_38 ??_R0?AV?$CRequestQueue@UNSPI_REQUEST@@@@@8;

	// Token: 0x0400054A RID: 1354 RVA: 0x00152690 File Offset: 0x00151890
	internal static _s__RTTIClassHierarchyDescriptor ??_R3CNSPIRequestQueue@@8;

	// Token: 0x0400054B RID: 1355 RVA: 0x0015D338 File Offset: 0x0015BD38
	internal static $_TypeDescriptor$_extraBytes_24 ??_R0?AVCNSPIRequestQueue@@@8;

	// Token: 0x0400054C RID: 1356 RVA: 0x00153390 File Offset: 0x00152590
	internal static _s__RTTIClassHierarchyDescriptor ??_R3NspiAsyncRpcCallWrapper_ResolveNamesW@NspiServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x0400054D RID: 1357 RVA: 0x0015E120 File Offset: 0x0015CB20
	internal static $_TypeDescriptor$_extraBytes_78 ??_R0?AVNspiAsyncRpcCallWrapper_ResolveNamesW@NspiServer@Rpc@Exchange@Microsoft@@@8;

	// Token: 0x0400054E RID: 1358 RVA: 0x00153300 File Offset: 0x00152500
	internal static _s__RTTIClassHierarchyDescriptor ??_R3NspiAsyncRpcCallWrapper_ResolveNames@NspiServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x0400054F RID: 1359 RVA: 0x0015E0C0 File Offset: 0x0015CAC0
	internal static $_TypeDescriptor$_extraBytes_77 ??_R0?AVNspiAsyncRpcCallWrapper_ResolveNames@NspiServer@Rpc@Exchange@Microsoft@@@8;

	// Token: 0x04000550 RID: 1360 RVA: 0x00153270 File Offset: 0x00152470
	internal static _s__RTTIClassHierarchyDescriptor ??_R3NspiAsyncRpcCallWrapper_GetIDsFromNames@NspiServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x04000551 RID: 1361 RVA: 0x0015E060 File Offset: 0x0015CA60
	internal static $_TypeDescriptor$_extraBytes_80 ??_R0?AVNspiAsyncRpcCallWrapper_GetIDsFromNames@NspiServer@Rpc@Exchange@Microsoft@@@8;

	// Token: 0x04000552 RID: 1362 RVA: 0x001531E0 File Offset: 0x001523E0
	internal static _s__RTTIClassHierarchyDescriptor ??_R3NspiAsyncRpcCallWrapper_GetNamesFromIDs@NspiServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x04000553 RID: 1363 RVA: 0x0015E000 File Offset: 0x0015CA00
	internal static $_TypeDescriptor$_extraBytes_80 ??_R0?AVNspiAsyncRpcCallWrapper_GetNamesFromIDs@NspiServer@Rpc@Exchange@Microsoft@@@8;

	// Token: 0x04000554 RID: 1364 RVA: 0x00153150 File Offset: 0x00152350
	internal static _s__RTTIClassHierarchyDescriptor ??_R3NspiAsyncRpcCallWrapper_QueryColumns@NspiServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x04000555 RID: 1365 RVA: 0x0015DFA0 File Offset: 0x0015C9A0
	internal static $_TypeDescriptor$_extraBytes_77 ??_R0?AVNspiAsyncRpcCallWrapper_QueryColumns@NspiServer@Rpc@Exchange@Microsoft@@@8;

	// Token: 0x04000556 RID: 1366 RVA: 0x001530C0 File Offset: 0x001522C0
	internal static _s__RTTIClassHierarchyDescriptor ??_R3NspiAsyncRpcCallWrapper_DeleteEntries@NspiServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x04000557 RID: 1367 RVA: 0x0015DF40 File Offset: 0x0015C940
	internal static $_TypeDescriptor$_extraBytes_78 ??_R0?AVNspiAsyncRpcCallWrapper_DeleteEntries@NspiServer@Rpc@Exchange@Microsoft@@@8;

	// Token: 0x04000558 RID: 1368 RVA: 0x00153030 File Offset: 0x00152230
	internal static _s__RTTIClassHierarchyDescriptor ??_R3NspiAsyncRpcCallWrapper_ModLinkAtt@NspiServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x04000559 RID: 1369 RVA: 0x0015DEE0 File Offset: 0x0015C8E0
	internal static $_TypeDescriptor$_extraBytes_75 ??_R0?AVNspiAsyncRpcCallWrapper_ModLinkAtt@NspiServer@Rpc@Exchange@Microsoft@@@8;

	// Token: 0x0400055A RID: 1370 RVA: 0x00152FA0 File Offset: 0x001521A0
	internal static _s__RTTIClassHierarchyDescriptor ??_R3NspiAsyncRpcCallWrapper_GetTemplateInfo@NspiServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x0400055B RID: 1371 RVA: 0x0015DE80 File Offset: 0x0015C880
	internal static $_TypeDescriptor$_extraBytes_80 ??_R0?AVNspiAsyncRpcCallWrapper_GetTemplateInfo@NspiServer@Rpc@Exchange@Microsoft@@@8;

	// Token: 0x0400055C RID: 1372 RVA: 0x00152F10 File Offset: 0x00152110
	internal static _s__RTTIClassHierarchyDescriptor ??_R3NspiAsyncRpcCallWrapper_GetHierarchyInfo@NspiServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x0400055D RID: 1373 RVA: 0x0015DE10 File Offset: 0x0015C810
	internal static $_TypeDescriptor$_extraBytes_81 ??_R0?AVNspiAsyncRpcCallWrapper_GetHierarchyInfo@NspiServer@Rpc@Exchange@Microsoft@@@8;

	// Token: 0x0400055E RID: 1374 RVA: 0x00152E80 File Offset: 0x00152080
	internal static _s__RTTIClassHierarchyDescriptor ??_R3NspiAsyncRpcCallWrapper_ModProps@NspiServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x0400055F RID: 1375 RVA: 0x0015DDB0 File Offset: 0x0015C7B0
	internal static $_TypeDescriptor$_extraBytes_73 ??_R0?AVNspiAsyncRpcCallWrapper_ModProps@NspiServer@Rpc@Exchange@Microsoft@@@8;

	// Token: 0x04000560 RID: 1376 RVA: 0x00152DF0 File Offset: 0x00151FF0
	internal static _s__RTTIClassHierarchyDescriptor ??_R3NspiAsyncRpcCallWrapper_CompareDNTs@NspiServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x04000561 RID: 1377 RVA: 0x0015DD50 File Offset: 0x0015C750
	internal static $_TypeDescriptor$_extraBytes_76 ??_R0?AVNspiAsyncRpcCallWrapper_CompareDNTs@NspiServer@Rpc@Exchange@Microsoft@@@8;

	// Token: 0x04000562 RID: 1378 RVA: 0x00152D60 File Offset: 0x00151F60
	internal static _s__RTTIClassHierarchyDescriptor ??_R3NspiAsyncRpcCallWrapper_GetProps@NspiServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x04000563 RID: 1379 RVA: 0x0015DCF0 File Offset: 0x0015C6F0
	internal static $_TypeDescriptor$_extraBytes_73 ??_R0?AVNspiAsyncRpcCallWrapper_GetProps@NspiServer@Rpc@Exchange@Microsoft@@@8;

	// Token: 0x04000564 RID: 1380 RVA: 0x00152CD0 File Offset: 0x00151ED0
	internal static _s__RTTIClassHierarchyDescriptor ??_R3NspiAsyncRpcCallWrapper_GetPropList@NspiServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x04000565 RID: 1381 RVA: 0x0015DC90 File Offset: 0x0015C690
	internal static $_TypeDescriptor$_extraBytes_76 ??_R0?AVNspiAsyncRpcCallWrapper_GetPropList@NspiServer@Rpc@Exchange@Microsoft@@@8;

	// Token: 0x04000566 RID: 1382 RVA: 0x00152C40 File Offset: 0x00151E40
	internal static _s__RTTIClassHierarchyDescriptor ??_R3NspiAsyncRpcCallWrapper_DNToEph@NspiServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x04000567 RID: 1383 RVA: 0x0015DC30 File Offset: 0x0015C630
	internal static $_TypeDescriptor$_extraBytes_72 ??_R0?AVNspiAsyncRpcCallWrapper_DNToEph@NspiServer@Rpc@Exchange@Microsoft@@@8;

	// Token: 0x04000568 RID: 1384 RVA: 0x00152BB0 File Offset: 0x00151DB0
	internal static _s__RTTIClassHierarchyDescriptor ??_R3NspiAsyncRpcCallWrapper_ResortRestriction@NspiServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x04000569 RID: 1385 RVA: 0x0015DBC0 File Offset: 0x0015C5C0
	internal static $_TypeDescriptor$_extraBytes_82 ??_R0?AVNspiAsyncRpcCallWrapper_ResortRestriction@NspiServer@Rpc@Exchange@Microsoft@@@8;

	// Token: 0x0400056A RID: 1386 RVA: 0x00152B20 File Offset: 0x00151D20
	internal static _s__RTTIClassHierarchyDescriptor ??_R3NspiAsyncRpcCallWrapper_GetMatches@NspiServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x0400056B RID: 1387 RVA: 0x0015DB60 File Offset: 0x0015C560
	internal static $_TypeDescriptor$_extraBytes_75 ??_R0?AVNspiAsyncRpcCallWrapper_GetMatches@NspiServer@Rpc@Exchange@Microsoft@@@8;

	// Token: 0x0400056C RID: 1388 RVA: 0x00152A90 File Offset: 0x00151C90
	internal static _s__RTTIClassHierarchyDescriptor ??_R3NspiAsyncRpcCallWrapper_SeekEntries@NspiServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x0400056D RID: 1389 RVA: 0x0015DB00 File Offset: 0x0015C500
	internal static $_TypeDescriptor$_extraBytes_76 ??_R0?AVNspiAsyncRpcCallWrapper_SeekEntries@NspiServer@Rpc@Exchange@Microsoft@@@8;

	// Token: 0x0400056E RID: 1390 RVA: 0x00152A00 File Offset: 0x00151C00
	internal static _s__RTTIClassHierarchyDescriptor ??_R3NspiAsyncRpcCallWrapper_QueryRows@NspiServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x0400056F RID: 1391 RVA: 0x0015DAA0 File Offset: 0x0015C4A0
	internal static $_TypeDescriptor$_extraBytes_74 ??_R0?AVNspiAsyncRpcCallWrapper_QueryRows@NspiServer@Rpc@Exchange@Microsoft@@@8;

	// Token: 0x04000570 RID: 1392 RVA: 0x00152970 File Offset: 0x00151B70
	internal static _s__RTTIClassHierarchyDescriptor ??_R3NspiAsyncRpcCallWrapper_UpdateStat@NspiServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x04000571 RID: 1393 RVA: 0x0015DA40 File Offset: 0x0015C440
	internal static $_TypeDescriptor$_extraBytes_75 ??_R0?AVNspiAsyncRpcCallWrapper_UpdateStat@NspiServer@Rpc@Exchange@Microsoft@@@8;

	// Token: 0x04000572 RID: 1394 RVA: 0x001528E0 File Offset: 0x00151AE0
	internal static _s__RTTIClassHierarchyDescriptor ??_R3NspiAsyncRpcCallWrapper_Unbind@NspiServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x04000573 RID: 1395 RVA: 0x0015D9E0 File Offset: 0x0015C3E0
	internal static $_TypeDescriptor$_extraBytes_71 ??_R0?AVNspiAsyncRpcCallWrapper_Unbind@NspiServer@Rpc@Exchange@Microsoft@@@8;

	// Token: 0x04000574 RID: 1396 RVA: 0x00152850 File Offset: 0x00151A50
	internal static _s__RTTIClassHierarchyDescriptor ??_R3NspiAsyncRpcCallWrapper_Bind@NspiServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x04000575 RID: 1397 RVA: 0x0015D980 File Offset: 0x0015C380
	internal static $_TypeDescriptor$_extraBytes_69 ??_R0?AVNspiAsyncRpcCallWrapper_Bind@NspiServer@Rpc@Exchange@Microsoft@@@8;

	// Token: 0x04000576 RID: 1398 RVA: 0x00152738 File Offset: 0x00151938
	internal static _s__RTTIClassHierarchyDescriptor ??_R3?$BaseAsyncRpcCallWrapper@VNspiAsyncRpcServer@NspiServer@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@8;

	// Token: 0x04000577 RID: 1399 RVA: 0x0015D900 File Offset: 0x0015C300
	internal static $_TypeDescriptor$_extraBytes_111 ??_R0?AV?$BaseAsyncRpcCallWrapper@VNspiAsyncRpcServer@NspiServer@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@@8;

	// Token: 0x04000578 RID: 1400 RVA: 0x00152798 File Offset: 0x00151998
	internal static _s__RTTIClassHierarchyDescriptor ??_R3NspiAsyncRpcCallWrapper@NspiServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x04000579 RID: 1401 RVA: 0x0015D8B0 File Offset: 0x0015C2B0
	internal static $_TypeDescriptor$_extraBytes_64 ??_R0?AVNspiAsyncRpcCallWrapper@NspiServer@Rpc@Exchange@Microsoft@@@8;

	// Token: 0x0400057A RID: 1402 RVA: 0x001525C0 File Offset: 0x001517C0
	internal static _s__RTTIClassHierarchyDescriptor ??_R3NSPI_HANDLE_Rundown_Wrapper@NspiServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x0400057B RID: 1403 RVA: 0x0015D2B0 File Offset: 0x0015BCB0
	internal static $_TypeDescriptor$_extraBytes_68 ??_R0?AVNSPI_HANDLE_Rundown_Wrapper@NspiServer@Rpc@Exchange@Microsoft@@@8;

	// Token: 0x0400057C RID: 1404 RVA: 0x00152448 File Offset: 0x00151648
	internal static _s__RTTIClassHierarchyDescriptor ??_R3RundownQueue_NSPI_HANDLE@@8;

	// Token: 0x0400057D RID: 1405 RVA: 0x0015D140 File Offset: 0x0015BB40
	internal static $_TypeDescriptor$_extraBytes_31 ??_R0?AVRundownQueue_NSPI_HANDLE@@@8;

	// Token: 0x0400057E RID: 1406 RVA: 0x001524D8 File Offset: 0x001516D8
	internal static _s__RTTICompleteObjectLocator2 ??_R4?$CLazyInitRequestQueue@VCNSPIRequestQueue@@UNSPI_REQUEST@@$0CHBA@$00@@6B@;

	// Token: 0x0400057F RID: 1407 RVA: 0x00152558 File Offset: 0x00151758
	internal static _s__RTTICompleteObjectLocator2 ??_R4CNSPILazyInitRequestQueue@@6B@;

	// Token: 0x04000580 RID: 1408 RVA: 0x001526D0 File Offset: 0x001518D0
	internal static _s__RTTICompleteObjectLocator2 ??_R4?$CRequestQueue@UNSPI_REQUEST@@@@6B@;

	// Token: 0x04000581 RID: 1409 RVA: 0x001526A8 File Offset: 0x001518A8
	internal static _s__RTTICompleteObjectLocator2 ??_R4CNSPIRequestQueue@@6B@;

	// Token: 0x04000582 RID: 1410
	[FixedAddressValueType]
	internal static $ArrayType$$$BY02Q6AXXZ ??_7NspiAsyncRpcCallWrapper_ResolveNamesW@NspiServer@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x04000583 RID: 1411 RVA: 0x0006E8A0 File Offset: 0x0006DAA0
	internal static method ??_7NspiAsyncRpcCallWrapper_ResolveNamesW@NspiServer@Rpc@Exchange@Microsoft@@6B@$initializer$;

	// Token: 0x04000584 RID: 1412 RVA: 0x001533A8 File Offset: 0x001525A8
	internal static _s__RTTICompleteObjectLocator2 ??_R4NspiAsyncRpcCallWrapper_ResolveNamesW@NspiServer@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x04000585 RID: 1413
	[FixedAddressValueType]
	internal static $ArrayType$$$BY02Q6AXXZ ??_7NspiAsyncRpcCallWrapper_ResolveNames@NspiServer@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x04000586 RID: 1414 RVA: 0x0006E898 File Offset: 0x0006DA98
	internal static method ??_7NspiAsyncRpcCallWrapper_ResolveNames@NspiServer@Rpc@Exchange@Microsoft@@6B@$initializer$;

	// Token: 0x04000587 RID: 1415 RVA: 0x00153318 File Offset: 0x00152518
	internal static _s__RTTICompleteObjectLocator2 ??_R4NspiAsyncRpcCallWrapper_ResolveNames@NspiServer@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x04000588 RID: 1416
	[FixedAddressValueType]
	internal static $ArrayType$$$BY02Q6AXXZ ??_7NspiAsyncRpcCallWrapper_GetIDsFromNames@NspiServer@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x04000589 RID: 1417 RVA: 0x0006E890 File Offset: 0x0006DA90
	internal static method ??_7NspiAsyncRpcCallWrapper_GetIDsFromNames@NspiServer@Rpc@Exchange@Microsoft@@6B@$initializer$;

	// Token: 0x0400058A RID: 1418 RVA: 0x00153288 File Offset: 0x00152488
	internal static _s__RTTICompleteObjectLocator2 ??_R4NspiAsyncRpcCallWrapper_GetIDsFromNames@NspiServer@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x0400058B RID: 1419
	[FixedAddressValueType]
	internal static $ArrayType$$$BY02Q6AXXZ ??_7NspiAsyncRpcCallWrapper_GetNamesFromIDs@NspiServer@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x0400058C RID: 1420 RVA: 0x0006E888 File Offset: 0x0006DA88
	internal static method ??_7NspiAsyncRpcCallWrapper_GetNamesFromIDs@NspiServer@Rpc@Exchange@Microsoft@@6B@$initializer$;

	// Token: 0x0400058D RID: 1421 RVA: 0x001531F8 File Offset: 0x001523F8
	internal static _s__RTTICompleteObjectLocator2 ??_R4NspiAsyncRpcCallWrapper_GetNamesFromIDs@NspiServer@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x0400058E RID: 1422
	[FixedAddressValueType]
	internal static $ArrayType$$$BY02Q6AXXZ ??_7NspiAsyncRpcCallWrapper_QueryColumns@NspiServer@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x0400058F RID: 1423 RVA: 0x0006E880 File Offset: 0x0006DA80
	internal static method ??_7NspiAsyncRpcCallWrapper_QueryColumns@NspiServer@Rpc@Exchange@Microsoft@@6B@$initializer$;

	// Token: 0x04000590 RID: 1424 RVA: 0x00153168 File Offset: 0x00152368
	internal static _s__RTTICompleteObjectLocator2 ??_R4NspiAsyncRpcCallWrapper_QueryColumns@NspiServer@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x04000591 RID: 1425
	[FixedAddressValueType]
	internal static $ArrayType$$$BY02Q6AXXZ ??_7NspiAsyncRpcCallWrapper_DeleteEntries@NspiServer@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x04000592 RID: 1426 RVA: 0x0006E878 File Offset: 0x0006DA78
	internal static method ??_7NspiAsyncRpcCallWrapper_DeleteEntries@NspiServer@Rpc@Exchange@Microsoft@@6B@$initializer$;

	// Token: 0x04000593 RID: 1427 RVA: 0x001530D8 File Offset: 0x001522D8
	internal static _s__RTTICompleteObjectLocator2 ??_R4NspiAsyncRpcCallWrapper_DeleteEntries@NspiServer@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x04000594 RID: 1428
	[FixedAddressValueType]
	internal static $ArrayType$$$BY02Q6AXXZ ??_7NspiAsyncRpcCallWrapper_ModLinkAtt@NspiServer@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x04000595 RID: 1429 RVA: 0x0006E870 File Offset: 0x0006DA70
	internal static method ??_7NspiAsyncRpcCallWrapper_ModLinkAtt@NspiServer@Rpc@Exchange@Microsoft@@6B@$initializer$;

	// Token: 0x04000596 RID: 1430 RVA: 0x00153048 File Offset: 0x00152248
	internal static _s__RTTICompleteObjectLocator2 ??_R4NspiAsyncRpcCallWrapper_ModLinkAtt@NspiServer@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x04000597 RID: 1431
	[FixedAddressValueType]
	internal static $ArrayType$$$BY02Q6AXXZ ??_7NspiAsyncRpcCallWrapper_GetTemplateInfo@NspiServer@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x04000598 RID: 1432 RVA: 0x0006E868 File Offset: 0x0006DA68
	internal static method ??_7NspiAsyncRpcCallWrapper_GetTemplateInfo@NspiServer@Rpc@Exchange@Microsoft@@6B@$initializer$;

	// Token: 0x04000599 RID: 1433 RVA: 0x00152FB8 File Offset: 0x001521B8
	internal static _s__RTTICompleteObjectLocator2 ??_R4NspiAsyncRpcCallWrapper_GetTemplateInfo@NspiServer@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x0400059A RID: 1434
	[FixedAddressValueType]
	internal static $ArrayType$$$BY02Q6AXXZ ??_7NspiAsyncRpcCallWrapper_GetHierarchyInfo@NspiServer@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x0400059B RID: 1435 RVA: 0x0006E860 File Offset: 0x0006DA60
	internal static method ??_7NspiAsyncRpcCallWrapper_GetHierarchyInfo@NspiServer@Rpc@Exchange@Microsoft@@6B@$initializer$;

	// Token: 0x0400059C RID: 1436 RVA: 0x00152F28 File Offset: 0x00152128
	internal static _s__RTTICompleteObjectLocator2 ??_R4NspiAsyncRpcCallWrapper_GetHierarchyInfo@NspiServer@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x0400059D RID: 1437
	[FixedAddressValueType]
	internal static $ArrayType$$$BY02Q6AXXZ ??_7NspiAsyncRpcCallWrapper_ModProps@NspiServer@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x0400059E RID: 1438 RVA: 0x0006E858 File Offset: 0x0006DA58
	internal static method ??_7NspiAsyncRpcCallWrapper_ModProps@NspiServer@Rpc@Exchange@Microsoft@@6B@$initializer$;

	// Token: 0x0400059F RID: 1439 RVA: 0x00152E98 File Offset: 0x00152098
	internal static _s__RTTICompleteObjectLocator2 ??_R4NspiAsyncRpcCallWrapper_ModProps@NspiServer@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x040005A0 RID: 1440
	[FixedAddressValueType]
	internal static $ArrayType$$$BY02Q6AXXZ ??_7NspiAsyncRpcCallWrapper_CompareDNTs@NspiServer@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x040005A1 RID: 1441 RVA: 0x0006E850 File Offset: 0x0006DA50
	internal static method ??_7NspiAsyncRpcCallWrapper_CompareDNTs@NspiServer@Rpc@Exchange@Microsoft@@6B@$initializer$;

	// Token: 0x040005A2 RID: 1442 RVA: 0x00152E08 File Offset: 0x00152008
	internal static _s__RTTICompleteObjectLocator2 ??_R4NspiAsyncRpcCallWrapper_CompareDNTs@NspiServer@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x040005A3 RID: 1443
	[FixedAddressValueType]
	internal static $ArrayType$$$BY02Q6AXXZ ??_7NspiAsyncRpcCallWrapper_GetProps@NspiServer@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x040005A4 RID: 1444 RVA: 0x0006E848 File Offset: 0x0006DA48
	internal static method ??_7NspiAsyncRpcCallWrapper_GetProps@NspiServer@Rpc@Exchange@Microsoft@@6B@$initializer$;

	// Token: 0x040005A5 RID: 1445 RVA: 0x00152D78 File Offset: 0x00151F78
	internal static _s__RTTICompleteObjectLocator2 ??_R4NspiAsyncRpcCallWrapper_GetProps@NspiServer@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x040005A6 RID: 1446
	[FixedAddressValueType]
	internal static $ArrayType$$$BY02Q6AXXZ ??_7NspiAsyncRpcCallWrapper_GetPropList@NspiServer@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x040005A7 RID: 1447 RVA: 0x0006E840 File Offset: 0x0006DA40
	internal static method ??_7NspiAsyncRpcCallWrapper_GetPropList@NspiServer@Rpc@Exchange@Microsoft@@6B@$initializer$;

	// Token: 0x040005A8 RID: 1448 RVA: 0x00152CE8 File Offset: 0x00151EE8
	internal static _s__RTTICompleteObjectLocator2 ??_R4NspiAsyncRpcCallWrapper_GetPropList@NspiServer@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x040005A9 RID: 1449
	[FixedAddressValueType]
	internal static $ArrayType$$$BY02Q6AXXZ ??_7NspiAsyncRpcCallWrapper_DNToEph@NspiServer@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x040005AA RID: 1450 RVA: 0x0006E838 File Offset: 0x0006DA38
	internal static method ??_7NspiAsyncRpcCallWrapper_DNToEph@NspiServer@Rpc@Exchange@Microsoft@@6B@$initializer$;

	// Token: 0x040005AB RID: 1451 RVA: 0x00152C58 File Offset: 0x00151E58
	internal static _s__RTTICompleteObjectLocator2 ??_R4NspiAsyncRpcCallWrapper_DNToEph@NspiServer@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x040005AC RID: 1452
	[FixedAddressValueType]
	internal static $ArrayType$$$BY02Q6AXXZ ??_7NspiAsyncRpcCallWrapper_ResortRestriction@NspiServer@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x040005AD RID: 1453 RVA: 0x0006E830 File Offset: 0x0006DA30
	internal static method ??_7NspiAsyncRpcCallWrapper_ResortRestriction@NspiServer@Rpc@Exchange@Microsoft@@6B@$initializer$;

	// Token: 0x040005AE RID: 1454 RVA: 0x00152BC8 File Offset: 0x00151DC8
	internal static _s__RTTICompleteObjectLocator2 ??_R4NspiAsyncRpcCallWrapper_ResortRestriction@NspiServer@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x040005AF RID: 1455
	[FixedAddressValueType]
	internal static $ArrayType$$$BY02Q6AXXZ ??_7NspiAsyncRpcCallWrapper_GetMatches@NspiServer@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x040005B0 RID: 1456 RVA: 0x0006E828 File Offset: 0x0006DA28
	internal static method ??_7NspiAsyncRpcCallWrapper_GetMatches@NspiServer@Rpc@Exchange@Microsoft@@6B@$initializer$;

	// Token: 0x040005B1 RID: 1457 RVA: 0x00152B38 File Offset: 0x00151D38
	internal static _s__RTTICompleteObjectLocator2 ??_R4NspiAsyncRpcCallWrapper_GetMatches@NspiServer@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x040005B2 RID: 1458
	[FixedAddressValueType]
	internal static $ArrayType$$$BY02Q6AXXZ ??_7NspiAsyncRpcCallWrapper_SeekEntries@NspiServer@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x040005B3 RID: 1459 RVA: 0x0006E820 File Offset: 0x0006DA20
	internal static method ??_7NspiAsyncRpcCallWrapper_SeekEntries@NspiServer@Rpc@Exchange@Microsoft@@6B@$initializer$;

	// Token: 0x040005B4 RID: 1460 RVA: 0x00152AA8 File Offset: 0x00151CA8
	internal static _s__RTTICompleteObjectLocator2 ??_R4NspiAsyncRpcCallWrapper_SeekEntries@NspiServer@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x040005B5 RID: 1461
	[FixedAddressValueType]
	internal static $ArrayType$$$BY02Q6AXXZ ??_7NspiAsyncRpcCallWrapper_QueryRows@NspiServer@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x040005B6 RID: 1462 RVA: 0x0006E818 File Offset: 0x0006DA18
	internal static method ??_7NspiAsyncRpcCallWrapper_QueryRows@NspiServer@Rpc@Exchange@Microsoft@@6B@$initializer$;

	// Token: 0x040005B7 RID: 1463 RVA: 0x00152A18 File Offset: 0x00151C18
	internal static _s__RTTICompleteObjectLocator2 ??_R4NspiAsyncRpcCallWrapper_QueryRows@NspiServer@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x040005B8 RID: 1464
	[FixedAddressValueType]
	internal static $ArrayType$$$BY02Q6AXXZ ??_7NspiAsyncRpcCallWrapper_UpdateStat@NspiServer@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x040005B9 RID: 1465 RVA: 0x0006E810 File Offset: 0x0006DA10
	internal static method ??_7NspiAsyncRpcCallWrapper_UpdateStat@NspiServer@Rpc@Exchange@Microsoft@@6B@$initializer$;

	// Token: 0x040005BA RID: 1466 RVA: 0x00152988 File Offset: 0x00151B88
	internal static _s__RTTICompleteObjectLocator2 ??_R4NspiAsyncRpcCallWrapper_UpdateStat@NspiServer@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x040005BB RID: 1467
	[FixedAddressValueType]
	internal static $ArrayType$$$BY02Q6AXXZ ??_7NspiAsyncRpcCallWrapper_Unbind@NspiServer@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x040005BC RID: 1468 RVA: 0x0006E808 File Offset: 0x0006DA08
	internal static method ??_7NspiAsyncRpcCallWrapper_Unbind@NspiServer@Rpc@Exchange@Microsoft@@6B@$initializer$;

	// Token: 0x040005BD RID: 1469 RVA: 0x001528F8 File Offset: 0x00151AF8
	internal static _s__RTTICompleteObjectLocator2 ??_R4NspiAsyncRpcCallWrapper_Unbind@NspiServer@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x040005BE RID: 1470
	[FixedAddressValueType]
	internal static $ArrayType$$$BY02Q6AXXZ ??_7NspiAsyncRpcCallWrapper_Bind@NspiServer@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x040005BF RID: 1471 RVA: 0x0006E800 File Offset: 0x0006DA00
	internal static method ??_7NspiAsyncRpcCallWrapper_Bind@NspiServer@Rpc@Exchange@Microsoft@@6B@$initializer$;

	// Token: 0x040005C0 RID: 1472 RVA: 0x00152868 File Offset: 0x00151A68
	internal static _s__RTTICompleteObjectLocator2 ??_R4NspiAsyncRpcCallWrapper_Bind@NspiServer@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x040005C1 RID: 1473
	[FixedAddressValueType]
	internal static $ArrayType$$$BY02Q6AXXZ ??_7?$BaseAsyncRpcCallWrapper@VNspiAsyncRpcServer@NspiServer@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x040005C2 RID: 1474 RVA: 0x0006E7F8 File Offset: 0x0006D9F8
	internal static method ??_7?$BaseAsyncRpcCallWrapper@VNspiAsyncRpcServer@NspiServer@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@6B@$initializer$;

	// Token: 0x040005C3 RID: 1475 RVA: 0x001527D8 File Offset: 0x001519D8
	internal static _s__RTTICompleteObjectLocator2 ??_R4?$BaseAsyncRpcCallWrapper@VNspiAsyncRpcServer@NspiServer@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x040005C4 RID: 1476
	[FixedAddressValueType]
	internal static $ArrayType$$$BY02Q6AXXZ ??_7NspiAsyncRpcCallWrapper@NspiServer@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x040005C5 RID: 1477 RVA: 0x0006E7F0 File Offset: 0x0006D9F0
	internal static method ??_7NspiAsyncRpcCallWrapper@NspiServer@Rpc@Exchange@Microsoft@@6B@$initializer$;

	// Token: 0x040005C6 RID: 1478 RVA: 0x001527B0 File Offset: 0x001519B0
	internal static _s__RTTICompleteObjectLocator2 ??_R4NspiAsyncRpcCallWrapper@NspiServer@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x040005C7 RID: 1479 RVA: 0x001525D8 File Offset: 0x001517D8
	internal static _s__RTTICompleteObjectLocator2 ??_R4NSPI_HANDLE_Rundown_Wrapper@NspiServer@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x040005C8 RID: 1480 RVA: 0x00152460 File Offset: 0x00151660
	internal static _s__RTTICompleteObjectLocator2 ??_R4RundownQueue_NSPI_HANDLE@@6B@;

	// Token: 0x040005C9 RID: 1481 RVA: 0x0015D208 File Offset: 0x0015BC08
	internal static $ArrayType$$$BY07Q6AXXZ ??_7?$CLazyInitRequestQueue@VCNSPIRequestQueue@@UNSPI_REQUEST@@$0CHBA@$00@@6B@;

	// Token: 0x040005CA RID: 1482 RVA: 0x0015D588 File Offset: 0x0015BF88
	internal static $ArrayType$$$BY0L@Q6AXXZ ??_7?$CRequestQueue@UNSPI_REQUEST@@@@6B@;

	// Token: 0x040005CB RID: 1483 RVA: 0x0015D278 File Offset: 0x0015BC78
	internal static $ArrayType$$$BY07Q6AXXZ ??_7CNSPILazyInitRequestQueue@@6B@;

	// Token: 0x040005CC RID: 1484 RVA: 0x001611F8 File Offset: 0x0015FBF8
	internal unsafe static CNSPILazyInitRequestQueue* g_pNSPI_RequestQueue;

	// Token: 0x040005CD RID: 1485 RVA: 0x0015D3A8 File Offset: 0x0015BDA8
	internal static $ArrayType$$$BY0L@Q6AXXZ ??_7CNSPIRequestQueue@@6B@;

	// Token: 0x040005CE RID: 1486 RVA: 0x0015D310 File Offset: 0x0015BD10
	internal static $ArrayType$$$BY01Q6AXXZ ??_7NSPI_HANDLE_Rundown_Wrapper@NspiServer@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x040005CF RID: 1487 RVA: 0x00161200 File Offset: 0x0015FC00
	internal unsafe static RundownQueue_NSPI_HANDLE* g_pRundownQueue_NSPI_HANDLE;

	// Token: 0x040005D0 RID: 1488 RVA: 0x0015D178 File Offset: 0x0015BB78
	internal static $ArrayType$$$BY04Q6AXXZ ??_7RundownQueue_NSPI_HANDLE@@6B@;

	// Token: 0x040005D1 RID: 1489 RVA: 0x0015D318 File Offset: 0x0015BD18
	public static method __m2mep@??0RundownQueue_NSPI_HANDLE@@$$FQEAA@XZ;

	// Token: 0x040005D2 RID: 1490 RVA: 0x0015D3F8 File Offset: 0x0015BDF8
	public static method __m2mep@??0NSPI_HANDLE_Rundown_Wrapper@NspiServer@Rpc@Exchange@Microsoft@@$$FQEAA@PEAX@Z;

	// Token: 0x040005D3 RID: 1491 RVA: 0x0015D418 File Offset: 0x0015BE18
	public static method __m2mep@?InternalExecute@NSPI_HANDLE_Rundown_Wrapper@NspiServer@Rpc@Exchange@Microsoft@@$$FUEAAJXZ;

	// Token: 0x040005D4 RID: 1492 RVA: 0x0015D888 File Offset: 0x0015C288
	public static method __m2mep@??0NspiAsyncRpcCallWrapper@NspiServer@Rpc@Exchange@Microsoft@@$$FIEAM@VIntPtr@System@@@Z;

	// Token: 0x040005D5 RID: 1493 RVA: 0x0015D428 File Offset: 0x0015BE28
	public static method __m2mep@?DispatchCall@NspiAsyncRpcCallWrapper_Bind@NspiServer@Rpc@Exchange@Microsoft@@$$FMEAMXPE$AAVNspiAsyncRpcServer@2345@PE$AAVSafeRpcAsyncStateHandle@345@@Z;

	// Token: 0x040005D6 RID: 1494 RVA: 0x0015D5E8 File Offset: 0x0015BFE8
	public static method __m2mep@??0NspiAsyncRpcCallWrapper_Bind@NspiServer@Rpc@Exchange@Microsoft@@$$FQEAA@PEAXKPEAU__MIDL_nspi_0002@@PEAU__MIDL_nspi_0001@@PEAPEAX@Z;

	// Token: 0x040005D7 RID: 1495 RVA: 0x0015D438 File Offset: 0x0015BE38
	public static method __m2mep@?DispatchCall@NspiAsyncRpcCallWrapper_Unbind@NspiServer@Rpc@Exchange@Microsoft@@$$FMEAMXPE$AAVNspiAsyncRpcServer@2345@PE$AAVSafeRpcAsyncStateHandle@345@@Z;

	// Token: 0x040005D8 RID: 1496 RVA: 0x0015D608 File Offset: 0x0015C008
	public static method __m2mep@??0NspiAsyncRpcCallWrapper_Unbind@NspiServer@Rpc@Exchange@Microsoft@@$$FQEAA@PEAPEAXK@Z;

	// Token: 0x040005D9 RID: 1497 RVA: 0x0015D448 File Offset: 0x0015BE48
	public static method __m2mep@?DispatchCall@NspiAsyncRpcCallWrapper_UpdateStat@NspiServer@Rpc@Exchange@Microsoft@@$$FMEAMXPE$AAVNspiAsyncRpcServer@2345@PE$AAVSafeRpcAsyncStateHandle@345@@Z;

	// Token: 0x040005DA RID: 1498 RVA: 0x0015D628 File Offset: 0x0015C028
	public static method __m2mep@??0NspiAsyncRpcCallWrapper_UpdateStat@NspiServer@Rpc@Exchange@Microsoft@@$$FQEAA@PEAXKPEAU__MIDL_nspi_0002@@PEAJ@Z;

	// Token: 0x040005DB RID: 1499 RVA: 0x0015D458 File Offset: 0x0015BE58
	public static method __m2mep@?DispatchCall@NspiAsyncRpcCallWrapper_QueryRows@NspiServer@Rpc@Exchange@Microsoft@@$$FMEAMXPE$AAVNspiAsyncRpcServer@2345@PE$AAVSafeRpcAsyncStateHandle@345@@Z;

	// Token: 0x040005DC RID: 1500 RVA: 0x0015D648 File Offset: 0x0015C048
	public static method __m2mep@??0NspiAsyncRpcCallWrapper_QueryRows@NspiServer@Rpc@Exchange@Microsoft@@$$FQEAA@PEAXKPEAU__MIDL_nspi_0002@@KPEAKKPEAU_SPropTagArray_r@@PEAPEAU_SRowSet_r@@@Z;

	// Token: 0x040005DD RID: 1501 RVA: 0x0015D468 File Offset: 0x0015BE68
	public static method __m2mep@?DispatchCall@NspiAsyncRpcCallWrapper_SeekEntries@NspiServer@Rpc@Exchange@Microsoft@@$$FMEAMXPE$AAVNspiAsyncRpcServer@2345@PE$AAVSafeRpcAsyncStateHandle@345@@Z;

	// Token: 0x040005DE RID: 1502 RVA: 0x0015D668 File Offset: 0x0015C068
	public static method __m2mep@??0NspiAsyncRpcCallWrapper_SeekEntries@NspiServer@Rpc@Exchange@Microsoft@@$$FQEAA@PEAXKPEAU__MIDL_nspi_0002@@PEAU_SPropValue_r@@PEAU_SPropTagArray_r@@3PEAPEAU_SRowSet_r@@@Z;

	// Token: 0x040005DF RID: 1503 RVA: 0x0015D478 File Offset: 0x0015BE78
	public static method __m2mep@?DispatchCall@NspiAsyncRpcCallWrapper_GetMatches@NspiServer@Rpc@Exchange@Microsoft@@$$FMEAMXPE$AAVNspiAsyncRpcServer@2345@PE$AAVSafeRpcAsyncStateHandle@345@@Z;

	// Token: 0x040005E0 RID: 1504 RVA: 0x0015D688 File Offset: 0x0015C088
	public static method __m2mep@??0NspiAsyncRpcCallWrapper_GetMatches@NspiServer@Rpc@Exchange@Microsoft@@$$FQEAA@PEAXKPEAU__MIDL_nspi_0002@@PEAU_SPropTagArray_r@@KPEAU_SRestriction_r@@PEAU_MAPINAMEID_r@@KPEAPEAU6@2PEAPEAU_SRowSet_r@@@Z;

	// Token: 0x040005E1 RID: 1505 RVA: 0x0015D488 File Offset: 0x0015BE88
	public static method __m2mep@?DispatchCall@NspiAsyncRpcCallWrapper_ResortRestriction@NspiServer@Rpc@Exchange@Microsoft@@$$FMEAMXPE$AAVNspiAsyncRpcServer@2345@PE$AAVSafeRpcAsyncStateHandle@345@@Z;

	// Token: 0x040005E2 RID: 1506 RVA: 0x0015D6A8 File Offset: 0x0015C0A8
	public static method __m2mep@??0NspiAsyncRpcCallWrapper_ResortRestriction@NspiServer@Rpc@Exchange@Microsoft@@$$FQEAA@PEAXKPEAU__MIDL_nspi_0002@@PEAU_SPropTagArray_r@@PEAPEAU6@@Z;

	// Token: 0x040005E3 RID: 1507 RVA: 0x0015D498 File Offset: 0x0015BE98
	public static method __m2mep@?DispatchCall@NspiAsyncRpcCallWrapper_DNToEph@NspiServer@Rpc@Exchange@Microsoft@@$$FMEAMXPE$AAVNspiAsyncRpcServer@2345@PE$AAVSafeRpcAsyncStateHandle@345@@Z;

	// Token: 0x040005E4 RID: 1508 RVA: 0x0015D6C8 File Offset: 0x0015C0C8
	public static method __m2mep@??0NspiAsyncRpcCallWrapper_DNToEph@NspiServer@Rpc@Exchange@Microsoft@@$$FQEAA@PEAXKPEAU_StringsArray@@PEAPEAU_SPropTagArray_r@@@Z;

	// Token: 0x040005E5 RID: 1509 RVA: 0x0015D4A8 File Offset: 0x0015BEA8
	public static method __m2mep@?DispatchCall@NspiAsyncRpcCallWrapper_GetPropList@NspiServer@Rpc@Exchange@Microsoft@@$$FMEAMXPE$AAVNspiAsyncRpcServer@2345@PE$AAVSafeRpcAsyncStateHandle@345@@Z;

	// Token: 0x040005E6 RID: 1510 RVA: 0x0015D6E8 File Offset: 0x0015C0E8
	public static method __m2mep@??0NspiAsyncRpcCallWrapper_GetPropList@NspiServer@Rpc@Exchange@Microsoft@@$$FQEAA@PEAXKKKPEAPEAU_SPropTagArray_r@@@Z;

	// Token: 0x040005E7 RID: 1511 RVA: 0x0015D4B8 File Offset: 0x0015BEB8
	public static method __m2mep@?DispatchCall@NspiAsyncRpcCallWrapper_GetProps@NspiServer@Rpc@Exchange@Microsoft@@$$FMEAMXPE$AAVNspiAsyncRpcServer@2345@PE$AAVSafeRpcAsyncStateHandle@345@@Z;

	// Token: 0x040005E8 RID: 1512 RVA: 0x0015D708 File Offset: 0x0015C108
	public static method __m2mep@??0NspiAsyncRpcCallWrapper_GetProps@NspiServer@Rpc@Exchange@Microsoft@@$$FQEAA@PEAXKPEAU__MIDL_nspi_0002@@PEAU_SPropTagArray_r@@PEAPEAU_SRow_r@@@Z;

	// Token: 0x040005E9 RID: 1513 RVA: 0x0015D4C8 File Offset: 0x0015BEC8
	public static method __m2mep@?DispatchCall@NspiAsyncRpcCallWrapper_CompareDNTs@NspiServer@Rpc@Exchange@Microsoft@@$$FMEAMXPE$AAVNspiAsyncRpcServer@2345@PE$AAVSafeRpcAsyncStateHandle@345@@Z;

	// Token: 0x040005EA RID: 1514 RVA: 0x0015D728 File Offset: 0x0015C128
	public static method __m2mep@??0NspiAsyncRpcCallWrapper_CompareDNTs@NspiServer@Rpc@Exchange@Microsoft@@$$FQEAA@PEAXKPEAU__MIDL_nspi_0002@@KKPEAJ@Z;

	// Token: 0x040005EB RID: 1515 RVA: 0x0015D4D8 File Offset: 0x0015BED8
	public static method __m2mep@?DispatchCall@NspiAsyncRpcCallWrapper_ModProps@NspiServer@Rpc@Exchange@Microsoft@@$$FMEAMXPE$AAVNspiAsyncRpcServer@2345@PE$AAVSafeRpcAsyncStateHandle@345@@Z;

	// Token: 0x040005EC RID: 1516 RVA: 0x0015D748 File Offset: 0x0015C148
	public static method __m2mep@??0NspiAsyncRpcCallWrapper_ModProps@NspiServer@Rpc@Exchange@Microsoft@@$$FQEAA@PEAXKPEAU__MIDL_nspi_0002@@PEAU_SPropTagArray_r@@PEAU_SRow_r@@@Z;

	// Token: 0x040005ED RID: 1517 RVA: 0x0015D4E8 File Offset: 0x0015BEE8
	public static method __m2mep@?DispatchCall@NspiAsyncRpcCallWrapper_GetHierarchyInfo@NspiServer@Rpc@Exchange@Microsoft@@$$FMEAMXPE$AAVNspiAsyncRpcServer@2345@PE$AAVSafeRpcAsyncStateHandle@345@@Z;

	// Token: 0x040005EE RID: 1518 RVA: 0x0015D768 File Offset: 0x0015C168
	public static method __m2mep@??0NspiAsyncRpcCallWrapper_GetHierarchyInfo@NspiServer@Rpc@Exchange@Microsoft@@$$FQEAA@PEAXKPEAU__MIDL_nspi_0002@@PEAKPEAPEAU_SRowSet_r@@@Z;

	// Token: 0x040005EF RID: 1519 RVA: 0x0015D4F8 File Offset: 0x0015BEF8
	public static method __m2mep@?DispatchCall@NspiAsyncRpcCallWrapper_GetTemplateInfo@NspiServer@Rpc@Exchange@Microsoft@@$$FMEAMXPE$AAVNspiAsyncRpcServer@2345@PE$AAVSafeRpcAsyncStateHandle@345@@Z;

	// Token: 0x040005F0 RID: 1520 RVA: 0x0015D788 File Offset: 0x0015C188
	public static method __m2mep@??0NspiAsyncRpcCallWrapper_GetTemplateInfo@NspiServer@Rpc@Exchange@Microsoft@@$$FQEAA@PEAXKKPEADKKPEAPEAU_SRow_r@@@Z;

	// Token: 0x040005F1 RID: 1521 RVA: 0x0015D508 File Offset: 0x0015BF08
	public static method __m2mep@?DispatchCall@NspiAsyncRpcCallWrapper_ModLinkAtt@NspiServer@Rpc@Exchange@Microsoft@@$$FMEAMXPE$AAVNspiAsyncRpcServer@2345@PE$AAVSafeRpcAsyncStateHandle@345@@Z;

	// Token: 0x040005F2 RID: 1522 RVA: 0x0015D7A8 File Offset: 0x0015C1A8
	public static method __m2mep@??0NspiAsyncRpcCallWrapper_ModLinkAtt@NspiServer@Rpc@Exchange@Microsoft@@$$FQEAA@PEAXKKKPEAU_SBinaryArray_r@@@Z;

	// Token: 0x040005F3 RID: 1523 RVA: 0x0015D518 File Offset: 0x0015BF18
	public static method __m2mep@?DispatchCall@NspiAsyncRpcCallWrapper_DeleteEntries@NspiServer@Rpc@Exchange@Microsoft@@$$FMEAMXPE$AAVNspiAsyncRpcServer@2345@PE$AAVSafeRpcAsyncStateHandle@345@@Z;

	// Token: 0x040005F4 RID: 1524 RVA: 0x0015D7C8 File Offset: 0x0015C1C8
	public static method __m2mep@??0NspiAsyncRpcCallWrapper_DeleteEntries@NspiServer@Rpc@Exchange@Microsoft@@$$FQEAA@PEAXKKPEAU_SBinaryArray_r@@@Z;

	// Token: 0x040005F5 RID: 1525 RVA: 0x0015D528 File Offset: 0x0015BF28
	public static method __m2mep@?DispatchCall@NspiAsyncRpcCallWrapper_QueryColumns@NspiServer@Rpc@Exchange@Microsoft@@$$FMEAMXPE$AAVNspiAsyncRpcServer@2345@PE$AAVSafeRpcAsyncStateHandle@345@@Z;

	// Token: 0x040005F6 RID: 1526 RVA: 0x0015D7E8 File Offset: 0x0015C1E8
	public static method __m2mep@??0NspiAsyncRpcCallWrapper_QueryColumns@NspiServer@Rpc@Exchange@Microsoft@@$$FQEAA@PEAXKKPEAPEAU_SPropTagArray_r@@@Z;

	// Token: 0x040005F7 RID: 1527 RVA: 0x0015D538 File Offset: 0x0015BF38
	public static method __m2mep@?DispatchCall@NspiAsyncRpcCallWrapper_GetNamesFromIDs@NspiServer@Rpc@Exchange@Microsoft@@$$FMEAMXPE$AAVNspiAsyncRpcServer@2345@PE$AAVSafeRpcAsyncStateHandle@345@@Z;

	// Token: 0x040005F8 RID: 1528 RVA: 0x0015D808 File Offset: 0x0015C208
	public static method __m2mep@??0NspiAsyncRpcCallWrapper_GetNamesFromIDs@NspiServer@Rpc@Exchange@Microsoft@@$$FQEAA@PEAXKPEAU__MIDL_nspi_0001@@PEAU_SPropTagArray_r@@PEAPEAU6@PEAPEAU_NameIDSet_r@@@Z;

	// Token: 0x040005F9 RID: 1529 RVA: 0x0015D548 File Offset: 0x0015BF48
	public static method __m2mep@?DispatchCall@NspiAsyncRpcCallWrapper_GetIDsFromNames@NspiServer@Rpc@Exchange@Microsoft@@$$FMEAMXPE$AAVNspiAsyncRpcServer@2345@PE$AAVSafeRpcAsyncStateHandle@345@@Z;

	// Token: 0x040005FA RID: 1530 RVA: 0x0015D828 File Offset: 0x0015C228
	public static method __m2mep@??0NspiAsyncRpcCallWrapper_GetIDsFromNames@NspiServer@Rpc@Exchange@Microsoft@@$$FQEAA@PEAXKKKPEAPEAU_MAPINAMEID_r@@PEAPEAU_SPropTagArray_r@@@Z;

	// Token: 0x040005FB RID: 1531 RVA: 0x0015D558 File Offset: 0x0015BF58
	public static method __m2mep@?DispatchCall@NspiAsyncRpcCallWrapper_ResolveNames@NspiServer@Rpc@Exchange@Microsoft@@$$FMEAMXPE$AAVNspiAsyncRpcServer@2345@PE$AAVSafeRpcAsyncStateHandle@345@@Z;

	// Token: 0x040005FC RID: 1532 RVA: 0x0015D848 File Offset: 0x0015C248
	public static method __m2mep@??0NspiAsyncRpcCallWrapper_ResolveNames@NspiServer@Rpc@Exchange@Microsoft@@$$FQEAA@PEAXKPEAU__MIDL_nspi_0002@@PEAU_SPropTagArray_r@@PEAU_StringsArray@@PEAPEAU6@PEAPEAU_SRowSet_r@@@Z;

	// Token: 0x040005FD RID: 1533 RVA: 0x0015D568 File Offset: 0x0015BF68
	public static method __m2mep@?DispatchCall@NspiAsyncRpcCallWrapper_ResolveNamesW@NspiServer@Rpc@Exchange@Microsoft@@$$FMEAMXPE$AAVNspiAsyncRpcServer@2345@PE$AAVSafeRpcAsyncStateHandle@345@@Z;

	// Token: 0x040005FE RID: 1534 RVA: 0x0015D868 File Offset: 0x0015C268
	public static method __m2mep@??0NspiAsyncRpcCallWrapper_ResolveNamesW@NspiServer@Rpc@Exchange@Microsoft@@$$FQEAA@PEAXKPEAU__MIDL_nspi_0002@@PEAU_SPropTagArray_r@@PEAU_WStringsArray@@PEAPEAU6@PEAPEAU_SRowSet_r@@@Z;

	// Token: 0x040005FF RID: 1535 RVA: 0x0015D898 File Offset: 0x0015C298
	public static method __m2mep@??0?$BaseAsyncRpcCallWrapper@VNspiAsyncRpcServer@NspiServer@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@$$FIEAM@VIntPtr@System@@@Z;

	// Token: 0x04000600 RID: 1536 RVA: 0x0015D408 File Offset: 0x0015BE08
	public static method __m2mep@?InternalExecute@?$BaseAsyncRpcCallWrapper@VNspiAsyncRpcServer@NspiServer@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@$$FUEAMJPE$AAVSafeRpcAsyncStateHandle@234@@Z;

	// Token: 0x04000601 RID: 1537 RVA: 0x0015D5D8 File Offset: 0x0015BFD8
	public static method __m2mep@??_E?$CRequestQueue@UNSPI_REQUEST@@@@$$FUEAAPEAXI@Z;

	// Token: 0x04000602 RID: 1538 RVA: 0x0015D328 File Offset: 0x0015BD28
	public static method __m2mep@??_E?$CLazyInitRequestQueue@VCNSPIRequestQueue@@UNSPI_REQUEST@@$0CHBA@$00@@$$FUEAAPEAXI@Z;

	// Token: 0x04000603 RID: 1539 RVA: 0x0015D5F8 File Offset: 0x0015BFF8
	public static method __m2mep@??$Execute@VSafeNspiBindRpcAsyncStateHandle@NspiServer@Rpc@Exchange@Microsoft@@@ManagedExceptionAsyncCrashWrapper@Rpc@Exchange@Microsoft@@$$FQEAAXPEAU_RPC_ASYNC_STATE@@@Z;

	// Token: 0x04000604 RID: 1540 RVA: 0x0015D618 File Offset: 0x0015C018
	public static method __m2mep@??$Execute@VSafeNspiUnbindRpcAsyncStateHandle@NspiServer@Rpc@Exchange@Microsoft@@@ManagedExceptionAsyncCrashWrapper@Rpc@Exchange@Microsoft@@$$FQEAAXPEAU_RPC_ASYNC_STATE@@@Z;

	// Token: 0x04000605 RID: 1541 RVA: 0x0015D638 File Offset: 0x0015C038
	public static method __m2mep@??$Execute@VSafeNspiUpdateStatRpcAsyncStateHandle@NspiServer@Rpc@Exchange@Microsoft@@@ManagedExceptionAsyncCrashWrapper@Rpc@Exchange@Microsoft@@$$FQEAAXPEAU_RPC_ASYNC_STATE@@@Z;

	// Token: 0x04000606 RID: 1542 RVA: 0x0015D658 File Offset: 0x0015C058
	public static method __m2mep@??$Execute@VSafeNspiQueryRowsRpcAsyncStateHandle@NspiServer@Rpc@Exchange@Microsoft@@@ManagedExceptionAsyncCrashWrapper@Rpc@Exchange@Microsoft@@$$FQEAAXPEAU_RPC_ASYNC_STATE@@@Z;

	// Token: 0x04000607 RID: 1543 RVA: 0x0015D678 File Offset: 0x0015C078
	public static method __m2mep@??$Execute@VSafeNspiSeekEntriesRpcAsyncStateHandle@NspiServer@Rpc@Exchange@Microsoft@@@ManagedExceptionAsyncCrashWrapper@Rpc@Exchange@Microsoft@@$$FQEAAXPEAU_RPC_ASYNC_STATE@@@Z;

	// Token: 0x04000608 RID: 1544 RVA: 0x0015D698 File Offset: 0x0015C098
	public static method __m2mep@??$Execute@VSafeNspiGetMatchesRpcAsyncStateHandle@NspiServer@Rpc@Exchange@Microsoft@@@ManagedExceptionAsyncCrashWrapper@Rpc@Exchange@Microsoft@@$$FQEAAXPEAU_RPC_ASYNC_STATE@@@Z;

	// Token: 0x04000609 RID: 1545 RVA: 0x0015D6B8 File Offset: 0x0015C0B8
	public static method __m2mep@??$Execute@VSafeNspiResortRestrictionRpcAsyncStateHandle@NspiServer@Rpc@Exchange@Microsoft@@@ManagedExceptionAsyncCrashWrapper@Rpc@Exchange@Microsoft@@$$FQEAAXPEAU_RPC_ASYNC_STATE@@@Z;

	// Token: 0x0400060A RID: 1546 RVA: 0x0015D6D8 File Offset: 0x0015C0D8
	public static method __m2mep@??$Execute@VSafeNspiDNToEphRpcAsyncStateHandle@NspiServer@Rpc@Exchange@Microsoft@@@ManagedExceptionAsyncCrashWrapper@Rpc@Exchange@Microsoft@@$$FQEAAXPEAU_RPC_ASYNC_STATE@@@Z;

	// Token: 0x0400060B RID: 1547 RVA: 0x0015D6F8 File Offset: 0x0015C0F8
	public static method __m2mep@??$Execute@VSafeNspiGetPropListRpcAsyncStateHandle@NspiServer@Rpc@Exchange@Microsoft@@@ManagedExceptionAsyncCrashWrapper@Rpc@Exchange@Microsoft@@$$FQEAAXPEAU_RPC_ASYNC_STATE@@@Z;

	// Token: 0x0400060C RID: 1548 RVA: 0x0015D718 File Offset: 0x0015C118
	public static method __m2mep@??$Execute@VSafeNspiGetPropsRpcAsyncStateHandle@NspiServer@Rpc@Exchange@Microsoft@@@ManagedExceptionAsyncCrashWrapper@Rpc@Exchange@Microsoft@@$$FQEAAXPEAU_RPC_ASYNC_STATE@@@Z;

	// Token: 0x0400060D RID: 1549 RVA: 0x0015D738 File Offset: 0x0015C138
	public static method __m2mep@??$Execute@VSafeNspiCompareDNTsRpcAsyncStateHandle@NspiServer@Rpc@Exchange@Microsoft@@@ManagedExceptionAsyncCrashWrapper@Rpc@Exchange@Microsoft@@$$FQEAAXPEAU_RPC_ASYNC_STATE@@@Z;

	// Token: 0x0400060E RID: 1550 RVA: 0x0015D758 File Offset: 0x0015C158
	public static method __m2mep@??$Execute@VSafeNspiModPropsRpcAsyncStateHandle@NspiServer@Rpc@Exchange@Microsoft@@@ManagedExceptionAsyncCrashWrapper@Rpc@Exchange@Microsoft@@$$FQEAAXPEAU_RPC_ASYNC_STATE@@@Z;

	// Token: 0x0400060F RID: 1551 RVA: 0x0015D778 File Offset: 0x0015C178
	public static method __m2mep@??$Execute@VSafeNspiGetHierarchyInfoRpcAsyncStateHandle@NspiServer@Rpc@Exchange@Microsoft@@@ManagedExceptionAsyncCrashWrapper@Rpc@Exchange@Microsoft@@$$FQEAAXPEAU_RPC_ASYNC_STATE@@@Z;

	// Token: 0x04000610 RID: 1552 RVA: 0x0015D798 File Offset: 0x0015C198
	public static method __m2mep@??$Execute@VSafeNspiGetTemplateInfoRpcAsyncStateHandle@NspiServer@Rpc@Exchange@Microsoft@@@ManagedExceptionAsyncCrashWrapper@Rpc@Exchange@Microsoft@@$$FQEAAXPEAU_RPC_ASYNC_STATE@@@Z;

	// Token: 0x04000611 RID: 1553 RVA: 0x0015D7B8 File Offset: 0x0015C1B8
	public static method __m2mep@??$Execute@VSafeNspiModLinkAttRpcAsyncStateHandle@NspiServer@Rpc@Exchange@Microsoft@@@ManagedExceptionAsyncCrashWrapper@Rpc@Exchange@Microsoft@@$$FQEAAXPEAU_RPC_ASYNC_STATE@@@Z;

	// Token: 0x04000612 RID: 1554 RVA: 0x0015D7D8 File Offset: 0x0015C1D8
	public static method __m2mep@??$Execute@VSafeNspiDeleteEntriesRpcAsyncStateHandle@NspiServer@Rpc@Exchange@Microsoft@@@ManagedExceptionAsyncCrashWrapper@Rpc@Exchange@Microsoft@@$$FQEAAXPEAU_RPC_ASYNC_STATE@@@Z;

	// Token: 0x04000613 RID: 1555 RVA: 0x0015D7F8 File Offset: 0x0015C1F8
	public static method __m2mep@??$Execute@VSafeNspiQueryColumnsRpcAsyncStateHandle@NspiServer@Rpc@Exchange@Microsoft@@@ManagedExceptionAsyncCrashWrapper@Rpc@Exchange@Microsoft@@$$FQEAAXPEAU_RPC_ASYNC_STATE@@@Z;

	// Token: 0x04000614 RID: 1556 RVA: 0x0015D818 File Offset: 0x0015C218
	public static method __m2mep@??$Execute@VSafeNspiGetNamesFromIDsRpcAsyncStateHandle@NspiServer@Rpc@Exchange@Microsoft@@@ManagedExceptionAsyncCrashWrapper@Rpc@Exchange@Microsoft@@$$FQEAAXPEAU_RPC_ASYNC_STATE@@@Z;

	// Token: 0x04000615 RID: 1557 RVA: 0x0015D838 File Offset: 0x0015C238
	public static method __m2mep@??$Execute@VSafeNspiGetIDsFromNamesRpcAsyncStateHandle@NspiServer@Rpc@Exchange@Microsoft@@@ManagedExceptionAsyncCrashWrapper@Rpc@Exchange@Microsoft@@$$FQEAAXPEAU_RPC_ASYNC_STATE@@@Z;

	// Token: 0x04000616 RID: 1558 RVA: 0x0015D858 File Offset: 0x0015C258
	public static method __m2mep@??$Execute@VSafeNspiResolveNamesRpcAsyncStateHandle@NspiServer@Rpc@Exchange@Microsoft@@@ManagedExceptionAsyncCrashWrapper@Rpc@Exchange@Microsoft@@$$FQEAAXPEAU_RPC_ASYNC_STATE@@@Z;

	// Token: 0x04000617 RID: 1559 RVA: 0x0015D878 File Offset: 0x0015C278
	public static method __m2mep@??$Execute@VSafeNspiResolveNamesWRpcAsyncStateHandle@NspiServer@Rpc@Exchange@Microsoft@@@ManagedExceptionAsyncCrashWrapper@Rpc@Exchange@Microsoft@@$$FQEAAXPEAU_RPC_ASYNC_STATE@@@Z;

	// Token: 0x04000618 RID: 1560 RVA: 0x0015E240 File Offset: 0x0015CC40
	public static method __m2mep@?AcquireUseLicenses@@$$J0YAJPEAXHHPEAEPEAHPEAPEAE@Z;

	// Token: 0x04000619 RID: 1561 RVA: 0x0015E250 File Offset: 0x0015CC50
	public static method __m2mep@?AcquireTenantLicenses@@$$J0YAJPEAXHHPEAEPEAHPEAPEAE@Z;

	// Token: 0x0400061A RID: 1562 RVA: 0x0015E260 File Offset: 0x0015CC60
	public static method __m2mep@?GetTenantActiveCryptoMode@@$$J0YAJPEAXHHPEAEPEAHPEAPEAE@Z;

	// Token: 0x0400061B RID: 1563 RVA: 0x0015E280 File Offset: 0x0015CC80
	public static method __m2mep@??0EcPoolConnectAsyncState@@$$FQEAA@XZ;

	// Token: 0x0400061C RID: 1564 RVA: 0x0015E290 File Offset: 0x0015CC90
	public static method __m2mep@??1EcPoolConnectAsyncState@@$$FQEAA@XZ;

	// Token: 0x0400061D RID: 1565 RVA: 0x0015E2A0 File Offset: 0x0015CCA0
	public static method __m2mep@??0EcPoolCreateSessionAsyncState@@$$FQEAA@XZ;

	// Token: 0x0400061E RID: 1566 RVA: 0x0015E2B0 File Offset: 0x0015CCB0
	public static method __m2mep@??1EcPoolCreateSessionAsyncState@@$$FQEAA@XZ;

	// Token: 0x0400061F RID: 1567 RVA: 0x0015E2C0 File Offset: 0x0015CCC0
	public static method __m2mep@??0EcPoolSessionDoRpcAsyncState@@$$FQEAA@XZ;

	// Token: 0x04000620 RID: 1568 RVA: 0x0015E2D0 File Offset: 0x0015CCD0
	public static method __m2mep@??1EcPoolSessionDoRpcAsyncState@@$$FQEAA@XZ;

	// Token: 0x04000621 RID: 1569 RVA: 0x0015E2E0 File Offset: 0x0015CCE0
	public static method __m2mep@??0EcPoolWaitForNotificationsAsyncState@@$$FQEAA@XZ;

	// Token: 0x04000622 RID: 1570 RVA: 0x0015E2F0 File Offset: 0x0015CCF0
	public static method __m2mep@??1EcPoolWaitForNotificationsAsyncState@@$$FQEAA@XZ;

	// Token: 0x04000623 RID: 1571 RVA: 0x0015E300 File Offset: 0x0015CD00
	public static method __m2mep@??_GEcPoolConnectAsyncState@@$$FQEAAPEAXI@Z;

	// Token: 0x04000624 RID: 1572 RVA: 0x0015E310 File Offset: 0x0015CD10
	public static method __m2mep@??_GEcPoolCreateSessionAsyncState@@$$FQEAAPEAXI@Z;

	// Token: 0x04000625 RID: 1573 RVA: 0x0015E320 File Offset: 0x0015CD20
	public static method __m2mep@??_GEcPoolSessionDoRpcAsyncState@@$$FQEAAPEAXI@Z;

	// Token: 0x04000626 RID: 1574 RVA: 0x0015E330 File Offset: 0x0015CD30
	public static method __m2mep@??_GEcPoolWaitForNotificationsAsyncState@@$$FQEAAPEAXI@Z;

	// Token: 0x04000627 RID: 1575 RVA: 0x0015E270 File Offset: 0x0015CC70
	public static method __m2mep@?OnRpcCompleteCallback@@$$FYAXPEAU_TP_CALLBACK_INSTANCE@@PEAXPEAU_TP_WAIT@@K@Z;

	// Token: 0x04000628 RID: 1576 RVA: 0x001533F8 File Offset: 0x001525F8
	internal static $_s__RTTIBaseClassArray$_extraBytes_16 ??_R2CPXH_rundownServer_Wrapper@@8;

	// Token: 0x04000629 RID: 1577 RVA: 0x001537A0 File Offset: 0x001529A0
	internal static $_s__RTTIBaseClassArray$_extraBytes_24 ??_R2EcPoolWaitForNotificationsAsyncRpc@@8;

	// Token: 0x0400062A RID: 1578 RVA: 0x00153718 File Offset: 0x00152918
	internal static $_s__RTTIBaseClassArray$_extraBytes_24 ??_R2EcPoolSessionDoRpcRpc@@8;

	// Token: 0x0400062B RID: 1579 RVA: 0x00153690 File Offset: 0x00152890
	internal static $_s__RTTIBaseClassArray$_extraBytes_24 ??_R2EcPoolCloseSessionRpc@@8;

	// Token: 0x0400062C RID: 1580 RVA: 0x00153608 File Offset: 0x00152808
	internal static $_s__RTTIBaseClassArray$_extraBytes_24 ??_R2EcPoolCreateSessionRpc@@8;

	// Token: 0x0400062D RID: 1581 RVA: 0x00153580 File Offset: 0x00152780
	internal static $_s__RTTIBaseClassArray$_extraBytes_24 ??_R2EcPoolDisconnectRpc@@8;

	// Token: 0x0400062E RID: 1582 RVA: 0x001534F8 File Offset: 0x001526F8
	internal static $_s__RTTIBaseClassArray$_extraBytes_24 ??_R2EcPoolConnectRpc@@8;

	// Token: 0x0400062F RID: 1583 RVA: 0x00153478 File Offset: 0x00152678
	internal static $_s__RTTIBaseClassArray$_extraBytes_16 ??_R2PoolRpcServer_Wrapper@@8;

	// Token: 0x04000630 RID: 1584 RVA: 0x001533D0 File Offset: 0x001525D0
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@CPXH_rundownServer_Wrapper@@8;

	// Token: 0x04000631 RID: 1585 RVA: 0x00153778 File Offset: 0x00152978
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@EcPoolWaitForNotificationsAsyncRpc@@8;

	// Token: 0x04000632 RID: 1586 RVA: 0x001536F0 File Offset: 0x001528F0
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@EcPoolSessionDoRpcRpc@@8;

	// Token: 0x04000633 RID: 1587 RVA: 0x00153668 File Offset: 0x00152868
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@EcPoolCloseSessionRpc@@8;

	// Token: 0x04000634 RID: 1588 RVA: 0x001535E0 File Offset: 0x001527E0
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@EcPoolCreateSessionRpc@@8;

	// Token: 0x04000635 RID: 1589 RVA: 0x00153558 File Offset: 0x00152758
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@EcPoolDisconnectRpc@@8;

	// Token: 0x04000636 RID: 1590 RVA: 0x001534D0 File Offset: 0x001526D0
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@EcPoolConnectRpc@@8;

	// Token: 0x04000637 RID: 1591 RVA: 0x00153450 File Offset: 0x00152650
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@PoolRpcServer_Wrapper@@8;

	// Token: 0x04000638 RID: 1592 RVA: 0x00153410 File Offset: 0x00152610
	internal static _s__RTTIClassHierarchyDescriptor ??_R3CPXH_rundownServer_Wrapper@@8;

	// Token: 0x04000639 RID: 1593 RVA: 0x0015E3C0 File Offset: 0x0015CDC0
	internal static $_TypeDescriptor$_extraBytes_33 ??_R0?AVCPXH_rundownServer_Wrapper@@@8;

	// Token: 0x0400063A RID: 1594 RVA: 0x001537C0 File Offset: 0x001529C0
	internal static _s__RTTIClassHierarchyDescriptor ??_R3EcPoolWaitForNotificationsAsyncRpc@@8;

	// Token: 0x0400063B RID: 1595 RVA: 0x0015E700 File Offset: 0x0015D100
	internal static $_TypeDescriptor$_extraBytes_41 ??_R0?AVEcPoolWaitForNotificationsAsyncRpc@@@8;

	// Token: 0x0400063C RID: 1596 RVA: 0x00153738 File Offset: 0x00152938
	internal static _s__RTTIClassHierarchyDescriptor ??_R3EcPoolSessionDoRpcRpc@@8;

	// Token: 0x0400063D RID: 1597 RVA: 0x0015E6D0 File Offset: 0x0015D0D0
	internal static $_TypeDescriptor$_extraBytes_28 ??_R0?AVEcPoolSessionDoRpcRpc@@@8;

	// Token: 0x0400063E RID: 1598 RVA: 0x001536B0 File Offset: 0x001528B0
	internal static _s__RTTIClassHierarchyDescriptor ??_R3EcPoolCloseSessionRpc@@8;

	// Token: 0x0400063F RID: 1599 RVA: 0x0015E6A0 File Offset: 0x0015D0A0
	internal static $_TypeDescriptor$_extraBytes_28 ??_R0?AVEcPoolCloseSessionRpc@@@8;

	// Token: 0x04000640 RID: 1600 RVA: 0x00153628 File Offset: 0x00152828
	internal static _s__RTTIClassHierarchyDescriptor ??_R3EcPoolCreateSessionRpc@@8;

	// Token: 0x04000641 RID: 1601 RVA: 0x0015E670 File Offset: 0x0015D070
	internal static $_TypeDescriptor$_extraBytes_29 ??_R0?AVEcPoolCreateSessionRpc@@@8;

	// Token: 0x04000642 RID: 1602 RVA: 0x001535A0 File Offset: 0x001527A0
	internal static _s__RTTIClassHierarchyDescriptor ??_R3EcPoolDisconnectRpc@@8;

	// Token: 0x04000643 RID: 1603 RVA: 0x0015E640 File Offset: 0x0015D040
	internal static $_TypeDescriptor$_extraBytes_26 ??_R0?AVEcPoolDisconnectRpc@@@8;

	// Token: 0x04000644 RID: 1604 RVA: 0x00153518 File Offset: 0x00152718
	internal static _s__RTTIClassHierarchyDescriptor ??_R3EcPoolConnectRpc@@8;

	// Token: 0x04000645 RID: 1605 RVA: 0x0015E618 File Offset: 0x0015D018
	internal static $_TypeDescriptor$_extraBytes_23 ??_R0?AVEcPoolConnectRpc@@@8;

	// Token: 0x04000646 RID: 1606 RVA: 0x00153490 File Offset: 0x00152690
	internal static _s__RTTIClassHierarchyDescriptor ??_R3PoolRpcServer_Wrapper@@8;

	// Token: 0x04000647 RID: 1607 RVA: 0x0015E5E8 File Offset: 0x0015CFE8
	internal static $_TypeDescriptor$_extraBytes_28 ??_R0?AVPoolRpcServer_Wrapper@@@8;

	// Token: 0x04000648 RID: 1608 RVA: 0x00153428 File Offset: 0x00152628
	internal static _s__RTTICompleteObjectLocator2 ??_R4CPXH_rundownServer_Wrapper@@6B@;

	// Token: 0x04000649 RID: 1609
	[FixedAddressValueType]
	internal static $ArrayType$$$BY03Q6AXXZ ??_7EcPoolWaitForNotificationsAsyncRpc@@6B@;

	// Token: 0x0400064A RID: 1610 RVA: 0x0006E8D8 File Offset: 0x0006DAD8
	internal static method ??_7EcPoolWaitForNotificationsAsyncRpc@@6B@$initializer$;

	// Token: 0x0400064B RID: 1611 RVA: 0x001537D8 File Offset: 0x001529D8
	internal static _s__RTTICompleteObjectLocator2 ??_R4EcPoolWaitForNotificationsAsyncRpc@@6B@;

	// Token: 0x0400064C RID: 1612
	[FixedAddressValueType]
	internal static $ArrayType$$$BY03Q6AXXZ ??_7EcPoolSessionDoRpcRpc@@6B@;

	// Token: 0x0400064D RID: 1613 RVA: 0x0006E8D0 File Offset: 0x0006DAD0
	internal static method ??_7EcPoolSessionDoRpcRpc@@6B@$initializer$;

	// Token: 0x0400064E RID: 1614 RVA: 0x00153750 File Offset: 0x00152950
	internal static _s__RTTICompleteObjectLocator2 ??_R4EcPoolSessionDoRpcRpc@@6B@;

	// Token: 0x0400064F RID: 1615
	[FixedAddressValueType]
	internal static $ArrayType$$$BY03Q6AXXZ ??_7EcPoolCloseSessionRpc@@6B@;

	// Token: 0x04000650 RID: 1616 RVA: 0x0006E8C8 File Offset: 0x0006DAC8
	internal static method ??_7EcPoolCloseSessionRpc@@6B@$initializer$;

	// Token: 0x04000651 RID: 1617 RVA: 0x001536C8 File Offset: 0x001528C8
	internal static _s__RTTICompleteObjectLocator2 ??_R4EcPoolCloseSessionRpc@@6B@;

	// Token: 0x04000652 RID: 1618
	[FixedAddressValueType]
	internal static $ArrayType$$$BY03Q6AXXZ ??_7EcPoolCreateSessionRpc@@6B@;

	// Token: 0x04000653 RID: 1619 RVA: 0x0006E8C0 File Offset: 0x0006DAC0
	internal static method ??_7EcPoolCreateSessionRpc@@6B@$initializer$;

	// Token: 0x04000654 RID: 1620 RVA: 0x00153640 File Offset: 0x00152840
	internal static _s__RTTICompleteObjectLocator2 ??_R4EcPoolCreateSessionRpc@@6B@;

	// Token: 0x04000655 RID: 1621
	[FixedAddressValueType]
	internal static $ArrayType$$$BY03Q6AXXZ ??_7EcPoolDisconnectRpc@@6B@;

	// Token: 0x04000656 RID: 1622 RVA: 0x0006E8B8 File Offset: 0x0006DAB8
	internal static method ??_7EcPoolDisconnectRpc@@6B@$initializer$;

	// Token: 0x04000657 RID: 1623 RVA: 0x001535B8 File Offset: 0x001527B8
	internal static _s__RTTICompleteObjectLocator2 ??_R4EcPoolDisconnectRpc@@6B@;

	// Token: 0x04000658 RID: 1624
	[FixedAddressValueType]
	internal static $ArrayType$$$BY03Q6AXXZ ??_7EcPoolConnectRpc@@6B@;

	// Token: 0x04000659 RID: 1625 RVA: 0x0006E8B0 File Offset: 0x0006DAB0
	internal static method ??_7EcPoolConnectRpc@@6B@$initializer$;

	// Token: 0x0400065A RID: 1626 RVA: 0x00153530 File Offset: 0x00152730
	internal static _s__RTTICompleteObjectLocator2 ??_R4EcPoolConnectRpc@@6B@;

	// Token: 0x0400065B RID: 1627
	[FixedAddressValueType]
	internal static $ArrayType$$$BY03Q6AXXZ ??_7PoolRpcServer_Wrapper@@6B@;

	// Token: 0x0400065C RID: 1628 RVA: 0x0006E8A8 File Offset: 0x0006DAA8
	internal static method ??_7PoolRpcServer_Wrapper@@6B@$initializer$;

	// Token: 0x0400065D RID: 1629 RVA: 0x001534A8 File Offset: 0x001526A8
	internal static _s__RTTICompleteObjectLocator2 ??_R4PoolRpcServer_Wrapper@@6B@;

	// Token: 0x0400065E RID: 1630 RVA: 0x0015E400 File Offset: 0x0015CE00
	internal static $ArrayType$$$BY01Q6AXXZ ??_7CPXH_rundownServer_Wrapper@@6B@;

	// Token: 0x0400065F RID: 1631 RVA: 0x0015E340 File Offset: 0x0015CD40
	public static method __m2mep@?MToUBytesSegment@@$$FYMXV?$ArraySegment@E@System@@PEAHPEAPEAE@Z;

	// Token: 0x04000660 RID: 1632 RVA: 0x0015E350 File Offset: 0x0015CD50
	public static method __m2mep@?UToMLeasedBuffer@@$$FYMP$01EAEHPEAEAEAH@Z;

	// Token: 0x04000661 RID: 1633 RVA: 0x0015E418 File Offset: 0x0015CE18
	public static method __m2mep@?EcValidateParameters@PoolRpcServer_Wrapper@@$$FMEAAJXZ;

	// Token: 0x04000662 RID: 1634 RVA: 0x0015E528 File Offset: 0x0015CF28
	public static method __m2mep@??0PoolRpcServer_Wrapper@@$$FIEAM@VIntPtr@System@@@Z;

	// Token: 0x04000663 RID: 1635 RVA: 0x0015E428 File Offset: 0x0015CE28
	public static method __m2mep@?InternalExecute@PoolRpcServer_Wrapper@@$$FUEAMJPE$AAVSafeRpcAsyncStateHandle@Rpc@Exchange@Microsoft@@@Z;

	// Token: 0x04000664 RID: 1636 RVA: 0x0015E538 File Offset: 0x0015CF38
	public static method __m2mep@??0EcPoolConnectRpc@@$$FQEAA@PEAXPEAPEAXKQEAEPEAKPEAPEAEK234@Z;

	// Token: 0x04000665 RID: 1637 RVA: 0x0015E438 File Offset: 0x0015CE38
	public static method __m2mep@?EcValidateParameters@EcPoolConnectRpc@@$$FUEAAJXZ;

	// Token: 0x04000666 RID: 1638 RVA: 0x0015E548 File Offset: 0x0015CF48
	public static method __m2mep@?EcDispatchCall@EcPoolConnectRpc@@$$FUEAMJPE$AAVSafeRpcAsyncStateHandle@Rpc@Exchange@Microsoft@@PE$AAUIPoolRpcServer@PoolRpc@345@@Z;

	// Token: 0x04000667 RID: 1639 RVA: 0x0015E360 File Offset: 0x0015CD60
	public static method __m2mep@?EcPoolConnect_Managed@@$$FYAXPEAU_RPC_ASYNC_STATE@@PEAXPEAPEAXKQEAEPEAKPEAPEAEK345@Z;

	// Token: 0x04000668 RID: 1640 RVA: 0x0015E558 File Offset: 0x0015CF58
	public static method __m2mep@??0EcPoolDisconnectRpc@@$$FQEAA@PEAPEAX@Z;

	// Token: 0x04000669 RID: 1641 RVA: 0x0015E458 File Offset: 0x0015CE58
	public static method __m2mep@?EcDispatchCall@EcPoolDisconnectRpc@@$$FUEAMJPE$AAVSafeRpcAsyncStateHandle@Rpc@Exchange@Microsoft@@PE$AAUIPoolRpcServer@PoolRpc@345@@Z;

	// Token: 0x0400066A RID: 1642 RVA: 0x0015E370 File Offset: 0x0015CD70
	public static method __m2mep@?EcPoolDisconnect_Managed@@$$FYAXPEAU_RPC_ASYNC_STATE@@PEAPEAX@Z;

	// Token: 0x0400066B RID: 1643 RVA: 0x0015E568 File Offset: 0x0015CF68
	public static method __m2mep@??0EcPoolCreateSessionRpc@@$$FQEAA@PEAXKQEAEPEAKPEAPEAEK123@Z;

	// Token: 0x0400066C RID: 1644 RVA: 0x0015E468 File Offset: 0x0015CE68
	public static method __m2mep@?EcValidateParameters@EcPoolCreateSessionRpc@@$$FUEAAJXZ;

	// Token: 0x0400066D RID: 1645 RVA: 0x0015E578 File Offset: 0x0015CF78
	public static method __m2mep@?EcDispatchCall@EcPoolCreateSessionRpc@@$$FUEAMJPE$AAVSafeRpcAsyncStateHandle@Rpc@Exchange@Microsoft@@PE$AAUIPoolRpcServer@PoolRpc@345@@Z;

	// Token: 0x0400066E RID: 1646 RVA: 0x0015E478 File Offset: 0x0015CE78
	public static method __m2mep@?EcUnpackRequest@EcPoolCreateSessionRpc@@$$FAEAAJPEAUtagRPC_POOL_CREATE_SESSION_REQUEST_HEADER@@PEAPEADPEAPEAEPEAK@Z;

	// Token: 0x0400066F RID: 1647 RVA: 0x0015E380 File Offset: 0x0015CD80
	public static method __m2mep@?EcPoolCreateSession_Managed@@$$FYAXPEAU_RPC_ASYNC_STATE@@PEAXKQEAEPEAKPEAPEAEK234@Z;

	// Token: 0x04000670 RID: 1648 RVA: 0x0015E588 File Offset: 0x0015CF88
	public static method __m2mep@??0EcPoolCloseSessionRpc@@$$FQEAA@PEAXK@Z;

	// Token: 0x04000671 RID: 1649 RVA: 0x0015E488 File Offset: 0x0015CE88
	public static method __m2mep@?EcDispatchCall@EcPoolCloseSessionRpc@@$$FUEAMJPE$AAVSafeRpcAsyncStateHandle@Rpc@Exchange@Microsoft@@PE$AAUIPoolRpcServer@PoolRpc@345@@Z;

	// Token: 0x04000672 RID: 1650 RVA: 0x0015E390 File Offset: 0x0015CD90
	public static method __m2mep@?EcPoolCloseSession_Managed@@$$FYAXPEAU_RPC_ASYNC_STATE@@PEAXK@Z;

	// Token: 0x04000673 RID: 1651 RVA: 0x0015E598 File Offset: 0x0015CF98
	public static method __m2mep@??0EcPoolSessionDoRpcRpc@@$$FQEAA@PEAXKPEAKKQEAE1PEAPEAEK213@Z;

	// Token: 0x04000674 RID: 1652 RVA: 0x0015E498 File Offset: 0x0015CE98
	public static method __m2mep@?EcValidateParameters@EcPoolSessionDoRpcRpc@@$$FUEAAJXZ;

	// Token: 0x04000675 RID: 1653 RVA: 0x0015E5A8 File Offset: 0x0015CFA8
	public static method __m2mep@?EcDispatchCall@EcPoolSessionDoRpcRpc@@$$FUEAMJPE$AAVSafeRpcAsyncStateHandle@Rpc@Exchange@Microsoft@@PE$AAUIPoolRpcServer@PoolRpc@345@@Z;

	// Token: 0x04000676 RID: 1654 RVA: 0x0015E3A0 File Offset: 0x0015CDA0
	public static method __m2mep@?EcPoolSessionDoRpc_Managed@@$$FYAXPEAU_RPC_ASYNC_STATE@@PEAXKPEAKKQEAE2PEAPEAEK324@Z;

	// Token: 0x04000677 RID: 1655 RVA: 0x0015E5B8 File Offset: 0x0015CFB8
	public static method __m2mep@??0EcPoolWaitForNotificationsAsyncRpc@@$$FQEAA@PEAXPEAKPEAPEAE@Z;

	// Token: 0x04000678 RID: 1656 RVA: 0x0015E4A8 File Offset: 0x0015CEA8
	public static method __m2mep@?EcValidateParameters@EcPoolWaitForNotificationsAsyncRpc@@$$FUEAAJXZ;

	// Token: 0x04000679 RID: 1657 RVA: 0x0015E4B8 File Offset: 0x0015CEB8
	public static method __m2mep@?EcDispatchCall@EcPoolWaitForNotificationsAsyncRpc@@$$FUEAMJPE$AAVSafeRpcAsyncStateHandle@Rpc@Exchange@Microsoft@@PE$AAUIPoolRpcServer@PoolRpc@345@@Z;

	// Token: 0x0400067A RID: 1658 RVA: 0x0015E3B0 File Offset: 0x0015CDB0
	public static method __m2mep@?EcPoolWaitForNotificationsAsyncEx_Managed@@$$FYAXPEAU_RPC_ASYNC_STATE@@PEAXPEAKPEAPEAE@Z;

	// Token: 0x0400067B RID: 1659 RVA: 0x0015E5C8 File Offset: 0x0015CFC8
	public static method __m2mep@??0CPXH_rundownServer_Wrapper@@$$FQEAA@PEAX@Z;

	// Token: 0x0400067C RID: 1660 RVA: 0x0015E5D8 File Offset: 0x0015CFD8
	public static method __m2mep@?InternalExecute@CPXH_rundownServer_Wrapper@@$$FUEAAJXZ;

	// Token: 0x0400067D RID: 1661 RVA: 0x0015E408 File Offset: 0x0015CE08
	public static method __m2mep@?CPXH_rundown_Managed@@$$FYAXPEAX@Z;

	// Token: 0x0400067E RID: 1662 RVA: 0x0015E4C8 File Offset: 0x0015CEC8
	public static method __m2mep@??$Execute@VSafeEcPoolConnectRpcAsyncStateHandle@PoolRpc@Rpc@Exchange@Microsoft@@@ManagedExceptionAsyncCrashWrapper@Rpc@Exchange@Microsoft@@$$FQEAAXPEAU_RPC_ASYNC_STATE@@@Z;

	// Token: 0x0400067F RID: 1663 RVA: 0x0015E4D8 File Offset: 0x0015CED8
	public static method __m2mep@??$Execute@VSafeEcPoolDisconnectRpcAsyncStateHandle@PoolRpc@Rpc@Exchange@Microsoft@@@ManagedExceptionAsyncCrashWrapper@Rpc@Exchange@Microsoft@@$$FQEAAXPEAU_RPC_ASYNC_STATE@@@Z;

	// Token: 0x04000680 RID: 1664 RVA: 0x0015E4E8 File Offset: 0x0015CEE8
	public static method __m2mep@??$Execute@VSafeEcPoolCreateSessionRpcAsyncStateHandle@PoolRpc@Rpc@Exchange@Microsoft@@@ManagedExceptionAsyncCrashWrapper@Rpc@Exchange@Microsoft@@$$FQEAAXPEAU_RPC_ASYNC_STATE@@@Z;

	// Token: 0x04000681 RID: 1665 RVA: 0x0015E4F8 File Offset: 0x0015CEF8
	public static method __m2mep@??$Execute@VSafeEcPoolCloseSessionRpcAsyncStateHandle@PoolRpc@Rpc@Exchange@Microsoft@@@ManagedExceptionAsyncCrashWrapper@Rpc@Exchange@Microsoft@@$$FQEAAXPEAU_RPC_ASYNC_STATE@@@Z;

	// Token: 0x04000682 RID: 1666 RVA: 0x0015E508 File Offset: 0x0015CF08
	public static method __m2mep@??$Execute@VSafeEcPoolSessionDoRpcRpcAsyncStateHandle@PoolRpc@Rpc@Exchange@Microsoft@@@ManagedExceptionAsyncCrashWrapper@Rpc@Exchange@Microsoft@@$$FQEAAXPEAU_RPC_ASYNC_STATE@@@Z;

	// Token: 0x04000683 RID: 1667 RVA: 0x0015E518 File Offset: 0x0015CF18
	public static method __m2mep@??$Execute@VSafeEcPoolWaitForNotificationsAsyncRpcAsyncStateHandle@PoolRpc@Rpc@Exchange@Microsoft@@@ManagedExceptionAsyncCrashWrapper@Rpc@Exchange@Microsoft@@$$FQEAAXPEAU_RPC_ASYNC_STATE@@@Z;

	// Token: 0x04000684 RID: 1668 RVA: 0x0015E448 File Offset: 0x0015CE48
	public static method __m2mep@?GUIDFromGuid@?A0x65dec466@Rpc@Exchange@Microsoft@@$$FYM?AU_GUID@@PE$AAVGuid@System@@@Z;

	// Token: 0x04000685 RID: 1669 RVA: 0x0006F278 File Offset: 0x0006E478
	public unsafe static int** __unep@?EcValidateParameters@PoolRpcServer_Wrapper@@$$FMEAAJXZ;

	// Token: 0x04000686 RID: 1670 RVA: 0x0006F280 File Offset: 0x0006E480
	public unsafe static int** __unep@?EcValidateParameters@EcPoolConnectRpc@@$$FUEAAJXZ;

	// Token: 0x04000687 RID: 1671 RVA: 0x0006F288 File Offset: 0x0006E488
	public unsafe static int** __unep@?EcValidateParameters@EcPoolCreateSessionRpc@@$$FUEAAJXZ;

	// Token: 0x04000688 RID: 1672 RVA: 0x0006F290 File Offset: 0x0006E490
	public unsafe static int** __unep@?EcValidateParameters@EcPoolSessionDoRpcRpc@@$$FUEAAJXZ;

	// Token: 0x04000689 RID: 1673 RVA: 0x0006F298 File Offset: 0x0006E498
	public unsafe static int** __unep@?EcValidateParameters@EcPoolWaitForNotificationsAsyncRpc@@$$FUEAAJXZ;

	// Token: 0x0400068A RID: 1674 RVA: 0x0015E780 File Offset: 0x0015D180
	internal static _IProcessAccess_v1_0_epv_t DEFAULT_EPV;

	// Token: 0x0400068B RID: 1675 RVA: 0x001626B0 File Offset: 0x001610B0
	internal static method runProcessCommand;

	// Token: 0x0400068C RID: 1676 RVA: 0x0015E798 File Offset: 0x0015D198
	public static method __m2mep@?GuidFromGUID@?A0xd6bdf0e7@Rpc@Exchange@Microsoft@@$$FYM?AVGuid@System@@AEBU_GUID@@@Z;

	// Token: 0x0400068D RID: 1677 RVA: 0x0015E788 File Offset: 0x0015D188
	public static method __m2mep@?GUIDFromGuid@?A0xd6bdf0e7@Rpc@Exchange@Microsoft@@$$FYM?AU_GUID@@PE$AAVGuid@System@@@Z;

	// Token: 0x0400068E RID: 1678 RVA: 0x0015E7E8 File Offset: 0x0015D1E8
	public static method __m2mep@?CheckFullPermissions@@$$FYMJPEAXPE$AAVQueueViewerRpcServer@QueueViewer@Rpc@Exchange@Microsoft@@@Z;

	// Token: 0x0400068F RID: 1679 RVA: 0x0015E7A8 File Offset: 0x0015D1A8
	public static method __m2mep@?GetQueueViewerObjectPageWithPropertyBag@@$$J0YAJPEAXW4tagObjectType@@HPEAEH2HHH2HHHH2PEAHPEAPEAE33@Z;

	// Token: 0x04000690 RID: 1680 RVA: 0x0015E7B8 File Offset: 0x0015D1B8
	public static method __m2mep@?GetQueueViewerObjectPage@@$$J0YAJPEAXW4tagObjectType@@HPEAEH2HHH2HHHPEAHPEAPEAE33@Z;

	// Token: 0x04000691 RID: 1681 RVA: 0x0015E7F8 File Offset: 0x0015D1F8
	public static method __m2mep@?ReadMessageBody@@$$J0YAJPEAXHPEAEHHPEAHPEAPEAE@Z;

	// Token: 0x04000692 RID: 1682 RVA: 0x0015E808 File Offset: 0x0015D208
	public static method __m2mep@?FreezeMessage@@$$J0YAJPEAXHPEAEH1@Z;

	// Token: 0x04000693 RID: 1683 RVA: 0x0015E818 File Offset: 0x0015D218
	public static method __m2mep@?UnfreezeMessage@@$$J0YAJPEAXHPEAEH1@Z;

	// Token: 0x04000694 RID: 1684 RVA: 0x0015E828 File Offset: 0x0015D228
	public static method __m2mep@?DeleteMessage@@$$J0YAJPEAXHPEAEH1H@Z;

	// Token: 0x04000695 RID: 1685 RVA: 0x0015E838 File Offset: 0x0015D238
	public static method __m2mep@?RedirectMessage@@$$J0YAJPEAXHPEAE@Z;

	// Token: 0x04000696 RID: 1686 RVA: 0x0015E848 File Offset: 0x0015D248
	public static method __m2mep@?FreezeQueue@@$$J0YAJPEAXHPEAEH1@Z;

	// Token: 0x04000697 RID: 1687 RVA: 0x0015E858 File Offset: 0x0015D258
	public static method __m2mep@?UnfreezeQueue@@$$J0YAJPEAXHPEAEH1@Z;

	// Token: 0x04000698 RID: 1688 RVA: 0x0015E868 File Offset: 0x0015D268
	public static method __m2mep@?RetryQueue@@$$J0YAJPEAXHPEAEH1H@Z;

	// Token: 0x04000699 RID: 1689 RVA: 0x0015E7C8 File Offset: 0x0015D1C8
	public static method __m2mep@?GetPropertyBagBasedQueueViewerObjectPage@@$$J0YAJPEAXW4tagObjectType@@HPEAEPEAHPEAPEAE33@Z;

	// Token: 0x0400069A RID: 1690 RVA: 0x0015E7D8 File Offset: 0x0015D1D8
	public static method __m2mep@?GetPropertyBagBasedQueueViewerObjectPageCustomSerialization@@$$J0YAJPEAXW4tagObjectType@@HPEAEPEAHPEAPEAE33@Z;

	// Token: 0x0400069B RID: 1691 RVA: 0x0015E878 File Offset: 0x0015D278
	public static method __m2mep@?SetMessage@@$$J0YAJPEAXHPEAEH1H1H@Z;

	// Token: 0x0400069C RID: 1692 RVA: 0x0006F2C8 File Offset: 0x0006E4C8
	internal static $ArrayType$$$BY0BH@$$CBG ??_C@_1CO@IHNMCHJP@?$AAR?$AAF?$AAR?$AAI?$AA?5?$AAN?$AAa?$AAt?$AAi?$AAv?$AAe?$AA?5?$AAQ?$AAu?$AAe?$AAu?$AAe?$AA?5?$AAS?$AAi?$AAz?$AAe?$AA?$AA@;

	// Token: 0x0400069D RID: 1693 RVA: 0x0006F348 File Offset: 0x0006E548
	internal static $ArrayType$$$BY0BN@$$CBG ??_C@_1DK@CFKHEGOK@?$AAR?$AAF?$AAR?$AAI?$AA?5?$AAN?$AAa?$AAt?$AAi?$AAv?$AAe?$AA?5?$AAD?$AAi?$AAs?$AAp?$AAa?$AAt?$AAc?$AAh?$AA?5?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AAs?$AA?$AA@;

	// Token: 0x0400069E RID: 1694 RVA: 0x0006F300 File Offset: 0x0006E500
	internal static $ArrayType$$$BY0CC@$$CBG ??_C@_1EE@CPHDGFAB@?$AAR?$AAF?$AAR?$AAI?$AA?5?$AAN?$AAa?$AAt?$AAi?$AAv?$AAe?$AA?5?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AAs?$AA?5?$AAP?$AAe?$AAr?$AA?5?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAo@;

	// Token: 0x0400069F RID: 1695 RVA: 0x001538A0 File Offset: 0x00152AA0
	internal static $_s__RTTIBaseClassArray$_extraBytes_16 ??_R2CRFRILazyInitRequestQueue@@8;

	// Token: 0x040006A0 RID: 1696 RVA: 0x00153828 File Offset: 0x00152A28
	internal static $_s__RTTIBaseClassArray$_extraBytes_8 ??_R2?$CLazyInitRequestQueue@VCRFRIRequestQueue@@UtagRFRI_REQUEST@@$0CHBA@$00@@8;

	// Token: 0x040006A1 RID: 1697 RVA: 0x00153970 File Offset: 0x00152B70
	internal static $_s__RTTIBaseClassArray$_extraBytes_16 ??_R2CRFRIRequestQueue@@8;

	// Token: 0x040006A2 RID: 1698 RVA: 0x00153920 File Offset: 0x00152B20
	internal static $_s__RTTIBaseClassArray$_extraBytes_8 ??_R2?$CRequestQueue@UtagRFRI_REQUEST@@@@8;

	// Token: 0x040006A3 RID: 1699 RVA: 0x00153BB0 File Offset: 0x00152DB0
	internal static $_s__RTTIBaseClassArray$_extraBytes_32 ??_R2RfriAsyncRpcCallWrapper_GetFQDNFromLegacyDN@RfriServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x040006A4 RID: 1700 RVA: 0x00153B20 File Offset: 0x00152D20
	internal static $_s__RTTIBaseClassArray$_extraBytes_32 ??_R2RfriAsyncRpcCallWrapper_GetNewDSA@RfriServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x040006A5 RID: 1701 RVA: 0x00153A70 File Offset: 0x00152C70
	internal static $_s__RTTIBaseClassArray$_extraBytes_24 ??_R2RfriAsyncRpcCallWrapper@RfriServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x040006A6 RID: 1702 RVA: 0x00153A18 File Offset: 0x00152C18
	internal static $_s__RTTIBaseClassArray$_extraBytes_16 ??_R2?$BaseAsyncRpcCallWrapper@VRfriAsyncRpcServer@RfriServer@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@8;

	// Token: 0x040006A7 RID: 1703 RVA: 0x00153878 File Offset: 0x00152A78
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@CRFRILazyInitRequestQueue@@8;

	// Token: 0x040006A8 RID: 1704 RVA: 0x00153800 File Offset: 0x00152A00
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@?$CLazyInitRequestQueue@VCRFRIRequestQueue@@UtagRFRI_REQUEST@@$0CHBA@$00@@8;

	// Token: 0x040006A9 RID: 1705 RVA: 0x001538F8 File Offset: 0x00152AF8
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@CRFRIRequestQueue@@8;

	// Token: 0x040006AA RID: 1706 RVA: 0x00153948 File Offset: 0x00152B48
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@?$CRequestQueue@UtagRFRI_REQUEST@@@@8;

	// Token: 0x040006AB RID: 1707 RVA: 0x00153B88 File Offset: 0x00152D88
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@RfriAsyncRpcCallWrapper_GetFQDNFromLegacyDN@RfriServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x040006AC RID: 1708 RVA: 0x00153AF8 File Offset: 0x00152CF8
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@RfriAsyncRpcCallWrapper_GetNewDSA@RfriServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x040006AD RID: 1709 RVA: 0x001539F0 File Offset: 0x00152BF0
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@RfriAsyncRpcCallWrapper@RfriServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x040006AE RID: 1710 RVA: 0x00153A48 File Offset: 0x00152C48
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@?$BaseAsyncRpcCallWrapper@VRfriAsyncRpcServer@RfriServer@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@8;

	// Token: 0x040006AF RID: 1711 RVA: 0x00153838 File Offset: 0x00152A38
	internal static _s__RTTIClassHierarchyDescriptor ??_R3?$CLazyInitRequestQueue@VCRFRIRequestQueue@@UtagRFRI_REQUEST@@$0CHBA@$00@@8;

	// Token: 0x040006B0 RID: 1712 RVA: 0x0015E890 File Offset: 0x0015D290
	internal static $_TypeDescriptor$_extraBytes_79 ??_R0?AV?$CLazyInitRequestQueue@VCRFRIRequestQueue@@UtagRFRI_REQUEST@@$0CHBA@$00@@@8;

	// Token: 0x040006B1 RID: 1713 RVA: 0x001538B8 File Offset: 0x00152AB8
	internal static _s__RTTIClassHierarchyDescriptor ??_R3CRFRILazyInitRequestQueue@@8;

	// Token: 0x040006B2 RID: 1714 RVA: 0x0015E930 File Offset: 0x0015D330
	internal static $_TypeDescriptor$_extraBytes_32 ??_R0?AVCRFRILazyInitRequestQueue@@@8;

	// Token: 0x040006B3 RID: 1715 RVA: 0x00153930 File Offset: 0x00152B30
	internal static _s__RTTIClassHierarchyDescriptor ??_R3?$CRequestQueue@UtagRFRI_REQUEST@@@@8;

	// Token: 0x040006B4 RID: 1716 RVA: 0x0015E9D8 File Offset: 0x0015D3D8
	internal static $_TypeDescriptor$_extraBytes_41 ??_R0?AV?$CRequestQueue@UtagRFRI_REQUEST@@@@@8;

	// Token: 0x040006B5 RID: 1717 RVA: 0x00153988 File Offset: 0x00152B88
	internal static _s__RTTIClassHierarchyDescriptor ??_R3CRFRIRequestQueue@@8;

	// Token: 0x040006B6 RID: 1718 RVA: 0x0015E9B0 File Offset: 0x0015D3B0
	internal static $_TypeDescriptor$_extraBytes_24 ??_R0?AVCRFRIRequestQueue@@@8;

	// Token: 0x040006B7 RID: 1719 RVA: 0x00153BD8 File Offset: 0x00152DD8
	internal static _s__RTTIClassHierarchyDescriptor ??_R3RfriAsyncRpcCallWrapper_GetFQDNFromLegacyDN@RfriServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x040006B8 RID: 1720 RVA: 0x0015ECB0 File Offset: 0x0015D6B0
	internal static $_TypeDescriptor$_extraBytes_84 ??_R0?AVRfriAsyncRpcCallWrapper_GetFQDNFromLegacyDN@RfriServer@Rpc@Exchange@Microsoft@@@8;

	// Token: 0x040006B9 RID: 1721 RVA: 0x00153B48 File Offset: 0x00152D48
	internal static _s__RTTIClassHierarchyDescriptor ??_R3RfriAsyncRpcCallWrapper_GetNewDSA@RfriServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x040006BA RID: 1722 RVA: 0x0015EC50 File Offset: 0x0015D650
	internal static $_TypeDescriptor$_extraBytes_74 ??_R0?AVRfriAsyncRpcCallWrapper_GetNewDSA@RfriServer@Rpc@Exchange@Microsoft@@@8;

	// Token: 0x040006BB RID: 1723 RVA: 0x00153A30 File Offset: 0x00152C30
	internal static _s__RTTIClassHierarchyDescriptor ??_R3?$BaseAsyncRpcCallWrapper@VRfriAsyncRpcServer@RfriServer@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@8;

	// Token: 0x040006BC RID: 1724 RVA: 0x0015EBD0 File Offset: 0x0015D5D0
	internal static $_TypeDescriptor$_extraBytes_111 ??_R0?AV?$BaseAsyncRpcCallWrapper@VRfriAsyncRpcServer@RfriServer@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@@8;

	// Token: 0x040006BD RID: 1725 RVA: 0x00153A90 File Offset: 0x00152C90
	internal static _s__RTTIClassHierarchyDescriptor ??_R3RfriAsyncRpcCallWrapper@RfriServer@Rpc@Exchange@Microsoft@@8;

	// Token: 0x040006BE RID: 1726 RVA: 0x0015EB80 File Offset: 0x0015D580
	internal static $_TypeDescriptor$_extraBytes_64 ??_R0?AVRfriAsyncRpcCallWrapper@RfriServer@Rpc@Exchange@Microsoft@@@8;

	// Token: 0x040006BF RID: 1727 RVA: 0x00153850 File Offset: 0x00152A50
	internal static _s__RTTICompleteObjectLocator2 ??_R4?$CLazyInitRequestQueue@VCRFRIRequestQueue@@UtagRFRI_REQUEST@@$0CHBA@$00@@6B@;

	// Token: 0x040006C0 RID: 1728 RVA: 0x001538D0 File Offset: 0x00152AD0
	internal static _s__RTTICompleteObjectLocator2 ??_R4CRFRILazyInitRequestQueue@@6B@;

	// Token: 0x040006C1 RID: 1729 RVA: 0x001539C8 File Offset: 0x00152BC8
	internal static _s__RTTICompleteObjectLocator2 ??_R4?$CRequestQueue@UtagRFRI_REQUEST@@@@6B@;

	// Token: 0x040006C2 RID: 1730 RVA: 0x001539A0 File Offset: 0x00152BA0
	internal static _s__RTTICompleteObjectLocator2 ??_R4CRFRIRequestQueue@@6B@;

	// Token: 0x040006C3 RID: 1731
	[FixedAddressValueType]
	internal static $ArrayType$$$BY02Q6AXXZ ??_7RfriAsyncRpcCallWrapper_GetFQDNFromLegacyDN@RfriServer@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x040006C4 RID: 1732 RVA: 0x0006E8F8 File Offset: 0x0006DAF8
	internal static method ??_7RfriAsyncRpcCallWrapper_GetFQDNFromLegacyDN@RfriServer@Rpc@Exchange@Microsoft@@6B@$initializer$;

	// Token: 0x040006C5 RID: 1733 RVA: 0x00153BF0 File Offset: 0x00152DF0
	internal static _s__RTTICompleteObjectLocator2 ??_R4RfriAsyncRpcCallWrapper_GetFQDNFromLegacyDN@RfriServer@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x040006C6 RID: 1734
	[FixedAddressValueType]
	internal static $ArrayType$$$BY02Q6AXXZ ??_7RfriAsyncRpcCallWrapper_GetNewDSA@RfriServer@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x040006C7 RID: 1735 RVA: 0x0006E8F0 File Offset: 0x0006DAF0
	internal static method ??_7RfriAsyncRpcCallWrapper_GetNewDSA@RfriServer@Rpc@Exchange@Microsoft@@6B@$initializer$;

	// Token: 0x040006C8 RID: 1736 RVA: 0x00153B60 File Offset: 0x00152D60
	internal static _s__RTTICompleteObjectLocator2 ??_R4RfriAsyncRpcCallWrapper_GetNewDSA@RfriServer@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x040006C9 RID: 1737
	[FixedAddressValueType]
	internal static $ArrayType$$$BY02Q6AXXZ ??_7?$BaseAsyncRpcCallWrapper@VRfriAsyncRpcServer@RfriServer@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x040006CA RID: 1738 RVA: 0x0006E8E8 File Offset: 0x0006DAE8
	internal static method ??_7?$BaseAsyncRpcCallWrapper@VRfriAsyncRpcServer@RfriServer@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@6B@$initializer$;

	// Token: 0x040006CB RID: 1739 RVA: 0x00153AD0 File Offset: 0x00152CD0
	internal static _s__RTTICompleteObjectLocator2 ??_R4?$BaseAsyncRpcCallWrapper@VRfriAsyncRpcServer@RfriServer@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x040006CC RID: 1740
	[FixedAddressValueType]
	internal static $ArrayType$$$BY02Q6AXXZ ??_7RfriAsyncRpcCallWrapper@RfriServer@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x040006CD RID: 1741 RVA: 0x0006E8E0 File Offset: 0x0006DAE0
	internal static method ??_7RfriAsyncRpcCallWrapper@RfriServer@Rpc@Exchange@Microsoft@@6B@$initializer$;

	// Token: 0x040006CE RID: 1742 RVA: 0x00153AA8 File Offset: 0x00152CA8
	internal static _s__RTTICompleteObjectLocator2 ??_R4RfriAsyncRpcCallWrapper@RfriServer@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x040006CF RID: 1743 RVA: 0x0015E8F8 File Offset: 0x0015D2F8
	internal static $ArrayType$$$BY07Q6AXXZ ??_7?$CLazyInitRequestQueue@VCRFRIRequestQueue@@UtagRFRI_REQUEST@@$0CHBA@$00@@6B@;

	// Token: 0x040006D0 RID: 1744 RVA: 0x0015EAB8 File Offset: 0x0015D4B8
	internal static $ArrayType$$$BY0L@Q6AXXZ ??_7?$CRequestQueue@UtagRFRI_REQUEST@@@@6B@;

	// Token: 0x040006D1 RID: 1745 RVA: 0x0015E968 File Offset: 0x0015D368
	internal static $ArrayType$$$BY07Q6AXXZ ??_7CRFRILazyInitRequestQueue@@6B@;

	// Token: 0x040006D2 RID: 1746 RVA: 0x001627A8 File Offset: 0x001611A8
	internal unsafe static CRFRILazyInitRequestQueue* g_pRFRI_RequestQueue;

	// Token: 0x040006D3 RID: 1747 RVA: 0x0015EA28 File Offset: 0x0015D428
	internal static $ArrayType$$$BY0L@Q6AXXZ ??_7CRFRIRequestQueue@@6B@;

	// Token: 0x040006D4 RID: 1748 RVA: 0x0015EB58 File Offset: 0x0015D558
	public static method __m2mep@??0RfriAsyncRpcCallWrapper@RfriServer@Rpc@Exchange@Microsoft@@$$FIEAM@VIntPtr@System@@@Z;

	// Token: 0x040006D5 RID: 1749 RVA: 0x0015EA88 File Offset: 0x0015D488
	public static method __m2mep@?DispatchCall@RfriAsyncRpcCallWrapper_GetNewDSA@RfriServer@Rpc@Exchange@Microsoft@@$$FMEAMXPE$AAVRfriAsyncRpcServer@2345@PE$AAVSafeRpcAsyncStateHandle@345@@Z;

	// Token: 0x040006D6 RID: 1750 RVA: 0x0015EB18 File Offset: 0x0015D518
	public static method __m2mep@??0RfriAsyncRpcCallWrapper_GetNewDSA@RfriServer@Rpc@Exchange@Microsoft@@$$FQEAA@PEAXKPEAEPEAPEAE2@Z;

	// Token: 0x040006D7 RID: 1751 RVA: 0x0015EA98 File Offset: 0x0015D498
	public static method __m2mep@?DispatchCall@RfriAsyncRpcCallWrapper_GetFQDNFromLegacyDN@RfriServer@Rpc@Exchange@Microsoft@@$$FMEAMXPE$AAVRfriAsyncRpcServer@2345@PE$AAVSafeRpcAsyncStateHandle@345@@Z;

	// Token: 0x040006D8 RID: 1752 RVA: 0x0015EB38 File Offset: 0x0015D538
	public static method __m2mep@??0RfriAsyncRpcCallWrapper_GetFQDNFromLegacyDN@RfriServer@Rpc@Exchange@Microsoft@@$$FQEAA@PEAXKKPEAEPEAPEAE@Z;

	// Token: 0x040006D9 RID: 1753 RVA: 0x0015EB68 File Offset: 0x0015D568
	public static method __m2mep@??0?$BaseAsyncRpcCallWrapper@VRfriAsyncRpcServer@RfriServer@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@$$FIEAM@VIntPtr@System@@@Z;

	// Token: 0x040006DA RID: 1754 RVA: 0x0015EA78 File Offset: 0x0015D478
	public static method __m2mep@?InternalExecute@?$BaseAsyncRpcCallWrapper@VRfriAsyncRpcServer@RfriServer@Rpc@Exchange@Microsoft@@@Rpc@Exchange@Microsoft@@$$FUEAMJPE$AAVSafeRpcAsyncStateHandle@234@@Z;

	// Token: 0x040006DB RID: 1755 RVA: 0x0015EB08 File Offset: 0x0015D508
	public static method __m2mep@??_E?$CRequestQueue@UtagRFRI_REQUEST@@@@$$FUEAAPEAXI@Z;

	// Token: 0x040006DC RID: 1756 RVA: 0x0015E9A0 File Offset: 0x0015D3A0
	public static method __m2mep@??_E?$CLazyInitRequestQueue@VCRFRIRequestQueue@@UtagRFRI_REQUEST@@$0CHBA@$00@@$$FUEAAPEAXI@Z;

	// Token: 0x040006DD RID: 1757 RVA: 0x0015EB28 File Offset: 0x0015D528
	public static method __m2mep@??$Execute@VSafeRfrGetNewDSARpcAsyncStateHandle@RfriServer@Rpc@Exchange@Microsoft@@@ManagedExceptionAsyncCrashWrapper@Rpc@Exchange@Microsoft@@$$FQEAAXPEAU_RPC_ASYNC_STATE@@@Z;

	// Token: 0x040006DE RID: 1758 RVA: 0x0015EB48 File Offset: 0x0015D548
	public static method __m2mep@??$Execute@VSafeRfrGetFQDNFromLegacyDNRpcAsyncStateHandle@RfriServer@Rpc@Exchange@Microsoft@@@ManagedExceptionAsyncCrashWrapper@Rpc@Exchange@Microsoft@@$$FQEAAXPEAU_RPC_ASYNC_STATE@@@Z;

	// Token: 0x040006DF RID: 1759 RVA: 0x0015ED40 File Offset: 0x0015D740
	public static method __m2mep@?MToUGenericRequestInfo@Common@Rpc@Exchange@Microsoft@@$$FYMJPE$AAVRpcGenericRequestInfo@1234@PEAUtagGenericRequestInfo@@@Z;

	// Token: 0x040006E0 RID: 1760 RVA: 0x0015ED50 File Offset: 0x0015D750
	public static method __m2mep@?MToUGenericReplyInfo@Common@Rpc@Exchange@Microsoft@@$$FYMJPE$AAVRpcGenericReplyInfo@1234@PEAUtagGenericReplyInfo@@@Z;

	// Token: 0x040006E1 RID: 1761 RVA: 0x0015ED60 File Offset: 0x0015D760
	public static method __m2mep@?UToMGenericRequestInfo@Common@Rpc@Exchange@Microsoft@@$$FYMPE$AAVRpcGenericRequestInfo@1234@QEBUtagGenericRequestInfo@@@Z;

	// Token: 0x040006E2 RID: 1762 RVA: 0x0015ED70 File Offset: 0x0015D770
	public static method __m2mep@?UToMGenericReplyInfo@Common@Rpc@Exchange@Microsoft@@$$FYMPE$AAVRpcGenericReplyInfo@1234@QEBUtagGenericReplyInfo@@@Z;

	// Token: 0x040006E3 RID: 1763 RVA: 0x0015ED80 File Offset: 0x0015D780
	public static method __m2mep@?MakeManagedBytes@Common@Rpc@Exchange@Microsoft@@$$FYMP$01EAEPEAEH@Z;

	// Token: 0x040006E4 RID: 1764 RVA: 0x0015ED90 File Offset: 0x0015D790
	public static method __m2mep@?GetUnmanagedBytes@Common@Rpc@Exchange@Microsoft@@$$FYMJP$01EAEPEAPEAEPEAH@Z;

	// Token: 0x040006E5 RID: 1765 RVA: 0x0015EDA0 File Offset: 0x0015D7A0
	public static method __m2mep@?StringEqual@Common@Rpc@Exchange@Microsoft@@$$FYM_NPE$AAVString@System@@0@Z;

	// Token: 0x040006E6 RID: 1766 RVA: 0x0015EDB0 File Offset: 0x0015D7B0
	public static method __m2mep@?FromUnmanagedBool@Common@Rpc@Exchange@Microsoft@@$$FYA_NH@Z;

	// Token: 0x040006E7 RID: 1767 RVA: 0x0015EDC0 File Offset: 0x0015D7C0
	public static method __m2mep@?ToUnmanagedBool@Common@Rpc@Exchange@Microsoft@@$$FYAH_N@Z;

	// Token: 0x040006E8 RID: 1768 RVA: 0x0015EDD0 File Offset: 0x0015D7D0
	public static method __m2mep@?IsValidDateTime@Common@Rpc@Exchange@Microsoft@@$$FYM_NVDateTime@System@@@Z;

	// Token: 0x040006E9 RID: 1769 RVA: 0x0006F460 File Offset: 0x0006E660
	internal static $ArrayType$$$BY0CL@$$CBG ??_C@_1FG@GAFGNOGK@?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAB?$AAa?$AAs?$AAe?$AA?5?$AAC?$AAr?$AAy?$AAp?$AAt?$AAo?$AAg?$AAr?$AAa?$AAp?$AAh?$AAi?$AAc?$AA?5?$AAP?$AAr?$AAo@;

	// Token: 0x040006EA RID: 1770 RVA: 0x0006F4B8 File Offset: 0x0006E6B8
	internal static $ArrayType$$$BY02$$CBG ??_C@_15ELPOAHMG@?$AAM?$AAY?$AA?$AA@;

	// Token: 0x040006EB RID: 1771 RVA: 0x00162C90 File Offset: 0x00161690
	internal static int g_lSecurityCallbacksOutstanding;

	// Token: 0x040006EC RID: 1772 RVA: 0x00162E30 File Offset: 0x00161830
	internal static method securityCallback;

	// Token: 0x040006ED RID: 1773 RVA: 0x0015EE50 File Offset: 0x0015D850
	public static method __m2mep@?GetRpcException@@$$FYMPE$AAVException@System@@HPE$AAVString@2@@Z;

	// Token: 0x040006EE RID: 1774 RVA: 0x0015EE60 File Offset: 0x0015D860
	public static method __m2mep@?ThrowRpcException@@$$FYMXHPE$AAVString@System@@@Z;

	// Token: 0x040006EF RID: 1775 RVA: 0x0015EDE0 File Offset: 0x0015D7E0
	public static method __m2mep@?GetRpcClientFlags@Rpc@Exchange@Microsoft@@$$FYM?AW4RpcClientFlags@123@_N0000@Z;

	// Token: 0x040006F0 RID: 1776 RVA: 0x0015EDF0 File Offset: 0x0015D7F0
	public static method __m2mep@?IsLocalSystem@Rpc@Exchange@Microsoft@@$$FYAHXZ;

	// Token: 0x040006F1 RID: 1777 RVA: 0x0015EE00 File Offset: 0x0015D800
	public static method __m2mep@?CollectRpcEEInfo@Rpc@Exchange@Microsoft@@$$FYMPE$AAVString@System@@XZ;

	// Token: 0x040006F2 RID: 1778 RVA: 0x0015EE70 File Offset: 0x0015D870
	public static method __m2mep@?GetRpcExceptionWithEEInfo@Rpc@Exchange@Microsoft@@$$FYMPE$AAVException@System@@HPE$AAVString@5@@Z;

	// Token: 0x040006F3 RID: 1779 RVA: 0x0015EE80 File Offset: 0x0015D880
	public static method __m2mep@?ThrowRpcExceptionWithEEInfo@Rpc@Exchange@Microsoft@@$$FYMXHPE$AAVString@System@@@Z;

	// Token: 0x040006F4 RID: 1780 RVA: 0x0015EE10 File Offset: 0x0015D810
	public static method __m2mep@?FIsProtSeq@Rpc@Exchange@Microsoft@@$$FYAHPEAXPEAG@Z;

	// Token: 0x040006F5 RID: 1781 RVA: 0x0015EE20 File Offset: 0x0015D820
	public static method __m2mep@?FIsTCP@Rpc@Exchange@Microsoft@@$$FYAHPEAX@Z;

	// Token: 0x040006F6 RID: 1782 RVA: 0x0015EE30 File Offset: 0x0015D830
	public static method __m2mep@?FIsHTTP@Rpc@Exchange@Microsoft@@$$FYAHPEAX@Z;

	// Token: 0x040006F7 RID: 1783 RVA: 0x0015EE40 File Offset: 0x0015D840
	public static method __m2mep@?FIsLRPC@Rpc@Exchange@Microsoft@@$$FYAHPEAX@Z;

	// Token: 0x040006F8 RID: 1784 RVA: 0x0015EEA0 File Offset: 0x0015D8A0
	public static method __m2mep@?GuidFromGUID@?A0x2ca62c65@Rpc@Exchange@Microsoft@@$$FYM?AVGuid@System@@AEBU_GUID@@@Z;

	// Token: 0x040006F9 RID: 1785 RVA: 0x0015EE90 File Offset: 0x0015D890
	public static method __m2mep@?GUIDFromGuid@?A0x2ca62c65@Rpc@Exchange@Microsoft@@$$FYM?AU_GUID@@PE$AAVGuid@System@@@Z;

	// Token: 0x040006FA RID: 1786 RVA: 0x0006F4C0 File Offset: 0x0006E6C0
	unsafe static int** __unep@?_CommonRpcSecurityCallback@@$$FYAJPEAX0@Z;

	// Token: 0x040006FB RID: 1787 RVA: 0x0006F450 File Offset: 0x0006E650
	unsafe static int** __unep@?OnRpcCompleteCallback@@$$FYAXPEAU_TP_CALLBACK_INSTANCE@@PEAXPEAU_TP_WAIT@@K@Z;

	// Token: 0x040006FC RID: 1788 RVA: 0x0006F4F0 File Offset: 0x0006E6F0
	internal static $ArrayType$$$BY0BP@$$CBG ??_C@_1DO@NNPEOMGO@?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAr?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAN?$AAa?$AAt?$AAi?$AAv?$AAe?$AA?5?$AAQ?$AAu?$AAe?$AAu?$AAe?$AA?5?$AAS?$AAi?$AAz?$AAe?$AA?$AA@;

	// Token: 0x040006FD RID: 1789 RVA: 0x0006F590 File Offset: 0x0006E790
	internal static $ArrayType$$$BY0CF@$$CBG ??_C@_1EK@MDPBMHGJ@?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAr?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAN?$AAa?$AAt?$AAi?$AAv?$AAe?$AA?5?$AAD?$AAi?$AAs?$AAp?$AAa?$AAt?$AAc?$AAh?$AA?5?$AAT?$AAh?$AAr@;

	// Token: 0x040006FE RID: 1790 RVA: 0x0006F530 File Offset: 0x0006E730
	internal static $ArrayType$$$BY0CK@$$CBG ??_C@_1FE@KAFGKKGD@?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAr?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAN?$AAa?$AAt?$AAi?$AAv?$AAe?$AA?5?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AAs?$AA?5?$AAP?$AAe?$AAr?$AA?5@;

	// Token: 0x040006FF RID: 1791 RVA: 0x00153CB8 File Offset: 0x00152EB8
	internal static $_s__RTTIBaseClassArray$_extraBytes_16 ??_R2CRegistrationLazyInitRequestQueue@@8;

	// Token: 0x04000700 RID: 1792 RVA: 0x00153C40 File Offset: 0x00152E40
	internal static $_s__RTTIBaseClassArray$_extraBytes_8 ??_R2?$CLazyInitRequestQueue@VCRegistrationRequestQueue@@UtagREGISTRATION_REQUEST@@$0CHBA@$00@@8;

	// Token: 0x04000701 RID: 1793 RVA: 0x00153D88 File Offset: 0x00152F88
	internal static $_s__RTTIBaseClassArray$_extraBytes_16 ??_R2CRegistrationRequestQueue@@8;

	// Token: 0x04000702 RID: 1794 RVA: 0x00153D38 File Offset: 0x00152F38
	internal static $_s__RTTIBaseClassArray$_extraBytes_8 ??_R2?$CRequestQueue@UtagREGISTRATION_REQUEST@@@@8;

	// Token: 0x04000703 RID: 1795 RVA: 0x00153FC0 File Offset: 0x001531C0
	internal static $_s__RTTIBaseClassArray$_extraBytes_24 ??_R2RpcHttpConnectionRegistrationRpcAsyncCallWrapper_EcClear@RpcHttpConnectionRegistration@Rpc@Exchange@Microsoft@@8;

	// Token: 0x04000704 RID: 1796 RVA: 0x00153F38 File Offset: 0x00153138
	internal static $_s__RTTIBaseClassArray$_extraBytes_24 ??_R2RpcHttpConnectionRegistrationRpcAsyncCallWrapper_EcUnregister@RpcHttpConnectionRegistration@Rpc@Exchange@Microsoft@@8;

	// Token: 0x04000705 RID: 1797 RVA: 0x00153EB0 File Offset: 0x001530B0
	internal static $_s__RTTIBaseClassArray$_extraBytes_24 ??_R2RpcHttpConnectionRegistrationRpcAsyncCallWrapper_EcRegister@RpcHttpConnectionRegistration@Rpc@Exchange@Microsoft@@8;

	// Token: 0x04000706 RID: 1798 RVA: 0x00153E30 File Offset: 0x00153030
	internal static $_s__RTTIBaseClassArray$_extraBytes_16 ??_R2RpcHttpConnectionRegistrationRpcAsyncCallWrapper@RpcHttpConnectionRegistration@Rpc@Exchange@Microsoft@@8;

	// Token: 0x04000707 RID: 1799 RVA: 0x00153C90 File Offset: 0x00152E90
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@CRegistrationLazyInitRequestQueue@@8;

	// Token: 0x04000708 RID: 1800 RVA: 0x00153C18 File Offset: 0x00152E18
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@?$CLazyInitRequestQueue@VCRegistrationRequestQueue@@UtagREGISTRATION_REQUEST@@$0CHBA@$00@@8;

	// Token: 0x04000709 RID: 1801 RVA: 0x00153D10 File Offset: 0x00152F10
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@CRegistrationRequestQueue@@8;

	// Token: 0x0400070A RID: 1802 RVA: 0x00153D60 File Offset: 0x00152F60
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@?$CRequestQueue@UtagREGISTRATION_REQUEST@@@@8;

	// Token: 0x0400070B RID: 1803 RVA: 0x00153F98 File Offset: 0x00153198
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@RpcHttpConnectionRegistrationRpcAsyncCallWrapper_EcClear@RpcHttpConnectionRegistration@Rpc@Exchange@Microsoft@@8;

	// Token: 0x0400070C RID: 1804 RVA: 0x00153F10 File Offset: 0x00153110
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@RpcHttpConnectionRegistrationRpcAsyncCallWrapper_EcUnregister@RpcHttpConnectionRegistration@Rpc@Exchange@Microsoft@@8;

	// Token: 0x0400070D RID: 1805 RVA: 0x00153E88 File Offset: 0x00153088
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@RpcHttpConnectionRegistrationRpcAsyncCallWrapper_EcRegister@RpcHttpConnectionRegistration@Rpc@Exchange@Microsoft@@8;

	// Token: 0x0400070E RID: 1806 RVA: 0x00153E08 File Offset: 0x00153008
	internal static _s__RTTIBaseClassDescriptor2 ??_R1A@?0A@EA@RpcHttpConnectionRegistrationRpcAsyncCallWrapper@RpcHttpConnectionRegistration@Rpc@Exchange@Microsoft@@8;

	// Token: 0x0400070F RID: 1807 RVA: 0x00153C50 File Offset: 0x00152E50
	internal static _s__RTTIClassHierarchyDescriptor ??_R3?$CLazyInitRequestQueue@VCRegistrationRequestQueue@@UtagREGISTRATION_REQUEST@@$0CHBA@$00@@8;

	// Token: 0x04000710 RID: 1808 RVA: 0x0015EEB0 File Offset: 0x0015D8B0
	internal static $_TypeDescriptor$_extraBytes_95 ??_R0?AV?$CLazyInitRequestQueue@VCRegistrationRequestQueue@@UtagREGISTRATION_REQUEST@@$0CHBA@$00@@@8;

	// Token: 0x04000711 RID: 1809 RVA: 0x00153CD0 File Offset: 0x00152ED0
	internal static _s__RTTIClassHierarchyDescriptor ??_R3CRegistrationLazyInitRequestQueue@@8;

	// Token: 0x04000712 RID: 1810 RVA: 0x0015EF60 File Offset: 0x0015D960
	internal static $_TypeDescriptor$_extraBytes_40 ??_R0?AVCRegistrationLazyInitRequestQueue@@@8;

	// Token: 0x04000713 RID: 1811 RVA: 0x00153D48 File Offset: 0x00152F48
	internal static _s__RTTIClassHierarchyDescriptor ??_R3?$CRequestQueue@UtagREGISTRATION_REQUEST@@@@8;

	// Token: 0x04000714 RID: 1812 RVA: 0x0015F030 File Offset: 0x0015DA30
	internal static $_TypeDescriptor$_extraBytes_49 ??_R0?AV?$CRequestQueue@UtagREGISTRATION_REQUEST@@@@@8;

	// Token: 0x04000715 RID: 1813 RVA: 0x00153DA0 File Offset: 0x00152FA0
	internal static _s__RTTIClassHierarchyDescriptor ??_R3CRegistrationRequestQueue@@8;

	// Token: 0x04000716 RID: 1814 RVA: 0x0015F000 File Offset: 0x0015DA00
	internal static $_TypeDescriptor$_extraBytes_32 ??_R0?AVCRegistrationRequestQueue@@@8;

	// Token: 0x04000717 RID: 1815 RVA: 0x00153FE0 File Offset: 0x001531E0
	internal static _s__RTTIClassHierarchyDescriptor ??_R3RpcHttpConnectionRegistrationRpcAsyncCallWrapper_EcClear@RpcHttpConnectionRegistration@Rpc@Exchange@Microsoft@@8;

	// Token: 0x04000718 RID: 1816 RVA: 0x0015F390 File Offset: 0x0015DD90
	internal static $_TypeDescriptor$_extraBytes_116 ??_R0?AVRpcHttpConnectionRegistrationRpcAsyncCallWrapper_EcClear@RpcHttpConnectionRegistration@Rpc@Exchange@Microsoft@@@8;

	// Token: 0x04000719 RID: 1817 RVA: 0x00153F58 File Offset: 0x00153158
	internal static _s__RTTIClassHierarchyDescriptor ??_R3RpcHttpConnectionRegistrationRpcAsyncCallWrapper_EcUnregister@RpcHttpConnectionRegistration@Rpc@Exchange@Microsoft@@8;

	// Token: 0x0400071A RID: 1818 RVA: 0x0015F300 File Offset: 0x0015DD00
	internal static $_TypeDescriptor$_extraBytes_121 ??_R0?AVRpcHttpConnectionRegistrationRpcAsyncCallWrapper_EcUnregister@RpcHttpConnectionRegistration@Rpc@Exchange@Microsoft@@@8;

	// Token: 0x0400071B RID: 1819 RVA: 0x00153ED0 File Offset: 0x001530D0
	internal static _s__RTTIClassHierarchyDescriptor ??_R3RpcHttpConnectionRegistrationRpcAsyncCallWrapper_EcRegister@RpcHttpConnectionRegistration@Rpc@Exchange@Microsoft@@8;

	// Token: 0x0400071C RID: 1820 RVA: 0x0015F270 File Offset: 0x0015DC70
	internal static $_TypeDescriptor$_extraBytes_119 ??_R0?AVRpcHttpConnectionRegistrationRpcAsyncCallWrapper_EcRegister@RpcHttpConnectionRegistration@Rpc@Exchange@Microsoft@@@8;

	// Token: 0x0400071D RID: 1821 RVA: 0x00153E48 File Offset: 0x00153048
	internal static _s__RTTIClassHierarchyDescriptor ??_R3RpcHttpConnectionRegistrationRpcAsyncCallWrapper@RpcHttpConnectionRegistration@Rpc@Exchange@Microsoft@@8;

	// Token: 0x0400071E RID: 1822 RVA: 0x0015F1F0 File Offset: 0x0015DBF0
	internal static $_TypeDescriptor$_extraBytes_108 ??_R0?AVRpcHttpConnectionRegistrationRpcAsyncCallWrapper@RpcHttpConnectionRegistration@Rpc@Exchange@Microsoft@@@8;

	// Token: 0x0400071F RID: 1823 RVA: 0x00153C68 File Offset: 0x00152E68
	internal static _s__RTTICompleteObjectLocator2 ??_R4?$CLazyInitRequestQueue@VCRegistrationRequestQueue@@UtagREGISTRATION_REQUEST@@$0CHBA@$00@@6B@;

	// Token: 0x04000720 RID: 1824 RVA: 0x00153CE8 File Offset: 0x00152EE8
	internal static _s__RTTICompleteObjectLocator2 ??_R4CRegistrationLazyInitRequestQueue@@6B@;

	// Token: 0x04000721 RID: 1825 RVA: 0x00153DE0 File Offset: 0x00152FE0
	internal static _s__RTTICompleteObjectLocator2 ??_R4?$CRequestQueue@UtagREGISTRATION_REQUEST@@@@6B@;

	// Token: 0x04000722 RID: 1826 RVA: 0x00153DB8 File Offset: 0x00152FB8
	internal static _s__RTTICompleteObjectLocator2 ??_R4CRegistrationRequestQueue@@6B@;

	// Token: 0x04000723 RID: 1827
	[FixedAddressValueType]
	internal static $ArrayType$$$BY02Q6AXXZ ??_7RpcHttpConnectionRegistrationRpcAsyncCallWrapper_EcClear@RpcHttpConnectionRegistration@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x04000724 RID: 1828 RVA: 0x0006E918 File Offset: 0x0006DB18
	internal static method ??_7RpcHttpConnectionRegistrationRpcAsyncCallWrapper_EcClear@RpcHttpConnectionRegistration@Rpc@Exchange@Microsoft@@6B@$initializer$;

	// Token: 0x04000725 RID: 1829 RVA: 0x00153FF8 File Offset: 0x001531F8
	internal static _s__RTTICompleteObjectLocator2 ??_R4RpcHttpConnectionRegistrationRpcAsyncCallWrapper_EcClear@RpcHttpConnectionRegistration@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x04000726 RID: 1830
	[FixedAddressValueType]
	internal static $ArrayType$$$BY02Q6AXXZ ??_7RpcHttpConnectionRegistrationRpcAsyncCallWrapper_EcUnregister@RpcHttpConnectionRegistration@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x04000727 RID: 1831 RVA: 0x0006E910 File Offset: 0x0006DB10
	internal static method ??_7RpcHttpConnectionRegistrationRpcAsyncCallWrapper_EcUnregister@RpcHttpConnectionRegistration@Rpc@Exchange@Microsoft@@6B@$initializer$;

	// Token: 0x04000728 RID: 1832 RVA: 0x00153F70 File Offset: 0x00153170
	internal static _s__RTTICompleteObjectLocator2 ??_R4RpcHttpConnectionRegistrationRpcAsyncCallWrapper_EcUnregister@RpcHttpConnectionRegistration@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x04000729 RID: 1833
	[FixedAddressValueType]
	internal static $ArrayType$$$BY02Q6AXXZ ??_7RpcHttpConnectionRegistrationRpcAsyncCallWrapper_EcRegister@RpcHttpConnectionRegistration@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x0400072A RID: 1834 RVA: 0x0006E908 File Offset: 0x0006DB08
	internal static method ??_7RpcHttpConnectionRegistrationRpcAsyncCallWrapper_EcRegister@RpcHttpConnectionRegistration@Rpc@Exchange@Microsoft@@6B@$initializer$;

	// Token: 0x0400072B RID: 1835 RVA: 0x00153EE8 File Offset: 0x001530E8
	internal static _s__RTTICompleteObjectLocator2 ??_R4RpcHttpConnectionRegistrationRpcAsyncCallWrapper_EcRegister@RpcHttpConnectionRegistration@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x0400072C RID: 1836
	[FixedAddressValueType]
	internal static $ArrayType$$$BY02Q6AXXZ ??_7RpcHttpConnectionRegistrationRpcAsyncCallWrapper@RpcHttpConnectionRegistration@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x0400072D RID: 1837 RVA: 0x0006E900 File Offset: 0x0006DB00
	internal static method ??_7RpcHttpConnectionRegistrationRpcAsyncCallWrapper@RpcHttpConnectionRegistration@Rpc@Exchange@Microsoft@@6B@$initializer$;

	// Token: 0x0400072E RID: 1838 RVA: 0x00153E60 File Offset: 0x00153060
	internal static _s__RTTICompleteObjectLocator2 ??_R4RpcHttpConnectionRegistrationRpcAsyncCallWrapper@RpcHttpConnectionRegistration@Rpc@Exchange@Microsoft@@6B@;

	// Token: 0x0400072F RID: 1839 RVA: 0x0015EF28 File Offset: 0x0015D928
	internal static $ArrayType$$$BY07Q6AXXZ ??_7?$CLazyInitRequestQueue@VCRegistrationRequestQueue@@UtagREGISTRATION_REQUEST@@$0CHBA@$00@@6B@;

	// Token: 0x04000730 RID: 1840 RVA: 0x0015F118 File Offset: 0x0015DB18
	internal static $ArrayType$$$BY0L@Q6AXXZ ??_7?$CRequestQueue@UtagREGISTRATION_REQUEST@@@@6B@;

	// Token: 0x04000731 RID: 1841 RVA: 0x0015EFA8 File Offset: 0x0015D9A8
	internal static $ArrayType$$$BY07Q6AXXZ ??_7CRegistrationLazyInitRequestQueue@@6B@;

	// Token: 0x04000732 RID: 1842 RVA: 0x00163290 File Offset: 0x00161C90
	internal unsafe static CRegistrationLazyInitRequestQueue* g_pRegistration_RequestQueue;

	// Token: 0x04000733 RID: 1843 RVA: 0x0015F088 File Offset: 0x0015DA88
	internal static $ArrayType$$$BY0L@Q6AXXZ ??_7CRegistrationRequestQueue@@6B@;

	// Token: 0x04000734 RID: 1844 RVA: 0x0015F1D8 File Offset: 0x0015DBD8
	public static method __m2mep@??0RpcHttpConnectionRegistrationRpcAsyncCallWrapper@RpcHttpConnectionRegistration@Rpc@Exchange@Microsoft@@$$FIEAM@VIntPtr@System@@@Z;

	// Token: 0x04000735 RID: 1845 RVA: 0x0015EFE0 File Offset: 0x0015D9E0
	public static method __m2mep@?InternalExecute@RpcHttpConnectionRegistrationRpcAsyncCallWrapper@RpcHttpConnectionRegistration@Rpc@Exchange@Microsoft@@$$FUEAMJPE$AAVSafeRpcAsyncStateHandle@345@@Z;

	// Token: 0x04000736 RID: 1846 RVA: 0x0015F0D8 File Offset: 0x0015DAD8
	public static method __m2mep@?EcDispatchCall@RpcHttpConnectionRegistrationRpcAsyncCallWrapper_EcRegister@RpcHttpConnectionRegistration@Rpc@Exchange@Microsoft@@$$FEEAMJPE$AAVRpcHttpConnectionRegistrationAsyncRpcServer@2345@PE$AAVSafeRpcAsyncStateHandle@345@@Z;

	// Token: 0x04000737 RID: 1847 RVA: 0x0015F178 File Offset: 0x0015DB78
	public static method __m2mep@??0RpcHttpConnectionRegistrationRpcAsyncCallWrapper_EcRegister@RpcHttpConnectionRegistration@Rpc@Exchange@Microsoft@@$$FQEAA@PEAXPEAU_GUID@@PEAE2221PEAPEAE3@Z;

	// Token: 0x04000738 RID: 1848 RVA: 0x0015F0E8 File Offset: 0x0015DAE8
	public static method __m2mep@?EcDispatchCall@RpcHttpConnectionRegistrationRpcAsyncCallWrapper_EcUnregister@RpcHttpConnectionRegistration@Rpc@Exchange@Microsoft@@$$FEEAMJPE$AAVRpcHttpConnectionRegistrationAsyncRpcServer@2345@PE$AAVSafeRpcAsyncStateHandle@345@@Z;

	// Token: 0x04000739 RID: 1849 RVA: 0x0015F198 File Offset: 0x0015DB98
	public static method __m2mep@??0RpcHttpConnectionRegistrationRpcAsyncCallWrapper_EcUnregister@RpcHttpConnectionRegistration@Rpc@Exchange@Microsoft@@$$FQEAA@PEAXPEAU_GUID@@1@Z;

	// Token: 0x0400073A RID: 1850 RVA: 0x0015F0F8 File Offset: 0x0015DAF8
	public static method __m2mep@?EcDispatchCall@RpcHttpConnectionRegistrationRpcAsyncCallWrapper_EcClear@RpcHttpConnectionRegistration@Rpc@Exchange@Microsoft@@$$FEEAMJPE$AAVRpcHttpConnectionRegistrationAsyncRpcServer@2345@PE$AAVSafeRpcAsyncStateHandle@345@@Z;

	// Token: 0x0400073B RID: 1851 RVA: 0x0015F1B8 File Offset: 0x0015DBB8
	public static method __m2mep@??0RpcHttpConnectionRegistrationRpcAsyncCallWrapper_EcClear@RpcHttpConnectionRegistration@Rpc@Exchange@Microsoft@@$$FQEAA@PEAX@Z;

	// Token: 0x0400073C RID: 1852 RVA: 0x0015F168 File Offset: 0x0015DB68
	public static method __m2mep@??_E?$CRequestQueue@UtagREGISTRATION_REQUEST@@@@$$FUEAAPEAXI@Z;

	// Token: 0x0400073D RID: 1853 RVA: 0x0015EFF0 File Offset: 0x0015D9F0
	public static method __m2mep@??_E?$CLazyInitRequestQueue@VCRegistrationRequestQueue@@UtagREGISTRATION_REQUEST@@$0CHBA@$00@@$$FUEAAPEAXI@Z;

	// Token: 0x0400073E RID: 1854 RVA: 0x0015F188 File Offset: 0x0015DB88
	public static method __m2mep@??$Execute@VSafeRpcHttpConnectionRegistrationRegisterRpcAsyncStateHandle@RpcHttpConnectionRegistration@Rpc@Exchange@Microsoft@@@ManagedExceptionAsyncCrashWrapper@Rpc@Exchange@Microsoft@@$$FQEAAXPEAU_RPC_ASYNC_STATE@@@Z;

	// Token: 0x0400073F RID: 1855 RVA: 0x0015F1A8 File Offset: 0x0015DBA8
	public static method __m2mep@??$Execute@VSafeRpcHttpConnectionRegistrationUnregisterRpcAsyncStateHandle@RpcHttpConnectionRegistration@Rpc@Exchange@Microsoft@@@ManagedExceptionAsyncCrashWrapper@Rpc@Exchange@Microsoft@@$$FQEAAXPEAU_RPC_ASYNC_STATE@@@Z;

	// Token: 0x04000740 RID: 1856 RVA: 0x0015F1C8 File Offset: 0x0015DBC8
	public static method __m2mep@??$Execute@VSafeRpcHttpConnectionRegistrationClearRpcAsyncStateHandle@RpcHttpConnectionRegistration@Rpc@Exchange@Microsoft@@@ManagedExceptionAsyncCrashWrapper@Rpc@Exchange@Microsoft@@$$FQEAAXPEAU_RPC_ASYNC_STATE@@@Z;

	// Token: 0x04000741 RID: 1857 RVA: 0x0015F440 File Offset: 0x0015DE40
	public static method __m2mep@?RecordDocumentProcessing@@$$J0YAXPEAXU_GUID@@11_J@Z;

	// Token: 0x04000742 RID: 1858 RVA: 0x0015F450 File Offset: 0x0015DE50
	public static method __m2mep@?RecordDocumentFailure@@$$J0YAXPEAXU_GUID@@1_JPEAG@Z;

	// Token: 0x04000743 RID: 1859 RVA: 0x0015F460 File Offset: 0x0015DE60
	public static method __m2mep@?UpdateIndexSystems@@$$J0YAXPEAX@Z;

	// Token: 0x04000744 RID: 1860 RVA: 0x0015F470 File Offset: 0x0015DE70
	public static method __m2mep@?ResumeIndexing@@$$J0YAXPEAXU_GUID@@@Z;

	// Token: 0x04000745 RID: 1861 RVA: 0x0015F480 File Offset: 0x0015DE80
	public static method __m2mep@?RebuildIndexSystem@@$$J0YAXPEAXU_GUID@@@Z;

	// Token: 0x04000746 RID: 1862 RVA: 0x0015F490 File Offset: 0x0015DE90
	public static method __m2mep@?Get@@$$J0YAJPEAXU_GUID@@PEAGPEAHPEAPEAE@Z;

	// Token: 0x04000747 RID: 1863 RVA: 0x0015F4A0 File Offset: 0x0015DEA0
	public static method __m2mep@?Insert@@$$J0YAJPEAXU_GUID@@PEAGHPEAE_JPEAHPEAPEAE@Z;

	// Token: 0x04000748 RID: 1864 RVA: 0x0015F4B0 File Offset: 0x0015DEB0
	public static method __m2mep@?Delete@@$$J0YAJPEAXU_GUID@@PEAGPEAHPEAPEAE@Z;

	// Token: 0x04000749 RID: 1865 RVA: 0x0015F4C0 File Offset: 0x0015DEC0
	public static method __m2mep@?TestUserCache@@$$J0YAXPEAXHHPEAEPEAHPEAPEAE@Z;

	// Token: 0x0400074A RID: 1866 RVA: 0x0015F4D0 File Offset: 0x0015DED0
	public static method __m2mep@?SubscriptionComplete@@$$J0YAXPEAXHHPEAEPEAHPEAPEAE@Z;

	// Token: 0x0400074B RID: 1867 RVA: 0x0015F4E0 File Offset: 0x0015DEE0
	public static method __m2mep@?InvokeSubscriptionNotificationEndPoint@@$$J0YAXPEAXHHPEAEPEAHPEAPEAE@Z;

	// Token: 0x0400074C RID: 1868 RVA: 0x0015F4F0 File Offset: 0x0015DEF0
	public static method __m2mep@?SubscriptionSubmit@@$$J0YAXPEAXHHPEAEPEAHPEAPEAE@Z;

	// Token: 0x0400074D RID: 1869 RVA: 0x0015F500 File Offset: 0x0015DF00
	public static method __m2mep@?ObtainSubmissionTokens@@$$J0YAHPEAXU_GUID@@HHH@Z;

	// Token: 0x0400074E RID: 1870 RVA: 0x0015F510 File Offset: 0x0015DF10
	public static method __m2mep@?ObtainTokens@@$$J0YAXPEAXHPEAEPEAHPEAPEAE@Z;

	// Token: 0x0400074F RID: 1871 RVA: 0x0015F520 File Offset: 0x0015DF20
	public static method __m2mep@?IsHR@@$$FYA_NJ@Z;

	// Token: 0x04000750 RID: 1872 RVA: 0x0015F530 File Offset: 0x0015DF30
	public static method __m2mep@?HrFromSc@@$$FYAJJ@Z;

	// Token: 0x04000751 RID: 1873 RVA: 0x0015F540 File Offset: 0x0015DF40
	public static method __m2mep@??0MobileSpeechRecoAsyncState@UM@Rpc@Exchange@Microsoft@@$$FQEAA@XZ;

	// Token: 0x04000752 RID: 1874 RVA: 0x0015F550 File Offset: 0x0015DF50
	public static method __m2mep@??1MobileSpeechRecoAsyncState@UM@Rpc@Exchange@Microsoft@@$$FQEAA@XZ;

	// Token: 0x04000753 RID: 1875 RVA: 0x0015F560 File Offset: 0x0015DF60
	public static method __m2mep@??_GMobileSpeechRecoAsyncState@UM@Rpc@Exchange@Microsoft@@$$FQEAAPEAXI@Z;

	// Token: 0x04000754 RID: 1876 RVA: 0x0006F6A8 File Offset: 0x0006E8A8
	unsafe static int** __unep@?cli_ExecutePoPRequest@@$$J0YAJPEAXHPEAEPEAHPEAPEAE@Z;

	// Token: 0x04000755 RID: 1877 RVA: 0x0006F6B0 File Offset: 0x0006E8B0
	unsafe static int** __unep@?cli_ProcessPartnerMessage@@$$J0YAJPEAXHPEAEPEAHPEAPEAE@Z;

	// Token: 0x04000756 RID: 1878 RVA: 0x0006F6B8 File Offset: 0x0006E8B8
	unsafe static int** __unep@?cli_ExecutePromptPreviewRequest@@$$J0YAJPEAXHPEAEPEAHPEAPEAE@Z;

	// Token: 0x04000757 RID: 1879 RVA: 0x0015F570 File Offset: 0x0015DF70
	public static method __m2mep@?GetUmActiveCalls@@$$J0YAXPEAXHPEAGH1PEAHPEAPEAE@Z;

	// Token: 0x04000758 RID: 1880 RVA: 0x0015F580 File Offset: 0x0015DF80
	public static method __m2mep@?SendMwiMessage_v2_0@@$$J0YAJPEAXU_GUID@@1PEAG2HHH1@Z;

	// Token: 0x04000759 RID: 1881 RVA: 0x0015F590 File Offset: 0x0015DF90
	public static method __m2mep@?Ping@@$$J0YAJPEAXU_GUID@@PEAH@Z;

	// Token: 0x0400075A RID: 1882 RVA: 0x0015F5F0 File Offset: 0x0015DFF0
	public static method __m2mep@?UMVersionedRpcServerBase_ExecuteRequest@?A0x6323ae5e@@$$FYMJVIntPtr@System@@HPEAEPEAHPEAPEAE@Z;

	// Token: 0x0400075B RID: 1883 RVA: 0x0015F5A0 File Offset: 0x0015DFA0
	public static method __m2mep@?ExecutePoPRequest@@$$J0YAJPEAXHPEAEPEAHPEAPEAE@Z;

	// Token: 0x0400075C RID: 1884 RVA: 0x0015F5B0 File Offset: 0x0015DFB0
	public static method __m2mep@?ProcessPartnerMessage@@$$J0YAJPEAXHPEAEPEAHPEAPEAE@Z;

	// Token: 0x0400075D RID: 1885 RVA: 0x0015F5C0 File Offset: 0x0015DFC0
	public static method __m2mep@?ExecuteRequest@@$$J0YAJPEAXHPEAEPEAHPEAPEAE@Z;

	// Token: 0x0400075E RID: 1886 RVA: 0x0015F5D0 File Offset: 0x0015DFD0
	public static method __m2mep@?ExecutePromptPreviewRequest@@$$J0YAJPEAXHPEAEPEAHPEAPEAE@Z;

	// Token: 0x0400075F RID: 1887 RVA: 0x0015F5E0 File Offset: 0x0015DFE0
	public static method __m2mep@?ExecuteStepAsync@@$$J0YAXPEAU_RPC_ASYNC_STATE@@PEAXHPEAEPEAHPEAPEAE@Z;

	// Token: 0x04000760 RID: 1888 RVA: 0x0015F600 File Offset: 0x0015E000
	public static method __m2mep@?Notify@@$$J0YAJPEAXHHHPEAEPEAHPEAPEAE@Z;

	// Token: 0x04000761 RID: 1889 RVA: 0x0015F610 File Offset: 0x0015E010
	public static method __m2mep@?SendHostRequest@@$$J0YAJPEAXHHHPEAEPEAHPEAPEAE@Z;

	// Token: 0x04000762 RID: 1890 RVA: 0x000810C0 File Offset: 0x000802C0
	internal static __s_GUID _GUID_90f1a06e_7712_4762_86b5_7a5eba6bdb02;

	// Token: 0x04000763 RID: 1891 RVA: 0x000810F0 File Offset: 0x000802F0
	internal static __s_GUID _GUID_cb2f6722_ab3a_11d2_9c40_00c04fa30a3e;

	// Token: 0x04000764 RID: 1892 RVA: 0x0006E570 File Offset: 0x0006D770
	internal static $ArrayType$$$BY00Q6MPEBXXZ __xc_mp_z;

	// Token: 0x04000765 RID: 1893 RVA: 0x0006E578 File Offset: 0x0006D778
	internal static $ArrayType$$$BY00Q6MPEBXXZ __xi_vt_a;

	// Token: 0x04000766 RID: 1894
	[FixedAddressValueType]
	internal static Progress.State ?InitializedVtables@CurrentDomain@<CrtImplementationDetails>@@$$Q2W4State@Progress@2@A;

	// Token: 0x04000767 RID: 1895 RVA: 0x0006E540 File Offset: 0x0006D740
	internal static method ?InitializedVtables$initializer$@CurrentDomain@<CrtImplementationDetails>@@$$Q2P6MXXZEA;

	// Token: 0x04000768 RID: 1896
	[FixedAddressValueType]
	internal static bool ?IsDefaultDomain@CurrentDomain@<CrtImplementationDetails>@@$$Q2_NA;

	// Token: 0x04000769 RID: 1897 RVA: 0x0006E538 File Offset: 0x0006D738
	internal static method ?IsDefaultDomain$initializer$@CurrentDomain@<CrtImplementationDetails>@@$$Q2P6MXXZEA;

	// Token: 0x0400076A RID: 1898 RVA: 0x0006E520 File Offset: 0x0006D720
	internal static $ArrayType$$$BY00Q6MPEBXXZ __xc_ma_a;

	// Token: 0x0400076B RID: 1899
	[FixedAddressValueType]
	internal static Progress.State ?InitializedPerAppDomain@CurrentDomain@<CrtImplementationDetails>@@$$Q2W4State@Progress@2@A;

	// Token: 0x0400076C RID: 1900 RVA: 0x0006E558 File Offset: 0x0006D758
	internal static method ?InitializedPerAppDomain$initializer$@CurrentDomain@<CrtImplementationDetails>@@$$Q2P6MXXZEA;

	// Token: 0x0400076D RID: 1901 RVA: 0x0006E560 File Offset: 0x0006D760
	internal static $ArrayType$$$BY00Q6MPEBXXZ __xc_ma_z;

	// Token: 0x0400076E RID: 1902
	[FixedAddressValueType]
	internal static Progress.State ?InitializedNative@CurrentDomain@<CrtImplementationDetails>@@$$Q2W4State@Progress@2@A;

	// Token: 0x0400076F RID: 1903 RVA: 0x0006E548 File Offset: 0x0006D748
	internal static method ?InitializedNative$initializer$@CurrentDomain@<CrtImplementationDetails>@@$$Q2P6MXXZEA;

	// Token: 0x04000770 RID: 1904 RVA: 0x0006E920 File Offset: 0x0006DB20
	internal static $ArrayType$$$BY00Q6MPEBXXZ __xi_vt_z;

	// Token: 0x04000771 RID: 1905 RVA: 0x000810E0 File Offset: 0x000802E0
	internal static __s_GUID _GUID_cb2f6723_ab3a_11d2_9c40_00c04fa30a3e;

	// Token: 0x04000772 RID: 1906
	[FixedAddressValueType]
	internal static int ?Uninitialized@CurrentDomain@<CrtImplementationDetails>@@$$Q2HA;

	// Token: 0x04000773 RID: 1907 RVA: 0x0006E530 File Offset: 0x0006D730
	internal static method ?Uninitialized$initializer$@CurrentDomain@<CrtImplementationDetails>@@$$Q2P6MXXZEA;

	// Token: 0x04000774 RID: 1908
	[FixedAddressValueType]
	internal static int ?Initialized@CurrentDomain@<CrtImplementationDetails>@@$$Q2HA;

	// Token: 0x04000775 RID: 1909 RVA: 0x0006E528 File Offset: 0x0006D728
	internal static method ?Initialized$initializer$@CurrentDomain@<CrtImplementationDetails>@@$$Q2P6MXXZEA;

	// Token: 0x04000776 RID: 1910 RVA: 0x00163C9F File Offset: 0x0016269F
	internal static bool ?InitializedPerProcess@DefaultDomain@<CrtImplementationDetails>@@2_NA;

	// Token: 0x04000777 RID: 1911
	[FixedAddressValueType]
	internal static Progress.State ?InitializedPerProcess@CurrentDomain@<CrtImplementationDetails>@@$$Q2W4State@Progress@2@A;

	// Token: 0x04000778 RID: 1912 RVA: 0x00163C9C File Offset: 0x0016269C
	internal static bool ?Entered@DefaultDomain@<CrtImplementationDetails>@@2_NA;

	// Token: 0x04000779 RID: 1913 RVA: 0x00163C9D File Offset: 0x0016269D
	internal static bool ?InitializedNative@DefaultDomain@<CrtImplementationDetails>@@2_NA;

	// Token: 0x0400077A RID: 1914 RVA: 0x00163C98 File Offset: 0x00162698
	internal static int ?Count@AllDomains@<CrtImplementationDetails>@@2HA;

	// Token: 0x0400077B RID: 1915 RVA: 0x0008109C File Offset: 0x0008029C
	internal static uint ?ProcessAttach@NativeDll@<CrtImplementationDetails>@@0IB;

	// Token: 0x0400077C RID: 1916 RVA: 0x000810A0 File Offset: 0x000802A0
	internal static uint ?ThreadAttach@NativeDll@<CrtImplementationDetails>@@0IB;

	// Token: 0x0400077D RID: 1917 RVA: 0x0015F838 File Offset: 0x0015E238
	internal static TriBool.State ?hasNative@DefaultDomain@<CrtImplementationDetails>@@0W4State@TriBool@2@A;

	// Token: 0x0400077E RID: 1918 RVA: 0x00081098 File Offset: 0x00080298
	internal static uint ?ProcessDetach@NativeDll@<CrtImplementationDetails>@@0IB;

	// Token: 0x0400077F RID: 1919 RVA: 0x000810A4 File Offset: 0x000802A4
	internal static uint ?ThreadDetach@NativeDll@<CrtImplementationDetails>@@0IB;

	// Token: 0x04000780 RID: 1920 RVA: 0x000810A8 File Offset: 0x000802A8
	internal static uint ?ProcessVerifier@NativeDll@<CrtImplementationDetails>@@0IB;

	// Token: 0x04000781 RID: 1921 RVA: 0x0015F834 File Offset: 0x0015E234
	internal static TriBool.State ?hasPerProcess@DefaultDomain@<CrtImplementationDetails>@@0W4State@TriBool@2@A;

	// Token: 0x04000782 RID: 1922 RVA: 0x00163C9E File Offset: 0x0016269E
	internal static bool ?InitializedNativeFromCCTOR@DefaultDomain@<CrtImplementationDetails>@@2_NA;

	// Token: 0x04000783 RID: 1923 RVA: 0x0006E568 File Offset: 0x0006D768
	internal static $ArrayType$$$BY00Q6MPEBXXZ __xc_mp_a;

	// Token: 0x04000784 RID: 1924 RVA: 0x000810D0 File Offset: 0x000802D0
	internal static __s_GUID _GUID_90f1a06c_7712_4762_86b5_7a5eba6bdb02;

	// Token: 0x04000785 RID: 1925 RVA: 0x0006E550 File Offset: 0x0006D750
	internal static method ?InitializedPerProcess$initializer$@CurrentDomain@<CrtImplementationDetails>@@$$Q2P6MXXZEA;

	// Token: 0x04000786 RID: 1926 RVA: 0x0015F850 File Offset: 0x0015E250
	public static method __m2mep@?IsInDllMain@NativeDll@<CrtImplementationDetails>@@$$FSA_NXZ;

	// Token: 0x04000787 RID: 1927 RVA: 0x0015F860 File Offset: 0x0015E260
	public static method __m2mep@?IsInProcessAttach@NativeDll@<CrtImplementationDetails>@@$$FSA_NXZ;

	// Token: 0x04000788 RID: 1928 RVA: 0x0015F870 File Offset: 0x0015E270
	public static method __m2mep@?IsInProcessDetach@NativeDll@<CrtImplementationDetails>@@$$FSA_NXZ;

	// Token: 0x04000789 RID: 1929 RVA: 0x0015F880 File Offset: 0x0015E280
	public static method __m2mep@?IsSafeForManagedCode@NativeDll@<CrtImplementationDetails>@@$$FSA_NXZ;

	// Token: 0x0400078A RID: 1930 RVA: 0x0015F9F0 File Offset: 0x0015E3F0
	public static method __m2mep@?ThrowNestedModuleLoadException@<CrtImplementationDetails>@@$$FYMXPE$AAVException@System@@0@Z;

	// Token: 0x0400078B RID: 1931 RVA: 0x0015F890 File Offset: 0x0015E290
	public static method __m2mep@?ThrowModuleLoadException@<CrtImplementationDetails>@@$$FYMXPE$AAVString@System@@@Z;

	// Token: 0x0400078C RID: 1932 RVA: 0x0015F8A0 File Offset: 0x0015E2A0
	public static method __m2mep@?ThrowModuleLoadException@<CrtImplementationDetails>@@$$FYMXPE$AAVString@System@@PE$AAVException@3@@Z;

	// Token: 0x0400078D RID: 1933 RVA: 0x0015F8B0 File Offset: 0x0015E2B0
	public static method __m2mep@?RegisterModuleUninitializer@<CrtImplementationDetails>@@$$FYMXPE$AAVEventHandler@System@@@Z;

	// Token: 0x0400078E RID: 1934 RVA: 0x0015F8C0 File Offset: 0x0015E2C0
	public static method __m2mep@?FromGUID@<CrtImplementationDetails>@@$$FYM?AVGuid@System@@AEBU_GUID@@@Z;

	// Token: 0x0400078F RID: 1935 RVA: 0x0015F8D0 File Offset: 0x0015E2D0
	public static method __m2mep@?__get_default_appdomain@@$$FYAJPEAPEAUIUnknown@@@Z;

	// Token: 0x04000790 RID: 1936 RVA: 0x0015F8E0 File Offset: 0x0015E2E0
	public static method __m2mep@?__release_appdomain@@$$FYAXPEAUIUnknown@@@Z;

	// Token: 0x04000791 RID: 1937 RVA: 0x0015F8F0 File Offset: 0x0015E2F0
	public static method __m2mep@?GetDefaultDomain@<CrtImplementationDetails>@@$$FYMPE$AAVAppDomain@System@@XZ;

	// Token: 0x04000792 RID: 1938 RVA: 0x0015F900 File Offset: 0x0015E300
	public static method __m2mep@?DoCallBackInDefaultDomain@<CrtImplementationDetails>@@$$FYAXP6AJPEAX@Z0@Z;

	// Token: 0x04000793 RID: 1939 RVA: 0x0015F910 File Offset: 0x0015E310
	public static method __m2mep@?DoNothing@DefaultDomain@<CrtImplementationDetails>@@$$FCAJPEAX@Z;

	// Token: 0x04000794 RID: 1940 RVA: 0x0015F920 File Offset: 0x0015E320
	public static method __m2mep@?HasPerProcess@DefaultDomain@<CrtImplementationDetails>@@$$FSA_NXZ;

	// Token: 0x04000795 RID: 1941 RVA: 0x0015F930 File Offset: 0x0015E330
	public static method __m2mep@?HasNative@DefaultDomain@<CrtImplementationDetails>@@$$FSA_NXZ;

	// Token: 0x04000796 RID: 1942 RVA: 0x0015F940 File Offset: 0x0015E340
	public static method __m2mep@?NeedsInitialization@DefaultDomain@<CrtImplementationDetails>@@$$FSA_NXZ;

	// Token: 0x04000797 RID: 1943 RVA: 0x0015F950 File Offset: 0x0015E350
	public static method __m2mep@?NeedsUninitialization@DefaultDomain@<CrtImplementationDetails>@@$$FSA_NXZ;

	// Token: 0x04000798 RID: 1944 RVA: 0x0015F960 File Offset: 0x0015E360
	public static method __m2mep@?Initialize@DefaultDomain@<CrtImplementationDetails>@@$$FSAXXZ;

	// Token: 0x04000799 RID: 1945 RVA: 0x0015FA00 File Offset: 0x0015E400
	public static method __m2mep@?InitializeVtables@LanguageSupport@<CrtImplementationDetails>@@$$FAEAAXXZ;

	// Token: 0x0400079A RID: 1946 RVA: 0x0015FA10 File Offset: 0x0015E410
	public static method __m2mep@?InitializeDefaultAppDomain@LanguageSupport@<CrtImplementationDetails>@@$$FAEAAXXZ;

	// Token: 0x0400079B RID: 1947 RVA: 0x0015FA20 File Offset: 0x0015E420
	public static method __m2mep@?InitializeNative@LanguageSupport@<CrtImplementationDetails>@@$$FAEAAXXZ;

	// Token: 0x0400079C RID: 1948 RVA: 0x0015FA30 File Offset: 0x0015E430
	public static method __m2mep@?InitializePerProcess@LanguageSupport@<CrtImplementationDetails>@@$$FAEAAXXZ;

	// Token: 0x0400079D RID: 1949 RVA: 0x0015FA40 File Offset: 0x0015E440
	public static method __m2mep@?InitializePerAppDomain@LanguageSupport@<CrtImplementationDetails>@@$$FAEAAXXZ;

	// Token: 0x0400079E RID: 1950 RVA: 0x0015FA50 File Offset: 0x0015E450
	public static method __m2mep@?InitializeUninitializer@LanguageSupport@<CrtImplementationDetails>@@$$FAEAAXXZ;

	// Token: 0x0400079F RID: 1951 RVA: 0x0015FA60 File Offset: 0x0015E460
	public static method __m2mep@?_Initialize@LanguageSupport@<CrtImplementationDetails>@@$$FAEAAXXZ;

	// Token: 0x040007A0 RID: 1952 RVA: 0x0015F970 File Offset: 0x0015E370
	public static method __m2mep@?UninitializeAppDomain@LanguageSupport@<CrtImplementationDetails>@@$$FCAXXZ;

	// Token: 0x040007A1 RID: 1953 RVA: 0x0015F980 File Offset: 0x0015E380
	public static method __m2mep@?_UninitializeDefaultDomain@LanguageSupport@<CrtImplementationDetails>@@$$FCAJPEAX@Z;

	// Token: 0x040007A2 RID: 1954 RVA: 0x0015F990 File Offset: 0x0015E390
	public static method __m2mep@?UninitializeDefaultDomain@LanguageSupport@<CrtImplementationDetails>@@$$FCAXXZ;

	// Token: 0x040007A3 RID: 1955 RVA: 0x0015F9A0 File Offset: 0x0015E3A0
	public static method __m2mep@?DomainUnload@LanguageSupport@<CrtImplementationDetails>@@$$FCMXPE$AAVObject@System@@PE$AAVEventArgs@4@@Z;

	// Token: 0x040007A4 RID: 1956 RVA: 0x0015FA70 File Offset: 0x0015E470
	public static method __m2mep@?Cleanup@LanguageSupport@<CrtImplementationDetails>@@$$FAEAMXPE$AAVException@System@@@Z;

	// Token: 0x040007A5 RID: 1957 RVA: 0x0015FA80 File Offset: 0x0015E480
	public static method __m2mep@??0LanguageSupport@<CrtImplementationDetails>@@$$FQEAA@XZ;

	// Token: 0x040007A6 RID: 1958 RVA: 0x0015FA90 File Offset: 0x0015E490
	public static method __m2mep@??1LanguageSupport@<CrtImplementationDetails>@@$$FQEAA@XZ;

	// Token: 0x040007A7 RID: 1959 RVA: 0x0015FAA0 File Offset: 0x0015E4A0
	public static method __m2mep@?Initialize@LanguageSupport@<CrtImplementationDetails>@@$$FQEAAXXZ;

	// Token: 0x040007A8 RID: 1960 RVA: 0x0015F840 File Offset: 0x0015E240
	public static method cctor@@$$FYMXXZ;

	// Token: 0x040007A9 RID: 1961 RVA: 0x0015F9B0 File Offset: 0x0015E3B0
	public static method __m2mep@??0?$gcroot@PE$AAVString@System@@@@$$FQEAA@XZ;

	// Token: 0x040007AA RID: 1962 RVA: 0x0015F9C0 File Offset: 0x0015E3C0
	public static method __m2mep@??1?$gcroot@PE$AAVString@System@@@@$$FQEAA@XZ;

	// Token: 0x040007AB RID: 1963 RVA: 0x0015F9D0 File Offset: 0x0015E3D0
	public static method __m2mep@??4?$gcroot@PE$AAVString@System@@@@$$FQEAMAEAU0@PE$AAVString@System@@@Z;

	// Token: 0x040007AC RID: 1964 RVA: 0x0015F9E0 File Offset: 0x0015E3E0
	public static method __m2mep@??B?$gcroot@PE$AAVString@System@@@@$$FQEBMPE$AAVString@System@@XZ;

	// Token: 0x040007AD RID: 1965 RVA: 0x00081100 File Offset: 0x00080300
	public unsafe static int** __unep@?DoNothing@DefaultDomain@<CrtImplementationDetails>@@$$FCAJPEAX@Z;

	// Token: 0x040007AE RID: 1966 RVA: 0x00081108 File Offset: 0x00080308
	public unsafe static int** __unep@?_UninitializeDefaultDomain@LanguageSupport@<CrtImplementationDetails>@@$$FCAJPEAX@Z;

	// Token: 0x040007AF RID: 1967 RVA: 0x0015FAE8 File Offset: 0x0015E4E8
	public static method __m2mep@?___CxxCallUnwindDtor@@$$J0YMXP6MXPEAX@Z0@Z;

	// Token: 0x040007B0 RID: 1968 RVA: 0x0015FAF8 File Offset: 0x0015E4F8
	public static method __m2mep@?___CxxCallUnwindDelDtor@@$$J0YMXP6MXPEAX@Z0@Z;

	// Token: 0x040007B1 RID: 1969 RVA: 0x0015FB08 File Offset: 0x0015E508
	public static method __m2mep@?___CxxCallUnwindVecDtor@@$$J0YMXP6MXPEAX_KHP6MX0@Z@Z01H2@Z;

	// Token: 0x040007B2 RID: 1970 RVA: 0x0015FB28 File Offset: 0x0015E528
	public static method __m2mep@??_M@$$FYMXPEAX_KHP6MX0@Z@Z;

	// Token: 0x040007B3 RID: 1971 RVA: 0x0015FB38 File Offset: 0x0015E538
	public static method __m2mep@?ArrayUnwindFilter@?A0xf60d8fd6@@$$FYAHPEAU_EXCEPTION_POINTERS@@@Z;

	// Token: 0x040007B4 RID: 1972 RVA: 0x0015FB18 File Offset: 0x0015E518
	public static method __m2mep@?__ArrayUnwind@@$$FYMXPEAX_KHP6MX0@Z@Z;

	// Token: 0x040007B5 RID: 1973
	[FixedAddressValueType]
	internal static ulong __exit_list_size_app_domain;

	// Token: 0x040007B6 RID: 1974
	[FixedAddressValueType]
	internal unsafe static method* __onexitbegin_app_domain;

	// Token: 0x040007B7 RID: 1975 RVA: 0x00163DE8 File Offset: 0x001627E8
	internal static ulong __exit_list_size;

	// Token: 0x040007B8 RID: 1976
	[FixedAddressValueType]
	internal unsafe static method* __onexitend_app_domain;

	// Token: 0x040007B9 RID: 1977 RVA: 0x00163DD8 File Offset: 0x001627D8
	internal unsafe static method* __onexitbegin_m;

	// Token: 0x040007BA RID: 1978 RVA: 0x00163DE0 File Offset: 0x001627E0
	internal unsafe static method* __onexitend_m;

	// Token: 0x040007BB RID: 1979
	[FixedAddressValueType]
	internal static int ?_ref_count@AtExitLock@<CrtImplementationDetails>@@$$Q0HA;

	// Token: 0x040007BC RID: 1980
	[FixedAddressValueType]
	internal unsafe static void* ?_lock@AtExitLock@<CrtImplementationDetails>@@$$Q0PEAXEA;

	// Token: 0x040007BD RID: 1981 RVA: 0x0015FBD8 File Offset: 0x0015E5D8
	public static method __m2mep@?_handle@AtExitLock@<CrtImplementationDetails>@@$$FCMPE$AAVGCHandle@InteropServices@Runtime@System@@XZ;

	// Token: 0x040007BE RID: 1982 RVA: 0x0015FC88 File Offset: 0x0015E688
	public static method __m2mep@?_lock_Construct@AtExitLock@<CrtImplementationDetails>@@$$FCMXPE$AAVObject@System@@@Z;

	// Token: 0x040007BF RID: 1983 RVA: 0x0015FBE8 File Offset: 0x0015E5E8
	public static method __m2mep@?_lock_Set@AtExitLock@<CrtImplementationDetails>@@$$FCMXPE$AAVObject@System@@@Z;

	// Token: 0x040007C0 RID: 1984 RVA: 0x0015FBF8 File Offset: 0x0015E5F8
	public static method __m2mep@?_lock_Get@AtExitLock@<CrtImplementationDetails>@@$$FCMPE$AAVObject@System@@XZ;

	// Token: 0x040007C1 RID: 1985 RVA: 0x0015FC08 File Offset: 0x0015E608
	public static method __m2mep@?_lock_Destruct@AtExitLock@<CrtImplementationDetails>@@$$FCAXXZ;

	// Token: 0x040007C2 RID: 1986 RVA: 0x0015FC18 File Offset: 0x0015E618
	public static method __m2mep@?IsInitialized@AtExitLock@<CrtImplementationDetails>@@$$FSA_NXZ;

	// Token: 0x040007C3 RID: 1987 RVA: 0x0015FC98 File Offset: 0x0015E698
	public static method __m2mep@?AddRef@AtExitLock@<CrtImplementationDetails>@@$$FSAXXZ;

	// Token: 0x040007C4 RID: 1988 RVA: 0x0015FC28 File Offset: 0x0015E628
	public static method __m2mep@?RemoveRef@AtExitLock@<CrtImplementationDetails>@@$$FSAXXZ;

	// Token: 0x040007C5 RID: 1989 RVA: 0x0015FC38 File Offset: 0x0015E638
	public static method __m2mep@?Enter@AtExitLock@<CrtImplementationDetails>@@$$FSAXXZ;

	// Token: 0x040007C6 RID: 1990 RVA: 0x0015FC48 File Offset: 0x0015E648
	public static method __m2mep@?Exit@AtExitLock@<CrtImplementationDetails>@@$$FSAXXZ;

	// Token: 0x040007C7 RID: 1991 RVA: 0x0015FC58 File Offset: 0x0015E658
	public static method __m2mep@?__global_lock@?A0xf28fb846@@$$FYA_NXZ;

	// Token: 0x040007C8 RID: 1992 RVA: 0x0015FC68 File Offset: 0x0015E668
	public static method __m2mep@?__global_unlock@?A0xf28fb846@@$$FYA_NXZ;

	// Token: 0x040007C9 RID: 1993 RVA: 0x0015FCA8 File Offset: 0x0015E6A8
	public static method __m2mep@?__alloc_global_lock@?A0xf28fb846@@$$FYA_NXZ;

	// Token: 0x040007CA RID: 1994 RVA: 0x0015FC78 File Offset: 0x0015E678
	public static method __m2mep@?__dealloc_global_lock@?A0xf28fb846@@$$FYAXXZ;

	// Token: 0x040007CB RID: 1995 RVA: 0x0015FB48 File Offset: 0x0015E548
	public static method __m2mep@?_atexit_helper@@$$J0YMHP6MXXZPEA_KPEAPEAP6MXXZ2@Z;

	// Token: 0x040007CC RID: 1996 RVA: 0x0015FB58 File Offset: 0x0015E558
	public static method __m2mep@?_exit_callback@@$$J0YMXXZ;

	// Token: 0x040007CD RID: 1997 RVA: 0x0015FB98 File Offset: 0x0015E598
	public static method __m2mep@?_initatexit_m@@$$J0YMHXZ;

	// Token: 0x040007CE RID: 1998 RVA: 0x0015FBA8 File Offset: 0x0015E5A8
	public static method __m2mep@?_onexit_m@@$$J0YMP6MHXZP6MHXZ@Z;

	// Token: 0x040007CF RID: 1999 RVA: 0x0015FB68 File Offset: 0x0015E568
	public static method __m2mep@?_atexit_m@@$$J0YMHP6MXXZ@Z;

	// Token: 0x040007D0 RID: 2000 RVA: 0x0015FBB8 File Offset: 0x0015E5B8
	public static method __m2mep@?_initatexit_app_domain@@$$J0YMHXZ;

	// Token: 0x040007D1 RID: 2001 RVA: 0x0015FB78 File Offset: 0x0015E578
	public static method __m2mep@?_app_exit_callback@@$$J0YMXXZ;

	// Token: 0x040007D2 RID: 2002 RVA: 0x0015FBC8 File Offset: 0x0015E5C8
	public static method __m2mep@?_onexit_m_appdomain@@$$J0YMP6MHXZP6MHXZ@Z;

	// Token: 0x040007D3 RID: 2003 RVA: 0x0015FB88 File Offset: 0x0015E588
	public static method __m2mep@?_atexit_m_appdomain@@$$J0YMHP6MXXZ@Z;

	// Token: 0x040007D4 RID: 2004 RVA: 0x0015FCB8 File Offset: 0x0015E6B8
	public static method __m2mep@?_initterm_e@@$$FYMHPEAP6AHXZ0@Z;

	// Token: 0x040007D5 RID: 2005 RVA: 0x0015FCC8 File Offset: 0x0015E6C8
	public static method __m2mep@?_initterm@@$$FYMXPEAP6AXXZ0@Z;

	// Token: 0x040007D6 RID: 2006 RVA: 0x0015FCE8 File Offset: 0x0015E6E8
	public static method __m2mep@?Handle@ThisModule@<CrtImplementationDetails>@@$$FCM?AVModuleHandle@System@@XZ;

	// Token: 0x040007D7 RID: 2007 RVA: 0x0015FCD8 File Offset: 0x0015E6D8
	public static method __m2mep@?_initterm_m@@$$FYMXPEBQ6MPEBXXZ0@Z;

	// Token: 0x040007D8 RID: 2008 RVA: 0x0015FCF8 File Offset: 0x0015E6F8
	public static method __m2mep@??$ResolveMethod@$$A6MPEBXXZ@ThisModule@<CrtImplementationDetails>@@$$FSMP6MPEBXXZP6MPEBXXZ@Z;

	// Token: 0x040007D9 RID: 2009 RVA: 0x0015F620 File Offset: 0x0015E020
	internal unsafe static void* IActiveManagerRpc_v3_0_s_ifspec;

	// Token: 0x040007DA RID: 2010 RVA: 0x0015F628 File Offset: 0x0015E028
	internal unsafe static void* IActiveMonitoringRpc_v1_0_s_ifspec;

	// Token: 0x040007DB RID: 2011 RVA: 0x00081090 File Offset: 0x00080290
	internal static $ArrayType$$$BY01Q6AXXZ ??_7type_info@@6B@;

	// Token: 0x040007DC RID: 2012 RVA: 0x0015F640 File Offset: 0x0015E040
	internal unsafe static void* mdbadmin50_v5_0_s_ifspec;

	// Token: 0x040007DD RID: 2013 RVA: 0x0015F638 File Offset: 0x0015E038
	internal unsafe static void* mdbadmin40_v4_0_s_ifspec;

	// Token: 0x040007DE RID: 2014 RVA: 0x0015F630 File Offset: 0x0015E030
	internal unsafe static void* mdbadmin20_v2_0_s_ifspec;

	// Token: 0x040007DF RID: 2015 RVA: 0x0015F648 File Offset: 0x0015E048
	internal unsafe static void* AssistantsRpc_v1_0_s_ifspec;

	// Token: 0x040007E0 RID: 2016 RVA: 0x0015F650 File Offset: 0x0015E050
	internal unsafe static void* IReplayRpc_v3_0_s_ifspec;

	// Token: 0x040007E1 RID: 2017 RVA: 0x0015F658 File Offset: 0x0015E058
	internal unsafe static void* ISyncNow_v1_0_s_ifspec;

	// Token: 0x040007E2 RID: 2018 RVA: 0x0015F668 File Offset: 0x0015E068
	internal unsafe static void* asyncemsmdbAsync_v0_1_s_ifspec;

	// Token: 0x040007E3 RID: 2019 RVA: 0x0015F660 File Offset: 0x0015E060
	internal unsafe static void* emsmdbAsync_v0_81_s_ifspec;

	// Token: 0x040007E4 RID: 2020 RVA: 0x0015F670 File Offset: 0x0015E070
	internal unsafe static void* IExchangeCertificate_v1_0_s_ifspec;

	// Token: 0x040007E5 RID: 2021 RVA: 0x0015F678 File Offset: 0x0015E078
	internal unsafe static void* IExchangeCertificate2_v1_0_s_ifspec;

	// Token: 0x040007E6 RID: 2022 RVA: 0x0015F698 File Offset: 0x0015E098
	internal unsafe static void* asyncemsmdbMT_v0_1_s_ifspec;

	// Token: 0x040007E7 RID: 2023 RVA: 0x0015F690 File Offset: 0x0015E090
	internal unsafe static void* emsmdbMT_v0_81_s_ifspec;

	// Token: 0x040007E8 RID: 2024 RVA: 0x0015F6B0 File Offset: 0x0015E0B0
	internal unsafe static void* IAdminIPFilters_v1_0_s_ifspec;

	// Token: 0x040007E9 RID: 2025 RVA: 0x0015F6B8 File Offset: 0x0015E0B8
	internal unsafe static void* IJobQueue_v1_0_s_ifspec;

	// Token: 0x040007EA RID: 2026 RVA: 0x0015F6C0 File Offset: 0x0015E0C0
	internal unsafe static void* ILogSearch_v1_0_s_ifspec;

	// Token: 0x040007EB RID: 2027 RVA: 0x0015F6C8 File Offset: 0x0015E0C8
	internal unsafe static void* IMailboxSearch_v1_0_s_ifspec;

	// Token: 0x040007EC RID: 2028 RVA: 0x0015F6D0 File Offset: 0x0015E0D0
	internal unsafe static void* IBridgeheadSubmission_v1_0_s_ifspec;

	// Token: 0x040007ED RID: 2029 RVA: 0x0015F6D8 File Offset: 0x0015E0D8
	internal unsafe static void* MigrationNotificationService_v1_0_s_ifspec;

	// Token: 0x040007EE RID: 2030 RVA: 0x0015F6E0 File Offset: 0x0015E0E0
	internal unsafe static void* MigrationProxyRpc_v1_0_s_ifspec;

	// Token: 0x040007EF RID: 2031 RVA: 0x0015F6E8 File Offset: 0x0015E0E8
	internal unsafe static void* MigrationService_v1_0_s_ifspec;

	// Token: 0x040007F0 RID: 2032 RVA: 0x0015F700 File Offset: 0x0015E100
	internal unsafe static void* rfri_v1_0_s_ifspec;

	// Token: 0x040007F1 RID: 2033 RVA: 0x0015F6F8 File Offset: 0x0015E0F8
	internal unsafe static void* nspi_v56_0_s_ifspec;

	// Token: 0x040007F2 RID: 2034 RVA: 0x0015F6F0 File Offset: 0x0015E0F0
	internal unsafe static void* RpcHttpConnectionRegistrationAsync_v1_0_s_ifspec;

	// Token: 0x040007F3 RID: 2035 RVA: 0x0015F708 File Offset: 0x0015E108
	internal unsafe static void* INotificationsBrokerRpc_v1_0_s_ifspec;

	// Token: 0x040007F4 RID: 2036 RVA: 0x0015F710 File Offset: 0x0015E110
	internal unsafe static void* IOfflineRms_v1_0_s_ifspec;

	// Token: 0x040007F5 RID: 2037 RVA: 0x0015F6A0 File Offset: 0x0015E0A0
	internal unsafe static void* emsmdbpool_v0_1_s_ifspec;

	// Token: 0x040007F6 RID: 2038 RVA: 0x0015F6A8 File Offset: 0x0015E0A8
	internal unsafe static void* emsmdbpoolNotify_v0_1_s_ifspec;

	// Token: 0x040007F7 RID: 2039 RVA: 0x0015F718 File Offset: 0x0015E118
	internal unsafe static void* IProcessAccess_v1_0_s_ifspec;

	// Token: 0x040007F8 RID: 2040 RVA: 0x0015F720 File Offset: 0x0015E120
	internal unsafe static void* IQueueViewer_v1_0_s_ifspec;

	// Token: 0x040007F9 RID: 2041 RVA: 0x0015F728 File Offset: 0x0015E128
	internal unsafe static void* ISearchServiceRpc_v4_0_s_ifspec;

	// Token: 0x040007FA RID: 2042 RVA: 0x0015F730 File Offset: 0x0015E130
	internal unsafe static void* ISharedCache_v1_0_s_ifspec;

	// Token: 0x040007FB RID: 2043 RVA: 0x0015F738 File Offset: 0x0015E138
	internal unsafe static void* ISubscriptionCacheServer_v1_0_s_ifspec;

	// Token: 0x040007FC RID: 2044 RVA: 0x0015F740 File Offset: 0x0015E140
	internal unsafe static void* ISubscriptionCompletion_v1_0_s_ifspec;

	// Token: 0x040007FD RID: 2045 RVA: 0x0015F748 File Offset: 0x0015E148
	internal unsafe static void* ISubscriptionNotification_v1_0_s_ifspec;

	// Token: 0x040007FE RID: 2046 RVA: 0x0015F750 File Offset: 0x0015E150
	internal unsafe static void* ISubscriptionSubmission_v1_0_s_ifspec;

	// Token: 0x040007FF RID: 2047 RVA: 0x0015F758 File Offset: 0x0015E158
	internal unsafe static void* IThrottling_v1_0_s_ifspec;

	// Token: 0x04000800 RID: 2048 RVA: 0x0015F768 File Offset: 0x0015E168
	internal unsafe static void* cli_TriggerPrivateRPC_v6_0_c_ifspec;

	// Token: 0x04000801 RID: 2049 RVA: 0x0015F760 File Offset: 0x0015E160
	internal unsafe static void* cli_TriggerPublicRPC_v16_1_c_ifspec;

	// Token: 0x04000802 RID: 2050 RVA: 0x0015F7B0 File Offset: 0x0015E1B0
	internal unsafe static void* IMobileSpeechReco_v1_0_s_ifspec;

	// Token: 0x04000803 RID: 2051 RVA: 0x0015F7D8 File Offset: 0x0015E1D8
	internal unsafe static void* IUMServerHealth_v1_0_s_ifspec;

	// Token: 0x04000804 RID: 2052 RVA: 0x0015F7E8 File Offset: 0x0015E1E8
	internal unsafe static void* IUMPromptPreview_v1_0_s_ifspec;

	// Token: 0x04000805 RID: 2053 RVA: 0x0015F7C0 File Offset: 0x0015E1C0
	internal unsafe static void* IUMRecipientTasks_v1_0_s_ifspec;

	// Token: 0x04000806 RID: 2054 RVA: 0x0015F7D0 File Offset: 0x0015E1D0
	internal unsafe static void* IUMPartnerMessage_v1_0_s_ifspec;

	// Token: 0x04000807 RID: 2055 RVA: 0x0015F7E0 File Offset: 0x0015E1E0
	internal unsafe static void* IUMPlayOnPhone_v1_0_s_ifspec;

	// Token: 0x04000808 RID: 2056 RVA: 0x0015F7C8 File Offset: 0x0015E1C8
	internal unsafe static void* IUMMwiDelivery_v2_0_s_ifspec;

	// Token: 0x04000809 RID: 2057 RVA: 0x0015F7B8 File Offset: 0x0015E1B8
	internal unsafe static void* IUM_v2_0_s_ifspec;

	// Token: 0x0400080A RID: 2058 RVA: 0x0015F7F0 File Offset: 0x0015E1F0
	internal unsafe static void* IUnifiedPolicyNotification_v1_0_s_ifspec;

	// Token: 0x0400080B RID: 2059 RVA: 0x0015F7F8 File Offset: 0x0015E1F8
	internal unsafe static void* IExDarHost_v1_0_s_ifspec;

	// Token: 0x0400080C RID: 2060 RVA: 0x0006E4F8 File Offset: 0x0006D6F8
	internal static $ArrayType$$$BY0A@P6AXXZ __xc_z;

	// Token: 0x0400080D RID: 2061 RVA: 0x0006E4F0 File Offset: 0x0006D6F0
	internal static $ArrayType$$$BY0A@P6AXXZ __xc_a;

	// Token: 0x0400080E RID: 2062 RVA: 0x0006E500 File Offset: 0x0006D700
	internal static $ArrayType$$$BY0A@P6AHXZ __xi_a;

	// Token: 0x0400080F RID: 2063 RVA: 0x00164588 File Offset: 0x00162F88
	internal static volatile __enative_startup_state __native_startup_state;

	// Token: 0x04000810 RID: 2064 RVA: 0x0006E518 File Offset: 0x0006D718
	internal static $ArrayType$$$BY0A@P6AHXZ __xi_z;

	// Token: 0x04000811 RID: 2065 RVA: 0x00164580 File Offset: 0x00162F80
	internal unsafe static volatile void* __native_startup_lock;

	// Token: 0x04000812 RID: 2066 RVA: 0x0015F830 File Offset: 0x0015E230
	internal static volatile uint __native_dllmain_reason;
}
